{"version":3,"file":"parse-8ISYfcYA.cjs","sources":["../../src/path/parser/parse.ts"],"sourcesContent":["import type {PathElement} from '../types'\nimport type {StringToPath} from './types'\n\nexport function parse<const T extends string>(path: T): StringToPath<T> {\n  return path\n    .split(/[[.\\]]/g)\n    .filter(Boolean)\n    .map(seg => (seg.includes('==') ? parseSegment(seg) : coerce(seg))) as any\n}\n\nconst IS_NUMERIC = /^-?\\d+$/\n\nfunction unquote(str: string) {\n  return str.replace(/^['\"]/, '').replace(/['\"]$/, '')\n}\n\nfunction parseSegment(segment: string): PathElement {\n  const [key, value] = segment.split('==')\n  if (key !== '_key') {\n    throw new Error(\n      `Currently only \"_key\" is supported as path segment. Found ${key}`,\n    )\n  }\n  if (typeof value === 'undefined') {\n    throw new Error('Invalid path segment, expected `key==\"value\"`')\n  }\n  return {_key: unquote(value)}\n}\n\nfunction coerce(segment: string): PathElement {\n  return IS_NUMERIC.test(segment) ? Number(segment) : segment\n}\n"],"names":["parse","path","split","filter","Boolean","map","seg","includes","parseSegment","coerce","IS_NUMERIC","unquote","str","replace","segment","key","value","Error","concat","_key","test","Number"],"mappings":";;AAGO,SAASA,MAA8BC,IAA0B,EAAA;EACtE,OAAOA,KACJC,KAAM,CAAA,SAAS,EACfC,MAAO,CAAAC,OAAO,EACdC,GAAI,CAAAC,GAAA,IAAQA,GAAI,CAAAC,QAAA,CAAS,IAAI,CAAI,GAAAC,YAAA,CAAaF,GAAG,CAAI,GAAAG,MAAA,CAAOH,GAAG,CAAE,CAAA;AACtE;AAEA,MAAMI,UAAa,GAAA,SAAA;AAEnB,SAASC,QAAQC,GAAa,EAAA;EAC5B,OAAOA,IAAIC,OAAQ,CAAA,OAAA,EAAS,EAAE,CAAE,CAAAA,OAAA,CAAQ,SAAS,EAAE,CAAA;AACrD;AAEA,SAASL,aAAaM,OAA8B,EAAA;EAClD,MAAM,CAACC,GAAK,EAAAC,KAAK,CAAI,GAAAF,OAAA,CAAQZ,MAAM,IAAI,CAAA;EACvC,IAAIa,QAAQ,MAAQ,EAAA;IAClB,MAAM,IAAIE,KAAA,CACR,4DAA6D,CAAAC,MAAA,CAAAH,GAAA,CAAA,CAC/D;EACF;EACI,IAAA,OAAOC,UAAU,WAAa,EAAA;IAC1B,MAAA,IAAIC,MAAM,+CAA+C,CAAA;EACjE;EACA,OAAO;IAACE,IAAA,EAAMR,OAAQ,CAAAK,KAAK;EAAC,CAAA;AAC9B;AAEA,SAASP,OAAOK,OAA8B,EAAA;EAC5C,OAAOJ,WAAWU,IAAK,CAAAN,OAAO,CAAI,GAAAO,MAAA,CAAOP,OAAO,CAAI,GAAAA,OAAA;AACtD;"}