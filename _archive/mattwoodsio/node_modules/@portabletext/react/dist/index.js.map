{"version":3,"file":"index.js","sources":["../src/components/merge.ts","../src/components/marks.tsx","../src/components/list.tsx","../src/warnings.ts","../src/components/unknown.tsx","../src/components/defaults.tsx","../src/react-portable-text.tsx"],"sourcesContent":["import type {PortableTextReactComponents, PortableTextComponents} from '../types'\n\nexport function mergeComponents(\n  parent: PortableTextReactComponents,\n  overrides: PortableTextComponents,\n): PortableTextReactComponents {\n  const {block, list, listItem, marks, types, ...rest} = overrides\n  // @todo figure out how to not `as ...` these\n  return {\n    ...parent,\n    block: mergeDeeply(parent, overrides, 'block') as PortableTextReactComponents['block'],\n    list: mergeDeeply(parent, overrides, 'list') as PortableTextReactComponents['list'],\n    listItem: mergeDeeply(parent, overrides, 'listItem') as PortableTextReactComponents['listItem'],\n    marks: mergeDeeply(parent, overrides, 'marks') as PortableTextReactComponents['marks'],\n    types: mergeDeeply(parent, overrides, 'types') as PortableTextReactComponents['types'],\n    ...rest,\n  }\n}\n\nfunction mergeDeeply(\n  parent: PortableTextReactComponents,\n  overrides: PortableTextComponents,\n  key: 'block' | 'list' | 'listItem' | 'marks' | 'types',\n): PortableTextReactComponents[typeof key] {\n  const override = overrides[key]\n  const parentVal = parent[key]\n\n  if (typeof override === 'function') {\n    return override\n  }\n\n  if (override && typeof parentVal === 'function') {\n    return override\n  }\n\n  if (override) {\n    return {...parentVal, ...override} as PortableTextReactComponents[typeof key]\n  }\n\n  return parentVal\n}\n","import type {TypedObject} from '@portabletext/types'\nimport type {PortableTextMarkComponent} from '../types'\n\ninterface DefaultLink extends TypedObject {\n  _type: 'link'\n  href: string\n}\n\nconst link: PortableTextMarkComponent<DefaultLink> = ({children, value}) => (\n  <a href={value?.href}>{children}</a>\n)\n\nconst underlineStyle = {textDecoration: 'underline'}\n\nexport const defaultMarks: Record<string, PortableTextMarkComponent | undefined> = {\n  em: ({children}) => <em>{children}</em>,\n  strong: ({children}) => <strong>{children}</strong>,\n  code: ({children}) => <code>{children}</code>,\n  underline: ({children}) => <span style={underlineStyle}>{children}</span>,\n  'strike-through': ({children}) => <del>{children}</del>,\n  link,\n}\n","import type {PortableTextListComponent, PortableTextListItemComponent} from '../types'\n\nexport const defaultLists: Record<'number' | 'bullet', PortableTextListComponent> = {\n  number: ({children}) => <ol>{children}</ol>,\n  bullet: ({children}) => <ul>{children}</ul>,\n}\n\nexport const DefaultListItem: PortableTextListItemComponent = ({children}) => <li>{children}</li>\n","const getTemplate = (type: string, prop: string): string =>\n  `[@portabletext/react] Unknown ${type}, specify a component for it in the \\`components.${prop}\\` prop`\n\nexport const unknownTypeWarning = (typeName: string): string =>\n  getTemplate(`block type \"${typeName}\"`, 'types')\n\nexport const unknownMarkWarning = (markType: string): string =>\n  getTemplate(`mark type \"${markType}\"`, 'marks')\n\nexport const unknownBlockStyleWarning = (blockStyle: string): string =>\n  getTemplate(`block style \"${blockStyle}\"`, 'block')\n\nexport const unknownListStyleWarning = (listStyle: string): string =>\n  getTemplate(`list style \"${listStyle}\"`, 'list')\n\nexport const unknownListItemStyleWarning = (listStyle: string): string =>\n  getTemplate(`list item style \"${listStyle}\"`, 'listItem')\n\nexport function printWarning(message: string): void {\n  console.warn(message)\n}\n","import type {PortableTextReactComponents} from '../types'\nimport {unknownTypeWarning} from '../warnings'\n\nconst hidden = {display: 'none'}\n\nexport const DefaultUnknownType: PortableTextReactComponents['unknownType'] = ({\n  value,\n  isInline,\n}) => {\n  const warning = unknownTypeWarning(value._type)\n  return isInline ? <span style={hidden}>{warning}</span> : <div style={hidden}>{warning}</div>\n}\n\nexport const DefaultUnknownMark: PortableTextReactComponents['unknownMark'] = ({\n  markType,\n  children,\n}) => {\n  return <span className={`unknown__pt__mark__${markType}`}>{children}</span>\n}\n\nexport const DefaultUnknownBlockStyle: PortableTextReactComponents['unknownBlockStyle'] = ({\n  children,\n}) => {\n  return <p>{children}</p>\n}\n\nexport const DefaultUnknownList: PortableTextReactComponents['unknownList'] = ({children}) => {\n  return <ul>{children}</ul>\n}\n\nexport const DefaultUnknownListItem: PortableTextReactComponents['unknownListItem'] = ({\n  children,\n}) => {\n  return <li>{children}</li>\n}\n","import type {PortableTextBlockStyle} from '@portabletext/types'\nimport type {PortableTextBlockComponent, PortableTextReactComponents} from '../types'\nimport {defaultMarks} from './marks'\nimport {defaultLists, DefaultListItem} from './list'\nimport {\n  DefaultUnknownType,\n  DefaultUnknownMark,\n  DefaultUnknownList,\n  DefaultUnknownListItem,\n  DefaultUnknownBlockStyle,\n} from './unknown'\n\nexport const DefaultHardBreak = () => <br />\n\nexport const defaultBlockStyles: Record<\n  PortableTextBlockStyle,\n  PortableTextBlockComponent | undefined\n> = {\n  normal: ({children}) => <p>{children}</p>,\n  blockquote: ({children}) => <blockquote>{children}</blockquote>,\n  h1: ({children}) => <h1>{children}</h1>,\n  h2: ({children}) => <h2>{children}</h2>,\n  h3: ({children}) => <h3>{children}</h3>,\n  h4: ({children}) => <h4>{children}</h4>,\n  h5: ({children}) => <h5>{children}</h5>,\n  h6: ({children}) => <h6>{children}</h6>,\n}\n\nexport const defaultComponents: PortableTextReactComponents = {\n  types: {},\n\n  block: defaultBlockStyles,\n  marks: defaultMarks,\n  list: defaultLists,\n  listItem: DefaultListItem,\n  hardBreak: DefaultHardBreak,\n\n  unknownType: DefaultUnknownType,\n  unknownMark: DefaultUnknownMark,\n  unknownList: DefaultUnknownList,\n  unknownListItem: DefaultUnknownListItem,\n  unknownBlockStyle: DefaultUnknownBlockStyle,\n}\n","import {type ReactNode, useMemo} from 'react'\nimport type {ToolkitNestedPortableTextSpan, ToolkitTextNode} from '@portabletext/toolkit'\nimport type {\n  MissingComponentHandler,\n  NodeRenderer,\n  PortableTextProps,\n  PortableTextReactComponents,\n  ReactPortableTextList,\n  Serializable,\n  SerializedBlock,\n} from './types'\nimport {\n  LIST_NEST_MODE_HTML,\n  isPortableTextBlock,\n  isPortableTextListItemBlock,\n  isPortableTextToolkitList,\n  isPortableTextToolkitSpan,\n  isPortableTextToolkitTextNode,\n  nestLists,\n  spanToPlainText,\n  buildMarksTree,\n} from '@portabletext/toolkit'\nimport type {\n  PortableTextBlock,\n  PortableTextListItemBlock,\n  PortableTextMarkDefinition,\n  PortableTextSpan,\n  TypedObject,\n} from '@portabletext/types'\nimport {mergeComponents} from './components/merge'\nimport {defaultComponents} from './components/defaults'\nimport {\n  printWarning,\n  unknownBlockStyleWarning,\n  unknownListItemStyleWarning,\n  unknownListStyleWarning,\n  unknownMarkWarning,\n  unknownTypeWarning,\n} from './warnings'\n\nexport function PortableText<B extends TypedObject = PortableTextBlock>({\n  value: input,\n  components: componentOverrides,\n  listNestingMode,\n  onMissingComponent: missingComponentHandler = printWarning,\n}: PortableTextProps<B>) {\n  const handleMissingComponent = missingComponentHandler || noop\n  const blocks = Array.isArray(input) ? input : [input]\n  const nested = nestLists(blocks, listNestingMode || LIST_NEST_MODE_HTML)\n\n  const components = useMemo(() => {\n    return componentOverrides\n      ? mergeComponents(defaultComponents, componentOverrides)\n      : defaultComponents\n  }, [componentOverrides])\n\n  const renderNode = useMemo(\n    () => getNodeRenderer(components, handleMissingComponent),\n    [components, handleMissingComponent],\n  )\n  const rendered = nested.map((node, index) =>\n    renderNode({node: node, index, isInline: false, renderNode}),\n  )\n\n  return <>{rendered}</>\n}\n\nconst getNodeRenderer = (\n  components: PortableTextReactComponents,\n  handleMissingComponent: MissingComponentHandler,\n): NodeRenderer => {\n  function renderNode<N extends TypedObject>(options: Serializable<N>): ReactNode {\n    const {node, index, isInline} = options\n    const key = node._key || `node-${index}`\n\n    if (isPortableTextToolkitList(node)) {\n      return renderList(node, index, key)\n    }\n\n    if (isPortableTextListItemBlock(node)) {\n      return renderListItem(node, index, key)\n    }\n\n    if (isPortableTextToolkitSpan(node)) {\n      return renderSpan(node, index, key)\n    }\n\n    if (hasCustomComponentForNode(node)) {\n      return renderCustomBlock(node, index, key, isInline)\n    }\n\n    if (isPortableTextBlock(node)) {\n      return renderBlock(node, index, key, isInline)\n    }\n\n    if (isPortableTextToolkitTextNode(node)) {\n      return renderText(node, key)\n    }\n\n    return renderUnknownType(node, index, key, isInline)\n  }\n\n  function hasCustomComponentForNode(node: TypedObject): boolean {\n    return node._type in components.types\n  }\n\n  /* eslint-disable react/jsx-no-bind */\n  function renderListItem(\n    node: PortableTextListItemBlock<PortableTextMarkDefinition, PortableTextSpan>,\n    index: number,\n    key: string,\n  ) {\n    const tree = serializeBlock({node, index, isInline: false, renderNode})\n    const renderer = components.listItem\n    const handler = typeof renderer === 'function' ? renderer : renderer[node.listItem]\n    const Li = handler || components.unknownListItem\n\n    if (Li === components.unknownListItem) {\n      const style = node.listItem || 'bullet'\n      handleMissingComponent(unknownListItemStyleWarning(style), {\n        type: style,\n        nodeType: 'listItemStyle',\n      })\n    }\n\n    let children = tree.children\n    if (node.style && node.style !== 'normal') {\n      // Wrap any other style in whatever the block serializer says to use\n      const {listItem, ...blockNode} = node\n      children = renderNode({node: blockNode, index, isInline: false, renderNode})\n    }\n\n    return (\n      <Li key={key} value={node} index={index} isInline={false} renderNode={renderNode}>\n        {children}\n      </Li>\n    )\n  }\n\n  function renderList(node: ReactPortableTextList, index: number, key: string) {\n    const children = node.children.map((child, childIndex) =>\n      renderNode({\n        node: child._key ? child : {...child, _key: `li-${index}-${childIndex}`},\n        index: childIndex,\n        isInline: false,\n        renderNode,\n      }),\n    )\n\n    const component = components.list\n    const handler = typeof component === 'function' ? component : component[node.listItem]\n    const List = handler || components.unknownList\n\n    if (List === components.unknownList) {\n      const style = node.listItem || 'bullet'\n      handleMissingComponent(unknownListStyleWarning(style), {nodeType: 'listStyle', type: style})\n    }\n\n    return (\n      <List key={key} value={node} index={index} isInline={false} renderNode={renderNode}>\n        {children}\n      </List>\n    )\n  }\n\n  function renderSpan(node: ToolkitNestedPortableTextSpan, _index: number, key: string) {\n    const {markDef, markType, markKey} = node\n    const Span = components.marks[markType] || components.unknownMark\n    const children = node.children.map((child, childIndex) =>\n      renderNode({node: child, index: childIndex, isInline: true, renderNode}),\n    )\n\n    if (Span === components.unknownMark) {\n      handleMissingComponent(unknownMarkWarning(markType), {nodeType: 'mark', type: markType})\n    }\n\n    return (\n      <Span\n        key={key}\n        text={spanToPlainText(node)}\n        value={markDef}\n        markType={markType}\n        markKey={markKey}\n        renderNode={renderNode}\n      >\n        {children}\n      </Span>\n    )\n  }\n\n  function renderBlock(node: PortableTextBlock, index: number, key: string, isInline: boolean) {\n    const {_key, ...props} = serializeBlock({node, index, isInline, renderNode})\n    const style = props.node.style || 'normal'\n    const handler =\n      typeof components.block === 'function' ? components.block : components.block[style]\n    const Block = handler || components.unknownBlockStyle\n\n    if (Block === components.unknownBlockStyle) {\n      handleMissingComponent(unknownBlockStyleWarning(style), {\n        nodeType: 'blockStyle',\n        type: style,\n      })\n    }\n\n    return <Block key={key} {...props} value={props.node} renderNode={renderNode} />\n  }\n\n  function renderText(node: ToolkitTextNode, key: string) {\n    if (node.text === '\\n') {\n      const HardBreak = components.hardBreak\n      return HardBreak ? <HardBreak key={key} /> : '\\n'\n    }\n\n    return node.text\n  }\n\n  function renderUnknownType(node: TypedObject, index: number, key: string, isInline: boolean) {\n    const nodeOptions = {\n      value: node,\n      isInline,\n      index,\n      renderNode,\n    }\n\n    handleMissingComponent(unknownTypeWarning(node._type), {nodeType: 'block', type: node._type})\n\n    const UnknownType = components.unknownType\n    return <UnknownType key={key} {...nodeOptions} />\n  }\n\n  function renderCustomBlock(node: TypedObject, index: number, key: string, isInline: boolean) {\n    const nodeOptions = {\n      value: node,\n      isInline,\n      index,\n      renderNode,\n    }\n\n    const Node = components.types[node._type]\n    return Node ? <Node key={key} {...nodeOptions} /> : null\n  }\n  /* eslint-enable react/jsx-no-bind */\n\n  return renderNode\n}\n\nfunction serializeBlock(options: Serializable<PortableTextBlock>): SerializedBlock {\n  const {node, index, isInline, renderNode} = options\n  const tree = buildMarksTree(node)\n  const children = tree.map((child, i) =>\n    renderNode({node: child, isInline: true, index: i, renderNode}),\n  )\n\n  return {\n    _key: node._key || `block-${index}`,\n    children,\n    index,\n    isInline,\n    node,\n  }\n}\n\nfunction noop() {\n  // Intentional noop\n}\n"],"names":["mergeComponents","parent","overrides","block","list","listItem","marks","types","rest","_excluded","_objectSpread","mergeDeeply","key","override","parentVal","link","_ref","children","value","jsx","href","underlineStyle","textDecoration","defaultMarks","em","_ref2","strong","_ref3","code","_ref4","underline","_ref5","style","_ref6","defaultLists","number","_ref7","bullet","_ref8","DefaultListItem","_ref9","getTemplate","type","prop","concat","unknownTypeWarning","typeName","unknownMarkWarning","markType","unknownBlockStyleWarning","blockStyle","unknownListStyleWarning","listStyle","unknownListItemStyleWarning","printWarning","message","console","warn","hidden","display","DefaultUnknownType","_ref10","isInline","warning","_type","DefaultUnknownMark","_ref11","className","DefaultUnknownBlockStyle","_ref12","DefaultUnknownList","_ref13","DefaultUnknownListItem","_ref14","DefaultHardBreak","defaultBlockStyles","normal","_ref15","blockquote","_ref16","h1","_ref17","h2","_ref18","h3","_ref19","h4","_ref20","h5","_ref21","h6","_ref22","defaultComponents","hardBreak","unknownType","unknownMark","unknownList","unknownListItem","unknownBlockStyle","PortableText","_ref23","input","components","componentOverrides","listNestingMode","onMissingComponent","missingComponentHandler","handleMissingComponent","noop","blocks","Array","isArray","nested","nestLists","LIST_NEST_MODE_HTML","useMemo","renderNode","getNodeRenderer","rendered","map","node","index","options","_key","isPortableTextToolkitList","renderList","isPortableTextListItemBlock","renderListItem","isPortableTextToolkitSpan","renderSpan","hasCustomComponentForNode","renderCustomBlock","isPortableTextBlock","renderBlock","isPortableTextToolkitTextNode","renderText","renderUnknownType","tree","serializeBlock","renderer","handler","Li","nodeType","blockNode","_objectWithoutProperties","_excluded2","child","childIndex","component","List","_index","markDef","markKey","Span","text","spanToPlainText","_serializeBlock","props","_excluded3","Block","HardBreak","nodeOptions","UnknownType","Node","buildMarksTree","i"],"mappings":";;;;;;;;;;;;;;AAEgB,SAAAA,eAAAA,CACdC,QACAC,SAC6B,EAAA;EACvB,MAAA;MAACC;MAAOC,IAAM;MAAAC,QAAA;MAAUC;MAAOC;IAAkB,CAAA,GAAAL,SAAA;IAARM,gCAAQN,SAAA,EAAAO,SAAA;EAEhD,OAAAC,aAAA,CAAAA,aAAA,KACFT,MAAA;IACHE,KAAO,EAAAQ,WAAA,CAAYV,MAAQ,EAAAC,SAAA,EAAW,OAAO,CAAA;IAC7CE,IAAM,EAAAO,WAAA,CAAYV,MAAQ,EAAAC,SAAA,EAAW,MAAM,CAAA;IAC3CG,QAAU,EAAAM,WAAA,CAAYV,MAAQ,EAAAC,SAAA,EAAW,UAAU,CAAA;IACnDI,KAAO,EAAAK,WAAA,CAAYV,MAAQ,EAAAC,SAAA,EAAW,OAAO,CAAA;IAC7CK,KAAO,EAAAI,WAAA,CAAYV,MAAQ,EAAAC,SAAA,EAAW,OAAO;EAAA,GAC1CM,IAAA;AAEP;AAEA,SAASG,WAAAA,CACPV,MACA,EAAAC,SAAA,EACAU,GACyC,EAAA;EACnC,MAAAC,QAAA,GAAWX,UAAUU,GAAG,CAAA;EACxB,MAAAE,SAAA,GAAYb,OAAOW,GAAG,CAAA;EAExB,IAAA,OAAOC,aAAa,UAAY,EAAA;IAC3B,OAAAA,QAAA;EACT;EAEI,IAAAA,QAAA,IAAY,OAAOC,SAAA,KAAc,UAAY,EAAA;IACxC,OAAAD,QAAA;EACT;EAEA,IAAIA,QAAU,EAAA;IACZ,OAAAH,aAAA,CAAAA,aAAA,KAAWI,SAAW,GAAGD,QAAQ;EACnC;EAEO,OAAAC,SAAA;AACT;AChCA,MAAMC,IAAA,GAA+CC,IAAA;EAAA,IAAC;IAACC,QAAU;IAAAC;EAAA,CAC/D,GAAAF,IAAA;EAAA,OAAA,eAAAG,GAAA,CAAC,GAAE,EAAA;IAAAC,IAAA,EAAMF,KAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAAE,IAAA;IAAOH;EAAS,CAAA,CAAA;AAAA;AAGlC,MAAMI,cAAA,GAAiB;EAACC,cAAA,EAAgB;CAAW;AAE5C,MAAMC,YAAsE,GAAA;EACjFC,IAAIC,KAAA;IAAA,IAAC;MAACR;IAAc,CAAA,GAAAQ,KAAA;IAAA,OAAA,eAAAN,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;EAClCS,QAAQC,KAAA;IAAA,IAAC;MAACV;IAAc,CAAA,GAAAU,KAAA;IAAA,OAAA,eAAAR,GAAA,CAAC;MAAQF;KAAS,CAAA;EAAA;EAC1CW,MAAMC,KAAA;IAAA,IAAC;MAACZ;IAAc,CAAA,GAAAY,KAAA;IAAA,OAAA,eAAAV,GAAA,CAAC;MAAMF;KAAS,CAAA;EAAA;EACtCa,SAAA,EAAWC,KAAA;IAAA,IAAC;MAACd;IAAA;0BAAeE,GAAA,CAAA,MAAA,EAAA;MAAKa,KAAO,EAAAX,cAAA;MAAiBJ;KAAS,CAAA;EAAA;EAClE,kBAAkBgB,KAAA;IAAA,IAAC;MAAChB;IAAc,CAAA,GAAAgB,KAAA;IAAA,OAAA,eAAAd,GAAA,CAAC;MAAKF;KAAS,CAAA;EAAA;EACjDF;AACF,CAAA;ACnBO,MAAMmB,YAAuE,GAAA;EAClFC,QAAQC,KAAA;IAAA,IAAC;MAACnB;IAAc,CAAA,GAAAmB,KAAA;IAAA,OAAA,eAAAjB,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;EACtCoB,QAAQC,KAAA;IAAA,IAAC;MAACrB;IAAc,CAAA,GAAAqB,KAAA;IAAA,OAAA,eAAAnB,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;AACxC,CAAA;AAEO,MAAMsB,kBAAiDC,KAAA;EAAA,IAAC;IAACvB;EAAc,CAAA,GAAAuB,KAAA;EAAA,OAAA,eAAArB,GAAA,CAAC;IAAIF;GAAS,CAAA;AAAA;ACP5F,MAAMwB,cAAcA,CAACC,IAAA,EAAcC,SACjC,gCAAiC,CAAAC,MAAA,CAAAF,IAAA,EAAI,oDAAoDE,MAAI,CAAAD,IAAA,EAAA,QAAA,CAAA;AAExF,MAAME,qBAAsBC,QAAA,IACjCL,YAAY,cAAe,CAAAG,MAAA,CAAAE,QAAA,EAAQ,MAAK,OAAO,CAAA;AAE1C,MAAMC,qBAAsBC,QAAA,IACjCP,YAAY,aAAc,CAAAG,MAAA,CAAAI,QAAA,EAAQ,MAAK,OAAO,CAAA;AAEzC,MAAMC,2BAA4BC,UAAA,IACvCT,YAAY,eAAgB,CAAAG,MAAA,CAAAM,UAAA,EAAU,MAAK,OAAO,CAAA;AAE7C,MAAMC,0BAA2BC,SAAA,IACtCX,YAAY,cAAe,CAAAG,MAAA,CAAAQ,SAAA,EAAS,MAAK,MAAM,CAAA;AAE1C,MAAMC,8BAA+BD,SAAA,IAC1CX,YAAY,mBAAoB,CAAAG,MAAA,CAAAQ,SAAA,EAAS,MAAK,UAAU,CAAA;AAEnD,SAASE,aAAaC,OAAuB,EAAA;EAClDC,OAAA,CAAQC,KAAKF,OAAO,CAAA;AACtB;ACjBA,MAAMG,MAAA,GAAS;EAACC,OAAA,EAAS;CAAM;AAExB,MAAMC,qBAAiEC,MAAA,IAGxE;EAAA,IAHyE;IAC7E3C,KAAA;IACA4C;EACF,CAAM,GAAAD,MAAA;EACE,MAAAE,OAAA,GAAUlB,kBAAmB,CAAA3B,KAAA,CAAM8C,KAAK,CAAA;EACvC,OAAAF,QAAA,GAAY,eAAA3C,GAAA,CAAA,MAAA,EAAA;IAAKa,KAAO,EAAA0B,MAAA;IAASzC,QAAQ,EAAA8C;EAAA,CAAA,CAAA,GAAA,eAAW5C,GAAA,CAAA,KAAA,EAAA;IAAIa,KAAO,EAAA0B,MAAA;IAASzC,QAAQ,EAAA8C;EAAA,CAAA,CAAA;AACzF,CAAA;AAEO,MAAME,qBAAiEC,MAAA,IAGxE;EAAA,IAHyE;IAC7ElB,QAAA;IACA/B;EACF,CAAM,GAAAiD,MAAA;EACJ,sBAAQ/C,GAAA,CAAA,MAAA,EAAA;IAAKgD,SAAW,EAAA,qBAAA,CAAsBvB;IAAa3B;EAAS,CAAA,CAAA;AACtE,CAAA;AAEO,MAAMmD,2BAA6EC,MAAA,IAEpF;EAAA,IAFqF;IACzFpD;EACF,CAAM,GAAAoD,MAAA;EACG,OAAA,eAAAlD,GAAA,CAAC;IAAGF;EAAS,CAAA,CAAA;AACtB,CAAA;AAEO,MAAMqD,kBAAiE,GAAAC,MAAA,IAAgB;EAAA,IAAf;IAACtD;GAAc,GAAAsD,MAAA;EACrF,OAAA,eAAApD,GAAA,CAAC;IAAIF;EAAS,CAAA,CAAA;AACvB,CAAA;AAEO,MAAMuD,yBAAyEC,MAAA,IAEhF;EAAA,IAFiF;IACrFxD;EACF,CAAM,GAAAwD,MAAA;EACG,OAAA,eAAAtD,GAAA,CAAC;IAAIF;EAAS,CAAA,CAAA;AACvB,CAAA;ACtBa,MAAAyD,gBAAA,GAAmBA,CAAA,KAAM,eAAAvD,GAAA,CAAC,IAAG,EAAA,CAAA,CAAA,CAAA;AAEnC,MAAMwD,kBAGT,GAAA;EACFC,QAAQC,MAAA;IAAA,IAAC;MAAC5D;IAAc,CAAA,GAAA4D,MAAA;IAAA,OAAA,eAAA1D,GAAA,CAAC;MAAGF;KAAS,CAAA;EAAA;EACrC6D,YAAYC,MAAA;IAAA,IAAC;MAAC9D;IAAc,CAAA,GAAA8D,MAAA;IAAA,OAAA,eAAA5D,GAAA,CAAC;MAAYF;KAAS,CAAA;EAAA;EAClD+D,IAAIC,MAAA;IAAA,IAAC;MAAChE;IAAc,CAAA,GAAAgE,MAAA;IAAA,OAAA,eAAA9D,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;EAClCiE,IAAIC,MAAA;IAAA,IAAC;MAAClE;IAAc,CAAA,GAAAkE,MAAA;IAAA,OAAA,eAAAhE,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;EAClCmE,IAAIC,MAAA;IAAA,IAAC;MAACpE;IAAc,CAAA,GAAAoE,MAAA;IAAA,OAAA,eAAAlE,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;EAClCqE,IAAIC,MAAA;IAAA,IAAC;MAACtE;IAAc,CAAA,GAAAsE,MAAA;IAAA,OAAA,eAAApE,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;EAClCuE,IAAIC,MAAA;IAAA,IAAC;MAACxE;IAAc,CAAA,GAAAwE,MAAA;IAAA,OAAA,eAAAtE,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;EAClCyE,IAAIC,MAAA;IAAA,IAAC;MAAC1E;IAAc,CAAA,GAAA0E,MAAA;IAAA,OAAA,eAAAxE,GAAA,CAAC;MAAIF;KAAS,CAAA;EAAA;AACpC,CAAA;AAEO,MAAM2E,iBAAiD,GAAA;EAC5DrF,OAAO,CAAC,CAAA;EAERJ,KAAO,EAAAwE,kBAAA;EACPrE,KAAO,EAAAiB,YAAA;EACPnB,IAAM,EAAA8B,YAAA;EACN7B,QAAU,EAAAkC,eAAA;EACVsD,SAAW,EAAAnB,gBAAA;EAEXoB,WAAa,EAAAlC,kBAAA;EACbmC,WAAa,EAAA9B,kBAAA;EACb+B,WAAa,EAAA1B,kBAAA;EACb2B,eAAiB,EAAAzB,sBAAA;EACjB0B,iBAAmB,EAAA9B;AACrB,CAAA;ACFO,SAAS+B,YAAwDA,CAAAC,MAAA,EAK/C;EAAA,IAL+C;IACtElF,KAAO,EAAAmF,KAAA;IACPC,UAAY,EAAAC,kBAAA;IACZC,eAAA;IACAC,oBAAoBC,uBAA0B,GAAApD;EAChD,CAAyB,GAAA8C,MAAA;EACvB,MAAMO,yBAAyBD,uBAA2B,IAAAE,IAAA;EAC1D,MAAMC,SAASC,KAAM,CAAAC,OAAA,CAAQV,KAAK,CAAI,GAAAA,KAAA,GAAQ,CAACA,KAAK,CAAA;EACpD,MAAMW,MAAS,GAAAC,SAAA,CAAUJ,MAAQ,EAAAL,eAAA,IAAmBU,mBAAmB,CAAA;EAEjE,MAAAZ,UAAA,GAAaa,QAAQ,MAAM;IAC/B,OAAOZ,kBACH,GAAAvG,eAAA,CAAgB4F,iBAAmB,EAAAW,kBAAkB,CACrD,GAAAX,iBAAA;EAAA,CACN,EAAG,CAACW,kBAAkB,CAAC,CAAA;EAEvB,MAAMa,UAAa,GAAAD,OAAA,CACjB,MAAME,eAAgB,CAAAf,UAAA,EAAYK,sBAAsB,CAAA,EACxD,CAACL,YAAYK,sBAAsB,CAAA,CACrC;EACA,MAAMW,WAAWN,MAAO,CAAAO,GAAA,CAAI,CAACC,IAAM,EAAAC,KAAA,KACjCL,UAAW,CAAA;IAACI;IAAYC,KAAO;IAAA3D,QAAA,EAAU,KAAO;IAAAsD;GAAW,CAAA,CAC7D;EAEA,OAAA;IAAUnG,QAAS,EAAAqG;EAAA,CAAA,CAAA;AACrB;AAEA,MAAMD,eAAA,GAAkBA,CACtBf,UAAA,EACAK,sBACiB,KAAA;EACjB,SAASS,WAAkCM,OAAqC,EAAA;IAC9E,MAAM;MAACF,IAAA;MAAMC,KAAO;MAAA3D;IAAA,CAAY,GAAA4D,OAAA;IAC1B,MAAA9G,GAAA,GAAM4G,IAAK,CAAAG,IAAA,IAAQ,OAAQ,CAAA/E,MAAA,CAAA6E,KAAA,CAAA;IAE7B,IAAAG,yBAAA,CAA0BJ,IAAI,CAAG,EAAA;MAC5B,OAAAK,UAAA,CAAWL,IAAM,EAAAC,KAAA,EAAO7G,GAAG,CAAA;IACpC;IAEI,IAAAkH,2BAAA,CAA4BN,IAAI,CAAG,EAAA;MAC9B,OAAAO,cAAA,CAAeP,IAAM,EAAAC,KAAA,EAAO7G,GAAG,CAAA;IACxC;IAEI,IAAAoH,yBAAA,CAA0BR,IAAI,CAAG,EAAA;MAC5B,OAAAS,UAAA,CAAWT,IAAM,EAAAC,KAAA,EAAO7G,GAAG,CAAA;IACpC;IAEI,IAAAsH,yBAAA,CAA0BV,IAAI,CAAG,EAAA;MACnC,OAAOW,iBAAkB,CAAAX,IAAA,EAAMC,KAAO,EAAA7G,GAAA,EAAKkD,QAAQ,CAAA;IACrD;IAEI,IAAAsE,mBAAA,CAAoBZ,IAAI,CAAG,EAAA;MAC7B,OAAOa,WAAY,CAAAb,IAAA,EAAMC,KAAO,EAAA7G,GAAA,EAAKkD,QAAQ,CAAA;IAC/C;IAEI,IAAAwE,6BAAA,CAA8Bd,IAAI,CAAG,EAAA;MAChC,OAAAe,UAAA,CAAWf,MAAM5G,GAAG,CAAA;IAC7B;IAEA,OAAO4H,iBAAkB,CAAAhB,IAAA,EAAMC,KAAO,EAAA7G,GAAA,EAAKkD,QAAQ,CAAA;EACrD;EAEA,SAASoE,0BAA0BV,IAA4B,EAAA;IACtD,OAAAA,IAAA,CAAKxD,SAASsC,UAAW,CAAA/F,KAAA;EAClC;EAGS,SAAAwH,cAAAA,CACPP,IACA,EAAAC,KAAA,EACA7G,GACA,EAAA;IACM,MAAA6H,IAAA,GAAOC,eAAe;MAAClB,IAAA;MAAMC;MAAO3D,QAAU,EAAA,KAAA;MAAOsD;KAAW,CAAA;IACtE,MAAMuB,WAAWrC,UAAW,CAAAjG,QAAA;IAC5B,MAAMuI,UAAU,OAAOD,QAAA,KAAa,aAAaA,QAAW,GAAAA,QAAA,CAASnB,KAAKnH,QAAQ,CAAA;IAC5E,MAAAwI,EAAA,GAAKD,WAAWtC,UAAW,CAAAL,eAAA;IAE7B,IAAA4C,EAAA,KAAOvC,WAAWL,eAAiB,EAAA;MAC/B,MAAAjE,KAAA,GAAQwF,KAAKnH,QAAY,IAAA,QAAA;MACRsG,sBAAA,CAAAtD,2BAAA,CAA4BrB,KAAK,CAAG,EAAA;QACzDU,IAAM,EAAAV,KAAA;QACN8G,QAAU,EAAA;MAAA,CACX,CAAA;IACH;IAEA,IAAI7H,WAAWwH,IAAK,CAAAxH,QAAA;IACpB,IAAIuG,IAAK,CAAAxF,KAAA,IAASwF,IAAK,CAAAxF,KAAA,KAAU,QAAU,EAAA;MAEzC,MAAM;UAAC3B;QAAa,CAAa,GAAAmH,IAAA;QAAbuB,SAAA,GAAAC,wBAAA,CAAaxB,IAAA,EAAAyB,UAAA;MACtBhI,QAAA,GAAAmG,UAAA,CAAW;QAACI,IAAM,EAAAuB,SAAA;QAAWtB;QAAO3D,QAAU,EAAA,KAAA;QAAOsD;OAAW,CAAA;IAC7E;IAGE,OAAA,eAAAjG,GAAA,CAAC0H;MAAa3H,KAAO,EAAAsG,IAAA;MAAMC;MAAc3D,QAAU,EAAA,KAAA;MAAOsD,UACvD;MAAAnG;IAAA,CAAA,EADML,GAET,CAAA;EAEJ;EAES,SAAAiH,UAAAA,CAAWL,IAA6B,EAAAC,KAAA,EAAe7G,GAAa,EAAA;IACrE,MAAAK,QAAA,GAAWuG,KAAKvG,QAAS,CAAAsG,GAAA,CAAI,CAAC2B,KAAO,EAAAC,UAAA,KACzC/B,UAAW,CAAA;MACTI,IAAA,EAAM0B,KAAM,CAAAvB,IAAA,GAAOuB,KAAQ,GAAAxI,aAAA,CAAAA,aAAA,KAAIwI,KAAA;QAAOvB,IAAM,EAAA,KAAA,CAAM/E,MAAK,CAAA6E,KAAA,EAAA,GAAA,CAAA,CAAI7E,MAAY,CAAAuG,UAAA;MAAA,EAAA;MACvE1B,KAAO,EAAA0B,UAAA;MACPrF,QAAU,EAAA,KAAA;MACVsD;IAAA,CACD,CAAA,CACH;IAEA,MAAMgC,YAAY9C,UAAW,CAAAlG,IAAA;IAC7B,MAAMwI,UAAU,OAAOQ,SAAA,KAAc,aAAaA,SAAY,GAAAA,SAAA,CAAU5B,KAAKnH,QAAQ,CAAA;IAC/E,MAAAgJ,IAAA,GAAOT,WAAWtC,UAAW,CAAAN,WAAA;IAE/B,IAAAqD,IAAA,KAAS/C,WAAWN,WAAa,EAAA;MAC7B,MAAAhE,KAAA,GAAQwF,KAAKnH,QAAY,IAAA,QAAA;MACRsG,sBAAA,CAAAxD,uBAAA,CAAwBnB,KAAK,CAAG,EAAA;QAAC8G,UAAU,WAAa;QAAApG,IAAA,EAAMV;OAAM,CAAA;IAC7F;IAGE,OAAA,eAAAb,GAAA,CAACkI;MAAenI,KAAO,EAAAsG,IAAA;MAAMC;MAAc3D,QAAU,EAAA,KAAA;MAAOsD,UACzD;MAAAnG;IAAA,CAAA,EADQL,GAEX,CAAA;EAEJ;EAES,SAAAqH,UAAAA,CAAWT,IAAqC,EAAA8B,MAAA,EAAgB1I,GAAa,EAAA;IACpF,MAAM;MAAC2I,OAAA;MAASvG,QAAU;MAAAwG;IAAA,CAAW,GAAAhC,IAAA;IACrC,MAAMiC,IAAO,GAAAnD,UAAA,CAAWhG,KAAM,CAAA0C,QAAQ,KAAKsD,UAAW,CAAAP,WAAA;IAChD,MAAA9E,QAAA,GAAWuG,KAAKvG,QAAS,CAAAsG,GAAA,CAAI,CAAC2B,KAAA,EAAOC,UACzC,KAAA/B,UAAA,CAAW;MAACI,IAAA,EAAM0B,KAAO;MAAAzB,KAAA,EAAO0B,UAAY;MAAArF,QAAA,EAAU,IAAM;MAAAsD;IAAA,CAAW,CAAA,CACzE;IAEI,IAAAqC,IAAA,KAASnD,WAAWP,WAAa,EAAA;MACZY,sBAAA,CAAA5D,kBAAA,CAAmBC,QAAQ,CAAG,EAAA;QAAC8F,UAAU,MAAQ;QAAApG,IAAA,EAAMM;OAAS,CAAA;IACzF;IAGE,sBAAA7B,GAAA,CAACsI,IAAA,EAAA;MAECC,IAAA,EAAMC,gBAAgBnC,IAAI,CAAA;MAC1BtG,KAAO,EAAAqI,OAAA;MACPvG,QAAA;MACAwG,OAAA;MACApC,UAAA;MAECnG;IAAA,CAAA,EAPIL,GAAA,CAQP;EAEJ;EAEA,SAASyH,WAAYA,CAAAb,IAAA,EAAyBC,KAAe,EAAA7G,GAAA,EAAakD,QAAmB,EAAA;IACrF,MAAA8F,eAAA,GAAmBlB,cAAe,CAAA;QAAClB,IAAM;QAAAC,KAAA;QAAO3D,QAAU;QAAAsD;MAAA,CAAW,CAAA;MAArE;QAACO;MAAc,CAAA,GAAAiC,eAAA;MAALC,KAAK,GAAAb,wBAAA,CAAAY,eAAA,EAAAE,UAAA;IACf,MAAA9H,KAAA,GAAQ6H,KAAM,CAAArC,IAAA,CAAKxF,KAAS,IAAA,QAAA;IAC5B,MAAA4G,OAAA,GACJ,OAAOtC,UAAW,CAAAnG,KAAA,KAAU,aAAamG,UAAW,CAAAnG,KAAA,GAAQmG,UAAW,CAAAnG,KAAA,CAAM6B,KAAK,CAAA;IAC9E,MAAA+H,KAAA,GAAQnB,WAAWtC,UAAW,CAAAJ,iBAAA;IAEhC,IAAA6D,KAAA,KAAUzD,WAAWJ,iBAAmB,EAAA;MACnBS,sBAAA,CAAA1D,wBAAA,CAAyBjB,KAAK,CAAG,EAAA;QACtD8G,QAAU,EAAA,YAAA;QACVpG,IAAM,EAAAV;MAAA,CACP,CAAA;IACH;IAEO,OAAA,eAAAb,GAAA,CAAC4I,uCAAoBF,KAAA;MAAO3I,OAAO2I,KAAM,CAAArC,IAAA;MAAMJ;QAAnCxG,GAA2D,CAAA;EAChF;EAES,SAAA2H,UAAAA,CAAWf,MAAuB5G,GAAa,EAAA;IAClD,IAAA4G,IAAA,CAAKkC,SAAS,IAAM,EAAA;MACtB,MAAMM,YAAY1D,UAAW,CAAAT,SAAA;MAC7B,OAAOmE,SAAY,GAAA,eAAA7I,GAAA,CAAC6I,SAAe,EAAA,CAAA,CAAA,EAAApJ,GAAK,CAAK,GAAA,IAAA;IAC/C;IAEA,OAAO4G,IAAK,CAAAkC,IAAA;EACd;EAEA,SAASlB,iBAAkBA,CAAAhB,IAAA,EAAmBC,KAAe,EAAA7G,GAAA,EAAakD,QAAmB,EAAA;IAC3F,MAAMmG,WAAc,GAAA;MAClB/I,KAAO,EAAAsG,IAAA;MACP1D,QAAA;MACA2D,KAAA;MACAL;IAAA,CACF;IAEuBT,sBAAA,CAAA9D,kBAAA,CAAmB2E,IAAK,CAAAxD,KAAK,CAAG,EAAA;MAAC8E,UAAU,OAAS;MAAApG,IAAA,EAAM8E,IAAK,CAAAxD;IAAM,CAAA,CAAA;IAE5F,MAAMkG,cAAc5D,UAAW,CAAAR,WAAA;IAC/B,OAAQ,eAAA3E,GAAA,CAAA+I,WAAA,EAAAxJ,aAAA,KAA0BuJ,WAAA,GAATrJ,GAAsB,CAAA;EACjD;EAEA,SAASuH,iBAAkBA,CAAAX,IAAA,EAAmBC,KAAe,EAAA7G,GAAA,EAAakD,QAAmB,EAAA;IAC3F,MAAMmG,WAAc,GAAA;MAClB/I,KAAO,EAAAsG,IAAA;MACP1D,QAAA;MACA2D,KAAA;MACAL;IAAA,CACF;IAEA,MAAM+C,IAAO,GAAA7D,UAAA,CAAW/F,KAAM,CAAAiH,IAAA,CAAKxD,KAAK,CAAA;IACxC,OAAOmG,sBAAQhJ,GAAA,CAAAgJ,IAAA,EAAAzJ,aAAA,KAAmBuJ,WAAA,GAATrJ,GAAsB,CAAK,GAAA,IAAA;EACtD;EAGO,OAAAwG,UAAA;AACT,CAAA;AAEA,SAASsB,eAAehB,OAA2D,EAAA;EACjF,MAAM;IAACF,IAAA;IAAMC,KAAO;IAAA3D,QAAA;IAAUsD;GAAc,GAAAM,OAAA;EACtC,MAAAe,IAAA,GAAO2B,eAAe5C,IAAI,CAAA;EAChC,MAAMvG,WAAWwH,IAAK,CAAAlB,GAAA,CAAI,CAAC2B,KAAA,EAAOmB,CAChC,KAAAjD,UAAA,CAAW;IAACI,IAAA,EAAM0B,KAAO;IAAApF,QAAA,EAAU,IAAM;IAAA2D,KAAA,EAAO4C,CAAG;IAAAjD;EAAA,CAAW,CAAA,CAChE;EAEO,OAAA;IACLO,IAAA,EAAMH,IAAK,CAAAG,IAAA,IAAQ,QAAS,CAAA/E,MAAA,CAAA6E,KAAA,CAAA;IAC5BxG,QAAA;IACAwG,KAAA;IACA3D,QAAA;IACA0D;EAAA,CACF;AACF;AAEA,SAASZ,IAAOA,CAAA,EAAA,CAEhB;"}