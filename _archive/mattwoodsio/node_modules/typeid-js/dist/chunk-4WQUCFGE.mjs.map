{"version":3,"sources":["../src/base32.ts"],"sourcesContent":["/* eslint-disable no-bitwise */\nconst alphabet: string = \"0123456789abcdefghjkmnpqrstvwxyz\";\n\n// Decoding table\nconst dec: Uint8Array = new Uint8Array([\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01,\n  0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x0B, 0x0C,\n  0x0D, 0x0E, 0x0F, 0x10, 0x11, 0xFF, 0x12, 0x13, 0xFF, 0x14,\n  0x15, 0xFF, 0x16, 0x17, 0x18, 0x19, 0x1A, 0xFF, 0x1B, 0x1C,\n  0x1D, 0x1E, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF\n]);\n\nexport function encode(src: Uint8Array): string {\n  const dst: string[] = new Array(26).fill(\"\");\n\n  if (src.length !== 16) {\n    throw new Error(\"Invalid length\");\n  }\n\n  // 10 byte timestamp\n  dst[0] = alphabet[(src[0] & 224) >> 5];\n  dst[1] = alphabet[src[0] & 31];\n  dst[2] = alphabet[(src[1] & 248) >> 3];\n  dst[3] = alphabet[((src[1] & 7) << 2) | ((src[2] & 192) >> 6)];\n  dst[4] = alphabet[(src[2] & 62) >> 1];\n  dst[5] = alphabet[((src[2] & 1) << 4) | ((src[3] & 240) >> 4)];\n  dst[6] = alphabet[((src[3] & 15) << 1) | ((src[4] & 128) >> 7)];\n  dst[7] = alphabet[(src[4] & 124) >> 2];\n  dst[8] = alphabet[((src[4] & 3) << 3) | ((src[5] & 224) >> 5)];\n  dst[9] = alphabet[src[5] & 31];\n\n  // 16 bytes of randomness\n  dst[10] = alphabet[(src[6] & 248) >> 3];\n  dst[11] = alphabet[((src[6] & 7) << 2) | ((src[7] & 192) >> 6)];\n  dst[12] = alphabet[(src[7] & 62) >> 1];\n  dst[13] = alphabet[((src[7] & 1) << 4) | ((src[8] & 240) >> 4)];\n  dst[14] = alphabet[((src[8] & 15) << 1) | ((src[9] & 128) >> 7)];\n  dst[15] = alphabet[(src[9] & 124) >> 2];\n  dst[16] = alphabet[((src[9] & 3) << 3) | ((src[10] & 224) >> 5)];\n  dst[17] = alphabet[src[10] & 31];\n  dst[18] = alphabet[(src[11] & 248) >> 3];\n  dst[19] = alphabet[((src[11] & 7) << 2) | ((src[12] & 192) >> 6)];\n  dst[20] = alphabet[(src[12] & 62) >> 1];\n  dst[21] = alphabet[((src[12] & 1) << 4) | ((src[13] & 240) >> 4)];\n  dst[22] = alphabet[((src[13] & 15) << 1) | ((src[14] & 128) >> 7)];\n  dst[23] = alphabet[(src[14] & 124) >> 2];\n  dst[24] = alphabet[((src[14] & 3) << 3) | ((src[15] & 224) >> 5)];\n  dst[25] = alphabet[src[15] & 31];\n\n  return dst.join(\"\");\n}\n\nexport function decode(s: string): Uint8Array {\n  if (s.length !== 26) {\n    throw new Error(\"Invalid length\");\n  }\n\n  const encoder = new TextEncoder();\n  const v: Uint8Array = encoder.encode(s);\n\n  // Check if all the characters are part of the expected base32 character set.\n  if (\n    dec[v[0]] === 0xFF ||\n    dec[v[1]] === 0xFF ||\n    dec[v[2]] === 0xFF ||\n    dec[v[3]] === 0xFF ||\n    dec[v[4]] === 0xFF ||\n    dec[v[5]] === 0xFF ||\n    dec[v[6]] === 0xFF ||\n    dec[v[7]] === 0xFF ||\n    dec[v[8]] === 0xFF ||\n    dec[v[9]] === 0xFF ||\n    dec[v[10]] === 0xFF ||\n    dec[v[11]] === 0xFF ||\n    dec[v[12]] === 0xFF ||\n    dec[v[13]] === 0xFF ||\n    dec[v[14]] === 0xFF ||\n    dec[v[15]] === 0xFF ||\n    dec[v[16]] === 0xFF ||\n    dec[v[17]] === 0xFF ||\n    dec[v[18]] === 0xFF ||\n    dec[v[19]] === 0xFF ||\n    dec[v[20]] === 0xFF ||\n    dec[v[21]] === 0xFF ||\n    dec[v[22]] === 0xFF ||\n    dec[v[23]] === 0xFF ||\n    dec[v[24]] === 0xFF ||\n    dec[v[25]] === 0xFF) {\n    throw new Error(\"Invalid base32 character\");\n  }\n\n  const id = new Uint8Array(16);\n\n  // 6 bytes timestamp (48 bits)\n  id[0] = (dec[v[0]] << 5) | dec[v[1]];\n  id[1] = (dec[v[2]] << 3) | (dec[v[3]] >> 2);\n  id[2] = ((dec[v[3]] & 3) << 6) | (dec[v[4]] << 1) | (dec[v[5]] >> 4);\n  id[3] = ((dec[v[5]] & 15) << 4) | (dec[v[6]] >> 1);\n  id[4] = ((dec[v[6]] & 1) << 7) | (dec[v[7]] << 2) | (dec[v[8]] >> 3);\n  id[5] = ((dec[v[8]] & 7) << 5) | dec[v[9]];\n\n  // 10 bytes of entropy (80 bits)\n  id[6] = (dec[v[10]] << 3) | (dec[v[11]] >> 2);\n  id[7] = ((dec[v[11]] & 3) << 6) | (dec[v[12]] << 1) | (dec[v[13]] >> 4);\n  id[8] = ((dec[v[13]] & 15) << 4) | (dec[v[14]] >> 1);\n  id[9] = ((dec[v[14]] & 1) << 7) | (dec[v[15]] << 2) | (dec[v[16]] >> 3);\n  id[10] = ((dec[v[16]] & 7) << 5) | dec[v[17]];\n  id[11] = (dec[v[18]] << 3) | (dec[v[19]] >> 2);\n  id[12] = ((dec[v[19]] & 3) << 6) | (dec[v[20]] << 1) | (dec[v[21]] >> 4);\n  id[13] = ((dec[v[21]] & 15) << 4) | (dec[v[22]] >> 1);\n  id[14] = ((dec[v[22]] & 1) << 7) | (dec[v[23]] << 2) | (dec[v[24]] >> 3);\n  id[15] = ((dec[v[24]] & 7) << 5) | dec[v[25]];\n\n  return id;\n}"],"mappings":";AACA,IAAM,WAAmB;AAGzB,IAAM,MAAkB,IAAI,WAAW;AAAA,EACrC;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EACtD;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAChC,CAAC;AAEM,SAAS,OAAO,KAAyB;AAC9C,QAAM,MAAgB,IAAI,MAAM,EAAE,EAAE,KAAK,EAAE;AAE3C,MAAI,IAAI,WAAW,IAAI;AACrB,UAAM,IAAI,MAAM,gBAAgB;AAAA,EAClC;AAGA,MAAI,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,QAAQ,CAAC;AACrC,MAAI,CAAC,IAAI,SAAS,IAAI,CAAC,IAAI,EAAE;AAC7B,MAAI,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,QAAQ,CAAC;AACrC,MAAI,CAAC,IAAI,UAAW,IAAI,CAAC,IAAI,MAAM,KAAO,IAAI,CAAC,IAAI,QAAQ,CAAE;AAC7D,MAAI,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,OAAO,CAAC;AACpC,MAAI,CAAC,IAAI,UAAW,IAAI,CAAC,IAAI,MAAM,KAAO,IAAI,CAAC,IAAI,QAAQ,CAAE;AAC7D,MAAI,CAAC,IAAI,UAAW,IAAI,CAAC,IAAI,OAAO,KAAO,IAAI,CAAC,IAAI,QAAQ,CAAE;AAC9D,MAAI,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,QAAQ,CAAC;AACrC,MAAI,CAAC,IAAI,UAAW,IAAI,CAAC,IAAI,MAAM,KAAO,IAAI,CAAC,IAAI,QAAQ,CAAE;AAC7D,MAAI,CAAC,IAAI,SAAS,IAAI,CAAC,IAAI,EAAE;AAG7B,MAAI,EAAE,IAAI,UAAU,IAAI,CAAC,IAAI,QAAQ,CAAC;AACtC,MAAI,EAAE,IAAI,UAAW,IAAI,CAAC,IAAI,MAAM,KAAO,IAAI,CAAC,IAAI,QAAQ,CAAE;AAC9D,MAAI,EAAE,IAAI,UAAU,IAAI,CAAC,IAAI,OAAO,CAAC;AACrC,MAAI,EAAE,IAAI,UAAW,IAAI,CAAC,IAAI,MAAM,KAAO,IAAI,CAAC,IAAI,QAAQ,CAAE;AAC9D,MAAI,EAAE,IAAI,UAAW,IAAI,CAAC,IAAI,OAAO,KAAO,IAAI,CAAC,IAAI,QAAQ,CAAE;AAC/D,MAAI,EAAE,IAAI,UAAU,IAAI,CAAC,IAAI,QAAQ,CAAC;AACtC,MAAI,EAAE,IAAI,UAAW,IAAI,CAAC,IAAI,MAAM,KAAO,IAAI,EAAE,IAAI,QAAQ,CAAE;AAC/D,MAAI,EAAE,IAAI,SAAS,IAAI,EAAE,IAAI,EAAE;AAC/B,MAAI,EAAE,IAAI,UAAU,IAAI,EAAE,IAAI,QAAQ,CAAC;AACvC,MAAI,EAAE,IAAI,UAAW,IAAI,EAAE,IAAI,MAAM,KAAO,IAAI,EAAE,IAAI,QAAQ,CAAE;AAChE,MAAI,EAAE,IAAI,UAAU,IAAI,EAAE,IAAI,OAAO,CAAC;AACtC,MAAI,EAAE,IAAI,UAAW,IAAI,EAAE,IAAI,MAAM,KAAO,IAAI,EAAE,IAAI,QAAQ,CAAE;AAChE,MAAI,EAAE,IAAI,UAAW,IAAI,EAAE,IAAI,OAAO,KAAO,IAAI,EAAE,IAAI,QAAQ,CAAE;AACjE,MAAI,EAAE,IAAI,UAAU,IAAI,EAAE,IAAI,QAAQ,CAAC;AACvC,MAAI,EAAE,IAAI,UAAW,IAAI,EAAE,IAAI,MAAM,KAAO,IAAI,EAAE,IAAI,QAAQ,CAAE;AAChE,MAAI,EAAE,IAAI,SAAS,IAAI,EAAE,IAAI,EAAE;AAE/B,SAAO,IAAI,KAAK,EAAE;AACpB;AAEO,SAAS,OAAO,GAAuB;AAC5C,MAAI,EAAE,WAAW,IAAI;AACnB,UAAM,IAAI,MAAM,gBAAgB;AAAA,EAClC;AAEA,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,IAAgB,QAAQ,OAAO,CAAC;AAGtC,MACE,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,CAAC,CAAC,MAAM,OACd,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,OACf,IAAI,EAAE,EAAE,CAAC,MAAM,KAAM;AACrB,UAAM,IAAI,MAAM,0BAA0B;AAAA,EAC5C;AAEA,QAAM,KAAK,IAAI,WAAW,EAAE;AAG5B,KAAG,CAAC,IAAK,IAAI,EAAE,CAAC,CAAC,KAAK,IAAK,IAAI,EAAE,CAAC,CAAC;AACnC,KAAG,CAAC,IAAK,IAAI,EAAE,CAAC,CAAC,KAAK,IAAM,IAAI,EAAE,CAAC,CAAC,KAAK;AACzC,KAAG,CAAC,KAAM,IAAI,EAAE,CAAC,CAAC,IAAI,MAAM,IAAM,IAAI,EAAE,CAAC,CAAC,KAAK,IAAM,IAAI,EAAE,CAAC,CAAC,KAAK;AAClE,KAAG,CAAC,KAAM,IAAI,EAAE,CAAC,CAAC,IAAI,OAAO,IAAM,IAAI,EAAE,CAAC,CAAC,KAAK;AAChD,KAAG,CAAC,KAAM,IAAI,EAAE,CAAC,CAAC,IAAI,MAAM,IAAM,IAAI,EAAE,CAAC,CAAC,KAAK,IAAM,IAAI,EAAE,CAAC,CAAC,KAAK;AAClE,KAAG,CAAC,KAAM,IAAI,EAAE,CAAC,CAAC,IAAI,MAAM,IAAK,IAAI,EAAE,CAAC,CAAC;AAGzC,KAAG,CAAC,IAAK,IAAI,EAAE,EAAE,CAAC,KAAK,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK;AAC3C,KAAG,CAAC,KAAM,IAAI,EAAE,EAAE,CAAC,IAAI,MAAM,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK;AACrE,KAAG,CAAC,KAAM,IAAI,EAAE,EAAE,CAAC,IAAI,OAAO,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK;AAClD,KAAG,CAAC,KAAM,IAAI,EAAE,EAAE,CAAC,IAAI,MAAM,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK;AACrE,KAAG,EAAE,KAAM,IAAI,EAAE,EAAE,CAAC,IAAI,MAAM,IAAK,IAAI,EAAE,EAAE,CAAC;AAC5C,KAAG,EAAE,IAAK,IAAI,EAAE,EAAE,CAAC,KAAK,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK;AAC5C,KAAG,EAAE,KAAM,IAAI,EAAE,EAAE,CAAC,IAAI,MAAM,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK;AACtE,KAAG,EAAE,KAAM,IAAI,EAAE,EAAE,CAAC,IAAI,OAAO,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK;AACnD,KAAG,EAAE,KAAM,IAAI,EAAE,EAAE,CAAC,IAAI,MAAM,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK,IAAM,IAAI,EAAE,EAAE,CAAC,KAAK;AACtE,KAAG,EAAE,KAAM,IAAI,EAAE,EAAE,CAAC,IAAI,MAAM,IAAK,IAAI,EAAE,EAAE,CAAC;AAE5C,SAAO;AACT;","names":[]}