{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { approxEqual, memo, notUndefined } from './utils'\n\nexport * from './utils'\n\n//\n\ntype ScrollDirection = 'forward' | 'backward'\n\ntype ScrollAlignment = 'start' | 'center' | 'end' | 'auto'\n\ntype ScrollBehavior = 'auto' | 'smooth'\n\nexport interface ScrollToOptions {\n  align?: ScrollAlignment\n  behavior?: ScrollBehavior\n}\n\ntype ScrollToOffsetOptions = ScrollToOptions\n\ntype ScrollToIndexOptions = ScrollToOptions\n\nexport interface Range {\n  startIndex: number\n  endIndex: number\n  overscan: number\n  count: number\n}\n\ntype Key = number | string\n\nexport interface VirtualItem {\n  key: Key\n  index: number\n  start: number\n  end: number\n  size: number\n  lane: number\n}\n\ninterface Rect {\n  width: number\n  height: number\n}\n\n//\n\nexport const defaultKeyExtractor = (index: number) => index\n\nexport const defaultRangeExtractor = (range: Range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0)\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport const observeElementRect = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = (rect: Rect) => {\n    const { width, height } = rect\n    cb({ width: Math.round(width), height: Math.round(height) })\n  }\n\n  handler(element.getBoundingClientRect())\n\n  const observer = new ResizeObserver((entries) => {\n    const entry = entries[0]\n    if (entry?.borderBoxSize) {\n      const box = entry.borderBoxSize[0]\n      if (box) {\n        handler({ width: box.inlineSize, height: box.blockSize })\n        return\n      }\n    }\n    handler(element.getBoundingClientRect())\n  })\n\n  observer.observe(element, { box: 'border-box' })\n\n  return () => {\n    observer.unobserve(element)\n  }\n}\n\nexport const observeWindowRect = (\n  instance: Virtualizer<Window, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb({ width: element.innerWidth, height: element.innerHeight })\n  }\n  handler()\n\n  element.addEventListener('resize', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('resize', handler)\n  }\n}\n\nexport const observeElementOffset = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: (offset: number) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb(element[instance.options.horizontal ? 'scrollLeft' : 'scrollTop'])\n  }\n  handler()\n\n  element.addEventListener('scroll', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('scroll', handler)\n  }\n}\n\nexport const observeWindowOffset = (\n  instance: Virtualizer<Window, any>,\n  cb: (offset: number) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb(element[instance.options.horizontal ? 'scrollX' : 'scrollY'])\n  }\n  handler()\n\n  element.addEventListener('scroll', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('scroll', handler)\n  }\n}\n\nexport const measureElement = <TItemElement extends Element>(\n  element: TItemElement,\n  entry: ResizeObserverEntry | undefined,\n  instance: Virtualizer<any, TItemElement>,\n) => {\n  if (entry?.borderBoxSize) {\n    const box = entry.borderBoxSize[0]\n    if (box) {\n      const size = Math.round(\n        box[instance.options.horizontal ? 'inlineSize' : 'blockSize'],\n      )\n      return size\n    }\n  }\n  return Math.round(\n    element.getBoundingClientRect()[\n      instance.options.horizontal ? 'width' : 'height'\n    ],\n  )\n}\n\nexport const windowScroll = <T extends Window>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport const elementScroll = <T extends Element>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport interface VirtualizerOptions<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  // Required from the user\n  count: number\n  getScrollElement: () => TScrollElement | null\n  estimateSize: (index: number) => number\n\n  // Required from the framework adapter (but can be overridden)\n  scrollToFn: (\n    offset: number,\n    options: { adjustments?: number; behavior?: ScrollBehavior },\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => void\n  observeElementRect: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (rect: Rect) => void,\n  ) => void | (() => void)\n  observeElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (offset: number) => void,\n  ) => void | (() => void)\n\n  // Optional\n  debug?: any\n  initialRect?: Rect\n  onChange?: (instance: Virtualizer<TScrollElement, TItemElement>) => void\n  measureElement?: (\n    element: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => number\n  overscan?: number\n  horizontal?: boolean\n  paddingStart?: number\n  paddingEnd?: number\n  scrollPaddingStart?: number\n  scrollPaddingEnd?: number\n  initialOffset?: number\n  getItemKey?: (index: number) => Key\n  rangeExtractor?: (range: Range) => number[]\n  scrollMargin?: number\n  scrollingDelay?: number\n  indexAttribute?: string\n  initialMeasurementsCache?: VirtualItem[]\n  lanes?: number\n}\n\nexport class Virtualizer<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  private unsubs: (void | (() => void))[] = []\n  options!: Required<VirtualizerOptions<TScrollElement, TItemElement>>\n  scrollElement: TScrollElement | null = null\n  isScrolling: boolean = false\n  private isScrollingTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private scrollToIndexTimeoutId: ReturnType<typeof setTimeout> | null = null\n  measurementsCache: VirtualItem[] = []\n  private itemSizeCache = new Map<Key, number>()\n  private pendingMeasuredCacheIndexes: number[] = []\n  private scrollRect: Rect\n  scrollOffset: number\n  scrollDirection: ScrollDirection | null = null\n  private scrollAdjustments: number = 0\n  measureElementCache = new Map<Key, TItemElement>()\n  private observer = (() => {\n    let _ro: ResizeObserver | null = null\n\n    const get = () => {\n      if (_ro) {\n        return _ro\n      } else if (typeof ResizeObserver !== 'undefined') {\n        return (_ro = new ResizeObserver((entries) => {\n          entries.forEach((entry) => {\n            this._measureElement(entry.target as TItemElement, entry)\n          })\n        }))\n      } else {\n        return null\n      }\n    }\n\n    return {\n      disconnect: () => get()?.disconnect(),\n      observe: (target: Element) =>\n        get()?.observe(target, { box: 'border-box' }),\n      unobserve: (target: Element) => get()?.unobserve(target),\n    }\n  })()\n  range: { startIndex: number; endIndex: number } = {\n    startIndex: 0,\n    endIndex: 0,\n  }\n\n  constructor(opts: VirtualizerOptions<TScrollElement, TItemElement>) {\n    this.setOptions(opts)\n    this.scrollRect = this.options.initialRect\n    this.scrollOffset = this.options.initialOffset\n    this.measurementsCache = this.options.initialMeasurementsCache\n    this.measurementsCache.forEach((item) => {\n      this.itemSizeCache.set(item.key, item.size)\n    })\n\n    this.maybeNotify()\n  }\n\n  setOptions = (opts: VirtualizerOptions<TScrollElement, TItemElement>) => {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: () => {},\n      measureElement,\n      initialRect: { width: 0, height: 0 },\n      scrollMargin: 0,\n      scrollingDelay: 150,\n      indexAttribute: 'data-index',\n      initialMeasurementsCache: [],\n      lanes: 1,\n      ...opts,\n    }\n  }\n\n  private notify = () => {\n    this.options.onChange?.(this)\n  }\n\n  private cleanup = () => {\n    this.unsubs.filter(Boolean).forEach((d) => d!())\n    this.unsubs = []\n    this.scrollElement = null\n  }\n\n  _didMount = () => {\n    this.measureElementCache.forEach(this.observer.observe)\n    return () => {\n      this.observer.disconnect()\n      this.cleanup()\n    }\n  }\n\n  _willUpdate = () => {\n    const scrollElement = this.options.getScrollElement()\n\n    if (this.scrollElement !== scrollElement) {\n      this.cleanup()\n\n      this.scrollElement = scrollElement\n\n      this._scrollToOffset(this.scrollOffset, {\n        adjustments: undefined,\n        behavior: undefined,\n      })\n\n      this.unsubs.push(\n        this.options.observeElementRect(this, (rect) => {\n          const prev = this.scrollRect\n          this.scrollRect = rect\n          if (\n            this.options.horizontal\n              ? rect.width !== prev.width\n              : rect.height !== prev.height\n          ) {\n            this.maybeNotify()\n          }\n        }),\n      )\n\n      this.unsubs.push(\n        this.options.observeElementOffset(this, (offset) => {\n          this.scrollAdjustments = 0\n\n          if (this.scrollOffset === offset) {\n            return\n          }\n\n          if (this.isScrollingTimeoutId !== null) {\n            clearTimeout(this.isScrollingTimeoutId)\n            this.isScrollingTimeoutId = null\n          }\n\n          this.isScrolling = true\n          this.scrollDirection =\n            this.scrollOffset < offset ? 'forward' : 'backward'\n          this.scrollOffset = offset\n\n          this.maybeNotify()\n\n          this.isScrollingTimeoutId = setTimeout(() => {\n            this.isScrollingTimeoutId = null\n            this.isScrolling = false\n            this.scrollDirection = null\n\n            this.maybeNotify()\n          }, this.options.scrollingDelay)\n        }),\n      )\n    }\n  }\n\n  private getSize = () => {\n    return this.scrollRect[this.options.horizontal ? 'width' : 'height']\n  }\n\n  private memoOptions = memo(\n    () => [\n      this.options.count,\n      this.options.paddingStart,\n      this.options.scrollMargin,\n      this.options.getItemKey,\n    ],\n    (count, paddingStart, scrollMargin, getItemKey) => {\n      this.pendingMeasuredCacheIndexes = []\n      return {\n        count,\n        paddingStart,\n        scrollMargin,\n        getItemKey,\n      }\n    },\n    {\n      key: false,\n    },\n  )\n\n  private getFurthestMeasurement = (\n    measurements: VirtualItem[],\n    index: number,\n  ) => {\n    const furthestMeasurementsFound = new Map<number, true>()\n    const furthestMeasurements = new Map<number, VirtualItem>()\n    for (let m = index - 1; m >= 0; m--) {\n      const measurement = measurements[m]!\n\n      if (furthestMeasurementsFound.has(measurement.lane)) {\n        continue\n      }\n\n      const previousFurthestMeasurement = furthestMeasurements.get(\n        measurement.lane,\n      )\n      if (\n        previousFurthestMeasurement == null ||\n        measurement.end > previousFurthestMeasurement.end\n      ) {\n        furthestMeasurements.set(measurement.lane, measurement)\n      } else if (measurement.end < previousFurthestMeasurement.end) {\n        furthestMeasurementsFound.set(measurement.lane, true)\n      }\n\n      if (furthestMeasurementsFound.size === this.options.lanes) {\n        break\n      }\n    }\n\n    return furthestMeasurements.size === this.options.lanes\n      ? Array.from(furthestMeasurements.values()).sort(\n          (a, b) => a.end - b.end,\n        )[0]\n      : undefined\n  }\n\n  private getMeasurements = memo(\n    () => [this.memoOptions(), this.itemSizeCache],\n    ({ count, paddingStart, scrollMargin, getItemKey }, itemSizeCache) => {\n      const min =\n        this.pendingMeasuredCacheIndexes.length > 0\n          ? Math.min(...this.pendingMeasuredCacheIndexes)\n          : 0\n      this.pendingMeasuredCacheIndexes = []\n\n      const measurements = this.measurementsCache.slice(0, min)\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i)\n\n        const furthestMeasurement =\n          this.options.lanes === 1\n            ? measurements[i - 1]\n            : this.getFurthestMeasurement(measurements, i)\n\n        const start = furthestMeasurement\n          ? furthestMeasurement.end\n          : paddingStart + scrollMargin\n\n        const measuredSize = itemSizeCache.get(key)\n        const size =\n          typeof measuredSize === 'number'\n            ? measuredSize\n            : this.options.estimateSize(i)\n\n        const end = start + size\n\n        const lane = furthestMeasurement\n          ? furthestMeasurement.lane\n          : i % this.options.lanes\n\n        measurements[i] = {\n          index: i,\n          start,\n          size,\n          end,\n          key,\n          lane,\n        }\n      }\n\n      this.measurementsCache = measurements\n\n      return measurements\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug,\n    },\n  )\n\n  calculateRange = memo(\n    () => [this.getMeasurements(), this.getSize(), this.scrollOffset],\n    (measurements, outerSize, scrollOffset) => {\n      return (this.range = calculateRange({\n        measurements,\n        outerSize,\n        scrollOffset,\n      }))\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug,\n    },\n  )\n\n  private maybeNotify = memo(\n    () => {\n      const range = this.calculateRange()\n\n      return [range.startIndex, range.endIndex, this.isScrolling]\n    },\n    () => {\n      this.notify()\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'maybeNotify',\n      debug: () => this.options.debug,\n      initialDeps: [\n        this.range.startIndex,\n        this.range.endIndex,\n        this.isScrolling,\n      ],\n    },\n  )\n\n  private getIndexes = memo(\n    () => [\n      this.options.rangeExtractor,\n      this.calculateRange(),\n      this.options.overscan,\n      this.options.count,\n    ],\n    (rangeExtractor, range, overscan, count) => {\n      return rangeExtractor({\n        ...range,\n        overscan,\n        count,\n      })\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  indexFromElement = (node: TItemElement) => {\n    const attributeName = this.options.indexAttribute\n    const indexStr = node.getAttribute(attributeName)\n\n    if (!indexStr) {\n      console.warn(\n        `Missing attribute name '${attributeName}={index}' on measured element.`,\n      )\n      return -1\n    }\n\n    return parseInt(indexStr, 10)\n  }\n\n  private _measureElement = (\n    node: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n  ) => {\n    const index = this.indexFromElement(node)\n\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n\n    const prevNode = this.measureElementCache.get(item.key)\n\n    if (!node.isConnected) {\n      this.observer.unobserve(node)\n      if (node === prevNode) {\n        this.measureElementCache.delete(item.key)\n      }\n      return\n    }\n\n    if (prevNode !== node) {\n      if (prevNode) {\n        this.observer.unobserve(prevNode)\n      }\n      this.observer.observe(node)\n      this.measureElementCache.set(item.key, node)\n    }\n\n    const measuredItemSize = this.options.measureElement(node, entry, this)\n\n    const itemSize = this.itemSizeCache.get(item.key) ?? item.size\n\n    const delta = measuredItemSize - itemSize\n\n    if (delta !== 0) {\n      if (item.start < this.scrollOffset) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('correction', delta)\n        }\n\n        this._scrollToOffset(this.scrollOffset, {\n          adjustments: (this.scrollAdjustments += delta),\n          behavior: undefined,\n        })\n      }\n\n      this.pendingMeasuredCacheIndexes.push(index)\n\n      this.itemSizeCache = new Map(\n        this.itemSizeCache.set(item.key, measuredItemSize),\n      )\n\n      this.notify()\n    }\n  }\n\n  measureElement = (node: TItemElement | null) => {\n    if (!node) {\n      return\n    }\n\n    this._measureElement(node, undefined)\n  }\n\n  getVirtualItems = memo(\n    () => [this.getIndexes(), this.getMeasurements()],\n    (indexes, measurements) => {\n      const virtualItems: VirtualItem[] = []\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        const i = indexes[k]!\n        const measurement = measurements[i]!\n\n        virtualItems.push(measurement)\n      }\n\n      return virtualItems\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  getVirtualItemForOffset = (offset: number) => {\n    const measurements = this.getMeasurements()\n\n    return notUndefined(\n      measurements[\n        findNearestBinarySearch(\n          0,\n          measurements.length - 1,\n          (index: number) => notUndefined(measurements[index]).start,\n          offset,\n        )\n      ],\n    )\n  }\n\n  getOffsetForAlignment = (toOffset: number, align: ScrollAlignment) => {\n    const size = this.getSize()\n\n    if (align === 'auto') {\n      if (toOffset <= this.scrollOffset) {\n        align = 'start'\n      } else if (toOffset >= this.scrollOffset + size) {\n        align = 'end'\n      } else {\n        align = 'start'\n      }\n    }\n\n    if (align === 'start') {\n      toOffset = toOffset\n    } else if (align === 'end') {\n      toOffset = toOffset - size\n    } else if (align === 'center') {\n      toOffset = toOffset - size / 2\n    }\n\n    const scrollSizeProp = this.options.horizontal\n      ? 'scrollWidth'\n      : 'scrollHeight'\n    const scrollSize = this.scrollElement\n      ? 'document' in this.scrollElement\n        ? this.scrollElement.document.documentElement[scrollSizeProp]\n        : this.scrollElement[scrollSizeProp]\n      : 0\n\n    const maxOffset = scrollSize - this.getSize()\n\n    return Math.max(Math.min(maxOffset, toOffset), 0)\n  }\n\n  getOffsetForIndex = (index: number, align: ScrollAlignment = 'auto') => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    const measurement = notUndefined(this.getMeasurements()[index])\n\n    if (align === 'auto') {\n      if (\n        measurement.end >=\n        this.scrollOffset + this.getSize() - this.options.scrollPaddingEnd\n      ) {\n        align = 'end'\n      } else if (\n        measurement.start <=\n        this.scrollOffset + this.options.scrollPaddingStart\n      ) {\n        align = 'start'\n      } else {\n        return [this.scrollOffset, align] as const\n      }\n    }\n\n    const toOffset =\n      align === 'end'\n        ? measurement.end + this.options.scrollPaddingEnd\n        : measurement.start - this.options.scrollPaddingStart\n\n    return [this.getOffsetForAlignment(toOffset, align), align] as const\n  }\n\n  private isDynamicMode = () => this.measureElementCache.size > 0\n\n  private cancelScrollToIndex = () => {\n    if (this.scrollToIndexTimeoutId !== null) {\n      clearTimeout(this.scrollToIndexTimeoutId)\n      this.scrollToIndexTimeoutId = null\n    }\n  }\n\n  scrollToOffset = (\n    toOffset: number,\n    { align = 'start', behavior }: ScrollToOffsetOptions = {},\n  ) => {\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  scrollToIndex = (\n    index: number,\n    { align: initialAlign = 'auto', behavior }: ScrollToIndexOptions = {},\n  ) => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    const [toOffset, align] = this.getOffsetForIndex(index, initialAlign)\n\n    this._scrollToOffset(toOffset, { adjustments: undefined, behavior })\n\n    if (behavior !== 'smooth' && this.isDynamicMode()) {\n      this.scrollToIndexTimeoutId = setTimeout(() => {\n        this.scrollToIndexTimeoutId = null\n\n        const elementInDOM = this.measureElementCache.has(\n          this.options.getItemKey(index),\n        )\n\n        if (elementInDOM) {\n          const [toOffset] = this.getOffsetForIndex(index, align)\n\n          if (!approxEqual(toOffset, this.scrollOffset)) {\n            this.scrollToIndex(index, { align, behavior })\n          }\n        } else {\n          this.scrollToIndex(index, { align, behavior })\n        }\n      })\n    }\n  }\n\n  scrollBy = (delta: number, { behavior }: ScrollToOffsetOptions = {}) => {\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.scrollOffset + delta, {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  getTotalSize = () =>\n    (this.getMeasurements()[this.options.count - 1]?.end ||\n      this.options.paddingStart) -\n    this.options.scrollMargin +\n    this.options.paddingEnd\n\n  private _scrollToOffset = (\n    offset: number,\n    {\n      adjustments,\n      behavior,\n    }: {\n      adjustments: number | undefined\n      behavior: ScrollBehavior | undefined\n    },\n  ) => {\n    this.options.scrollToFn(offset, { behavior, adjustments }, this)\n  }\n\n  measure = () => {\n    this.itemSizeCache = new Map()\n    this.notify()\n  }\n}\n\nconst findNearestBinarySearch = (\n  low: number,\n  high: number,\n  getCurrentValue: (i: number) => number,\n  value: number,\n) => {\n  while (low <= high) {\n    const middle = ((low + high) / 2) | 0\n    const currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n}: {\n  measurements: VirtualItem[]\n  outerSize: number\n  scrollOffset: number\n}) {\n  const count = measurements.length - 1\n  const getOffset = (index: number) => measurements[index]!.start\n\n  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset)\n  let endIndex = startIndex\n\n  while (\n    endIndex < count &&\n    measurements[endIndex]!.end < scrollOffset + outerSize\n  ) {\n    endIndex++\n  }\n\n  return { startIndex, endIndex }\n}\n"],"names":["defaultKeyExtractor","index","defaultRangeExtractor","range","start","Math","max","startIndex","overscan","end","min","endIndex","count","arr","i","push","observeElementRect","instance","cb","element","scrollElement","handler","rect","width","height","round","getBoundingClientRect","observer","ResizeObserver","entries","entry","borderBoxSize","box","inlineSize","blockSize","observe","unobserve","observeWindowRect","innerWidth","innerHeight","addEventListener","passive","removeEventListener","observeElementOffset","options","horizontal","observeWindowOffset","measureElement","size","windowScroll","offset","adjustments","behavior","toOffset","scrollTo","elementScroll","Virtualizer","opts","unsubs","isScrolling","isScrollingTimeoutId","scrollToIndexTimeoutId","measurementsCache","itemSizeCache","Map","pendingMeasuredCacheIndexes","scrollDirection","scrollAdjustments","measureElementCache","_ro","get","forEach","_measureElement","target","disconnect","setOptions","Object","key","value","_extends","debug","initialOffset","paddingStart","paddingEnd","scrollPaddingStart","scrollPaddingEnd","getItemKey","rangeExtractor","onChange","initialRect","scrollMargin","scrollingDelay","indexAttribute","initialMeasurementsCache","lanes","notify","cleanup","filter","Boolean","d","_didMount","_willUpdate","getScrollElement","_scrollToOffset","scrollOffset","undefined","prev","scrollRect","maybeNotify","clearTimeout","setTimeout","getSize","memoOptions","memo","getFurthestMeasurement","measurements","furthestMeasurementsFound","furthestMeasurements","m","measurement","has","lane","previousFurthestMeasurement","set","Array","from","values","sort","a","b","getMeasurements","length","slice","furthestMeasurement","measuredSize","estimateSize","process","env","NODE_ENV","calculateRange","outerSize","initialDeps","getIndexes","indexFromElement","node","attributeName","indexStr","getAttribute","console","warn","parseInt","item","prevNode","isConnected","measuredItemSize","itemSize","delta","info","getVirtualItems","indexes","virtualItems","k","len","getVirtualItemForOffset","notUndefined","findNearestBinarySearch","getOffsetForAlignment","align","scrollSizeProp","scrollSize","document","documentElement","maxOffset","getOffsetForIndex","isDynamicMode","cancelScrollToIndex","scrollToOffset","scrollToIndex","initialAlign","elementInDOM","approxEqual","scrollBy","getTotalSize","scrollToFn","measure","low","high","getCurrentValue","middle","currentValue","getOffset"],"mappings":"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"}