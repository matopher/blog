{"version":3,"file":"timing-DBaAPTKQ.js","sources":["../../src/_internal/cli/util/checkStudioDependencyVersions.ts","../../src/_internal/cli/util/checkRequiredDependencies.ts","../../src/_internal/cli/util/timing.ts"],"sourcesContent":["import {type PackageJson} from '@sanity/cli'\nimport {generateHelpUrl} from '@sanity/generate-help-url'\nimport fs from 'fs'\nimport path from 'path'\nimport resolveFrom from 'resolve-from'\nimport semver, {type SemVer} from 'semver'\n\ninterface PackageInfo {\n  name: string\n  supported: string[]\n  deprecatedBelow: null | string\n  installed: SemVer\n  isUnsupported: boolean\n  isDeprecated: boolean\n  isUntested: boolean\n}\n\n// NOTE: when doing changes here, also remember to update versions in help docs at\n// https://sanity.io/admin/structure/docs;helpArticle;upgrade-packages\nconst PACKAGES = [\n  {name: 'react', supported: ['^18'], deprecatedBelow: null},\n  {name: 'react-dom', supported: ['^18'], deprecatedBelow: null},\n]\n\nexport function checkStudioDependencyVersions(workDir: string): void {\n  const manifest = readPackageJson(path.join(workDir, 'package.json'))\n  const dependencies = {...manifest.dependencies, ...manifest.devDependencies}\n\n  const packageInfo = PACKAGES.map((pkg): PackageInfo | false => {\n    const dependency = dependencies[pkg.name]\n    if (!dependency) {\n      return false\n    }\n\n    const manifestPath = resolveFrom.silent(workDir, path.join(pkg.name, 'package.json'))\n    const installed = semver.coerce(\n      manifestPath ? readPackageJson(manifestPath).version : dependency.replace(/[\\D.]/g, ''),\n    )\n\n    if (!installed) {\n      return false\n    }\n\n    const supported = pkg.supported.join(' || ')\n\n    // \"Untested\" is usually the case where we have not upgraded the React version requirements\n    // before a release, but given that is usually works in a backwards-compatible way, we want\n    // to indicate that it's _untested_, not necessarily _unsupported_\n    // Ex: Installed is react@19.0.0, but we've only _tested_ with react@^18\n    const isUntested = !semver.satisfies(installed, supported) && semver.gtr(installed, supported)\n\n    // \"Unsupported\" in that the installed version is _lower than_ the minimum version\n    // Ex: Installed is react@15.0.0, but we require react@^16\n    const isUnsupported = !semver.satisfies(installed, supported) && !isUntested\n\n    // \"Deprecated\" in that we will stop supporting it at some point in the near future,\n    // so users should be prompted to upgrade\n    const isDeprecated = pkg.deprecatedBelow ? semver.ltr(installed, pkg.deprecatedBelow) : false\n\n    return {\n      ...pkg,\n      installed,\n      isUnsupported,\n      isDeprecated,\n      isUntested,\n    }\n  })\n\n  const installedPackages = packageInfo.filter((inp): inp is PackageInfo => inp !== false)\n  const unsupported = installedPackages.filter((pkg) => pkg.isUnsupported)\n  const deprecated = installedPackages.filter((pkg) => !pkg.isUnsupported && pkg.isDeprecated)\n  const untested = installedPackages.filter((pkg) => pkg.isUntested)\n\n  if (deprecated.length > 0) {\n    // eslint-disable-next-line no-console\n    console.warn(`\n[WARN] The following package versions have been deprecated and should be upgraded:\n\n  ${listPackages(deprecated)}\n\nSupport for these will be removed in a future release!\n\n  ${getUpgradeInstructions(deprecated)}\n`)\n  }\n\n  if (untested.length > 0) {\n    // eslint-disable-next-line no-console\n    console.warn(`\n[WARN] The following package versions have not yet been marked as supported:\n\n  ${listPackages(untested)}\n\nYou _may_ encounter bugs while using these versions.\n\n  ${getDowngradeInstructions(untested)}\n`)\n  }\n\n  if (unsupported.length > 0) {\n    // eslint-disable-next-line no-console\n    console.error(`\n[ERROR] The following package versions are no longer supported and needs to be upgraded:\n\n  ${listPackages(unsupported)}\n\n  ${getUpgradeInstructions(unsupported)}\n`)\n    process.exit(1)\n  }\n}\n\nfunction listPackages(pkgs: PackageInfo[]) {\n  return pkgs\n    .map(\n      (pkg) =>\n        `${pkg.name} (installed: ${pkg.installed}, want: ${\n          pkg.deprecatedBelow || pkg.supported.join(' || ')\n        })`,\n    )\n    .join('\\n  ')\n}\n\nfunction getUpgradeInstructions(pkgs: PackageInfo[]) {\n  const inst = pkgs\n    .map((pkg) => {\n      const [highestSupported] = pkg.supported\n        .map((version) => (semver.coerce(version) || {version: ''}).version)\n        .sort(semver.rcompare)\n\n      return `\"${pkg.name}@${highestSupported}\"`\n    })\n    .join(' ')\n\n  return `To upgrade, run either:\n\n  npm install ${inst}\n\n  or\n\n  yarn add ${inst}\n\n  or\n\n  pnpm add ${inst}\n\n\nRead more at ${generateHelpUrl('upgrade-packages')}`\n}\n\nfunction getDowngradeInstructions(pkgs: PackageInfo[]) {\n  const inst = pkgs\n    .map((pkg) => {\n      const [highestSupported] = pkg.supported\n        .map((version) => (semver.coerce(version) || {version: ''}).version)\n        .sort(semver.rcompare)\n\n      return `\"${pkg.name}@${highestSupported}\"`\n    })\n    .join(' ')\n\n  return `To downgrade, run either:\n\n  yarn add ${inst}\n\n  or\n\n  npm install ${inst}\n\n  or\n\n  pnpm install ${inst}`\n}\n\nfunction readPackageJson(filePath: string): PackageJson {\n  try {\n    // eslint-disable-next-line no-sync\n    return JSON.parse(fs.readFileSync(filePath, 'utf8'))\n  } catch (err) {\n    throw new Error(`Failed to read \"${filePath}\": ${err.message}`)\n  }\n}\n","import {type CliCommandContext, type PackageJson} from '@sanity/cli'\nimport execa from 'execa'\nimport {readFile} from 'fs/promises'\nimport oneline from 'oneline'\nimport path from 'path'\nimport resolveFrom from 'resolve-from'\nimport semver, {type SemVer} from 'semver'\n\nimport {peerDependencies} from '../../../../package.json'\n\nconst defaultStudioManifestProps: PartialPackageManifest = {\n  name: 'studio',\n  version: '1.0.0',\n}\n\ninterface CheckResult {\n  didInstall: boolean\n}\n\n/**\n * Checks that the studio has declared and installed the required dependencies\n * needed by the Sanity modules. While we generally use regular, explicit\n * dependencies in modules, there are certain dependencies that are better\n * served being peer dependencies, such as react and styled-components.\n *\n * If these dependencies are not installed/declared, we want to prompt the user\n * whether or not to add them to `package.json` and install them\n */\nexport async function checkRequiredDependencies(context: CliCommandContext): Promise<CheckResult> {\n  const {workDir: studioPath, output} = context\n  const [studioPackageManifest, installedStyledComponentsVersion] = await Promise.all([\n    await readPackageManifest(path.join(studioPath, 'package.json'), defaultStudioManifestProps),\n    await readModuleVersion(studioPath, 'styled-components'),\n  ])\n\n  const wantedStyledComponentsVersionRange = peerDependencies['styled-components']\n\n  // The studio _must_ now declare `styled-components` as a dependency. If it's not there,\n  // we'll want to automatically _add it_ to the manifest and tell the user to reinstall\n  // dependencies before running whatever command was being run\n  const declaredStyledComponentsVersion = studioPackageManifest.dependencies['styled-components']\n  if (!declaredStyledComponentsVersion) {\n    const [file, ...args] = process.argv\n    const deps = {'styled-components': wantedStyledComponentsVersionRange}\n    await installDependencies(deps, context)\n\n    // Re-run the same command (sanity dev/sanity build etc) after installation,\n    // as it can have shifted the entire `node_modules` folder around, result in\n    // broken assumptions about installation paths. This is a hack, and should be\n    // solved properly.\n    await execa(file, args, {cwd: studioPath, stdio: 'inherit'})\n    return {didInstall: true}\n  }\n\n  // Theoretically the version specified in package.json could be incorrect, eg `foo`\n  let minDeclaredStyledComponentsVersion: SemVer | null = null\n  try {\n    minDeclaredStyledComponentsVersion = semver.minVersion(declaredStyledComponentsVersion)\n  } catch (err) {\n    // Intentional fall-through (variable will be left as null, throwing below)\n  }\n\n  if (!minDeclaredStyledComponentsVersion) {\n    throw new Error(oneline`\n      Declared dependency \\`styled-components\\` has an invalid version range:\n      \\`${declaredStyledComponentsVersion}\\`.\n    `)\n  }\n\n  // The declared version should be semver-compatible with the version specified as a\n  // peer dependency in `sanity`. If not, we should tell the user to change it.\n  //\n  // Exception: Ranges are hard to compare. `>=5.0.0 && <=5.3.2 || ^6`... Comparing this\n  // to anything is going to be challenging, so only compare \"simple\" ranges/versions\n  // (^x.x.x / ~x.x.x / x.x.x)\n  if (\n    isComparableRange(declaredStyledComponentsVersion) &&\n    !semver.satisfies(minDeclaredStyledComponentsVersion, wantedStyledComponentsVersionRange)\n  ) {\n    output.warn(oneline`\n      Declared version of styled-components (${declaredStyledComponentsVersion})\n      is not compatible with the version required by sanity (${wantedStyledComponentsVersionRange}).\n      This might cause problems!\n    `)\n  }\n\n  // Ensure the studio has _installed_ a version of `styled-components`\n  if (!installedStyledComponentsVersion) {\n    throw new Error(oneline`\n      Declared dependency \\`styled-components\\` is not installed - run\n      \\`npm install\\`, \\`yarn install\\` or \\`pnpm install\\` to install it before re-running this command.\n    `)\n  }\n\n  // The studio should have an _installed_ version of `styled-components`, and it should\n  // be semver compatible with the version specified in `sanity` peer dependencies.\n  if (!semver.satisfies(installedStyledComponentsVersion, wantedStyledComponentsVersionRange)) {\n    output.warn(oneline`\n      Installed version of styled-components (${installedStyledComponentsVersion})\n      is not compatible with the version required by sanity (${wantedStyledComponentsVersionRange}).\n      This might cause problems!\n    `)\n  }\n\n  return {didInstall: false}\n}\n\n/**\n * Reads the version number of the _installed_ module, or returns `null` if not found\n *\n * @param studioPath - Path of the studio\n * @param moduleName - Name of module to get installed version for\n * @returns Version number, of null\n */\nasync function readModuleVersion(studioPath: string, moduleName: string): Promise<string | null> {\n  const manifestPath = resolveFrom.silent(studioPath, path.join(moduleName, 'package.json'))\n  return manifestPath ? (await readPackageManifest(manifestPath)).version : null\n}\n\n/**\n * Read the `package.json` file at the given path and return an object that guarantees\n * the presence of name, version, dependencies, dev dependencies and peer dependencies\n *\n * @param packageJsonPath - Path to package.json to read\n * @returns Reduced package.json with guarantees for name, version and dependency fields\n */\nasync function readPackageManifest(\n  packageJsonPath: string,\n  defaults: Partial<PartialPackageManifest> = {},\n): Promise<PackageManifest> {\n  let manifest: unknown\n  try {\n    manifest = {...defaults, ...(await readPackageJson(packageJsonPath))}\n  } catch (err) {\n    throw new Error(`Failed to read \"${packageJsonPath}\": ${err.message}`)\n  }\n\n  if (!isPackageManifest(manifest)) {\n    throw new Error(`Failed to read \"${packageJsonPath}\": Invalid package manifest`)\n  }\n\n  const {name, version, dependencies = {}, devDependencies = {}} = manifest\n  return {name, version, dependencies, devDependencies}\n}\n\n/**\n * Install the passed dependencies at the given version/version range,\n * prompting the user which package manager to use. We will try to detect\n * a package manager from files in the directory and show that as the default\n *\n * @param dependencies - Object of dependencies `({[package name]: version})`\n * @param context - CLI context\n */\nasync function installDependencies(\n  dependencies: Record<string, string>,\n  context: CliCommandContext,\n): Promise<void> {\n  const {output, prompt, workDir, cliPackageManager} = context\n  const packages: string[] = []\n\n  output.print('The Sanity studio needs to install missing dependencies:')\n  for (const [pkgName, version] of Object.entries(dependencies)) {\n    const declaration = `${pkgName}@${version}`\n    output.print(`- ${declaration}`)\n    packages.push(declaration)\n  }\n\n  if (!cliPackageManager) {\n    output.error(\n      'ERROR: Could not determine package manager choice - run `npm install` or equivalent',\n    )\n    return\n  }\n\n  const {getPackageManagerChoice, installNewPackages} = cliPackageManager\n  const {mostOptimal, chosen: pkgManager} = await getPackageManagerChoice(workDir, {prompt})\n  if (mostOptimal && pkgManager !== mostOptimal) {\n    output.warn(\n      `WARN: This project appears to be installed with or using ${mostOptimal} - using a different package manager _may_ result in errors.`,\n    )\n  }\n\n  await installNewPackages({packages, packageManager: pkgManager}, context)\n}\n\nfunction isPackageManifest(item: unknown): item is PartialPackageManifest {\n  return typeof item === 'object' && item !== null && 'name' in item && 'version' in item\n}\n\nfunction isComparableRange(range: string): boolean {\n  return /^[\\^~]?\\d+(\\.\\d+)?(\\.\\d+)?$/.test(range)\n}\n\nfunction readPackageJson(filePath: string): Promise<PackageJson> {\n  return readFile(filePath, 'utf8').then((res) => JSON.parse(res))\n}\n\ninterface PackageManifest extends DependencyDeclarations {\n  name: string\n  version: string\n}\n\ninterface PartialPackageManifest extends Partial<DependencyDeclarations> {\n  name: string\n  version: string\n}\n\ninterface DependencyDeclarations {\n  dependencies: Record<string, string | undefined>\n  devDependencies: Record<string, string | undefined>\n}\n","import {performance} from 'perf_hooks'\n\nexport interface TimeMeasurer {\n  start: (name: string) => void\n  end: (name: string) => number\n  getTimings: () => Record<string, number>\n}\n\nexport function getTimer(): TimeMeasurer {\n  const timings: Record<string, number> = {}\n  const startTimes: Record<string, number> = {}\n\n  function start(name: string): void {\n    if (typeof startTimes[name] !== 'undefined') {\n      throw new Error(`Timer \"${name}\" already started, cannot overwrite`)\n    }\n\n    startTimes[name] = performance.now()\n  }\n\n  function end(name: string): number {\n    if (typeof startTimes[name] === 'undefined') {\n      throw new Error(`Timer \"${name}\" never started, cannot end`)\n    }\n\n    timings[name] = performance.now() - startTimes[name]\n    return timings[name]\n  }\n\n  return {start, end, getTimings: () => timings}\n}\n"],"names":["PACKAGES","name","supported","deprecatedBelow","checkStudioDependencyVersions","workDir","manifest","readPackageJson","path","default","join","dependencies","devDependencies","packageInfo","map","pkg","dependency","manifestPath","resolveFrom","silent","installed","semver","coerce","version","replace","isUntested","satisfies","gtr","isUnsupported","isDeprecated","ltr","installedPackages","filter","inp","unsupported","deprecated","untested","length","console","warn","concat","listPackages","getUpgradeInstructions","getDowngradeInstructions","error","process","exit","pkgs","inst","highestSupported","sort","rcompare","filePath","JSON","parse","fs","readFileSync","err","Error","message","_a","_b","_c","_d","defaultStudioManifestProps","checkRequiredDependencies","context","studioPath","output","studioPackageManifest","installedStyledComponentsVersion","Promise","all","readPackageManifest","readModuleVersion","wantedStyledComponentsVersionRange","peerDependencies","declaredStyledComponentsVersion","file","args","argv","deps","installDependencies","execa","cwd","stdio","didInstall","minDeclaredStyledComponentsVersion","minVersion","oneline","__template","isComparableRange","moduleName","packageJsonPath","defaults","arguments","undefined","isPackageManifest","prompt","cliPackageManager","packages","print","pkgName","Object","entries","declaration","push","getPackageManagerChoice","installNewPackages","mostOptimal","chosen","pkgManager","packageManager","item","range","test","readFile","then","res","getTimer","timings","startTimes","start","performance","now","end","getTimings"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAMA,QAAW,GAAA,CACf;EAACC,MAAM,OAAS;EAAAC,SAAA,EAAW,CAAC,KAAK,CAAA;EAAGC,iBAAiB;AAAI,CAAA,EACzD;EAACF,MAAM,WAAa;EAAAC,SAAA,EAAW,CAAC,KAAK,CAAA;EAAGC,iBAAiB;AAAI,CAAA,CAC/D;AAEO,SAASC,8BAA8BC,OAAuB,EAAA;EACnE,MAAMC,WAAWC,iBAAgB,CAAAC,aAAA,CAAAC,OAAA,CAAKC,IAAK,CAAAL,OAAA,EAAS,cAAc,CAAC,CAAA;EACnE,MAAMM,eAAe;IAAC,GAAGL,SAASK,YAAc;IAAA,GAAGL,SAASM;GAAe;EAE3E,MAAMC,WAAc,GAAAb,QAAA,CAASc,GAAI,CAACC,GAA6B,IAAA;IACvD,MAAAC,UAAA,GAAaL,YAAa,CAAAI,GAAA,CAAId,IAAI,CAAA;IACxC,IAAI,CAACe,UAAY,EAAA;MACR,OAAA,KAAA;IACT;IAEM,MAAAC,YAAA,GAAeC,oBAAAA,CAAAA,QAAYC,MAAO,CAAAd,OAAA,EAASG,aAAAA,CAAAA,QAAKE,IAAK,CAAAK,GAAA,CAAId,IAAM,EAAA,cAAc,CAAC,CAAA;IACpF,MAAMmB,YAAYC,eAAAA,CAAAA,OAAO,CAAAC,MAAA,CACvBL,YAAA,GAAeV,kBAAgBU,YAAY,CAAA,CAAEM,UAAUP,UAAW,CAAAQ,OAAA,CAAQ,UAAU,EAAE,CAAA,CACxF;IAEA,IAAI,CAACJ,SAAW,EAAA;MACP,OAAA,KAAA;IACT;IAEA,MAAMlB,SAAY,GAAAa,GAAA,CAAIb,SAAU,CAAAQ,IAAA,CAAK,MAAM,CAAA;IAMrC,MAAAe,UAAA,GAAa,CAACJ,uBAAA,CAAOK,SAAU,CAAAN,SAAA,EAAWlB,SAAS,CAAK,IAAAmB,uBAAA,CAAOM,GAAI,CAAAP,SAAA,EAAWlB,SAAS,CAAA;IAI7F,MAAM0B,gBAAgB,CAACP,uBAAA,CAAOK,UAAUN,SAAW,EAAAlB,SAAS,KAAK,CAACuB,UAAA;IAI5D,MAAAI,YAAA,GAAed,IAAIZ,eAAkB,GAAAkB,eAAA,CAAAZ,OAAA,CAAOqB,IAAIV,SAAW,EAAAL,GAAA,CAAIZ,eAAe,CAAI,GAAA,KAAA;IAEjF,OAAA;MACL,GAAGY,GAAA;MACHK,SAAA;MACAQ,aAAA;MACAC,YAAA;MACAJ;IAAA,CACF;EAAA,CACD,CAAA;EAED,MAAMM,oBAAoBlB,WAAY,CAAAmB,MAAA,CAAQC,GAAA,IAA4BA,QAAQ,KAAK,CAAA;EACvF,MAAMC,cAAcH,iBAAkB,CAAAC,MAAA,CAAQjB,GAAA,IAAQA,IAAIa,aAAa,CAAA;EACjE,MAAAO,UAAA,GAAaJ,kBAAkBC,MAAO,CAACjB,OAAQ,CAACA,GAAA,CAAIa,aAAiB,IAAAb,GAAA,CAAIc,YAAY,CAAA;EAC3F,MAAMO,WAAWL,iBAAkB,CAAAC,MAAA,CAAQjB,GAAA,IAAQA,IAAIU,UAAU,CAAA;EAE7D,IAAAU,UAAA,CAAWE,SAAS,CAAG,EAAA;IAEjBC,OAAA,CAAAC,IAAA,CAAK,6FAGbC,MAAa,CAAAC,YAAA,CAAAN,UAAU,GAAC,kEAIxB,CAAA,CAAAK,MAAA,CAAAE,sBAAA,CAAuBP,UAAU,CAAA,EAAC,IACrC,CAAA,CAAA;EACC;EAEI,IAAAC,QAAA,CAASC,SAAS,CAAG,EAAA;IAEfC,OAAA,CAAAC,IAAA,CAAK,uFAGbC,MAAa,CAAAC,YAAA,CAAAL,QAAQ,GAAC,gEAItB,CAAA,CAAAI,MAAA,CAAAG,wBAAA,CAAyBP,QAAQ,CAAA,EAAC,IACrC,CAAA,CAAA;EACC;EAEI,IAAAF,WAAA,CAAYG,SAAS,CAAG,EAAA;IAElBC,OAAA,CAAAM,KAAA,CAAM,mGAGdJ,MAAa,CAAAC,YAAA,CAAAP,WAAW,GAAC,QAEzB,CAAA,CAAAM,MAAA,CAAAE,sBAAA,CAAuBR,WAAW,CAAA,EAAC,IACtC,CAAA,CAAA;IACGW,OAAA,CAAQC,KAAK,CAAC,CAAA;EAChB;AACF;AAEA,SAASL,aAAaM,IAAqB,EAAA;EACzC,OAAOA,IACJ,CAAAjC,GAAA,CACEC,GAAA,IACC,EAAG,CAAAyB,MAAA,CAAAzB,GAAA,CAAId,MAAI,eAAgB,CAAA,CAAAuC,MAAA,CAAAzB,GAAA,CAAIK,SAAS,EAAA,UAAA,CAAA,CACtCoB,WAAIrC,eAAmB,IAAAY,GAAA,CAAIb,SAAU,CAAAQ,IAAA,CAAK,MAAM,CAClD,EAAA,GAAA,CAAA,CACJ,CACCA,KAAK,MAAM,CAAA;AAChB;AAEA,SAASgC,uBAAuBK,IAAqB,EAAA;EACnD,MAAMC,IAAO,GAAAD,IAAA,CACVjC,GAAI,CAACC,GAAQ,IAAA;IACN,MAAA,CAACkC,gBAAgB,CAAI,GAAAlC,GAAA,CAAIb,UAC5BY,GAAI,CAACS,YAAaF,uBAAO,CAAAC,MAAA,CAAOC,OAAO,CAAK,IAAA;MAACA,SAAS;IAAE,CAAA,EAAGA,OAAO,CAClE,CAAA2B,IAAA,CAAK7B,wBAAO8B,QAAQ,CAAA;IAEvB,OAAO,GAAI,CAAAX,MAAA,CAAAzB,GAAA,CAAId,IAAI,EAAA,GAAA,CAAA,CAAIuC,MAAgB,CAAAS,gBAAA,EAAA,GAAA,CAAA;EAAA,CACxC,CACA,CAAAvC,IAAA,CAAK,GAAG,CAAA;EAEJ,OAAA,2CAAA,CAEO8B,aAAI,yBAIP,CAAA,CAAAA,MAAA,CAAAQ,IAAA,EAAI,2BAIJR,MAAI,CAAAQ,IAAA,EAAA,qBAAA,CAAA,CAGFR,uCAAgB,kBAAkB,CAAA,CAAA;AACjD;AAEA,SAASG,yBAAyBI,IAAqB,EAAA;EACrD,MAAMC,IAAO,GAAAD,IAAA,CACVjC,GAAI,CAACC,GAAQ,IAAA;IACN,MAAA,CAACkC,gBAAgB,CAAI,GAAAlC,GAAA,CAAIb,UAC5BY,GAAI,CAACS,YAAaF,uBAAO,CAAAC,MAAA,CAAOC,OAAO,CAAK,IAAA;MAACA,SAAS;IAAE,CAAA,EAAGA,OAAO,CAClE,CAAA2B,IAAA,CAAK7B,wBAAO8B,QAAQ,CAAA;IAEvB,OAAO,GAAI,CAAAX,MAAA,CAAAzB,GAAA,CAAId,IAAI,EAAA,GAAA,CAAA,CAAIuC,MAAgB,CAAAS,gBAAA,EAAA,GAAA,CAAA;EAAA,CACxC,CACA,CAAAvC,IAAA,CAAK,GAAG,CAAA;EAEX,OAAO,0CAEI,CAAA8B,MAAA,CAAAQ,IAAA,EAAI,4BAID,CAAA,CAAAR,MAAA,CAAAQ,IAAA,EAAI,6BAIH,CAAA,CAAAR,MAAA,CAAAQ,IAAA,CAAA;AACjB;AAEA,SAASzC,kBAAgB6C,QAA+B,EAAA;EAClD,IAAA;IAEF,OAAOC,KAAKC,KAAM,CAAAC,WAAA,CAAA9C,OAAA,CAAG+C,YAAa,CAAAJ,QAAA,EAAU,MAAM,CAAC,CAAA;WAC5CK,GAAK,EAAA;IACZ,MAAM,IAAIC,KAAM,CAAA,kBAAA,CAAmBlB,MAAQ,CAAAY,QAAA,EAAA,KAAA,CAAA,CAAMZ,WAAImB,OAAS,CAAA,CAAA;EAChE;AACF;;;;;;;;;;;ACrLA,IAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;AAUA,MAAMC,0BAAqD,GAAA;EACzD/D,IAAM,EAAA,QAAA;EACNsB,OAAS,EAAA;AACX,CAAA;AAeA,eAAsB0C,0BAA0BC,OAAkD,EAAA;EAChG,MAAM;IAAC7D,OAAA,EAAS8D,UAAY;IAAAC;EAAA,CAAU,GAAAF,OAAA;EACtC,MAAM,CAACG,qBAAuB,EAAAC,gCAAgC,CAAI,GAAA,MAAMC,QAAQC,GAAI,CAAA,CAClF,MAAMC,mBAAoB,CAAAjE,aAAAA,CAAAA,OAAA,CAAKE,KAAKyD,UAAY,EAAA,cAAc,GAAGH,0BAA0B,CAAA,EAC3F,MAAMU,iBAAkB,CAAAP,UAAA,EAAY,mBAAmB,CAAA,CACxD,CAAA;EAEK,MAAAQ,kCAAA,GAAqCC,iBAAiB,mBAAmB,CAAA;EAKzE,MAAAC,+BAAA,GAAkCR,qBAAsB,CAAA1D,YAAA,CAAa,mBAAmB,CAAA;EAC9F,IAAI,CAACkE,+BAAiC,EAAA;IACpC,MAAM,CAACC,IAAA,EAAM,GAAGC,IAAI,IAAIlC,OAAQ,CAAAmC,IAAA;IAC1B,MAAAC,IAAA,GAAO;MAAC,mBAAA,EAAqBN;KAAkC;IAC/D,MAAAO,mBAAA,CAAoBD,MAAMf,OAAO,CAAA;IAMjC,MAAAiB,cAAA,CAAA1E,OAAA,CAAMqE,MAAMC,IAAM,EAAA;MAACK,KAAKjB,UAAY;MAAAkB,KAAA,EAAO;KAAU,CAAA;IACpD,OAAA;MAACC,YAAY;KAAI;EAC1B;EAGA,IAAIC,kCAAoD,GAAA,IAAA;EACpD,IAAA;IACmCA,kCAAA,GAAAlE,eAAA,CAAAZ,OAAA,CAAO+E,WAAWX,+BAA+B,CAAA;WAC/EpB,GAAK,EAAA,CAEd;EAEA,IAAI,CAAC8B,kCAAoC,EAAA;IACvC,MAAM,IAAI7B,KAAM,CAAA+B,gBAAA,CAAAhF,OAAA,CAAAmD,EAAA,KAAAA,EAAA,GAAO8B,sGAEc,UAFd,CAAA,EAAA,CAAA,8FAAA,EAEc,iBAA/Bb,+BACL,CAAA,CAAA;EACH;EASE,IAAAc,iBAAA,CAAkBd,+BAA+B,CACjD,IAAA,CAACxD,wBAAOK,SAAU,CAAA6D,kCAAA,EAAoCZ,kCAAkC,CACxF,EAAA;IACAP,MAAA,CAAO7B,KAAKkD,gBAAAA,CAAAA,OAAO,CAAA5B,EAAA,KAAAA,EAAA,GAAA6B,UAAA,CAAA,CAAA,iDAAA,EACuD,kEACmB,EAAA,4CAAA,CAAA,CAAA,CAAA,EADlDb,iCACgBF,kCAE1D,CAAA,CAAA;EACH;EAGA,IAAI,CAACL,gCAAkC,EAAA;IAC/B,MAAA,IAAIZ,KAAM,CAAA+B,wBAAA,CAAA3B,EAAA,KAAAA,EAAA,GAAO4B,UAGtB,CAAA,CAAA,mLAAA,CAAA,EAAA,CAAA,mMAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACH;EAIA,IAAI,CAACrE,eAAAA,CAAAA,OAAA,CAAOK,SAAU,CAAA4C,gCAAA,EAAkCK,kCAAkC,CAAG,EAAA;IAC3FP,MAAA,CAAO7B,KAAKkD,gBAAAA,CAAAA,OAAO,CAAA1B,EAAA,KAAAA,EAAA,GAAA2B,UAAA,CAAA,CAAA,kDAAA,EACyD,kEACiB,EAAA,4CAAA,CAAA,CAAA,CAAA,EADjDpB,kCACeK,kCAE1D,CAAA,CAAA;EACH;EAEO,OAAA;IAACW,YAAY;GAAK;AAC3B;AASA,eAAeZ,iBAAAA,CAAkBP,YAAoByB,UAA4C,EAAA;EACzF,MAAA3E,YAAA,GAAeC,6BAAYC,MAAO,CAAAgD,UAAA,EAAY3D,sBAAKE,IAAK,CAAAkF,UAAA,EAAY,cAAc,CAAC,CAAA;EACzF,OAAO3E,YAAgB,GAAA,CAAA,MAAMwD,mBAAoB,CAAAxD,YAAY,GAAGM,OAAU,GAAA,IAAA;AAC5E;AASA,eAAekD,mBACbA,CAAAoB,eAAA,EAE0B;EAAA,IAD1BC,QAA4C,GAAAC,SAAA,CAAA1D,MAAA,QAAA0D,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAA,EAClB;EACtB,IAAAzF,QAAA;EACA,IAAA;IACFA,QAAA,GAAW;MAAC,GAAGwF,QAAA;MAAU,IAAI,MAAMvF,eAAA,CAAgBsF,eAAe,CAAE;KAAA;WAC7DpC,GAAK,EAAA;IACZ,MAAM,IAAIC,KAAM,CAAA,kBAAA,CAAmBlB,MAAe,CAAAqD,eAAA,EAAA,KAAA,CAAA,CAAMrD,WAAImB,OAAS,CAAA,CAAA;EACvE;EAEI,IAAA,CAACsC,iBAAkB,CAAA3F,QAAQ,CAAG,EAAA;IAChC,MAAM,IAAIoD,KAAA,CAAM,kBAAmB,CAAAlB,MAAA,CAAAqD,eAAA,EAAe,6BAA6B,CAAA,CAAA;EACjF;EAEM,MAAA;IAAC5F;IAAMsB,OAAS;IAAAZ,YAAA,GAAe,CAAI,CAAA;IAAAC,eAAA,GAAkB,CAAA;EAAM,CAAA,GAAAN,QAAA;EACjE,OAAO;IAACL,IAAA;IAAMsB,OAAS;IAAAZ,YAAA;IAAcC;EAAe,CAAA;AACtD;AAUA,eAAesE,mBAAAA,CACbvE,cACAuD,OACe,EAAA;EACf,MAAM;IAACE,MAAA;IAAQ8B,MAAQ;IAAA7F,OAAA;IAAS8F;GAAqB,GAAAjC,OAAA;EACrD,MAAMkC,WAAqB,EAAC;EAE5BhC,MAAA,CAAOiC,MAAM,0DAA0D,CAAA;EACvE,KAAA,MAAW,CAACC,OAAS,EAAA/E,OAAO,KAAKgF,MAAO,CAAAC,OAAA,CAAQ7F,YAAY,CAAG,EAAA;IACvD,MAAA8F,WAAA,GAAc,EAAG,CAAAjE,MAAA,CAAA8D,OAAA,EAAO,GAAI,CAAA,CAAA9D,MAAA,CAAAjB,OAAA,CAAA;IAC3B6C,MAAA,CAAAiC,KAAA,CAAM,KAAK7D,MAAa,CAAAiE,WAAA,CAAA,CAAA;IAC/BL,QAAA,CAASM,KAAKD,WAAW,CAAA;EAC3B;EAEA,IAAI,CAACN,iBAAmB,EAAA;IACf/B,MAAA,CAAAxB,KAAA,CACL,qFAAA,CACF;IACA;EACF;EAEM,MAAA;IAAC+D,uBAAyB;IAAAC;EAAsB,CAAA,GAAAT,iBAAA;EAChD,MAAA;IAACU,WAAa;IAAAC,MAAA,EAAQC;EAAU,CAAA,GAAI,MAAMJ,uBAAwB,CAAAtG,OAAA,EAAS;IAAC6F;EAAA,CAAO,CAAA;EACrF,IAAAW,WAAA,IAAeE,eAAeF,WAAa,EAAA;IACtCzC,MAAA,CAAA7B,IAAA,CACL,4DAA4DC,MAAW,CAAAqE,WAAA,EAAA,8DAAA,CAAA,CACzE;EACF;EAEA,MAAMD,mBAAmB;IAACR,QAAA;IAAUY,cAAgB,EAAAD;EAAA,GAAa7C,OAAO,CAAA;AAC1E;AAEA,SAAS+B,kBAAkBgB,IAA+C,EAAA;EACxE,OAAO,OAAOA,IAAS,KAAA,QAAA,IAAYA,SAAS,IAAQ,IAAA,MAAA,IAAUA,QAAQ,SAAa,IAAAA,IAAA;AACrF;AAEA,SAAStB,kBAAkBuB,KAAwB,EAAA;EAC1C,OAAA,6BAAA,CAA8BC,KAAKD,KAAK,CAAA;AACjD;AAEA,SAAS3G,gBAAgB6C,QAAwC,EAAA;EACxD,OAAAgE,aAAA,CAAShE,QAAU,EAAA,MAAM,CAAE,CAAAiE,IAAA,CAAMC,GAAQ,IAAAjE,IAAA,CAAKC,KAAM,CAAAgE,GAAG,CAAC,CAAA;AACjE;AC3LO,SAASC,QAAyBA,CAAA,EAAA;EACvC,MAAMC,UAAkC,CAAA,CAAC;EACzC,MAAMC,aAAqC,CAAA,CAAC;EAE5C,SAASC,MAAMzH,IAAoB,EAAA;IACjC,IAAI,OAAOwH,UAAA,CAAWxH,IAAI,CAAA,KAAM,WAAa,EAAA;MAC3C,MAAM,IAAIyD,KAAA,CAAM,SAAU,CAAAlB,MAAA,CAAAvC,IAAA,EAAI,qCAAqC,CAAA,CAAA;IACrE;IAEWwH,UAAA,CAAAxH,IAAI,CAAI,GAAA0H,UAAA,CAAAA,WAAA,CAAYC,GAAI,CAAA,CAAA;EACrC;EAEA,SAASC,IAAI5H,IAAsB,EAAA;IACjC,IAAI,OAAOwH,UAAA,CAAWxH,IAAI,CAAA,KAAM,WAAa,EAAA;MAC3C,MAAM,IAAIyD,KAAA,CAAM,SAAU,CAAAlB,MAAA,CAAAvC,IAAA,EAAI,6BAA6B,CAAA,CAAA;IAC7D;IAEAuH,OAAA,CAAQvH,IAAI,CAAI,GAAA0H,UAAA,CAAAA,WAAA,CAAYC,GAAI,CAAA,CAAA,GAAIH,WAAWxH,IAAI,CAAA;IACnD,OAAOuH,QAAQvH,IAAI,CAAA;EACrB;EAEA,OAAO;IAACyH,KAAA;IAAOG,GAAK;IAAAC,UAAA,EAAYA,CAAA,KAAMN;EAAO,CAAA;AAC/C;;;"}