async function undeployStudio(args, context) {
  const {
    apiClient,
    chalk,
    output,
    prompt
  } = context;
  const client = apiClient({
    requireUser: true,
    requireProject: true
  });
  let spinner = output.spinner("Checking project info").start();
  const project = await client.projects.getById(client.config().projectId);
  const studioHost = project && project.studioHost;
  spinner.succeed();
  if (!studioHost) {
    output.print("Your project has not been assigned a studio hostname.");
    output.print("Nothing to undeploy.");
    return;
  }
  output.print("");
  const url = "https://".concat(chalk.yellow(studioHost), ".sanity.studio");
  const shouldUndeploy = await prompt.single({
    type: "confirm",
    default: false,
    message: "This will undeploy ".concat(url, " and make it unavailable for your users.\n  The hostname will be available for anyone to claim.\n  Are you ").concat(chalk.red("sure"), " you want to undeploy?").trim()
  });
  if (!shouldUndeploy) {
    return;
  }
  const projectId = client.config().projectId;
  const uri = "/projects/".concat(projectId);
  spinner = output.spinner("Undeploying studio").start();
  try {
    await client.request({
      uri,
      method: "PATCH",
      body: {
        studioHost: null
      }
    });
    spinner.succeed();
  } catch (err) {
    spinner.fail();
    throw err;
  }
  output.print("Studio undeploy scheduled. It might take a few minutes before ".concat(url, " is unavailable."));
}
export { undeployStudio as default };
//# sourceMappingURL=undeployAction-5HkuC4OH.js.map
