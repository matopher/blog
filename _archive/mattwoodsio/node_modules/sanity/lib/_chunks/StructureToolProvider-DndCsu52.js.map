{"version":3,"file":"StructureToolProvider-DndCsu52.js","sources":["../../src/structure/comments/i18n/index.ts","../../src/structure/panes/document/constants.ts","../../src/structure/comments/src/components/CommentBreadcrumbs.tsx","../../src/structure/comments/src/components/CommentDeleteDialog.tsx","../../src/structure/comments/src/components/icons/AddCommentIcon.tsx","../../src/structure/comments/src/components/icons/CommentIcon.tsx","../../src/structure/comments/src/components/icons/MentionIcon.tsx","../../src/structure/comments/src/components/icons/ReactionIcon.tsx","../../src/structure/comments/src/components/icons/SendIcon.tsx","../../src/structure/comments/src/helpers.ts","../../src/structure/comments/src/components/avatars/CommentsAvatar.tsx","../../src/structure/comments/src/components/avatars/SpacerAvatar.tsx","../../src/structure/comments/src/components/pte/config.ts","../../src/structure/comments/src/components/pte/comment-input/CommentInputDiscardDialog.tsx","../../src/structure/comments/src/components/mentions/MentionsMenuItem.tsx","../../src/structure/comments/src/components/mentions/MentionsMenu.tsx","../../src/structure/comments/src/components/pte/blocks/MentionInlineBlock.tsx","../../src/structure/comments/src/components/pte/blocks/NormalBlock.tsx","../../src/structure/comments/src/components/pte/render/renderBlock.tsx","../../src/structure/comments/src/components/pte/render/renderChild.tsx","../../src/structure/comments/src/components/pte/comment-input/CommentInputProvider.tsx","../../src/structure/comments/src/components/pte/comment-input/useCommentInput.ts","../../src/structure/comments/src/components/pte/comment-input/useCursorElement.ts","../../src/structure/comments/src/components/pte/comment-input/Editable.tsx","../../src/structure/comments/src/components/pte/comment-input/CommentInputInner.tsx","../../src/structure/comments/src/components/pte/comment-input/CommentInput.tsx","../../src/structure/comments/src/components/pte/CommentMessageSerializer.tsx","../../src/structure/comments/src/components/constants.ts","../../src/structure/comments/src/constants.ts","../../src/structure/comments/src/components/reactions/EmojiText.styled.ts","../../src/structure/comments/src/components/reactions/CommentReactionsMenu.tsx","../../src/structure/comments/src/components/reactions/CommentReactionsMenuButton.tsx","../../src/structure/comments/src/components/reactions/CommentReactionsUsersTooltip.tsx","../../src/structure/comments/src/components/reactions/TransparentCard.styled.ts","../../src/structure/comments/src/components/reactions/CommentReactionsBar.tsx","../../src/structure/comments/src/components/list/CommentsListItemContextMenu.tsx","../../src/structure/comments/src/components/list/CommentsListItemLayout.tsx","../../src/structure/comments/src/components/list/styles.ts","../../src/structure/comments/src/components/list/CommentsListItem.tsx","../../src/structure/comments/src/components/list/CommentsListStatus.tsx","../../src/structure/comments/src/components/list/CreateNewThreadInput.tsx","../../src/structure/comments/src/components/list/CommentThreadLayout.tsx","../../src/structure/comments/src/components/list/CommentsList.tsx","../../src/structure/comments/src/components/onboarding/CommentsOnboardingPopover.tsx","../../src/structure/comments/src/components/upsell/CommentsUpsellDialog.tsx","../../src/structure/comments/src/components/upsell/CommentsUpsellPanel.tsx","../../src/structure/comments/src/context/comments/CommentsContext.ts","../../src/structure/comments/src/hooks/useCommentsIntent.ts","../../src/structure/i18n/index.ts","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/paneRouter/PaneRouterContext.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/pane/PaneLayoutContext.ts","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/Delay.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/PaneContext.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/menuNodes.ts","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/comments/src/hooks/useNotificationTarget.ts","../../src/structure/comments/src/hooks/use-comment-operations/createOperation.ts","../../src/structure/comments/src/hooks/use-comment-operations/editOperation.ts","../../src/structure/comments/src/hooks/use-comment-operations/reactOperation.ts","../../src/structure/comments/src/hooks/use-comment-operations/removeOperation.ts","../../src/structure/comments/src/hooks/use-comment-operations/updateOperation.ts","../../src/structure/comments/src/hooks/use-comment-operations/useCommentOperations.ts","../../src/structure/comments/src/hooks/useComments.ts","../../src/structure/comments/src/context/enabled/CommentsEnabledContext.ts","../../src/structure/comments/src/context/enabled/CommentsEnabledProvider.tsx","../../src/structure/comments/src/hooks/useCommentsEnabled.ts","../../src/structure/comments/src/context/onboarding/CommentsOnboardingContext.ts","../../src/structure/comments/src/context/onboarding/CommentsOnboardingProvider.tsx","../../src/structure/comments/src/hooks/useCommentsOnboarding.ts","../../src/structure/comments/src/hooks/useCommentsSelectedPath.ts","../../src/structure/comments/src/hooks/useCommentsUpsell.ts","../../src/structure/comments/src/hooks/useResolveCommentsEnabled.ts","../../src/structure/comments/src/utils/buildCommentBreadcrumbs.ts","../../src/structure/comments/src/utils/mergeCommentReactions.ts","../../src/structure/comments/src/store/reducer.ts","../../src/structure/comments/src/store/useCommentsStore.ts","../../src/structure/comments/src/utils/buildCommentThreadItems.ts","../../src/structure/comments/src/context/comments/CommentsProvider.tsx","../../src/structure/comments/src/context/intent/CommentsIntentContext.ts","../../src/structure/comments/src/context/intent/CommentsIntentProvider.tsx","../../src/structure/comments/src/context/selected-path/CommentsSelectedPathContext.ts","../../src/structure/comments/src/context/selected-path/CommentsSelectedPathProvider.tsx","../../src/structure/comments/src/context/upsell/CommentsUpsellContext.ts","../../src/structure/comments/src/context/upsell/CommentsUpsellProvider.tsx","../../src/structure/comments/plugin/document-layout/CommentsDocumentLayout.tsx","../../src/structure/comments/plugin/field/CommentsFieldButton.tsx","../../src/structure/comments/plugin/field/CommentsField.tsx","../../src/structure/constants.ts","../../src/structure/panes/document/DocumentPaneContext.ts","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/comments/plugin/inspector/CommentsInspectorFeedbackFooter.tsx","../../src/structure/comments/plugin/inspector/CommentsInspectorHeader.tsx","../../src/structure/comments/plugin/inspector/CommentsInspector.tsx","../../src/structure/comments/plugin/inspector/index.ts","../../src/structure/comments/plugin/studio-layout/CommentsStudioLayout.tsx","../../src/structure/comments/plugin/index.ts","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/StructureToolContext.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/Resizer.tsx","../../src/structure/panes/document/documentInspector/Resizable.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/panes/document/documentPanel/banners/PermissionCheckBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/useConditionalToast.ts","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/timelineItem.styled.tsx","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/DocumentListPaneHeader.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/structureBuilder/SerializeError.ts","../../src/structure/structureBuilder/Sort.ts","../../src/structure/structureBuilder/util/getExtendedProjection.ts","../../src/structure/structureBuilder/MenuItem.ts","../../src/structure/structureBuilder/MenuItemGroup.ts","../../src/structure/structureBuilder/util/validateId.ts","../../src/structure/structureBuilder/util/getStructureNodeId.ts","../../src/structure/structureBuilder/Component.ts","../../src/structure/structureBuilder/util/resolveTypeForDocument.ts","../../src/structure/structureBuilder/views/View.ts","../../src/structure/structureBuilder/views/ComponentView.ts","../../src/structure/structureBuilder/views/FormView.ts","../../src/structure/structureBuilder/views/index.ts","../../src/structure/structureBuilder/Document.ts","../../src/structure/structureBuilder/InitialValueTemplateItem.ts","../../src/structure/structureBuilder/Intent.ts","../../src/structure/structureBuilder/Layout.ts","../../src/structure/structureBuilder/GenericList.ts","../../src/structure/structureBuilder/DocumentList.ts","../../src/structure/structureBuilder/List.ts","../../src/structure/structureBuilder/ListItem.ts","../../src/structure/structureBuilder/DocumentListItem.ts","../../src/structure/structureBuilder/DocumentTypeList.ts","../../src/structure/structureBuilder/documentTypeListItems.ts","../../src/structure/structureBuilder/createStructureBuilder.ts","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/helpers.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts","../../src/structure/StructureToolProvider.tsx"],"sourcesContent":["import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the comments plugin\n *\n * @public\n */\nexport const commentsLocaleNamespace = 'comments' as const\n\n/**\n * The default locale bundle for the comments plugin, which is US English.\n *\n * @internal\n */\nexport const commentsUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: commentsLocaleNamespace,\n  resources: () => import('./resources'),\n})\n\n/**\n * The locale resource keys for the comments plugin.\n *\n * @alpha\n * @hidden\n */\nexport type {CommentsLocaleResourceKeys} from './resources'\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\nexport const COMMENTS_INSPECTOR_NAME = 'sanity/structure/comments'\n","import {ChevronRightIcon} from '@sanity/icons'\nimport {Box, Flex, Stack, Text} from '@sanity/ui'\nimport {Fragment, useMemo} from 'react'\n\nimport {Tooltip} from '../../../../ui-components'\n\nexport interface CommentBreadcrumbsProps {\n  titlePath: string[]\n  maxLength: number\n}\n\ntype Item = string | string[]\n\nconst separator = (\n  <Text muted>\n    <ChevronRightIcon />\n  </Text>\n)\n\nconst renderItem = (item: string, index: number) => {\n  return (\n    <Box as=\"li\" key={`${item}-${index}`}>\n      <Text textOverflow=\"ellipsis\" size={1} weight=\"medium\">\n        {item}\n      </Text>\n    </Box>\n  )\n}\n\nexport function CommentBreadcrumbs(props: CommentBreadcrumbsProps) {\n  const {titlePath, maxLength} = props\n\n  const items: Item[] = useMemo(() => {\n    const len = titlePath.length\n    const beforeLength = Math.ceil(maxLength / 2)\n    const afterLength = Math.floor(maxLength / 2)\n\n    if (maxLength && len > maxLength) {\n      return [\n        ...titlePath.slice(0, beforeLength - 1),\n        titlePath.slice(beforeLength - 1, len - afterLength),\n        ...titlePath.slice(len - afterLength),\n      ]\n    }\n\n    return titlePath\n  }, [maxLength, titlePath])\n\n  const nodes = useMemo(() => {\n    return items.map((item, index) => {\n      const key = `${item}-${index}`\n      const showSeparator = index < items.length - 1\n\n      if (Array.isArray(item)) {\n        return (\n          <Fragment key={key}>\n            <Tooltip\n              content={\n                <Stack space={2} padding={2}>\n                  {item.map(renderItem)}\n                </Stack>\n              }\n            >\n              <Box>{renderItem('...', index)}</Box>\n            </Tooltip>\n\n            {showSeparator && separator}\n          </Fragment>\n        )\n      }\n\n      return (\n        <Fragment key={key}>\n          {renderItem(item, index)}\n\n          {showSeparator && separator}\n        </Fragment>\n      )\n    })\n  }, [items])\n\n  return (\n    <Flex align=\"center\" as=\"ol\" gap={2}>\n      {nodes}\n    </Flex>\n  )\n}\n","import {Stack, Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {TextWithTone, type TFunction, useTranslation} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../i18n'\n\nfunction getDialogCopy(\n  t: TFunction,\n): Record<'thread' | 'comment', {title: string; body: string; confirmButtonText: string}> {\n  return {\n    thread: {\n      title: t('delete-thread.title'),\n      body: t('delete-thread.body'),\n      confirmButtonText: t('delete-thread.confirm'),\n    },\n    comment: {\n      title: t('delete-comment.title'),\n      body: t('delete-comment.body'),\n      confirmButtonText: t('delete-comment.confirm'),\n    },\n  }\n}\n\n/**\n * @beta\n * @hidden\n */\nexport interface CommentDeleteDialogProps {\n  commentId: string\n  error: Error | null\n  isParent: boolean\n  loading: boolean\n  onClose: () => void\n  onConfirm: (id: string) => void\n}\n\n/**\n * @beta\n * @hidden\n */\nexport function CommentDeleteDialog(props: CommentDeleteDialogProps) {\n  const {isParent, onClose, commentId, onConfirm, loading, error} = props\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const dialogCopy = getDialogCopy(t)\n  const {title, body, confirmButtonText} = dialogCopy[isParent ? 'thread' : 'comment']\n\n  const handleDelete = useCallback(() => {\n    onConfirm(commentId)\n  }, [commentId, onConfirm])\n\n  return (\n    <Dialog\n      footer={{\n        cancelButton: {\n          onClick: onClose,\n        },\n        confirmButton: {\n          loading,\n          onClick: handleDelete,\n          text: confirmButtonText,\n          tone: 'critical',\n        },\n      }}\n      header={title}\n      id=\"delete-comment-dialog\"\n      onClose={onClose}\n      width={0}\n    >\n      <Stack space={4}>\n        <Text size={1}>{body}</Text>\n\n        {error && <TextWithTone tone=\"critical\">{t('delete-dialog.error')}</TextWithTone>}\n      </Stack>\n    </Dialog>\n  )\n}\n","import type * as React from 'react'\nimport {forwardRef} from 'react'\n\nexport const AddCommentIcon = forwardRef(function Icon(\n  props: React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>,\n) {\n  return (\n    <svg\n      data-sanity-icon=\"add-comment\"\n      fill=\"none\"\n      height=\"1em\"\n      ref={ref}\n      viewBox=\"0 0 25 25\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M12.3368 5.97917H6.89453C5.78996 5.97917 4.89453 6.8746 4.89453 7.97917V13.4881C4.89453 14.5926 5.78996 15.4881 6.89453 15.4881H8.69808V19.2916L12.5016 15.4881H16.207C17.3115 15.4881 18.207 14.5926 18.207 13.4881V11.7158\"\n        stroke=\"currentColor\"\n        strokeWidth={1.2}\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M18.2081 2.08333V9.87058M14.3145 5.97695H22.1017\"\n        stroke=\"currentColor\"\n        strokeWidth={1.2}\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n})\n","import type * as React from 'react'\nimport {forwardRef} from 'react'\n\n// A slightly (arguably) more optically centered version of the current <CommentIcon> provided by @sanity/icons\n// @todo: remove this and replace with an updated version from @sanity/icons\nexport const CommentIcon = forwardRef(function Icon(\n  props: React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>,\n) {\n  return (\n    <svg\n      data-sanity-icon=\"comment\"\n      width=\"1em\"\n      height=\"1em\"\n      ref={ref}\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M7.5 15.5H9.5V19.5L13.5 15.5H17.5C18.6046 15.5 19.5 14.6046 19.5 13.5V7.5C19.5 6.39543 18.6046 5.5 17.5 5.5H7.5C6.39543 5.5 5.5 6.39543 5.5 7.5V13.5C5.5 14.6046 6.39543 15.5 7.5 15.5Z\"\n        stroke=\"currentColor\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"1.2\"\n      />\n    </svg>\n  )\n})\n","import type * as React from 'react'\nimport {forwardRef} from 'react'\n\nexport const MentionIcon = forwardRef(function Icon(\n  props: React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>,\n) {\n  return (\n    <svg\n      data-sanity-icon=\"mention\"\n      fill=\"none\"\n      height=\"1em\"\n      ref={ref}\n      viewBox=\"0 0 25 25\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M16.6633 18.9383C15.539 19.6562 14.2034 20.0723 12.7705 20.0723C8.77022 20.0723 5.52734 16.8294 5.52734 12.8291C5.52734 8.82881 8.77022 5.58594 12.7705 5.58594C16.7708 5.58594 20.0137 8.82881 20.0137 12.8291C20.0137 13.6623 19.8249 14.7093 19.6141 15.2077C19.5578 15.3408 19.479 15.4845 19.3936 15.6238C19.0955 16.1106 18.5507 16.3721 17.9807 16.4018V16.4018C16.8271 16.462 15.8588 15.5428 15.8588 14.3877V9.27302\"\n        stroke=\"currentColor\"\n        strokeWidth={1.2}\n        strokeLinejoin=\"round\"\n      />\n      <circle cx=\"12.5732\" cy=\"12.8291\" r=\"3.08691\" stroke=\"currentColor\" strokeWidth={1.2} />\n    </svg>\n  )\n})\n","import {forwardRef, type Ref, type SVGProps} from 'react'\n\nexport const ReactionIcon = forwardRef(function Icon(\n  props: SVGProps<SVGSVGElement>,\n  ref: Ref<SVGSVGElement>,\n) {\n  return (\n    <svg\n      data-sanity-icon=\"add-reaction\"\n      fill=\"none\"\n      height=\"1em\"\n      ref={ref}\n      viewBox=\"0 0 25 25\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M10.1044 10.4011L10.1044 10.9972\"\n        stroke=\"currentColor\"\n        strokeWidth={1.2}\n        strokeLinecap=\"square\"\n      />\n      <path\n        d=\"M14.2393 10.4011L14.2393 10.9972\"\n        stroke=\"currentColor\"\n        strokeWidth={1.2}\n        strokeLinecap=\"square\"\n      />\n      <path\n        d=\"M7.12128 14.1151C7.70803 15.0226 9.66113 16.8377 11.7735 16.8377C13.8859 16.8377 15.6713 15.0226 16.4257 14.1151\"\n        stroke=\"currentColor\"\n        strokeWidth={1.2}\n        strokeLinecap=\"square\"\n      />\n      <path\n        d=\"M16.703 6.43905C15.3486 5.36511 13.6357 4.72374 11.773 4.72374C7.38731 4.72374 3.83203 8.27902 3.83203 12.6647C3.83203 17.0503 7.38731 20.6056 11.773 20.6056C16.0995 20.6056 19.618 17.1455 19.712 12.8415\"\n        stroke=\"currentColor\"\n        strokeWidth={1.2}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.1135 9.03425L19.1135 11.4903L20.3135 11.4903L20.3135 9.03425L22.7693 9.03425L22.7693 7.83425L20.3135 7.83425L20.3135 5.37941L19.1135 5.37941L19.1135 7.83425L16.6584 7.83425L16.6584 9.03425L19.1135 9.03425Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  )\n})\n","import type * as React from 'react'\nimport {forwardRef} from 'react'\n\nexport const SendIcon = forwardRef(function Icon(\n  props: React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>,\n) {\n  return (\n    <svg\n      data-sanity-icon=\"send\"\n      fill=\"none\"\n      height=\"1em\"\n      ref={ref}\n      viewBox=\"0 0 25 25\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        clipRule=\"evenodd\"\n        d=\"M21.1602 12.5L7.16016 19.5V14.8765L13.6656 12.4989L7.16016 9.97149L7.16016 5.5L21.1602 12.5Z\"\n        stroke=\"currentColor\"\n        strokeWidth={1.2}\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n})\n","import {isEqual} from 'lodash'\nimport {useMemo, useRef} from 'react'\nimport {isPortableTextSpan, isPortableTextTextBlock} from 'sanity'\n\nimport {type CommentContext, type CommentDocument, type CommentMessage} from './types'\n\nexport function useCommentHasChanged(message: CommentMessage): boolean {\n  const prevMessage = useRef<CommentMessage>(message)\n\n  return useMemo(() => !isEqual(prevMessage.current, message), [message])\n}\n\nexport function hasCommentMessageValue(value: CommentMessage): boolean {\n  if (!value) return false\n\n  return value?.some(\n    (block) =>\n      isPortableTextTextBlock(block) &&\n      (block?.children || [])?.some((c) => (isPortableTextSpan(c) ? c.text : c.userId)),\n  )\n}\n\nexport function commentIntentIfDiffers(\n  parent?: CommentDocument,\n  comment?: CommentDocument,\n): CommentContext['intent'] | undefined {\n  const parentIntent = parent?.context?.intent\n  const intent = comment?.context?.intent\n  // If no intent, nothing to return\n  if (!intent) return undefined\n  // If no parent intent, no comparison necessary\n  if (!parentIntent) return intent\n  // If the preview param differs, return the intent\n  if (\n    'preview' in intent.params &&\n    'preview' in parentIntent.params &&\n    intent.params.preview !== parentIntent.params.preview\n  ) {\n    return intent\n  }\n  return undefined\n}\n","import {type User} from '@sanity/types'\nimport {Avatar, type AvatarProps} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport styled from 'styled-components'\n\nconst StyledAvatar = styled(Avatar)`\n  svg > ellipse {\n    stroke: transparent;\n  }\n`\n\nconst SYMBOLS = /[^\\p{Alpha}\\p{White_Space}]/gu\nconst WHITESPACE = /\\p{White_Space}+/u\n\nfunction nameToInitials(fullName: string) {\n  const namesArray = fullName.replace(SYMBOLS, '').split(WHITESPACE)\n\n  if (namesArray.length === 1) {\n    return `${namesArray[0].charAt(0)}`.toUpperCase()\n  }\n\n  return `${namesArray[0].charAt(0)}${namesArray[namesArray.length - 1].charAt(0)}`\n}\n\ninterface CommentsAvatarProps extends AvatarProps {\n  user: User | undefined | null\n}\n\nexport function CommentsAvatar(props: CommentsAvatarProps) {\n  const {user: userProp, ...restProps} = props\n  const user = userProp as User\n  const initials = useMemo(() => nameToInitials(user?.displayName || ''), [user?.displayName])\n\n  if (!user) return <StyledAvatar {...restProps} />\n\n  return (\n    <StyledAvatar\n      initials={initials}\n      src={user?.imageUrl}\n      title={user?.displayName}\n      {...restProps}\n    />\n  )\n}\n","import type * as React from 'react'\n\nexport const AVATAR_HEIGHT = 25\n\nconst INLINE_STYLE: React.CSSProperties = {\n  minWidth: AVATAR_HEIGHT,\n}\n\n/**\n * This component is used to as a spacer in situations where we want to align\n * components without avatars with components that have avatars.\n */\nexport function SpacerAvatar() {\n  return <div style={INLINE_STYLE} />\n}\n","import {Schema} from '@sanity/schema'\nimport {defineArrayMember, defineField} from '@sanity/types'\n\nexport const mentionObject = defineField({\n  name: 'mention',\n  type: 'object',\n  fields: [\n    {\n      name: 'userId',\n      type: 'string',\n    },\n  ],\n})\n\nconst blockType = defineField({\n  type: 'block',\n  name: 'block',\n  of: [mentionObject],\n  marks: {\n    annotations: [],\n  },\n  styles: [{title: 'Normal', value: 'normal'}],\n  lists: [],\n})\n\nconst portableTextType = defineArrayMember({\n  type: 'array',\n  name: 'body',\n  of: [blockType],\n})\n\nconst schema = Schema.compile({\n  name: 'comments',\n  types: [portableTextType],\n})\n\nexport const editorSchemaType = schema.get('body')\n","import {DialogProvider, Text, ThemeColorProvider} from '@sanity/ui'\nimport type * as React from 'react'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog} from '../../../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../../../i18n'\n\nconst Z_OFFSET = 9999999 // Change to appropriate z-offset\n\n/**\n * @beta\n * @hidden\n */\nexport interface CommentInputDiscardDialogProps {\n  onClose: () => void\n  onConfirm: () => void\n}\n\n/**\n * @beta\n * @hidden\n */\nexport function CommentInputDiscardDialog(props: CommentInputDiscardDialogProps) {\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const {onClose, onConfirm} = props\n\n  const handleCancelClick = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      onClose()\n    },\n    [onClose],\n  )\n\n  const handleConfirmClick = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      onConfirm()\n    },\n    [onConfirm],\n  )\n\n  // The ThemeColorProvider is needed to make sure that the backdrop of the dialog not\n  // inherits the tone of parent color providers.\n  // The PortalProvider and DialogProvider is needed to make sure that the dialog is\n  // rendered fullscreen and not scoped to the form view.\n  return (\n    <ThemeColorProvider tone=\"default\">\n      <DialogProvider zOffset={Z_OFFSET}>\n        <Dialog\n          header={t('discard.header')}\n          id=\"discard-comment-dialog\"\n          onClose={onClose}\n          width={0}\n          onClickOutside={onClose}\n          footer={{\n            cancelButton: {\n              onClick: handleCancelClick,\n            },\n            confirmButton: {\n              onClick: handleConfirmClick,\n              text: t('discard.button-confirm'),\n              tone: 'critical',\n            },\n          }}\n        >\n          <Text size={1}>{t('discard.text')}</Text>\n        </Dialog>\n      </DialogProvider>\n    </ThemeColorProvider>\n  )\n}\n","import {Badge, Box, Card, Flex, Text, TextSkeleton} from '@sanity/ui'\nimport type * as React from 'react'\nimport {useCallback} from 'react'\nimport {type UserWithPermission, useTranslation, useUser} from 'sanity'\nimport styled from 'styled-components'\n\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {CommentsAvatar} from '../avatars'\n\nconst InnerFlex = styled(Flex)``\n\nconst SKELETON_INLINE_STYLE: React.CSSProperties = {width: '50%'}\n\ninterface MentionsItemProps {\n  user: UserWithPermission\n  onSelect: (userId: string) => void\n}\n\nexport function MentionsMenuItem(props: MentionsItemProps) {\n  const {user, onSelect} = props\n  const [loadedUser] = useUser(user.id)\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  const avatar = <CommentsAvatar user={loadedUser} status={user.granted ? undefined : 'inactive'} />\n\n  const text = loadedUser ? (\n    <Text size={1} textOverflow=\"ellipsis\" title={loadedUser.displayName}>\n      {loadedUser.displayName}\n    </Text>\n  ) : (\n    <TextSkeleton size={1} style={SKELETON_INLINE_STYLE} />\n  )\n\n  const handleSelect = useCallback(() => {\n    onSelect(user.id)\n  }, [onSelect, user.id])\n\n  return (\n    <Card as=\"button\" disabled={!user.granted} onClick={handleSelect} padding={2} radius={2}>\n      <Flex align=\"center\" gap={3}>\n        <InnerFlex align=\"center\" gap={2} flex={1}>\n          {avatar}\n          <Box>{text}</Box>\n        </InnerFlex>\n\n        {!user.granted && (\n          <Badge fontSize={1} mode=\"outline\">\n            {t('mentions.unauthorized-user')}\n          </Badge>\n        )}\n      </Flex>\n    </Card>\n  )\n}\n","import {Box, Flex, Stack, Text} from '@sanity/ui'\nimport {deburr} from 'lodash'\nimport {useCallback, useImperativeHandle, useMemo, useRef, useState} from 'react'\nimport * as React from 'react'\nimport {\n  CommandList,\n  type CommandListHandle,\n  LoadingBlock,\n  type UserWithPermission,\n  useTranslation,\n} from 'sanity'\nimport styled from 'styled-components'\n\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {MentionsMenuItem} from './MentionsMenuItem'\n\nconst EMPTY_ARRAY: UserWithPermission[] = []\n\nconst Root = styled(Stack)({\n  maxWidth: '220px', // todo: improve\n})\n\nconst ITEM_HEIGHT = 41\nconst LIST_PADDING = 4\nconst MAX_ITEMS = 7\n\nconst FlexWrap = styled(Flex)({\n  maxHeight: ITEM_HEIGHT * MAX_ITEMS + LIST_PADDING * 2 + ITEM_HEIGHT / 2,\n})\n\nexport interface MentionsMenuHandle {\n  setSearchTerm: (term: string) => void\n}\ninterface MentionsMenuProps {\n  loading: boolean\n  inputElement?: HTMLDivElement | null\n  onSelect: (userId: string) => void\n  options: UserWithPermission[] | null\n}\n\nexport const MentionsMenu = React.forwardRef(function MentionsMenu(\n  props: MentionsMenuProps,\n  ref: React.Ref<MentionsMenuHandle>,\n) {\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const {loading, onSelect, options = [], inputElement} = props\n  const [searchTerm, setSearchTerm] = useState<string>('')\n  const commandListRef = useRef<CommandListHandle>(null)\n\n  useImperativeHandle(\n    ref,\n    () => {\n      return {\n        setSearchTerm(term: string) {\n          setSearchTerm(term)\n        },\n      }\n    },\n    [],\n  )\n\n  const renderItem = useCallback(\n    (itemProps: UserWithPermission) => {\n      return <MentionsMenuItem user={itemProps} onSelect={onSelect} />\n    },\n    [onSelect],\n  )\n\n  const getItemDisabled = useCallback(\n    (index: number) => {\n      return !options?.[index]?.granted\n    },\n    [options],\n  )\n\n  const filteredOptions = useMemo(() => {\n    if (!searchTerm) return options || EMPTY_ARRAY\n\n    // We deburr the search term and the display names so that when searching\n    // for e.g \"bjorge\" we also get results for \"bjørge\"\n    const deburredSearchTerm = deburr(searchTerm).toLocaleLowerCase()\n\n    const deburredOptions = options?.map((option) => ({\n      ...option,\n      displayName: deburr(option.displayName || '').toLocaleLowerCase(),\n    }))\n\n    const filtered = deburredOptions\n      ?.filter((option) => {\n        return option?.displayName?.includes(deburredSearchTerm)\n      })\n      // Sort by whether the displayName starts with the search term to get more relevant results first\n      ?.sort((a, b) => {\n        const matchA = a.displayName?.startsWith(deburredSearchTerm)\n        const matchB = b.displayName?.startsWith(deburredSearchTerm)\n\n        if (matchA && !matchB) return -1\n        if (!matchA && matchB) return 1\n\n        return 0\n      })\n\n    return filtered || EMPTY_ARRAY\n  }, [options, searchTerm])\n\n  if (loading) {\n    return (\n      <Root>\n        <LoadingBlock showText />\n      </Root>\n    )\n  }\n\n  // In this case the input element is the actual content editable HTMLDivElement from the PTE.\n  // Typecast it to an input element to make the CommandList component happy.\n  const _inputElement = inputElement ? (inputElement as HTMLInputElement) : undefined\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" data-testid=\"comments-mentions-menu\">\n      {filteredOptions.length === 0 && (\n        <Box padding={5}>\n          <Text align=\"center\" size={1} muted>\n            {t('mentions.no-users-found')}\n          </Text>\n        </Box>\n      )}\n\n      {filteredOptions.length > 0 && (\n        <FlexWrap direction=\"column\" flex={1} overflow=\"hidden\">\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('mentions.user-list-aria-label')}\n            fixedHeight\n            getItemDisabled={getItemDisabled}\n            inputElement={_inputElement}\n            itemHeight={41}\n            items={filteredOptions}\n            padding={1}\n            ref={commandListRef}\n            renderItem={renderItem}\n          />\n        </FlexWrap>\n      )}\n    </Flex>\n  )\n})\n","import {Flex, Text, TextSkeleton} from '@sanity/ui'\nimport {useCurrentUser, useUser} from 'sanity'\nimport styled, {css} from 'styled-components'\n\nimport {Tooltip} from '../../../../../../ui-components'\nimport {CommentsAvatar} from '../../avatars'\n\nconst Span = styled.span(({theme}) => {\n  const {regular} = theme.sanity.fonts?.text.weights\n  const {hovered} = theme.sanity.color?.card\n  const {bg} = theme.sanity.color.selectable?.caution.pressed || {}\n\n  return css`\n    font-weight: ${regular};\n    color: var(--card-link-fg-color);\n    border-radius: 2px;\n    background-color: ${hovered.bg};\n    padding: 1px;\n    box-sizing: border-box;\n\n    &[data-active='true'] {\n      background-color: ${bg};\n    }\n  `\n})\n\ninterface MentionInlineBlockProps {\n  userId: string\n  selected: boolean\n}\n\nexport function MentionInlineBlock(props: MentionInlineBlockProps) {\n  const {selected, userId} = props\n  const [user, loading] = useUser(userId)\n  const currentUser = useCurrentUser()\n\n  if (!user || loading)\n    return (\n      <TextSkeleton\n        data-testid=\"comment-mentions-loading-skeleton\"\n        style={{width: '10ch'}}\n        size={0}\n        muted\n        radius={1}\n        animated\n      />\n    )\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Flex align=\"center\" gap={2}>\n          <Flex>\n            <CommentsAvatar user={user} />\n          </Flex>\n\n          <Text size={1}>{user.displayName}</Text>\n        </Flex>\n      }\n    >\n      <Span data-selected={selected} data-active={currentUser?.id === userId}>\n        @{user.displayName}\n      </Span>\n    </Tooltip>\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport type * as React from 'react'\nimport styled from 'styled-components'\n\nconst NormalText = styled(Text)`\n  word-break: break-word;\n`\n\ninterface NormalBlockProps {\n  children: React.ReactNode\n}\n\nexport function NormalBlock(props: NormalBlockProps) {\n  const {children} = props\n\n  return <NormalText size={1}>{children}</NormalText>\n  return (\n    <Flex>\n      <Text size={1}>{children}</Text>\n    </Flex>\n  )\n}\n","import {type RenderBlockFunction} from '@sanity/portable-text-editor'\n\nimport {NormalBlock} from '../blocks'\n\nexport const renderBlock: RenderBlockFunction = (blockProps) => {\n  const {children} = blockProps\n\n  return <NormalBlock>{children}</NormalBlock>\n}\n","import {type BlockChildRenderProps, type RenderChildFunction} from '@sanity/portable-text-editor'\n\nimport {MentionInlineBlock} from '../blocks'\n\nexport const renderChild: RenderChildFunction = (childProps: BlockChildRenderProps) => {\n  const {children, value, selected} = childProps\n\n  const isMention = value._type === 'mention' && value.userId\n\n  if (isMention) {\n    return <MentionInlineBlock selected={selected} userId={value?.userId as string} />\n  }\n\n  return children\n}\n","import {\n  type EditorSelection,\n  PortableTextEditor,\n  usePortableTextEditor,\n} from '@sanity/portable-text-editor'\nimport {isPortableTextSpan, type Path} from '@sanity/types'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {useDidUpdate, type UserListWithPermissionsHookValue} from 'sanity'\n\nimport {hasCommentMessageValue, useCommentHasChanged} from '../../../helpers'\nimport {type CommentMessage} from '../../../types'\n\nexport interface CommentInputContextValue {\n  canSubmit?: boolean\n  closeMentions: () => void\n  editor: PortableTextEditor\n  expandOnFocus?: boolean\n  focused: boolean\n  focusEditor: () => void\n  focusOnMount?: boolean\n  hasChanges: boolean\n  insertAtChar: () => void\n  insertMention: (userId: string) => void\n  mentionOptions: UserListWithPermissionsHookValue\n  mentionsMenuOpen: boolean\n  mentionsSearchTerm: string\n  onBeforeInput: (event: InputEvent) => void\n  openMentions: () => void\n  readOnly: boolean\n  value: CommentMessage\n}\n\nexport const CommentInputContext = React.createContext<CommentInputContextValue | null>(null)\n\ninterface CommentInputProviderProps {\n  children: React.ReactNode\n  expandOnFocus?: boolean\n  focused: boolean\n  focusOnMount?: boolean\n  mentionOptions: UserListWithPermissionsHookValue\n  onMentionMenuOpenChange?: (open: boolean) => void\n  readOnly?: boolean\n  value: CommentMessage\n}\n\nexport function CommentInputProvider(props: CommentInputProviderProps) {\n  const {\n    children,\n    expandOnFocus = false,\n    focused,\n    focusOnMount = false,\n    mentionOptions,\n    onMentionMenuOpenChange,\n    value,\n    readOnly,\n  } = props\n\n  const editor = usePortableTextEditor()\n\n  const [mentionsMenuOpen, setMentionsMenuOpen] = useState<boolean>(false)\n  const [mentionsSearchTerm, setMentionsSearchTerm] = useState<string>('')\n  const [selectionAtMentionInsert, setSelectionAtMentionInsert] = useState<EditorSelection>(null)\n\n  const canSubmit = useMemo(() => hasCommentMessageValue(value), [value])\n\n  const hasChanges = useCommentHasChanged(value)\n\n  const focusEditor = useCallback(() => {\n    if (readOnly) return\n    PortableTextEditor.focus(editor)\n  }, [editor, readOnly])\n\n  const closeMentions = useCallback(() => {\n    setMentionsMenuOpen(false)\n    setMentionsSearchTerm('')\n    setSelectionAtMentionInsert(null)\n  }, [])\n\n  const openMentions = useCallback(() => {\n    setMentionsMenuOpen(true)\n    setMentionsSearchTerm('')\n    setMentionsMenuOpen(true)\n    setSelectionAtMentionInsert(PortableTextEditor.getSelection(editor))\n  }, [editor])\n\n  // This function activates or deactivates the mentions menu and updates\n  // the mention search term when the user types into the Portable Text Editor.\n  const onBeforeInput = useCallback(\n    (event: InputEvent): void => {\n      const selection = PortableTextEditor.getSelection(editor)\n      const cursorOffset = selection ? selection.focus.offset : 0\n      const focusChild = PortableTextEditor.focusChild(editor)\n      const focusSpan = (isPortableTextSpan(focusChild) && focusChild) || undefined\n\n      const isInsertText = event.inputType === 'insertText'\n      const isDeleteText = event.inputType === 'deleteContentBackward'\n      const isInsertingAtChar = isInsertText && event.data === '@'\n\n      const lastIndexOfAt = focusSpan?.text.substring(0, cursorOffset).lastIndexOf('@') || 0\n\n      const isWhitespaceCharBeforeCursorPosition =\n        focusSpan?.text.substring(cursorOffset - 1, cursorOffset) === ' '\n\n      const filterStartsWithSpaceChar = isInsertText && event.data === ' ' && !mentionsSearchTerm\n\n      // If we are inserting a '@' character - open the mentions menu and reset the search term.\n      // Only do this if it is in the start of the text, or if '@' is inserted when following a whitespace char.\n      if (isInsertingAtChar && (cursorOffset < 1 || isWhitespaceCharBeforeCursorPosition)) {\n        openMentions()\n        return\n      }\n\n      // If the user begins typing their filter with a space, or if they are deleting\n      // characters after activation and the '@' is no longer there,\n      // clear the search term and close the mentions menu.\n      if (\n        filterStartsWithSpaceChar ||\n        (isDeleteText &&\n          (focusSpan?.text.length === 1 || lastIndexOfAt === (focusSpan?.text.length || 0) - 1))\n      ) {\n        closeMentions()\n        return\n      }\n\n      // Update the search term\n      if (isPortableTextSpan(focusChild)) {\n        // Term starts with the @ char in the value until the cursor offset\n        let term = focusChild.text.substring(lastIndexOfAt + 1, cursorOffset)\n        // Add the char to the mentions search term\n        if (isInsertText) {\n          term += event.data\n        }\n        // Exclude the char from the mentions search term\n        if (isDeleteText) {\n          term = term.substring(0, term.length - 1)\n        }\n        // Set the updated mentions search term\n        setMentionsSearchTerm(term)\n      }\n    },\n    [closeMentions, editor, mentionsSearchTerm, openMentions],\n  )\n\n  const insertAtChar = useCallback(() => {\n    setMentionsMenuOpen(true)\n    PortableTextEditor.focus(editor)\n    PortableTextEditor.insertChild(editor, editor.schemaTypes.span, {text: '@'})\n    setSelectionAtMentionInsert(PortableTextEditor.getSelection(editor))\n  }, [editor])\n\n  useDidUpdate(mentionsMenuOpen, () => onMentionMenuOpenChange?.(mentionsMenuOpen))\n\n  const insertMention = useCallback(\n    (userId: string) => {\n      const mentionSchemaType = editor.schemaTypes.inlineObjects.find((t) => t.name === 'mention')\n      let mentionPath: Path | undefined\n\n      const [span, spanPath] =\n        (selectionAtMentionInsert &&\n          PortableTextEditor.findByPath(editor, selectionAtMentionInsert.focus.path)) ||\n        []\n      if (span && isPortableTextSpan(span) && spanPath && mentionSchemaType) {\n        PortableTextEditor.focus(editor)\n        const offset = PortableTextEditor.getSelection(editor)?.focus.offset\n        if (typeof offset !== 'undefined') {\n          PortableTextEditor.delete(\n            editor,\n            {\n              anchor: {path: spanPath, offset: span.text.lastIndexOf('@')},\n              focus: {path: spanPath, offset},\n            },\n            {mode: 'selected'},\n          )\n          PortableTextEditor.insertChild(editor, mentionSchemaType, {\n            userId: userId,\n          })\n          PortableTextEditor.insertChild(editor, editor.schemaTypes.span, {text: ' '})\n        }\n      }\n    },\n    [editor, selectionAtMentionInsert],\n  )\n\n  const ctxValue = useMemo(\n    (): CommentInputContextValue => ({\n      canSubmit,\n      closeMentions,\n      editor,\n      expandOnFocus,\n      focused,\n      focusEditor,\n      focusOnMount,\n      hasChanges,\n      insertAtChar,\n      insertMention,\n      mentionOptions,\n      mentionsMenuOpen,\n      mentionsSearchTerm,\n      onBeforeInput,\n      openMentions,\n      readOnly: Boolean(readOnly),\n      value,\n    }),\n    [\n      canSubmit,\n      closeMentions,\n      editor,\n      expandOnFocus,\n      focused,\n      focusEditor,\n      focusOnMount,\n      hasChanges,\n      insertAtChar,\n      insertMention,\n      mentionOptions,\n      mentionsMenuOpen,\n      mentionsSearchTerm,\n      onBeforeInput,\n      openMentions,\n      readOnly,\n      value,\n    ],\n  )\n\n  return <CommentInputContext.Provider value={ctxValue}>{children}</CommentInputContext.Provider>\n}\n","import {useContext} from 'react'\n\nimport {CommentInputContext, type CommentInputContextValue} from './CommentInputProvider'\n\nexport function useCommentInput(): CommentInputContextValue {\n  const ctx = useContext(CommentInputContext)\n\n  if (!ctx) {\n    throw new Error('useCommentInputContext must be used within a CommentInputProvider')\n  }\n\n  return ctx\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react'\n\nconst EVENT_LISTENER_OPTIONS: AddEventListenerOptions = {passive: true}\n\ninterface CursorElementHookOptions {\n  disabled: boolean\n  rootElement: HTMLElement | null\n}\n\nexport function useCursorElement(opts: CursorElementHookOptions): HTMLElement | null {\n  const {disabled, rootElement} = opts\n  const [cursorRect, setCursorRect] = useState<DOMRect | null>(null)\n\n  const cursorElement = useMemo(() => {\n    if (!cursorRect) {\n      return null\n    }\n    return {\n      getBoundingClientRect: () => {\n        return cursorRect\n      },\n    } as HTMLElement\n  }, [cursorRect])\n\n  const handleSelectionChange = useCallback(() => {\n    if (disabled) {\n      setCursorRect(null)\n      return\n    }\n\n    const sel = window.getSelection()\n\n    if (!sel || !sel.isCollapsed || sel.rangeCount === 0) return\n\n    const range = sel.getRangeAt(0)\n    const isWithinRoot = rootElement?.contains(range.commonAncestorContainer)\n\n    if (!isWithinRoot) {\n      setCursorRect(null)\n      return\n    }\n    const rect = range?.getBoundingClientRect()\n    if (rect) {\n      setCursorRect(rect)\n    }\n  }, [disabled, rootElement])\n\n  useEffect(() => {\n    document.addEventListener('selectionchange', handleSelectionChange, EVENT_LISTENER_OPTIONS)\n\n    return () => {\n      document.removeEventListener('selectionchange', handleSelectionChange)\n    }\n  }, [handleSelectionChange])\n\n  return cursorElement\n}\n","import {\n  type EditorSelection,\n  PortableTextEditable,\n  usePortableTextEditorSelection,\n} from '@sanity/portable-text-editor'\nimport {isPortableTextSpan, isPortableTextTextBlock} from '@sanity/types'\nimport {useClickOutside} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2} from '@sanity/ui/theme'\nimport {isEqual} from 'lodash'\nimport {type KeyboardEvent, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {useTranslation} from 'sanity'\nimport styled, {css} from 'styled-components'\n\nimport {Popover, type PopoverProps} from '../../../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../../../i18n'\nimport {MentionsMenu, type MentionsMenuHandle} from '../../mentions'\nimport {renderBlock, renderChild} from '../render'\nimport {useCommentInput} from './useCommentInput'\nimport {useCursorElement} from './useCursorElement'\n\nconst POPOVER_FALLBACK_PLACEMENTS: PopoverProps['fallbackPlacements'] = ['bottom', 'top']\nconst INLINE_STYLE: React.CSSProperties = {outline: 'none'}\nconst EMPTY_ARRAY: [] = []\n\nconst PlaceholderWrapper = styled.span((props) => {\n  const {color} = getTheme_v2(props.theme)\n  return css`\n    color: ${color.input.default.enabled.placeholder};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    text-wrap: nowrap;\n    display: block;\n  `\n})\n\nexport const StyledPopover = styled(Popover)(({theme}) => {\n  const {space, radius} = theme.sanity\n\n  return css`\n    &[data-placement='bottom'] {\n      transform: translateY(${space[1]}px);\n    }\n\n    &[data-placement='top'] {\n      transform: translateY(-${space[1]}px);\n    }\n\n    [data-ui='Popover__wrapper'] {\n      border-radius: ${radius[3]}px;\n      display: flex;\n      flex-direction: column;\n      overflow: clip;\n      overflow: hidden;\n      position: relative;\n      width: 300px; // todo: improve\n    }\n  `\n})\n\ninterface EditableProps {\n  focusLock?: boolean\n  onBlur?: (e: React.FormEvent<HTMLDivElement>) => void\n  onFocus?: (e: React.FormEvent<HTMLDivElement>) => void\n  onKeyDown?: (e: React.KeyboardEvent<Element>) => void\n  onSubmit?: () => void\n  placeholder?: React.ReactNode\n}\n\nexport interface EditableHandle {\n  setShowMentionOptions: (show: boolean) => void\n}\n\nexport function Editable(props: EditableProps) {\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const {\n    focusLock,\n    placeholder = t('compose.create-comment-placeholder'),\n    onFocus,\n    onBlur,\n    onKeyDown,\n    onSubmit,\n  } = props\n  const [popoverElement, setPopoverElement] = useState<HTMLDivElement | null>(null)\n  const rootElementRef = useRef<HTMLDivElement | null>(null)\n  const editableRef = useRef<HTMLDivElement | null>(null)\n  const mentionsMenuRef = useRef<MentionsMenuHandle | null>(null)\n\n  const selection = usePortableTextEditorSelection()\n\n  const {\n    canSubmit,\n    closeMentions,\n    insertMention,\n    mentionOptions,\n    mentionsMenuOpen,\n    mentionsSearchTerm,\n    onBeforeInput,\n    value,\n  } = useCommentInput()\n\n  const cursorElement = useCursorElement({\n    disabled: !mentionsMenuOpen,\n    rootElement: rootElementRef.current,\n  })\n\n  const renderPlaceholder = useCallback(\n    () => <PlaceholderWrapper>{placeholder}</PlaceholderWrapper>,\n    [placeholder],\n  )\n\n  const handleClickOutside = useCallback(() => {\n    if (mentionsMenuOpen) {\n      closeMentions()\n    }\n  }, [closeMentions, mentionsMenuOpen])\n\n  useClickOutside(handleClickOutside, [popoverElement])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      switch (event.key) {\n        case 'Enter':\n          // Shift enter is used to insert a new line,\n          // keep the default behavior\n          if (event.shiftKey) {\n            break\n          }\n          // Enter is being used both to select something from the mentionsMenu\n          // or to submit the comment. Prevent the default behavior.\n          event.preventDefault()\n          event.stopPropagation()\n\n          // If the mention menu is open close it, but don't submit.\n          if (mentionsMenuOpen) {\n            closeMentions()\n            break\n          }\n\n          // Submit the comment if eligible for submission\n          if (onSubmit && canSubmit) {\n            onSubmit()\n          }\n          break\n\n        case 'Escape':\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          if (mentionsMenuOpen) {\n            // stop these events if the menu is open\n            event.preventDefault()\n            event.stopPropagation()\n            closeMentions()\n          }\n          break\n        default:\n      }\n      // Call parent key handler\n      if (onKeyDown) onKeyDown(event)\n    },\n    [canSubmit, closeMentions, mentionsMenuOpen, onKeyDown, onSubmit],\n  )\n\n  const initialSelectionAtEndOfContent: EditorSelection | undefined = useMemo(() => {\n    if (selection) {\n      return undefined\n    }\n    const lastBlock = (value || EMPTY_ARRAY).slice(-1)[0]\n    const lastChild = isPortableTextTextBlock(lastBlock)\n      ? lastBlock.children.slice(-1)[0]\n      : undefined\n    if (!lastChild) {\n      return undefined\n    }\n    const point = {\n      path: [{_key: lastBlock._key}, 'children', {_key: lastChild._key}],\n      offset: isPortableTextSpan(lastChild) ? lastChild.text.length : 0,\n    }\n    return {\n      focus: point,\n      anchor: point,\n    }\n  }, [value, selection])\n\n  // Update the mentions search term in the mentions menu\n  useEffect(() => {\n    mentionsMenuRef.current?.setSearchTerm(mentionsSearchTerm)\n  }, [mentionsSearchTerm])\n\n  // Close mentions if the user selects text\n  useEffect(() => {\n    if (mentionsMenuOpen && selection && !isEqual(selection.anchor, selection.focus)) {\n      closeMentions()\n    }\n  }, [mentionsMenuOpen, closeMentions, selection])\n\n  const popoverContent = (\n    <MentionsMenu\n      inputElement={editableRef.current}\n      loading={mentionOptions.loading}\n      onSelect={insertMention}\n      options={mentionOptions.data || EMPTY_ARRAY}\n      ref={mentionsMenuRef}\n    />\n  )\n\n  return (\n    <div ref={rootElementRef}>\n      <StyledPopover\n        arrow={false}\n        constrainSize\n        content={popoverContent}\n        disabled={!mentionsMenuOpen}\n        fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n        open={mentionsMenuOpen}\n        placement=\"bottom\"\n        ref={setPopoverElement}\n        referenceElement={cursorElement}\n      />\n\n      <PortableTextEditable\n        data-testid=\"comment-input-editable\"\n        data-ui=\"EditableElement\"\n        onBeforeInput={onBeforeInput}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onKeyDown={handleKeyDown}\n        ref={editableRef}\n        renderBlock={renderBlock}\n        renderChild={renderChild}\n        renderPlaceholder={renderPlaceholder}\n        selection={initialSelectionAtEndOfContent}\n        style={INLINE_STYLE}\n        tabIndex={focusLock ? 0 : undefined}\n      />\n    </div>\n  )\n}\n","import {type CurrentUser} from '@sanity/types'\nimport {Box, Card, Flex, MenuDivider, Stack} from '@sanity/ui'\nimport type * as React from 'react'\nimport {useCallback} from 'react'\nimport {useTranslation, useUser} from 'sanity'\nimport styled, {css} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../../../i18n'\nimport {CommentsAvatar} from '../../avatars/CommentsAvatar'\nimport {MentionIcon, SendIcon} from '../../icons'\nimport {Editable} from './Editable'\nimport {useCommentInput} from './useCommentInput'\n\nconst EditableWrap = styled(Box)`\n  max-height: 20vh;\n  overflow-y: auto;\n`\n\nconst ButtonDivider = styled(MenuDivider)({\n  height: 20,\n  width: 1,\n})\n\nconst RootCard = styled(Card)(({theme}) => {\n  const radii = theme.sanity.radius[2]\n\n  return css`\n    border-radius: ${radii}px;\n\n    &:not([data-expand-on-focus='false'], :focus-within) {\n      background: transparent;\n      box-shadow: unset;\n    }\n\n    &[data-focused='true']:focus-within {\n      ${EditableWrap} {\n        min-height: 1em;\n      }\n\n      box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n    }\n\n    &:focus-within {\n      ${EditableWrap} {\n        min-height: 1em;\n      }\n    }\n\n    &[data-expand-on-focus='false'] {\n      ${EditableWrap} {\n        min-height: 1em;\n      }\n    }\n\n    &[data-expand-on-focus='true'] {\n      [data-ui='CommentInputActions']:not([hidden]) {\n        display: none;\n      }\n\n      &:focus-within {\n        [data-ui='CommentInputActions'] {\n          display: flex;\n        }\n      }\n    }\n  `\n})\n\ninterface CommentInputInnerProps {\n  currentUser: CurrentUser\n  focusLock?: boolean\n  onBlur?: (e: React.FormEvent<HTMLDivElement>) => void\n  onFocus?: (e: React.FormEvent<HTMLDivElement>) => void\n  onKeyDown?: (e: React.KeyboardEvent<Element>) => void\n  onSubmit: () => void\n  placeholder?: React.ReactNode\n  withAvatar?: boolean\n}\n\nexport function CommentInputInner(props: CommentInputInnerProps) {\n  const {currentUser, focusLock, onBlur, onFocus, onKeyDown, onSubmit, placeholder, withAvatar} =\n    props\n\n  const [user] = useUser(currentUser.id)\n  const {canSubmit, expandOnFocus, focused, hasChanges, insertAtChar, openMentions, readOnly} =\n    useCommentInput()\n\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const avatar = withAvatar ? <CommentsAvatar user={user} /> : null\n\n  const handleMentionButtonClicked = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      insertAtChar()\n      openMentions()\n    },\n    [insertAtChar, openMentions],\n  )\n\n  return (\n    <Flex align=\"flex-start\" gap={2}>\n      {avatar}\n\n      <RootCard\n        data-expand-on-focus={expandOnFocus && !canSubmit ? 'true' : 'false'}\n        data-focused={focused ? 'true' : 'false'}\n        flex={1}\n        shadow={1}\n        sizing=\"border\"\n        tone={readOnly ? 'transparent' : 'default'}\n      >\n        <Stack>\n          <EditableWrap paddingX={1} paddingY={2} sizing=\"border\">\n            <Editable\n              focusLock={focusLock}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              onKeyDown={onKeyDown}\n              onSubmit={onSubmit}\n              placeholder={placeholder}\n            />\n          </EditableWrap>\n\n          <Flex align=\"center\" data-ui=\"CommentInputActions\" gap={1} justify=\"flex-end\" padding={1}>\n            <TooltipDelayGroupProvider>\n              <Button\n                aria-label={t('compose.mention-user-aria-label')}\n                data-testid=\"comment-mention-button\"\n                disabled={readOnly}\n                icon={MentionIcon}\n                mode=\"bleed\"\n                onClick={handleMentionButtonClicked}\n                tooltipProps={{content: t('compose.mention-user-tooltip')}}\n              />\n\n              <ButtonDivider />\n\n              <Button\n                aria-label={t('compose.send-comment-aria-label')}\n                disabled={!canSubmit || !hasChanges || readOnly}\n                icon={SendIcon}\n                mode={hasChanges && canSubmit ? 'default' : 'bleed'}\n                onClick={onSubmit}\n                tone={hasChanges && canSubmit ? 'primary' : 'default'}\n                tooltipProps={{content: t('compose.send-comment-tooltip')}}\n              />\n            </TooltipDelayGroupProvider>\n          </Flex>\n        </Stack>\n      </RootCard>\n    </Flex>\n  )\n}\n","import {type EditorChange, keyGenerator, PortableTextEditor} from '@sanity/portable-text-editor'\nimport {type CurrentUser, type PortableTextBlock} from '@sanity/types'\nimport {focusFirstDescendant, focusLastDescendant, Stack} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState} from 'react'\nimport {type UserListWithPermissionsHookValue} from 'sanity'\n\nimport {editorSchemaType} from '../config'\nimport {CommentInputDiscardDialog} from './CommentInputDiscardDialog'\nimport {CommentInputInner} from './CommentInputInner'\nimport {CommentInputProvider} from './CommentInputProvider'\n\nconst EMPTY_ARRAY: [] = []\n\nconst SCROLL_INTO_VIEW_OPTIONS: ScrollIntoViewOptions = {\n  behavior: 'smooth',\n  block: 'center',\n  inline: 'center',\n}\n\nexport interface CommentInputProps {\n  currentUser: CurrentUser\n  expandOnFocus?: boolean\n  focusLock?: boolean\n  focusOnMount?: boolean\n  mentionOptions: UserListWithPermissionsHookValue\n  onBlur?: (e: React.FormEvent<HTMLDivElement>) => void\n  onChange: (value: PortableTextBlock[]) => void\n  onDiscardCancel: () => void\n  onDiscardConfirm: () => void\n  onFocus?: (e: React.FormEvent<HTMLDivElement>) => void\n  onKeyDown?: (e: React.KeyboardEvent<Element>) => void\n  onMentionMenuOpenChange?: (open: boolean) => void\n  onSubmit: () => void\n  placeholder?: React.ReactNode\n  readOnly?: boolean\n  value: PortableTextBlock[] | null\n  withAvatar?: boolean\n}\n\ninterface CommentDiscardDialogController {\n  open: () => void\n  close: () => void\n}\n\nexport interface CommentInputHandle {\n  blur: () => void\n  discardDialogController: CommentDiscardDialogController\n  focus: () => void\n  scrollTo: () => void\n  reset: () => void\n}\n\n/**\n * @beta\n * @hidden\n */\nexport const CommentInput = forwardRef<CommentInputHandle, CommentInputProps>(\n  function CommentInput(props, ref) {\n    const {\n      currentUser,\n      expandOnFocus,\n      focusLock = false,\n      focusOnMount,\n      mentionOptions,\n      onBlur,\n      onChange,\n      onDiscardCancel,\n      onDiscardConfirm,\n      onFocus,\n      onKeyDown,\n      onMentionMenuOpenChange,\n      onSubmit,\n      placeholder,\n      readOnly,\n      value = EMPTY_ARRAY,\n      withAvatar = true,\n    } = props\n    const [focused, setFocused] = useState<boolean>(false)\n    const editorRef = useRef<PortableTextEditor | null>(null)\n    const editorContainerRef = useRef<HTMLDivElement | null>(null)\n    const [showDiscardDialog, setShowDiscardDialog] = useState<boolean>(false)\n\n    const preDivRef = useRef<HTMLDivElement | null>(null)\n    const postDivRef = useRef<HTMLDivElement | null>(null)\n    const innerRef = useRef<HTMLDivElement | null>(null)\n\n    // A unique (React) key for the editor instance.\n    const [editorInstanceKey, setEditorInstanceKey] = useState(keyGenerator())\n\n    const requestFocus = useCallback(() => {\n      requestAnimationFrame(() => {\n        if (!editorRef.current) return\n        PortableTextEditor.focus(editorRef.current)\n      })\n    }, [])\n\n    const resetEditorInstance = useCallback(() => {\n      setEditorInstanceKey(keyGenerator())\n    }, [])\n\n    const handleChange = useCallback(\n      (change: EditorChange) => {\n        // Focus the editor when ready if focusOnMount is true\n        if (change.type === 'ready') {\n          if (focusOnMount) {\n            requestFocus()\n          }\n        }\n        if (change.type === 'focus') {\n          setFocused(true)\n        }\n\n        if (change.type === 'blur') {\n          setFocused(false)\n        }\n\n        // Update the comment value whenever the comment is edited by the user.\n        if (change.type === 'patch' && editorRef.current) {\n          const editorStateValue = PortableTextEditor.getValue(editorRef.current)\n          onChange(editorStateValue || EMPTY_ARRAY)\n        }\n      },\n      [focusOnMount, onChange, requestFocus],\n    )\n\n    const scrollToEditor = useCallback(() => {\n      editorContainerRef.current?.scrollIntoView(SCROLL_INTO_VIEW_OPTIONS)\n    }, [])\n\n    const handleSubmit = useCallback(() => {\n      onSubmit()\n      resetEditorInstance()\n      requestFocus()\n      scrollToEditor()\n    }, [onSubmit, requestFocus, resetEditorInstance, scrollToEditor])\n\n    const handleDiscardConfirm = useCallback(() => {\n      onDiscardConfirm()\n      resetEditorInstance()\n    }, [onDiscardConfirm, resetEditorInstance])\n\n    // The way a user a comment can be discarded varies from the context it is used in.\n    // This controller is used to take care of the main logic of the discard process, while\n    // specific behavior is handled by the consumer.\n    const discardDialogController = useMemo((): CommentDiscardDialogController => {\n      return {\n        open: () => {\n          setShowDiscardDialog(true)\n        },\n        close: () => {\n          setShowDiscardDialog(false)\n          requestFocus()\n        },\n      }\n    }, [requestFocus])\n\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          focus: requestFocus,\n          blur() {\n            if (editorRef.current) {\n              PortableTextEditor.blur(editorRef.current)\n            }\n          },\n          scrollTo: scrollToEditor,\n          reset: resetEditorInstance,\n\n          discardDialogController,\n        }\n      },\n      [discardDialogController, requestFocus, resetEditorInstance, scrollToEditor],\n    )\n\n    const handleFocus = useCallback(\n      (event: React.FocusEvent<HTMLDivElement>) => {\n        if (!focusLock) return\n\n        const target = event.target\n        const innerEl = innerRef.current\n\n        if (innerEl && target === preDivRef.current) {\n          focusLastDescendant(innerEl)\n          return\n        }\n\n        if (innerEl && target === postDivRef.current) {\n          focusFirstDescendant(innerEl)\n        }\n      },\n      [focusLock],\n    )\n\n    return (\n      <>\n        {showDiscardDialog && (\n          <CommentInputDiscardDialog onClose={onDiscardCancel} onConfirm={handleDiscardConfirm} />\n        )}\n\n        <Stack ref={editorContainerRef} data-testid=\"comment-input\" onFocus={handleFocus}>\n          <PortableTextEditor\n            key={editorInstanceKey}\n            onChange={handleChange}\n            readOnly={readOnly}\n            ref={editorRef}\n            schemaType={editorSchemaType}\n            value={value || EMPTY_ARRAY}\n          >\n            <CommentInputProvider\n              expandOnFocus={expandOnFocus}\n              focused={focused}\n              focusOnMount={focusOnMount}\n              mentionOptions={mentionOptions}\n              onMentionMenuOpenChange={onMentionMenuOpenChange}\n              readOnly={readOnly}\n              value={value}\n            >\n              {focusLock && <div ref={preDivRef} tabIndex={0} />}\n\n              <Stack ref={innerRef}>\n                <CommentInputInner\n                  currentUser={currentUser}\n                  focusLock={focusLock}\n                  onBlur={onBlur}\n                  onFocus={onFocus}\n                  onKeyDown={onKeyDown}\n                  onSubmit={handleSubmit}\n                  placeholder={placeholder}\n                  withAvatar={withAvatar}\n                />\n              </Stack>\n\n              {focusLock && <div ref={postDivRef} tabIndex={0} />}\n            </CommentInputProvider>\n          </PortableTextEditor>\n        </Stack>\n      </>\n    )\n  },\n)\n","import {PortableText, type PortableTextComponents} from '@portabletext/react'\nimport {Stack} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nimport {type CommentMessage} from '../../types'\nimport {MentionInlineBlock, NormalBlock} from './blocks'\n\nconst PortableTextWrap = styled(Stack)(() => {\n  return css`\n    & > [data-ui='Text']:not(:first-child) {\n      margin-top: 1em; // todo: improve\n    }\n\n    & > [data-ui='Text']:has(> span:empty) {\n      display: none;\n    }\n  `\n})\n\nconst EMPTY_ARRAY: [] = []\n\nconst components: PortableTextComponents = {\n  block: {\n    normal: ({children}) => <NormalBlock>{children}</NormalBlock>,\n\n    // Since we do not offer any formatting options, we can just use the normal block for all of these.\n    h1: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    h2: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    h3: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    h4: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    h5: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    h6: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    blockquote: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    code: ({children}) => <NormalBlock>{children}</NormalBlock>,\n  },\n  list: {\n    bullet: ({children}) => children,\n    number: ({children}) => <>{children}</>,\n    checkmarks: ({children}) => <>{children}</>,\n  },\n  listItem: {\n    bullet: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    number: ({children}) => <NormalBlock>{children}</NormalBlock>,\n    checkmarks: ({children}) => <NormalBlock>{children}</NormalBlock>,\n  },\n  marks: {\n    // Since we do not offer any formatting options, we can just use the normal block for all of these.\n    strong: ({children}) => <>{children}</>,\n    em: ({children}) => <>{children}</>,\n    code: ({children}) => <>{children}</>,\n    underline: ({children}) => <>{children}</>,\n    strikeThrough: ({children}) => <>{children}</>,\n    link: ({children}) => <>{children}</>,\n  },\n  types: {\n    mention: (props) => {\n      return <MentionInlineBlock userId={props?.value?.userId} selected={false} />\n    },\n  },\n}\n\ninterface CommentMessageSerializerProps {\n  blocks: CommentMessage\n}\n\n/**\n * @beta\n * @hidden\n */\nexport function CommentMessageSerializer(props: CommentMessageSerializerProps) {\n  const {blocks} = props\n\n  return (\n    <PortableTextWrap>\n      <PortableText value={blocks || EMPTY_ARRAY} components={components} />\n    </PortableTextWrap>\n  )\n}\n","import {type FlexProps} from '@sanity/ui'\n\nexport const FLEX_GAP: FlexProps['gap'] = 3\n","import {type CommentReactionOption, type CommentReactionShortNames} from './types'\n\n// These should not be alphabetized as the current order is intentional\nexport const COMMENT_REACTION_OPTIONS: CommentReactionOption[] = [\n  {\n    shortName: ':+1:',\n    title: 'Thumbs up',\n  },\n  {\n    shortName: ':-1:',\n    title: 'Thumbs down',\n  },\n  {\n    shortName: ':heart:',\n    title: 'Heart',\n  },\n  {\n    shortName: ':rocket:',\n    title: 'Rocket',\n  },\n  {\n    shortName: ':heavy_plus_sign:',\n    title: 'Heavy plus sign',\n  },\n  {\n    shortName: ':eyes:',\n    title: 'Eyes',\n  },\n]\n\nexport const COMMENT_REACTION_EMOJIS: Record<CommentReactionShortNames, string> = {\n  ':-1:': '👎',\n  ':+1:': '👍',\n  ':eyes:': '👀',\n  ':heart:': '❤️',\n  ':heavy_plus_sign:': '➕',\n  ':rocket:': '🚀',\n}\n","import {Text} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const EmojiText = styled(Text)`\n  font-family: 'Twemoji Mozilla', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\n    'Noto Color Emoji', 'EmojiOne Color', 'Android Emoji', sans-serif;\n`\n","// eslint-disable-next-line no-restricted-imports\nimport {Button as UIButton, Grid} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {COMMENT_REACTION_EMOJIS} from '../../constants'\nimport {type CommentReactionOption} from '../../types'\nimport {EmojiText} from './EmojiText.styled'\n\nconst GRID_COLUMNS = 6\n\ninterface CommentReactionsMenuProps {\n  options: CommentReactionOption[]\n  onSelect: (option: CommentReactionOption) => void\n}\n\nexport function CommentReactionsMenu(props: CommentReactionsMenuProps) {\n  const {options, onSelect} = props\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const [focusableElements, setFocusableElements] = useState<HTMLButtonElement[]>([])\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [focusedIndex, setFocusedIndex] = useState<number>(0)\n\n  const handleRootKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      const focusableLen = focusableElements.length\n\n      if (event.key === 'ArrowRight') {\n        setFocusedIndex((prev) => (prev + 1) % focusableLen)\n      }\n      if (event.key === 'ArrowLeft') {\n        setFocusedIndex((prev) => (prev - 1 + focusableLen) % focusableLen)\n      }\n      // if (event.key === 'ArrowDown') {\n      //   setFocusedIndex((prev) => (prev + GRID_COLUMNS) % focusableLen)\n      // }\n      // if (event.key === 'ArrowUp') {\n      //   setFocusedIndex((prev) => (prev - GRID_COLUMNS + focusableLen) % focusableLen)\n      // }\n    },\n    [focusableElements.length],\n  )\n\n  const handleOptionClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      const index = focusableElements.indexOf(event.currentTarget)\n      setFocusedIndex(index)\n      onSelect(options[index])\n    },\n    [focusableElements, onSelect, options],\n  )\n\n  // Get all the buttons in the grid and set them as focusable elements.\n  useEffect(() => {\n    if (rootElement) {\n      const buttons = rootElement.querySelectorAll('button')\n      setFocusableElements(Array.from(buttons))\n    }\n  }, [rootElement])\n\n  // Focus the button at the focused index.\n  useEffect(() => {\n    if (focusableElements.length > 0) {\n      focusableElements[focusedIndex].focus()\n    }\n  }, [focusableElements, focusedIndex])\n\n  return (\n    <Grid\n      columns={GRID_COLUMNS}\n      gap={1}\n      onKeyDown={handleRootKeyDown}\n      ref={setRootElement}\n      role=\"menu\"\n    >\n      {options.map((o) => {\n        const emoji = COMMENT_REACTION_EMOJIS[o.shortName]\n\n        return (\n          <UIButton\n            aria-label={t('reactions.react-with-aria-label', {\n              reactionName: o.title || o.shortName,\n            })}\n            key={o.shortName}\n            mode=\"bleed\"\n            onClick={handleOptionClick}\n            padding={2}\n            role=\"menuitem\"\n            tabIndex={-1}\n          >\n            <EmojiText align=\"center\" size={2}>\n              {emoji}\n            </EmojiText>\n          </UIButton>\n        )\n      })}\n    </Grid>\n  )\n}\n","import {Card, useClickOutside} from '@sanity/ui'\nimport {cloneElement, useCallback, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {Popover, type PopoverProps} from '../../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {type CommentReactionOption, type CommentsUIMode} from '../../types'\nimport {CommentReactionsMenu} from './CommentReactionsMenu'\n\nconst POPOVER_FALLBACK_PLACEMENTS: PopoverProps['fallbackPlacements'] = ['top', 'bottom']\n\nexport interface CommentReactionsMenuButtonProps {\n  mode: CommentsUIMode\n  onMenuClose?: () => void\n  onMenuOpen?: () => void\n  onSelect: (option: CommentReactionOption) => void\n  options: CommentReactionOption[]\n  readOnly?: boolean\n  renderMenuButton: (props: {\n    open: boolean\n    tooltipContent: string\n    t: TFunction\n  }) => React.ReactElement\n}\n\nexport function CommentReactionsMenuButton(props: CommentReactionsMenuButtonProps) {\n  const {onMenuClose, onMenuOpen, onSelect, options, readOnly, renderMenuButton, mode} = props\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n  const [popoverElement, setPopoverElement] = useState<HTMLDivElement | null>(null)\n\n  const [open, setOpen] = useState<boolean>(false)\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  const handleClick = useCallback(() => {\n    const next = !open\n    setOpen(next)\n\n    if (next) {\n      onMenuOpen?.()\n    } else {\n      onMenuClose?.()\n    }\n  }, [onMenuClose, onMenuOpen, open])\n\n  const handleClose = useCallback(() => {\n    if (!open) return\n\n    setOpen(false)\n    onMenuClose?.()\n    buttonElement?.focus()\n  }, [buttonElement, onMenuClose, open])\n\n  const handleClickOutside = useCallback(handleClose, [handleClose])\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      const {key, shiftKey} = event\n\n      if ((shiftKey && key === 'Tab') || key === 'Escape' || key === 'Tab') {\n        handleClose()\n      }\n    },\n    [handleClose],\n  )\n\n  useClickOutside(handleClickOutside, [popoverElement, buttonElement])\n\n  const handleSelect = useCallback(\n    (option: CommentReactionOption) => {\n      onSelect(option)\n      handleClose()\n    },\n    [handleClose, onSelect],\n  )\n\n  const button = useMemo(() => {\n    // Get the button element from the renderMenuButton function.\n    const btn = renderMenuButton({\n      open,\n      tooltipContent:\n        mode === 'upsell'\n          ? t('list-item.context-menu-add-reaction-upsell')\n          : t('list-item.context-menu-add-reaction'),\n      t,\n    })\n\n    // Clone the button element and add the necessary props.\n    return cloneElement(btn, {\n      'aria-expanded': open,\n      'aria-haspopup': 'true',\n      disabled: readOnly || mode === 'upsell',\n      id: 'reactions-menu-button',\n      onClick: handleClick,\n      ref: setButtonElement,\n    })\n  }, [handleClick, open, readOnly, renderMenuButton, t, mode])\n\n  const popoverContent = (\n    <Card\n      aria-labelledby=\"reactions-menu-button\"\n      onKeyDown={handleKeyDown}\n      padding={1}\n      radius={3}\n      tone=\"default\"\n    >\n      <CommentReactionsMenu onSelect={handleSelect} options={options} />\n    </Card>\n  )\n\n  return (\n    <Popover\n      constrainSize\n      content={popoverContent}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open={open}\n      placement=\"bottom\"\n      portal\n      ref={setPopoverElement}\n      tone=\"default\"\n    >\n      {button}\n    </Popover>\n  )\n}\n","import {Box, Flex, Stack, Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {type CurrentUser, Translate, useListFormat, useTranslation, useUser} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {COMMENT_REACTION_EMOJIS} from '../../constants'\nimport {type CommentReactionShortNames} from '../../types'\nimport {EmojiText} from './EmojiText.styled'\n\nconst TEXT_SIZE: number | number[] = 1\n\nconst ContentStack = styled(Stack)`\n  max-width: 180px;\n`\n\nconst TextGroup = styled.div`\n  display: inline-block;\n`\n\nconst InlineText = styled(Text).attrs({size: TEXT_SIZE})`\n  display: inline-block !important;\n\n  & > span {\n    white-space: break-spaces;\n  }\n`\n\nconst TextBox = styled(Box)`\n  line-height: 1;\n  text-align: center;\n`\n\nconst LEADING_NON_WHITESPACE_RE = /^\\S+/\n\ninterface UserDisplayNameProps {\n  currentUserId: string\n  isFirst?: boolean\n  userId: string\n}\n\nfunction UserDisplayName(props: UserDisplayNameProps): string {\n  const {currentUserId, isFirst, userId} = props\n  const [user] = useUser(userId)\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  const isCurrentUser = currentUserId === userId\n  if (isCurrentUser) {\n    const context = isFirst ? 'leading' : undefined\n    return t('reactions.user-list.you', {context, replace: {name: user?.displayName}})\n  }\n\n  return user?.displayName || t('reactions.user-list.unknown-user-fallback-name')\n}\n\ninterface CommentReactionsUsersTooltipProps {\n  children: React.ReactNode\n  currentUser: CurrentUser\n  reactionName: CommentReactionShortNames\n  userIds: string[]\n}\n\nexport function CommentReactionsUsersTooltip(props: CommentReactionsUsersTooltipProps) {\n  const {children, ...restProps} = props\n\n  return (\n    <Tooltip\n      content={<CommentReactionsUsersTooltipContent {...restProps} />}\n      placement=\"bottom\"\n      portal\n    >\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n\nfunction FormattedUserList({currentUserId, userIds}: {currentUserId: string; userIds: string[]}) {\n  const listFormat = useListFormat({style: 'long', type: 'conjunction'})\n  if (userIds.length === 0) return null\n\n  /**\n   * We need to do some surgery on the list: in some locales (such as en-US), the literal segments\n   * can contain oxford commas, which we want to include as the part of the element preceeding it.\n   * This ensures that we do not wrap to a new line that starts with a comma. In general, we should\n   * not special case on _comma_ per se, but rather by the presence of a non-whitespace character.\n   */\n  const parts = listFormat.formatToParts(userIds)\n  const elements: JSX.Element[] = []\n  for (let i = 0; i < parts.length; i++) {\n    const item = parts[i]\n\n    if (item.type === 'literal') {\n      // Add literals as-is - the next case will rewrite literals to exclude leading non-whitespace\n      elements.push(<InlineText key={`literal-${i}`}>{item.value}</InlineText>)\n      continue\n    }\n\n    const nextItem = parts[i + 1]\n    const nextLeadsWithNonWhitespace =\n      nextItem && nextItem.type === 'literal' && LEADING_NON_WHITESPACE_RE.test(nextItem.value)\n    if (nextLeadsWithNonWhitespace) {\n      // This is the 'oxford comma' case, where we want to include any leading non-whitespace from\n      // the literal as trailing characters to the element we are currently adding.\n      const [nonWhitespace = ''] = nextItem.value.match(LEADING_NON_WHITESPACE_RE) || []\n\n      elements.push(\n        // Key (value) is user ID, thus unique\n        <TextGroup key={item.value}>\n          <InlineText weight=\"medium\">\n            <UserDisplayName currentUserId={currentUserId} isFirst={i === 0} userId={item.value} />\n          </InlineText>\n          <InlineText>{nonWhitespace}</InlineText>\n        </TextGroup>,\n      )\n\n      // Rewrite the next item to not contain this leading non-whitespace\n      nextItem.value = nextItem.value.slice(nonWhitespace.length)\n      continue\n    }\n\n    // Literals have been taken care of and returns early, so the only remaining case is that we're\n    // in an element that does _not_ have a leading non-whitespace literal following it.\n    elements.push(\n      // Key (value) is user ID, thus unique\n      <InlineText weight=\"medium\" key={item.value}>\n        <UserDisplayName currentUserId={currentUserId} isFirst={i === 0} userId={item.value} />\n      </InlineText>,\n    )\n  }\n\n  return elements\n}\n\nexport function CommentReactionsUsersTooltipContent(\n  props: Omit<CommentReactionsUsersTooltipProps, 'children'>,\n) {\n  const {currentUser, reactionName, userIds} = props\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  const UserList = useCallback(() => {\n    if (!currentUser) return null\n    return <FormattedUserList currentUserId={currentUser.id} userIds={userIds} />\n  }, [currentUser, userIds])\n\n  return (\n    <ContentStack padding={1}>\n      <Flex justify=\"center\" paddingBottom={2} paddingTop={1}>\n        <EmojiText size={4}>{COMMENT_REACTION_EMOJIS[reactionName]}</EmojiText>\n      </Flex>\n\n      <TextBox>\n        <Translate\n          t={t}\n          i18nKey=\"reactions.users-reacted-with-reaction\"\n          values={{reactionName}}\n          components={{\n            UserList,\n            ReactionName: () => <InlineText muted>{reactionName}</InlineText>,\n            Text: ({children}) => (\n              <>\n                <InlineText muted>{children}</InlineText> <wbr />{' '}\n              </>\n            ),\n          }}\n        />\n      </TextBox>\n    </ContentStack>\n  )\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\n/**\n * Returns a styled `<Card>` without a background.\n * This is a temporary workaround to force nested Sanity UI components to adhere to a specific tone (and bypass color mixing).\n *\n * TODO: consider exposing an unstable prop in Sanity UI to facilitate this.\n */\nexport const TransparentCard = styled(Card)`\n  background: none;\n`\n","import {type CurrentUser} from '@sanity/types'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Button as UIButton,\n  Flex,\n  Text,\n} from '@sanity/ui'\nimport React, {useCallback, useMemo, useRef} from 'react'\n\nimport {Tooltip, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {COMMENT_REACTION_EMOJIS, COMMENT_REACTION_OPTIONS} from '../../constants'\nimport {\n  type CommentReactionItem,\n  type CommentReactionOption,\n  type CommentReactionShortNames,\n  type CommentsUIMode,\n} from '../../types'\nimport {ReactionIcon} from '../icons'\nimport {CommentReactionsMenuButton} from './CommentReactionsMenuButton'\nimport {CommentReactionsUsersTooltip} from './CommentReactionsUsersTooltip'\nimport {EmojiText} from './EmojiText.styled'\nimport {TransparentCard} from './TransparentCard.styled'\n\n/**\n * A function that groups reactions by name. For example:\n *\n * ```js\n * [\n *  [':name:', [{shortName: ':name:', userId: 'user1'}, {shortName: ':name:', userId: 'user2'}],\n *  [':name2:', [{shortName: ':name2:', userId: 'user1'}]\n * ]\n *```\n */\nfunction groupReactionsByName(reactions: CommentReactionItem[]) {\n  const grouped = reactions.reduce(\n    (acc, reaction) => {\n      const {shortName} = reaction\n\n      if (!acc[shortName]) {\n        acc[shortName] = []\n      }\n\n      acc[shortName].push(reaction)\n\n      return acc\n    },\n    {} as Record<CommentReactionShortNames, CommentReactionItem[]>,\n  )\n\n  // Sort based on the first appearance of the reaction in `reactions` array.\n  // This is to ensure that the order of the reactions is consistent so that\n  // the reactions are not jumping around when new reactions are added.\n  const sorted = Object.entries(grouped).sort(([nameA], [nameB]) => {\n    const indexA = reactions.findIndex((r) => r.shortName === nameA)\n    const indexB = reactions.findIndex((r) => r.shortName === nameB)\n\n    return indexA - indexB\n  })\n\n  return sorted as [CommentReactionShortNames, CommentReactionItem[]][]\n}\n\nconst renderMenuButton = ({open, tooltipContent}: {open: boolean; tooltipContent: string}) => {\n  return (\n    <UIButton fontSize={1} mode=\"ghost\" padding={0} radius=\"full\" selected={open}>\n      <Flex paddingX={3} paddingY={2}>\n        <Tooltip animate content={tooltipContent} disabled={open}>\n          <Text size={1}>\n            <ReactionIcon />\n          </Text>\n        </Tooltip>\n      </Flex>\n    </UIButton>\n  )\n}\n\ninterface CommentReactionsBarProps {\n  currentUser: CurrentUser\n  onSelect: (reaction: CommentReactionOption) => void\n  reactions: CommentReactionItem[]\n  readOnly?: boolean\n  mode: CommentsUIMode\n}\n\nexport const CommentReactionsBar = React.memo(function CommentReactionsBar(\n  props: CommentReactionsBarProps,\n) {\n  const {currentUser, onSelect, reactions, readOnly, mode} = props\n  const handleSelect = useCallback(\n    (name: CommentReactionShortNames) => {\n      const option = COMMENT_REACTION_OPTIONS.find((o) => o.shortName === name)\n\n      if (option) {\n        onSelect(option)\n      }\n    },\n    [onSelect],\n  )\n\n  // The list of the current user's reactions, e.g. [':+1:', ':heart:']\n  const currentUserReactionNames = useMemo(() => {\n    return reactions.filter((r) => r.userId === currentUser?.id).map((r) => r.shortName)\n  }, [currentUser?.id, reactions])\n\n  // Reactions grouped by name, e.g. [ [':+1:', [{shortName: ':+1:', userId: 'user1'}] ] ]\n  const groupedReactions = useMemo(() => {\n    const grouped = groupReactionsByName(reactions)\n\n    // Filter out reactions that are not in the `COMMENT_REACTION_EMOJIS` map.\n    return grouped.filter(([name]) => COMMENT_REACTION_EMOJIS[name])\n  }, [reactions])\n\n  // An array of the initial order of the reactions. This is used to sort the reactions.\n  // E.g. [':+1:', ':heart:']\n  const sortOrder = useRef<string[]>(Object.keys(Object.fromEntries(groupedReactions)))\n\n  // Sort the reactions based on the initial order to make sure that the reactions\n  // are not jumping around when new reactions are added.\n  const sortedReactions = useMemo(() => {\n    const sorted = groupedReactions.sort(([nameA], [nameB]) => {\n      const indexA = sortOrder.current.indexOf(nameA)\n      const indexB = sortOrder.current.indexOf(nameB)\n\n      if (indexA === -1) {\n        return 1\n      }\n\n      if (indexB === -1) {\n        return -1\n      }\n\n      return indexA - indexB\n    })\n\n    sortOrder.current = sorted.map(([name]) => name)\n\n    return sorted\n  }, [groupedReactions])\n\n  return (\n    <Flex align=\"center\" gap={1} wrap=\"wrap\">\n      <TooltipDelayGroupProvider>\n        {sortedReactions.map(([name, reactionsList]) => {\n          const hasReacted = currentUserReactionNames.includes(name)\n          const userIds = reactionsList.map((r) => r.userId)\n          const emoji = COMMENT_REACTION_EMOJIS[name]\n\n          return (\n            <CommentReactionsUsersTooltip\n              currentUser={currentUser}\n              key={name}\n              reactionName={name}\n              userIds={userIds}\n            >\n              <TransparentCard tone=\"default\">\n                <UIButton\n                  disabled={readOnly || mode === 'upsell'}\n                  mode=\"ghost\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleSelect(name)}\n                  padding={2}\n                  radius=\"full\"\n                  selected={hasReacted}\n                  tone={hasReacted ? 'primary' : 'default'}\n                >\n                  <Flex align=\"center\" gap={1}>\n                    <EmojiText size={1}>{emoji}</EmojiText>\n\n                    <Text size={0} weight={hasReacted ? 'semibold' : 'medium'}>\n                      {reactionsList?.length}\n                    </Text>\n                  </Flex>\n                </UIButton>\n              </TransparentCard>\n            </CommentReactionsUsersTooltip>\n          )\n        })}\n\n        <TransparentCard tone=\"default\">\n          <CommentReactionsMenuButton\n            mode={mode}\n            // eslint-disable-next-line react/jsx-no-bind\n            onSelect={(o) => handleSelect(o.shortName)}\n            options={COMMENT_REACTION_OPTIONS}\n            readOnly={readOnly}\n            renderMenuButton={renderMenuButton}\n          />\n        </TransparentCard>\n      </TooltipDelayGroupProvider>\n    </Flex>\n  )\n})\n","import {CheckmarkCircleIcon, EditIcon, LinkIcon, TrashIcon, UndoIcon} from '@sanity/icons'\nimport {Card, Flex, Menu, MenuDivider} from '@sanity/ui'\nimport {ContextMenuButton, type TFunction, useTranslation} from 'sanity'\nimport styled from 'styled-components'\n\nimport {\n  Button,\n  MenuButton,\n  type MenuButtonProps,\n  MenuItem,\n  TooltipDelayGroupProvider,\n} from '../../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {COMMENT_REACTION_OPTIONS} from '../../constants'\nimport {type CommentReactionOption, type CommentStatus, type CommentsUIMode} from '../../types'\nimport {ReactionIcon} from '../icons'\nimport {CommentReactionsMenuButton} from '../reactions'\n\nconst renderMenuButton = ({\n  open,\n  tooltipContent,\n  t,\n}: {\n  open: boolean\n  tooltipContent: string\n  t: TFunction\n}) => (\n  <Button\n    aria-label={t('list-item.context-menu-add-reaction-aria-label')}\n    icon={ReactionIcon}\n    mode=\"bleed\"\n    selected={open}\n    tooltipProps={{content: tooltipContent}}\n  />\n)\n\nconst POPOVER_PROPS: MenuButtonProps['popover'] = {\n  placement: 'bottom-end',\n}\n\nconst FloatingCard = styled(Card)`\n  &:empty {\n    display: none;\n  }\n`\n\ninterface CommentsListItemContextMenuProps {\n  canDelete: boolean | undefined\n  canEdit: boolean | undefined\n  isParent: boolean | undefined\n  onCopyLink?: () => void\n  onDeleteStart?: () => void\n  onEditStart?: () => void\n  onMenuClose?: () => void\n  onMenuOpen?: () => void\n  onReactionSelect?: (option: CommentReactionOption) => void\n  onStatusChange?: () => void\n  readOnly?: boolean\n  status: CommentStatus\n  mode: CommentsUIMode\n}\n\nexport function CommentsListItemContextMenu(props: CommentsListItemContextMenuProps) {\n  const {\n    canDelete,\n    canEdit,\n    isParent,\n    onCopyLink,\n    onDeleteStart,\n    onEditStart,\n    onMenuClose,\n    onMenuOpen,\n    onReactionSelect,\n    onStatusChange,\n    readOnly,\n    status,\n    mode,\n  } = props\n\n  const showMenuButton = Boolean(onCopyLink || onDeleteStart || onEditStart)\n\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex>\n        <FloatingCard display=\"flex\" shadow={2} padding={1} radius={2} sizing=\"border\">\n          {onReactionSelect && (\n            <CommentReactionsMenuButton\n              onMenuClose={onMenuClose}\n              mode={mode}\n              onMenuOpen={onMenuOpen}\n              onSelect={onReactionSelect}\n              options={COMMENT_REACTION_OPTIONS}\n              readOnly={readOnly}\n              renderMenuButton={renderMenuButton}\n            />\n          )}\n\n          {isParent && (\n            <Button\n              aria-label={\n                status === 'open'\n                  ? t('list-item.resolved-tooltip-aria-label')\n                  : t('list-item.re-open-resolved-aria-label')\n              }\n              disabled={readOnly}\n              icon={status === 'open' ? CheckmarkCircleIcon : UndoIcon}\n              mode=\"bleed\"\n              onClick={onStatusChange}\n              tooltipProps={{\n                content:\n                  status === 'open'\n                    ? t('list-item.resolved-tooltip-content')\n                    : t('list-item.re-open-resolved'),\n              }}\n            />\n          )}\n\n          <MenuButton\n            id=\"comment-actions-menu\"\n            button={\n              <ContextMenuButton\n                aria-label={t('list-item.open-menu-aria-label')}\n                disabled={readOnly}\n                hidden={!showMenuButton}\n              />\n            }\n            onOpen={onMenuOpen}\n            onClose={onMenuClose}\n            menu={\n              <Menu>\n                <MenuItem\n                  hidden={!canEdit}\n                  icon={EditIcon}\n                  onClick={onEditStart}\n                  text={t('list-item.edit-comment')}\n                  tooltipProps={\n                    mode === 'upsell' ? {content: t('list-item.edit-comment-upsell')} : undefined\n                  }\n                  disabled={mode === 'upsell'}\n                />\n\n                <MenuItem\n                  hidden={!canDelete}\n                  icon={TrashIcon}\n                  onClick={onDeleteStart}\n                  text={t('list-item.delete-comment')}\n                  tone=\"critical\"\n                />\n\n                <MenuDivider hidden={!canDelete && !canEdit} />\n\n                <MenuItem\n                  hidden={!onCopyLink}\n                  icon={LinkIcon}\n                  onClick={onCopyLink}\n                  text={t('list-item.copy-link')}\n                />\n              </Menu>\n            }\n            popover={POPOVER_PROPS}\n          />\n        </FloatingCard>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {hues} from '@sanity/color'\nimport {type CurrentUser} from '@sanity/types'\nimport {Box, Card, Flex, Stack, Text, TextSkeleton, useClickOutside} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  type RelativeTimeOptions,\n  Translate,\n  useDateTimeFormat,\n  useDidUpdate,\n  useRelativeTime,\n  type UserListWithPermissionsHookValue,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\nimport styled, {css} from 'styled-components'\n\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {hasCommentMessageValue, useCommentHasChanged} from '../../helpers'\nimport {\n  type CommentContext,\n  type CommentDocument,\n  type CommentEditPayload,\n  type CommentMessage,\n  type CommentReactionOption,\n  type CommentStatus,\n  type CommentsUIMode,\n} from '../../types'\nimport {AVATAR_HEIGHT, CommentsAvatar, SpacerAvatar} from '../avatars'\nimport {FLEX_GAP} from '../constants'\nimport {CommentMessageSerializer} from '../pte'\nimport {CommentInput, type CommentInputHandle} from '../pte/comment-input'\nimport {CommentReactionsBar} from '../reactions'\nimport {CommentsListItemContextMenu} from './CommentsListItemContextMenu'\n\nconst stopPropagation = (e: React.MouseEvent<HTMLDivElement>) => e.stopPropagation()\n\nconst ContextMenuBox = styled(Box)``\n\nconst SKELETON_INLINE_STYLE: React.CSSProperties = {width: '50%'}\n\nconst EMPTY_ARRAY: [] = []\n\nconst TimeText = styled(Text)(({theme}) => {\n  const isDark = theme.sanity.color.dark\n  const fg = hues.gray[isDark ? 200 : 800].hex\n\n  return css`\n    min-width: max-content;\n    --card-fg-color: ${fg};\n    color: var(--card-fg-color);\n  `\n})\n\nconst IntentText = styled(Text)(({theme}) => {\n  const isDark = theme.sanity.color.dark\n  const fg = hues.gray[isDark ? 200 : 800].hex\n\n  return css`\n    --card-fg-color: ${fg};\n    color: var(--card-fg-color);\n  `\n})\n\nconst InnerStack = styled(Stack)`\n  transition: opacity 200ms ease;\n\n  &[data-muted='true'] {\n    transition: unset;\n    opacity: 0.5;\n  }\n`\n\nconst ErrorFlex = styled(Flex)`\n  min-height: ${AVATAR_HEIGHT}px;\n`\n\nconst RetryCardButton = styled(Card)`\n  // Add not on hover\n  &:not(:hover) {\n    background-color: transparent;\n  }\n`\n\nconst RootStack = styled(Stack)(({theme}) => {\n  const {space} = theme.sanity\n\n  return css`\n    position: relative;\n\n    // Only show the floating layer on hover when hover is supported.\n    // Else, the layer is always visible.\n    @media (hover: hover) {\n      ${ContextMenuBox} {\n        opacity: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        transform: translate(${space[1]}px, -${space[1]}px);\n      }\n\n      ${ContextMenuBox} {\n        &:focus-within {\n          opacity: 1;\n        }\n      }\n\n      &:hover {\n        ${ContextMenuBox} {\n          opacity: 1;\n        }\n      }\n    }\n\n    &[data-menu-open='true'] {\n      ${ContextMenuBox} {\n        opacity: 1;\n      }\n    }\n  `\n})\n\ninterface CommentsListItemLayoutProps {\n  canDelete?: boolean\n  canEdit?: boolean\n  comment: CommentDocument\n  currentUser: CurrentUser\n  hasError?: boolean\n  isParent?: boolean\n  isRetrying?: boolean\n  mentionOptions: UserListWithPermissionsHookValue\n  mode: CommentsUIMode\n  onCopyLink?: (id: string) => void\n  onCreateRetry?: (id: string) => void\n  onDelete: (id: string) => void\n  onEdit: (id: string, message: CommentEditPayload) => void\n  onInputKeyDown?: (event: React.KeyboardEvent<Element>) => void\n  onReactionSelect?: (id: string, reaction: CommentReactionOption) => void\n  onStatusChange?: (id: string, status: CommentStatus) => void\n  readOnly?: boolean\n  intent?: CommentContext['intent']\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {useTemporalPhrase: true}\n\nexport function CommentsListItemLayout(props: CommentsListItemLayoutProps) {\n  const {\n    canDelete,\n    canEdit,\n    comment,\n    currentUser,\n    hasError,\n    intent,\n    isParent,\n    isRetrying,\n    mentionOptions,\n    mode,\n    onCopyLink,\n    onCreateRetry,\n    onDelete,\n    onEdit,\n    onInputKeyDown,\n    onReactionSelect,\n    onStatusChange,\n    readOnly,\n  } = props\n  const {_createdAt, authorId, message, _id, lastEditedAt} = comment\n  const [user] = useUser(authorId)\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  const [value, setValue] = useState<CommentMessage>(message)\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const startMessage = useRef<CommentMessage>(message)\n  const [menuOpen, setMenuOpen] = useState<boolean>(false)\n\n  const hasChanges = useCommentHasChanged(value)\n  const hasValue = useMemo(() => hasCommentMessageValue(value), [value])\n\n  // Filter out reactions that's been optimistically removed from the comment.\n  const reactions = useMemo(\n    () =>\n      (comment?.reactions?.filter((r) => r?._optimisticState !== 'removed') || EMPTY_ARRAY).filter(\n        (r) => {\n          // Filter out reactions that might have to incorrect format\n          return 'userId' in r && 'shortName' in r\n        },\n      ),\n    [comment?.reactions],\n  )\n\n  const hasReactions = Boolean(reactions?.length)\n\n  const commentInputRef = useRef<CommentInputHandle>(null)\n\n  const createdDate = _createdAt ? new Date(_createdAt) : new Date()\n  const editedDate = lastEditedAt ? new Date(lastEditedAt) : null\n  const createdTimeAgo = useRelativeTime(createdDate, RELATIVE_TIME_OPTIONS)\n  const dateTimeFormat = useDateTimeFormat({dateStyle: 'full', timeStyle: 'medium'})\n  const formattedCreatedAt = dateTimeFormat.format(createdDate)\n  const formattedLastEditAt = editedDate ? dateTimeFormat.format(editedDate) : null\n  const displayError = hasError || isRetrying\n\n  const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  const handleCopyLink = useCallback(() => onCopyLink?.(_id), [_id, onCopyLink])\n  const handleCreateRetry = useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      e.stopPropagation()\n      onCreateRetry?.(_id)\n    },\n    [_id, onCreateRetry],\n  )\n  const handleDelete = useCallback(() => onDelete(_id), [_id, onDelete])\n\n  const cancelEdit = useCallback(() => {\n    setIsEditing(false)\n    setValue(startMessage.current)\n  }, [])\n\n  const startDiscard = useCallback(() => {\n    if (!hasValue || !hasChanges) {\n      cancelEdit()\n      return\n    }\n    commentInputRef.current?.discardDialogController.open()\n  }, [cancelEdit, hasChanges, hasValue])\n\n  const handleInputKeyDown = useCallback(\n    (event: React.KeyboardEvent<Element>) => {\n      // Don't act if the input already prevented this event\n      if (event.isDefaultPrevented()) {\n        return\n      }\n      // Discard the input text\n      if (event.key === 'Escape') {\n        event.preventDefault()\n        event.stopPropagation()\n        startDiscard()\n      }\n      // Call parent handler\n      if (onInputKeyDown) onInputKeyDown(event)\n    },\n    [onInputKeyDown, startDiscard],\n  )\n\n  const cancelDiscard = useCallback(() => {\n    commentInputRef.current?.discardDialogController.close()\n  }, [])\n\n  const confirmDiscard = useCallback(() => {\n    commentInputRef.current?.discardDialogController.close()\n    cancelEdit()\n  }, [cancelEdit])\n\n  const handleReactionSelect = useCallback(\n    (reaction: CommentReactionOption) => {\n      onReactionSelect?.(_id, reaction)\n    },\n    [_id, onReactionSelect],\n  )\n\n  const handleEditSubmit = useCallback(() => {\n    onEdit(_id, {message: value})\n    setIsEditing(false)\n  }, [_id, onEdit, value])\n\n  const handleOpenStatusChange = useCallback(() => {\n    onStatusChange?.(_id, comment.status === 'open' ? 'resolved' : 'open')\n  }, [_id, comment.status, onStatusChange])\n\n  const toggleEdit = useCallback(() => {\n    setIsEditing((v) => !v)\n  }, [])\n\n  const handleCloseMenu = useCallback(() => setMenuOpen(false), [])\n\n  const handleClickOutside = useCallback(() => {\n    if (!hasChanges) {\n      cancelEdit()\n    }\n  }, [cancelEdit, hasChanges])\n\n  const handleRootKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'Escape' && !hasChanges) {\n        cancelEdit()\n      }\n    },\n    [cancelEdit, hasChanges],\n  )\n\n  useDidUpdate(isEditing, handleCloseMenu)\n\n  useClickOutside(handleClickOutside, [rootElement])\n\n  const name = user?.displayName ? (\n    <Text size={1} weight=\"medium\" textOverflow=\"ellipsis\" title={user.displayName}>\n      {user.displayName}\n    </Text>\n  ) : (\n    <TextSkeleton size={1} style={SKELETON_INLINE_STYLE} />\n  )\n\n  return (\n    <RootStack\n      data-menu-open={menuOpen ? 'true' : 'false'}\n      onKeyDown={handleRootKeyDown}\n      ref={setRootElement}\n      space={4}\n    >\n      <InnerStack space={1} data-muted={displayError}>\n        <Flex align=\"center\" gap={FLEX_GAP} flex={1}>\n          <CommentsAvatar user={user} />\n\n          <Flex direction=\"column\" gap={2} paddingY={intent ? 2 : 0}>\n            <Flex\n              align=\"center\"\n              paddingBottom={comment.context?.intent ? 0 : 1}\n              sizing=\"border\"\n              flex={1}\n            >\n              <Flex align=\"flex-end\" gap={2}>\n                <Box flex={1}>{name}</Box>\n\n                {!displayError && (\n                  <Flex align=\"center\" gap={1}>\n                    <TimeText muted size={0}>\n                      <time dateTime={createdDate.toISOString()} title={formattedCreatedAt}>\n                        {createdTimeAgo}\n                      </time>\n                    </TimeText>\n\n                    {formattedLastEditAt && editedDate && (\n                      <TimeText muted size={0} title={formattedLastEditAt}>\n                        <time dateTime={editedDate.toISOString()} title={formattedLastEditAt}>\n                          ({t('list-item.layout-edited')})\n                        </time>\n                      </TimeText>\n                    )}\n                  </Flex>\n                )}\n              </Flex>\n            </Flex>\n\n            {intent && (\n              <Box flex={1}>\n                <IntentText muted size={0} textOverflow=\"ellipsis\">\n                  <Translate\n                    t={t}\n                    i18nKey=\"list-item.layout-context\"\n                    values={{title: intent.title, intent: 'edit'}}\n                    components={{\n                      IntentLink: ({children}) =>\n                        intent ? (\n                          <IntentLink params={intent.params} intent={intent.name}>\n                            {children}\n                          </IntentLink>\n                        ) : undefined,\n                    }}\n                  />\n                </IntentText>\n              </Box>\n            )}\n          </Flex>\n\n          {!isEditing && !displayError && (\n            <ContextMenuBox data-root-menu={isParent ? 'true' : 'false'} onClick={stopPropagation}>\n              <CommentsListItemContextMenu\n                canDelete={canDelete}\n                canEdit={canEdit}\n                isParent={isParent}\n                mode={mode}\n                onCopyLink={handleCopyLink}\n                onDeleteStart={handleDelete}\n                onEditStart={toggleEdit}\n                onMenuClose={handleMenuClose}\n                onMenuOpen={handleMenuOpen}\n                onReactionSelect={handleReactionSelect}\n                onStatusChange={handleOpenStatusChange}\n                readOnly={readOnly}\n                status={comment.status}\n              />\n            </ContextMenuBox>\n          )}\n        </Flex>\n\n        {isEditing && (\n          <Flex align=\"flex-start\" gap={2}>\n            <SpacerAvatar />\n\n            <Stack flex={1}>\n              <CommentInput\n                currentUser={currentUser}\n                focusOnMount\n                mentionOptions={mentionOptions}\n                onChange={setValue}\n                onDiscardCancel={cancelDiscard}\n                onDiscardConfirm={confirmDiscard}\n                onKeyDown={handleInputKeyDown}\n                onSubmit={handleEditSubmit}\n                readOnly={readOnly}\n                ref={commentInputRef}\n                value={value}\n                withAvatar={false}\n              />\n            </Stack>\n          </Flex>\n        )}\n\n        {!isEditing && (\n          <Flex gap={FLEX_GAP}>\n            <SpacerAvatar />\n\n            <CommentMessageSerializer blocks={message} />\n          </Flex>\n        )}\n\n        {hasReactions && (\n          <Flex gap={FLEX_GAP} marginTop={2}>\n            <SpacerAvatar />\n\n            <Box onClick={stopPropagation}>\n              <CommentReactionsBar\n                currentUser={currentUser}\n                mode={mode}\n                onSelect={handleReactionSelect}\n                reactions={reactions}\n                readOnly={readOnly}\n              />\n            </Box>\n          </Flex>\n        )}\n      </InnerStack>\n\n      {displayError && (\n        <ErrorFlex gap={FLEX_GAP}>\n          <SpacerAvatar />\n\n          <Flex align=\"center\" gap={1} flex={1}>\n            <Text muted size={1}>\n              {hasError && t('list-item.layout-failed-sent')}\n              {isRetrying && t('list-item.layout-posting')}\n            </Text>\n\n            <Flex hidden={isRetrying}>\n              <RetryCardButton\n                __unstable_focusRing\n                display=\"flex\"\n                forwardedAs=\"button\"\n                onClick={handleCreateRetry}\n                padding={1}\n                radius={2}\n                tone=\"primary\"\n              >\n                <Text size={1} muted>\n                  {t('list-item.layout-retry')}\n                </Text>\n              </RetryCardButton>\n            </Flex>\n          </Flex>\n        </ErrorFlex>\n      )}\n    </RootStack>\n  )\n}\n","import {Card, type CardProps} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const ThreadCard = styled(Card).attrs<CardProps>(({tone}) => ({\n  padding: 3,\n  radius: 3,\n  sizing: 'border',\n  tone: tone || 'transparent',\n}))<CardProps>`\n  // ...\n`\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {type CurrentUser} from '@sanity/types'\nimport {Flex, Stack, useLayer} from '@sanity/ui'\nimport React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type UserListWithPermissionsHookValue, useTranslation} from 'sanity'\nimport styled, {css} from 'styled-components'\n\nimport {Button} from '../../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {type CommentsSelectedPath} from '../../context'\nimport {commentIntentIfDiffers, hasCommentMessageValue} from '../../helpers'\nimport {\n  type CommentCreatePayload,\n  type CommentDocument,\n  type CommentEditPayload,\n  type CommentMessage,\n  type CommentReactionOption,\n  type CommentStatus,\n  type CommentsUIMode,\n} from '../../types'\nimport {SpacerAvatar} from '../avatars'\nimport {CommentInput, type CommentInputHandle} from '../pte'\nimport {CommentsListItemLayout} from './CommentsListItemLayout'\nimport {ThreadCard} from './styles'\n\nconst EMPTY_ARRAY: [] = []\n\nconst MAX_COLLAPSED_REPLIES = 5\n\n// data-active = when the comment is selected\n// data-hovered = when the mouse is over the comment\nconst StyledThreadCard = styled(ThreadCard)(({theme}) => {\n  const {hovered} = theme.sanity.color.button.bleed.default\n\n  return css`\n    position: relative;\n\n    &:has(> [data-ui='GhostButton']:focus:focus-visible) {\n      box-shadow:\n        inset 0 0 0 1px var(--card-border-color),\n        0 0 0 1px var(--card-bg-color),\n        0 0 0 2px var(--card-focus-ring-color);\n    }\n\n    // When the comment is not selected, we want to apply hover styles.\n    // The hover styles is managed with the [data-hovered] attribute instead of the :hover pseudo class\n    // since we want to show the hover styles when hovering over the menu items in the context menu as well.\n    // The context menu is rendered using a portal, so the :hover pseudo class won't work when hovering over\n    // the menu items.\n    &:not([data-active='true']) {\n      @media (hover: hover) {\n        &[data-hovered='true'] {\n          --card-bg-color: ${hovered.bg2};\n\n          [data-root-menu='true'] {\n            opacity: 1;\n          }\n        }\n      }\n    }\n  `\n})\n\nconst ExpandButton = styled(Button)(({theme}) => {\n  const {medium} = theme.sanity.fonts.text.weights\n\n  return css`\n    font-weight: ${medium};\n  `\n})\n\nconst GhostButton = styled.button`\n  opacity: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  left: 0;\n`\n\ninterface CommentsListItemProps {\n  canReply?: boolean\n  currentUser: CurrentUser\n  isSelected: boolean\n  mentionOptions: UserListWithPermissionsHookValue\n  mode: CommentsUIMode\n  onCopyLink?: (id: string) => void\n  onCreateRetry: (id: string) => void\n  onDelete: (id: string) => void\n  onEdit: (id: string, payload: CommentEditPayload) => void\n  onKeyDown?: (event: React.KeyboardEvent<Element>) => void\n  onPathSelect?: (nextPath: CommentsSelectedPath) => void\n  onReactionSelect?: (id: string, reaction: CommentReactionOption) => void\n  onReply: (payload: CommentCreatePayload) => void\n  onStatusChange?: (id: string, status: CommentStatus) => void\n  parentComment: CommentDocument\n  readOnly?: boolean\n  replies: CommentDocument[] | undefined\n}\n\nexport const CommentsListItem = React.memo(function CommentsListItem(props: CommentsListItemProps) {\n  const {\n    canReply,\n    currentUser,\n    isSelected,\n    mentionOptions,\n    onCopyLink,\n    onCreateRetry,\n    onDelete,\n    onEdit,\n    onKeyDown,\n    onPathSelect,\n    onReactionSelect,\n    onReply,\n    onStatusChange,\n    parentComment,\n    readOnly,\n    replies = EMPTY_ARRAY,\n    mode,\n  } = props\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const [value, setValue] = useState<CommentMessage>(EMPTY_ARRAY)\n  const [collapsed, setCollapsed] = useState<boolean>(true)\n  const didExpand = useRef<boolean>(false)\n  const replyInputRef = useRef<CommentInputHandle>(null)\n\n  const {isTopLayer} = useLayer()\n\n  const hasValue = useMemo(() => hasCommentMessageValue(value), [value])\n\n  const [mouseOver, setMouseOver] = useState<boolean>(false)\n\n  const handleMouseEnter = useCallback(() => setMouseOver(true), [])\n  const handleMouseLeave = useCallback(() => setMouseOver(false), [])\n\n  const handleReplySubmit = useCallback(() => {\n    const nextComment: CommentCreatePayload = {\n      fieldPath: parentComment.target.path.field,\n      message: value,\n      parentCommentId: parentComment._id,\n      status: parentComment?.status || 'open',\n      // Since this is a reply to an existing comment, we use the same thread ID as the parent\n      threadId: parentComment.threadId,\n      // A new comment will not have any reactions\n      reactions: EMPTY_ARRAY,\n    }\n\n    onReply?.(nextComment)\n    setValue(EMPTY_ARRAY)\n  }, [\n    onReply,\n    parentComment._id,\n    parentComment?.status,\n    parentComment.target.path.field,\n    parentComment.threadId,\n    value,\n  ])\n\n  const startDiscard = useCallback(() => {\n    if (!hasValue) {\n      setValue(EMPTY_ARRAY)\n      return\n    }\n\n    replyInputRef.current?.discardDialogController.open()\n  }, [hasValue])\n\n  const handleInputKeyDown = useCallback(\n    (event: React.KeyboardEvent<Element>) => {\n      // Don't act if the input already prevented this event\n      if (event.isDefaultPrevented()) {\n        return\n      }\n      // Discard input text with Escape\n      if (event.key === 'Escape') {\n        event.preventDefault()\n        event.stopPropagation()\n        startDiscard()\n      }\n    },\n    [startDiscard],\n  )\n\n  const cancelDiscard = useCallback(() => {\n    replyInputRef.current?.discardDialogController.close()\n  }, [])\n\n  const confirmDiscard = useCallback(() => {\n    setValue(EMPTY_ARRAY)\n    replyInputRef.current?.discardDialogController.close()\n    replyInputRef.current?.focus()\n  }, [])\n\n  const handleThreadRootClick = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.stopPropagation()\n\n      // Don't act if the click was caused by clicking\n      // outside e.g. a popover or a menu\n      if (!isTopLayer) return\n\n      onPathSelect?.({\n        fieldPath: parentComment.target.path.field,\n        origin: 'inspector',\n        threadId: parentComment.threadId,\n      })\n    },\n    [isTopLayer, onPathSelect, parentComment.target.path.field, parentComment.threadId],\n  )\n\n  const handleExpand = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\n    e.stopPropagation()\n    setCollapsed(false)\n    didExpand.current = true\n  }, [])\n\n  const splicedReplies = useMemo(() => {\n    if (collapsed) return replies?.slice(-MAX_COLLAPSED_REPLIES)\n    return replies\n  }, [replies, collapsed])\n\n  const showCollapseButton = useMemo(() => {\n    if (!replies) return false\n    return replies.length > MAX_COLLAPSED_REPLIES\n  }, [replies])\n\n  const expandButtonText = useMemo(() => {\n    return `${replies?.length - MAX_COLLAPSED_REPLIES} more ${\n      replies?.length - MAX_COLLAPSED_REPLIES === 1 ? 'comment' : 'comments'\n    }`\n  }, [replies?.length])\n\n  useEffect(() => {\n    if (replies.length > MAX_COLLAPSED_REPLIES && !didExpand.current) {\n      setCollapsed(true)\n    }\n  }, [replies])\n\n  const renderedReplies = useMemo(\n    () =>\n      splicedReplies.map((reply) => (\n        <Stack as=\"li\" key={reply._id} data-comment-id={reply._id}>\n          <CommentsListItemLayout\n            canDelete={reply.authorId === currentUser.id}\n            canEdit={reply.authorId === currentUser.id}\n            comment={reply}\n            currentUser={currentUser}\n            hasError={reply._state?.type === 'createError'}\n            isRetrying={reply._state?.type === 'createRetrying'}\n            mentionOptions={mentionOptions}\n            mode={mode}\n            onCopyLink={onCopyLink}\n            onCreateRetry={onCreateRetry}\n            onDelete={onDelete}\n            onEdit={onEdit}\n            onInputKeyDown={handleInputKeyDown}\n            onReactionSelect={onReactionSelect}\n            readOnly={readOnly}\n            intent={commentIntentIfDiffers(parentComment, reply)}\n          />\n        </Stack>\n      )),\n    [\n      currentUser,\n      handleInputKeyDown,\n      mentionOptions,\n      onCopyLink,\n      onCreateRetry,\n      onDelete,\n      onEdit,\n      onReactionSelect,\n      parentComment,\n      readOnly,\n      splicedReplies,\n      mode,\n    ],\n  )\n\n  return (\n    <Stack space={2}>\n      <StyledThreadCard\n        data-active={isSelected ? 'true' : 'false'}\n        data-hovered={mouseOver ? 'true' : 'false'}\n        onClick={handleThreadRootClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        tone={isSelected ? 'caution' : undefined}\n      >\n        <GhostButton\n          data-ui=\"GhostButton\"\n          aria-label={t('list-item.go-to-field-button.aria-label')}\n        />\n\n        <Stack\n          as=\"ul\"\n          // Add some extra padding to the bottom if there is no reply input.\n          // This is to make the UI look more balanced.\n          paddingBottom={canReply ? undefined : 1}\n          space={4}\n        >\n          <Stack as=\"li\" data-comment-id={parentComment._id}>\n            <CommentsListItemLayout\n              canDelete={parentComment.authorId === currentUser.id}\n              canEdit={parentComment.authorId === currentUser.id}\n              comment={parentComment}\n              currentUser={currentUser}\n              hasError={parentComment._state?.type === 'createError'}\n              isParent\n              isRetrying={parentComment._state?.type === 'createRetrying'}\n              mentionOptions={mentionOptions}\n              mode={mode}\n              onCopyLink={onCopyLink}\n              onCreateRetry={onCreateRetry}\n              onDelete={onDelete}\n              onEdit={onEdit}\n              onInputKeyDown={onKeyDown}\n              onReactionSelect={onReactionSelect}\n              onStatusChange={onStatusChange}\n              readOnly={readOnly}\n              intent={parentComment.context?.intent}\n            />\n          </Stack>\n\n          {showCollapseButton && !didExpand.current && (\n            <Flex gap={1} paddingY={1} sizing=\"border\">\n              <SpacerAvatar />\n\n              <ExpandButton\n                iconRight={ChevronDownIcon}\n                mode=\"bleed\"\n                onClick={handleExpand}\n                text={expandButtonText}\n              />\n            </Flex>\n          )}\n\n          {renderedReplies}\n\n          {canReply && (\n            <CommentInput\n              currentUser={currentUser}\n              expandOnFocus\n              mentionOptions={mentionOptions}\n              onChange={setValue}\n              onDiscardCancel={cancelDiscard}\n              onDiscardConfirm={confirmDiscard}\n              onKeyDown={handleInputKeyDown}\n              onSubmit={handleReplySubmit}\n              placeholder={\n                mode === 'upsell'\n                  ? t('compose.reply-placeholder-upsell')\n                  : t('compose.reply-placeholder')\n              }\n              readOnly={readOnly || mode === 'upsell'}\n              ref={replyInputRef}\n              value={value}\n            />\n          )}\n        </Stack>\n      </StyledThreadCard>\n    </Stack>\n  )\n})\n","import {Container, Flex, Stack, Text} from '@sanity/ui'\nimport {LoadingBlock, type TFunction, useTranslation} from 'sanity'\n\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {type CommentStatus} from '../../types'\n\ninterface EmptyStateMessage {\n  title: string\n  message: React.ReactNode\n}\n\nexport function getEmptyStateMessages(t: TFunction): Record<CommentStatus, EmptyStateMessage> {\n  return {\n    open: {\n      title: t('list-status.empty-state-open-title'),\n      message: t('list-status.empty-state-open-text'),\n    },\n    resolved: {\n      title: t('list-status.empty-state-resolved-title'),\n      message: t('list-status.empty-state-resolved-text'),\n    },\n  }\n}\n\ninterface CommentsListStatusProps {\n  error: Error | null\n  hasNoComments: boolean\n  loading: boolean\n  status: CommentStatus\n}\n\nexport function CommentsListStatus(props: CommentsListStatusProps) {\n  const {status, error, loading, hasNoComments} = props\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const emptyStateMessages = getEmptyStateMessages(t)\n\n  if (error) {\n    return (\n      <Flex align=\"center\" justify=\"center\" flex={1} padding={4}>\n        <Flex align=\"center\">\n          <Text size={1} muted>\n            {t('list-status.error')}\n          </Text>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  if (loading) {\n    return <LoadingBlock showText title={t('list-status.loading')} />\n  }\n\n  if (hasNoComments) {\n    return (\n      <Flex align=\"center\" justify=\"center\" flex={1} sizing=\"border\">\n        <Container width={0} padding={4}>\n          <Stack space={3}>\n            <Text align=\"center\" size={1} muted weight=\"medium\">\n              {emptyStateMessages[status].title}\n            </Text>\n\n            <Text align=\"center\" size={1} muted>\n              {emptyStateMessages[status].message}\n            </Text>\n          </Stack>\n        </Container>\n      </Flex>\n    )\n  }\n\n  return null\n}\n","import {type CurrentUser} from '@sanity/types'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {EMPTY_ARRAY, Translate, type UserListWithPermissionsHookValue, useTranslation} from 'sanity'\n\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {hasCommentMessageValue} from '../../helpers'\nimport {type CommentMessage, type CommentsUIMode} from '../../types'\nimport {CommentInput, type CommentInputHandle, type CommentInputProps} from '../pte'\n\ninterface CreateNewThreadInputProps {\n  currentUser: CurrentUser\n  fieldTitle: string\n  mentionOptions: UserListWithPermissionsHookValue\n  mode: CommentsUIMode\n  onBlur?: CommentInputProps['onBlur']\n  onFocus?: CommentInputProps['onFocus']\n  onKeyDown?: (event: React.KeyboardEvent<Element>) => void\n  onNewThreadCreate: (payload: CommentMessage) => void\n  readOnly?: boolean\n}\n\nexport function CreateNewThreadInput(props: CreateNewThreadInputProps) {\n  const {\n    currentUser,\n    fieldTitle,\n    mentionOptions,\n    mode,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    onNewThreadCreate,\n    readOnly,\n  } = props\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  const [value, setValue] = useState<CommentMessage>(EMPTY_ARRAY)\n  const commentInputHandle = useRef<CommentInputHandle | null>(null)\n\n  const handleSubmit = useCallback(() => {\n    onNewThreadCreate?.(value)\n    setValue(EMPTY_ARRAY)\n  }, [onNewThreadCreate, value])\n\n  const hasValue = useMemo(() => hasCommentMessageValue(value), [value])\n\n  const startDiscard = useCallback(() => {\n    if (!hasValue) {\n      return\n    }\n    commentInputHandle.current?.discardDialogController.open()\n  }, [hasValue])\n\n  const handleInputKeyDown = useCallback(\n    (event: React.KeyboardEvent<Element>) => {\n      // Don't act if the input already prevented this event\n      if (event.isDefaultPrevented()) {\n        return\n      }\n      // Discard the input text\n      if (event.key === 'Escape') {\n        event.preventDefault()\n        event.stopPropagation()\n        startDiscard()\n      }\n      // Call parent handler\n      if (onKeyDown) onKeyDown(event)\n    },\n    [onKeyDown, startDiscard],\n  )\n\n  const confirmDiscard = useCallback(() => {\n    setValue(EMPTY_ARRAY)\n    commentInputHandle.current?.discardDialogController.close()\n    commentInputHandle.current?.focus()\n  }, [])\n\n  const cancelDiscard = useCallback(() => {\n    commentInputHandle.current?.discardDialogController.close()\n  }, [])\n\n  const placeholder =\n    mode === 'upsell' ? (\n      t('compose.add-comment-input-placeholder-upsell')\n    ) : (\n      <Translate\n        t={t}\n        i18nKey=\"compose.add-comment-input-placeholder\"\n        values={{field: fieldTitle}}\n      />\n    )\n\n  return (\n    <CommentInput\n      currentUser={currentUser}\n      expandOnFocus\n      mentionOptions={mentionOptions}\n      onBlur={onBlur}\n      onChange={setValue}\n      onDiscardCancel={cancelDiscard}\n      onDiscardConfirm={confirmDiscard}\n      onKeyDown={handleInputKeyDown}\n      onFocus={onFocus}\n      onSubmit={handleSubmit}\n      placeholder={placeholder}\n      readOnly={readOnly || mode === 'upsell'}\n      ref={commentInputHandle}\n      value={value}\n    />\n  )\n}\n","import {type CurrentUser} from '@sanity/types'\nimport {\n  // eslint-disable-next-line no-restricted-imports\n  Button, // Button with specific styling and children behavior.\n  Flex,\n  Stack,\n} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport type * as React from 'react'\nimport {useCallback, useMemo} from 'react'\nimport {type UserListWithPermissionsHookValue, useTranslation} from 'sanity'\nimport styled, {css} from 'styled-components'\n\nimport {commentsLocaleNamespace} from '../../../i18n'\nimport {type CommentsSelectedPath} from '../../context'\nimport {\n  type CommentCreatePayload,\n  type CommentListBreadcrumbs,\n  type CommentMessage,\n  type CommentsUIMode,\n} from '../../types'\nimport {CommentBreadcrumbs} from '../CommentBreadcrumbs'\nimport {CreateNewThreadInput} from './CreateNewThreadInput'\nimport {ThreadCard} from './styles'\n\nconst HeaderFlex = styled(Flex)`\n  min-height: 25px;\n`\n\nconst BreadcrumbsButton = styled(Button)(({theme}) => {\n  const fg = theme.sanity.color.base.fg\n  return css`\n    --card-fg-color: ${fg};\n\n    // The width is needed to make the text ellipsis work\n    // in the breadcrumbs component\n    max-width: 100%;\n  `\n})\n\ninterface CommentThreadLayoutProps {\n  breadcrumbs?: CommentListBreadcrumbs\n  canCreateNewThread: boolean\n  children: React.ReactNode\n  currentUser: CurrentUser\n  fieldPath: string\n  isSelected: boolean\n  mentionOptions: UserListWithPermissionsHookValue\n  mode: CommentsUIMode\n  onNewThreadCreate: (payload: CommentCreatePayload) => void\n  onPathSelect?: (nextPath: CommentsSelectedPath) => void\n  readOnly?: boolean\n}\n\nexport function CommentThreadLayout(props: CommentThreadLayoutProps) {\n  const {\n    breadcrumbs,\n    canCreateNewThread,\n    children,\n    currentUser,\n    fieldPath,\n    isSelected,\n    mentionOptions,\n    mode,\n    onNewThreadCreate,\n    onPathSelect,\n    readOnly,\n  } = props\n\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  const handleNewThreadCreate = useCallback(\n    (payload: CommentMessage) => {\n      const nextComment: CommentCreatePayload = {\n        fieldPath,\n        message: payload,\n        parentCommentId: undefined,\n        status: 'open',\n        // Since this is a new comment, we generate a new thread ID\n        threadId: uuid(),\n        // New comments have no reactions\n        reactions: [],\n      }\n\n      onNewThreadCreate?.(nextComment)\n    },\n    [onNewThreadCreate, fieldPath],\n  )\n\n  const handleBreadcrumbsClick = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n\n      onPathSelect?.({\n        fieldPath,\n        origin: 'inspector',\n        threadId: null,\n      })\n    },\n    [fieldPath, onPathSelect],\n  )\n\n  const handleNewThreadClick = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      e.stopPropagation()\n      // Skip if the click was triggered from \"Enter\" keydown.\n      // This because we don't want to trigger `onPathSelect` when\n      // submitting the new thread form.\n      if (e.detail === 0) return\n\n      onPathSelect?.({\n        fieldPath,\n        origin: 'inspector',\n        threadId: null,\n      })\n    },\n    [fieldPath, onPathSelect],\n  )\n\n  const crumbsTitlePath = useMemo(() => breadcrumbs?.map((p) => p.title) || [], [breadcrumbs])\n  const lastCrumb = crumbsTitlePath[crumbsTitlePath.length - 1]\n\n  return (\n    <Stack space={2}>\n      <HeaderFlex align=\"center\" gap={2} paddingRight={1} sizing=\"border\">\n        <Stack flex={1}>\n          <Flex align=\"center\">\n            <BreadcrumbsButton\n              aria-label={t('list-item.breadcrumb-button-go-to-field-aria-label', {\n                field: lastCrumb,\n              })}\n              mode=\"bleed\"\n              onClick={handleBreadcrumbsClick}\n              padding={2}\n              space={2}\n            >\n              <CommentBreadcrumbs maxLength={3} titlePath={crumbsTitlePath} />\n            </BreadcrumbsButton>\n          </Flex>\n        </Stack>\n      </HeaderFlex>\n\n      {canCreateNewThread && (\n        <ThreadCard onClick={handleNewThreadClick} tone={isSelected ? 'caution' : undefined}>\n          <CreateNewThreadInput\n            currentUser={currentUser}\n            fieldTitle={lastCrumb}\n            mentionOptions={mentionOptions}\n            mode={mode}\n            onNewThreadCreate={handleNewThreadCreate}\n            readOnly={readOnly}\n          />\n        </ThreadCard>\n      )}\n\n      <Stack space={2}>{children}</Stack>\n    </Stack>\n  )\n}\n","import {type CurrentUser} from '@sanity/types'\nimport {BoundaryElementProvider, Flex, Stack} from '@sanity/ui'\nimport {forwardRef, memo, useCallback, useImperativeHandle, useMemo, useState} from 'react'\nimport {type UserListWithPermissionsHookValue} from 'sanity'\n\nimport {type CommentsSelectedPath} from '../../context'\nimport {\n  type CommentCreatePayload,\n  type CommentEditPayload,\n  type CommentReactionOption,\n  type CommentStatus,\n  type CommentsUIMode,\n  type CommentThreadItem,\n} from '../../types'\nimport {CommentsListItem} from './CommentsListItem'\nimport {CommentsListStatus} from './CommentsListStatus'\nimport {CommentThreadLayout} from './CommentThreadLayout'\n\nconst SCROLL_INTO_VIEW_OPTIONS: ScrollIntoViewOptions = {\n  behavior: 'smooth',\n  block: 'start',\n  inline: 'nearest',\n}\n\ninterface GroupedComments {\n  [field: string]: CommentThreadItem[]\n}\n\nfunction groupThreads(comments: CommentThreadItem[]) {\n  return comments.reduce((acc, comment) => {\n    const field = comment.fieldPath\n\n    if (!acc[field]) {\n      acc[field] = []\n    }\n\n    acc[field].push(comment)\n\n    return acc\n  }, {} as GroupedComments)\n}\n\n/**\n * @beta\n * @hidden\n */\nexport interface CommentsListProps {\n  beforeListNode?: React.ReactNode\n  comments: CommentThreadItem[]\n  currentUser: CurrentUser\n  error: Error | null\n  loading: boolean\n  mentionOptions: UserListWithPermissionsHookValue\n  mode: CommentsUIMode\n  onCopyLink?: (id: string) => void\n  onCreateRetry: (id: string) => void\n  onDelete: (id: string) => void\n  onEdit: (id: string, payload: CommentEditPayload) => void\n  onNewThreadCreate: (payload: CommentCreatePayload) => void\n  onPathSelect?: (nextPath: CommentsSelectedPath) => void\n  onReactionSelect?: (id: string, reaction: CommentReactionOption) => void\n  onReply: (payload: CommentCreatePayload) => void\n  onStatusChange?: (id: string, status: CommentStatus) => void\n  readOnly?: boolean\n  selectedPath: CommentsSelectedPath | null\n  status: CommentStatus\n}\n\n/**\n * @beta\n * @hidden\n */\nexport interface CommentsListHandle {\n  scrollToComment: (id: string) => void\n}\n\nconst CommentsListInner = forwardRef<CommentsListHandle, CommentsListProps>(\n  function CommentsListInner(props: CommentsListProps, ref) {\n    const {\n      beforeListNode,\n      comments,\n      currentUser,\n      error,\n      loading,\n      mentionOptions,\n      mode,\n      onCopyLink,\n      onCreateRetry,\n      onDelete,\n      onEdit,\n      onNewThreadCreate,\n      onPathSelect,\n      onReactionSelect,\n      onReply,\n      onStatusChange,\n      readOnly,\n      selectedPath,\n      status,\n    } = props\n    const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n    const scrollToComment = useCallback((id: string) => {\n      const commentElement = document?.querySelector(`[data-comment-id=\"${id}\"]`)\n\n      if (commentElement) {\n        commentElement.scrollIntoView(SCROLL_INTO_VIEW_OPTIONS)\n      }\n    }, [])\n\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          scrollToComment,\n        }\n      },\n      [scrollToComment],\n    )\n\n    const groupedThreads = useMemo(() => Object.entries(groupThreads(comments)), [comments])\n\n    const showComments = !loading && !error && groupedThreads.length > 0\n\n    return (\n      <Flex\n        direction=\"column\"\n        flex={1}\n        height=\"fill\"\n        overflow=\"hidden\"\n        ref={setBoundaryElement}\n        sizing=\"border\"\n      >\n        {mode !== 'upsell' && (\n          <CommentsListStatus\n            error={error}\n            hasNoComments={groupedThreads.length === 0}\n            loading={loading}\n            status={status}\n          />\n        )}\n\n        {(showComments || beforeListNode) && (\n          <Stack\n            as=\"ul\"\n            flex={1}\n            overflow=\"auto\"\n            padding={3}\n            paddingTop={1}\n            paddingBottom={6}\n            sizing=\"border\"\n            space={1}\n          >\n            {beforeListNode}\n            <BoundaryElementProvider element={boundaryElement}>\n              {groupedThreads?.map(([fieldPath, group]) => {\n                // Since all threads in the group point to the same field, the breadcrumbs will be\n                // the same for all of them. Therefore, we can just pick the first one.\n                const breadcrumbs = group[0].breadcrumbs\n\n                // The thread ID is used to scroll to the thread.\n                // We pick the first thread id in the group so that we scroll to the first thread\n                // in the group.\n                const firstThreadId = group[0].threadId\n\n                // The new thread is selected if the field path matches the selected path and\n                // there is no thread ID selected.\n                const newThreadSelected =\n                  selectedPath?.fieldPath === fieldPath && !selectedPath.threadId\n\n                return (\n                  <Stack as=\"li\" key={fieldPath} data-group-id={firstThreadId} paddingTop={3}>\n                    <CommentThreadLayout\n                      mode={mode}\n                      breadcrumbs={breadcrumbs}\n                      canCreateNewThread={status === 'open'}\n                      currentUser={currentUser}\n                      fieldPath={fieldPath}\n                      isSelected={newThreadSelected}\n                      key={fieldPath}\n                      mentionOptions={mentionOptions}\n                      onNewThreadCreate={onNewThreadCreate}\n                      onPathSelect={onPathSelect}\n                      readOnly={readOnly}\n                    >\n                      {group.map((item) => {\n                        // The default sort order is by date, descending (newest first).\n                        // However, inside a thread, we want the order to be ascending (oldest first).\n                        // So we reverse the array here.\n                        // We use slice() to avoid mutating the original array.\n                        const replies = item.replies.slice().reverse()\n\n                        const canReply =\n                          status === 'open' &&\n                          item.parentComment._state?.type !== 'createError' &&\n                          item.parentComment._state?.type !== 'createRetrying'\n\n                        // The thread is selected if the thread ID and field path matches the\n                        // selected path.\n                        const threadIsSelected =\n                          selectedPath?.threadId === item.parentComment.threadId &&\n                          selectedPath?.fieldPath === item.parentComment.target.path.field\n\n                        return (\n                          <CommentsListItem\n                            mode={mode}\n                            canReply={canReply}\n                            currentUser={currentUser}\n                            isSelected={threadIsSelected}\n                            key={item.parentComment._id}\n                            mentionOptions={mentionOptions}\n                            onCopyLink={onCopyLink}\n                            onCreateRetry={onCreateRetry}\n                            onDelete={onDelete}\n                            onEdit={onEdit}\n                            onPathSelect={onPathSelect}\n                            onReactionSelect={onReactionSelect}\n                            onReply={onReply}\n                            onStatusChange={onStatusChange}\n                            parentComment={item.parentComment}\n                            readOnly={readOnly}\n                            replies={replies}\n                          />\n                        )\n                      })}\n                    </CommentThreadLayout>\n                  </Stack>\n                )\n              })}\n            </BoundaryElementProvider>\n          </Stack>\n        )}\n      </Flex>\n    )\n  },\n)\n\n/**\n * @beta\n * @hidden\n */\nexport const CommentsList = memo(CommentsListInner)\n","import {Box, Flex, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport styled, {keyframes} from 'styled-components'\n\nimport {Button, Popover, type PopoverProps} from '../../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../../i18n'\n\nconst Root = styled(Box)`\n  max-width: 280px;\n`\n\nconst fadeInKeyFrame = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`\n\nconst StyledPopover = styled(Popover)`\n  opacity: 0;\n  // Fade in the popover after 500ms\n  animation: ${fadeInKeyFrame} 200ms 500ms forwards;\n`\n\ninterface CommentsOnboardingPopoverProps extends Omit<PopoverProps, 'content'> {\n  //   ...\n  onDismiss: () => void\n}\n\nexport function CommentsOnboardingPopover(props: CommentsOnboardingPopoverProps) {\n  const {onDismiss} = props\n  const {t} = useTranslation(commentsLocaleNamespace)\n\n  return (\n    <StyledPopover\n      content={\n        <Root padding={4}>\n          <Stack space={3}>\n            <Text weight=\"medium\" size={1}>\n              {t('onboarding.header')}\n            </Text>\n\n            <Text size={1}>{t('onboarding.body')}</Text>\n\n            <Flex justify=\"flex-end\" marginTop={2}>\n              <Button text={t('onboarding.dismiss')} tone=\"primary\" onClick={onDismiss} />\n            </Flex>\n          </Stack>\n        </Root>\n      }\n      open\n      portal\n      {...props}\n    />\n  )\n}\n","import {white} from '@sanity/color'\nimport {CloseIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Stack} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2} from '@sanity/ui/theme'\nimport {UpsellDescriptionSerializer} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Button, Dialog} from '../../../../../ui-components'\nimport {type CommentsUpsellData} from '../../types'\n\n/**\n * Absolute positioned button to close the dialog.\n */\nconst StyledButton = styled(Button)(({theme}) => {\n  const {space} = getTheme_v2(theme)\n  return `\n      position: absolute;\n      top: ${space[3]}px;\n      right: ${space[3]}px;\n      z-index: 20;\n      background: transparent;\n      border-radius: 9999px;\n      box-shadow: none;\n      color: ${white.hex};\n      --card-fg-color: ${white.hex};\n      :hover {\n        --card-fg-color: ${white.hex};\n      }\n    `\n})\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 200px;\n`\n\ninterface CommentsUpsellDialogProps {\n  data: CommentsUpsellData\n  onClose: () => void\n  onPrimaryClick: () => void\n  onSecondaryClick: () => void\n}\n\nexport function CommentsUpsellDialog(props: CommentsUpsellDialogProps) {\n  const {data, onClose, onPrimaryClick, onSecondaryClick} = props\n\n  return (\n    <Dialog\n      id=\"comments-upsell\"\n      onClose={onClose}\n      onClickOutside={onClose}\n      __unstable_hideCloseButton\n      bodyHeight=\"fill\"\n      padding={false}\n      footer={{\n        cancelButton: data.secondaryButton?.text\n          ? {\n              text: data.secondaryButton.text,\n              mode: 'bleed',\n              tone: 'default',\n              iconRight: LaunchIcon,\n              ...(data.secondaryButton.url && {\n                target: '_blank',\n                rel: 'noopener noreferrer',\n                as: 'a',\n                href: data.secondaryButton.url,\n              }),\n              onClick: onSecondaryClick,\n            }\n          : undefined,\n        confirmButton: {\n          text: data.ctaButton?.text,\n          mode: 'default',\n          tone: 'primary',\n          ...(data.ctaButton.url && {\n            target: '_blank',\n            rel: 'noopener noreferrer',\n            as: 'a',\n            href: data.ctaButton.url,\n          }),\n          onClick: onPrimaryClick,\n        },\n      }}\n    >\n      <StyledButton\n        icon={CloseIcon}\n        mode=\"bleed\"\n        tone=\"default\"\n        onClick={onClose}\n        tabIndex={-1}\n        tooltipProps={null}\n      />\n      {data.image && <Image src={data.image.asset.url} alt={data.image.asset.altText ?? ''} />}\n      <Box padding={3} marginTop={2}>\n        <Stack space={4} paddingBottom={2}>\n          <UpsellDescriptionSerializer blocks={data.descriptionText} />\n        </Stack>\n      </Box>\n    </Dialog>\n  )\n}\n","import {LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Stack} from '@sanity/ui'\nimport {UpsellDescriptionSerializer} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Button} from '../../../../../ui-components'\nimport {type CommentsUpsellData} from '../../types'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n`\n\ninterface CommentsUpsellPanelProps {\n  data: CommentsUpsellData\n  onPrimaryClick: () => void\n  onSecondaryClick: () => void\n}\n\nexport function CommentsUpsellPanel(props: CommentsUpsellPanelProps) {\n  const {data, onPrimaryClick, onSecondaryClick} = props\n  return (\n    <Container width={1}>\n      <Box marginBottom={6}>\n        <Card radius={3} overflow={'hidden'} border>\n          {data.image && <Image src={data.image.asset.url} alt={data.image.asset.altText ?? ''} />}\n          <Box padding={3} marginTop={2}>\n            <Stack space={4}>\n              <UpsellDescriptionSerializer blocks={data.descriptionText} />\n            </Stack>\n            <Flex gap={2} justify={'flex-end'} marginTop={5}>\n              <Button\n                mode=\"bleed\"\n                text={data.secondaryButton.text}\n                tone=\"primary\"\n                iconRight={LaunchIcon}\n                {...(data.secondaryButton.url && {\n                  target: '_blank',\n                  rel: 'noopener noreferrer',\n                  as: 'a',\n                  href: data.secondaryButton.url,\n                })}\n                onClick={onSecondaryClick}\n              />\n              <Button\n                text={data.ctaButton.text}\n                tone=\"primary\"\n                {...(data.ctaButton.url && {\n                  target: '_blank',\n                  rel: 'noopener noreferrer',\n                  as: 'a',\n                  href: data.ctaButton.url,\n                })}\n                onClick={onPrimaryClick}\n              />\n            </Flex>\n          </Box>\n        </Card>\n      </Box>\n    </Container>\n  )\n}\n","import {createContext} from 'react'\n\nimport {type CommentsContextValue} from './types'\n\nexport const CommentsContext = createContext<CommentsContextValue | null>(null)\n","import {useContext} from 'react'\n\nimport {CommentsIntentContext} from '../context'\nimport {type CommentIntentGetter} from '../types'\n\n/**\n * @beta\n * @hidden\n */\nexport function useCommentsIntent(): CommentIntentGetter | undefined {\n  return useContext(CommentsIntentContext)\n}\n","import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the structure tool\n *\n * @public\n */\nexport const structureLocaleNamespace = 'structure' as const\n\n/**\n * The default locale bundle for the structure tool, which is US English.\n *\n * @internal\n */\nexport const structureUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: structureLocaleNamespace,\n  resources: () => import('./resources'),\n})\n\n/**\n * The locale resource keys for the structure tool.\n *\n * @alpha\n * @hidden\n */\nexport type {StructureLocaleResourceKeys} from './resources'\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {unstable_useValuePreview as useValuePreview, useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  if (error) {\n    return <>{t('doc-title.error.text', {errorMessage: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {isNumber, isString} from 'lodash'\nimport type * as React from 'react'\nimport {isValidElement} from 'react'\nimport {useMemoObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  isRecord,\n  SanityDefaultPreview,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\nimport {type PaneItemPreviewState} from './types'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: React.ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title],\n  )!\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator draft={draft} published={published} />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = <DocumentStatus draft={draft} published={published} />\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {createContext} from 'react'\n\nimport {type PaneRouterContextValue} from './types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrentAndAfter: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n  createPathWithParams: () => missingContext(),\n})\n","import type * as React from 'react'\nimport {forwardRef, useContext, useMemo} from 'react'\nimport {StateLink} from 'sanity/router'\n\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as React.ComponentType<BackLinkProps>\n","import {createContext} from 'react'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n","import {useContext} from 'react'\n\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import type * as React from 'react'\nimport {forwardRef, useContext} from 'react'\nimport {StateLink} from 'sanity/router'\n\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import type * as React from 'react'\nimport {forwardRef, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {PaneRouterContext} from './PaneRouterContext'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: React.ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {useContext} from 'react'\n\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    toast.push({\n                                      title: t(\n                                        'confirm-delete-dialog.cdr-table.id-copied-toast.title',\n                                      ),\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    mode=\"bleed\"\n                                    icon={CopyIcon}\n                                    tooltipProps={{\n                                      content: t(\n                                        'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                      ),\n                                    }}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, ErrorBoundary, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import type * as React from 'react'\nimport {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.ReactElement | (() => React.ReactElement)\n  ms?: number\n}): React.ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {createContext} from 'react'\n\nimport {type PaneContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport styled from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {\n  BoundaryElementProvider,\n  Card,\n  type CardProps,\n  Code,\n  Flex,\n  useForwardedRef,\n} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\nimport styled from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneContext} from './PaneContext'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef],\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <Root\n            data-testid=\"pane\"\n            data-ui=\"Pane\"\n            tone=\"inherit\"\n            hidden={hidden}\n            id={id}\n            overflow={layoutCollapsed ? undefined : 'hidden'}\n            {...restProps}\n            data-pane-collapsed={collapsed ? '' : undefined}\n            data-pane-index={paneIndex}\n            data-pane-selected={selected ? '' : undefined}\n            ref={setRef}\n            style={style}\n          >\n            {PANE_DEBUG && (\n              <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                <Code size={1}>\n                  {[\n                    `#${paneIndex}`,\n                    `collapsed=${collapsed}`,\n                    `currentMinWidth=${currentMinWidth}`,\n                    `currentMaxWidth=${currentMaxWidth}`,\n                    `flex=${flex}`,\n                    `minWidth=${minWidth}`,\n                    `maxWidth=${maxWidth}`,\n                  ].join('\\n')}\n                </Code>\n              </Card>\n            )}\n\n            <BoundaryElementProvider element={rootElement}>\n              {!hidden && (\n                <Flex direction=\"column\" height=\"fill\">\n                  {children}\n                </Flex>\n              )}\n            </BoundaryElementProvider>\n          </Root>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\n\nimport {PaneContext} from './PaneContext'\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          // eslint-disable-next-line no-nested-ternary\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n\n            return <PaneMenuButtonItem isAfterGroup={isAfterGroup} key={node.key} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-border-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Box, Card, Flex, Layer, rgba, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    overflow: hidden;\n    overflow: clip;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      overflow: auto;\n      /* Hide scrollbars */\n      scrollbar-width: none;\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    /* right padding */\n    & > div:after {\n      content: '';\n      display: inline-block;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${space[3]}px;\n      height: 1px;\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TabsBox, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {actions, backButton, border, contentAfter, loading, subActions, tabs, tabIndex, title} =\n    props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              gap={1}\n              onClick={handleLayoutClick}\n              padding={3}\n              paddingBottom={collapsed ? 3 : 2}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n              <TitleCard\n                __unstable_focusRing\n                flex={1}\n                forwardedAs=\"button\"\n                onClick={handleTitleClick}\n                paddingLeft={backButton ? 1 : 2}\n                padding={2}\n                tabIndex={tabIndex}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} size={1} />}\n                {!loading && (\n                  <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleCard>\n\n              {actions && (\n                <Flex align=\"center\" hidden={collapsed}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Flex>\n              )}\n            </Layout>\n\n            {showTabsOrSubActions && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                overflow=\"auto\"\n                paddingBottom={3}\n                paddingX={3}\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  {tabs}\n                </TabsBox>\n\n                {subActions && subActions}\n              </Flex>\n            )}\n\n            {!collapsed && contentAfter && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                key={child.key}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\n\nimport {Root} from './PaneLayout.styles'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const controller = useMemo(() => createPaneLayoutController(), [])\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","/* eslint-disable camelcase */\n\nimport {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","import type * as React from 'react'\nimport {forwardRef, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<React.ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: React.ReactNode},\n        linkRef: React.ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button\n      {...restProps}\n      as={Link}\n      data-as=\"a\"\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n    />\n  )\n})\n","import type * as React from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: React.ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: React.ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {type Schema} from '@sanity/types'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  useSchema,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={disabled ? null : {content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                context=\"create-document-type\"\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        // eslint-disable-next-line no-nested-ternary\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      {combinedInitialValueTemplates.length > 0 && (\n        <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n      )}\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      // eslint-disable-next-line react/jsx-no-bind\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport type * as React from 'react'\nimport {type ReactNode, useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: React.ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: React.ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: React.ComponentType<any>,\n): React.ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const Link = useMemo(\n    () =>\n      function LinkComponent(linkProps: {children: ReactNode}) {\n        return <ChildLink {...linkProps} childId={id} />\n      },\n    [ChildLink, id],\n  )\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n    </PreviewCard>\n  )\n}\n","import type * as React from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: DocumentActionProps\n  children: (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderActionCollectionState = (props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete} = props\n\n  return (\n    <GetHookCollectionState onReset={onActionComplete} hooks={actions} args={actionProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n","import type * as React from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = (props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps, ...rest} = props\n\n  return (\n    <GetHookCollectionState {...rest} hooks={badges} args={badgeProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n","import {useCallback} from 'react'\nimport {useMemoObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {getPreviewStateObservable, useDocumentPreviewStore, useSchema, useWorkspace} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {COMMENTS_INSPECTOR_NAME} from '../../../panes/document/constants'\nimport {type CommentContext} from '../types'\n\ninterface NotificationTargetHookOptions {\n  documentId: string\n  documentType: string\n}\n\ninterface NotificationTargetHookValue {\n  /**\n   * Returns an object with notification-specific values for the selected comment, such as\n   * the current workspace + document title and full URL to the comment.\n   * These values are currently used in notification emails.\n   *\n   * **Please note:** this will generate a URL for the comment based on the current _active_ pane.\n   * The current active pane may not necessarily be the right-most structure pane and in these\n   * cases, the selected comment may not be visible on initial load when visiting these URLs.\n   */\n  getNotificationValue: ({commentId}: {commentId: string}) => CommentContext['notification']\n}\n\n/** @internal */\nexport function useNotificationTarget(\n  opts: NotificationTargetHookOptions,\n): NotificationTargetHookValue {\n  const {documentId, documentType} = opts || {}\n  const schemaType = useSchema().get(documentType)\n  const {title: workspaceTitle} = useWorkspace()\n  const {createPathWithParams, params} = usePaneRouter()\n\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const previewState = useMemoObservable(() => {\n    if (!documentId || !schemaType) return of(null)\n    return getPreviewStateObservable(documentPreviewStore, schemaType, documentId, '')\n  }, [documentId, documentPreviewStore, schemaType])\n\n  const {published, draft} = previewState || {}\n  const documentTitle = (draft?.title || published?.title || 'Sanity document') as string\n\n  const handleGetNotificationValue = useCallback(\n    ({commentId}: {commentId: string}) => {\n      // Generate a path based on the current pane params.\n      // We force a value for `inspect` to ensure that this is included in URLs when comments\n      // are created outside of the inspector context (i.e. directly on the field)\n      // @todo: consider filtering pane router params and culling all non-active RHS panes prior to generating this link\n      const path = createPathWithParams({\n        ...params,\n        comment: commentId,\n        inspect: COMMENTS_INSPECTOR_NAME,\n      })\n      const url = `${window.location.origin}${path}`\n\n      return {documentTitle, url, workspaceTitle}\n    },\n    [createPathWithParams, documentTitle, params, workspaceTitle],\n  )\n\n  return {\n    getNotificationValue: handleGetNotificationValue,\n  }\n}\n","import {type SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {type CurrentUser, type Tool} from 'sanity'\n\nimport {\n  type CommentContext,\n  type CommentCreatePayload,\n  type CommentDocument,\n  type CommentIntentGetter,\n  type CommentPostPayload,\n} from '../../types'\n\ninterface CreateOperationProps {\n  activeTool: Tool | undefined\n  client: SanityClient | null\n  comment: CommentCreatePayload\n  currentUser: CurrentUser\n  dataset: string\n  documentId: string\n  documentType: string\n  getComment?: (id: string) => CommentDocument | undefined\n  getIntent?: CommentIntentGetter\n  getNotificationValue: (comment: {commentId: string}) => CommentContext['notification']\n  getThreadLength?: (threadId: string) => number\n  onCreate?: (comment: CommentPostPayload) => void\n  onCreateError: (id: string, error: Error) => void\n  projectId: string\n  createAddonDataset: () => Promise<SanityClient | null>\n  workspace: string\n}\n\nexport async function createOperation(props: CreateOperationProps): Promise<void> {\n  const {\n    activeTool,\n    client,\n    comment,\n    currentUser,\n    dataset,\n    documentId,\n    documentType,\n    getIntent,\n    getNotificationValue,\n    getThreadLength,\n    onCreate,\n    onCreateError,\n    projectId,\n    createAddonDataset,\n    workspace,\n  } = props\n\n  // The comment payload might already have an id if, for example, the comment was created\n  // but the request failed. In that case, we'll reuse the id when retrying to\n  // create the comment.\n  const commentId = comment?.id || uuid()\n\n  const authorId = currentUser.id\n\n  // Get the current thread length of the thread the comment is being added to.\n  // We add 1 to the length to account for the comment being added.\n  const currentThreadLength = (getThreadLength?.(comment.threadId) || 0) + 1\n\n  const {\n    documentTitle = '',\n    url = '',\n    workspaceTitle = '',\n  } = getNotificationValue({commentId}) || {}\n\n  const notification: CommentContext['notification'] = {\n    currentThreadLength,\n    documentTitle,\n    url,\n    workspaceTitle,\n  }\n\n  const intent = getIntent?.({id: documentId, type: documentType, path: comment.fieldPath})\n\n  const nextComment: CommentPostPayload = {\n    _id: commentId,\n    _type: 'comment',\n    authorId,\n    lastEditedAt: undefined,\n    message: comment.message,\n    parentCommentId: comment.parentCommentId,\n    status: comment.status,\n    threadId: comment.threadId,\n\n    context: {\n      payload: {\n        workspace,\n      },\n      intent,\n      notification,\n      tool: activeTool?.name || '',\n    },\n\n    reactions: [],\n\n    target: {\n      path: {\n        field: comment.fieldPath,\n      },\n      document: {\n        _dataset: dataset,\n        _projectId: projectId,\n        _ref: documentId,\n        _type: 'crossDatasetReference',\n        _weak: true,\n      },\n      documentType,\n    },\n  }\n\n  onCreate?.(nextComment)\n\n  // If we don't have a client, that means that the dataset doesn't have an addon dataset.\n  // Therefore, when the first comment is created, we need to create the addon dataset and create\n  // a client for it and then post the comment. We do this here, since we know that we have a\n  // comment to create.\n  if (!client) {\n    try {\n      const newAddonClient = await createAddonDataset()\n      if (!newAddonClient) {\n        throw new Error('Failed to create addon dataset client')\n      }\n      await newAddonClient.create(nextComment)\n    } catch (err) {\n      onCreateError?.(nextComment._id, err)\n      throw err\n    }\n    return\n  }\n\n  try {\n    await client.create(nextComment)\n  } catch (err) {\n    onCreateError?.(nextComment._id, err)\n    throw err\n  }\n}\n","import {type SanityClient} from '@sanity/client'\n\nimport {type CommentEditPayload} from '../../types'\n\ninterface EditOperationProps {\n  client: SanityClient\n  comment: CommentEditPayload\n  id: string\n  onEdit?: (id: string, comment: CommentEditPayload) => void\n}\n\nexport async function editOperation(props: EditOperationProps): Promise<void> {\n  const {client, id, comment, onEdit} = props\n\n  const editedComment = {\n    message: comment.message,\n    lastEditedAt: new Date().toISOString(),\n  } satisfies CommentEditPayload\n\n  onEdit?.(id, editedComment)\n\n  await client.patch(id).set(editedComment).commit()\n}\n","import {type SanityClient} from '@sanity/client'\nimport {type CurrentUser} from '@sanity/types'\n\nimport {\n  type CommentCreatePayload,\n  type CommentDocument,\n  type CommentReactionItem,\n  type CommentReactionOption,\n  type CommentReactionShortNames,\n} from '../../types'\n\n// We construct the reaction key by combining the user id and the short name of the reaction.\n// This reduces the risk of having duplicate reactions for the same user.\n// Although this should not happen, the current implementation of the comment system using\n// optimistic updates could cause this to happen in an edge case.\nfunction createReactionKey(userId: string, shortName: CommentReactionShortNames) {\n  return `${userId}-${shortName}`\n}\n\ninterface ReactOperationProps {\n  client: SanityClient\n  currentUser: CurrentUser\n  id: string\n  reaction: CommentReactionOption\n  getComment?: (id: string) => CommentDocument | undefined\n  onUpdate?: (id: string, comment: Partial<CommentCreatePayload>) => void\n}\n\nexport async function reactOperation(props: ReactOperationProps): Promise<void> {\n  const {client, currentUser, id, reaction, getComment, onUpdate} = props\n\n  const reactions = getComment?.(id)?.reactions || []\n  const currentUserReactions = reactions.filter((r) => r.userId === currentUser.id)\n\n  const _key = createReactionKey(currentUser.id, reaction.shortName)\n\n  const currentReaction = currentUserReactions.find(\n    (r) => r._key === _key && r._optimisticState !== 'removed',\n  )\n\n  if (currentReaction) {\n    // The next optimistic reactions.\n    // Comments with the `_optimisticState` set to removed will be filtered out\n    // when rendering the list of reactions but kept in the list of reactions\n    // to make sure the reaction don't reappears when a real time update is received.\n    const next = reactions.map((r) => {\n      if (r._key === currentReaction._key) {\n        return {...r, _optimisticState: 'removed' as const}\n      }\n\n      return r\n    })\n\n    // Pass the updated reactions to the onUpdate callback to instantly update the UI.\n    onUpdate?.(id, {reactions: next})\n\n    // Unset the reaction\n    await client\n      .patch(id)\n      .unset([`reactions[_key==\"${_key}\"]`])\n      .commit()\n\n    return\n  }\n\n  if (!currentReaction) {\n    // The new reaction item to add to the comment\n    const reactionItem: CommentReactionItem = {\n      _key,\n      addedAt: new Date().toISOString(),\n      shortName: reaction.shortName,\n      userId: currentUser.id,\n    }\n\n    const optimisticReactionItem: CommentReactionItem = {...reactionItem, _optimisticState: 'added'}\n\n    // The next optimistic reactions\n    const next = reactions\n      .concat(optimisticReactionItem)\n      .filter((r) => !(r._key === reactionItem._key && r._optimisticState === 'removed'))\n\n    // Pass the updated reactions to the onUpdate callback to instantly update the UI.\n    onUpdate?.(id, {reactions: next})\n\n    // Append the new reaction to the comment\n    await client\n      .patch(id)\n      .setIfMissing({reactions: []})\n      .append('reactions', [reactionItem])\n      .commit()\n  }\n}\n","import {type SanityClient} from '@sanity/client'\n\ninterface RemoveOperationProps {\n  client: SanityClient\n  id: string\n  onRemove?: (id: string) => void\n}\n\nexport async function removeOperation(props: RemoveOperationProps): Promise<void> {\n  const {client, id, onRemove} = props\n  onRemove?.(id)\n\n  await Promise.all([\n    client.delete({query: `*[_type == \"comment\" && parentCommentId == \"${id}\"]`}),\n    client.delete(id),\n  ])\n}\n","import {type SanityClient} from '@sanity/client'\n\nimport {type CommentCreatePayload} from '../../types'\n\ninterface UpdateOperationProps {\n  client: SanityClient\n  id: string\n  comment: Partial<CommentCreatePayload>\n  onUpdate?: (id: string, comment: Partial<CommentCreatePayload>) => void\n}\n\nexport async function updateOperation(props: UpdateOperationProps): Promise<void> {\n  const {client, id, comment, onUpdate} = props\n  onUpdate?.(id, comment)\n\n  // If the update contains a status, we'll update the status of all replies\n  // to the comment as well.\n  if (comment.status) {\n    await Promise.all([\n      client\n        .patch({query: `*[_type == \"comment\" && parentCommentId == \"${id}\"]`})\n        .set({\n          status: comment.status,\n        })\n        .commit(),\n      client.patch(id).set(comment).commit(),\n    ])\n\n    return\n  }\n\n  // Else we'll just update the comment itself\n  await client?.patch(id).set(comment).commit()\n}\n","import {type SanityClient} from '@sanity/client'\nimport {type CurrentUser, type SchemaType} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport {useWorkspace} from 'sanity'\nimport {useRouterState} from 'sanity/router'\n\nimport {\n  type CommentCreatePayload,\n  type CommentDocument,\n  type CommentEditPayload,\n  type CommentOperations,\n  type CommentPostPayload,\n  type CommentReactionOption,\n} from '../../types'\nimport {useCommentsIntent} from '../useCommentsIntent'\nimport {useNotificationTarget} from '../useNotificationTarget'\nimport {createOperation} from './createOperation'\nimport {editOperation} from './editOperation'\nimport {reactOperation} from './reactOperation'\nimport {removeOperation} from './removeOperation'\nimport {updateOperation} from './updateOperation'\n\nexport interface CommentOperationsHookValue {\n  operation: CommentOperations\n}\n\nexport interface CommentOperationsHookOptions {\n  client: SanityClient | null\n  currentUser: CurrentUser | null\n  dataset: string\n  documentId: string\n  documentType: string\n  getComment?: (id: string) => CommentDocument | undefined\n  getThreadLength?: (threadId: string) => number\n  onCreate?: (comment: CommentPostPayload) => void\n  onCreateError: (id: string, error: Error) => void\n  onEdit?: (id: string, comment: CommentEditPayload) => void\n  onRemove?: (id: string) => void\n  onUpdate?: (id: string, comment: Partial<CommentCreatePayload>) => void\n  projectId: string\n  createAddonDataset: () => Promise<SanityClient | null>\n  schemaType: SchemaType | undefined\n  workspace: string\n}\n\nexport function useCommentOperations(\n  opts: CommentOperationsHookOptions,\n): CommentOperationsHookValue {\n  const {\n    client,\n    currentUser,\n    dataset,\n    documentId,\n    documentType,\n    getComment,\n    getThreadLength,\n    onCreate,\n    onCreateError,\n    onEdit,\n    onRemove,\n    onUpdate,\n    projectId,\n    createAddonDataset,\n    workspace,\n  } = opts\n\n  const getIntent = useCommentsIntent()\n\n  const activeToolName = useRouterState(\n    useCallback(\n      (routerState) => (typeof routerState.tool === 'string' ? routerState.tool : undefined),\n      [],\n    ),\n  )\n  const {tools} = useWorkspace()\n\n  const activeTool = useMemo(\n    () => tools.find((tool) => tool.name === activeToolName),\n    [activeToolName, tools],\n  )\n  const {getNotificationValue} = useNotificationTarget({documentId, documentType})\n\n  const handleCreate = useCallback(\n    async (comment: CommentCreatePayload) => {\n      // Unlike the other operations, we want to proceed with create operation even\n      // though there is no client available. This is because if there is no client for the\n      // comments addon dataset, it will be created in the `createOperation`, and the\n      // comment will be created in that dataset when the client is eventually created.\n      if (!currentUser?.id) return\n\n      await createOperation({\n        activeTool,\n        client,\n        comment,\n        currentUser,\n        dataset,\n        documentId,\n        documentType,\n        getIntent,\n        getNotificationValue,\n        getThreadLength,\n        onCreate,\n        onCreateError,\n        projectId,\n        createAddonDataset,\n        workspace,\n      })\n    },\n    [\n      activeTool,\n      client,\n      currentUser,\n      dataset,\n      documentId,\n      documentType,\n      getIntent,\n      getNotificationValue,\n      getThreadLength,\n      onCreate,\n      onCreateError,\n      projectId,\n      createAddonDataset,\n      workspace,\n    ],\n  )\n\n  const handleRemove = useCallback(\n    async (id: string) => {\n      if (!client) return\n\n      await removeOperation({\n        client,\n        id,\n        onRemove,\n      })\n    },\n    [client, onRemove],\n  )\n\n  const handleEdit = useCallback(\n    async (id: string, comment: CommentEditPayload) => {\n      if (!client) return\n\n      await editOperation({\n        client,\n        comment,\n        id,\n        onEdit,\n      })\n    },\n    [client, onEdit],\n  )\n\n  const handleUpdate = useCallback(\n    async (id: string, comment: Partial<CommentCreatePayload>) => {\n      if (!client) return\n\n      await updateOperation({\n        client,\n        id,\n        comment,\n        onUpdate,\n      })\n    },\n    [client, onUpdate],\n  )\n\n  const handleReact = useCallback(\n    async (id: string, reaction: CommentReactionOption) => {\n      if (!client || !currentUser?.id) return\n\n      await reactOperation({\n        client,\n        currentUser,\n        id,\n        reaction,\n        getComment,\n        onUpdate,\n      })\n    },\n    [client, currentUser, getComment, onUpdate],\n  )\n\n  return useMemo(\n    () => ({\n      operation: {\n        create: handleCreate,\n        edit: handleEdit,\n        react: handleReact,\n        remove: handleRemove,\n        update: handleUpdate,\n      } satisfies CommentOperations,\n    }),\n    [handleCreate, handleEdit, handleRemove, handleUpdate, handleReact],\n  )\n}\n","import {useContext} from 'react'\n\nimport {CommentsContext} from '../context'\nimport {type CommentsContextValue} from '../context/comments/types'\n\n/**\n * @beta\n * @hidden\n */\nexport function useComments(): CommentsContextValue {\n  const value = useContext(CommentsContext)\n\n  if (!value) {\n    throw new Error('useComments must be used within a CommentsProvider')\n  }\n\n  return value\n}\n","import {createContext} from 'react'\n\nimport {type CommentsEnabledContextValue} from './types'\n\nexport const CommentsEnabledContext = createContext<CommentsEnabledContextValue | null>(null)\n","import * as React from 'react'\n\nimport {useResolveCommentsEnabled} from '../../hooks'\nimport {CommentsEnabledContext} from './CommentsEnabledContext'\n\ninterface CommentsEnabledProviderProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\nexport const CommentsEnabledProvider = React.memo(function CommentsEnabledProvider(\n  props: CommentsEnabledProviderProps,\n) {\n  const {children, documentId, documentType} = props\n\n  const value = useResolveCommentsEnabled(documentId, documentType)\n\n  return <CommentsEnabledContext.Provider value={value}>{children}</CommentsEnabledContext.Provider>\n})\n","import {useContext} from 'react'\n\nimport {CommentsEnabledContext} from '../context/enabled'\nimport {type CommentsEnabledContextValue} from '../context/enabled/types'\n\n/**\n * @internal\n * This hook returns a boolean indicating whether comments are enabled or not.\n * It checks if the project has the `studioComments` feature flag enabled and\n * if comments is enabled for the current document in the config API.\n */\nexport function useCommentsEnabled(): CommentsEnabledContextValue {\n  const ctx = useContext(CommentsEnabledContext)\n\n  if (ctx === null) {\n    throw new Error('useCommentsEnabled: missing context value')\n  }\n\n  return ctx\n}\n","import {createContext} from 'react'\n\nimport {type CommentsOnboardingContextValue} from './types'\n\nexport const CommentsOnboardingContext = createContext<CommentsOnboardingContextValue | null>(null)\n","import type * as React from 'react'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {CommentsOnboardingContext} from './CommentsOnboardingContext'\nimport {type CommentsOnboardingContextValue} from './types'\n\nconst VERSION = 1\nconst LOCAL_STORAGE_KEY = `sanityStudio:comments:inspector:onboarding:dismissed:v${VERSION}`\n\nconst setLocalStorage = (value: boolean) => {\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(value))\n  } catch (_) {\n    // Fail silently\n  }\n}\n\nconst getLocalStorage = (): boolean => {\n  try {\n    const value = window.localStorage.getItem(LOCAL_STORAGE_KEY)\n    return value ? JSON.parse(value) : false\n  } catch (_) {\n    return false\n  }\n}\n\ninterface CommentsOnboardingProviderProps {\n  children: React.ReactNode\n}\n\nexport function CommentsOnboardingProvider(props: CommentsOnboardingProviderProps) {\n  const {children} = props\n  const [dismissed, setDismissed] = useState<boolean>(getLocalStorage())\n\n  const handleDismiss = useCallback(() => {\n    setDismissed(true)\n    setLocalStorage(true)\n  }, [setDismissed])\n\n  const ctxValue = useMemo(\n    (): CommentsOnboardingContextValue => ({\n      setDismissed: handleDismiss,\n      isDismissed: dismissed,\n    }),\n    [handleDismiss, dismissed],\n  )\n\n  return (\n    <CommentsOnboardingContext.Provider value={ctxValue}>\n      {children}\n    </CommentsOnboardingContext.Provider>\n  )\n}\n","import {useContext} from 'react'\n\nimport {CommentsOnboardingContext} from '../context/onboarding'\nimport {type CommentsOnboardingContextValue} from '../context/onboarding/types'\n\nexport function useCommentsOnboarding(): CommentsOnboardingContextValue {\n  const ctx = useContext(CommentsOnboardingContext)\n\n  if (!ctx) {\n    throw new Error('useCommentsOnboarding: missing context value')\n  }\n\n  return ctx\n}\n","import {useContext} from 'react'\n\nimport {CommentsSelectedPathContext, type CommentsSelectedPathContextValue} from '../context'\n\nexport function useCommentsSelectedPath(): CommentsSelectedPathContextValue {\n  const ctx = useContext(CommentsSelectedPathContext)\n\n  if (!ctx) {\n    throw new Error('useCommentsSelectedPath: missing context value')\n  }\n\n  return ctx\n}\n","import {useContext} from 'react'\n\nimport {CommentsUpsellContext} from '../context'\nimport {type CommentsUpsellContextValue} from '../context/upsell/types'\n\n/**\n * @beta\n * @hidden\n */\nexport function useCommentsUpsell(): CommentsUpsellContextValue {\n  const value = useContext(CommentsUpsellContext)\n\n  if (!value) {\n    // Instead of throwing, we return a dummy value to avoid breaking the CommentsField implementation, given the context is optional.\n    return {\n      upsellData: null,\n      handleOpenDialog: () => null,\n      upsellDialogOpen: false,\n      telemetryLogs: {\n        dialogSecondaryClicked: () => null,\n        dialogPrimaryClicked: () => null,\n        panelViewed: () => null,\n        panelDismissed: () => null,\n        panelPrimaryClicked: () => null,\n        panelSecondaryClicked: () => null,\n      },\n    }\n  }\n\n  return value\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useFeatureEnabled, useSource} from 'sanity'\n\nimport {type CommentsUIMode} from '../types'\n\ntype ResolveCommentsEnabled =\n  | {\n      enabled: false\n      mode: null\n    }\n  | {\n      enabled: true\n      mode: CommentsUIMode\n    }\n\n/**\n * @internal\n * A hook that resolves if comments are enabled for the current document and document type\n * and if the feature is enabled for the current project.\n */\nexport function useResolveCommentsEnabled(\n  documentId: string,\n  documentType: string,\n): ResolveCommentsEnabled {\n  // Check if the projects plan has the feature enabled\n  const {enabled: featureEnabled, isLoading} = useFeatureEnabled('studioComments')\n\n  const {enabled} = useSource().document.unstable_comments\n  // Check if the feature is enabled for the current document in the config\n  const enabledFromConfig = useMemo(\n    () => enabled({documentType, documentId: getPublishedId(documentId)}),\n    [documentId, documentType, enabled],\n  )\n\n  const value: ResolveCommentsEnabled = useMemo(() => {\n    if (isLoading || !enabledFromConfig) {\n      return {enabled: false, mode: null}\n    }\n\n    return {\n      enabled: true,\n      mode: featureEnabled ? 'default' : 'upsell',\n    }\n  }, [isLoading, enabledFromConfig, featureEnabled])\n\n  return value\n}\n","import {type SanityDocument} from '@sanity/client'\nimport {\n  type ArraySchemaType,\n  type ConditionalPropertyCallbackContext,\n  type CurrentUser,\n  isArraySchemaType,\n  isObjectSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type PathSegment,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {findIndex} from 'lodash'\nimport {getSchemaTypeTitle, getValueAtPath, resolveConditionalProperty} from 'sanity'\n\nimport {type CommentListBreadcrumbs} from '../types'\n\nfunction getSchemaField(\n  schemaType: SchemaType,\n  fieldPath: string,\n): ObjectField<SchemaType> | undefined {\n  const paths = PathUtils.fromString(fieldPath)\n  const firstPath = paths[0]\n\n  if (firstPath && isObjectSchemaType(schemaType)) {\n    const field = schemaType?.fields?.find((f) => f.name === firstPath)\n\n    if (field) {\n      const nextPath = PathUtils.toString(paths.slice(1))\n\n      if (nextPath) {\n        return getSchemaField(field.type, nextPath)\n      }\n\n      return field\n    }\n  }\n\n  return undefined\n}\n\nfunction findArrayItemIndex(array: unknown[], pathSegment: PathSegment): number | false {\n  if (typeof pathSegment === 'number') {\n    return pathSegment\n  }\n  const index = findIndex(array, pathSegment)\n  return index === -1 ? false : index\n}\n\ninterface BuildCommentBreadcrumbsProps {\n  documentValue: Partial<SanityDocument> | null\n  fieldPath: string\n  schemaType: SchemaType\n  currentUser: CurrentUser\n}\n\n/**\n * @beta\n * @hidden\n *\n *  This function builds a breadcrumb trail for a given comment using its field path.\n *  It will validate each segment of the path against the document value and/or schema type.\n *  The path is invalid if:\n * - The field is hidden by a conditional field\n * - The field is not found in the schema type\n * - The field is not found in the document value (array items only)\n */\nexport function buildCommentBreadcrumbs(\n  props: BuildCommentBreadcrumbsProps,\n): CommentListBreadcrumbs {\n  const {currentUser, schemaType, fieldPath, documentValue} = props\n  const paths = PathUtils.fromString(fieldPath)\n  const fieldPaths: CommentListBreadcrumbs = []\n\n  let currentSchemaType: ArraySchemaType<SchemaType> | ObjectFieldType<SchemaType> | null = null\n\n  paths.forEach((seg, index) => {\n    const currentPath = paths.slice(0, index + 1)\n    const previousPath = paths.slice(0, index)\n\n    const field = getSchemaField(schemaType, PathUtils.toString(currentPath))\n    const isKeySegment = seg.hasOwnProperty('_key')\n\n    const parentValue = getValueAtPath(documentValue, previousPath)\n    const currentValue = getValueAtPath(documentValue, currentPath)\n\n    const conditionalContext: ConditionalPropertyCallbackContext = {\n      document: documentValue as SanityDocument,\n      currentUser,\n      parent: parentValue,\n      value: currentValue,\n    }\n\n    // If the field is a key segment and the parent value is an array, we'll\n    // try to find the index of the array item in the parent value.\n    // If the index is not found, we'll mark it as invalid.\n    // This can happen if the array item has been removed from the document value.\n    if (isKeySegment && Array.isArray(parentValue)) {\n      const arrayItemIndex = findArrayItemIndex(parentValue, seg)\n\n      const isNumber = typeof arrayItemIndex === 'number'\n\n      fieldPaths.push({\n        invalid: arrayItemIndex === false,\n        isArrayItem: true,\n        title: isNumber ? `#${Number(arrayItemIndex) + 1}` : 'Unknown array item',\n      })\n\n      return\n    }\n\n    // If we find a field in the schema type, we'll add it to the breadcrumb trail.\n    if (field?.type) {\n      const hidden = resolveConditionalProperty(field.type.hidden, conditionalContext)\n\n      fieldPaths.push({\n        invalid: hidden,\n        isArrayItem: false,\n        title: getSchemaTypeTitle(field.type),\n      })\n\n      // Store the current schema type so we can use it in the next iteration.\n      currentSchemaType = field.type\n\n      return\n    }\n\n    if (isArraySchemaType(currentSchemaType)) {\n      // Get the value of the array field in the document value\n      const arrayValue: any = getValueAtPath(documentValue, previousPath)\n\n      // Get the object type of the array field in the schema type\n      // from the array field's `_type` property in the document value.\n      const objectType = arrayValue?._type\n\n      // Find the object field in the array field's `of` array using\n      // the object type from the document value.\n      const objectField = currentSchemaType?.of?.find(\n        (type) => type.name === objectType,\n      ) as ObjectSchemaType\n\n      // Find the field in the object field's `fields` array\n      // using the field name from the path segment.\n      const currentField = objectField?.fields?.find(\n        (f) => f.name === seg,\n      ) as ObjectField<SchemaType>\n\n      // If we don't find the `_type` property in the document value, that\n      // means that the field is an anonymous object field and don't have a\n      // name defined in the schema type.\n      // In this case, we try to find all the fields of the current schema type\n      // and check if the field name from the path segment matches any of them.\n      // If we find a match, we'll use the field's type to get the title.\n      if (!objectType && currentValue) {\n        const allCurrentFields = currentSchemaType?.of\n          ?.map((o: any) => o?.fields)\n          .filter(Boolean)\n          .flat()\n\n        const anonymousField = allCurrentFields?.find((f) => f?.name === seg)\n        const hidden = resolveConditionalProperty(anonymousField?.type?.hidden, conditionalContext)\n\n        if (anonymousField) {\n          fieldPaths.push({\n            invalid: hidden,\n            isArrayItem: false,\n            title: getSchemaTypeTitle(anonymousField?.type),\n          })\n\n          currentSchemaType = anonymousField?.type\n        }\n        return\n      }\n\n      if (!currentField) {\n        fieldPaths.push({\n          invalid: true,\n          isArrayItem: false,\n          title: 'Unknown field',\n        })\n\n        return\n      }\n\n      // Get the title of the current field\n      const currentTitle = getSchemaTypeTitle(currentField?.type)\n\n      // Resolve the hidden property of the object field\n      const objectFieldHidden = resolveConditionalProperty(\n        objectField?.type?.hidden,\n        conditionalContext,\n      )\n\n      // Resolve the hidden property of the current field\n      const currentFieldHidden = resolveConditionalProperty(\n        currentField?.type.hidden,\n        conditionalContext,\n      )\n\n      // If the object field or the current field is hidden, we'll mark it as invalid.\n      const isHidden = objectFieldHidden || currentFieldHidden\n\n      // Add the field to the breadcrumb trail\n      fieldPaths.push({\n        invalid: isHidden,\n        isArrayItem: false,\n        title: currentTitle,\n      })\n\n      // If the current field is an object field, we'll set it as the current schema type\n      // so we can use it in the next iteration.\n      currentSchemaType = currentField?.type\n\n      return\n    }\n\n    // If we get here, the field is not found in the schema type\n    // or the document value so we'll mark it as invalid.\n    fieldPaths.push({\n      invalid: true,\n      isArrayItem: false,\n      title: 'Unknown field',\n    })\n  })\n\n  return fieldPaths\n}\n","import {type CommentReactionItem} from '../types'\n\n/**\n * A function to merge two arrays of comment reactions.\n */\nexport function mergeCommentReactions(\n  reactionsA: CommentReactionItem[],\n  reactionsB: CommentReactionItem[],\n): CommentReactionItem[] {\n  const mergedReactions: Record<string, CommentReactionItem> = {}\n\n  // Merge reactionsA into the result\n  for (const reaction of reactionsA) {\n    mergedReactions[reaction._key] = {...reaction}\n  }\n\n  // Merge reactionsB into the result, overriding or adding new reactions\n  for (const reaction of reactionsB) {\n    mergedReactions[reaction._key] = {...mergedReactions[reaction._key], ...reaction}\n  }\n\n  // Convert the mergedReactions object back to an array\n  const result = Object.values(mergedReactions)\n\n  return result\n}\n","import {type CommentDocument, type CommentPostPayload} from '../types'\nimport {mergeCommentReactions} from '../utils'\n\ninterface CommentAddedAction {\n  payload: CommentDocument | CommentPostPayload\n  type: 'COMMENT_ADDED'\n}\n\ninterface CommentDeletedAction {\n  id: string\n  type: 'COMMENT_DELETED'\n}\n\ninterface CommentUpdatedAction {\n  payload: CommentDocument | Partial<CommentPostPayload>\n  type: 'COMMENT_UPDATED'\n}\n\ninterface CommentsSetAction {\n  comments: CommentDocument[]\n  type: 'COMMENTS_SET'\n}\n\ninterface CommentReceivedAction {\n  payload: CommentDocument\n  type: 'COMMENT_RECEIVED'\n}\n\nexport type CommentsReducerAction =\n  | CommentAddedAction\n  | CommentDeletedAction\n  | CommentUpdatedAction\n  | CommentsSetAction\n  | CommentReceivedAction\n\nexport interface CommentsReducerState {\n  comments: Record<string, CommentDocument>\n}\n\n/**\n * Transform an array of comments into an object with the comment id as key:\n * ```\n * {\n *  'comment-1': { _id: 'comment-1', ... },\n *  'comment-2': { _id: 'comment-2', ... },\n * }\n * ```\n */\nfunction createCommentsSet(comments: CommentDocument[]) {\n  const commentsById = comments.reduce((acc, comment) => ({...acc, [comment._id]: comment}), {})\n  return commentsById\n}\n\nexport function commentsReducer(\n  state: CommentsReducerState,\n  action: CommentsReducerAction,\n): CommentsReducerState {\n  switch (action.type) {\n    case 'COMMENTS_SET': {\n      // Create an object with the comment id as key\n      const commentsById = createCommentsSet(action.comments)\n\n      return {\n        ...state,\n        comments: commentsById,\n      }\n    }\n\n    case 'COMMENT_ADDED': {\n      const nextCommentResult = action.payload as CommentDocument\n      const nextCommentValue = nextCommentResult satisfies CommentDocument\n\n      const nextComment = {\n        [nextCommentResult._id]: {\n          ...state.comments[nextCommentResult._id],\n          ...nextCommentValue,\n          _state: nextCommentResult._state || undefined,\n          // If the comment is created optimistically, it won't have a createdAt date as this is set on the server.\n          // However, we need to set a createdAt date to be able to sort the comments correctly.\n          // Therefore, we set the createdAt date to the current date here if it's missing while creating the comment.\n          // Once the comment is created and received from the server, the createdAt date will be updated to the correct value.\n          _createdAt: nextCommentResult._createdAt || new Date().toISOString(),\n        } satisfies CommentDocument,\n      }\n\n      return {\n        ...state,\n        comments: {\n          ...state.comments,\n          ...nextComment,\n        },\n      }\n    }\n\n    case 'COMMENT_RECEIVED': {\n      const nextCommentResult = action.payload as CommentDocument\n\n      return {\n        ...state,\n        comments: {\n          ...state.comments,\n          [nextCommentResult._id]: nextCommentResult,\n        },\n      }\n    }\n\n    case 'COMMENT_DELETED': {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {[action.id]: _, ...restComments} = state.comments\n\n      // Delete all replies to the deleted comment\n      Object.keys(restComments).forEach((commentId) => {\n        if (restComments[commentId].parentCommentId === action.id) {\n          delete restComments[commentId]\n        }\n      })\n\n      return {\n        ...state,\n        comments: restComments,\n      }\n    }\n\n    case 'COMMENT_UPDATED': {\n      const updatedComment = action.payload\n      const id = updatedComment._id as string\n      const comment = state.comments[id]\n\n      // Due to optimistic updates, we need to merge the current optimistic reactions with the\n      // incoming reactions to make sure that any optimistic reactions are not lost or\n      // re-added when we receive the updated comment from the server.\n      const optimisticReactions = comment?.reactions?.filter((v) => v?._optimisticState) || []\n      const incomingReactions = updatedComment.reactions || []\n      const nextReactions = mergeCommentReactions(optimisticReactions, incomingReactions)\n\n      const nextComment = {\n        // Add existing comment data\n        ...comment,\n        // Add incoming comment data\n        ...updatedComment,\n        // Add reactions merged with optimistic reactions\n        reactions: nextReactions,\n      } satisfies CommentDocument\n\n      return {\n        ...state,\n        comments: {\n          ...state.comments,\n          [id]: nextComment,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import {type ListenEvent, type ListenOptions, type SanityClient} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {getPublishedId} from 'sanity'\n\nimport {type CommentDocument, type Loadable} from '../types'\nimport {commentsReducer, type CommentsReducerAction, type CommentsReducerState} from './reducer'\n\nexport interface CommentsStoreOptions {\n  documentId: string\n  client: SanityClient | null\n}\n\ninterface CommentsStoreReturnType extends Loadable<CommentDocument[]> {\n  dispatch: React.Dispatch<CommentsReducerAction>\n}\n\nconst INITIAL_STATE: CommentsReducerState = {\n  comments: {},\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n}\n\nexport const SORT_FIELD = '_createdAt'\nexport const SORT_ORDER = 'desc'\n\nconst QUERY_FILTERS = [`_type == \"comment\"`, `target.document._ref == $documentId`]\n\nconst QUERY_PROJECTION = `{\n  _createdAt,\n  _id,\n  authorId,\n  context,\n  lastEditedAt,\n  message,\n  parentCommentId,\n  status,\n  target,\n  threadId,\n  reactions\n}`\n\n// Newest comments first\nconst QUERY_SORT_ORDER = `order(${SORT_FIELD} ${SORT_ORDER})`\n\nconst QUERY = `*[${QUERY_FILTERS.join(' && ')}] ${QUERY_PROJECTION} | ${QUERY_SORT_ORDER}`\n\nexport function useCommentsStore(opts: CommentsStoreOptions): CommentsStoreReturnType {\n  const {client, documentId} = opts\n\n  const [state, dispatch] = useReducer(commentsReducer, INITIAL_STATE)\n  const [loading, setLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const params = useMemo(() => ({documentId: getPublishedId(documentId)}), [documentId])\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setLoading(false)\n      return\n    }\n\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'COMMENTS_SET', comments: res})\n      setLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, CommentDocument>>) => {\n      // Fetch all comments on initial connection\n      if (event.type === 'welcome') {\n        setLoading(true)\n        await initialFetch()\n        setLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all comments again (above).\n      if (event.type === 'reconnect') {\n        setLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the comments store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextComment = event.result as CommentDocument | undefined\n\n          if (nextComment) {\n            dispatch({\n              type: 'COMMENT_RECEIVED',\n              payload: nextComment,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'COMMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedComment = event.result as CommentDocument | undefined\n\n          if (updatedComment) {\n            dispatch({\n              type: 'COMMENT_UPDATED',\n              payload: updatedComment,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Transform comments object to array\n  const commentsAsArray = useMemo(() => Object.values(state.comments), [state.comments])\n\n  return {\n    data: commentsAsArray,\n    dispatch,\n    error,\n    loading,\n  }\n}\n","import {type SanityDocument} from '@sanity/client'\nimport {type CurrentUser, type SchemaType} from '@sanity/types'\n\nimport {type CommentDocument, type CommentThreadItem} from '../types'\nimport {buildCommentBreadcrumbs} from './buildCommentBreadcrumbs'\n\ninterface BuildCommentThreadItemsProps {\n  comments: CommentDocument[]\n  currentUser: CurrentUser\n  documentValue: Partial<SanityDocument> | null\n  schemaType: SchemaType\n}\n\n/**\n * This function formats comments into a structure that is easier to work with in the UI.\n * It also validates each comment against the document value and schema type to ensure\n * that the comment is valid. If the comment is invalid, it will be omitted from the\n * returned array.\n */\nexport function buildCommentThreadItems(props: BuildCommentThreadItemsProps): CommentThreadItem[] {\n  const {comments, currentUser, documentValue, schemaType} = props\n  const parentComments = comments?.filter((c) => !c.parentCommentId)\n\n  const items = parentComments\n    .map((parentComment) => {\n      const crumbs = buildCommentBreadcrumbs({\n        currentUser,\n        documentValue,\n        fieldPath: parentComment.target.path.field,\n        schemaType,\n      })\n\n      const hasInvalidBreadcrumb = crumbs.some((bc) => bc.invalid)\n\n      if (hasInvalidBreadcrumb) return undefined\n\n      const replies = comments?.filter((r) => r.parentCommentId === parentComment._id)\n\n      const commentsCount = [parentComment, ...replies].length\n\n      return {\n        breadcrumbs: crumbs,\n        commentsCount,\n        fieldPath: parentComment.target.path.field,\n        parentComment,\n        replies,\n        threadId: parentComment.threadId,\n      }\n    })\n    .filter(Boolean) as CommentThreadItem[]\n\n  return items\n}\n","import {orderBy} from 'lodash'\nimport {memo, type ReactNode, useCallback, useMemo, useState} from 'react'\nimport {\n  getPublishedId,\n  useAddonDataset,\n  useCurrentUser,\n  useEditState,\n  useSchema,\n  useUserListWithPermissions,\n  useWorkspace,\n} from 'sanity'\n\nimport {\n  type CommentOperationsHookOptions,\n  useCommentOperations,\n  useCommentsEnabled,\n} from '../../hooks'\nimport {useCommentsStore} from '../../store'\nimport {\n  type CommentCreatePayload,\n  type CommentEditPayload,\n  type CommentPostPayload,\n  type CommentStatus,\n  type CommentThreadItem,\n} from '../../types'\nimport {buildCommentThreadItems} from '../../utils/buildCommentThreadItems'\nimport {CommentsContext} from './CommentsContext'\nimport {type CommentsContextValue} from './types'\n\nconst EMPTY_ARRAY: [] = []\n\nconst EMPTY_COMMENTS_DATA = {\n  open: EMPTY_ARRAY,\n  resolved: EMPTY_ARRAY,\n}\n\ninterface ThreadItemsByStatus {\n  open: CommentThreadItem[]\n  resolved: CommentThreadItem[]\n}\n\n/**\n * @beta\n * @hidden\n */\nexport interface CommentsProviderProps {\n  children: ReactNode\n  documentId: string\n  documentType: string\n\n  isCommentsOpen?: boolean\n  onCommentsOpen?: () => void\n}\n\n/**\n * @beta\n */\nexport const CommentsProvider = memo(function CommentsProvider(props: CommentsProviderProps) {\n  const {children, documentId, documentType, isCommentsOpen, onCommentsOpen} = props\n  const commentsEnabled = useCommentsEnabled()\n  const [status, setStatus] = useState<CommentStatus>('open')\n  const {client, createAddonDataset, isCreatingDataset} = useAddonDataset()\n  const publishedId = getPublishedId(documentId)\n  const editState = useEditState(publishedId, documentType, 'low')\n  const schemaType = useSchema().get(documentType)\n  const currentUser = useCurrentUser()\n  const {name: workspaceName, dataset, projectId} = useWorkspace()\n  const {\n    dispatch,\n    data = EMPTY_ARRAY,\n    error,\n    loading,\n  } = useCommentsStore({\n    documentId: publishedId,\n    client,\n  })\n\n  const documentValue = useMemo(() => {\n    return editState.draft || editState.published\n  }, [editState.draft, editState.published])\n\n  const handleSetStatus = useCallback(\n    (newStatus: CommentStatus) => {\n      // Avoids going to \"resolved\" when using links to comments\n      if (commentsEnabled.mode === 'upsell' && newStatus === 'resolved') {\n        return null\n      }\n      return setStatus(newStatus)\n    },\n    [setStatus, commentsEnabled],\n  )\n  const mentionOptions = useUserListWithPermissions(\n    useMemo(() => ({documentValue, permission: 'read'}), [documentValue]),\n  )\n\n  const threadItemsByStatus: ThreadItemsByStatus = useMemo(() => {\n    if (!schemaType || !currentUser) return EMPTY_COMMENTS_DATA\n    // Since we only make one query to get all comments using the order `_createdAt desc` – we\n    // can't know for sure that the comments added through the real time listener will be in the\n    // correct order. In order to avoid that comments are out of order, we make an additional\n    // sort here. The comments can be out of order if e.g a comment creation fails and is retried\n    // later.\n    const sorted = orderBy(data, ['_createdAt'], ['desc'])\n\n    const items = buildCommentThreadItems({\n      comments: sorted,\n      schemaType,\n      currentUser,\n      documentValue,\n    })\n\n    return {\n      open: items.filter((item) => item.parentComment.status === 'open'),\n      resolved: items.filter((item) => item.parentComment.status === 'resolved'),\n    }\n  }, [currentUser, data, documentValue, schemaType])\n\n  const getThreadLength = useCallback(\n    (threadId: string) => {\n      return threadItemsByStatus.open.filter((item) => item.threadId === threadId).length\n    },\n    [threadItemsByStatus.open],\n  )\n\n  const getComment = useCallback((id: string) => data?.find((c) => c._id === id), [data])\n\n  const handleOnCreate = useCallback(\n    (payload: CommentPostPayload) => {\n      // If the comment we try to create already exists in the local state and has\n      // the 'createError' state, we know that we are retrying a comment creation.\n      // In that case, we want to change the state to 'createRetrying'.\n      const hasError = data?.find((c) => c._id === payload._id)?._state?.type === 'createError'\n\n      dispatch({\n        type: 'COMMENT_ADDED',\n        payload: {\n          ...payload,\n          _state: hasError ? {type: 'createRetrying'} : undefined,\n        },\n      })\n    },\n    [data, dispatch],\n  )\n\n  const handleOnUpdate = useCallback(\n    (id: string, payload: Partial<CommentCreatePayload>) => {\n      dispatch({\n        type: 'COMMENT_UPDATED',\n        payload: {\n          _id: id,\n          ...payload,\n        },\n      })\n    },\n    [dispatch],\n  )\n\n  const handleOnEdit = useCallback(\n    (id: string, payload: CommentEditPayload) => {\n      dispatch({\n        type: 'COMMENT_UPDATED',\n        payload: {\n          _id: id,\n          ...payload,\n        },\n      })\n    },\n    [dispatch],\n  )\n\n  const handleOnCreateError = useCallback(\n    (id: string, err: Error) => {\n      // When an error occurs during comment creation, we update the comment state\n      // to `createError`. This will make the comment appear in the UI as a comment\n      // that failed to be created. The user can then retry the comment creation.\n      dispatch({\n        type: 'COMMENT_UPDATED',\n        payload: {\n          _id: id,\n          _state: {\n            error: err,\n            type: 'createError',\n          },\n        },\n      })\n    },\n    [dispatch],\n  )\n\n  const {operation} = useCommentOperations(\n    useMemo(\n      (): CommentOperationsHookOptions => ({\n        client,\n        currentUser,\n        dataset,\n        documentId: publishedId,\n        documentType,\n        projectId,\n        schemaType,\n        workspace: workspaceName,\n        getThreadLength,\n        getComment,\n        // This function runs when the first comment creation is executed.\n        // It is used to create the addon dataset and configure a client for\n        // the addon dataset.\n        createAddonDataset,\n        // The following callbacks runs when the comment operation are executed.\n        // They are used to update the local state of the comments immediately after\n        // a comment operation has been executed. This is done to avoid waiting for\n        // the real time listener to update the comments and make the UI feel more\n        // responsive. The comment will be updated again when we receive an mutation\n        // event from the real time listener.\n        onCreate: handleOnCreate,\n        onCreateError: handleOnCreateError,\n        onEdit: handleOnEdit,\n        onUpdate: handleOnUpdate,\n      }),\n      [\n        client,\n        currentUser,\n        dataset,\n        publishedId,\n        documentType,\n        projectId,\n        schemaType,\n        workspaceName,\n        getThreadLength,\n        getComment,\n        createAddonDataset,\n        handleOnCreate,\n        handleOnCreateError,\n        handleOnEdit,\n        handleOnUpdate,\n      ],\n    ),\n  )\n\n  const ctxValue = useMemo(\n    (): CommentsContextValue => ({\n      isCreatingDataset,\n      status,\n      setStatus: handleSetStatus,\n      getComment,\n\n      isCommentsOpen,\n      onCommentsOpen,\n\n      comments: {\n        data: threadItemsByStatus,\n        error,\n        loading: loading || isCreatingDataset,\n      },\n\n      operation: {\n        create: operation.create,\n        edit: operation.edit,\n        react: operation.react,\n        remove: operation.remove,\n        update: operation.update,\n      },\n      mentionOptions,\n    }),\n    [\n      error,\n      getComment,\n      isCommentsOpen,\n      isCreatingDataset,\n      loading,\n      mentionOptions,\n      onCommentsOpen,\n      operation.create,\n      operation.edit,\n      operation.react,\n      operation.remove,\n      operation.update,\n      status,\n      handleSetStatus,\n      threadItemsByStatus,\n    ],\n  )\n\n  return <CommentsContext.Provider value={ctxValue}>{children}</CommentsContext.Provider>\n})\n","import {createContext} from 'react'\n\nimport {type CommentsIntentContextValue} from './types'\n\nexport const CommentsIntentContext = createContext<CommentsIntentContextValue | undefined>(\n  undefined,\n)\n","import {memo, type ReactNode} from 'react'\n\nimport {type CommentIntentGetter} from '../../types'\nimport {CommentsIntentContext} from './CommentsIntentContext'\n\ninterface CommentsIntentProviderProps {\n  children: ReactNode\n  getIntent: CommentIntentGetter\n}\n\n/**\n * @beta\n * @hidden\n */\nexport const CommentsIntentProvider = memo(function CommentsIntentProvider(\n  props: CommentsIntentProviderProps,\n) {\n  const {children, getIntent} = props\n\n  return (\n    <CommentsIntentContext.Provider value={getIntent}>{children}</CommentsIntentContext.Provider>\n  )\n})\n","import {createContext} from 'react'\n\nimport {type CommentsSelectedPathContextValue} from './types'\n\nexport const CommentsSelectedPathContext = createContext<CommentsSelectedPathContextValue | null>(\n  null,\n)\n","import {useCallback, useMemo, useState} from 'react'\nimport * as React from 'react'\n\nimport {CommentsSelectedPathContext} from './CommentsSelectedPathContext'\nimport {type CommentsSelectedPath, type CommentsSelectedPathContextValue} from './types'\n\ninterface CommentsSelectedPathProviderProps {\n  children: React.ReactNode\n}\n\nexport const CommentsSelectedPathProvider = React.memo(function CommentsSelectedPathProvider(\n  props: CommentsSelectedPathProviderProps,\n) {\n  const {children} = props\n  const [selectedPath, setSelectedPath] = useState<CommentsSelectedPath | null>(null)\n\n  const handleSelectPath = useCallback((nextPath: CommentsSelectedPath | null) => {\n    setSelectedPath(nextPath)\n  }, [])\n\n  const ctxValue = useMemo(\n    (): CommentsSelectedPathContextValue => ({\n      selectedPath,\n      setSelectedPath: handleSelectPath,\n    }),\n    [selectedPath, handleSelectPath],\n  )\n\n  return (\n    <CommentsSelectedPathContext.Provider value={ctxValue}>\n      {children}\n    </CommentsSelectedPathContext.Provider>\n  )\n})\n","import {createContext} from 'react'\n\nimport {type CommentsUpsellContextValue} from './types'\n\n/**\n * @beta\n * @hidden\n */\nexport const CommentsUpsellContext = createContext<CommentsUpsellContextValue | null>(null)\n","import {type ClientConfig} from '@sanity/client'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {template} from 'lodash'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  UpsellDialogDismissed,\n  UpsellDialogLearnMoreCtaClicked,\n  UpsellDialogUpgradeCtaClicked,\n  UpsellDialogViewed,\n  useClient,\n  useProjectId,\n} from 'sanity'\n\nimport {CommentsUpsellDialog} from '../../components'\nimport {type CommentsUpsellData} from '../../types'\nimport {CommentsUpsellContext} from './CommentsUpsellContext'\nimport {type CommentsUpsellContextValue} from './types'\n\nconst UPSELL_CLIENT_OPTIONS: Partial<ClientConfig> = {\n  apiVersion: '2023-12-11',\n  useProjectHostname: false,\n  withCredentials: false,\n  useCdn: true,\n}\n\nconst FEATURE = 'comments'\nconst TEMPLATE_OPTIONS = {interpolate: /{{([\\s\\S]+?)}}/g}\nconst BASE_URL = 'www.sanity.io'\n\n/**\n * @beta\n * @hidden\n */\nexport function CommentsUpsellProvider(props: {children: React.ReactNode}) {\n  const [upsellDialogOpen, setUpsellDialogOpen] = useState(false)\n  const [upsellData, setUpsellData] = useState<CommentsUpsellData | null>(null)\n  const projectId = useProjectId()\n  const telemetry = useTelemetry()\n  const client = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const telemetryLogs = useMemo(\n    (): CommentsUpsellContextValue['telemetryLogs'] => ({\n      dialogSecondaryClicked: () =>\n        telemetry.log(UpsellDialogLearnMoreCtaClicked, {\n          feature: FEATURE,\n          type: 'modal',\n        }),\n      dialogPrimaryClicked: () =>\n        telemetry.log(UpsellDialogUpgradeCtaClicked, {\n          feature: FEATURE,\n          type: 'modal',\n        }),\n      panelViewed: (source) =>\n        telemetry.log(UpsellDialogViewed, {\n          feature: FEATURE,\n          type: 'inspector',\n          source,\n        }),\n      panelDismissed: () =>\n        telemetry.log(UpsellDialogDismissed, {\n          feature: FEATURE,\n          type: 'inspector',\n        }),\n      panelPrimaryClicked: () =>\n        telemetry.log(UpsellDialogUpgradeCtaClicked, {\n          feature: FEATURE,\n          type: 'inspector',\n        }),\n      panelSecondaryClicked: () =>\n        telemetry.log(UpsellDialogLearnMoreCtaClicked, {\n          feature: FEATURE,\n          type: 'inspector',\n        }),\n    }),\n    [telemetry],\n  )\n\n  const handlePrimaryButtonClick = useCallback(() => {\n    telemetryLogs.dialogPrimaryClicked()\n  }, [telemetryLogs])\n\n  const handleSecondaryButtonClick = useCallback(() => {\n    telemetryLogs.dialogSecondaryClicked()\n  }, [telemetryLogs])\n\n  const handleClose = useCallback(() => {\n    setUpsellDialogOpen(false)\n    telemetry.log(UpsellDialogDismissed, {\n      feature: FEATURE,\n      type: 'modal',\n    })\n  }, [telemetry])\n\n  useEffect(() => {\n    const data$ = client\n      .withConfig(UPSELL_CLIENT_OPTIONS)\n      .observable.request<CommentsUpsellData | null>({\n        uri: '/journey/comments',\n      })\n\n    const sub = data$.subscribe({\n      next: (data) => {\n        if (!data) return\n        try {\n          const ctaUrl = template(data.ctaButton.url, TEMPLATE_OPTIONS)\n          data.ctaButton.url = ctaUrl({baseUrl: BASE_URL, projectId})\n\n          const secondaryUrl = template(data.secondaryButton.url, TEMPLATE_OPTIONS)\n          data.secondaryButton.url = secondaryUrl({baseUrl: BASE_URL, projectId})\n          setUpsellData(data)\n        } catch (e) {\n          // silently fail\n        }\n      },\n      error: () => {\n        // silently fail\n      },\n    })\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [client, projectId])\n\n  const handleOpenDialog = useCallback(() => {\n    setUpsellDialogOpen(true)\n    telemetry.log(UpsellDialogViewed, {\n      feature: FEATURE,\n      type: 'modal',\n      source: 'field_action',\n    })\n  }, [telemetry])\n\n  const ctxValue = useMemo<CommentsUpsellContextValue>(\n    () => ({\n      upsellDialogOpen,\n      handleOpenDialog,\n      upsellData,\n      telemetryLogs,\n    }),\n    [handleOpenDialog, upsellDialogOpen, upsellData, telemetryLogs],\n  )\n\n  return (\n    <CommentsUpsellContext.Provider value={ctxValue}>\n      {props.children}\n      {upsellData && upsellDialogOpen && (\n        <CommentsUpsellDialog\n          data={upsellData}\n          onClose={handleClose}\n          onPrimaryClick={handlePrimaryButtonClick}\n          onSecondaryClick={handleSecondaryButtonClick}\n        />\n      )}\n    </CommentsUpsellContext.Provider>\n  )\n}\n","import {useCallback} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\n\nimport {useDocumentPane} from '../../..'\nimport {COMMENTS_INSPECTOR_NAME} from '../../../panes/document/constants'\nimport {\n  CommentsEnabledProvider,\n  CommentsProvider,\n  CommentsSelectedPathProvider,\n  useCommentsEnabled,\n} from '../../src'\n\nexport function CommentsDocumentLayout(props: DocumentLayoutProps) {\n  const {documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsDocumentLayoutInner {...props} />\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsDocumentLayoutInner(props: DocumentLayoutProps) {\n  const {documentId, documentType} = props\n  const commentsEnabled = useCommentsEnabled()\n  const {openInspector, inspector} = useDocumentPane()\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!commentsEnabled.enabled) {\n    return props.renderDefault(props)\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      onCommentsOpen={handleOpenCommentsInspector}\n    >\n      <CommentsSelectedPathProvider>{props.renderDefault(props)}</CommentsSelectedPathProvider>\n    </CommentsProvider>\n  )\n}\n","import {\n  // eslint-disable-next-line no-restricted-imports\n  Button as SanityUIButton,\n  Flex,\n  Stack,\n  Text,\n  useClickOutside,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  type CurrentUser,\n  type PortableTextBlock,\n  Translate,\n  type UserListWithPermissionsHookValue,\n  useTranslation,\n} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Button, Popover, Tooltip} from '../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../i18n'\nimport {\n  AddCommentIcon,\n  CommentIcon,\n  CommentInput,\n  type CommentInputHandle,\n  type CommentMessage,\n  hasCommentMessageValue,\n} from '../../src'\n\nconst ContentStack = styled(Stack)`\n  width: 320px;\n`\n\ninterface CommentsFieldButtonProps {\n  count: number\n  currentUser: CurrentUser\n  fieldTitle: string\n  isCreatingDataset: boolean\n  mentionOptions: UserListWithPermissionsHookValue\n  onChange: (value: PortableTextBlock[]) => void\n  onClick?: () => void\n  onCommentAdd: () => void\n  onDiscard: () => void\n  onInputKeyDown?: (event: React.KeyboardEvent<Element>) => void\n  open: boolean\n  setOpen: (open: boolean) => void\n  value: CommentMessage\n}\n\nexport function CommentsFieldButton(props: CommentsFieldButtonProps) {\n  const {\n    count,\n    currentUser,\n    fieldTitle,\n    isCreatingDataset,\n    mentionOptions,\n    onChange,\n    onClick,\n    onCommentAdd,\n    onDiscard,\n    onInputKeyDown,\n    open,\n    setOpen,\n    value,\n  } = props\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const [popoverElement, setPopoverElement] = useState<HTMLDivElement | null>(null)\n  const [addCommentButtonElement, setAddCommentButtonElement] = useState<HTMLButtonElement | null>(\n    null,\n  )\n  const commentInputHandle = useRef<CommentInputHandle | null>(null)\n  const hasComments = Boolean(count > 0)\n\n  const closePopover = useCallback(() => {\n    if (!open) return\n    setOpen(false)\n    addCommentButtonElement?.focus()\n  }, [addCommentButtonElement, open, setOpen])\n\n  const handleSubmit = useCallback(() => {\n    onCommentAdd()\n    closePopover()\n  }, [closePopover, onCommentAdd])\n\n  const hasValue = useMemo(() => hasCommentMessageValue(value), [value])\n\n  const startDiscard = useCallback(() => {\n    if (!hasValue) {\n      closePopover()\n      return\n    }\n\n    commentInputHandle.current?.discardDialogController.open()\n  }, [closePopover, hasValue])\n\n  const handleInputKeyDown = useCallback(\n    (event: React.KeyboardEvent<Element>) => {\n      // Don't act if the input already prevented this event\n      if (event.isDefaultPrevented()) {\n        return\n      }\n\n      // Call parent handler\n      if (onInputKeyDown) onInputKeyDown(event)\n    },\n    [onInputKeyDown],\n  )\n\n  const handleDiscardCancel = useCallback(() => {\n    commentInputHandle.current?.discardDialogController.close()\n  }, [])\n\n  const handleDiscardConfirm = useCallback(() => {\n    commentInputHandle.current?.discardDialogController.close()\n    closePopover()\n    onDiscard()\n  }, [closePopover, onDiscard])\n\n  const handlePopoverKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'Escape') {\n        event.preventDefault()\n        event.stopPropagation()\n        startDiscard()\n      }\n    },\n    [startDiscard],\n  )\n\n  const handleClickOutside = useCallback(() => {\n    if (!open) return\n\n    startDiscard()\n  }, [open, startDiscard])\n\n  useClickOutside(handleClickOutside, [popoverElement])\n\n  if (!hasComments) {\n    const placeholder = (\n      <Translate\n        t={t}\n        i18nKey=\"compose.add-comment-input-placeholder\"\n        values={{field: fieldTitle}}\n      />\n    )\n\n    const content = (\n      <ContentStack padding={2} space={4}>\n        <CommentInput\n          currentUser={currentUser}\n          focusLock\n          focusOnMount\n          mentionOptions={mentionOptions}\n          onChange={onChange}\n          onDiscardCancel={handleDiscardCancel}\n          onDiscardConfirm={handleDiscardConfirm}\n          onKeyDown={handleInputKeyDown}\n          onSubmit={handleSubmit}\n          placeholder={placeholder}\n          readOnly={isCreatingDataset}\n          ref={commentInputHandle}\n          value={value}\n        />\n      </ContentStack>\n    )\n\n    return (\n      <Popover\n        constrainSize\n        content={content}\n        fallbackPlacements={['bottom-end']}\n        open={open}\n        placement=\"right-start\"\n        portal\n        ref={setPopoverElement}\n        onKeyDown={handlePopoverKeyDown}\n      >\n        <div>\n          <Button\n            aria-label={t('field-button.aria-label-add')}\n            disabled={isCreatingDataset}\n            icon={AddCommentIcon}\n            mode=\"bleed\"\n            onClick={onClick}\n            ref={setAddCommentButtonElement}\n            selected={open}\n            tooltipProps={{\n              content: t('field-button.title'),\n              placement: 'top',\n            }}\n          />\n        </div>\n      </Popover>\n    )\n  }\n\n  return (\n    <Tooltip portal placement=\"top\" content={t('field-button.content', {count})}>\n      <SanityUIButton\n        aria-label={t('field-button.aria-label-open')}\n        mode=\"bleed\"\n        onClick={onClick}\n        padding={2}\n        space={2}\n      >\n        <Flex align=\"center\" gap={2}>\n          <Text size={1}>\n            <CommentIcon />\n          </Text>\n          <Text size={0}>{count > 9 ? '9+' : count}</Text>\n        </Flex>\n      </SanityUIButton>\n    </Tooltip>\n  )\n}\n","import {hues} from '@sanity/color'\nimport {type PortableTextBlock} from '@sanity/types'\nimport {Stack, useBoundaryElement} from '@sanity/ui'\nimport * as PathUtils from '@sanity/util/paths'\nimport {uuid} from '@sanity/uuid'\nimport {AnimatePresence, motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type FieldProps, getSchemaTypeTitle, useCurrentUser} from 'sanity'\nimport scrollIntoViewIfNeeded, {type Options} from 'scroll-into-view-if-needed'\nimport styled, {css} from 'styled-components'\n\nimport {\n  type CommentCreatePayload,\n  type CommentsUIMode,\n  useComments,\n  useCommentsEnabled,\n  useCommentsSelectedPath,\n  useCommentsUpsell,\n} from '../../src'\nimport {CommentsFieldButton} from './CommentsFieldButton'\n\nconst HIGHLIGHT_BLOCK_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nexport function CommentsField(props: FieldProps) {\n  const {enabled, mode} = useCommentsEnabled()\n\n  if (!enabled) {\n    return props.renderDefault(props)\n  }\n\n  return <CommentFieldInner {...props} mode={mode} />\n}\n\nconst SCROLL_INTO_VIEW_OPTIONS: ScrollIntoViewOptions = {\n  behavior: 'smooth',\n  block: 'start',\n}\n\nconst HighlightDiv = styled(motion.div)(({theme}) => {\n  const {radius, space, color} = theme.sanity\n  const bg = hues.yellow[color.dark ? 900 : 50].hex\n\n  return css`\n    mix-blend-mode: ${color.dark ? 'screen' : 'multiply'};\n    border-radius: ${radius[3]}px;\n    top: -${space[2]}px;\n    left: -${space[2]}px;\n    bottom: -${space[2]}px;\n    right: -${space[2]}px;\n    pointer-events: none;\n    position: absolute;\n    z-index: 1;\n    width: calc(100% + ${space[2] * 2}px);\n    height: calc(100% + ${space[2] * 2}px);\n    background-color: ${bg};\n  `\n})\n\nconst FieldStack = styled(Stack)`\n  position: relative;\n`\n\nfunction CommentFieldInner(\n  props: FieldProps & {\n    mode: CommentsUIMode\n  },\n) {\n  const {mode} = props\n  const [open, setOpen] = useState<boolean>(false)\n  const [value, setValue] = useState<PortableTextBlock[] | null>(null)\n  const rootElementRef = useRef<HTMLDivElement | null>(null)\n  const [threadIdToScrollTo, setThreadIdToScrollTo] = useState<string | null>(null)\n\n  const {element: boundaryElement} = useBoundaryElement()\n\n  const currentUser = useCurrentUser()\n\n  const {\n    comments,\n    isCommentsOpen,\n    isCreatingDataset,\n    mentionOptions,\n    onCommentsOpen,\n    operation,\n    setStatus,\n    status,\n  } = useComments()\n  const {upsellData, handleOpenDialog} = useCommentsUpsell()\n  const {selectedPath, setSelectedPath} = useCommentsSelectedPath()\n\n  const fieldTitle = useMemo(() => getSchemaTypeTitle(props.schemaType), [props.schemaType])\n\n  // Determine if the current field is selected\n  const isSelected = useMemo(() => {\n    if (!isCommentsOpen) return false\n    if (selectedPath?.origin === 'form' || selectedPath?.origin === 'url') return false\n    return selectedPath?.fieldPath === PathUtils.toString(props.path)\n  }, [isCommentsOpen, props.path, selectedPath?.fieldPath, selectedPath?.origin])\n\n  // Total number of comments for the current field\n  const count = useMemo(() => {\n    const stringPath = PathUtils.toString(props.path)\n\n    const commentsCount = comments.data.open\n      .map((c) => (c.fieldPath === stringPath ? c.commentsCount : 0))\n      .reduce((acc, val) => acc + val, 0)\n\n    return commentsCount || 0\n  }, [comments.data.open, props.path])\n\n  const hasComments = Boolean(count > 0)\n\n  const handleSetThreadToScrollTo = useCallback(\n    (threadId: string | null) => {\n      setSelectedPath({\n        threadId,\n        origin: 'form',\n        fieldPath: PathUtils.toString(props.path),\n      })\n\n      setThreadIdToScrollTo(threadId)\n    },\n    [props.path, setSelectedPath],\n  )\n\n  const handleClick = useCallback(() => {\n    // When clicking a comment button when the field has comments, we want to:\n    if (hasComments) {\n      // 1. Change the status to 'open' if it's 'resolved'\n      if (status === 'resolved') {\n        setStatus('open')\n      }\n\n      // 2. Close the comment input if it's open\n      setOpen(false)\n\n      // 3. Open the comments inspector\n      onCommentsOpen?.()\n\n      // 4. Find the latest comment thread ID for the current field\n      const scrollToThreadId = comments.data.open.find(\n        (c) => c.fieldPath === PathUtils.toString(props.path),\n      )?.threadId\n\n      // 5. Set the thread ID to scroll to in a state and then scroll to it\n      // in the `useEffect` below.\n      if (scrollToThreadId) {\n        handleSetThreadToScrollTo(scrollToThreadId)\n      }\n\n      return\n    }\n\n    if (mode === 'upsell') {\n      if (upsellData) {\n        handleOpenDialog()\n      } else {\n        // Open the comments inspector\n        onCommentsOpen?.()\n      }\n      return\n    }\n\n    // Else, toggle the comment input open/closed\n    setOpen((v) => !v)\n  }, [\n    hasComments,\n    status,\n    onCommentsOpen,\n    comments.data.open,\n    setStatus,\n    props.path,\n    handleSetThreadToScrollTo,\n    mode,\n    handleOpenDialog,\n    upsellData,\n  ])\n\n  const handleCommentAdd = useCallback(() => {\n    if (value) {\n      // Since this is a new comment, we generate a new thread ID\n      const newThreadId = uuid()\n\n      // Construct the comment payload\n      const nextComment: CommentCreatePayload = {\n        fieldPath: PathUtils.toString(props.path),\n        message: value,\n        parentCommentId: undefined,\n        status: 'open',\n        threadId: newThreadId,\n        // New comments have no reactions\n        reactions: [],\n      }\n\n      // Execute the create mutation\n      operation.create(nextComment)\n\n      // If a comment is added to a field when viewing resolved comments, we switch\n      // to open comments and scroll to the comment that was just added\n      // Open the inspector when a new comment is added\n      onCommentsOpen?.()\n\n      if (status === 'resolved') {\n        // Set the status to 'open' so that the comment is visible\n        setStatus('open')\n      }\n\n      // Reset the value\n      setValue(null)\n\n      // Set the thread ID to scroll to\n      handleSetThreadToScrollTo(newThreadId)\n    }\n  }, [handleSetThreadToScrollTo, onCommentsOpen, operation, props.path, setStatus, status, value])\n\n  const handleDiscard = useCallback(() => setValue(null), [])\n\n  const scrollIntoViewIfNeededOpts = useMemo(\n    () =>\n      ({\n        ...SCROLL_INTO_VIEW_OPTIONS,\n        boundary: boundaryElement,\n        scrollMode: 'if-needed',\n        block: 'start',\n      }) satisfies Options,\n    [boundaryElement],\n  )\n\n  // Effect that handles scroll the field into view when it's selected\n  useEffect(() => {\n    if (isSelected && rootElementRef.current && isCommentsOpen) {\n      scrollIntoViewIfNeeded(rootElementRef.current, scrollIntoViewIfNeededOpts)\n    }\n  }, [boundaryElement, isCommentsOpen, isSelected, props.path, scrollIntoViewIfNeededOpts])\n\n  // // Effect that handles scroll the comment thread into view when it's selected\n  useEffect(() => {\n    if (isCommentsOpen && threadIdToScrollTo) {\n      const node = document.querySelector(`[data-group-id=\"${threadIdToScrollTo}\"]`)\n\n      if (node) {\n        node.scrollIntoView(SCROLL_INTO_VIEW_OPTIONS)\n        setThreadIdToScrollTo(null)\n      }\n    }\n  }, [isCommentsOpen, threadIdToScrollTo])\n\n  const internalComments: FieldProps['__internal_comments'] = useMemo(\n    () => ({\n      button: currentUser && (\n        <CommentsFieldButton\n          count={Number(count)}\n          currentUser={currentUser}\n          fieldTitle={fieldTitle}\n          isCreatingDataset={isCreatingDataset}\n          mentionOptions={mentionOptions}\n          onChange={setValue}\n          onClick={handleClick}\n          onCommentAdd={handleCommentAdd}\n          onDiscard={handleDiscard}\n          open={open}\n          setOpen={setOpen}\n          value={value}\n        />\n      ),\n      hasComments,\n      isAddingComment: open,\n    }),\n    [\n      currentUser,\n      count,\n      fieldTitle,\n      mentionOptions,\n      handleClick,\n      handleCommentAdd,\n      handleDiscard,\n      open,\n      value,\n      isCreatingDataset,\n      hasComments,\n    ],\n  )\n\n  return (\n    <FieldStack ref={rootElementRef}>\n      {props.renderDefault({\n        ...props,\n        // eslint-disable-next-line camelcase\n        __internal_comments: internalComments,\n      })}\n\n      <AnimatePresence>\n        {isSelected && (\n          <HighlightDiv\n            animate=\"animate\"\n            exit=\"exit\"\n            initial=\"initial\"\n            variants={HIGHLIGHT_BLOCK_VARIANTS}\n          />\n        )}\n      </AnimatePresence>\n    </FieldStack>\n  )\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SanityDocumentLike,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {createContext} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentBadgeComponent,\n  type DocumentFieldAction,\n  type DocumentFormNode,\n  type DocumentInspector,\n  type DocumentLanguageFilterComponent,\n  type EditStateFor,\n  type PatchEvent,\n  type PermissionCheckResult,\n  type StateTree,\n  type TimelineStore,\n} from 'sanity'\n\nimport {type View} from '../../structureBuilder'\nimport {type PaneMenuItem, type PaneMenuItemGroup} from '../../types'\nimport {type TimelineMode} from './types'\n\n/** @internal */\nexport interface DocumentPaneContextValue {\n  actions: DocumentActionComponent[] | null\n  activeViewId: string | null\n  badges: DocumentBadgeComponent[] | null\n  changesOpen: boolean\n  closeInspector: (inspectorName?: string) => void\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  compareValue: Partial<SanityDocument> | null\n  connectionState: 'connecting' | 'reconnecting' | 'connected'\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  documentIdRaw: string\n  documentType: string\n  editState: EditStateFor | null\n  fieldActions: DocumentFieldAction[]\n  focusPath: Path\n  index: number\n  inspectOpen: boolean\n  inspector: DocumentInspector | null\n  inspectors: DocumentInspector[]\n  menuItemGroups: PaneMenuItemGroup[]\n  onBlur: (blurredPath: Path) => void\n  onChange: (event: PatchEvent) => void\n  onFocus: (pathOrEvent: Path) => void\n  onHistoryClose: () => void\n  onHistoryOpen: () => void\n  onInspectClose: () => void\n  onMenuAction: (item: PaneMenuItem) => void\n  onPaneClose: () => void\n  onPaneSplit?: () => void\n  onPathOpen: (path: Path) => void\n  onSetActiveFieldGroup: (path: Path, groupName: string) => void\n  onSetCollapsedPath: (path: Path, expanded: boolean) => void\n  onSetCollapsedFieldSet: (path: Path, expanded: boolean) => void\n  openInspector: (inspectorName: string, paneParams?: Record<string, string>) => void\n  paneKey: string\n  previewUrl?: string | null\n  ready: boolean\n  schemaType: ObjectSchemaType\n  setTimelineMode: (mode: TimelineMode) => void\n  setTimelineRange(since: string | null, rev: string | null): void\n  setIsDeleting: (state: boolean) => void\n  timelineError: Error | null\n  timelineMode: TimelineMode\n  timelineStore: TimelineStore\n  title: string | null\n  validation: ValidationMarker[]\n  value: SanityDocumentLike\n  views: View[]\n  formState: DocumentFormNode | null\n  permissions?: PermissionCheckResult | null\n  isDeleting: boolean\n  isDeleted: boolean\n  isPermissionsLoading: boolean\n  unstable_languageFilter: DocumentLanguageFilterComponent[]\n}\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n","import {useContext} from 'react'\n\nimport {DocumentPaneContext, type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {LaunchIcon} from '@sanity/icons'\nimport {Card, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport styled from 'styled-components'\n\nimport {commentsLocaleNamespace} from '../../i18n'\n\nconst FEEDBACK_FORM_LINK = 'https://snty.link/comments-beta-feedback'\n\nconst Span = styled.span`\n  margin-right: 0.2em;\n`\n\nconst Link = styled.a`\n  white-space: nowrap;\n`\n\nconst FooterCard = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n})\n\nexport function CommentsInspectorFeedbackFooter() {\n  const {t} = useTranslation(commentsLocaleNamespace)\n  return (\n    <FooterCard padding={4}>\n      <Text muted size={1}>\n        {t('feature-feedback.title')}{' '}\n        <Link href={FEEDBACK_FORM_LINK} target=\"_blank\" rel=\"noreferrer\">\n          <Span>{t('feature-feedback.link')} </Span> <LaunchIcon />\n        </Link>\n      </Text>\n    </FooterCard>\n  )\n}\n","import {CheckmarkIcon, ChevronDownIcon, DoubleChevronRightIcon} from '@sanity/icons'\nimport {Card, Flex, Menu, Text} from '@sanity/ui'\nimport {forwardRef, useCallback} from 'react'\nimport {BetaBadge, useTranslation} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Button, MenuButton, MenuItem} from '../../../../ui-components'\nimport {commentsLocaleNamespace} from '../../i18n'\nimport {type CommentStatus, type CommentsUIMode} from '../../src'\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n})\n\ninterface CommentsInspectorHeaderProps {\n  onClose: () => void\n  onViewChange: (view: CommentStatus) => void\n  view: CommentStatus\n  mode: CommentsUIMode\n}\n\nexport const CommentsInspectorHeader = forwardRef(function CommentsInspectorHeader(\n  props: CommentsInspectorHeaderProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const {onClose, onViewChange, view, mode} = props\n\n  const handleSetOpenView = useCallback(() => onViewChange('open'), [onViewChange])\n  const handleSetResolvedView = useCallback(() => onViewChange('resolved'), [onViewChange])\n\n  return (\n    <Root ref={ref}>\n      <Flex padding={2}>\n        <Flex align=\"center\" flex={1} gap={2} paddingY={2} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {t('feature-name')}\n          </Text>\n\n          <BetaBadge />\n        </Flex>\n\n        <Flex flex=\"none\" padding={1} gap={2}>\n          <MenuButton\n            id=\"comment-status-menu-button\"\n            button={\n              <Button\n                text={\n                  view === 'open'\n                    ? t('status-filter.status-open')\n                    : t('status-filter.status-resolved')\n                }\n                mode=\"bleed\"\n                iconRight={ChevronDownIcon}\n              />\n            }\n            menu={\n              <Menu style={{width: '180px'}}>\n                <MenuItem\n                  iconRight={view === 'open' ? CheckmarkIcon : undefined}\n                  onClick={handleSetOpenView}\n                  text={t('status-filter.status-open-full')}\n                />\n                <MenuItem\n                  iconRight={view === 'resolved' ? CheckmarkIcon : undefined}\n                  onClick={handleSetResolvedView}\n                  text={t('status-filter.status-resolved-full')}\n                  tooltipProps={\n                    mode === 'upsell'\n                      ? {content: t('status-filter.status-resolved-full-upsell')}\n                      : undefined\n                  }\n                  disabled={mode === 'upsell'}\n                />\n              </Menu>\n            }\n            popover={{placement: 'bottom-end'}}\n          />\n\n          <Button\n            aria-label={t('close-pane-button-text-aria-label')}\n            icon={DoubleChevronRightIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('close-pane-button-text')}}\n          />\n        </Flex>\n      </Flex>\n    </Root>\n  )\n})\n","import {Flex, Layer, useClickOutside, useLayer, useToast} from '@sanity/ui'\nimport * as PathUtils from '@sanity/util/paths'\nimport {Fragment, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspectorProps, useCurrentUser, useTranslation, useUnique} from 'sanity'\nimport styled from 'styled-components'\n\nimport {usePaneRouter} from '../../../components'\nimport {EMPTY_PARAMS} from '../../../constants'\nimport {useDocumentPane} from '../../../panes/document/useDocumentPane'\nimport {commentsLocaleNamespace} from '../../i18n'\nimport {\n  type CommentCreatePayload,\n  CommentDeleteDialog,\n  type CommentEditPayload,\n  type CommentReactionOption,\n  CommentsList,\n  type CommentsListHandle,\n  CommentsOnboardingPopover,\n  type CommentsSelectedPath,\n  type CommentStatus,\n  type CommentsUIMode,\n  CommentsUpsellPanel,\n  useComments,\n  useCommentsEnabled,\n  useCommentsOnboarding,\n  useCommentsSelectedPath,\n  useCommentsUpsell,\n} from '../../src'\nimport {CommentsInspectorFeedbackFooter} from './CommentsInspectorFeedbackFooter'\nimport {CommentsInspectorHeader} from './CommentsInspectorHeader'\n\ninterface CommentToDelete {\n  commentId: string\n  isParent: boolean\n}\n\nconst RootLayer = styled(Layer)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`\n\nexport function CommentsInspector(props: DocumentInspectorProps) {\n  const {enabled, mode} = useCommentsEnabled()\n\n  if (!enabled) return null\n\n  // We wrap the comments inspector in a Layer in order to know when the comments inspector\n  // is the top layer (that is, if there is e.g. a popover open). This is used to determine\n  // if we should deselect the selected path when clicking outside the comments inspector.\n  return (\n    <RootLayer>\n      <CommentsInspectorInner {...props} mode={mode} />\n    </RootLayer>\n  )\n}\n\nfunction CommentsInspectorInner(\n  props: DocumentInspectorProps & {\n    mode: CommentsUIMode\n  },\n) {\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const {onClose, mode} = props\n  const [showDeleteDialog, setShowDeleteDialog] = useState<boolean>(false)\n  const [commentToDelete, setCommentToDelete] = useState<CommentToDelete | null>(null)\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false)\n  const [deleteError, setDeleteError] = useState<Error | null>(null)\n  const commentsListHandleRef = useRef<CommentsListHandle>(null)\n\n  const rootRef = useRef<HTMLDivElement | null>(null)\n\n  const currentUser = useCurrentUser()\n  const {params, createPathWithParams, setParams} = usePaneRouter()\n  const uniqueParams = useUnique(params) || (EMPTY_PARAMS as Partial<{comment?: string}>)\n  const commentIdParamRef = useRef<string | undefined>(uniqueParams?.comment)\n\n  const didScrollToCommentFromParam = useRef<boolean>(false)\n\n  const pushToast = useToast().push\n  const {onPathOpen, ready} = useDocumentPane()\n\n  const {isDismissed, setDismissed} = useCommentsOnboarding()\n\n  const {comments, getComment, isCreatingDataset, mentionOptions, setStatus, status, operation} =\n    useComments()\n\n  const {isTopLayer} = useLayer()\n\n  const currentComments = useMemo(() => comments.data[status], [comments, status])\n\n  const loading = useMemo(() => {\n    // The comments and the document are loaded separately which means that\n    // the comments might be ready before the document is ready. Since the user should\n    // be able to interact with the document from the comments inspector, we need to make sure\n    // that the document is ready before we allow the user to interact with the comments.\n    return comments.loading || !ready\n  }, [comments.loading, ready])\n\n  const {selectedPath, setSelectedPath} = useCommentsSelectedPath()\n  const {upsellData, telemetryLogs} = useCommentsUpsell()\n\n  useEffect(() => {\n    if (mode === 'upsell') {\n      if (selectedPath?.origin === 'form') {\n        telemetryLogs.panelViewed('field_action')\n      } else if (commentIdParamRef.current) {\n        telemetryLogs.panelViewed('link')\n      } else {\n        telemetryLogs.panelViewed('document_action')\n      }\n    }\n    return () => {\n      if (mode === 'upsell') {\n        telemetryLogs.panelDismissed()\n      }\n    }\n    // We want to run this effect only on mount and unmount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleChangeView = useCallback(\n    (nextView: CommentStatus) => {\n      setStatus(nextView)\n      setSelectedPath(null)\n    },\n    [setSelectedPath, setStatus],\n  )\n\n  const handleCloseInspector = useCallback(() => {\n    onClose()\n    setSelectedPath(null)\n  }, [onClose, setSelectedPath])\n\n  const handleCopyLink = useCallback(\n    (id: string) => {\n      const path = createPathWithParams({\n        ...params,\n        comment: id,\n      })\n\n      const url = `${window.location.origin}${path}`\n\n      navigator.clipboard\n        .writeText(url)\n        .then(() => {\n          pushToast({\n            closable: true,\n            status: 'info',\n            title: t('copy-link-success-message'),\n          })\n        })\n        .catch(() => {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: t('copy-link-error-message'),\n          })\n        })\n    },\n    [createPathWithParams, params, pushToast, t],\n  )\n\n  const handleCreateRetry = useCallback(\n    (id: string) => {\n      const comment = getComment(id)\n      if (!comment) return\n\n      operation.create({\n        fieldPath: comment.target.path.field,\n        id: comment._id,\n        message: comment.message,\n        parentCommentId: comment.parentCommentId,\n        reactions: comment.reactions || [],\n        status: comment.status,\n        threadId: comment.threadId,\n      })\n    },\n    [getComment, operation],\n  )\n\n  const closeDeleteDialog = useCallback(() => {\n    if (deleteLoading) return\n    setShowDeleteDialog(false)\n    setCommentToDelete(null)\n  }, [deleteLoading])\n\n  const handlePathSelect = useCallback(\n    (nextPath: CommentsSelectedPath) => {\n      setSelectedPath(nextPath)\n\n      if (nextPath?.fieldPath) {\n        const path = PathUtils.fromString(nextPath.fieldPath)\n        onPathOpen(path)\n      }\n    },\n    [onPathOpen, setSelectedPath],\n  )\n\n  const handleNewThreadCreate = useCallback(\n    (payload: CommentCreatePayload) => {\n      operation.create(payload)\n\n      setSelectedPath({\n        fieldPath: payload.fieldPath,\n        origin: 'inspector',\n        threadId: payload.threadId,\n      })\n    },\n    [operation, setSelectedPath],\n  )\n\n  const handleReply = useCallback(\n    (payload: CommentCreatePayload) => {\n      operation.create(payload)\n    },\n    [operation],\n  )\n\n  const handleEdit = useCallback(\n    (id: string, payload: CommentEditPayload) => {\n      operation.edit(id, payload)\n    },\n    [operation],\n  )\n\n  const onDeleteStart = useCallback(\n    (id: string) => {\n      const parent = currentComments.find((c) => c.parentComment?._id === id)\n      const isParent = Boolean(parent && parent?.replies?.length > 0)\n\n      setShowDeleteDialog(true)\n      setCommentToDelete({\n        commentId: id,\n        isParent,\n      })\n    },\n\n    [currentComments],\n  )\n\n  const handleDeleteConfirm = useCallback(\n    async (id: string) => {\n      try {\n        setDeleteLoading(true)\n        await operation.remove(id)\n        closeDeleteDialog()\n      } catch (err) {\n        setDeleteError(err)\n      } finally {\n        setDeleteLoading(false)\n      }\n    },\n    [closeDeleteDialog, operation],\n  )\n\n  const handleScrollToComment = useCallback(\n    (id: string, origin?: CommentsSelectedPath['origin']) => {\n      const comment = getComment(id)\n\n      if (comment) {\n        setSelectedPath({\n          fieldPath: comment.target.path.field || null,\n          origin: origin || 'inspector',\n          threadId: comment.threadId || null,\n        })\n\n        setTimeout(() => {\n          commentsListHandleRef.current?.scrollToComment(id)\n        })\n      }\n    },\n    [getComment, setSelectedPath],\n  )\n\n  const handleStatusChange = useCallback(\n    (id: string, nextStatus: CommentStatus) => {\n      operation.update(id, {\n        status: nextStatus,\n      })\n\n      // If the comment is being opened, we want to change to the \"open\" view\n      // and scroll to the comment\n      if (nextStatus === 'open') {\n        setStatus('open')\n        handleScrollToComment(id)\n      }\n    },\n    [handleScrollToComment, operation, setStatus],\n  )\n\n  const handleReactionSelect = useCallback(\n    (id: string, reaction: CommentReactionOption) => {\n      operation.react(id, reaction)\n    },\n    [operation],\n  )\n\n  const handleDeselectPath = useCallback(() => {\n    // Clear the selected path when clicking outside the comments inspector.\n    // We do this only when the comments inspector is the top layer.\n    if (selectedPath && isTopLayer) {\n      setSelectedPath(null)\n    }\n  }, [isTopLayer, selectedPath, setSelectedPath])\n\n  useClickOutside(handleDeselectPath, [rootRef.current])\n\n  useEffect(() => {\n    // Make sure that the comment exists before we try to scroll to it.\n    // We can't solely rely on the comment id from the url since the comment might not be loaded yet.\n    const commentToScrollTo = getComment(commentIdParamRef.current || '')\n\n    if (!loading && commentToScrollTo && didScrollToCommentFromParam.current === false) {\n      // Make sure we have the correct status set before we scroll to the comment\n      setStatus(commentToScrollTo.status || 'open')\n\n      // The second argument sets the select path origin to 'url' which will prevent the field in the form\n      // the comment  refers to from being selected and scrolled to. This is because, on mount, we will in\n      // some cases attempt to perform two scrolls: one to the field and one to the comment.\n      // These scroll events seems to interfere with each other and the result is that the comment is not\n      // scrolled to. Therefore, when there's a comment id in the url, we prioritize scrolling to the comment\n      // and not the field.\n      handleScrollToComment(commentToScrollTo._id, 'url')\n\n      didScrollToCommentFromParam.current = true\n      commentIdParamRef.current = undefined\n\n      setParams({\n        ...params,\n        comment: undefined,\n      })\n    }\n  }, [getComment, handleScrollToComment, loading, params, setParams, setStatus])\n\n  const beforeListNode = useMemo(() => {\n    if (mode === 'upsell' && upsellData) {\n      return (\n        <CommentsUpsellPanel\n          data={upsellData}\n          // eslint-disable-next-line react/jsx-handler-names\n          onPrimaryClick={telemetryLogs.panelPrimaryClicked}\n          // eslint-disable-next-line react/jsx-handler-names\n          onSecondaryClick={telemetryLogs.panelSecondaryClicked}\n        />\n      )\n    }\n\n    return null\n  }, [mode, telemetryLogs.panelPrimaryClicked, telemetryLogs.panelSecondaryClicked, upsellData])\n\n  return (\n    <Fragment>\n      {commentToDelete && showDeleteDialog && (\n        <CommentDeleteDialog\n          {...commentToDelete}\n          error={deleteError}\n          loading={deleteLoading}\n          onClose={closeDeleteDialog}\n          onConfirm={handleDeleteConfirm}\n        />\n      )}\n\n      <Flex\n        direction=\"column\"\n        flex={1}\n        height=\"fill\"\n        onClick={handleDeselectPath}\n        overflow=\"hidden\"\n        ref={rootRef}\n      >\n        <CommentsOnboardingPopover\n          onDismiss={setDismissed}\n          open={!isDismissed}\n          placement=\"left-start\"\n        >\n          <CommentsInspectorHeader\n            onClose={handleCloseInspector}\n            onViewChange={handleChangeView}\n            view={status}\n            mode={mode}\n          />\n        </CommentsOnboardingPopover>\n\n        {currentUser && (\n          <CommentsList\n            beforeListNode={beforeListNode}\n            comments={currentComments}\n            currentUser={currentUser}\n            error={comments.error}\n            loading={loading}\n            mentionOptions={mentionOptions}\n            mode={mode}\n            onCopyLink={handleCopyLink}\n            onCreateRetry={handleCreateRetry}\n            onDelete={onDeleteStart}\n            onEdit={handleEdit}\n            onNewThreadCreate={handleNewThreadCreate}\n            onPathSelect={handlePathSelect}\n            onReactionSelect={handleReactionSelect}\n            onReply={handleReply}\n            onStatusChange={handleStatusChange}\n            readOnly={isCreatingDataset}\n            ref={commentsListHandleRef}\n            selectedPath={selectedPath}\n            status={status}\n          />\n        )}\n        {mode === 'default' && <CommentsInspectorFeedbackFooter />}\n      </Flex>\n    </Fragment>\n  )\n}\n","import {CommentIcon} from '@sanity/icons'\nimport {defineDocumentInspector, type DocumentInspectorMenuItem, useTranslation} from 'sanity'\n\nimport {COMMENTS_INSPECTOR_NAME} from '../../../panes/document/constants'\nimport {commentsLocaleNamespace} from '../../i18n'\nimport {useCommentsEnabled} from '../../src'\nimport {CommentsInspector} from './CommentsInspector'\n\nfunction useMenuItem(): DocumentInspectorMenuItem {\n  const {t} = useTranslation(commentsLocaleNamespace)\n  const {enabled} = useCommentsEnabled()\n\n  return {\n    hidden: !enabled,\n    icon: CommentIcon,\n    showAsAction: true,\n    title: t('feature-name'),\n  }\n}\n\nexport const commentsInspector = defineDocumentInspector({\n  name: COMMENTS_INSPECTOR_NAME,\n  component: CommentsInspector,\n  useMenuItem,\n})\n","import {AddonDatasetProvider, type LayoutProps, useFeatureEnabled} from 'sanity'\n\nimport {ConditionalWrapper} from '../../../../ui-components/conditionalWrapper'\nimport {CommentsOnboardingProvider, CommentsUpsellProvider} from '../../src'\n\nexport function CommentsStudioLayout(props: LayoutProps) {\n  const {enabled, isLoading} = useFeatureEnabled('studioComments')\n\n  return (\n    <AddonDatasetProvider>\n      <CommentsOnboardingProvider>\n        <ConditionalWrapper\n          condition={!enabled && !isLoading}\n          // eslint-disable-next-line react/jsx-no-bind\n          wrapper={(children) => <CommentsUpsellProvider>{children}</CommentsUpsellProvider>}\n        >\n          {props.renderDefault(props)}\n        </ConditionalWrapper>\n      </CommentsOnboardingProvider>\n    </AddonDatasetProvider>\n  )\n}\n","import {definePlugin} from 'sanity'\n\nimport {commentsUsEnglishLocaleBundle} from '../i18n'\nimport {CommentsDocumentLayout} from './document-layout'\nimport {CommentsField} from './field'\nimport {commentsInspector} from './inspector'\nimport {CommentsStudioLayout} from './studio-layout'\n\nexport const comments = definePlugin({\n  name: 'sanity/structure/comments',\n\n  document: {\n    inspectors: [commentsInspector],\n    components: {\n      unstable_layout: CommentsDocumentLayout,\n    },\n  },\n\n  form: {\n    components: {\n      field: CommentsField,\n    },\n  },\n\n  studio: {\n    components: {\n      layout: CommentsStudioLayout,\n    },\n  },\n\n  i18n: {bundles: [commentsUsEnglishLocaleBundle]},\n})\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return DEFAULT_MESSAGE_KEY\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe === 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'LoadingPane'\n","import {createContext} from 'react'\n\nimport {type StructureToolContextValue} from './types'\n\nexport const StructureToolContext = createContext<StructureToolContextValue | null>(null)\n","import {useContext} from 'react'\n\nimport {StructureToolContext} from './StructureToolContext'\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {memo, useCallback, useEffect, useRef, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface InspectorMenuItemProps {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}\n\nconst InspectorMenuItem = memo(function InspectorMenuItem(props: InspectorMenuItemProps) {\n  const {documentId, documentType, index, setMenuItem, useMenuItem} = props\n\n  const node = useUnique(\n    useMenuItem({\n      documentId,\n      documentType,\n    }),\n  )\n\n  useEffect(() => {\n    setMenuItem(index, node)\n  }, [index, node, setMenuItem])\n\n  return <></>\n})\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const lenRef = useRef(len)\n\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  const menuItemsRef = useRef(menuItems)\n\n  useEffect(() => {\n    if (lenRef.current !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItemsRef.current[i]\n      }\n\n      lenRef.current = len\n\n      setMenuItems(() => {\n        menuItemsRef.current = newFieldActions\n        return newFieldActions\n      })\n    }\n  }, [len])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      menuItemsRef.current = next\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  return (\n    <>\n      {inspectors.map(\n        (inspector, inspectorIndex) =>\n          inspector.useMenuItem && (\n            <InspectorMenuItem\n              documentId={documentId}\n              documentType={documentType}\n              index={inspectorIndex}\n              key={inspector.name}\n              setMenuItem={setMenuItem}\n              useMenuItem={inspector.useMenuItem}\n            />\n          ),\n      )}\n    </>\n  )\n}\n","import {unstable_useValuePreview as useValuePreview} from 'sanity'\n\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\ninterface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState === 'connected'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState !== 'connected') {\n    return {error: undefined, title: undefined}\n  }\n\n  if (title) {\n    return {error: undefined, title}\n  }\n\n  if (!documentValue) {\n    return {error: undefined, title: `New ${schemaType?.title || schemaType?.name}`}\n  }\n\n  if (error) {\n    return {error: `Error: ${error.message}`, title: undefined}\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useRef} from 'react'\nimport {Translate, useDocumentOperationEvent, useTranslation} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType} = useDocumentPane()\n  const {title} = useDocumentTitle()\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle])\n\n  return null\n})\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import type * as React from 'react'\nimport {useCallback, useRef} from 'react'\nimport styled from 'styled-components'\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: -4px;\n  bottom: 0;\n  width: 9px;\n  z-index: 201;\n  cursor: ew-resize;\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  /* Hover effect */\n  & > span:nth-child(2) {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 9px;\n    bottom: 0;\n    background-color: var(--card-border-color);\n    opacity: 0;\n    transition: opacity 150ms;\n  }\n\n  @media (hover: hover) {\n    &:hover > span:nth-child(2) {\n      opacity: 0.2;\n    }\n  }\n`\n\nexport function Resizer(props: {onResize: (delta: number) => void; onResizeStart: () => void}) {\n  const {onResize, onResizeStart} = props\n\n  const mouseXRef = useRef(0)\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault()\n\n      mouseXRef.current = event.pageX\n\n      onResizeStart()\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n        onResize(e.pageX - mouseXRef.current)\n      }\n\n      const handleMouseUp = () => {\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [onResize, onResizeStart],\n  )\n\n  return (\n    <Root onMouseDown={handleMouseDown}>\n      {/* Hover effect */}\n      <span />\n\n      {/* Border */}\n      <span />\n    </Root>\n  )\n}\n","import {Box, type BoxProps} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo, useRef, useState} from 'react'\nimport styled from 'styled-components'\n\nimport {Resizer} from './Resizer'\n\nexport interface ResizableProps {\n  minWidth: number\n  maxWidth: number\n}\n\nconst Root = styled(Box)`\n  position: relative;\n  flex: 1;\n  padding-left: 1px;\n`\n\nexport function Resizable(\n  props: ResizableProps & BoxProps & Omit<HTMLProps<HTMLDivElement>, 'as'>,\n) {\n  const {as: forwardedAs, children, minWidth, maxWidth, ...restProps} = props\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const elementWidthRef = useRef<number>()\n  const [targetWidth, setTargetWidth] = useState<number>()\n\n  const handleResizeStart = useCallback(() => {\n    elementWidthRef.current = element?.offsetWidth\n  }, [element])\n\n  const handleResize = useCallback(\n    (deltaX: number) => {\n      const w = elementWidthRef.current\n\n      if (!w) return\n\n      setTargetWidth(Math.min(Math.max(w - deltaX, minWidth), maxWidth))\n    },\n    [minWidth, maxWidth],\n  )\n\n  const style = useMemo(\n    () => (targetWidth ? {flex: 'none', width: targetWidth} : {minWidth, maxWidth}),\n    [minWidth, maxWidth, targetWidth],\n  )\n\n  return (\n    <Root as={forwardedAs} {...restProps} ref={setElement} style={style}>\n      {children}\n      <Resizer onResize={handleResize} onResizeStart={handleResizeStart} />\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {createElement, type ReactElement, useCallback} from 'react'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Resizable} from './Resizable'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(props: DocumentInspectorPanelProps): ReactElement | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const element = createElement(inspector.component, {\n    onClose: handleClose,\n    documentId,\n    documentType,\n  })\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {startWith} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string | null,\n  key: string,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n  const [value, setValue] = useState<ValueType | undefined>(defaultValue)\n\n  const keyValueStoreKey = namespace\n    ? `structure-tool::${namespace}::${key}`\n    : `structure-tool::${key}`\n\n  const settings = useMemo(() => {\n    return keyValueStore.getKey(keyValueStoreKey)\n  }, [keyValueStore, keyValueStoreKey])\n\n  useEffect(() => {\n    const sub = settings.pipe(startWith(defaultValue)).subscribe({\n      next: setValue as any,\n    })\n\n    return () => sub?.unsubscribe()\n  }, [defaultValue, keyValueStoreKey, settings])\n\n  const set = useCallback(\n    (newValue: ValueType) => {\n      setValue(newValue)\n      keyValueStore.setKey(keyValueStoreKey, newValue as string)\n    },\n    [keyValueStore, keyValueStoreKey],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport HLRU from 'hashlru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = HLRU(1000)\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport type * as React from 'react'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import JSONInspector from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'structure-tool',\n    `inspect-view-preferred-view-mode-${paneKey}`,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JSONInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport type * as React from 'react'\n\nimport {Button} from '../../../../../ui-components'\nimport {SpacerButton} from '../../../../components/spacerButton'\n\ninterface BannerProps {\n  action?: {\n    as?: React.ElementType | keyof JSX.IntrinsicElements\n    icon?: React.ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n  }\n  content: React.ReactNode\n  icon?: React.ComponentType\n  tone?: CardTone\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', ...rest} = props\n\n  return (\n    <Card borderBottom paddingX={4} paddingY={2} tone={tone} {...rest}>\n      <Flex align=\"center\" gap={3}>\n        {Icon && (\n          <Text size={0}>\n            <Icon />\n          </Text>\n        )}\n\n        <Flex align=\"center\" flex={1} gap={2} paddingY={3}>\n          {content}\n        </Flex>\n\n        <SpacerButton />\n\n        {action && (\n          <Button\n            as={action?.as}\n            mode=\"ghost\"\n            onClick={action?.onClick}\n            text={action.text}\n            tone={action.tone || 'default'}\n          />\n        )}\n      </Flex>\n    </Card>\n  )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useDocumentOperation, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\ninterface DeletedDocumentBannerProps {\n  revisionId?: string | null\n}\n\nexport function DeletedDocumentBanner({revisionId}: DeletedDocumentBannerProps) {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n  const handleRestore = useCallback(() => {\n    if (revisionId) {\n      restore.execute(revisionId)\n      navigateIntent('edit', {id: documentId, type: documentType})\n    }\n  }, [documentId, documentType, navigateIntent, restore, revisionId])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={\n        revisionId\n          ? {\n              onClick: handleRestore,\n              text: t('banners.deleted-document-banner.restore-button.text'),\n            }\n          : undefined\n      }\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface PermissionCheckBannerProps {\n  granted: boolean\n  requiredPermission: 'update' | 'create'\n}\n\nexport function PermissionCheckBanner({granted, requiredPermission}: PermissionCheckBannerProps) {\n  const currentUser = useCurrentUser()\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (granted) return null\n\n  const roleTitles = (currentUser?.roles || []).map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.permission-check-banner.missing-permission\"\n            components={{Roles: () => <>{roles}</>}}\n            values={{count: roles.length, roles: roleTitles}}\n            context={requiredPermission}\n          />\n        </Text>\n      }\n      data-testid=\"permission-check-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useMemoObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {draft: DocumentAvailability; published: DocumentAvailability}\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfo = useMemoObservable(\n    (): Observable<ParentReferenceInfo> => {\n      const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n      // short-circuit: this document pane is not a child reference pane\n      if (!parentId || !parentRefPathSegment || !parentRefPath) {\n        return of({loading: false})\n      }\n\n      const publishedId = getPublishedId(parentId)\n      const path = pathFromString(parentRefPathSegment)\n\n      // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n      const keyedSegmentIndex = path.findIndex(\n        (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n      )\n\n      return concat(\n        // emit a loading state instantly\n        of({loading: true}),\n        // then emit the values from watching the published ID's path\n        documentPreviewStore\n          .unstable_observePathsDocumentPair(\n            publishedId,\n            (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          )\n          .pipe(\n            // this debounce time is needed to prevent flashing banners due to\n            // the router state updating faster than the content-lake state. we\n            // debounce to wait for more emissions because the value pulled\n            // initially could be stale.\n            debounceTime(750),\n            map(\n              ({draft, published}): ParentReferenceInfo => ({\n                loading: false,\n                result: {\n                  availability: {\n                    draft: draft.availability,\n                    published: published.availability,\n                  },\n                  refValue: pathGet<Reference>(draft.snapshot || published.snapshot, parentRefPath)\n                    ?._ref,\n                },\n              }),\n            ),\n          ),\n      )\n    },\n    [documentPreviewStore, parentId, parentRefPath],\n    {loading: true},\n  )\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'ReferenceChangedBanner'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'react-i18next'\nimport styled, {css} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Text muted size={1}>\n          {schemaType.title ?? schemaType.name}\n        </Text>\n      )}\n\n      <Heading as=\"h2\" data-heading muted={!title}>\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","import {type ToastParams, useToast} from '@sanity/ui'\nimport {useEffect, useRef} from 'react'\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  const wasEnabled = usePrevious(params.enabled)\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (!wasEnabled && params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    if (wasEnabled && !params.enabled) {\n      toast.push({\n        ...params,\n        // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n        duration: 0.01,\n      })\n    }\n  }, [params, toast, wasEnabled])\n}\n","/* eslint-disable no-nested-ternary */\nimport {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  LoadingBlock,\n  type PatchMsg,\n  PresenceOverlay,\n  useDocumentPresence,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\nimport {useConditionalToast} from './useConditionalToast'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: React.FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n  } = useDocumentPane()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const patchChannel = useMemo(() => createPatchChannel(), [])\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  useConditionalToast({\n    id: `sync-lock-${documentId}`,\n    status: 'warning',\n    enabled: isLocked,\n    title: t('document-view.form-view.sync-lock-toast.title'),\n    description: t('document-view.form-view.sync-lock-toast.description'),\n  })\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel])\n\n  const hasRev = Boolean(value?._rev)\n  useEffect(() => {\n    if (hasRev) {\n      // this is a workaround for an issue that caused the document pushed to withDocument to get\n      // stuck at the first initial value.\n      // This effect is triggered only when the document goes from not having a revision, to getting one\n      // so it will kick in as soon as the document is received from the backend\n      patchChannel.publish({\n        type: 'mutation',\n        patches: [],\n        snapshot: value,\n      })\n    }\n    // React to changes in hasRev only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (ready && !formState?.focusPath.length && formRef) {\n      focusFirstDescendant(formRef)\n    }\n    // We only want to run it on first mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: React.ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n\n  if (!ready) {\n    return <LoadingBlock showText />\n  }\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={setRef}>\n          {ready ? (\n            formState === null || hidden ? (\n              <Box padding={2}>\n                <Text>{t('document-view.form-view.form-hidden')}</Text>\n              </Box>\n            ) : (\n              <>\n                <FormHeader\n                  documentId={documentId}\n                  schemaType={formState.schemaType}\n                  title={title}\n                />\n                <FormBuilder\n                  __internal_fieldActions={fieldActions}\n                  __internal_patchChannel={patchChannel}\n                  collapsedFieldSets={collapsedFieldSets}\n                  collapsedPaths={collapsedPaths}\n                  focusPath={formState.focusPath}\n                  changed={formState.changed}\n                  focused={formState.focused}\n                  groups={formState.groups}\n                  id=\"root\"\n                  members={formState.members}\n                  onChange={onChange}\n                  onFieldGroupSelect={onSetActiveFieldGroup}\n                  onPathBlur={onBlur}\n                  onPathFocus={onFocus}\n                  onPathOpen={onPathOpen}\n                  onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                  onSetPathCollapsed={onSetCollapsedPath}\n                  presence={presence}\n                  readOnly={formState.readOnly}\n                  schemaType={formState.schemaType}\n                  validation={validation}\n                  value={\n                    // note: the form state doesn't have a typed concept of a \"document\" value\n                    // but these should be compatible\n                    formState.value as FormDocumentValue\n                  }\n                />\n              </>\n            )\n          ) : (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {createElement, useEffect, useMemo, useRef, useState} from 'react'\nimport {ScrollContainer, useTimelineSelector, VirtualizerScrollInstanceProvider} from 'sanity'\nimport styled, {css} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanner,\n  DeprecatedDocumentTypeBanner,\n  PermissionCheckBanner,\n  ReferenceChangedBanner,\n} from './banners'\nimport {FormView} from './documentViews'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {footerHeight, headerHeight, isInspectOpen, rootElement, setDocumentPanelPortalElement} =\n    props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n    isDeleting,\n    isDeleted,\n    timelineStore,\n  } = useDocumentPane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const portalRef = useRef<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? portalRef.current || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(\n    () =>\n      activeView.type === 'component' &&\n      activeView.component &&\n      createElement(activeView.component, {\n        document: {\n          draft: editState?.draft || null,\n          displayed: displayed || value,\n          historical: displayed,\n          published: editState?.published || null,\n        },\n        documentId,\n        options: activeView.options,\n        schemaType,\n      }),\n    [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value],\n  )\n\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {(features.resizablePanes || !showInspector) && (\n          <DocumentBox flex={2} overflow=\"hidden\">\n            <PortalProvider\n              element={portalElement}\n              __unstable_elements={{documentScrollElement: documentScrollElement}}\n            >\n              <BoundaryElementProvider element={documentScrollElement}>\n                <VirtualizerScrollInstanceProvider\n                  scrollElement={documentScrollElement}\n                  containerElement={formContainerElement}\n                >\n                  {activeView.type === 'form' && !isPermissionsLoading && ready && (\n                    <>\n                      <PermissionCheckBanner\n                        granted={Boolean(permissions?.granted)}\n                        requiredPermission={requiredPermission}\n                      />\n                      {!isDeleting && isDeleted && (\n                        <DeletedDocumentBanner revisionId={lastNonDeletedRevId} />\n                      )}\n                      <ReferenceChangedBanner />\n                      <DeprecatedDocumentTypeBanner />\n                    </>\n                  )}\n\n                  <Scroller\n                    $disabled={layoutCollapsed || false}\n                    data-testid=\"document-panel-scroller\"\n                    ref={setDocumentScrollElement}\n                  >\n                    <FormView\n                      hidden={formViewHidden}\n                      key={documentId + (ready ? '_ready' : '_pending')}\n                      margins={margins}\n                      ref={formContainerElement}\n                    />\n                    {activeViewNode}\n                  </Scroller>\n\n                  {inspectDialog}\n\n                  <div data-testid=\"document-panel-portal\" ref={portalRef} />\n                </VirtualizerScrollInstanceProvider>\n              </BoundaryElementProvider>\n            </PortalProvider>\n          </DocumentBox>\n        )}\n\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\n","import {\n  AddCircleIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)`\n  max-height: calc(100vh - 198px);\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button, // Button with specific styling and children behavior.\n  Flex,\n  rem,\n} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const IconWrapper = styled(Flex)(({theme}) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(Button)<{\n  $selected: boolean\n  $disabled: boolean\n}>(({$selected, $disabled}) => {\n  return css`\n    position: relative;\n    width: 100%;\n\n    /* Line styling */\n    &[data-first] ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &[data-last] ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${$selected &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n\n    ${$disabled &&\n    css`\n      cursor: not-allowed;\n    `}\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n","import {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Stack, Text} from '@sanity/ui'\nimport {createElement, type MouseEvent, useCallback, useMemo} from 'react'\nimport {type Chunk, type ChunkType, useDateTimeFormat, useTranslation} from 'sanity'\n\nimport {type ButtonProps} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {UserAvatarStack} from './userAvatarStack'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonProps['tone']> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\ninterface TimelineItemProps {\n  chunk: Chunk\n  isFirst: boolean\n  isLast: boolean\n  isLatest: boolean\n  isSelected: boolean\n  onSelect: (chunk: Chunk) => void\n  timestamp: string\n  type: ChunkType\n}\n\nexport function TimelineItem({\n  chunk,\n  isFirst,\n  isLast,\n  isLatest,\n  isSelected,\n  onSelect,\n  timestamp,\n  type,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLButtonElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Root\n      $selected={isSelected}\n      $disabled={!isSelectable}\n      data-chunk-id={chunk.id}\n      data-first={isFirst ? true : undefined}\n      data-last={isLast ? true : undefined}\n      data-ui=\"timelineItem\"\n      mode={isSelected ? 'default' : 'bleed'}\n      onClick={handleClick}\n      padding={0}\n      radius={2}\n      tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n    >\n      <Box paddingX={2}>\n        <Flex align=\"stretch\">\n          <IconWrapper align=\"center\">\n            <IconBox padding={2}>\n              <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n            </IconBox>\n          </IconWrapper>\n\n          <Stack space={2} margin={2}>\n            {isLatest && (\n              <Flex>\n                <Card\n                  padding={1}\n                  radius={2}\n                  shadow={1}\n                  tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n                >\n                  <Text muted size={0} weight=\"medium\">\n                    {t('timeline.latest')}\n                  </Text>\n                </Card>\n              </Flex>\n            )}\n            <Box>\n              <Text size={1} weight=\"medium\">\n                {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n              </Text>\n            </Box>\n            <TimestampBox paddingX={1}>\n              <Text as=\"time\" size={0} muted dateTime={timestamp}>\n                {formattedTimestamp}\n              </Text>\n            </TimestampBox>\n          </Stack>\n          <Flex flex={1} justify=\"flex-end\" align=\"center\">\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n          </Flex>\n        </Flex>\n      </Box>\n    </Root>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  disabledBeforeFirstChunk?: boolean\n  firstChunk?: Chunk | null\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n}\n\nexport const Timeline = ({\n  chunks,\n  disabledBeforeFirstChunk,\n  hasMoreChunks,\n  lastChunk,\n  onLoadMore,\n  onSelect,\n  firstChunk,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n\n  const filteredChunks = useMemo(() => {\n    return chunks.filter((c) => {\n      if (disabledBeforeFirstChunk && firstChunk) {\n        return c.index < firstChunk.index\n      }\n      return true\n    })\n  }, [chunks, disabledBeforeFirstChunk, firstChunk])\n\n  const selectedIndex = useMemo(\n    () => (lastChunk?.id ? filteredChunks.findIndex((c) => c.id === lastChunk.id) : -1),\n    [lastChunk?.id, filteredChunks],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<Chunk>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n      const isLast = (filteredChunks && activeIndex === filteredChunks.length - 1) || false\n      return (\n        <Box paddingBottom={isLast ? 1 : 0} paddingTop={isFirst ? 1 : 0} paddingX={1}>\n          <TimelineItem\n            chunk={chunk}\n            isFirst={isFirst}\n            isLast={isLast}\n            isLatest={activeIndex === 0 && !disabledBeforeFirstChunk}\n            isSelected={activeIndex === selectedIndex}\n            onSelect={onSelect}\n            timestamp={chunk.endTimestamp}\n            type={chunk.type}\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [disabledBeforeFirstChunk, filteredChunks, hasMoreChunks, onSelect, selectedIndex],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\">\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={40}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError() {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {type Placement, useClickOutside, useGlobalKeyDown, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, setTimelineMode, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popover, setPopover] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    if (open) {\n      handleClose()\n    }\n  }, [handleClose, open])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useClickOutside(handleClickOutside, [button, popover])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForRev(revChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForSince(sinceChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = timelineError ? (\n    <TimelineError />\n  ) : (\n    <>\n      {mode === 'rev' && (\n        <Timeline\n          chunks={chunks}\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )}\n      {mode === 'since' && (\n        <Timeline\n          chunks={chunks}\n          disabledBeforeFirstChunk\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={sinceTime}\n          onLoadMore={handleLoadMore}\n          onSelect={selectSince}\n        />\n      )}\n    </>\n  )\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-version')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={open && content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n      ref={setPopover}\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        iconRight={ChevronDownIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        style={{maxWidth: '100%'}}\n        text={ready ? buttonLabel : t('timeline.loading-history')}\n      />\n    </Root>\n  )\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          key={view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : view.id ?? null}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {type ReactElement} from 'react'\nimport {unstable_useValuePreview as useValuePreview, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nexport function DocumentHeaderTitle(): ReactElement {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState === 'connected'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState !== 'connected') {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Flex} from '@sanity/ui'\nimport type * as React from 'react'\nimport {createElement, forwardRef, memo, useMemo} from 'react'\nimport {useFieldActions, useTimelineSelector, useTranslation} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: React.ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      timelineStore,\n      ready,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    // Subscribe to external timeline state changes\n    const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button) do the same thing and shouldn't be shown at the same time)\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !features.backButton\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    return (\n      <TooltipDelayGroupProvider>\n        <PaneHeader\n          border\n          ref={ref}\n          loading={!ready}\n          title={<DocumentHeaderTitle />}\n          tabs={showTabs && <DocumentHeaderTabs />}\n          tabIndex={tabIndex}\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: t('pane-header.back-button.text')}}\n              />\n            )\n          }\n          subActions={<TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />}\n          actions={\n            <Flex align=\"center\" gap={1}>\n              {unstable_languageFilter.length > 0 && (\n                <>\n                  {unstable_languageFilter.map((languageFilterComponent, idx) => {\n                    return createElement(languageFilterComponent, {\n                      // eslint-disable-next-line react/no-array-index-key\n                      key: `language-filter-${idx}`,\n                      schemaType,\n                    })\n                  })}\n                </>\n              )}\n\n              {menuButtonNodes.map((item) => (\n                <PaneHeaderActionButton key={item.key} node={item} />\n              ))}\n\n              <PaneContextMenuButton nodes={contextMenuNodes} key=\"context-menu\" />\n\n              {showSplitPaneButton && (\n                <Button\n                  aria-label={t('buttons.split-pane-button.aria-label')}\n                  icon={SplitVerticalIcon}\n                  key=\"split-pane-button\"\n                  mode=\"bleed\"\n                  onClick={onPaneSplit}\n                  tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n                />\n              )}\n\n              {showSplitPaneCloseButton && (\n                <Button\n                  icon={CloseIcon}\n                  key=\"close-view-button\"\n                  mode=\"bleed\"\n                  onClick={onPaneClose}\n                  tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n                />\n              )}\n\n              {showPaneGroupCloseButton && (\n                <Button\n                  icon={CloseIcon}\n                  key=\"close-view-button\"\n                  mode=\"bleed\"\n                  tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n                  as={BackLink}\n                />\n              )}\n            </Flex>\n          }\n        />\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button, // eslint-disable-line no-restricted-imports\n  Flex,\n  Grid,\n  Popover, // eslint-disable-line no-restricted-imports\n  Text,\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Dialog rendered by custom document actions of dialog type `confirm`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onCancel()\n  }, [isTopLayer, onCancel])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return (\n    <Flex direction=\"column\" ref={setElement} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n          />\n          <Button\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onClose()\n  }, [isTopLayer, onClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return <div ref={setElement}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport type * as React from 'react'\nimport {useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: React.ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nfunction DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={badge.title}\n          disabled={!badge.title}\n          key={String(index)}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n}\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState as any}>\n      {({states}) => <DocumentBadgesInner states={states} />}\n    </RenderBadgeCollectionState>\n  )\n}\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: t('action.delete.label'),\n      title: <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n    label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'custom',\n      component: (\n        <ConfirmDeleteDialog\n          // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-changes',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: t('action.discard-changes.label'),\n      title: <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title: (discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || '',\n    label: t('action.discard-changes.label'),\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId)\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, navigateIntent, onComplete, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: t('action.duplicate.label'),\n      title: (\n        <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n    title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n","import {RestoreIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore} = useDocumentOperation(id, type)\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: t('action.restore.label'),\n    color: 'primary',\n    onHandle: handle,\n    title: t(\n      isRevisionInitialVersion\n        ? 'action.restore.disabled.cannot-restore-initial'\n        : 'action.restore.tooltip',\n    ),\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt)\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'default',\n      icon: PublishIcon,\n      label: t('action.publish.live-edit.label'),\n      title: t('action.publish.live-edit.tooltip'),\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'default',\n      icon: PublishIcon,\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled,\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'default',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? t('action.publish.published.label')\n        : publishScheduled || publishState === 'publishing'\n          ? t('action.publish.running.label')\n          : t('action.publish.draft.label'),\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? t('action.publish.waiting')\n      : publishState === 'published' || publishState === 'publishing'\n        ? null\n        : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: t('action.unpublish.label'),\n    title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n","import {Menu} from '@sanity/ui'\nimport {useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n  const [actionIndex, setActionIndex] = useState(-1)\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const currentAction = actionStates[actionIndex]\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <>\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            size=\"large\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n    </>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nfunction ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","import {Flex, Hotkeys, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useMemo, useState} from 'react'\nimport {type DocumentActionDescription, useTimelineSelector} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nfunction DocumentStatusBarActionsInner(props: DocumentStatusBarActionsInnerProps) {\n  const {disabled, showMenu, states} = props\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {firstActionState && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${firstActionState.label}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                size=\"large\"\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {showMenu && menuActionStates.length > 0 && (\n        <ActionMenuButton actionStates={menuActionStates} disabled={disabled} />\n      )}\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n}\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  if (!actions || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      // @ts-expect-error TODO: fix the document actions\n      actionProps={editState}\n    >\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected'}\n          // isMenuOpen={isMenuOpen}\n          // onMenuOpen={handleMenuOpen}\n          // onMenuClose={handleMenuClose}\n          showMenu={actions.length > 1}\n          states={states}\n          // Use document ID as key to make sure that the actions state is reset when the document changes\n          key={documentId}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {connectionState, editState, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n  const revision = revTime?.id || ''\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n  const historyActions = useMemo(() => [HistoryRestoreAction], [])\n\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps as any}>\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected' || Boolean(disabled)}\n          showMenu={false}\n          states={states}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport styled, {keyframes} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2}>\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {useEffect, useLayoutEffect, useState} from 'react'\nimport {DocumentStatus, DocumentStatusIndicator, useSyncState} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\ninterface DocumentStatusLineProps {\n  singleLine?: boolean\n}\n\nexport function DocumentStatusLine({singleLine}: DocumentStatusLineProps) {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n\n  const syncState = useSyncState(documentId, documentType)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  if (status) {\n    return <DocumentStatusPulse status={status || undefined} />\n  }\n\n  return (\n    <Tooltip\n      content={\n        <DocumentStatus absoluteDate draft={editState?.draft} published={editState?.published} />\n      }\n      placement=\"top\"\n    >\n      <Flex align=\"center\" gap={3}>\n        <DocumentStatusIndicator draft={editState?.draft} published={editState?.published} />\n        <DocumentStatus\n          draft={editState?.draft}\n          published={editState?.published}\n          singleLine={singleLine}\n        />\n      </Flex>\n    </Tooltip>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Flex} from '@sanity/ui'\nimport {type Ref, useCallback, useState} from 'react'\nimport {useTimelineSelector} from 'sanity'\n\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef} = props\n  const {editState, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const showingRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = editState?.ready && typeof collapsed === 'boolean'\n\n  return (\n    <Flex direction=\"column\" ref={setRootElement} sizing=\"border\">\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingY={2}\n          paddingLeft={4}\n          paddingRight={3}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              <DocumentStatusLine singleLine={!collapsed} />\n              <SpacerButton size=\"large\" />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton size=\"large\" />\n            {showingRevision ? <HistoryStatusBarActions /> : <DocumentStatusBarActions />}\n          </Flex>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n","import isHotkey from 'is-hotkey'\nimport * as React from 'react'\nimport {createElement, type ElementType, useCallback, useMemo, useState} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: React.Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nfunction KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return createElement(\n    as,\n    {\n      id,\n      onKeyDown: handleKeyDown,\n      tabIndex: -1,\n      ...rest,\n      ref: rootRef,\n    },\n    [\n      children,\n      activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      ),\n    ],\n  )\n}\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: React.Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = React.memo(\n  (props: DocumentActionShortcutsProps & Omit<React.HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {({states}) => (\n          <KeyboardShortcutResponder\n            {...rest}\n            activeIndex={activeIndex}\n            actionsBoxElement={actionsBoxElement}\n            as={as}\n            onActionStart={onActionStart}\n            states={states}\n          >\n            {children}\n          </KeyboardShortcutResponder>\n        )}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'DocumentActionShortcuts'\n","import {EarthAmericasIcon, JsonIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        isDisabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    isDisabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useAsObservable} from 'react-rx'\nimport {from, of} from 'rxjs'\nimport {catchError, debounceTime, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        }),\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {\n  DialogProvider,\n  type DialogProviderProps,\n  Flex,\n  PortalProvider,\n  useElementRect,\n} from '@sanity/ui'\nimport isHotkey from 'is-hotkey'\nimport {useCallback, useMemo, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  useZIndex,\n} from 'sanity'\nimport {type Path} from 'sanity-diff-patch'\nimport styled from 'styled-components'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components'\nimport {Pane, PaneFooter, usePaneLayout} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {usePreviewUrl} from '../usePreviewUrl'\nimport {DocumentLayoutError} from './DocumentLayoutError'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    documentId,\n    documentType,\n    fieldActions,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n  } = useDocumentPane()\n\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const zOffsets = useZIndex()\n  const previewUrl = usePreviewUrl(value)\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        t,\n      }),\n    [currentInspector, features, hasValue, inspectorMenuItems, inspectors, previewUrl, t],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n\n          {/* These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane. */}\n          {/* The portal element comes from `DocumentPanel`. */}\n          <PortalProvider\n            __unstable_elements={{[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}}\n          >\n            <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n              <PaneFooter ref={setFooterElement}>\n                <TooltipDelayGroupProvider>\n                  <DocumentStatusBar actionsBoxRef={setActionsBoxElement} />\n                </TooltipDelayGroupProvider>\n              </PaneFooter>\n            </DialogProvider>\n          </PortalProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\n\nfunction pick(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {isActionEnabled} from '@sanity/schema/_internal'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SanityDocumentLike,\n} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {omit} from 'lodash'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentFieldAction,\n  type DocumentInspector,\n  type DocumentPresence,\n  EMPTY_ARRAY,\n  getDraftId,\n  getExpandOperations,\n  getPublishedId,\n  type PatchEvent,\n  setAtPath,\n  type StateTree,\n  toMutationPatches,\n  useConnectionState,\n  useDocumentOperation,\n  useDocumentValuePermissions,\n  useEditState,\n  useFormState,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useTimelineSelector,\n  useTimelineStore,\n  useTranslation,\n  useUnique,\n  useValidationStatus,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {\n  DEFAULT_MENU_ITEM_GROUPS,\n  EMPTY_PARAMS,\n  HISTORY_INSPECTOR_NAME,\n  INSPECT_ACTION_PREFIX,\n} from './constants'\nimport {DocumentPaneContext, type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {type DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath} = props\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    actions: documentActions,\n    badges: documentBadges,\n    unstable_fieldActions: fieldActionsResolver,\n    unstable_languageFilter: languageFilterResolver,\n    inspectors: inspectorsResolver,\n  } = useSource().document\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {features} = useStructureTool()\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params, panePayload, templates],\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch} = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n  )\n  const focusPathRef = useRef(focusPath)\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n  /**\n   * Create an intermediate store which handles document Timeline + TimelineController\n   * creation, and also fetches pre-requsite document snapshots. Compatible with `useSyncExternalStore`\n   * and made available to child components via DocumentPaneContext.\n   */\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  // Subscribe to external timeline state changes\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(timelineStore, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(timelineStore, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(timelineStore, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(timelineStore, (state) => state.isPristine)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const isDeleted = useMemo(() => {\n    if (!timelineReady) {\n      return false\n    }\n    return Boolean(!editState?.draft && !editState?.published) && !isPristine\n  }, [editState?.draft, editState?.published, isPristine, timelineReady])\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = inspectors?.find((i) => i.name === inspectorName)\n  const resolvedChangesInspector = inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME)\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? sinceAttributes\n    : editState?.published || null\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready =\n    connectionState === 'connected' && editState.ready && (timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => (onOlderRevision ? timelineDisplayed || {_id: value._id, _type: value._type} : value),\n    [onOlderRevision, timelineDisplayed, value],\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path) => {\n      setFocusPath(nextFocusPath)\n\n      if (focusPathRef.current !== nextFocusPath) {\n        focusPathRef.current = nextFocusPath\n        onFocusPath?.(nextFocusPath)\n      }\n\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n        },\n      ])\n    },\n    [documentId, onFocusPath, presenceStore, setFocusPath],\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      if (disableBlurRef.current) {\n        return\n      }\n\n      setFocusPath(EMPTY_ARRAY)\n\n      if (focusPathRef.current !== EMPTY_ARRAY) {\n        focusPathRef.current = EMPTY_ARRAY\n        onFocusPath?.(EMPTY_ARRAY)\n      }\n\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [onFocusPath, setFocusPath],\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: PatchEvent) => patchRef.current(event), [])\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      // inspector?: DocumentInspector\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setPaneParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setPaneParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setPaneParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setPaneParams],\n  )\n\n  const handleHistoryClose = useCallback(() => {\n    if (resolvedChangesInspector) {\n      closeInspector(resolvedChangesInspector.name)\n    }\n  }, [closeInspector, resolvedChangesInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (resolvedChangesInspector) {\n      openInspector(resolvedChangesInspector.name)\n    }\n  }, [features.reviewChanges, openInspector, resolvedChangesInspector])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setPaneParams({...params, inspect: 'on'})\n      } else {\n        setPaneParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, params, setPaneParams],\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX)) {\n        const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n        const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n        if (nextInspector) {\n          if (nextInspector.name === inspectorName) {\n            closeInspector(nextInspector.name)\n          } else {\n            openInspector(nextInspector.name)\n          }\n          return true\n        }\n      }\n\n      return false\n    },\n    [\n      closeInspector,\n      handleHistoryOpen,\n      inspectorName,\n      inspectors,\n      openInspector,\n      previewUrl,\n      toggleLegacyInspect,\n    ],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    [],\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = Boolean(schemaType?.liveEdit)\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n    const isLocked = editState.transactionSyncLock?.enabled\n\n    return (\n      !ready ||\n      revTime !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting ||\n      isLocked ||\n      isDeleting ||\n      isDeleted\n    )\n  }, [\n    connectionState,\n    editState.transactionSyncLock,\n    isNonExistent,\n    isDeleted,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    revTime,\n    schemaType,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const setOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef],\n  )\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () => ({\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      displayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      inspector: currentInspector || null,\n      inspectors,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      onFocus: handleFocus,\n      onPathOpen: setOpenPath,\n      onHistoryClose: handleHistoryClose,\n      onHistoryOpen: handleHistoryOpen,\n      onInspectClose: handleLegacyInspectClose,\n      onMenuAction: handleMenuAction,\n      onPaneClose: handlePaneClose,\n      onPaneSplit: handlePaneSplit,\n      onSetActiveFieldGroup: handleSetActiveFieldGroup,\n      onSetCollapsedPath: handleOnSetCollapsedPath,\n      onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n      openInspector,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups: menuItemGroups || [],\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType: schemaType!,\n      isPermissionsLoading,\n      permissions,\n      setTimelineMode,\n      setTimelineRange,\n      setIsDeleting,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineMode,\n      timelineStore,\n      title,\n      value,\n      views,\n      formState,\n      unstable_languageFilter: languageFilter,\n    }),\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentInspector,\n      displayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      formState,\n      handleBlur,\n      handleChange,\n      handleFocus,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handleOnSetCollapsedFieldSet,\n      handleOnSetCollapsedPath,\n      handlePaneClose,\n      handlePaneSplit,\n      handleSetActiveFieldGroup,\n      index,\n      inspectOpen,\n      inspectors,\n      isDeleted,\n      isDeleting,\n      isPermissionsLoading,\n      languageFilter,\n      menuItemGroups,\n      openInspector,\n      paneKey,\n      permissions,\n      previewUrl,\n      ready,\n      schemaType,\n      setOpenPath,\n      setTimelineRange,\n      timelineError,\n      timelineMode,\n      timelineStore,\n      title,\n      validation,\n      value,\n      views,\n    ],\n  )\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/structure/reconnecting',\n        status: 'warning',\n        title: t('panes.document-pane-provider.reconnecting.title'),\n      })\n    }\n  }, [connectionState, pushToast, t])\n\n  const disableBlurRef = useRef(false)\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n\n      disableBlurRef.current = true\n\n      // Reset focus path when url params path changes\n      setFocusPath(pathFromUrl)\n      setOpenPath(pathFromUrl)\n\n      if (focusPathRef.current !== pathFromUrl) {\n        focusPathRef.current = pathFromUrl\n        onFocusPath?.(pathFromUrl)\n      }\n\n      const timeout = setTimeout(() => {\n        disableBlurRef.current = false\n      }, 0)\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n\n      return () => clearTimeout(timeout)\n    }\n\n    return undefined\n  }, [params, documentId, onFocusPath, setOpenPath, ready, paneRouter])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <DocumentPaneInner {...props} />\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProvider\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DocumentLayout documentId={options.id} documentType={options.type} />\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProvider>\n  )\n}\n\nfunction usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n","import {SyncIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport styled from 'styled-components'\n\nimport {Button} from '../../../ui-components'\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)`\n  position: relative;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onListChange: () => void\n  onRetry?: (event: unknown) => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview isPlaceholder layout={layout} key={num} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    onListChange,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (isLoading || isLazyLoading || !shouldRender) return\n\n    onListChange()\n  }, [isLazyLoading, isLoading, onListChange, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                <Translate\n                  t={t}\n                  i18nKey=\"panes.document-list-pane.error.text\"\n                  values={{error: error.message}}\n                  components={{Code: ({children}) => <code>{children}</code>}}\n                />\n              </Text>\n\n              {onRetry && (\n                <Box>\n                  <Button\n                    icon={SyncIcon}\n                    onClick={onRetry}\n                    text={t('panes.document-list-pane.error.retry-button.text')}\n                    tone=\"primary\"\n                  />\n                </Box>\n              )}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (!isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\">\n        <CommandListBox>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            key={key}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n    // Explicitly don't include `noDocumentsContent` in the deps array, as it's\n    // causing a visual bug where the \"No documents\" message is shown for a split second\n    // when clearing a search query with no results\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    // noDocumentsContent,\n    onRetry,\n    renderItem,\n    searchInputElement,\n    shouldRender,\n  ])\n\n  return (\n    <PaneContent overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}>\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport type * as React from 'react'\nimport {memo, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions, usePane} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface DocumentListPaneHeaderProps {\n  contentAfter?: React.ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const DocumentListPaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: DocumentListPaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <PaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nDocumentListPaneHeader.displayName = 'DocumentListPaneHeader'\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocument[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft: !!entry.draft,\n    }\n  }) as any\n}\n\nconst RE_TYPE_NAME_IN_FILTER =\n  /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type\\b/\nexport function getTypeNameFromSingleTypeFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string | null {\n  const matches = filter.match(RE_TYPE_NAME_IN_FILTER)\n\n  if (!matches) {\n    return null\n  }\n\n  const match = (matches[1] || matches[2]).trim().replace(/^[\"']|[\"']$/g, '')\n\n  if (match[0] === '$') {\n    const k = match.slice(1)\n    const v = params[k]\n\n    return typeof v === 'string' ? v : null\n  }\n\n  return match\n}\n\nexport function isSimpleTypeFilter(filter: string): boolean {\n  return /^_type\\s*==\\s*['\"$]\\w+['\"]?\\s*$/.test(filter.trim())\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n","import {type SanityClient, type SanityDocument} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  take,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearchQuery,\n  type Schema,\n  type SearchOptions,\n  type SearchTerms,\n  type WeightedSearchOptions,\n} from 'sanity'\nimport {getSearchableTypes, getSearchTypesWithMaxDepth} from 'sanity/_internalBrowser'\n\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  staticTypeNames?: string[]\n  maxFieldDepth?: number\n}\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SanityDocument[]> {\n  const {client, schema, sort, limit, params, filter, searchQuery, staticTypeNames, maxFieldDepth} =\n    options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${filter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeResult: false,\n      visibility: 'query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      if (isFirst && ev.type !== 'welcome') {\n        // If the first event is not welcome, it is most likely a reconnect and\n        // if it's not a reconnect something is very wrong and we should throw.\n        return throwError(\n          () =>\n            new Error(\n              ev.type === 'reconnect'\n                ? 'Could not establish EventSource connection'\n                : `Received unexpected type of first event \"${ev.type}\"`,\n            ),\n        )\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  return merge(\n    welcome$.pipe(take(1)),\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event) => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${filter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchTypesWithMaxDepth(\n            getSearchableTypes(schema).filter((type) => {\n              return typeNames.includes(type.name)\n            }),\n            maxFieldDepth,\n          )\n\n          const searchTerms: SearchTerms = {\n            filter,\n            query: searchQuery || '',\n            types,\n          }\n\n          const searchOptions: SearchOptions & WeightedSearchOptions = {\n            __unstable_extendedProjection: extendedProjection,\n            comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n            limit,\n            params,\n            sort: sortBy,\n          }\n\n          const {query: createdQuery, params: createdParams} = createSearchQuery(\n            searchTerms,\n            searchOptions,\n          )\n          const doFetch = () => client.observable.fetch(createdQuery, createdParams)\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          return doFetch()\n        }),\n      )\n    }),\n  )\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {concat, fromEvent, merge, of, Subject, throwError} from 'rxjs'\nimport {catchError, map, mergeMap, scan, startWith, take} from 'rxjs/operators'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, useClient, useSchema} from 'sanity'\nimport {useSearchMaxFieldDepth} from 'sanity/_internalBrowser'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {getTypeNameFromSingleTypeFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type QueryResult, type SortOrder} from './types'\n\nconst EMPTY_ARRAY: [] = []\n\nconst INITIAL_STATE: QueryResult = {\n  error: null,\n  onRetry: undefined,\n  result: null,\n}\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  hasMaxItems?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isSearchReady: boolean\n  items: DocumentListPaneItem[]\n  onListChange: () => void\n  onRetry?: (event: unknown) => void\n}\n\nconst INITIAL_QUERY_RESULTS: QueryResult = {\n  result: null,\n  error: null,\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): DocumentListState {\n  const {filter, params: paramsProp, sortOrder, searchQuery, apiVersion} = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  const [resultState, setResult] = useState<QueryResult>(INITIAL_STATE)\n  const {onRetry, error, result} = resultState\n\n  const documents = result?.documents\n\n  // Filter out published documents that have drafts to avoid duplicates in the list.\n  const items = useMemo(\n    () => (documents ? removePublishedWithDrafts(documents) : EMPTY_ARRAY),\n    [documents],\n  )\n\n  // A state variable to keep track of whether we are currently lazy loading the list.\n  // This is used to determine whether we should show the loading spinner at the bottom of the list.\n  const [isLazyLoading, setIsLazyLoading] = useState<boolean>(false)\n\n  // A state to keep track of whether we have fetched the full list of documents.\n  const [hasFullList, setHasFullList] = useState<boolean>(false)\n\n  // A state to keep track of whether we should fetch the full list of documents.\n  const [shouldFetchFullList, setShouldFetchFullList] = useState<boolean>(false)\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => getTypeNameFromSingleTypeFilter(filter, paramsProp),\n    [filter, paramsProp],\n  )\n\n  // We can't have the loading state as part of the result state, since the loading\n  // state would be updated whenever a mutation is performed in a document in the list.\n  // Instead, we determine if the list is loading by checking if the result is null.\n  // The result is null when:\n  // 1. We are making the initial request\n  // 2. The user has performed a search or changed the sort order\n  const isLoading = result === null && !error\n\n  // A flag to indicate whether we have reached the maximum number of documents.\n  const hasMaxItems = documents?.length === FULL_LIST_LIMIT\n\n  // This function is triggered when the user has scrolled to the bottom of the list\n  // and we need to fetch more items.\n  const onListChange = useCallback(() => {\n    if (isLoading || hasFullList || shouldFetchFullList) return\n\n    setShouldFetchFullList(true)\n  }, [isLoading, hasFullList, shouldFetchFullList])\n\n  const handleSetResult = useCallback(\n    (res: QueryResult) => {\n      if (res.error) {\n        setResult(res)\n        return\n      }\n\n      const documentsLength = res.result?.documents?.length || 0\n      const isLoadingMoreItems = !res.error && res?.result === null && shouldFetchFullList\n\n      // 1. When the result is null and shouldFetchFullList is true, we are loading _more_ items.\n      // In this case, we want to wait for the next result and set the isLazyLoading state to true.\n      if (isLoadingMoreItems) {\n        setIsLazyLoading(true)\n        return\n      }\n\n      // 2. If the result is not null, and less than the partial page limit, we know that\n      // we have fetched the full list of documents. In this case, we want to set the\n      // hasFullList state to true to prevent further requests.\n      if (documentsLength < PARTIAL_PAGE_LIMIT && documentsLength !== 0 && !shouldFetchFullList) {\n        setHasFullList(true)\n      }\n\n      // 3. If the result is null, we are loading items. In this case, we want to\n      // wait for the next result.\n      if (res?.result === null) {\n        setResult((prev) => ({...(prev.error ? res : prev)}))\n        return\n      }\n\n      // 4. Finally, set the result\n      setIsLazyLoading(false)\n      setResult(res)\n    },\n    [shouldFetchFullList],\n  )\n\n  const queryResults$ = useMemo(() => {\n    const onRetry$ = new Subject<void>()\n    const _onRetry = () => onRetry$.next()\n\n    const limit = shouldFetchFullList ? FULL_LIST_LIMIT : PARTIAL_PAGE_LIMIT\n    const sort = sortOrder || DEFAULT_ORDERING\n\n    return listenSearchQuery({\n      client,\n      filter,\n      limit,\n      params: paramsProp,\n      schema,\n      searchQuery: searchQuery || '',\n      sort,\n      staticTypeNames: typeNameFromFilter ? [typeNameFromFilter] : undefined,\n      maxFieldDepth,\n    }).pipe(\n      map((results) => ({\n        result: {documents: results},\n        error: null,\n      })),\n      startWith(INITIAL_QUERY_RESULTS),\n      catchError((err) => {\n        if (err instanceof ProgressEvent) {\n          // todo: hack to work around issue with get-it (used by sanity/client) that propagates connection errors as ProgressEvent instances. This if-block can be removed once @sanity/client is par with a version of get-it that includes this fix: https://github.com/sanity-io/get-it/pull/127\n          return throwError(() => new Error(`Request error`))\n        }\n        return throwError(() => err)\n      }),\n      catchError((err, caught$) => {\n        return concat(\n          of({result: null, error: err}),\n          merge(fromEvent(window, 'online'), onRetry$).pipe(\n            take(1),\n            mergeMap(() => caught$),\n          ),\n        )\n      }),\n      scan((prev, next) => ({...prev, ...next, onRetry: _onRetry})),\n    )\n  }, [\n    client,\n    filter,\n    paramsProp,\n    schema,\n    searchQuery,\n    shouldFetchFullList,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n  ])\n\n  useEffect(() => {\n    const sub = queryResults$.subscribe(handleSetResult)\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [handleSetResult, queryResults$])\n\n  const reset = useCallback(() => {\n    setHasFullList(false)\n    setIsLazyLoading(false)\n    setResult(INITIAL_STATE)\n    setShouldFetchFullList(false)\n  }, [])\n\n  useEffect(() => {\n    reset()\n  }, [reset, filter, paramsProp, sortOrder, searchQuery])\n\n  return {\n    error,\n    hasMaxItems,\n    isLazyLoading,\n    isLoading,\n    isSearchReady: !error,\n    items,\n    onListChange,\n    onRetry,\n  }\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, Card, Code, TextInput} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {useObservableCallback} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSchema,\n  useSource,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\nimport styled, {keyframes} from 'styled-components'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {DocumentListPaneHeader} from './DocumentListPaneHeader'\nimport {\n  applyOrderingFunctions,\n  getTypeNameFromSingleTypeFilter,\n  isSimpleTypeFilter,\n} from './helpers'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst EMPTY_ARRAY: never[] = []\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nfunction useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const valueRef = useRef<ValueType>(value)\n  if (!shallowEquals(valueRef.current, value)) {\n    valueRef.current = value\n  }\n  return valueRef.current\n}\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralPreviewLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\n/**\n * @internal\n */\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n  const schema = useSchema()\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    displayOptions,\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {apiVersion, defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => getTypeNameFromSingleTypeFilter(filter, params), [filter, params])\n  const showIcons = displayOptions?.showIcons !== false\n  const [layout, setLayout] = useStructureToolSetting<GeneralPreviewLayoutKey>(\n    typeName,\n    'layout',\n    defaultLayout,\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  // A ref to determine if we should show the loading spinner in the search input.\n  // This is used to avoid showing the spinner on initial load of the document list.\n  // We only wan't to show the spinner when the user interacts with the search input.\n  const showSearchLoadingRef = useRef<boolean>(false)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    typeName,\n    'sortOrder',\n    defaultSortOrder,\n  )\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n  const filterIsSimpleTypeConstraint = isSimpleTypeFilter(filter)\n\n  const {\n    error,\n    hasMaxItems,\n    isLazyLoading,\n    isLoading,\n    isSearchReady,\n    items,\n    onListChange,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const handleQueryChange = useObservableCallback(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n    [],\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  useEffect(() => {\n    if (showSearchLoadingRef.current === false && !isLoading) {\n      showSearchLoadingRef.current = true\n    }\n\n    return () => {\n      showSearchLoadingRef.current = false\n    }\n  }, [isLoading])\n\n  useEffect(() => {\n    // Clear search field and reset showSearchLoadingRef ref\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    showSearchLoadingRef.current = false\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    const showSpinner = isLoading && items.length === 0 && showSearchLoadingRef.current\n\n    if (showSpinner) return 'spinner'\n\n    return 'initial'\n  }, [isLoading, items.length])\n\n  const searchInput = (\n    <Box paddingX={3} paddingBottom={3}>\n      <TextInput\n        aria-label={t('panes.document-list-pane.search-input.aria-label')}\n        autoComplete=\"off\"\n        border={false}\n        clearButton={Boolean(searchQuery)}\n        disabled={!isSearchReady}\n        fontSize={[2, 2, 1]}\n        icon={loadingVariant === 'spinner' ? AnimatedSpinnerIcon : SearchIcon}\n        onChange={handleQueryChange}\n        onClear={handleClearSearch}\n        onKeyDown={handleSearchKeyDown}\n        padding={2}\n        placeholder={t('panes.document-list-pane.search-input.placeholder')}\n        radius={2}\n        ref={setSearchInputElement}\n        spellCheck={false}\n        value={searchInputValue}\n      />\n    </Box>\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        currentMaxWidth={350}\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        maxWidth={640}\n        minWidth={320}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <DocumentListPaneHeader\n          contentAfter={searchInput}\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n\n        <DocumentListPaneContent\n          childItemId={childItemId}\n          error={error}\n          filterIsSimpleTypeConstraint={filterIsSimpleTypeConstraint}\n          hasMaxItems={hasMaxItems}\n          hasSearchQuery={Boolean(searchQuery)}\n          isActive={isActive}\n          isLazyLoading={isLazyLoading}\n          isLoading={isLoading}\n          items={items}\n          key={paneKey}\n          layout={layout}\n          loadingVariant={loadingVariant}\n          onListChange={onListChange}\n          onRetry={onRetry}\n          paneTitle={title}\n          searchInputElement={searchInputElement}\n          showIcons={showIcons}\n        />\n      </Pane>\n    </SourceProvider>\n  )\n})\n","import {type SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string,\n  ) {\n    super(message)\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n  API_VERSION_REQUIRED_FOR_CUSTOM_FILTER = 'structure-api-version-required-for-custom-filter',\n}\n","import {type SortOrdering} from '@sanity/types'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  i18n: {\n    title: {\n      key: 'menu-items.sort-by.last-edited',\n      ns: structureLocaleNamespace,\n    },\n  },\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  i18n: {\n    title: {\n      key: 'menu-items.sort-by.created',\n      ns: structureLocaleNamespace,\n    },\n  },\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n","import {type SchemaType, type SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[]): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_FIELDS.includes(head)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The current ordering config targeted the nonexistent field \"%s\" on schema type \"%s\". It should be one of %o',\n        head,\n        schemaType.name,\n        schemaType.fields.map((field) => field.name),\n      )\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(schemaType: SchemaType, orderBy: SortOrderingItem[]): string {\n  return orderBy.map((ordering) => joinReferences(schemaType, ordering.field.split('.'))).join(', ')\n}\n","import {SortIcon} from '@sanity/icons'\nimport {type SchemaType, type SortOrdering, type SortOrderingItem} from '@sanity/types'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type Intent} from './Intent'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {getExtendedProjection} from './util/getExtendedProjection'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath,\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Menu item action type\n * @public */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/**\n * Menu items parameters\n *\n * @public */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/**\n * Interface for menu items\n *\n * @public */\nexport interface MenuItem {\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /**\n   * Menu Item title. Note that the `i18n` configuration will take\n   * precedence and this title is left here as a fallback if no i18n key is\n   * provided and compatibility with older plugins\n   */\n  title: string\n  /** Menu Item action */\n  action?: MenuItemActionType\n  /** Menu Item intent */\n  intent?: Intent\n  /** Menu Item group */\n  group?: string\n  // TODO: align these with TemplateItem['icon']\n  /** Menu Item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** Menu Item parameters. See {@link MenuItemParamsType} */\n  params?: MenuItemParamsType\n  /** Determine if it will show the MenuItem as action */\n  showAsAction?: boolean\n}\n\n/**\n * Partial menu items\n * @public\n */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/**\n * Class for building menu items.\n *\n * @public */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  /** menu item option object. See {@link PartialMenuItem} */\n  protected spec: PartialMenuItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItem,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set menu item action\n   * @param action - menu item action. See {@link MenuItemActionType}\n   * @returns menu item builder based on action provided. See {@link MenuItemBuilder}\n   */\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  /**\n   * Get menu item action\n   * @returns menu item builder action. See {@link PartialMenuItem}\n   */\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  /**\n   * Set menu item intent\n   * @param intent - menu item intent. See {@link Intent}\n   * @returns menu item builder based on intent provided. See {@link MenuItemBuilder}\n   */\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  /**\n   * Get menu item intent\n   * @returns menu item intent. See {@link PartialMenuItem}\n   */\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  /**\n   * Set menu item title\n   * @param title - menu item title\n   * @returns menu item builder based on title provided. See {@link MenuItemBuilder}\n   */\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  /**\n   * Get menu item title. Note that the `i18n` configuration will take\n   * precedence and this title is left here for compatibility.\n   * @returns menu item title\n   */\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  /**\n   * Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - object with i18n key and related namespace\n   * @returns menu item builder based on i18n config provided. See {@link MenuItemBuilder}\n   */\n  i18n(i18n: I18nTextRecord<'title'>): MenuItemBuilder {\n    return this.clone({i18n})\n  }\n\n  /**\n   * Get the i18n key and namespace used to populate the localized title.\n   * @returns the i18n key and namespace used to populate the localized title.\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /**\n   * Set menu item group\n   * @param group - menu item group\n   * @returns menu item builder based on group provided. See {@link MenuItemBuilder}\n   */\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  /**\n   * Get menu item group\n   * @returns menu item group. See {@link PartialMenuItem}\n   */\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  /**\n   * Set menu item icon\n   * @param icon - menu item icon\n   * @returns menu item builder based on icon provided. See {@link MenuItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Get menu item icon\n   * @returns menu item icon. See {@link PartialMenuItem}\n   */\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set menu item parameters\n   * @param params - menu item parameters. See {@link MenuItemParamsType}\n   * @returns menu item builder based on parameters provided. See {@link MenuItemBuilder}\n   */\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  /**\n   * Get meny item parameters\n   * @returns menu item parameters. See {@link PartialMenuItem}\n   */\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  /**\n   * Set menu item to show as action\n   * @param showAsAction - determine if menu item should show as action\n   * @returns menu item builder based on if it should show as action. See {@link MenuItemBuilder}\n   */\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  /**\n   * Check if menu item should show as action\n   * @returns true if menu item should show as action, false if not. See {@link PartialMenuItem}\n   */\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  /** Serialize menu item builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns menu item node based on path provided in options. See {@link MenuItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`,\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`,\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  /** Clone menu item builder\n   * @param withSpec - menu item options. See {@link PartialMenuItem}\n   * @returns menu item builder based on context and spec provided. See {@link MenuItemBuilder}\n   */\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  {by, title, i18n}: SortOrdering,\n  extendedProjection?: string,\n): MenuItemBuilder {\n  let builder = new MenuItemBuilder(context)\n    .group('sorting')\n    .title(\n      context.i18n.t('default-menu-item.fallback-title', {\n        // note this lives in the `studio` bundle because that one is loaded by default\n        ns: 'studio',\n        replace: {title}, // replaces the `{{title}}` option\n      }),\n    ) // fallback title\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by, extendedProjection})\n\n  if (i18n) {\n    builder = builder.i18n(i18n)\n  }\n\n  return builder\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string,\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by)),\n  )\n}\n","import {type I18nTextRecord} from 'sanity'\n\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath,\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Interface for menu item groups\n * @public\n */\nexport interface MenuItemGroup {\n  /** Menu group Id */\n  id: string\n  /** Menu group title */\n  title: string\n  i18n?: I18nTextRecord<'title'>\n}\n\n/**\n * Class for building menu item groups.\n *\n * @public\n */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  /** Menu item group ID */\n  protected _id: string\n  /** Menu item group title */\n  protected _title: string\n\n  protected _i18n?: I18nTextRecord<'title'>\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItemGroup,\n  ) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n    this._i18n = spec ? spec.i18n : undefined\n  }\n\n  /**\n   * Set menu item group ID\n   * @param id - menu item group ID\n   * @returns menu item group builder based on ID provided. See {@link MenuItemGroupBuilder}\n   */\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title, i18n: this._i18n})\n  }\n\n  /**\n   * Get menu item group ID\n   * @returns menu item group ID\n   */\n  getId(): string {\n    return this._id\n  }\n\n  /**\n   * Set menu item group title\n   * @param title - menu item group title\n   * @returns menu item group builder based on title provided. See {@link MenuItemGroupBuilder}\n   */\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {title, id: this._id, i18n: this._i18n})\n  }\n\n  /**\n   * Get menu item group title\n   * @returns menu item group title\n   */\n  getTitle(): string {\n    return this._title\n  }\n\n  /**\n   * Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - object with i18n key and related namespace\n   * @returns menu item group builder based on i18n info provided. See {@link MenuItemGroupBuilder}\n   */\n  i18n(i18n: I18nTextRecord<'title'>): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {i18n, id: this._id, title: this._title})\n  }\n\n  /**\n   * Get the i18n key and namespace used to populate the localized title.\n   * @returns the i18n key and namespace used to populate the localized title.\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this._i18n\n  }\n\n  /**\n   * Serialize menu item group builder\n   * @param options - serialization options (path). See {@link SerializeOptions}\n   * @returns menu item group based on path provided in options. See {@link MenuItemGroup}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title, _i18n} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n      i18n: _i18n,\n    }\n  }\n}\n","import {SerializeError} from '../SerializeError'\nimport {type SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined,\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  return id\n}\n","import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\n\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n","import {type I18nTextRecord} from 'sanity'\n\nimport {maybeSerializeMenuItem, type MenuItem, type MenuItemBuilder} from './MenuItem'\nimport {\n  maybeSerializeMenuItemGroup,\n  type MenuItemGroup,\n  type MenuItemGroupBuilder,\n} from './MenuItemGroup'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type Serializable,\n  type SerializeOptions,\n  type StructureNode,\n} from './StructureNodes'\nimport {type UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\n/**\n * Interface for component\n *\n * @public\n */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component menu items, array of type {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** Component menu item group, array of type {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n  /** Component options */\n  options: {[key: string]: unknown}\n}\n\n/**\n * Interface for component input\n *\n * @public\n */\nexport interface ComponentInput extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for buildable component\n *\n * @public\n */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  /** Component of type {@link UserComponent} */\n  component?: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Class for building components\n *\n * @public\n */\nexport class ComponentBuilder implements Serializable<Component> {\n  /** component builder option object */\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  /** Set Component ID\n   * @param id - component ID\n   * @returns component builder based on ID provided\n   */\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get ID\n   * @returns ID\n   */\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  /** Set Component title\n   * @param title - component title\n   * @returns component builder based on title provided (and ID)\n   */\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Component title\n   * @returns title\n   */\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ComponentBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /** Set Component child\n   * @param child - child component\n   * @returns component builder based on child component provided\n   */\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Component child\n   * @returns child component\n   */\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  /** Set component\n   * @param component - user built component\n   * @returns component builder based on component provided\n   */\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  /** Get Component\n   * @returns component\n   */\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  /** Set Component options\n   * @param options - component options\n   * @returns component builder based on options provided\n   */\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  /** Get Component options\n   * @returns component options\n   */\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  /** Set Component menu items\n   * @param menuItems - component menu items\n   * @returns component builder based on menuItems provided\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  /** Get Component menu items\n   * @returns menu items\n   */\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set Component menu item groups\n   * @param menuItemGroups - component menu item groups\n   * @returns component builder based on menuItemGroups provided\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get Component menu item groups\n   * @returns menu item groups\n   */\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  /** Serialize component\n   * @param options - serialization options\n   * @returns component object based on path provided in options\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path),\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path),\n      ),\n    }\n  }\n\n  /** Clone component builder (allows for options overriding)\n   * @param withSpec - component builder options\n   * @returns cloned builder\n   */\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type SanityClient} from '@sanity/client'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  getDraftId,\n  getPublishedId,\n  type SourceClientOptions,\n} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string,\n): Promise<string | undefined> {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = getPublishedId(id)\n  const draftId = getDraftId(id)\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'},\n  )\n\n  return types[0]\n}\n","import {kebabCase} from 'lodash'\n\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from '../StructureNodes'\nimport {type View} from '../types'\nimport {validateId} from '../util/validateId'\nimport {type ComponentViewBuilder} from './ComponentView'\nimport {type FormViewBuilder} from './FormView'\n\n/**\n * Interface for base view\n *\n * @public */\nexport interface BaseView {\n  /** View id */\n  id: string\n  /** View Title */\n  title: string\n  /** View Icon */\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/**\n * Class for building generic views.\n *\n * @public\n */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  /** Generic view option object */\n  protected spec: TView = {} as TView\n\n  /** Set generic view ID\n   * @param id - generic view ID\n   * @returns generic view builder based on ID provided.\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n  /** Get generic view ID\n   * @returns generic view ID\n   */\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic view title\n   * @param title - generic view title\n   * @returns generic view builder based on title provided and (if provided) its ID.\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  /** Get generic view title\n   * @returns generic view title\n   */\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  /** Set generic view icon\n   * @param icon - generic view icon\n   * @returns generic view builder based on icon provided.\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  /** Get generic view icon\n   * @returns generic view icon\n   */\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  /** Serialize generic view\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic view object based on path provided in options. See {@link BaseView}\n   */\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - Partial generic view builder options. See {@link BaseView}\n   * @returns Generic view builder.\n   */\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath,\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/**\n * View builder. See {@link ComponentViewBuilder} and {@link FormViewBuilder}\n *\n * @public\n */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n","import {isRecord} from 'sanity'\n\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {type SerializeOptions} from '../StructureNodes'\nimport {type UserViewComponent} from '../types'\nimport {type BaseView, GenericViewBuilder} from './View'\n\n/**\n * Interface for component views.\n *\n * @public */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  /** Component view components. See {@link UserViewComponent} */\n  component: UserViewComponent\n  /** Component view options */\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/**\n * Class for building a component view.\n *\n * @public */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  /** Partial Component view option object. See {@link ComponentView} */\n  protected spec: Partial<ComponentView>\n\n  constructor(\n    /**\n     * Component view component or spec\n     * @param componentOrSpec - user view component or partial component view. See {@link UserViewComponent} and {@link ComponentView}\n     */\n    componentOrSpec?: UserViewComponent | Partial<ComponentView>,\n  ) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  /** Set view Component\n   * @param component - component view component. See {@link UserViewComponent}\n   * @returns component view builder based on component view provided. See {@link ComponentViewBuilder}\n   */\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  /** Get view Component\n   * @returns Partial component view. See {@link ComponentView}\n   */\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  /** Set view Component options\n   * @param options - component view options\n   * @returns component view builder based on options provided. See {@link ComponentViewBuilder}\n   */\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  /** Get view Component options\n   * @returns component view options. See {@link ComponentView}\n   */\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  /** Serialize view Component\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns component view based on path provided in options. See {@link ComponentView}\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  /** Clone Component view builder (allows for options overriding)\n   * @param withSpec - partial for component view option. See {@link ComponentView}\n   * @returns component view builder. See {@link ComponentViewBuilder}\n   */\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type SerializeOptions} from '../StructureNodes'\nimport {type BaseView, GenericViewBuilder} from './View'\n\n/**\n * Interface for form views.\n *\n * @public */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/**\n * Class for building a form view.\n *\n * @public */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  /** Document list options. See {@link FormView} */\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  /**\n   * Serialize Form view builder\n   * @param options - Serialize options. See {@link SerializeOptions}\n   * @returns form view builder based on path provided in options. See {@link FormView}\n   */\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  /**\n   * Clone Form view builder (allows for options overriding)\n   * @param withSpec - Partial form view builder options. See {@link FormView}\n   * @returns form view builder. See {@link FormViewBuilder}\n   */\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type UserViewComponent} from '../types'\nimport {type ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {type FormView, FormViewBuilder} from './FormView'\n\nexport * from './ComponentView'\nexport * from './FormView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>,\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n","import {type SchemaType} from '@sanity/types'\nimport {uniq} from 'lodash'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type ChildResolver} from './ChildResolver'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type DocumentNode,\n  type EditorNode,\n  type Serializable,\n  type SerializeOptions,\n} from './StructureNodes'\nimport {type StructureContext, type View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {validateId} from './util/validateId'\nimport {form} from './views'\nimport {maybeSerializeView, type ViewBuilder} from './views/View'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment,\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/**\n * Interface for options of Partial Documents. See {@link PartialDocumentNode}\n *\n * @public */\nexport interface DocumentOptions {\n  /** Document Id */\n  id: string\n  /** Document Type */\n  type: string\n  /** Document Template */\n  template?: string\n  /** Template parameters */\n  templateParameters?: Record<string, unknown>\n}\n\n/**\n * Interface for partial document (focused on the document pane)\n *\n * @public */\nexport interface PartialDocumentNode {\n  /** Document Id */\n  id?: string\n  /** Document title */\n  title?: string\n  /** I18n key and namespace used to populate the localized title */\n  i18n?: I18nTextRecord<'title'>\n  /** Document children of type {@link Child} */\n  child?: Child\n  /**\n   * Views for the document pane. See {@link ViewBuilder} and {@link View}\n   */\n  views?: (View | ViewBuilder)[]\n  /**\n   * Document options. See {@link DocumentOptions}\n   */\n  options?: Partial<DocumentOptions>\n}\n\n/**\n * A `DocumentBuilder` is used to build a document node.\n *\n * @public */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  /** Component builder option object See {@link PartialDocumentNode} */\n  protected spec: PartialDocumentNode\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: PartialDocumentNode,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set Document Builder ID\n   * @param id - document builder ID\n   * @returns document builder based on ID provided. See {@link DocumentBuilder}\n   */\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get Document Builder ID\n   * @returns document ID. See {@link PartialDocumentNode}\n   */\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  /** Set Document title\n   * @param title - document title\n   * @returns document builder based on title provided (and ID). See {@link DocumentBuilder}\n   */\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Document title\n   * @returns document title. See {@link PartialDocumentNode}\n   */\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): DocumentBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /** Set Document child\n   * @param child - document child\n   * @returns document builder based on child provided. See {@link DocumentBuilder}\n   */\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Document child\n   * @returns document child. See {@link PartialDocumentNode}\n   */\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  /** Set Document ID\n   * @param documentId - document ID\n   * @returns document builder with document based on ID provided. See {@link DocumentBuilder}\n   */\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  /** Get Document ID\n   * @returns document ID. See {@link DocumentOptions}\n   */\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  /** Set Document Type\n   * @param documentType - document type\n   * @returns document builder with document based on type provided. See {@link DocumentBuilder}\n   */\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  /** Get Document Type\n   * @returns document type. See {@link DocumentOptions}\n   */\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  /** Set Document Template\n   * @param templateId - document template ID\n   * @param parameters - document template parameters\n   * @returns document builder with document based on template provided. See {@link DocumentBuilder}\n   */\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  /** Get Document Template\n   * @returns document template. See {@link DocumentOptions}\n   */\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  /** Get Document's initial value Template parameters\n   * @returns document template parameters. See {@link DocumentOptions}\n   */\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  /** Set Document views\n   * @param views - document views. See {@link ViewBuilder} and {@link View}\n   * @returns document builder with document based on views provided. See {@link DocumentBuilder}\n   */\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  /** Get Document views\n   * @returns document views. See {@link ViewBuilder} and {@link View}\n   */\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  /** Serialize Document builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document node based on path, index and hint provided in options. See {@link DocumentNode}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint,\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint,\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path),\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint,\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  /** Clone Document builder\n   * @param withSpec - partial document node specification used to extend the cloned builder. See {@link PartialDocumentNode}\n   * @returns document builder based on context and spec provided. See {@link DocumentBuilder}\n   */\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>,\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters,\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {type InitialValueTemplateItem} from 'sanity'\n\nimport {type BaseIntentParams, type IntentParams} from './Intent'\nimport {type MenuItem, MenuItemBuilder} from './MenuItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * A `InitialValueTemplateItemBuilder` is used to build a document node with an initial value set.\n *\n * @public\n */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  /** Initial Value template item option object. See {@link InitialValueTemplateItem} */\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: Partial<InitialValueTemplateItem>,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set initial value template item builder ID\n   * @param id - initial value template item ID\n   * @returns initial value template item based on ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  /** Get initial value template item builder ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  /** Set initial value template item title\n   * @param title - initial value template item title\n   * @returns initial value template item based on title provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  /** Get initial value template item title\n   * @returns initial value template item title. See {@link InitialValueTemplateItem}\n   */\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  /** Set initial value template item description\n   * @param description - initial value template item description\n   * @returns initial value template item builder based on description provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  /** Get initial value template item description\n   * @returns initial value template item description. See {@link InitialValueTemplateItem}\n   */\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  /** Set initial value template ID\n   * @param templateId - initial value template item template ID\n   * @returns initial value template item based builder on template ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  /** Get initial value template item template ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  /** Get initial value template item template parameters\n   * @param parameters - initial value template item parameters\n   * @returns initial value template item builder based on parameters provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  /** Get initial value template item template parameters\n   * @returns initial value template item parameters. See {@link InitialValueTemplateItem}\n   */\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  /** Serialize initial value template item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns initial value template item object based on the path, index and hint provided in options. See {@link InitialValueTemplateItem}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - initial value template item builder options. See {@link InitialValueTemplateItemBuilder}\n   * @returns initial value template item builder based on the context and options provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext,\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath,\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[],\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create'\n\n    const params: BaseIntentParams = {}\n    if (template && template.schemaType) {\n      params.type = template.schemaType\n    }\n\n    if (item.templateId) {\n      params.template = item.templateId\n    }\n\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    const i18n = item.i18n || template?.i18n\n\n    let builder = new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || AddIcon)\n      .intent({type: 'create', params: intentParams})\n\n    if (i18n) {\n      builder = builder.i18n(i18n)\n    }\n\n    return builder.serialize()\n  })\n}\n","import {getTypeNamesFromFilter, type PartialDocumentList} from './DocumentList'\nimport {type StructureNode} from './StructureNodes'\n\n/**\n * Intent parameters (json)\n *\n * @public\n */\nexport type IntentJsonParams = {[key: string]: any}\n\n/**\n * Base intent parameters\n *\n * @public\n * @todo dedupe with core\n */\nexport interface BaseIntentParams {\n  /**\n   * Document schema type name to create/edit.\n   * Required for `create` intents, optional for `edit` (but encouraged, safer and faster)\n   */\n  type?: string\n\n  /**\n   * ID of the document to create/edit.\n   * Required for `edit` intents, optional for `create`.\n   */\n  id?: string\n\n  /**\n   * Name (ID) of initial value template to use for `create` intent. Optional.\n   */\n  template?: string\n\n  /**\n   * Experimental field path\n   *\n   * @beta\n   * @experimental\n   * @hidden\n   */\n  path?: string\n\n  /**\n   * Optional \"mode\" to use for edit intent.\n   * Known modes are `structure` and `presentation`.\n   */\n  mode?: string\n\n  /**\n   * Arbitrary/custom parameters are generally discouraged - try to keep them to a minimum,\n   * or use `payload` (arbitrary JSON-serializable object) instead.\n   */\n  [key: string]: string | undefined\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/**\n * Intent parameters\n * See {@link router.BaseIntentParams} and {@link router.IntentJsonParams}\n *\n * @public\n */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/**\n * Interface for intents\n * @public */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  /** Intent type */\n  type: string\n  /** Intent parameters. See {@link IntentParams}\n   */\n  params?: IntentParams\n}\n\n/**\n * Interface for intent checker\n *\n * @public\n */\nexport interface IntentChecker {\n  (\n    /** Intent name */\n    intentName: string,\n    /** Intent checker parameter */\n    params: {[key: string]: any},\n    /** Structure context. See {@link StructureNode} */\n    context: {pane: StructureNode; index: number},\n  ): boolean\n  /** intent checker identify */\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n","export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n","import {type I18nTextRecord, type InitialValueTemplateItem, type PreviewLayoutKey} from 'sanity'\n\nimport {\n  type InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {defaultIntentChecker, type IntentChecker} from './Intent'\nimport {layoutOptions} from './Layout'\nimport {maybeSerializeMenuItem, type MenuItem, type MenuItemBuilder} from './MenuItem'\nimport {\n  maybeSerializeMenuItemGroup,\n  type MenuItemGroup,\n  type MenuItemGroupBuilder,\n} from './MenuItemGroup'\nimport {SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type Serializable,\n  type SerializeOptions,\n  type StructureNode,\n} from './StructureNodes'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/**\n * Interface for list display options\n *\n * @public */\nexport interface ListDisplayOptions {\n  /** Check if list display should show icons */\n  showIcons?: boolean\n}\n\n/**\n * Interface for base generic list\n *\n * @public\n */\nexport interface BaseGenericList extends StructureNode {\n  /** List layout key. */\n  defaultLayout?: PreviewLayoutKey\n  /** Can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** List display options. See {@link ListDisplayOptions} */\n  displayOptions?: ListDisplayOptions\n  /** List child. See {@link Child} */\n  child: Child\n  /** List initial values array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/**\n * Interface for generic list\n *\n * @public\n */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  /** List type */\n  type: string\n  /** List menu items array. See {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** List menu item groups array. See {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n}\n\n/**\n * Interface for buildable generic list\n *\n * @public\n */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  /** List menu items array. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** List menu items groups array. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for generic list input\n * Allows builders and only requires things not inferrable\n *\n * @public */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  /** Input id */\n  id: string\n  /** Input title */\n  title: string\n  /** Input menu items groups. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Input menu items groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  /** Input initial value array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  /** Input default layout. */\n  defaultLayout?: PreviewLayoutKey\n  /** If input can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** Input child of type {@link Child} */\n  child?: Child\n}\n\n/**\n * Class for building generic lists\n *\n * @public\n */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  /** Check if initial value templates are set */\n  protected initialValueTemplatesSpecified = false\n  /** Generic list option object */\n  protected spec: TList = {} as TList\n\n  /** Set generic list ID\n   * @param id - generic list ID\n   * @returns generic list builder based on ID provided.\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  /** Get generic list ID\n   * @returns generic list ID\n   */\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic list title\n   * @param title - generic list title\n   * @returns generic list builder based on title and ID provided.\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get generic list title\n   * @returns generic list title\n   */\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ConcreteImpl {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): TList['i18n'] {\n    return this.spec.i18n\n  }\n\n  /** Set generic list layout\n   * @param defaultLayout - generic list layout key.\n   * @returns generic list builder based on layout provided.\n   */\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  /** Get generic list layout\n   * @returns generic list layout\n   */\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  /** Set generic list menu items\n   * @param menuItems - generic list menu items. See {@link MenuItem} and {@link MenuItemBuilder}\n   * @returns generic list builder based on menu items provided.\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  /** Get generic list menu items\n   * @returns generic list menu items\n   */\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set generic list menu item groups\n   * @param menuItemGroups - generic list menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder}\n   * @returns generic list builder based on menu item groups provided.\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get generic list menu item groups\n   * @returns generic list menu item groups\n   */\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  /** Set generic list child\n   * @param child - generic list child. See {@link Child}\n   * @returns generic list builder based on child provided (clone).\n   */\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  /** Get generic list child\n   * @returns generic list child\n   */\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  /** Set generic list can handle intent\n   * @param canHandleIntent - generic list intent checker. See {@link IntentChecker}\n   * @returns generic list builder based on can handle intent provided.\n   */\n  canHandleIntent(canHandleIntent?: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  /** Get generic list can handle intent\n   * @returns generic list can handle intent\n   */\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  /** Set generic list display options\n   * @param enabled - allow / disallow for showing icons\n   * @returns generic list builder based on display options (showIcons) provided.\n   */\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  /** Get generic list display options\n   * @returns generic list display options (specifically showIcons)\n   */\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  /** Set generic list initial value templates\n   * @param templates - generic list initial value templates. See {@link InitialValueTemplateItemBuilder}\n   * @returns generic list builder based on templates provided.\n   */\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>,\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  /** Get generic list initial value templates\n   * @returns generic list initial value templates\n   */\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  /** Serialize generic list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic list object based on path provided in options. See {@link GenericList}\n   */\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title,\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path),\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      i18n: this.spec.i18n,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path),\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path),\n      ),\n    }\n  }\n\n  /** Clone generic list builder (allows for options overriding)\n   * @param _withSpec - generic list options.\n   * @returns generic list builder.\n   */\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {AddIcon} from '@sanity/icons'\nimport {type SchemaType, type SortOrderingItem} from '@sanity/types'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, type InitialValueTemplateItem} from 'sanity'\n\nimport {type ChildResolver, type ChildResolverOptions, type ItemChild} from './ChildResolver'\nimport {DocumentBuilder} from './Document'\nimport {\n  type BuildableGenericList,\n  type GenericList,\n  GenericListBuilder,\n  type GenericListInput,\n} from './GenericList'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Child, type SerializeOptions} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title,\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType(''),\n    )\n  }\n\n/**\n * Partial document list\n *\n * @public\n */\nexport interface PartialDocumentList extends BuildableGenericList {\n  /** Document list options. See {@link DocumentListOptions} */\n  options?: DocumentListOptions\n  /** Schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document list input\n *\n * @public\n */\nexport interface DocumentListInput extends GenericListInput {\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n}\n\n/**\n * Interface for document list\n *\n * @public\n */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n  /** Document list child. See {@link Child} */\n  child: Child\n  /** Document schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document List options\n *\n * @public\n */\nexport interface DocumentListOptions {\n  /** Document list filter */\n  filter: string\n  /** Document list parameters */\n  params?: Record<string, unknown>\n  /** Document list API version */\n  apiVersion?: string\n  /** Document list API default ordering array. */\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/**\n * Class for building document list\n *\n * @public\n */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput,\n  ) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  /** Set API version\n   * @param apiVersion - API version\n   * @returns document list builder based on the options and API version provided. See {@link DocumentListBuilder}\n   */\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  /** Get API version\n   * @returns API version\n   */\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  /** Set Document list filter\n   * @param filter - filter\n   * @returns document list builder based on the options and filter provided. See {@link DocumentListBuilder}\n   */\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  /** Get Document list filter\n   * @returns filter\n   */\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  /** Set Document list schema type name\n   * @param type - schema type name.\n   * @returns document list builder based on the schema type name provided. See {@link DocumentListBuilder}\n   */\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  /** Get Document list schema type name\n   * @returns schema type name\n   */\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  /** Set Document list options' parameters\n   * @param params - parameters\n   * @returns document list builder based on the options provided. See {@link DocumentListBuilder}\n   */\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  /** Get Document list options' parameters\n   * @returns options\n   */\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  /** Set Document list default ordering\n   * @param ordering - default sort ordering array. See {@link SortOrderingItem}\n   * @returns document list builder based on ordering provided. See {@link DocumentListBuilder}\n   */\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  /** Get Document list default ordering\n   * @returns default ordering. See {@link SortOrderingItem}\n   */\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  /** Serialize Document list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list object based on path provided in options. See {@link DocumentList}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title,\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    const hasSimpleFilter = this.spec.options?.filter === '_type == $type'\n    if (!hasSimpleFilter && this.spec.options.filter && !this.spec.options.apiVersion) {\n      console.warn(\n        `No apiVersion specified for document type list with custom filter: \\`${this.spec.options.filter}\\`. This will be required in the future. See %s for more info.`,\n        generateHelpUrl(HELP_URL.API_VERSION_REQUIRED_FOR_CUSTOM_FILTER),\n      )\n    }\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        // @todo: make specifying .apiVersion required when using custom (non-simple) filters in v4\n        apiVersion: this.spec.options.apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  /** Clone Document list builder (allows for options overriding)\n   * @param withSpec - override document list spec. See {@link PartialDocumentList}\n   * @returns document list builder. See {@link DocumentListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  /** Get Document list spec\n   * @returns document list spec. See {@link PartialDocumentList}\n   */\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList,\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      }),\n    )\n    .map((option) => ({...option, icon: AddIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n","import {find} from 'lodash'\nimport {isRecord} from 'sanity'\n\nimport {type ChildResolver, type ChildResolverOptions} from './ChildResolver'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  type BuildableGenericList,\n  type GenericList,\n  GenericListBuilder,\n  type GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {type IntentChecker} from './Intent'\nimport {type ListItem, ListItemBuilder} from './ListItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Divider, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath,\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index,\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/**\n * Interface for List\n *\n * @public\n */\nexport interface List extends GenericList {\n  type: 'list'\n  /** List items. See {@link ListItem} and {@link Divider} */\n  items: (ListItem | Divider)[]\n}\n\n/**\n * Interface for list input\n *\n * @public\n */\nexport interface ListInput extends GenericListInput {\n  /** List input items array. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * Interface for buildable list\n *\n * @public\n */\nexport interface BuildableList extends BuildableGenericList {\n  /** List items. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * A `ListBuilder` is used to build a list of items in the structure tool.\n *\n * @public */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  /** buildable list option object. See {@link BuildableList} */\n  protected spec: BuildableList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListInput,\n  ) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  /**\n   * Set list builder based on items provided\n   * @param items - list items. See {@link ListItemBuilder}, {@link ListItem} and {@link Divider}\n   * @returns list builder based on items provided. See {@link ListBuilder}\n   */\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  /** Get list builder items\n   * @returns list items. See {@link BuildableList}\n   */\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  /** Serialize list builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns list based on path in options. See {@link List}\n   */\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  /**\n   * Clone list builder and return new list builder based on context and spec provided\n   * @param withSpec - list options. See {@link BuildableList}\n   * @returns new list builder based on context and spec provided. See {@link ListBuilder}\n   */\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type Observable} from 'rxjs'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type ChildResolver, type ItemChild} from './ChildResolver'\nimport {ComponentBuilder} from './Component'\nimport {DocumentBuilder} from './Document'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListBuilder} from './List'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Collection,\n  type CollectionBuilder,\n  type Serializable,\n  type SerializeOptions,\n} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\n/**\n * Unserialized list item child.\n * See {@link Collection}, {@link CollectionBuilder}, {@link ChildResolver} and {@link ItemChild}\n *\n * @public\n */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/**\n * Child of List Item\n * See {@link Collection}, {@link ChildResolver}, {@link ItemChild}\n * @public\n */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/**\n * Interface for serialize list item options\n *\n * @public\n */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  /** Check if list item title is optional */\n  titleIsOptional?: boolean\n}\n\n/**\n * Interface for ist item display options\n *\n * @public */\nexport interface ListItemDisplayOptions {\n  /** Check if list item display should show icon */\n  showIcon?: boolean\n}\n\n/**\n * interface for list item input\n *\n * @public */\nexport interface ListItemInput {\n  /** List item id */\n  id: string\n  /** List item title */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Interface for List Item\n *\n * @public */\nexport interface ListItem {\n  /** List item id */\n  id: string\n  /** List item type */\n  type: string\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /** List item title. Note that the `i18n` key and namespace will take precedence. */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType\n}\n\n/**\n * Interface for unserialized list items.\n *\n * @public\n */\nexport interface UnserializedListItem {\n  /** List item ID */\n  id: string\n  /** List item title */\n  title: string\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link UnserializedListItemChild} */\n  child?: UnserializedListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Partial list item. See {@link UnserializedListItem}\n *\n * @public */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/**\n * Class for building list items\n *\n * @public */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  /** List item option object. See {@link PartialListItem} */\n  protected spec: PartialListItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListItemInput,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set list item ID\n   * @returns list item builder based on ID provided. See {@link ListItemBuilder}\n   */\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  /**\n   * Get list item ID\n   * @returns list item ID. See {@link PartialListItem}\n   */\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  /**\n   * Set list item title\n   * @returns list item builder based on title provided. See {@link ListItemBuilder}\n   */\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /**\n   * Get list item title\n   * @returns list item title. See {@link PartialListItem}\n   */\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ListItemBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /**\n   * Set list item icon\n   * @returns list item builder based on icon provided. See {@link ListItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Set if list item should show icon\n   * @returns list item builder based on showIcon provided. See {@link ListItemBuilder}\n   */\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  /**\n   * Check if list item should show icon\n   * @returns true if it should show the icon, false if not, undefined if not set\n   */\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  /**\n   *Get list item icon\n   * @returns list item icon. See {@link PartialListItem}\n   */\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set list item child\n   * @param child - list item child. See {@link UnserializedListItemChild}\n   * @returns list item builder based on child provided. See {@link ListItemBuilder}\n   */\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  /**\n   * Get list item child\n   * @returns list item child. See {@link PartialListItem}\n   */\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  /**\n   * Set list item schema type\n   * @param schemaType - list item schema type. See {@link SchemaType}\n   * @returns list item builder based on schema type provided. See {@link ListItemBuilder}\n   */\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  /**\n   * Get list item schema type\n   * @returns list item schema type. See {@link PartialListItem}\n   */\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  /** Serialize list item builder\n   * @param options - serialization options. See {@link ListItemSerializeOptions}\n   * @returns list item node based on path provided in options. See {@link ListItem}\n   */\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED,\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id,\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  /** Clone list item builder\n   * @param withSpec - partial list item options. See {@link PartialListItem}\n   * @returns list item builder based on context and spec provided. See {@link ListItemBuilder}\n   */\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type SchemaType} from '@sanity/types'\nimport {isRecord} from 'sanity'\n\nimport {DocumentBuilder} from './Document'\nimport {\n  type ListItem,\n  ListItemBuilder,\n  type ListItemInput,\n  type UnserializedListItem,\n} from './ListItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type SerializeOptions} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * Interface for document list item input\n *\n * @public\n */\nexport interface DocumentListItemInput extends ListItemInput {\n  /** Document list item input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Interface for document list item\n *\n * @public\n */\nexport interface DocumentListItem extends ListItem {\n  /** Document schema type. See {@link SchemaType} */\n  schemaType: SchemaType\n  /** Document ID */\n  _id: string\n}\n\n/**\n * Partial document list item\n *\n * @public\n */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/**\n * Class for building a document list item\n *\n * @public\n */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  /** Document list options. See {@link PartialDocumentListItem} */\n  protected spec: PartialDocumentListItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListItemInput,\n  ) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Serialize document list item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list item object based on path provided in options. See {@link DocumentListItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  /** Clone Document list item builder (allows for options overriding)\n   * @param withSpec - Document list item builder options. See {@link PartialDocumentListItem}\n   * @returns document list item builder. See {@link DocumentListItemBuilder}\n   */\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n","import {type SchemaType} from '@sanity/types'\n\nimport {DocumentListBuilder, type DocumentListInput, type PartialDocumentList} from './DocumentList'\nimport {type GenericListInput} from './GenericList'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {type Child} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * Interface for document type list input\n *\n * @public\n */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  /** Document type list input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Class for building a document type list\n *\n * @public\n */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput,\n  ) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set Document type list child\n   * @param child - Child component. See {@link Child}\n   * @returns document type list builder based on child component provided without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  /** Clone Document type list builder (allows for options overriding)\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder. See {@link DocumentTypeListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  /** Clone Document type list builder (allows for options overriding) and remove default intent handler\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n","import {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {type SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {type DocumentListBuilder} from './DocumentList'\nimport {DocumentTypeListBuilder, type DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {type List} from './List'\nimport {type ListItem, ListItemBuilder} from './ListItem'\nimport {getOrderingMenuItemsForSchemaType, MenuItemBuilder} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {type Collection} from './StructureNodes'\nimport {type StructureContext} from './types'\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string,\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput,\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {\n          id: 'sorting',\n          title: 'Sort',\n          i18n: {title: {key: 'menu-item-groups.actions-group', ns: structureLocaleNamespace}},\n        },\n        {\n          id: 'layout',\n          title: 'Layout',\n          i18n: {title: {key: 'menu-item-groups.layout-group', ns: structureLocaleNamespace}},\n        },\n        {\n          id: 'actions',\n          title: 'Actions',\n          i18n: {title: {key: 'menu-item-groups.sorting-group', ns: structureLocaleNamespace}},\n        },\n      ],\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId})),\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .i18n({title: {key: 'menu-items.layout.compact-view', ns: structureLocaleNamespace}})\n          .title('Compact view') // fallback title\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .i18n({title: {key: 'menu-items.layout.detailed-view', ns: structureLocaleNamespace}})\n          .title('Detailed view') // fallback title\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ],\n    )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {uniqueId} from 'lodash'\nimport {isValidElementType} from 'react-is'\nimport {getConfigContextFromSource, getPublishedId, type Source} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {ComponentBuilder, type ComponentInput} from './Component'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {DocumentListBuilder} from './DocumentList'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport {\n  getDocumentTypeList,\n  getDocumentTypeListItem,\n  getDocumentTypeListItems,\n} from './documentTypeListItems'\nimport {\n  defaultInitialValueTemplateItems,\n  InitialValueTemplateItemBuilder,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport {ListBuilder} from './List'\nimport {ListItemBuilder} from './ListItem'\nimport {getOrderingMenuItem, getOrderingMenuItemsForSchemaType, MenuItemBuilder} from './MenuItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {type Divider} from './StructureNodes'\nimport {\n  type DefaultDocumentNodeResolver,\n  type StructureBuilder,\n  type StructureContext,\n  type UserComponent,\n} from './types'\nimport * as views from './views'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .i18n({title: {key: 'default-definition.content-title', ns: structureLocaleNamespace}})\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>,\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n","import {type AnnotationDetails, type Diff, visitDiff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {AvatarStack, BoundaryElementProvider, Box, Card, Flex} from '@sanity/ui'\nimport {type ReactElement, useMemo, useRef} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  DocumentChangeContext,\n  type DocumentChangeContextInstance,\n  type DocumentInspectorProps,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  UserAvatar,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport styled from 'styled-components'\n\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {collectLatestAuthorAnnotations} from './helpers'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesInspector(props: DocumentInspectorProps): ReactElement {\n  const {onClose} = props\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n\n  // Subscribe to external timeline state changes\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  const changeAnnotations = useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff],\n  )\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('changes.action.close-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('changes.title')}\n      >\n        <Flex gap={1} padding={3} paddingTop={0} paddingBottom={2}>\n          <Box flex={1}>\n            <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          </Box>\n\n          <Box flex=\"none\">\n            <DiffTooltip\n              annotations={changeAnnotations}\n              description={t('changes.changes-by-author')}\n              portal\n            >\n              <AvatarStack maxLength={4} aria-label={t('changes.changes-by-author')}>\n                {changeAnnotations.map(({author}) => (\n                  <UserAvatar key={author} user={author} />\n                ))}\n              </AvatarStack>\n            </DiffTooltip>\n          </Box>\n        </Flex>\n      </DocumentInspectorHeader>\n\n      <Card flex={1}>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content\n                diff={diff}\n                documentContext={documentContext}\n                error={timelineError}\n                loading={loading}\n                schemaType={schemaType}\n              />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesInspector,\n  onClose: ({params}) => ({params: {...params, since: undefined}}),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, ErrorBoundary, Flex, Stack, Text} from '@sanity/ui'\nimport {createElement, type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, useTranslation} from 'sanity'\n\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {validation.length === 0 && (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.no-errors-message')}\n            </Text>\n          </Box>\n        )}\n\n        {validation.length > 0 && (\n          <Stack space={2}>\n            {validation.map((marker, i) => (\n              <ValidationCard\n                // eslint-disable-next-line react/no-array-index-key\n                key={i}\n                marker={marker}\n                onOpen={handleOpen}\n                schemaType={schemaType}\n                value={value}\n              />\n            ))}\n          </Stack>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>{createElement(MARKER_ICON[marker.level])}</Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(\n    () => getPathTitles({path, schemaType, value}),\n    [path, schemaType, value],\n  )\n\n  if (!pathTitles.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isValidationError,\n  isValidationWarning,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {validation: validationMarkers} = useValidationStatus(documentId, documentType)\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {comments} from './comments'\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    plugins: [comments()],\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n","import type * as React from 'react'\nimport {useMemo, useState} from 'react'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\n\nimport {createStructureBuilder, type DefaultDocumentNodeResolver} from './structureBuilder'\nimport {StructureToolContext} from './StructureToolContext'\nimport {\n  type StructureResolver,\n  type StructureToolContextValue,\n  type UnresolvedPaneNode,\n} from './types'\n\n/** @internal */\nexport interface StructureToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: React.ReactNode\n}\n\n/** @internal */\nexport function StructureToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: StructureToolProviderProps): React.ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  const features: StructureToolContextValue['features'] = useMemo(\n    () => ({\n      backButton: layoutCollapsed,\n      resizablePanes: !layoutCollapsed,\n      reviewChanges: !layoutCollapsed,\n      splitPanes: !layoutCollapsed,\n      splitViews: !layoutCollapsed,\n    }),\n    [layoutCollapsed],\n  )\n\n  const structureTool: StructureToolContextValue = useMemo(() => {\n    return {\n      features,\n      layoutCollapsed,\n      setLayoutCollapsed,\n      rootPaneNode,\n      structureContext: S.context,\n    }\n  }, [features, layoutCollapsed, rootPaneNode, S.context])\n\n  return (\n    <StructureToolContext.Provider value={structureTool}>{children}</StructureToolContext.Provider>\n  )\n}\n"],"names":["commentsLocaleNamespace","commentsUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","Promise","resolve","then","require","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","id","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","COMMENTS_INSPECTOR_NAME","separator","jsx","Text","muted","children","ChevronRightIcon","renderItem","item","index","Box","as","textOverflow","size","weight","concat","CommentBreadcrumbs","props","titlePath","maxLength","items","useMemo","len","length","beforeLength","Math","ceil","afterLength","floor","slice","nodes","map","key","showSeparator","Array","isArray","Fragment","Tooltip","content","Stack","space","padding","Flex","align","gap","getDialogCopy","t","thread","title","body","confirmButtonText","comment","CommentDeleteDialog","isParent","onClose","commentId","onConfirm","loading","error","useTranslation","dialogCopy","handleDelete","useCallback","Dialog","footer","cancelButton","onClick","confirmButton","text","tone","header","width","jsxs","TextWithTone","AddCommentIcon","forwardRef","Icon","ref","fill","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinejoin","CommentIcon","MentionIcon","cx","cy","r","ReactionIcon","strokeLinecap","fillRule","clipRule","SendIcon","useCommentHasChanged","message","prevMessage","useRef","isEqual","current","hasCommentMessageValue","value","some","block","_a","isPortableTextTextBlock","c","isPortableTextSpan","userId","commentIntentIfDiffers","parent","_b","parentIntent","context","intent","params","preview","StyledAvatar","styled","Avatar","__template","SYMBOLS","WHITESPACE","RegExp","nameToInitials","fullName","namesArray","replace","split","charAt","toUpperCase","CommentsAvatar","user","userProp","restProps","initials","displayName","src","imageUrl","AVATAR_HEIGHT","INLINE_STYLE","minWidth","SpacerAvatar","style","mentionObject","defineField","name","type","fields","blockType","of","marks","annotations","styles","lists","portableTextType","defineArrayMember","schema","Schema","compile","types","editorSchemaType","get","Z_OFFSET","CommentInputDiscardDialog","handleCancelClick","e","stopPropagation","handleConfirmClick","ThemeColorProvider","DialogProvider","zOffset","onClickOutside","InnerFlex","SKELETON_INLINE_STYLE","MentionsMenuItem","onSelect","loadedUser","useUser","avatar","status","granted","TextSkeleton","handleSelect","Card","disabled","radius","flex","Badge","fontSize","mode","EMPTY_ARRAY","Root","maxWidth","ITEM_HEIGHT","LIST_PADDING","MAX_ITEMS","FlexWrap","maxHeight","MentionsMenu","React","options","inputElement","searchTerm","setSearchTerm","useState","commandListRef","useImperativeHandle","term","itemProps","getItemDisabled","filteredOptions","deburredSearchTerm","deburr","default","toLocaleLowerCase","deburredOptions","option","filtered","filter","includes","sort","a","b","matchA","startsWith","matchB","LoadingBlock","showText","_inputElement","direction","overflow","CommandList","activeItemDataAttr","ariaLabel","fixedHeight","itemHeight","Span","span","_ref","theme","_c","regular","sanity","fonts","weights","hovered","color","card","bg","selectable","caution","pressed","css","MentionInlineBlock","selected","currentUser","useCurrentUser","animated","portal","NormalText","NormalBlock","renderBlock","blockProps","renderChild","childProps","isMention","_type","CommentInputContext","createContext","CommentInputProvider","expandOnFocus","focused","focusOnMount","mentionOptions","onMentionMenuOpenChange","readOnly","editor","usePortableTextEditor","mentionsMenuOpen","setMentionsMenuOpen","mentionsSearchTerm","setMentionsSearchTerm","selectionAtMentionInsert","setSelectionAtMentionInsert","canSubmit","hasChanges","focusEditor","PortableTextEditor","focus","closeMentions","openMentions","getSelection","onBeforeInput","event","selection","cursorOffset","offset","focusChild","focusSpan","isInsertText","inputType","isDeleteText","isInsertingAtChar","data","lastIndexOfAt","substring","lastIndexOf","isWhitespaceCharBeforeCursorPosition","filterStartsWithSpaceChar","insertAtChar","insertChild","schemaTypes","useDidUpdate","insertMention","mentionSchemaType","inlineObjects","find","spanPath","findByPath","path","delete","anchor","ctxValue","Boolean","Provider","useCommentInput","ctx","useContext","Error","EVENT_LISTENER_OPTIONS","passive","useCursorElement","opts","rootElement","cursorRect","setCursorRect","cursorElement","getBoundingClientRect","handleSelectionChange","sel","window","isCollapsed","rangeCount","range","getRangeAt","isWithinRoot","contains","commonAncestorContainer","rect","useEffect","document","addEventListener","removeEventListener","POPOVER_FALLBACK_PLACEMENTS","outline","PlaceholderWrapper","getTheme_v2","input","enabled","placeholder","StyledPopover","Popover","_ref2","Editable","focusLock","onFocus","onBlur","onKeyDown","onSubmit","popoverElement","setPopoverElement","rootElementRef","editableRef","mentionsMenuRef","usePortableTextEditorSelection","renderPlaceholder","handleClickOutside","useClickOutside","handleKeyDown","shiftKey","preventDefault","initialSelectionAtEndOfContent","lastBlock","lastChild","point","_key","popoverContent","arrow","constrainSize","fallbackPlacements","open","placement","referenceElement","PortableTextEditable","tabIndex","EditableWrap","ButtonDivider","MenuDivider","RootCard","_ref3","radii","CommentInputInner","withAvatar","handleMentionButtonClicked","shadow","sizing","paddingX","paddingY","justify","TooltipDelayGroupProvider","Button","icon","tooltipProps","SCROLL_INTO_VIEW_OPTIONS","behavior","inline","CommentInput","CommentInput2","onChange","onDiscardCancel","onDiscardConfirm","setFocused","editorRef","editorContainerRef","showDiscardDialog","setShowDiscardDialog","preDivRef","postDivRef","innerRef","editorInstanceKey","setEditorInstanceKey","keyGenerator","requestFocus","requestAnimationFrame","resetEditorInstance","handleChange","change","editorStateValue","getValue","scrollToEditor","scrollIntoView","handleSubmit","handleDiscardConfirm","discardDialogController","close","blur","scrollTo","reset","handleFocus","target","innerEl","focusLastDescendant","focusFirstDescendant","schemaType","PortableTextWrap","components","normal","_ref4","h1","_ref5","h2","_ref6","h3","_ref7","h4","_ref8","h5","_ref9","h6","_ref10","blockquote","_ref11","code","_ref12","list","bullet","_ref13","number","_ref14","checkmarks","_ref15","listItem","_ref16","_ref17","_ref18","strong","_ref19","em","_ref20","_ref21","underline","_ref22","strikeThrough","_ref23","link","_ref24","mention","CommentMessageSerializer","blocks","PortableText","FLEX_GAP","COMMENT_REACTION_OPTIONS","shortName","COMMENT_REACTION_EMOJIS","EmojiText","GRID_COLUMNS","CommentReactionsMenu","focusableElements","setFocusableElements","setRootElement","focusedIndex","setFocusedIndex","handleRootKeyDown","focusableLen","prev","handleOptionClick","indexOf","currentTarget","buttons","querySelectorAll","from","Grid","columns","role","o","emoji","UIButton","reactionName","CommentReactionsMenuButton","onMenuClose","onMenuOpen","renderMenuButton","buttonElement","setButtonElement","setOpen","handleClick","next","handleClose","button","btn","tooltipContent","cloneElement","_d","TEXT_SIZE","ContentStack","TextGroup","div","InlineText","attrs","TextBox","LEADING_NON_WHITESPACE_RE","UserDisplayName","currentUserId","isFirst","isCurrentUser","CommentReactionsUsersTooltip","CommentReactionsUsersTooltipContent","FormattedUserList","_ref25","userIds","listFormat","useListFormat","parts","formatToParts","elements","i","push","nextItem","nextLeadsWithNonWhitespace","test","nonWhitespace","match","UserList","paddingBottom","paddingTop","Translate","i18nKey","values","ReactionName","_ref26","TransparentCard","groupReactionsByName","reactions","grouped","reduce","acc","reaction","sorted","Object","entries","_ref27","_ref28","nameA","nameB","indexA","findIndex","indexB","_ref29","animate","CommentReactionsBar","memo","currentUserReactionNames","groupedReactions","_ref30","sortOrder","keys","fromEntries","sortedReactions","_ref31","_ref32","_ref33","wrap","_ref34","reactionsList","hasReacted","_ref35","POPOVER_PROPS","FloatingCard","CommentsListItemContextMenu","canDelete","canEdit","onCopyLink","onDeleteStart","onEditStart","onReactionSelect","onStatusChange","showMenuButton","display","CheckmarkCircleIcon","UndoIcon","MenuButton","ContextMenuButton","hidden","onOpen","menu","Menu","MenuItem","EditIcon","TrashIcon","LinkIcon","popover","_e","_f","_g","ContextMenuBox","TimeText","_ref36","isDark","dark","fg","hues","gray","hex","IntentText","_ref37","InnerStack","ErrorFlex","RetryCardButton","RootStack","_ref38","RELATIVE_TIME_OPTIONS","useTemporalPhrase","CommentsListItemLayout","hasError","isRetrying","onCreateRetry","onDelete","onEdit","onInputKeyDown","_createdAt","authorId","_id","lastEditedAt","setValue","isEditing","setIsEditing","startMessage","menuOpen","setMenuOpen","hasValue","_optimisticState","hasReactions","commentInputRef","createdDate","Date","editedDate","createdTimeAgo","useRelativeTime","dateTimeFormat","useDateTimeFormat","dateStyle","timeStyle","formattedCreatedAt","format","formattedLastEditAt","displayError","handleMenuOpen","handleMenuClose","handleCopyLink","handleCreateRetry","cancelEdit","startDiscard","handleInputKeyDown","isDefaultPrevented","cancelDiscard","confirmDiscard","handleReactionSelect","handleEditSubmit","handleOpenStatusChange","toggleEdit","v","handleCloseMenu","dateTime","toISOString","IntentLink","_ref39","marginTop","__unstable_focusRing","forwardedAs","ThreadCard","_ref40","MAX_COLLAPSED_REPLIES","StyledThreadCard","_ref41","bleed","bg2","ExpandButton","_ref42","medium","GhostButton","CommentsListItem","canReply","isSelected","onPathSelect","onReply","parentComment","replies","collapsed","setCollapsed","didExpand","replyInputRef","isTopLayer","useLayer","mouseOver","setMouseOver","handleMouseEnter","handleMouseLeave","handleReplySubmit","nextComment","fieldPath","field","parentCommentId","threadId","handleThreadRootClick","origin","handleExpand","splicedReplies","showCollapseButton","expandButtonText","renderedReplies","reply","_state","onMouseEnter","onMouseLeave","iconRight","ChevronDownIcon","getEmptyStateMessages","resolved","CommentsListStatus","hasNoComments","emptyStateMessages","Container","CreateNewThreadInput","fieldTitle","onNewThreadCreate","commentInputHandle","HeaderFlex","BreadcrumbsButton","_ref43","base","CommentThreadLayout","breadcrumbs","canCreateNewThread","handleNewThreadCreate","payload","uuid","handleBreadcrumbsClick","handleNewThreadClick","detail","crumbsTitlePath","p","lastCrumb","paddingRight","groupThreads","comments","CommentsListInner","CommentsListInner2","beforeListNode","selectedPath","boundaryElement","setBoundaryElement","scrollToComment","commentElement","querySelector","groupedThreads","showComments","BoundaryElementProvider","element","_ref44","group","firstThreadId","newThreadSelected","reverse","threadIsSelected","CommentsList","fadeInKeyFrame","keyframes","CommentsOnboardingPopover","onDismiss","StyledButton","_ref45","white","Image","img","CommentsUpsellDialog","onPrimaryClick","onSecondaryClick","__unstable_hideCloseButton","bodyHeight","secondaryButton","LaunchIcon","url","rel","href","ctaButton","CloseIcon","image","asset","alt","altText","UpsellDescriptionSerializer","descriptionText","CommentsUpsellPanel","marginBottom","border","CommentsContext","useCommentsIntent","CommentsIntentContext","structureLocaleNamespace","structureUsEnglishLocaleBundle","DocTitle","documentValue","useSchema","useValuePreview","errorMessage","ChevronWrapper","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","_ref46","rem","_ref47","_ref48","DocumentIdFlex","OtherReferenceCount","difference","totalCount","references","Inline","count","InfoOutlineIcon","PaneItemPreview","layout","presence","isRecord","isValidElement","isString","isNumber","draft","published","isLoading","useMemoObservable","getPreviewStateObservable","documentPreviewStore","DocumentPreviewPresence","DocumentStatusIndicator","tooltip","DocumentStatus","SanityDefaultPreview","getPreviewValueWithFallback","isPlaceholder","missingContext","PaneRouterContext","groupIndex","siblingIndex","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrentAndAfter","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","createPathWithParams","panes","state","StateLink","PaneLayoutContext","usePaneLayout","pane","childId","childPayload","childParameters","rest","currentPanes","nextParams","useUnique","nextPayload","nextState","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","documentId","documentType","parentRefPath","template","pathToString","usePaneRouter","ReferencePreviewLink","publishedId","getPublishedId","documentPresence","useDocumentPresence","useDocumentPreviewStore","Link","LinkComponent","linkProps","PreviewCard","ConfirmDeleteDialogBody","_ref50","crossDatasetReferences","internalReferences","documentTitle","action","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","toast","useToast","renderPreviewItem","UnknownIcon","subtitle","DocumentTitle","normalizedDatasetNames","datasetSubtitle","datasets","join","WarningOutlineIcon","marginLeft","borderTop","DocumentsIcon","documentCount","reference","_ref51","projectId","datasetName","CopyToClipboard","onCopy","CopyIcon","isClientError","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","_ref52","versionedClient","draftId","getDraftId","requestOptions","uri","getDataUrl","json","query","excludeContent","tag","observable","request","_ref53","omitted","nonExistant","doc","reason","fetchCrossDatasetReferences","checkDocumentId","currentDataset","config","dataset","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","_ref54","documentStore","referencesClause","totalClause","fetchQuery","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","_ref55","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","isInternalReferencesLoading","isCrossDatasetReferencesLoading","projectIds","Set","crossDatasetReference","DialogBody","LoadingContainer","ConfirmDeleteDialog","_ref56","onCancel","dialogId","useId","showConfirmButton","ConfirmDeleteDialogContainer","setError","handleRetry","ErrorBoundary","onCatch","Delay","_ref57","ms","ready","setReady","timeoutId","setTimeout","clearTimeout","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","PaneContext","Layer","PaneDivider","_ref58","resize","dragging","setDragging","handleMouseDown","startX","pageX","handleMouseMove","deltaX","handleMouseUp","onMouseDown","Pane","currentMinWidth","currentMinWidthProp","currentMaxWidth","currentMaxWidthProp","flexProp","minWidthProp","maxWidthProp","collapse","layoutCollapsed","expand","expandedElement","mount","paneIndex","nextPane","isLast","nextCollapsed","forwardedRef","useForwardedRef","setRef","refValue","handleCollapse","contextValue","divider","LegacyLayerProvider","Infinity","usePane","PaneContent","MENU_GROUP_POPOVER_PROPS","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","expanded","child","childIndex","MenuGroup","PaneContextMenuItemResolver","PaneContextIntentMenuItem","PaneContextMenuItem","useI18nText","TooltipOfDisabled","hotkeys","hotkey","CheckmarkIcon","onAction","intentLink","useIntentLink","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","PaneContextMenuButton","hasCritical","hasCaution","nodeIndex","PaneFooter","_ref59","$border","Layout","TitleCard","_ref60","TitleTextSkeleton","TitleText","TabsBox","_ref61","rgba","PaneHeader","actions","backButton","contentAfter","subActions","tabs","paneElement","paneRect","useElementRect","layoutStyle","innerHeight","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","paddingLeft","marginRight","getDisabledReason","disabledReason","isDisabled","PaneHeaderActionButton","PaneHeaderMenuItemActionButton","PaneHeaderMenuGroupActionButton","console","warn","PaneHeaderActionIntentButton","StatusButton","label","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","parentElement","childNodes","unshift","EMPTY_PATH","_sortElements","WeakMap","set","_sortByElementPath","aIndex","bIndex","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","original","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","subscribe","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","PaneLayout","onCollapse","onExpand","controller","rootRect","setState","paneLayout","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","fieldActions","menuItems","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","groups","itemGroup","g","i18n","ungroupedItems","shortcut","actionHandler","showAsAction","childIdx","IntentButton","Link2","linkRef","InsufficientPermissionsMessageTooltip","_ref62","reveal","InsufficientPermissionsMessage","getIntent","templates","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","_ref63","templateItems","useTemplates","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","nothingGranted","every","permission","permissionsById","AddIcon","firstItem","permissions","itemIndex","isNonNullable","hashObject","sortObject","_ref64","_ref65","keyA","keyB","localeCompare","normalize","JSON","parse","stringify","PaneHeaderActions","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handleAction","handler","menuNodes","actionNodes","contextMenuNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","_ref66","initialValueTemplateItem","description","combinedInitialValueTemplates","uniqBy","MissingSchemaType","Code","media","getIconWithFallback","defaultIcon","PaneItem","margin","hasSchemaType","clicked","setClicked","isSanityDocument","DocumentIcon","opacity","FolderIcon","metaKey","RenderActionCollectionState","actionProps","onActionComplete","GetHookCollectionState","onReset","hooks","args","RenderBadgeCollectionState","badges","badgeProps","useNotificationTarget","workspaceTitle","useWorkspace","previewState","handleGetNotificationValue","_ref67","inspect","location","getNotificationValue","createOperation","activeTool","client","getThreadLength","onCreate","onCreateError","createAddonDataset","workspace","currentThreadLength","notification","tool","_dataset","_projectId","_weak","newAddonClient","create","err","editOperation","editedComment","patch","commit","createReactionKey","reactOperation","getComment","onUpdate","currentUserReactions","currentReaction","unset","reactionItem","addedAt","optimisticReactionItem","setIfMissing","append","removeOperation","onRemove","all","updateOperation","useCommentOperations","activeToolName","useRouterState","routerState","tools","handleCreate","handleRemove","handleEdit","handleUpdate","handleReact","operation","edit","react","remove","update","useComments","CommentsEnabledContext","CommentsEnabledProvider","useResolveCommentsEnabled","useCommentsEnabled","CommentsOnboardingContext","VERSION","LOCAL_STORAGE_KEY","setLocalStorage","localStorage","setItem","_","getLocalStorage","getItem","CommentsOnboardingProvider","dismissed","setDismissed","handleDismiss","isDismissed","useCommentsOnboarding","useCommentsSelectedPath","CommentsSelectedPathContext","useCommentsUpsell","CommentsUpsellContext","upsellData","handleOpenDialog","upsellDialogOpen","telemetryLogs","dialogSecondaryClicked","dialogPrimaryClicked","panelViewed","panelDismissed","panelPrimaryClicked","panelSecondaryClicked","featureEnabled","useFeatureEnabled","useSource","unstable_comments","enabledFromConfig","getSchemaField","paths","PathUtils","fromString","firstPath","isObjectSchemaType","f","nextPath","toString","findArrayItemIndex","array","pathSegment","buildCommentBreadcrumbs","fieldPaths","currentSchemaType","forEach","seg","currentPath","previousPath","isKeySegment","hasOwnProperty","parentValue","getValueAtPath","currentValue","conditionalContext","arrayItemIndex","invalid","isArrayItem","Number","resolveConditionalProperty","getSchemaTypeTitle","isArraySchemaType","arrayValue","objectType","objectField","currentField","allCurrentFields","flat","anonymousField","currentTitle","objectFieldHidden","currentFieldHidden","isHidden","mergeCommentReactions","reactionsA","reactionsB","mergedReactions","result","createCommentsSet","commentsById","commentsReducer","nextCommentResult","nextCommentValue","restComments","updatedComment","optimisticReactions","incomingReactions","nextReactions","INITIAL_STATE","LISTEN_OPTIONS","events","includeResult","visibility","SORT_FIELD","SORT_ORDER","QUERY_FILTERS","QUERY_PROJECTION","QUERY_SORT_ORDER","QUERY","useCommentsStore","dispatch","useReducer","setLoading","initialFetch","res","handleListenerEvent","transition","listener$","events$","sub","unsubscribe","commentsAsArray","buildCommentThreadItems","parentComments","crumbs","hasInvalidBreadcrumb","bc","commentsCount","EMPTY_COMMENTS_DATA","CommentsProvider","isCommentsOpen","onCommentsOpen","commentsEnabled","setStatus","isCreatingDataset","useAddonDataset","editState","useEditState","workspaceName","handleSetStatus","newStatus","useUserListWithPermissions","threadItemsByStatus","orderBy","handleOnCreate","handleOnUpdate","handleOnEdit","handleOnCreateError","CommentsIntentProvider","CommentsSelectedPathProvider","setSelectedPath","handleSelectPath","UPSELL_CLIENT_OPTIONS","apiVersion","useProjectHostname","withCredentials","useCdn","FEATURE","TEMPLATE_OPTIONS","interpolate","BASE_URL","CommentsUpsellProvider","setUpsellDialogOpen","setUpsellData","useProjectId","telemetry","useTelemetry","log","UpsellDialogLearnMoreCtaClicked","feature","UpsellDialogUpgradeCtaClicked","source","UpsellDialogViewed","UpsellDialogDismissed","handlePrimaryButtonClick","handleSecondaryButtonClick","data$","withConfig","ctaUrl","baseUrl","secondaryUrl","CommentsDocumentLayout","CommentsDocumentLayoutInner","openInspector","inspector","useDocumentPane","handleOpenCommentsInspector","renderDefault","CommentsFieldButton","onCommentAdd","onDiscard","addCommentButtonElement","setAddCommentButtonElement","hasComments","closePopover","handleDiscardCancel","handlePopoverKeyDown","SanityUIButton","HIGHLIGHT_BLOCK_VARIANTS","initial","exit","CommentsField","CommentFieldInner","HighlightDiv","motion","_ref68","yellow","FieldStack","threadIdToScrollTo","setThreadIdToScrollTo","useBoundaryElement","stringPath","val","handleSetThreadToScrollTo","scrollToThreadId","handleCommentAdd","newThreadId","handleDiscard","scrollIntoViewIfNeededOpts","boundary","scrollMode","scrollIntoViewIfNeeded","internalComments","isAddingComment","__internal_comments","AnimatePresence","variants","_DEBUG","LOADING_PANE","Symbol","DOCUMENT_PANEL_PORTAL_ELEMENT","DocumentPaneContext","documentPane","FEEDBACK_FORM_LINK","FooterCard","position","zIndex","CommentsInspectorFeedbackFooter","lineHeight","CommentsInspectorHeader","onViewChange","view","handleSetOpenView","handleSetResolvedView","BetaBadge","DoubleChevronRightIcon","RootLayer","CommentsInspector","CommentsInspectorInner","showDeleteDialog","setShowDeleteDialog","commentToDelete","setCommentToDelete","deleteLoading","setDeleteLoading","deleteError","setDeleteError","commentsListHandleRef","rootRef","uniqueParams","commentIdParamRef","didScrollToCommentFromParam","pushToast","onPathOpen","currentComments","handleChangeView","nextView","handleCloseInspector","navigator","clipboard","writeText","closable","catch","closeDeleteDialog","handlePathSelect","handleReply","handleDeleteConfirm","handleScrollToComment","handleStatusChange","nextStatus","handleDeselectPath","commentToScrollTo","useMenuItem","useMenuItem$1","commentsInspector","defineDocumentInspector","component","CommentsStudioLayout","AddonDatasetProvider","ConditionalWrapper","condition","wrapper","definePlugin","inspectors","unstable_layout","form","studio","bundles","ErrorPane","paneKey","getWaitMessages","thresholds","messageKey","isDev","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","messageProp","resolvedMessage","currentMessage","setCurrentMessage","contentElement","setContentElement","mounted","setMounted","_raf2","StructureToolContext","useStructureTool","structureTool","InspectorMenuItem","setMenuItem","DocumentInspectorMenuItemsResolver","onMenuItems","lenRef","setMenuItems","menuItemsRef","newFieldActions","inspectorIndex","useDocumentTitle","connectionState","subscribed","IGNORE_OPS","DocumentOperationResults","DocumentOperationResults2","useDocumentOperationEvent","prevEvent","paneRouter","documentTitleBase","cleanupId","duration","op","Strong","DocumentInspectorHeader","closeButtonLabel","Resizer","onResize","onResizeStart","mouseXRef","Resizable","setElement","elementWidthRef","targetWidth","setTargetWidth","handleResizeStart","handleResize","w","DocumentInspectorPanel","closeInspector","features","createElement","resizablePanes","useStructureToolSetting","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","settings","getKey","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","HLRU","isExpanded","keyPath","cached","toggleExpanded","selectElement","createRange","removeAllRanges","selectNodeContents","addRange","select","maybeSelectAll","selectAll","keyCode","ctrlKey","isDocumentLike","JSONInspectorWrapper","_ref69","family","sizes","syntax","property","constant","string","boolean","Search","TextInput","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","bottom","TabList","Tab","TabPanel","JSONInspector","search","language","onDoubleClick","SpacerButton","_ref70","pointerEvents","Banner","borderBottom","DeletedDocumentBanner","_ref71","revisionId","restore","useDocumentOperation","useRouter","handleRestore","execute","ReadOnlyIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","PermissionCheckBanner","_ref72","requiredPermission","roleTitles","roles","part","Roles","ReferenceChangedBanner","routerReferenceId","parentGroup","parentSibling","parentId","hasHistoryOpen","rev","pathFromString","referenceInfo","parentRefPathSegment","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","_ref73","availability","pathGet","snapshot","handleReloadReference","shouldHide","available","SyncIcon","TitleContainer","_ref74","heading","FormHeader","_ref75","isSingleton","__experimental_formPreviewTitle","Heading","usePrevious","LONG_ENOUGH_BUT_NOT_TOO_LONG","useConditionalToast","wasEnabled","ev","FormView","margins","collapsedFieldSets","collapsedPaths","displayed","validation","formState","onSetCollapsedPath","onSetCollapsedFieldSet","onSetActiveFieldGroup","patchChannel","createPatchChannel","isLocked","transactionSyncLock","pair","documentEvents","tap","publish","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","formRef","setFormRef","focusPath","PresenceOverlay","FormBuilder","__internal_fieldActions","__internal_patchChannel","changed","members","onFieldGroupSelect","onPathBlur","onPathFocus","onSetFieldSetCollapsed","onSetPathCollapsed","Spinner","mutations","mut","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentBox","Scroller","ScrollContainer","_ref76","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","activeViewId","views","isPermissionsLoading","isDeleting","isDeleted","timelineStore","parentPortal","usePortal","portalRef","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","portalElement","splitPanes","formViewHidden","activeViewNode","historical","lastNonDeletedRevId","useTimelineSelector","inspectDialog","showInspector","PortalProvider","__unstable_elements","VirtualizerScrollInstanceProvider","scrollElement","containerElement","TIMELINE_ICON_COMPONENTS","AddCircleIcon","discardDraft","editDraft","editLive","PublishIcon","unpublish","UnpublishIcon","getTimelineEventIconComponent","StackWrapper","ListWrapper","_ref77","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","IconWrapper","_ref78","borderColor","skeleton","_ref79","$selected","IconBox","TimestampBox","_ref80","UserAvatarStack","_ref81","AvatarStack","UserAvatar","withTooltip","TIMELINE_ITEM_EVENT_TONE","withinSelection","TimelineItem","_ref82","chunk","isLatest","timestamp","iconComponent","authorUserIds","authors","isSelectable","dateFormat","formattedTimestamp","parsedDate","formattedDate","evt","Timeline","_ref83","chunks","disabledBeforeFirstChunk","hasMoreChunks","lastChunk","onLoadMore","firstChunk","filteredChunks","selectedIndex","_ref84","activeIndex","endTimestamp","autoFocus","initialIndex","initialScrollAlign","onEndReached","onEndReachedIndexOffset","overscan","wrapAround","TimelineError","TimelineMenu","_ref85","setTimelineRange","setTimelineMode","timelineError","setButton","setPopover","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","useGlobalKeyDown","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","DocumentHeaderTabs","tabPanelId","DocumentHeaderTab","isActive","viewId","DocumentHeaderTitle","DocumentPanelHeader","DocumentPanelHeader2","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","useFieldActions","menuButtonNodes","showTabs","revTime","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","ArrowLeftIcon","languageFilterComponent","SplitVerticalIcon","DIALOG_WIDTH_TO_UI_WIDTH","small","large","full","ConfirmDialog","dialog","ConfirmDialogContent","preventOverflow","cancelButtonIcon","cancelButtonText","confirmButtonIcon","ModalDialog","showCloseButton","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","_ref86","states","badge","whiteSpace","String","DocumentBadges","_ref87","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","_ref88","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","useDocumentPairPermissions","onHandle","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","_ref89","liveEdit","discardChanges","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","_ref90","duplicate","isDuplicating","setDuplicating","dupeId","duplicateSuccess","firstValueFrom","operationEvents","HistoryRestoreAction","_ref91","revision","isRevisionInitialVersion","isRevisionLatestVersion","RestoreIcon","DocumentPublished","defineEvent","version","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","publishedAt","AlreadyPublished","_ref92","timeSincePublished","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","onHistoryOpen","hasValidationErrors","isValidationErrorMarker","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","hasDraft","doPublish","validationComplete","didPublish","publishedImmediately","previouslyPublished","UnpublishAction","_ref93","ActionMenuButton","actionStates","idPrefix","actionIndex","setActionIndex","setReferenceElement","popoverProps","currentAction","actionState","ActionMenuListItem","s","DocumentStatusBarActionsInner","showMenu","firstActionState","menuActionStates","Hotkeys","toLowerCase","DocumentStatusBarActions","DocumentStatusBarActions2","_ref94","HistoryStatusBarActions","HistoryStatusBarActions2","historyActions","_ref95","StyledMotionPath","Circle","circle","Arrows","Checkmark","rotateAnimation","RotateGroup","root","syncing","scale","saved","changes","strokeDasharray","strokeDashoffset","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","DocumentStatusPulse","currentStatus","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","_ref96","singleLine","lastUpdated","timerId","useLayoutEffect","absoluteDate","useResizeObserver","_ref97","resizeObserver","observe","unobserve","CONTAINER_BREAKPOINT","DocumentStatusBar","actionsBoxRef","showingRevision","onOlderRevision","contentRect","shouldRender","flexShrink","KeyboardShortcutResponder","actionsBoxElement","onActionStart","activeAction","matchingStates","isHotkey","matchingState","DocumentActionShortcuts","setActiveIndex","_ref98","getInspectorItems","_ref99","currentInspector","inspectorMenuItems","menuItem","getInspectItem","_ref100","JsonIcon","getProductionPreviewItem","_ref101","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","usePreviewUrl","setPreviewUrl","resolveProductionUrl","value$","useAsObservable","DocumentLayoutError","DIALOG_PROVIDER_POSITION","StyledChangeConnectorRoot","ChangeConnectorRoot","DocumentLayout","inspectOpen","zOffsets","useZIndex","footerElement","setFooterElement","headerElement","setHeaderElement","setActionsBoxElement","documentPanelPortalElement","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","FieldActionsResolver","onActions","FieldActionsProvider","onKeyUp","isReviewChangesOpen","onOpenReviewChanges","onSetFocus","pick","plugin","useDocumentLayoutComponent","useMiddlewareComponents","defaultComponent","getInitialValueTemplateOpts","panePayload","structureNodeTemplate","templateName","urlTemplate","typeTemplates","DocumentPaneProvider","onFocusPath","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","inspectorsResolver","presenceStore","usePresenceStore","setPaneParams","viewsProp","paneOptions","documentIdRaw","templateParameters","initialValueRaw","useInitialValue","initialValue","validationRaw","useConnectionState","languageFilter","setFocusPath","focusPathRef","timelineMode","setTimelineError","useTimelineStore","onError","since","sinceAttributes","timelineDisplayed","timelineReady","isPristine","setPresence","subscription","nextPresence","inspectorName","setInspectorName","inspectParamRef","resolvedChangesInspector","compareValue","newSince","newRev","nextFocusPath","setLocation","lastActiveAt","handleBlur","blurredPath","disableBlurRef","patchRef","toMutationPatches","closeInspectorName","call","nextInspectorName","paneParams","nextInspector","currentParams","closeResult","handleHistoryClose","handleHistoryOpen","reviewChanges","handlePaneClose","handlePaneSplit","toggleLegacyInspect","toggle","arguments","undefined","omit","handleMenuAction","handleLegacyInspectClose","openPath","onSetOpenPath","fieldGroupState","onSetFieldGroupState","onSetCollapsedFieldSets","handleOnSetCollapsedPath","prevState","setAtPath","handleOnSetCollapsedFieldSet","handleSetActiveFieldGroup","groupName","docId","docPermissionsInput","useDocumentValuePermissions","isNonExistent","hasNoPermission","updateActionDisabled","isActionEnabled","createActionDisabled","reconnecting","useFormState","comparisonValue","formStateRef","setOpenPath","ops","getExpandOperations","onHistoryClose","restParams","pathFromUrl","resolveKeyedPath","timeout","DocumentPane","parentSourceName","SourceProvider","DocumentPaneInner","resolveNewDocumentOptions","usePaneOptions","isLoaded","isDocumentLoaded","useDocumentType","providerProps","mergeDocumentType","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","EditReferenceLinkComponent","onEditReference","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","EMPTY_RECORD","RootBox","CommandListBox","SKELETON_ITEMS","LoadingView","num","DocumentListPaneContent","childItemId","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","loadingVariant","onListChange","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","_ref102","isLastItem","showSpinner","showMaxItemsMessage","marginY","limit","noDocumentsContent","mainContent","_ref103","canReceiveFocus","onlyShowSelectionWhenActive","DocumentListPaneHeader","_ref104","initialValueTemplates","setLayout","setSortOrder","_ref105","removePublishedWithDrafts","documents","collate","entry","hasPublished","RE_TYPE_NAME_IN_FILTER","getTypeNameFromSingleTypeFilter","matches","trim","k","isSimpleTypeFilter","applyOrderingFunctions","order","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","segment","getFieldTypeByName","isArrayAccessor","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","ofType","listenSearchQuery","searchQuery","staticTypeNames","maxFieldDepth","sortBy","extendedProjection","defer","mergeMap","throwError","share","welcome$","mutationAndReconnect$","partition","take","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames$","typeNames","getSearchTypesWithMaxDepth","getSearchableTypes","searchTerms","searchOptions","__unstable_extendedProjection","createdQuery","createdParams","createSearchQuery","doFetch","INITIAL_QUERY_RESULTS","useDocumentList","paramsProp","useSearchMaxFieldDepth","resultState","setResult","setIsLazyLoading","hasFullList","setHasFullList","shouldFetchFullList","setShouldFetchFullList","typeNameFromFilter","handleSetResult","documentsLength","isLoadingMoreItems","queryResults$","onRetry$","Subject","_onRetry","results","ProgressEvent","caught$","scan","isSearchReady","rotate","AnimatedSpinnerIcon","SpinnerIcon","useShallowUnique","valueRef","shallowEquals","addSelectedStateToMenuItems","sortOrderRaw","DocumentListPane","defaultLayout","displayOptions","defaultOrdering","sourceName","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","showSearchLoadingRef","defaultSortOrder","sortWithOrderingFn","menuItemsWithSelectedState","handleQueryChange","useObservableCallback","event$","debounce","handleClearSearch","handleSearchKeyDown","searchInput","autoComplete","clearButton","onClear","spellCheck","SerializeError","constructor","parentPath","hint","withHelpUrl","helpId","HELP_URL","ORDER_BY_UPDATED_AT","ns","ORDER_BY_CREATED_AT","DEFAULT_SELECTED_ORDERING_OPTION","DEFAULT_ORDERING_OPTIONS","IMPLICIT_FIELDS","joinReferences","head","tail","schemaField","refTypes","tailFields","tailWrapper","getExtendedProjection","ordering","maybeSerializeMenuItem","MenuItemBuilder","serialize","_context","spec","clone","getAction","getTitle","getI18n","getGroup","getIcon","getParams","getShowAsAction","TITLE_REQUIRED","ACTION_OR_INTENT_REQUIRED","ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE","withSpec","builder","getOrderingMenuItem","_ref106","SortIcon","getOrderingMenuItemsForSchemaType","orderings","maybeSerializeMenuItemGroup","MenuItemGroupBuilder","_title","_i18n","getId","ID_REQUIRED","disallowedPattern","validateId","disallowedChar","getStructureNodeId","camelCased","camelCase","getSlug","ComponentBuilder","getChild","getComponent","getOptions","getMenuItemGroups","componentOptions","resolveTypeForDocument","getClient","GenericViewBuilder","kebabCase","isSerializable","maybeSerializeView","isComponentSpec","ComponentViewBuilder","componentOrSpec","userComponent","COMPONENT_REQUIRED","FormViewBuilder","createDocumentChildResolver","_ref107","resolveDocumentNode","itemId","_ref108","currentSegment","DocumentBuilder","paneId","getDocumentId","getSchemaType","initialValueTemplate","getInitialValueTemplate","getInitialValueTemplateParameters","getViews","urlId","DOCUMENT_ID_REQUIRED","viewIds","dupes","uniq","getDocumentOptions","documentFromEditor","documentFromEditorWithInitialValue","_ref109","InitialValueTemplateItemBuilder","getDescription","getTemplateId","getParameters","defaultInitialValueTemplateItems","getStructureBuilder","getTypeNames","ordered","tpl","maybeSerializeInitialValueTemplateItem","menuItemsFromInitialValueTemplateItems","DEFAULT_INTENT_HANDLER","defaultIntentChecker","intentName","_ref110","isEdit","isCreate","typedSpec","paneFilter","schemaTypeName","getTypeNamesFromFilter","identity","layoutOptions","noChildResolver","shallowIntentChecker","_ref111","GenericListBuilder","initialValueTemplatesSpecified","getDefaultLayout","canHandleIntent","getCanHandleIntent","getShowIcons","getInitialValueTemplates","validateFilter","QUERY_PROVIDED_FOR_FILTER","createDocumentChildResolverForItem","parentItem","DocumentListBuilder","getApiVersion","getFilter","getDefaultOrdering","FILTER_REQUIRED","hasSimpleFilter","generateHelpUrl","API_VERSION_REQUIRED_FOR_CUSTOM_FILTER","inferInitialValueTemplates","inferTypeName","getSpec","flatMap","getTypeNamesFromEqualityFilter","getTypeNamesFromInTypesFilter","pattern","exec","candidate","normalized","getArgType","thing","ListBuilder","isPromise","isListItem","defaultCanHandleIntent","isDocumentListItem","resolveChildForItem","maybeSerializeListItem","ListItemBuilder","gotWhat","helpText","INVALID_LIST_ITEM","getItems","LIST_ITEMS_MUST_BE_ARRAY","serializedItems","dupeIds","dupeDesc","LIST_ITEM_IDS_MUST_BE_UNIQUE","showIcon","getShowIcon","titleIsOptional","SCHEMA_TYPE_NOT_FOUND","serializeOptions","listChild","originalChild","childOptions","createDefaultChildResolver","DocumentListItemBuilder","SCHEMA_TYPE_REQUIRED","DocumentTypeListBuilder","cloneWithoutDefaultIntentHandler","shouldOverride","override","BUNDLED_DOC_TYPES","isBundledDocType","isDocumentType","isList","collection","getDocumentTypes","_ref112","n","getDocumentTypeListItems","getDocumentTypeListItem","startCase","childContext","getDocumentTypeList","typeNameOrSpec","StackCompactIcon","StackIcon","hasIcon","getDefaultStructure","createStructureBuilder","_ref113","defaultDocumentNode","configContext","getConfigContextFromSource","structureBuilder","defaults","documentTypeList","_len","_key2","documentTypeListItem","_len2","_key3","documentTypeListItems","_len3","_key4","_len4","_key5","documentWithInitialValueTemplate","_len5","_key6","defaultDocument","_len6","_key7","_len7","_key8","_len8","_key9","menuItemGroup","_len9","_key10","_len10","_key11","documentList","_len11","_key12","documentListItem","_len12","_key13","orderingMenuItem","_len13","_key14","orderingMenuItemsForType","_len14","_key15","_len15","_key16","_len16","_key17","isValidElementType","uniqueId","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","isTemplate","collectLatestAuthorAnnotations","diff","authorMap","visitDiff","annotation","author","previous","ChangesInspector","scrollRef","selectionState","isComparingCurrent","documentContext","FieldWrapper","ChangeFieldWrapper","rootDiff","changeAnnotations","DiffTooltip","_ref114","_ref115","NoChanges","DocumentChangeContext","ChangeList","changesInspector","_ref116","_ref117","getPathTitles","itemType","MARKER_ICON","info","MARKER_TONE","ValidationInspector","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","str","isPayloadLike","exclusiveParams","isTruthy","parseChunks","sibling","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","_ref118","parseOldPanesSegment","restOfSiblings","buffer","payloadChunk","tryParsePayload","decodeJsonParams","MasterDetailIcon","prevActions","prevBadges","prevInspectors","plugins","lazy","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","StructureToolProvider","_ref119","structure","resolveStructure","setLayoutCollapsed","useConfigContextFromSource","S","rootPaneNode","structureContext"],"mappings":"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"}