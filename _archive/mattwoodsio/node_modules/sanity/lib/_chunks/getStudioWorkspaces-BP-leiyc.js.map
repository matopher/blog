{"version":3,"file":"getStudioWorkspaces-BP-leiyc.js","sources":["../../src/_internal/cli/util/getStudioWorkspaces.ts"],"sourcesContent":["/* eslint-disable no-sync */\nimport fs from 'fs'\nimport path from 'path'\nimport {firstValueFrom} from 'rxjs'\nimport {type Config, resolveConfig, type Workspace, type WorkspaceOptions} from 'sanity'\n\nimport {mockBrowserEnvironment} from './mockBrowserEnvironment'\n\nconst candidates = [\n  'sanity.config.js',\n  'sanity.config.jsx',\n  'sanity.config.ts',\n  'sanity.config.tsx',\n]\n\ninterface GetStudioWorkspacesOptions {\n  configPath?: string\n  basePath: string\n}\n\n/**\n * Note: Don't run this on the main thread, use it a forked process\n */\nexport function getStudioConfig({\n  basePath,\n  configPath: cfgPath,\n}: GetStudioWorkspacesOptions): WorkspaceOptions[] {\n  let cleanup\n  try {\n    cleanup = mockBrowserEnvironment(basePath)\n\n    let configPath = cfgPath\n    if (configPath && !fs.existsSync(configPath)) {\n      throw new Error(`Failed to find config at \"${cfgPath}\"`)\n    } else if (!configPath) {\n      configPath = candidates\n        .map((candidate) => path.join(basePath, candidate))\n        .find((candidate) => fs.existsSync(candidate))\n    }\n\n    if (!configPath) {\n      throw new Error(`Failed to resolve sanity.config.(js|ts) for base path \"${basePath}\"`)\n    }\n\n    let config: Config | undefined\n    try {\n      // eslint-disable-next-line import/no-dynamic-require\n      const mod = require(configPath)\n      config = mod.__esModule && mod.default ? mod.default : mod\n    } catch (err) {\n      const message = `Failed to load configuration file \"${configPath}\":\\n${err.message}`\n      // this helps preserve the stack trace\n      throw Object.assign(err, {message})\n    }\n\n    if (!config) throw new Error('Configuration did not export expected config shape')\n    const normalized = Array.isArray(config)\n      ? config\n      : [{...config, name: config.name || 'default', basePath: config.basePath || '/'}]\n\n    return normalized\n  } finally {\n    cleanup?.()\n  }\n}\n\n/**\n * Note: Don't run this on the main thread, use it a forked process\n */\nexport async function getStudioWorkspaces(\n  options: GetStudioWorkspacesOptions,\n): Promise<Workspace[]> {\n  let cleanup\n\n  try {\n    cleanup = mockBrowserEnvironment(options.basePath)\n    const config = getStudioConfig(options)\n    const workspaces = await firstValueFrom(resolveConfig(config))\n    if (!workspaces) throw new Error('Failed to resolve configuration')\n    return workspaces\n  } finally {\n    cleanup?.()\n  }\n}\n"],"names":["candidates","getStudioConfig","_ref","basePath","configPath","cfgPath","cleanup","mockBrowserEnvironment","fs","existsSync","Error","concat","map","candidate","path","join","find","default","config","mod","require","__esModule","err","message","Object","assign","normalized","Array","isArray","name","getStudioWorkspaces","options","workspaces","firstValueFrom","resolveConfig"],"mappings":";;;;;;;;;;;;;;AAQA,MAAMA,UAAa,GAAA,CACjB,kBAAA,EACA,mBAAA,EACA,kBAAA,EACA,mBAAA,CACF;AAUO,SAASC,eAAgBA,CAAAC,IAAA,EAGmB;EAAA,IAHnB;IAC9BC,QAAA;IACAC,UAAY,EAAAC;EACd,CAAmD,GAAAH,IAAA;EAC7C,IAAAI,OAAA;EACA,IAAA;IACFA,OAAA,GAAUC,sBAAAA,CAAAA,uBAAuBJ,QAAQ,CAAA;IAEzC,IAAIC,UAAa,GAAAC,OAAA;IACjB,IAAID,UAAc,IAAA,CAACI,WAAAA,CAAAA,OAAG,CAAAC,UAAA,CAAWL,UAAU,CAAG,EAAA;MAC5C,MAAM,IAAIM,KAAA,CAAM,4BAA6B,CAAAC,MAAA,CAAAN,OAAA,EAAO,GAAG,CAAA,CAAA;IAAA,CACzD,MAAA,IAAW,CAACD,UAAY,EAAA;MACtBA,UAAA,GAAaJ,WACVY,GAAI,CAACC,SAAc,IAAAC,aAAAA,CAAAA,OAAA,CAAKC,KAAKZ,QAAU,EAAAU,SAAS,CAAC,CAAA,CACjDG,KAAMH,SAAA,IAAcL,WAAG,CAAAS,OAAA,CAAAR,UAAA,CAAWI,SAAS,CAAC,CAAA;IACjD;IAEA,IAAI,CAACT,UAAY,EAAA;MACf,MAAM,IAAIM,KAAA,CAAM,yDAA0D,CAAAC,MAAA,CAAAR,QAAA,EAAQ,GAAG,CAAA,CAAA;IACvF;IAEI,IAAAe,MAAA;IACA,IAAA;MAEI,MAAAC,GAAA,GAAMC,QAAQhB,UAAU,CAAA;MAC9Bc,MAAA,GAASC,GAAI,CAAAE,UAAA,IAAcF,GAAI,CAAAF,OAAA,GAAUE,IAAIF,OAAU,GAAAE,GAAA;aAChDG,GAAK,EAAA;MACZ,MAAMC,OAAU,GAAA,qCAAA,CAAsCZ,MAAU,CAAAP,UAAA,EAAA,MAAA,CAAA,CAAOO,MAAI,CAAAW,GAAA,CAAAC,OAAA,CAAA;MAE3E,MAAMC,MAAO,CAAAC,MAAA,CAAOH,GAAK,EAAA;QAACC;MAAQ,CAAA,CAAA;IACpC;IAEA,IAAI,CAACL,MAAA,EAAc,MAAA,IAAIR,MAAM,oDAAoD,CAAA;IACjF,MAAMgB,aAAaC,KAAM,CAAAC,OAAA,CAAQV,MAAM,CACnC,GAAAA,MAAA,GACA,CAAC;MAAC,GAAGA,MAAQ;MAAAW,IAAA,EAAMX,OAAOW,IAAQ,IAAA,SAAA;MAAW1B,UAAUe,MAAO,CAAAf,QAAA,IAAY;KAAI,CAAA;IAE3E,OAAAuB,UAAA;EAAA,CACP,SAAA;IACApB,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAAA,CAAA;EACF;AACF;AAKA,eAAsBwB,oBACpBC,OACsB,EAAA;EAClB,IAAAzB,OAAA;EAEA,IAAA;IACQA,OAAA,GAAAC,sBAAA,CAAAA,sBAAA,CAAuBwB,QAAQ5B,QAAQ,CAAA;IAC3C,MAAAe,MAAA,GAASjB,gBAAgB8B,OAAO,CAAA;IACtC,MAAMC,UAAa,GAAA,MAAMC,IAAAA,CAAAA,cAAe,CAAAC,MAAAA,CAAAA,aAAA,CAAchB,MAAM,CAAC,CAAA;IAC7D,IAAI,CAACc,UAAA,EAAkB,MAAA,IAAItB,MAAM,iCAAiC,CAAA;IAC3D,OAAAsB,UAAA;EAAA,CACP,SAAA;IACA1B,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAAA,CAAA;EACF;AACF;;"}