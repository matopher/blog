{"version":3,"file":"servers-BEv-khCo.js","sources":["../../src/_internal/cli/util/ensureTrailingSlash.ts","../../src/_internal/cli/util/servers.ts"],"sourcesContent":["/**\n * Ensures that the given path ends with a `/`, and does not add an\n * additional one if it already does\n *\n * @param path - The path to ensure has a trailing slash\n * @returns A path with a trailing slash\n * @internal\n */\nexport function ensureTrailingSlash(path: string): string {\n  return path.endsWith('/') ? path : `${path}/`\n}\n","import {type CliConfig} from '@sanity/cli'\n\nimport {ensureTrailingSlash} from './ensureTrailingSlash'\n\nexport function gracefulServerDeath(\n  command: 'start' | 'dev' | 'preview',\n  httpHost: string | undefined,\n  httpPort: number,\n  err: Error & {code?: string},\n): void {\n  if (err.code === 'EADDRINUSE') {\n    throw new Error(\n      `Port number is already in use, configure \\`server.port\\` in \\`sanity.cli.js\\` or pass \\`--port <somePort>\\` to \\`sanity ${command}\\``,\n    )\n  }\n\n  if (err.code === 'EACCES') {\n    const help =\n      httpPort < 1024\n        ? 'port numbers below 1024 requires root privileges'\n        : `do you have access to listen to the given host (${httpHost || '127.0.0.1'})?`\n\n    throw new Error(`The studio server does not have access to listen to given port - ${help}`)\n  }\n\n  throw err\n}\n\n/**\n * Resolves the shared configuration for the dev/preview server using:\n *\n * - CLI flags\n * - Environment variables\n * - User build config\n * - Default configuration\n */\nexport function getSharedServerConfig({\n  flags,\n  workDir,\n  cliConfig,\n}: {\n  flags: {host?: string; port?: string}\n  workDir: string\n  cliConfig?: CliConfig\n}): {\n  cwd: string\n  httpPort: number\n  httpHost: string\n  basePath: string\n  vite: CliConfig['vite']\n} {\n  // Order of preference: CLI flags, environment variables, user build config, default config\n  const env = process.env // eslint-disable-line no-process-env\n\n  const httpHost =\n    flags.host || env.SANITY_STUDIO_SERVER_HOSTNAME || cliConfig?.server?.hostname || 'localhost'\n\n  const httpPort = toInt(\n    flags.port || env.SANITY_STUDIO_SERVER_PORT || cliConfig?.server?.port,\n    3333,\n  )\n\n  const basePath = ensureTrailingSlash(\n    env.SANITY_STUDIO_BASEPATH ?? (cliConfig?.project?.basePath || '/'),\n  )\n\n  return {\n    cwd: workDir,\n    httpPort,\n    httpHost,\n    basePath,\n    vite: cliConfig?.vite,\n  }\n}\n\nfunction toInt(value: string | number | undefined, defaultValue: number): number {\n  if (typeof value === 'undefined') {\n    return defaultValue\n  }\n\n  const intVal = parseInt(`${value}`, 10)\n  return Number.isFinite(intVal) ? intVal : defaultValue\n}\n"],"names":["ensureTrailingSlash","path","endsWith","concat","gracefulServerDeath","command","httpHost","httpPort","err","code","Error","help","getSharedServerConfig","_ref","flags","workDir","cliConfig","_a","_b","_c","_d","env","process","host","SANITY_STUDIO_SERVER_HOSTNAME","server","hostname","toInt","port","SANITY_STUDIO_SERVER_PORT","basePath","SANITY_STUDIO_BASEPATH","project","cwd","vite","value","defaultValue","intVal","parseInt","Number","isFinite"],"mappings":"AAQO,SAASA,oBAAoBC,IAAsB,EAAA;EACxD,OAAOA,KAAKC,QAAS,CAAA,GAAG,CAAI,GAAAD,IAAA,GAAO,GAAGE,MAAI,CAAAF,IAAA,EAAA,GAAA,CAAA;AAC5C;ACNO,SAASG,mBACdA,CAAAC,OAAA,EACAC,QACA,EAAAC,QAAA,EACAC,GACM,EAAA;EACF,IAAAA,GAAA,CAAIC,SAAS,YAAc,EAAA;IAC7B,MAAM,IAAIC,KAAA,CACR,oHAA2HP,MAAO,CAAAE,OAAA,EAAA,GAAA,CAAA,CACpI;EACF;EAEI,IAAAG,GAAA,CAAIC,SAAS,QAAU,EAAA;IACzB,MAAME,OACJJ,QAAW,GAAA,IAAA,GACP,kDACA,GAAA,kDAAA,CAAmDJ,mBAAY,WAAW,EAAA,IAAA,CAAA;IAE1E,MAAA,IAAIO,KAAM,CAAA,mEAAA,CAAoEP,MAAM,CAAAQ,IAAA,CAAA,CAAA;EAC5F;EAEM,MAAAH,GAAA;AACR;AAUO,SAASI,qBAAsBA,CAAAC,IAAA,EAcpC;EAAA,IAdoC;IACpCC,KAAA;IACAC,OAAA;IACAC;EACF,CAUE,GAAAH,IAAA;EAlDF,IAAAI,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;EAoDE,MAAMC,MAAMC,OAAQ,CAAAD,GAAA;EAEd,MAAAf,QAAA,GACJQ,MAAMS,IAAQ,IAAAF,GAAA,CAAIG,mCAAiCP,EAAW,GAAAD,SAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAAS,MAAA,KAAX,mBAAmBC,QAAY,CAAA,IAAA,WAAA;EAEpF,MAAMnB,QAAW,GAAAoB,KAAA,CACfb,MAAMc,IAAQ,IAAAP,GAAA,CAAIQ,yBAA6B,KAAA,CAAAX,EAAA,GAAAF,SAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAWS,WAAX,IAAmB,GAAA,KAAA,CAAA,GAAAP,EAAA,CAAAU,IAAA,CAAA,EAClE,IAAA,CACF;EAEA,MAAME,QAAW,GAAA9B,mBAAA,CAAA,CACfoB,SAAIW,sBAAJ,KAAA,IAAA,GAAAX,EAAA,GAAA,CAAA,CAA+BD,EAAW,GAAAH,SAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAAgB,OAAA,KAAX,mBAAoBF,QAAY,KAAA,GAAA,CACjE;EAEO,OAAA;IACLG,GAAK,EAAAlB,OAAA;IACLR,QAAA;IACAD,QAAA;IACAwB,QAAA;IACAI,MAAMlB,SAAW,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAAkB;EAAA,CACnB;AACF;AAEA,SAASP,KAAAA,CAAMQ,OAAoCC,YAA8B,EAAA;EAC3E,IAAA,OAAOD,UAAU,WAAa,EAAA;IACzB,OAAAC,YAAA;EACT;EAEA,MAAMC,MAAS,GAAAC,QAAA,CAAS,EAAG,CAAAnC,MAAA,CAAAgC,KAAA,CAAA,EAAS,EAAE,CAAA;EACtC,OAAOI,MAAO,CAAAC,QAAA,CAASH,MAAM,CAAA,GAAIA,MAAS,GAAAD,YAAA;AAC5C;"}