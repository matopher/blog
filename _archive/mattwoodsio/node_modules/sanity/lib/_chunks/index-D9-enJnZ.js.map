{"version":3,"file":"index-D9-enJnZ.js","sources":["../../src/structure/panes/userComponent/UserComponentPaneContent.tsx","../../src/structure/panes/userComponent/UserComponentPaneHeader.tsx","../../src/structure/panes/userComponent/UserComponentPane.tsx"],"sourcesContent":["import {Box} from '@sanity/ui'\nimport type * as React from 'react'\nimport styled from 'styled-components'\n\nimport {usePane} from '../../components'\n\ninterface UserComponentPaneContentProps {\n  children: React.ReactNode\n}\n\nconst Root = styled(Box)`\n  position: relative;\n`\n\nexport function UserComponentPaneContent(props: UserComponentPaneContentProps) {\n  const {children} = props\n  const {collapsed} = usePane()\n\n  return (\n    <Root hidden={collapsed} height=\"fill\" overflow=\"auto\">\n      {children}\n    </Root>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface UserComponentPaneHeaderProps {\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport function UserComponentPaneHeader(props: UserComponentPaneHeaderProps) {\n  const {actionHandlers, index, menuItems, menuItemGroups, title} = props\n  const {features} = useStructureTool()\n\n  if (!menuItems?.length && !title) {\n    return null\n  }\n\n  return (\n    <PaneHeader\n      actions={\n        <PaneHeaderActions\n          menuItems={menuItems}\n          menuItemGroups={menuItemGroups}\n          actionHandlers={actionHandlers}\n        />\n      }\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      title={title}\n    />\n  )\n}\n","import {createElement, isValidElement, useState} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {type StructureToolPaneActionHandler} from '../../types'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {UserComponentPaneContent} from './UserComponentPaneContent'\nimport {UserComponentPaneHeader} from './UserComponentPaneHeader'\n\ntype UserComponentPaneProps = BaseStructureToolPaneProps<'component'>\n\n/**\n * @internal\n */\nexport function UserComponentPane(props: UserComponentPaneProps) {\n  const {index, pane, paneKey, ...restProps} = props\n  const {\n    child,\n    component,\n    menuItems,\n    menuItemGroups,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type: _unused,\n    ...restPane\n  } = pane\n  const [ref, setRef] = useState<{\n    actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  } | null>(null)\n  const {title = ''} = useI18nText(pane)\n\n  return (\n    <Pane id={paneKey} minWidth={320} selected={restProps.isSelected}>\n      <UserComponentPaneHeader\n        actionHandlers={ref?.actionHandlers}\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <UserComponentPaneContent>\n        {isValidElementType(component) &&\n          createElement(component, {\n            ...restProps,\n            ...restPane,\n            // NOTE: here we're utilizing the function form of refs so setting\n            // the ref causes a re-render for `UserComponentPaneHeader`\n            ...({ref: setRef} as any),\n            child: child as any, // @todo: Fix typings\n            paneKey,\n          })}\n\n        {isValidElement(component) && component}\n      </UserComponentPaneContent>\n    </Pane>\n  )\n}\n"],"names":["_a","Root","styled","Box","__template","UserComponentPaneContent","props","children","collapsed","usePane","jsx","hidden","height","overflow","UserComponentPaneHeader","actionHandlers","index","menuItems","menuItemGroups","title","features","useStructureTool","length","PaneHeader","actions","PaneHeaderActions","backButton","Button","as","BackLink","icon","ArrowLeftIcon","mode","tooltipProps","content","UserComponentPane","pane","paneKey","restProps","child","component","type","_unused","restPane","ref","setRef","useState","useI18nText","jsxs","Pane","id","minWidth","selected","isSelected","isValidElementType","createElement","isValidElement"],"mappings":"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"}