{"version":3,"file":"listApisAction-DokNNimK.js","sources":["../../src/_internal/cli/actions/graphql/listApisAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\n\nimport {getClientUrl} from '../../util/getClientUrl'\n\ntype ListApisResponse = {\n  projectId: string\n  dataset: string\n  tag: string\n  playgroundEnabled: boolean\n  generation: string\n}[]\n\nexport default async function listGraphQLApis(\n  args: CliCommandArguments<Record<string, unknown>>,\n  context: CliCommandContext,\n): Promise<void> {\n  const {apiClient, output, chalk} = context\n\n  const client = apiClient({\n    requireUser: true,\n    requireProject: true,\n  }).config({apiVersion: '2023-08-01'})\n\n  let endpoints: ListApisResponse | undefined\n  try {\n    endpoints = await client.request<ListApisResponse>({\n      url: '/apis/graphql',\n      method: 'GET',\n    })\n  } catch (err) {\n    throw err\n  }\n\n  if (!endpoints || endpoints.length === 0) {\n    output.print(\"This project doesn't have any GraphQL endpoints deployed.\")\n    return\n  }\n\n  output.print('Here are the GraphQL endpoints deployed for this project:')\n  endpoints.forEach((endpoint, index) => {\n    const {dataset, tag} = endpoint\n    const url = getClientUrl(client, `graphql/${dataset}/${tag}`)\n\n    output.print(`${index + 1}.  ${chalk.bold('Dataset:')}     ${dataset}`)\n    output.print(`    ${chalk.bold('Tag:')}         ${tag}`)\n    output.print(`    ${chalk.bold('Generation:')}  ${endpoint.generation}`)\n    output.print(`    ${chalk.bold('Playground:')}  ${endpoint.playgroundEnabled}`)\n    output.print(`    ${chalk.bold('URL:')}  ${url}\\n`)\n  })\n}\n"],"names":["listGraphQLApis","args","context","apiClient","output","chalk","client","requireUser","requireProject","config","apiVersion","endpoints","request","url","method","err","length","print","forEach","endpoint","index","dataset","tag","getClientUrl","concat","bold","generation","playgroundEnabled"],"mappings":";AAY8B,eAAAA,eAAAA,CAC5BC,MACAC,OACe,EAAA;EACf,MAAM;IAACC,SAAA;IAAWC,MAAQ;IAAAC;EAAA,CAAS,GAAAH,OAAA;EAEnC,MAAMI,SAASH,SAAU,CAAA;IACvBI,WAAa,EAAA,IAAA;IACbC,cAAgB,EAAA;EACjB,CAAA,CAAE,CAAAC,MAAA,CAAO;IAACC,UAAA,EAAY;EAAa,CAAA,CAAA;EAEhC,IAAAC,SAAA;EACA,IAAA;IACUA,SAAA,GAAA,MAAML,OAAOM,OAA0B,CAAA;MACjDC,GAAK,EAAA,eAAA;MACLC,MAAQ,EAAA;IAAA,CACT,CAAA;WACMC,GAAK,EAAA;IACN,MAAAA,GAAA;EACR;EAEA,IAAI,CAACJ,SAAA,IAAaA,SAAU,CAAAK,MAAA,KAAW,CAAG,EAAA;IACxCZ,MAAA,CAAOa,MAAM,2DAA2D,CAAA;IACxE;EACF;EAEAb,MAAA,CAAOa,MAAM,2DAA2D,CAAA;EAC9DN,SAAA,CAAAO,OAAA,CAAQ,CAACC,QAAA,EAAUC,KAAU,KAAA;IAC/B,MAAA;MAACC,OAAS;MAAAC;IAAO,CAAA,GAAAH,QAAA;IACvB,MAAMN,MAAMU,YAAa,CAAAjB,MAAA,EAAQ,UAAW,CAAAkB,MAAA,CAAAH,OAAA,EAAO,KAAIG,MAAK,CAAAF,GAAA,CAAA,CAAA;IAErDlB,MAAA,CAAAa,KAAA,CAAM,EAAG,CAAAO,MAAA,CAAAJ,KAAA,GAAQ,CAAC,EAAA,KAAA,CAAA,CAAMI,aAAMC,IAAK,CAAA,UAAU,CAAC,EAAA,OAAA,CAAA,CAAQD,MAAS,CAAAH,OAAA,CAAA,CAAA;IACtEjB,MAAA,CAAOa,MAAM,MAAO,CAAAO,MAAA,CAAAnB,KAAA,CAAMoB,KAAK,MAAM,CAAA,EAAC,aAAYD,MAAK,CAAAF,GAAA,CAAA,CAAA;IAChDlB,MAAA,CAAAa,KAAA,CAAM,OAAOO,MAAM,CAAAnB,KAAA,CAAAoB,IAAA,CAAK,aAAa,CAAC,EAAA,IAAA,CAAA,CAAKD,gBAASE,UAAY,CAAA,CAAA;IAChEtB,MAAA,CAAAa,KAAA,CAAM,OAAOO,MAAM,CAAAnB,KAAA,CAAAoB,IAAA,CAAK,aAAa,CAAC,EAAA,IAAA,CAAA,CAAKD,gBAASG,iBAAmB,CAAA,CAAA;IACvEvB,MAAA,CAAAa,KAAA,CAAM,OAAOO,MAAM,CAAAnB,KAAA,CAAAoB,IAAA,CAAK,MAAM,CAAC,EAAA,IAAA,CAAA,CAAKD,YAAG,IAAI,CAAA,CAAA;EAAA,CACnD,CAAA;AACH;"}