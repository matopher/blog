{"version":3,"file":"undeployAction-D1GDUEXq.js","sources":["../../src/_internal/cli/actions/deploy/undeployAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\n\nexport default async function undeployStudio(\n  args: CliCommandArguments<Record<string, unknown>>,\n  context: CliCommandContext,\n): Promise<void> {\n  const {apiClient, chalk, output, prompt} = context\n\n  const client = apiClient({\n    requireUser: true,\n    requireProject: true,\n  })\n\n  // Check that the project has a studio hostname\n  let spinner = output.spinner('Checking project info').start()\n  const project = await client.projects.getById(client.config().projectId as string)\n  const studioHost = project && project.studioHost\n  spinner.succeed()\n\n  if (!studioHost) {\n    output.print('Your project has not been assigned a studio hostname.')\n    output.print('Nothing to undeploy.')\n    return\n  }\n\n  // Double-check\n  output.print('')\n\n  const url = `https://${chalk.yellow(studioHost)}.sanity.studio`\n  const shouldUndeploy = await prompt.single({\n    type: 'confirm',\n    default: false,\n    message: `This will undeploy ${url} and make it unavailable for your users.\n  The hostname will be available for anyone to claim.\n  Are you ${chalk.red('sure')} you want to undeploy?`.trim(),\n  })\n\n  if (!shouldUndeploy) {\n    return\n  }\n\n  const projectId = client.config().projectId\n  const uri = `/projects/${projectId}`\n\n  spinner = output.spinner('Undeploying studio').start()\n  try {\n    await client.request({uri, method: 'PATCH', body: {studioHost: null}})\n    spinner.succeed()\n  } catch (err) {\n    spinner.fail()\n    throw err\n  }\n\n  output.print(\n    `Studio undeploy scheduled. It might take a few minutes before ${url} is unavailable.`,\n  )\n}\n"],"names":["undeployStudio","args","context","apiClient","chalk","output","prompt","client","requireUser","requireProject","spinner","start","project","projects","getById","config","projectId","studioHost","succeed","print","url","concat","yellow","shouldUndeploy","single","type","default","message","red","trim","uri","request","method","body","err","fail"],"mappings":";;AAE8B,eAAAA,cAAAA,CAC5BC,MACAC,OACe,EAAA;EACf,MAAM;IAACC,SAAA;IAAWC,KAAO;IAAAC,MAAA;IAAQC;GAAU,GAAAJ,OAAA;EAE3C,MAAMK,SAASJ,SAAU,CAAA;IACvBK,WAAa,EAAA,IAAA;IACbC,cAAgB,EAAA;EAAA,CACjB,CAAA;EAGD,IAAIC,OAAU,GAAAL,MAAA,CAAOK,OAAQ,CAAA,uBAAuB,EAAEC,KAAM,CAAA,CAAA;EACtD,MAAAC,OAAA,GAAU,MAAML,MAAO,CAAAM,QAAA,CAASC,QAAQP,MAAO,CAAAQ,MAAA,GAASC,SAAmB,CAAA;EAC3E,MAAAC,UAAA,GAAaL,WAAWA,OAAQ,CAAAK,UAAA;EACtCP,OAAA,CAAQQ,OAAQ,CAAA,CAAA;EAEhB,IAAI,CAACD,UAAY,EAAA;IACfZ,MAAA,CAAOc,MAAM,uDAAuD,CAAA;IACpEd,MAAA,CAAOc,MAAM,sBAAsB,CAAA;IACnC;EACF;EAGAd,MAAA,CAAOc,MAAM,EAAE,CAAA;EAEf,MAAMC,GAAM,GAAA,UAAA,CAAWC,MAAM,CAAAjB,KAAA,CAAAkB,MAAA,CAAOL,UAAU,CAAC,EAAA,gBAAA,CAAA;EACzC,MAAAM,cAAA,GAAiB,MAAMjB,MAAA,CAAOkB,MAAO,CAAA;IACzCC,IAAM,EAAA,SAAA;IACNC,OAAS,EAAA,KAAA;IACTC,OAAA,EAAS,sBAAsBN,MAAG,CAAAD,GAAA,EAAA,6GAAA,CAAA,CAE1BC,aAAMO,GAAI,CAAA,MAAM,CAAC,EAAA,wBAAA,CAAA,CAAyBC,IAAK,CAAA;EAAA,CACxD,CAAA;EAED,IAAI,CAACN,cAAgB,EAAA;IACnB;EACF;EAEM,MAAAP,SAAA,GAAYT,MAAO,CAAAQ,MAAA,CAAA,CAAS,CAAAC,SAAA;EAClC,MAAMc,MAAM,YAAa,CAAAT,MAAA,CAAAL,SAAA,CAAA;EAEzBN,OAAA,GAAUL,MAAO,CAAAK,OAAA,CAAQ,oBAAoB,CAAA,CAAEC,KAAM,CAAA,CAAA;EACjD,IAAA;IACI,MAAAJ,MAAA,CAAOwB,OAAQ,CAAA;MAACD,GAAK;MAAAE,MAAA,EAAQ,OAAS;MAAAC,IAAA,EAAM;QAAChB,UAAA,EAAY;MAAI;IAAE,CAAA,CAAA;IACrEP,OAAA,CAAQQ,OAAQ,CAAA,CAAA;WACTgB,GAAK,EAAA;IACZxB,OAAA,CAAQyB,IAAK,CAAA,CAAA;IACP,MAAAD,GAAA;EACR;EAEO7B,MAAA,CAAAc,KAAA,CACL,iEAAiEE,MAAG,CAAAD,GAAA,EAAA,kBAAA,CAAA,CACtE;AACF;"}