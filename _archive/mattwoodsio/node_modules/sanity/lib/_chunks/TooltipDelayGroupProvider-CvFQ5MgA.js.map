{"version":3,"file":"TooltipDelayGroupProvider-CvFQ5MgA.js","sources":["../../src/ui-components/conditionalWrapper/ConditionalWrapper.tsx","../../src/ui-components/button/Button.tsx","../../src/ui-components/dialog/Dialog.tsx","../../src/ui-components/menuButton/MenuButton.tsx","../../src/ui-components/menuGroup/MenuGroup.tsx","../../src/ui-components/menuItem/MenuItem.tsx","../../src/ui-components/popover/Popover.tsx","../../src/ui-components/tab/Tab.tsx","../../src/ui-components/tooltip/constants.ts","../../src/ui-components/tooltip/Tooltip.tsx","../../src/ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider.tsx"],"sourcesContent":["export type ConditionalWrapperRenderWrapperCallback = (children: React.ReactNode) => React.ReactNode\n\n/**\n * A helper component that conditionally wraps its children in a wrapper component.\n *\n * @internal\n */\nexport function ConditionalWrapper({\n  children,\n  condition,\n  wrapper,\n}: {\n  children: React.ReactNode\n  condition: boolean\n  wrapper: ConditionalWrapperRenderWrapperCallback\n}): React.ReactNode {\n  if (!condition) {\n    return children\n  }\n\n  return wrapper(children)\n}\n","/* eslint-disable no-restricted-imports */\n\nimport {Button as UIButton, type ButtonProps as UIButtonProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps, useCallback} from 'react'\nimport styled from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\ntype BaseButtonProps = Pick<\n  UIButtonProps,\n  | 'as'\n  | 'icon'\n  | 'iconRight'\n  | 'justify'\n  | 'loading'\n  | 'mode'\n  | 'paddingY'\n  | 'selected'\n  | 'tone'\n  | 'type'\n  | 'width'\n> & {\n  size?: 'default' | 'large'\n}\n\ntype ButtonWithText = {\n  text: string\n  tooltipProps?: TooltipProps | null\n  icon?: UIButtonProps['icon']\n}\n\ntype IconButton = {\n  text?: undefined\n  icon?: UIButtonProps['icon']\n  /**\n   * When using a button with an icon, tooltipProps are required to enforce consistency in UI.\n   */\n  tooltipProps: TooltipProps | null\n}\n\n/** @internal */\nexport type ButtonProps = BaseButtonProps & (ButtonWithText | IconButton)\n\nconst LARGE_BUTTON_PROPS = {\n  space: 3,\n  padding: 3,\n}\nconst DEFAULT_BUTTON_PROPS = {\n  space: 2,\n  padding: 2,\n}\n\nconst TooltipButtonWrapper = styled.span`\n  display: inline-flex;\n`\n/**\n * Customized Sanity UI <Button> with pre-defined layout options.\n *\n * @internal\n */\nexport const Button = forwardRef(function Button(\n  {\n    size = 'default',\n    mode = 'default',\n    paddingY,\n    tone = 'default',\n    tooltipProps,\n    ...rest\n  }: ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size' | 'title'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This span is needed to make the tooltip work in disabled buttons */}\n          <TooltipButtonWrapper>{children}</TooltipButtonWrapper>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  const sizeProps = size === 'default' ? DEFAULT_BUTTON_PROPS : LARGE_BUTTON_PROPS\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIButton {...rest} {...sizeProps} paddingY={paddingY} ref={ref} mode={mode} tone={tone} />\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  type BoxHeight,\n  Button as UIButton,\n  Dialog as UIDialog,\n  type DialogProps as UIDialogProps,\n  Flex,\n} from '@sanity/ui'\nimport type * as React from 'react'\nimport {type ComponentProps, forwardRef} from 'react'\nimport {useTranslation} from 'react-i18next'\n\n/** @internal */\nexport type DialogProps = Pick<\n  UIDialogProps,\n  | '__unstable_autoFocus'\n  | '__unstable_hideCloseButton'\n  | 'contentRef'\n  | 'header'\n  | 'id'\n  | 'onActivate'\n  | 'onClickOutside'\n  | 'onClose'\n  | 'portal'\n  | 'position'\n  | 'scheme'\n  | 'width'\n> & {\n  /**\n   * Dialog body height.\n   * Set this to 'fill' (i.e. 100%) if you want overflow body content to be contained\n   * and not trigger dynamic border visibility.\n   */\n  bodyHeight?: BoxHeight\n  children?: React.ReactNode\n  footer?: {\n    cancelButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n    confirmButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n  }\n  /**\n   * If enabled, removes all default padding from dialog content.\n   */\n  padding?: boolean\n}\n\n/**\n * Customized Sanity UI <Dialog> that enforces an opinionated footer layout with a max of two buttons (confirm and cancel).\n *\n * @internal\n */\nexport const Dialog = forwardRef(function Dialog(\n  {\n    bodyHeight,\n    children,\n    footer,\n    padding = true,\n    ...props\n  }: DialogProps & Pick<React.HTMLProps<HTMLDivElement>, 'onDragEnter'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {t} = useTranslation()\n\n  return (\n    <UIDialog\n      {...props}\n      animate\n      ref={ref}\n      footer={\n        (footer?.confirmButton || footer?.cancelButton) && (\n          <Flex width=\"full\" gap={3} justify=\"flex-end\" padding={3}>\n            {props.onClose && (\n              <UIButton\n                mode=\"bleed\"\n                padding={2}\n                text={t('common.dialog.cancel-button.text')}\n                tone=\"default\"\n                onClick={props.onClose}\n                {...footer.cancelButton}\n              />\n            )}\n            {footer.confirmButton && (\n              <UIButton\n                mode=\"default\"\n                padding={2}\n                text={t('common.dialog.confirm-button.text')}\n                tone=\"critical\"\n                {...footer.confirmButton}\n              />\n            )}\n          </Flex>\n        )\n      }\n    >\n      <Box height={bodyHeight} padding={padding ? 4 : 0}>\n        {children}\n      </Box>\n    </UIDialog>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  MenuButton as UIMenuButton,\n  type MenuButtonProps as UIMenuButtonProps,\n  type PopoverProps,\n} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\n/** @internal */\nexport type MenuButtonProps = Omit<UIMenuButtonProps, 'popover'> & {\n  popover?: Omit<PopoverProps, 'animate' | 'content' | 'open'>\n}\n\n/**\n * Customized Sanity UI <MenuButton> that enforces popover animation.\n *\n * @internal\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  ref: React.ForwardedRef<HTMLButtonElement>,\n) {\n  return (\n    <UIMenuButton\n      {...props}\n      ref={ref}\n      popover={{\n        ...props.popover,\n        animate: true,\n      }}\n    />\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {MenuGroup as UIMenuGroup, type MenuGroupProps as UIMenuGroupProps} from '@sanity/ui'\nimport type * as React from 'react'\n\n/** @internal */\nexport type MenuGroupProps = Pick<UIMenuGroupProps, 'icon' | 'popover' | 'text' | 'tone'>\n\n/**\n * Customized Sanity UI <MenuGroup> component with pre-defined layout options.\n *\n * @internal\n */\nexport const MenuGroup = (\n  props: MenuGroupProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'tabIndex'>,\n) => {\n  return <UIMenuGroup {...props} fontSize={1} padding={3} />\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  Badge,\n  Box,\n  Flex,\n  Hotkeys,\n  MenuItem as UIMenuItem,\n  type MenuItemProps as UIMenuItemProps,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport type * as React from 'react'\nimport {createElement, forwardRef, isValidElement, useCallback, useMemo} from 'react'\nimport {isValidElementType} from 'react-is'\nimport styled from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\nconst FONT_SIZE = 1\nconst SUBTITLE_FONT_SIZE = 0\n\n/* Using px value here to make title/subtitles align with icon */\nconst SubtitleText = styled(Text)`\n  margin-top: 2px;\n`\n\n/** @internal */\nexport type MenuItemProps = Pick<\n  UIMenuItemProps,\n  'as' | 'icon' | 'iconRight' | 'pressed' | 'selected' | 'tone' | 'hotkeys'\n> & {\n  badgeText?: string\n  /**\n   * Usage of `children` is not supported, import `MenuItem` from `@sanity/ui` instead.\n   */\n  children?: undefined\n  /**\n   * Previews should be 25x25.\n   */\n  preview?: React.ReactNode\n  /**\n   * Optional render callback which receives menu item content.\n   */\n  renderMenuItem?: (menuItemContent: React.JSX.Element) => React.ReactNode\n  text?: string\n  tooltipProps?: TooltipProps | null\n  /**\n   * Optional subtitle prop for the menu item.\n   * While not recommended, it is utilized for the workspace menu button.\n   */\n  __unstable_subtitle?: string\n  /**\n   * An optional property to adjust spacing in the preview between the icon and the text.\n   * Not recommended, but is applied to the workspace menu button..\n   */\n  __unstable_space?: number\n}\n\nconst PreviewWrapper = styled(Box)`\n  height: 25px;\n  width: 25px;\n  overflow: hidden;\n`\n\n/**\n * Customized Sanity UI <MenuItem> that restricts usage of `children` to encourage simple,\n * single line menu items.\n *\n * The workspace menu button needed a subtitle - hence, the StudioUI MenuIten now takes a subtitle prop.\n * This is only an escape hatch for the workspace menu button and is not recommended for general use.\n *\n * It also accepts a prop to attach tooltips as well as custom badges too.\n *\n * @internal\n */\nexport const MenuItem = forwardRef(function MenuItem(\n  {\n    badgeText,\n    children: childrenProp,\n    disabled,\n    hotkeys,\n    icon,\n    iconRight,\n    preview = null,\n    renderMenuItem,\n    text,\n    tooltipProps,\n    __unstable_subtitle,\n    __unstable_space,\n    ...rest\n  }: MenuItemProps &\n    Omit<\n      React.HTMLProps<HTMLDivElement>,\n      'as' | 'height' | 'ref' | 'selected' | 'tabIndex' | 'size'\n    >,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const menuItemContent = useMemo(() => {\n    return (\n      <Flex align=\"center\" gap={2}>\n        {preview && (\n          <PreviewWrapper\n            style={{opacity: disabled ? 0.25 : undefined}}\n            paddingRight={__unstable_space ? 1 : 0}\n          >\n            <Flex align=\"center\" height=\"fill\" justify=\"center\">\n              {preview}\n            </Flex>\n          </PreviewWrapper>\n        )}\n        {icon && (\n          <Box paddingRight={1}>\n            <Text size={FONT_SIZE}>\n              {isValidElement(icon) && icon}\n              {isValidElementType(icon) && createElement(icon)}\n            </Text>\n          </Box>\n        )}\n        {text && (\n          <Stack\n            flex={1}\n            space={__unstable_subtitle ? 1 : 2}\n            paddingLeft={__unstable_subtitle ? 1 : 0}\n          >\n            <Text size={FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\">\n              {text}\n            </Text>\n            {__unstable_subtitle && (\n              <SubtitleText size={SUBTITLE_FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\" muted>\n                {__unstable_subtitle}\n              </SubtitleText>\n            )}\n          </Stack>\n        )}\n        {(badgeText || hotkeys || iconRight) && (\n          <Flex align=\"center\" gap={3} marginLeft={3}>\n            {hotkeys && <Hotkeys keys={hotkeys} style={{marginTop: -4, marginBottom: -4}} />}\n\n            {badgeText && (\n              <Badge fontSize={0} style={{marginTop: -4, marginBottom: -4}}>\n                {badgeText}\n              </Badge>\n            )}\n\n            {iconRight && (\n              <Text size={FONT_SIZE}>\n                {isValidElement(iconRight) && iconRight}\n                {isValidElementType(iconRight) && createElement(iconRight)}\n              </Text>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    )\n  }, [\n    preview,\n    disabled,\n    __unstable_space,\n    icon,\n    text,\n    __unstable_subtitle,\n    badgeText,\n    hotkeys,\n    iconRight,\n  ])\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuItem\n        disabled={disabled}\n        paddingLeft={preview ? 1 : 3}\n        paddingRight={3}\n        paddingY={preview ? 1 : 3}\n        ref={ref}\n        {...rest}\n      >\n        {typeof childrenProp === 'undefined' && typeof renderMenuItem === 'function'\n          ? renderMenuItem(menuItemContent)\n          : menuItemContent}\n      </UIMenuItem>\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {Popover as UIPopover, type PopoverProps as UIPopoverProps} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\n/** @internal */\nexport type PopoverProps = Omit<UIPopoverProps, 'animate'>\n\n/**\n * Customized Sanity UI <Popover> that forces `animate=true`\n *\n * All Popovers in the studio should be animated.\n *\n * @internal\n */\nexport const Popover = forwardRef(function Popover(\n  props: PopoverProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'width'>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return <UIPopover {...props} animate ref={ref} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {Tab as UITab, type TabProps as UITabProps} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\n/**\n * @internal\n *\n * Padding and font sizes are fixed in Studio UI <Tab> components.\n */\nexport type TabProps = Pick<\n  UITabProps,\n  'aria-controls' | 'focused' | 'icon' | 'id' | 'label' | 'selected' | 'tone'\n>\n\n/**\n * Customized Sanity UI <Tab> with limited layout options.\n *\n * @internal\n */\nexport const Tab = forwardRef(function Tab(\n  {tone = 'default', ...props}: TabProps & Omit<React.HTMLProps<HTMLButtonElement>, 'as' | 'size'>,\n  ref: React.ForwardedRef<HTMLButtonElement>,\n) {\n  return <UITab {...props} muted padding={2} ref={ref} tone={tone} />\n})\n","export const TOOLTIP_DELAY_PROPS = {\n  open: 400,\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  Flex,\n  Hotkeys,\n  type HotkeysProps,\n  Text,\n  Tooltip as UITooltip,\n  type TooltipProps as UITooltipProps,\n} from '@sanity/ui'\nimport type * as React from 'react'\nimport {forwardRef} from 'react'\n\nimport {TOOLTIP_DELAY_PROPS} from './constants'\n\n/** @internal */\nexport type TooltipProps = Omit<UITooltipProps, 'arrow' | 'padding' | 'shadow'> & {\n  hotkeys?: HotkeysProps['keys']\n}\n\nconst TOOLTIP_SHARED_PROPS: UITooltipProps = {\n  animate: true,\n  arrow: false,\n  boundaryElement: null,\n  delay: TOOLTIP_DELAY_PROPS,\n  fallbackPlacements: ['bottom-start', 'bottom-end', 'top-start', 'top-end'],\n  placement: 'bottom',\n  portal: true,\n}\n\n/**\n * Customized Sanity UI <Tooltip> with limited layout options and support for showing hotkeys.\n *\n * In just about all cases, its strongly recommended that you pass a string to the `content` prop.\n * This helps simplify i18n and encourages short and concise.\n *\n * Passing ReactNode values to `content` is supported, but discouraged.\n *\n * @internal\n */\nexport const Tooltip = forwardRef(function Tooltip(\n  props: TooltipProps,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {content, hotkeys, ...rest} = props\n\n  if (typeof content === 'string') {\n    return (\n      <UITooltip\n        {...TOOLTIP_SHARED_PROPS}\n        content={\n          <Flex align=\"center\">\n            {content && (\n              <Box flex={1} padding={1}>\n                <Text size={1}>{content}</Text>\n              </Box>\n            )}\n            {hotkeys && (\n              <Box flex=\"none\">\n                <Hotkeys keys={hotkeys} />\n              </Box>\n            )}\n          </Flex>\n        }\n        padding={1}\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n\n  return <UITooltip {...TOOLTIP_SHARED_PROPS} content={content} ref={ref} {...rest} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  TooltipDelayGroupProvider as UITooltipDelayGroupProvider,\n  type TooltipDelayGroupProviderProps as UITooltipDelayGroupProviderProps,\n} from '@sanity/ui'\n\nimport {TOOLTIP_DELAY_PROPS} from '../tooltip/constants'\n\n/** @internal */\nexport type TooltipDelayGroupProviderProps = Omit<UITooltipDelayGroupProviderProps, 'delay'>\n\n/**\n * Opinionated Sanity UI <TooltipDelayGroupProvider> which forces the same delay to all tooltips.\n *\n * @internal\n */\nexport const TooltipDelayGroupProvider = (props: TooltipDelayGroupProviderProps) => {\n  return (\n    <UITooltipDelayGroupProvider delay={TOOLTIP_DELAY_PROPS}>\n      {props.children}\n    </UITooltipDelayGroupProvider>\n  )\n}\n"],"names":["ConditionalWrapper","_ref","children","condition","wrapper","_a","LARGE_BUTTON_PROPS","space","padding","DEFAULT_BUTTON_PROPS","TooltipButtonWrapper","styled","span","__template","Button","forwardRef","Button2","_ref2","ref","size","mode","paddingY","tone","tooltipProps","rest","renderWrapper","useCallback","jsx","Tooltip","content","portal","sizeProps","UIButton","Dialog","Dialog2","_ref3","bodyHeight","footer","props","t","useTranslation","UIDialog","animate","confirmButton","cancelButton","jsxs","Flex","width","gap","justify","onClose","text","onClick","Box","height","MenuButton","UIMenuButton","popover","MenuGroup","UIMenuGroup","fontSize","_b","FONT_SIZE","SUBTITLE_FONT_SIZE","SubtitleText","Text","PreviewWrapper","MenuItem","MenuItem2","_ref4","badgeText","childrenProp","disabled","hotkeys","icon","iconRight","preview","renderMenuItem","__unstable_subtitle","__unstable_space","menuItemContent","useMemo","align","style","opacity","paddingRight","isValidElement","isValidElementType","createElement","Stack","flex","paddingLeft","textOverflow","weight","muted","marginLeft","Hotkeys","keys","marginTop","marginBottom","Badge","UIMenuItem","Popover","UIPopover","Tab","Tab2","_ref5","UITab","TOOLTIP_DELAY_PROPS","open","TOOLTIP_SHARED_PROPS","arrow","boundaryElement","delay","fallbackPlacements","placement","UITooltip","TooltipDelayGroupProvider","UITooltipDelayGroupProvider"],"mappings":"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"}