{"version":3,"file":"index-DR3UC8pX.js","sources":["../../src/structure/panes/list/ListPaneContent.tsx","../../src/structure/panes/list/ListPaneHeader.tsx","../../src/structure/panes/list/ListPane.tsx"],"sourcesContent":["import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  CommandList,\n  type CommandListItemContext,\n  type GeneralPreviewLayoutKey,\n  useGetI18nText,\n} from 'sanity'\nimport styled from 'styled-components'\n\nimport {PaneContent, PaneItem, usePaneLayout} from '../../components'\nimport {type PaneListItem, type PaneListItemDivider} from '../../types'\n\ninterface ListPaneContentProps {\n  childItemId?: string\n  isActive?: boolean\n  items: (PaneListItem<unknown> | PaneListItemDivider)[] | undefined\n  layout?: GeneralPreviewLayoutKey\n  showIcons: boolean\n  title: string\n}\n\nconst Divider = styled.hr`\n  background-color: var(--card-border-color);\n  height: 1px;\n  margin: 0;\n  border: none;\n`\n\n/**\n * @internal\n */\nexport function ListPaneContent(props: ListPaneContentProps) {\n  const {childItemId, items, isActive, layout, showIcons, title} = props\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const getI18nText = useGetI18nText(\n    items?.filter(\n      (item): item is Exclude<typeof item, {type: 'divider'}> => item.type !== 'divider',\n    ),\n  )\n\n  const getItemDisabled = useCallback(\n    (itemIndex: number) => {\n      return items?.find((_, i) => i === itemIndex)?.type === 'divider'\n    },\n    [items],\n  )\n\n  const shouldShowIconForItem = useCallback(\n    (item: PaneListItem): boolean => {\n      const itemShowIcon = item.displayOptions?.showIcon\n\n      // Specific true/false on item should have precedence over list setting\n      if (typeof itemShowIcon !== 'undefined') {\n        return itemShowIcon !== false // Boolean(item.icon)\n      }\n\n      // If no item setting is defined, defer to the pane settings\n      return showIcons !== false // Boolean(item.icon)\n    },\n    [showIcons],\n  )\n\n  const renderItem = useCallback(\n    (item: PaneListItem<unknown> | PaneListItemDivider, ctx: CommandListItemContext) => {\n      const {virtualIndex: itemIndex} = ctx\n\n      if (item.type === 'divider') {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Box key={`divider-${itemIndex}`} marginBottom={1}>\n            <Divider />\n          </Box>\n        )\n      }\n\n      const pressed = !isActive && childItemId === item.id\n      const selected = isActive && childItemId === item.id\n      // If this is a document list item, pass on the ID and type,\n      // otherwise leave it undefined to use the passed title and gang\n      const value =\n        item._id && item.schemaType\n          ? {_id: item._id, _type: item.schemaType.name, title: item.title}\n          : undefined\n\n      return (\n        <PaneItem\n          icon={shouldShowIconForItem(item) ? item.icon : false}\n          id={item.id}\n          key={item.id}\n          layout={layout}\n          marginBottom={1}\n          pressed={pressed}\n          schemaType={item.schemaType}\n          selected={selected}\n          title={getI18nText(item).title}\n          value={value}\n        />\n      )\n    },\n    [childItemId, getI18nText, isActive, layout, shouldShowIconForItem],\n  )\n\n  return (\n    <PaneContent overflow={layoutCollapsed ? 'hidden' : 'auto'}>\n      {items && items.length > 0 && (\n        <CommandList\n          activeItemDataAttr=\"data-hovered\"\n          ariaLabel={title}\n          canReceiveFocus\n          getItemDisabled={getItemDisabled}\n          itemHeight={51}\n          items={items}\n          onlyShowSelectionWhenActive\n          paddingBottom={1}\n          paddingX={3}\n          renderItem={renderItem}\n          wrapAround={false}\n        />\n      )}\n    </PaneContent>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions, usePane} from '../../components'\nimport {type PaneMenuItem, type PaneMenuItemGroup} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface ListPaneHeaderProps {\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport const ListPaneHeader = ({index, menuItems, menuItemGroups, title}: ListPaneHeaderProps) => {\n  const {features} = useStructureTool()\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  return (\n    <PaneHeader\n      actions={<PaneHeaderActions menuItems={menuItems} menuItemGroups={menuItemGroups} />}\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      tabIndex={tabIndex}\n      title={title}\n    />\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {_DEBUG} from '../../constants'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {ListPaneContent} from './ListPaneContent'\nimport {ListPaneHeader} from './ListPaneHeader'\n\ntype ListPaneProps = BaseStructureToolPaneProps<'list'>\n\n/**\n * @internal\n */\nexport function ListPane(props: ListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n\n  const {defaultLayout, displayOptions, items, menuItems, menuItemGroups} = pane\n  const showIcons = displayOptions?.showIcons !== false\n  const {title} = useI18nText(pane)\n\n  return (\n    <Pane\n      currentMaxWidth={350}\n      data-testid=\"structure-tool-list-pane\"\n      data-ui=\"ListPane\"\n      id={paneKey}\n      maxWidth={640}\n      minWidth={320}\n      selected={isSelected}\n    >\n      {_DEBUG && (\n        <Card padding={4} tone=\"transparent\">\n          <Code>{pane.source || '(none)'}</Code>\n        </Card>\n      )}\n\n      <ListPaneHeader\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <ListPaneContent\n        childItemId={childItemId}\n        isActive={isActive}\n        items={items}\n        layout={defaultLayout}\n        key={paneKey}\n        showIcons={showIcons}\n        title={title}\n      />\n    </Pane>\n  )\n}\n"],"names":["_a","Divider","styled","hr","__template","ListPaneContent","props","childItemId","items","isActive","layout","showIcons","title","collapsed","layoutCollapsed","usePaneLayout","getI18nText","useGetI18nText","filter","item","type","getItemDisabled","useCallback","itemIndex","find","_","i","shouldShowIconForItem","itemShowIcon","displayOptions","showIcon","renderItem","ctx","virtualIndex","jsx","Box","marginBottom","children","concat","pressed","id","selected","value","_id","schemaType","_type","name","PaneItem","icon","PaneContent","overflow","length","CommandList","activeItemDataAttr","ariaLabel","canReceiveFocus","itemHeight","onlyShowSelectionWhenActive","paddingBottom","paddingX","wrapAround","ListPaneHeader","_ref","index","menuItems","menuItemGroups","features","useStructureTool","isLast","usePane","tabIndex","PaneHeader","actions","PaneHeaderActions","backButton","Button","as","BackLink","ArrowLeftIcon","mode","tooltipProps","content","ListPane","isSelected","pane","paneKey","defaultLayout","useI18nText","jsxs","Pane","currentMaxWidth","maxWidth","minWidth","_DEBUG"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,EAAA;AAsBA,MAAMC,OAAA,GAAUC,eAAAA,CAAAA,OAAO,CAAAC,EAAA,CAAPH,EAAS,KAAAA,EAAA,GAAAI,UAAA,CAAA,CAAA,kGAAA,CAAA,CAAA,CAAA,CAAA;AAUlB,SAASC,gBAAgBC,KAA6B,EAAA;EAC3D,MAAM;IAACC,WAAa;IAAAC,KAAA;IAAOC;IAAUC,MAAQ;IAAAC,SAAA;IAAWC;EAAS,CAAA,GAAAN,KAAA;EACjE,MAAM;IAACO,SAAA,EAAWC;EAAe,CAAA,GAAIC,qBAAc,CAAAA,aAAA,CAAA,CAAA;EACnD,MAAMC,WAAc,GAAAC,MAAA,CAAAA,cAAA,CAClBT,KAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAAU,MAAA,CACJC,IAA0D,IAAAA,IAAA,CAAKC,IAAS,KAAA,SAAA,CAAA,CAE7E;EAEA,MAAMC,eAAkB,GAAAC,KAAA,CAAAA,WAAA,CACrBC,SAAsB,IAAA;IA1C3BvB,IAAAA,GAAAA;IA2CaA,OAAAA,CAAAA,CAAAA,GAAAA,GAAAQ,KAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAAgB,IAAA,CAAK,CAACC,CAAA,EAAGC,MAAMA,CAAM,KAAAH,SAAA,CAAA,KAA5B,IAAAvB,GAAAA,KAAAA,CAAAA,GAAAA,GAAAA,CAAwCoB,IAAS,MAAA,SAAA;EAC1D,CAAA,EACA,CAACZ,KAAK,CAAA,CACR;EAEA,MAAMmB,qBAAwB,GAAAL,KAAA,CAAAA,WAAA,CAC3BH,IAAgC,IAAA;IAjDrCnB,IAAAA,GAAAA;IAkDM,MAAM4B,YAAe5B,GAAAA,CAAAA,GAAAA,GAAAmB,IAAK,CAAAU,cAAA,KAAL,gBAAA7B,GAAqB,CAAA8B,QAAA;IAGtC,IAAA,OAAOF,iBAAiB,WAAa,EAAA;MACvC,OAAOA,YAAiB,KAAA,KAAA;IAC1B;IAGA,OAAOjB,SAAc,KAAA,KAAA;EACvB,CAAA,EACA,CAACA,SAAS,CAAA,CACZ;EAEA,MAAMoB,UAAa,GAAAT,KAAA,CAAAA,WAAA,CACjB,CAACH,MAAmDa,GAAgC,KAAA;IAC5E,MAAA;MAACC,YAAc,EAAAV;IAAa,CAAA,GAAAS,GAAA;IAE9B,IAAAb,IAAA,CAAKC,SAAS,SAAW,EAAA;MAC3B;QAAA;QAEEc;QAAAA,UAAAA,CAAAA,GAAA,CAACC,EAAAA,CAAAA;UAAiCC,YAAc,EAAA,CAAA;UAC9CC,wCAACpC,OAAQ,EAAA,CAAA,CAAA;QAAA,CAAA,EADD,WAAWqC,MAErB,CAAAf,SAAA,CAAA;MAAA;IAEJ;IAEA,MAAMgB,OAAU,GAAA,CAAC9B,QAAY,IAAAF,WAAA,KAAgBY,IAAK,CAAAqB,EAAA;IAC5C,MAAAC,QAAA,GAAWhC,QAAY,IAAAF,WAAA,KAAgBY,IAAK,CAAAqB,EAAA;IAGlD,MAAME,QACJvB,IAAK,CAAAwB,GAAA,IAAOxB,IAAK,CAAAyB,UAAA,GACb;MAACD,GAAK,EAAAxB,IAAA,CAAKwB,GAAK;MAAAE,KAAA,EAAO1B,KAAKyB,UAAW,CAAAE,IAAA;MAAMlC,KAAO,EAAAO,IAAA,CAAKP;KACzD,GAAA,KAAA,CAAA;IAGJ,sBAAAsB,UAAA,CAAAA,GAAA,CAACa,qBAAA,CAAAA,QAAA,EAAA;MACCC,IAAM,EAAArB,qBAAA,CAAsBR,IAAI,CAAA,GAAIA,KAAK6B,IAAO,GAAA,KAAA;MAChDR,IAAIrB,IAAK,CAAAqB,EAAA;MAET9B,MAAA;MACA0B,YAAc,EAAA,CAAA;MACdG,OAAA;MACAK,YAAYzB,IAAK,CAAAyB,UAAA;MACjBH,QAAA;MACA7B,KAAA,EAAOI,WAAY,CAAAG,IAAI,CAAE,CAAAP,KAAA;MACzB8B;IAAA,CAAA,EAPKvB,IAAK,CAAAqB,EAAA,CAQZ;EAEJ,CAAA,EACA,CAACjC,WAAA,EAAaS,WAAa,EAAAP,QAAA,EAAUC,QAAQiB,qBAAqB,CAAA,CACpE;EAGE,OAAA,eAAAO,UAAA,CAAAA,GAAA,CAACe;IAAYC,QAAU,EAAApC,eAAA,GAAkB,WAAW,MACjD;IAAAuB,QAAA,EAAA7B,KAAA,IAASA,KAAM,CAAA2C,MAAA,GAAS,CACvB,IAAA,eAAAjB,UAAA,CAAAA,GAAA,CAACkB,MAAA,CAAAA,WAAA,EAAA;MACCC,kBAAmB,EAAA,cAAA;MACnBC,SAAW,EAAA1C,KAAA;MACX2C,eAAe,EAAA,IAAA;MACflC,eAAA;MACAmC,UAAY,EAAA,EAAA;MACZhD,KAAA;MACAiD,2BAA2B,EAAA,IAAA;MAC3BC,aAAe,EAAA,CAAA;MACfC,QAAU,EAAA,CAAA;MACV5B,UAAA;MACA6B,UAAY,EAAA;IAAA,CAGlB;EAAA,CAAA,CAAA;AAEJ;AC5GO,MAAMC,iBAAiBC,IAAA,IAAoE;EAAA,IAAnE;IAACC;IAAOC,SAAW;IAAAC,cAAA;IAAgBrD;GAAgC,GAAAkD,IAAA;EAC1F,MAAA;IAACI;GAAQ,GAAIC,qBAAAA,CAAAA,gBAAiB,EAAA;EACpC,MAAM;IAACtD,SAAA;IAAWuD;EAAM,CAAA,GAAIC,qBAAQ,CAAAA,OAAA,CAAA,CAAA;EAEpC,MAAMC,QAAW,GAAAF,MAAA,IAAU,CAACvD,SAAA,GAAY,CAAK,CAAA,GAAA,CAAA;EAG3C,sBAAAqB,UAAA,CAAAA,GAAA,CAACqC,qBAAA,CAAAA,UAAA,EAAA;IACCC,OAAS,EAAAtC,eAAAA,UAAAA,CAAAA,GAAA,CAACuC,qBAAAA,CAAAA,iBAAkB,EAAA;MAAAT,SAAA;MAAsBC;IAAgC,CAAA,CAAA;IAClFS,UACE,EAAAR,QAAA,CAASQ,UACT,IAAAX,KAAA,GAAQ,CACN,IAAA,eAAA7B,UAAA,CAAAA,GAAA,CAACyC,yBAAA,CAAAA,MAAA,EAAA;MACCC,EAAI,EAAAC,qBAAA,CAAAA,QAAA;MACJ,SAAQ,EAAA,GAAA;MACR7B,IAAM,EAAA8B,KAAA,CAAAA,aAAA;MACNC,IAAK,EAAA,OAAA;MACLC,YAAA,EAAc;QAACC,OAAA,EAAS;MAAM;IAAA,CAChC,CAAA;IAGJX,QAAA;IACA1D;EAAA,CAAA,CACF;AAEJ,CAAA;ACzBO,SAASsE,SAAS5E,KAAsB,EAAA;EAC7C,MAAM;IAACC,WAAa;IAAAwD,KAAA;IAAOtD;IAAU0E,UAAY;IAAAC,IAAA;IAAMC;EAAW,CAAA,GAAA/E,KAAA;EAElE,MAAM;IAACgF,aAAe;IAAAzD,cAAA;IAAgBrB,KAAO;IAAAwD,SAAA;IAAWC;EAAkB,CAAA,GAAAmB,IAAA;EACpE,MAAAzE,SAAA,GAAA,CAAYkB,iDAAgBlB,SAAc,MAAA,KAAA;EAChD,MAAM;IAACC;EAAA,CAAS,GAAA2E,MAAA,CAAAA,WAAA,CAAYH,IAAI,CAAA;EAG9B,sBAAAI,UAAA,CAAAA,IAAA,CAACC,qBAAA,CAAAA,IAAA,EAAA;IACCC,eAAiB,EAAA,GAAA;IACjB,aAAY,EAAA,0BAAA;IACZ,SAAQ,EAAA,UAAA;IACRlD,EAAI,EAAA6C,OAAA;IACJM,QAAU,EAAA,GAAA;IACVC,QAAU,EAAA,GAAA;IACVnD,QAAU,EAAA0C,UAAA;IAET9C,QAAA,EAAA,CACCwD,4BAAA,EAEA,eAGF3D,UAAA,CAAAA,GAAA,CAAC2B,cAAA,EAAA;MACCE,KAAA;MACAC,SAAA;MACAC,cAAA;MACArD;IAAA,CACF,CAAA,EAAA,eAEAsB,UAAA,CAAAA,GAAA,CAAC7B,eAAA,EAAA;MACCE,WAAA;MACAE,QAAA;MACAD,KAAA;MACAE,MAAQ,EAAA4E,aAAA;MAER3E,SAAA;MACAC;IAAA,CAAA,EAFKyE,OAGP,CAAA;EAAA,CAAA,CACF;AAEJ;"}