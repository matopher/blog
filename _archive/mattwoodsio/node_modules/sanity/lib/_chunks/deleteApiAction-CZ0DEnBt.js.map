{"version":3,"file":"deleteApiAction-CZ0DEnBt.js","sources":["../../src/_internal/cli/actions/graphql/deleteApiAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\nimport {type SanityClient} from '@sanity/client'\nimport {hideBin} from 'yargs/helpers'\nimport yargs from 'yargs/yargs'\n\nimport {getGraphQLAPIs} from './getGraphQLAPIs'\n\nexport interface DeleteGraphQLApiFlags {\n  project?: string\n  dataset?: string\n  tag?: string\n  force?: boolean\n}\n\nfunction parseCliFlags(args: {argv?: string[]}) {\n  return yargs(hideBin(args.argv || process.argv).slice(2))\n    .option('api', {type: 'string'})\n    .option('project', {type: 'string'})\n    .option('dataset', {type: 'string'})\n    .option('tag', {type: 'string', default: 'default'})\n    .option('force', {type: 'boolean'}).argv\n}\n\nexport default async function deleteGraphQLApi(\n  args: CliCommandArguments<DeleteGraphQLApiFlags>,\n  context: CliCommandContext,\n): Promise<void> {\n  // Reparsing CLI flags for better control of binary flags\n  const flags = await parseCliFlags(args)\n  const {apiClient, output, prompt} = context\n\n  // Use explicitly defined flags where possible\n  let projectId = flags.project\n  let dataset = flags.dataset\n  let tag = flags.tag\n\n  // If specifying --api, use it for the flags not provided\n  if (flags.api) {\n    const apiDefs = await getGraphQLAPIs(context)\n    const apiDef = apiDefs.find((def) => def.id === flags.api)\n    if (!apiDef) {\n      throw new Error(`GraphQL API \"${flags.api}\" not found`)\n    }\n\n    if (projectId) {\n      output.warn(`Both --api and --project specified, using --project ${projectId}`)\n    } else {\n      projectId = apiDef.projectId\n    }\n\n    if (dataset) {\n      output.warn(`Both --api and --dataset specified, using --dataset ${dataset}`)\n    } else {\n      dataset = apiDef.dataset\n    }\n\n    if (tag && apiDef.tag) {\n      output.warn(`Both --api and --tag specified, using --tag ${tag}`)\n    } else {\n      tag = apiDef.tag || 'default'\n    }\n  }\n\n  // If neither --api nor --project/dataset is specified, use the CLI config for values\n  let client: SanityClient\n  if (!projectId || !dataset) {\n    client = apiClient({\n      requireUser: true,\n      requireProject: true,\n    }).config({apiVersion: '2023-08-01'})\n\n    projectId = projectId || client.config().projectId\n    dataset = dataset || client.config().dataset\n  } else {\n    client = apiClient({requireProject: false, requireUser: true}).config({projectId, dataset})\n  }\n\n  const confirmMessage =\n    tag === 'default'\n      ? `Are you absolutely sure you want to delete the current GraphQL API connected to the \"${dataset}\" dataset in project ${projectId}?`\n      : `Are you absolutely sure you want to delete the GraphQL API connected to the \"${dataset}\" dataset in project ${projectId}, tagged \"${tag}\"?`\n\n  const confirmedDelete =\n    flags.force ||\n    (await prompt.single({\n      type: 'confirm',\n      message: confirmMessage,\n      default: false,\n    }))\n\n  if (!confirmedDelete) {\n    return\n  }\n\n  if (projectId !== client.config().projectId) {\n    client = client.clone().config({projectId})\n  }\n\n  try {\n    await client.request({\n      url: `/apis/graphql/${dataset}/${tag}`,\n      method: 'DELETE',\n    })\n  } catch (err) {\n    throw err\n  }\n\n  output.print('GraphQL API deleted')\n}\n"],"names":["parseCliFlags","args","yargs","default","hideBin","argv","process","slice","option","type","deleteGraphQLApi","context","flags","apiClient","output","prompt","projectId","project","dataset","tag","api","apiDefs","getGraphQLAPIs","apiDef","find","def","id","Error","concat","warn","client","requireUser","requireProject","config","apiVersion","confirmMessage","confirmedDelete","force","single","message","clone","request","url","method","err","print"],"mappings":"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"}