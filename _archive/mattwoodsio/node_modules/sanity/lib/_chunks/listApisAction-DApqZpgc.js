'use strict';

var _internal = require('./_internal-hHVP4WHZ.js');
async function listGraphQLApis(args, context) {
  const {
    apiClient,
    output,
    chalk
  } = context;
  const client = apiClient({
    requireUser: true,
    requireProject: true
  }).config({
    apiVersion: "2023-08-01"
  });
  let endpoints;
  try {
    endpoints = await client.request({
      url: "/apis/graphql",
      method: "GET"
    });
  } catch (err) {
    throw err;
  }
  if (!endpoints || endpoints.length === 0) {
    output.print("This project doesn't have any GraphQL endpoints deployed.");
    return;
  }
  output.print("Here are the GraphQL endpoints deployed for this project:");
  endpoints.forEach((endpoint, index) => {
    const {
      dataset,
      tag
    } = endpoint;
    const url = _internal.getClientUrl(client, "graphql/".concat(dataset, "/").concat(tag));
    output.print("".concat(index + 1, ".  ").concat(chalk.bold("Dataset:"), "     ").concat(dataset));
    output.print("    ".concat(chalk.bold("Tag:"), "         ").concat(tag));
    output.print("    ".concat(chalk.bold("Generation:"), "  ").concat(endpoint.generation));
    output.print("    ".concat(chalk.bold("Playground:"), "  ").concat(endpoint.playgroundEnabled));
    output.print("    ".concat(chalk.bold("URL:"), "  ").concat(url, "\n"));
  });
}
exports.default = listGraphQLApis;
//# sourceMappingURL=listApisAction-DApqZpgc.js.map
