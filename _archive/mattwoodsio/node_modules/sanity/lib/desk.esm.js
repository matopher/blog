import { ComponentBuilder as ComponentBuilder$1, ComponentViewBuilder as ComponentViewBuilder$1, ConfirmDeleteDialogContainer, DEFAULT_INTENT_HANDLER as DEFAULT_INTENT_HANDLER$1, StructureToolProvider, DocumentBuilder as DocumentBuilder$1, DocumentInspectorHeader as DocumentInspectorHeader$1, DocumentListBuilder as DocumentListBuilder$1, DocumentListItemBuilder as DocumentListItemBuilder$1, DocumentListPane as DocumentListPane$1, DocumentPane as DocumentPane$1, DocumentPaneProvider as DocumentPaneProvider$1, DocumentTypeListBuilder as DocumentTypeListBuilder$1, FormViewBuilder as FormViewBuilder$1, GenericListBuilder as GenericListBuilder$1, GenericViewBuilder as GenericViewBuilder$1, HELP_URL as HELP_URL$1, InitialValueTemplateItemBuilder as InitialValueTemplateItemBuilder$1, ListBuilder as ListBuilder$1, ListItemBuilder as ListItemBuilder$1, MenuItemBuilder as MenuItemBuilder$1, MenuItemGroupBuilder as MenuItemGroupBuilder$1, PaneLayout as PaneLayout$1, PaneRouterContext as PaneRouterContext$1, SerializeError as SerializeError$1, component as component$1, createStructureBuilder as createStructureBuilder$1, defaultInitialValueTemplateItems as defaultInitialValueTemplateItems$1, defaultIntentChecker as defaultIntentChecker$1, structureTool, documentFromEditor as documentFromEditor$1, documentFromEditorWithInitialValue as documentFromEditorWithInitialValue$1, form as form$1, getOrderingMenuItem as getOrderingMenuItem$1, getOrderingMenuItemsForSchemaType as getOrderingMenuItemsForSchemaType$1, getTypeNamesFromFilter as getTypeNamesFromFilter$1, isDocumentListItem as isDocumentListItem$1, maybeSerializeInitialValueTemplateItem as maybeSerializeInitialValueTemplateItem$1, maybeSerializeMenuItem as maybeSerializeMenuItem$1, maybeSerializeMenuItemGroup as maybeSerializeMenuItemGroup$1, maybeSerializeView as maybeSerializeView$1, menuItemsFromInitialValueTemplateItems as menuItemsFromInitialValueTemplateItems$1, shallowIntentChecker as shallowIntentChecker$1, structureLocaleNamespace as structureLocaleNamespace$1, useStructureTool, useDocumentPane as useDocumentPane$1, useDocumentTitle as useDocumentTitle$1, usePaneRouter as usePaneRouter$1 } from './_chunks/StructureToolProvider-DbWjiGhG.js';
import 'react/jsx-runtime';
import '@sanity/icons';
import '@sanity/ui';
import 'react';
import './_chunks/TooltipDelayGroupProvider-CvFQ5MgA.js';
import 'sanity';
import '@sanity/telemetry/react';
import 'lodash/template.js';
import 'lodash/isEqual.js';
import 'sanity/router';
import 'react-rx';
import 'rxjs';
import '@sanity/types';
import '@sanity/util/paths';
import 'lodash/omit.js';
import 'lodash/isNumber.js';
import 'lodash/isString.js';
import '@sanity/uuid';
import 'lodash/findIndex.js';
const ComponentBuilder = ComponentBuilder$1;
const ComponentViewBuilder = ComponentViewBuilder$1;
const ConfirmDeleteDialog = ConfirmDeleteDialogContainer;
const DEFAULT_INTENT_HANDLER = DEFAULT_INTENT_HANDLER$1;
const DeskToolProvider = StructureToolProvider;
const DocumentBuilder = DocumentBuilder$1;
const DocumentInspectorHeader = DocumentInspectorHeader$1;
const DocumentListBuilder = DocumentListBuilder$1;
const DocumentListItemBuilder = DocumentListItemBuilder$1;
const DocumentListPane = DocumentListPane$1;
const DocumentPane = DocumentPane$1;
const DocumentPaneProvider = DocumentPaneProvider$1;
const DocumentTypeListBuilder = DocumentTypeListBuilder$1;
const FormViewBuilder = FormViewBuilder$1;
const GenericListBuilder = GenericListBuilder$1;
const GenericViewBuilder = GenericViewBuilder$1;
const HELP_URL = HELP_URL$1;
const InitialValueTemplateItemBuilder = InitialValueTemplateItemBuilder$1;
const ListBuilder = ListBuilder$1;
const ListItemBuilder = ListItemBuilder$1;
const MenuItemBuilder = MenuItemBuilder$1;
const MenuItemGroupBuilder = MenuItemGroupBuilder$1;
const PaneLayout = PaneLayout$1;
const PaneRouterContext = PaneRouterContext$1;
const SerializeError = SerializeError$1;
const component = component$1;
const createStructureBuilder = createStructureBuilder$1;
const defaultInitialValueTemplateItems = defaultInitialValueTemplateItems$1;
const defaultIntentChecker = defaultIntentChecker$1;
const deskTool = structureTool;
const documentFromEditor = documentFromEditor$1;
const documentFromEditorWithInitialValue = documentFromEditorWithInitialValue$1;
const form = form$1;
const getOrderingMenuItem = getOrderingMenuItem$1;
const getOrderingMenuItemsForSchemaType = getOrderingMenuItemsForSchemaType$1;
const getTypeNamesFromFilter = getTypeNamesFromFilter$1;
const isDocumentListItem = isDocumentListItem$1;
const maybeSerializeInitialValueTemplateItem = maybeSerializeInitialValueTemplateItem$1;
const maybeSerializeMenuItem = maybeSerializeMenuItem$1;
const maybeSerializeMenuItemGroup = maybeSerializeMenuItemGroup$1;
const maybeSerializeView = maybeSerializeView$1;
const menuItemsFromInitialValueTemplateItems = menuItemsFromInitialValueTemplateItems$1;
const shallowIntentChecker = shallowIntentChecker$1;
const structureLocaleNamespace = structureLocaleNamespace$1;
const useDeskTool = useStructureTool;
const useDocumentPane = useDocumentPane$1;
const useDocumentTitle = useDocumentTitle$1;
const usePaneRouter = usePaneRouter$1;
export { ComponentBuilder, ComponentViewBuilder, ConfirmDeleteDialog, DEFAULT_INTENT_HANDLER, DeskToolProvider, DocumentBuilder, DocumentInspectorHeader, DocumentListBuilder, DocumentListItemBuilder, DocumentListPane, DocumentPane, DocumentPaneProvider, DocumentTypeListBuilder, FormViewBuilder, GenericListBuilder, GenericViewBuilder, HELP_URL, InitialValueTemplateItemBuilder, ListBuilder, ListItemBuilder, MenuItemBuilder, MenuItemGroupBuilder, PaneLayout, PaneRouterContext, SerializeError, component, createStructureBuilder, defaultInitialValueTemplateItems, defaultIntentChecker, deskTool, documentFromEditor, documentFromEditorWithInitialValue, form, getOrderingMenuItem, getOrderingMenuItemsForSchemaType, getTypeNamesFromFilter, isDocumentListItem, maybeSerializeInitialValueTemplateItem, maybeSerializeMenuItem, maybeSerializeMenuItemGroup, maybeSerializeView, menuItemsFromInitialValueTemplateItems, shallowIntentChecker, structureLocaleNamespace, useDeskTool, useDocumentPane, useDocumentTitle, usePaneRouter };
//# sourceMappingURL=desk.esm.js.map
