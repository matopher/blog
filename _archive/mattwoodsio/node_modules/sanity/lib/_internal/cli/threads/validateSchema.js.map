{"version":3,"file":"validateSchema.js","sources":["../../../../src/_internal/cli/threads/validateSchema.ts"],"sourcesContent":["import {groupProblems, validateSchema} from '@sanity/schema/_internal'\nimport {type SchemaValidationProblem, type SchemaValidationProblemGroup} from '@sanity/types'\nimport {resolveSchemaTypes} from 'sanity'\nimport {isMainThread, parentPort, workerData as _workerData} from 'worker_threads'\n\nimport {getStudioConfig} from '../util/getStudioWorkspaces'\nimport {mockBrowserEnvironment} from '../util/mockBrowserEnvironment'\n\nexport interface ValidateSchemaWorkerData {\n  workDir: string\n  workspace?: string\n  level?: SchemaValidationProblem['severity']\n}\n\nexport interface ValidateSchemaWorkerResult {\n  validation: SchemaValidationProblemGroup[]\n}\n\nconst {\n  workDir,\n  workspace: workspaceName,\n  level = 'warning',\n} = _workerData as ValidateSchemaWorkerData\n\nif (isMainThread || !parentPort) {\n  throw new Error('This module must be run as a worker thread')\n}\n\nconst cleanup = mockBrowserEnvironment(workDir)\n\ntry {\n  const workspaces = getStudioConfig({basePath: workDir})\n\n  if (!workspaces.length) {\n    throw new Error(`Configuration did not return any workspaces.`)\n  }\n\n  let workspace\n  if (workspaceName) {\n    workspace = workspaces.find((w) => w.name === workspaceName)\n    if (!workspace) {\n      throw new Error(`Could not find any workspaces with name \\`${workspaceName}\\``)\n    }\n  } else {\n    if (workspaces.length !== 1) {\n      throw new Error(\n        \"Multiple workspaces found. Please specify which workspace to use with '--workspace'.\",\n      )\n    }\n    workspace = workspaces[0]\n  }\n\n  const schemaTypes = resolveSchemaTypes({\n    config: workspace,\n    context: {dataset: workspace.dataset, projectId: workspace.projectId},\n  })\n\n  const validation = groupProblems(validateSchema(schemaTypes).getTypes())\n\n  const result: ValidateSchemaWorkerResult = {\n    validation: validation\n      .map((group) => ({\n        ...group,\n        problems: group.problems.filter((problem) =>\n          level === 'error' ? problem.severity === 'error' : true,\n        ),\n      }))\n      .filter((group) => group.problems.length),\n  }\n\n  parentPort?.postMessage(result)\n} finally {\n  cleanup()\n}\n"],"names":["_a","workDir","workspace","workspaceName","level","_workerData","isMainThread","parentPort","Error","cleanup","mockBrowserEnvironment","workspaces","getStudioConfig","basePath","length","find","w","name","concat","schemaTypes","resolveSchemaTypes","config","context","dataset","projectId","validation","groupProblems","validateSchema","getTypes","result","map","group","problems","filter","problem","severity","postMessage"],"mappings":";;;;;;;AAAA,IAAAA,EAAA;AAkBA,MAAM;EACJC,OAAA;EACAC,SAAW,EAAAC,aAAA;EACXC,KAAQ,GAAA;AACV,CAAI,GAAAC,yBAAA;AAEJ,IAAIC,cAAA,CAAAA,YAAA,IAAgB,CAACC,cAAAA,CAAAA,UAAY,EAAA;EACzB,MAAA,IAAIC,MAAM,4CAA4C,CAAA;AAC9D;AAEA,MAAMC,OAAA,GAAUC,sBAAAA,CAAAA,uBAAuBT,OAAO,CAAA;AAE9C,IAAI;EACF,MAAMU,UAAa,GAAAC,mBAAA,CAAAA,eAAA,CAAgB;IAACC,QAAA,EAAUZ;EAAQ,CAAA,CAAA;EAElD,IAAA,CAACU,WAAWG,MAAQ,EAAA;IAChB,MAAA,IAAIN,MAAM,8CAA8C,CAAA;EAChE;EAEI,IAAAN,SAAA;EACJ,IAAIC,aAAe,EAAA;IACjBD,SAAA,GAAYS,WAAWI,IAAK,CAACC,CAAM,IAAAA,CAAA,CAAEC,SAASd,aAAa,CAAA;IAC3D,IAAI,CAACD,SAAW,EAAA;MACd,MAAM,IAAIM,KAAA,CAAM,2CAA6C,CAAAU,MAAA,CAAAf,aAAA,EAAa,GAAI,CAAA,CAAA;IAChF;EAAA,CACK,MAAA;IACD,IAAAQ,UAAA,CAAWG,WAAW,CAAG,EAAA;MAC3B,MAAM,IAAIN,KAAA,CACR,sFAAA,CACF;IACF;IACAN,SAAA,GAAYS,WAAW,CAAC,CAAA;EAC1B;EAEA,MAAMQ,cAAcC,MAAAA,CAAAA,kBAAmB,CAAA;IACrCC,MAAQ,EAAAnB,SAAA;IACRoB,SAAS;MAACC,OAAA,EAASrB,UAAUqB,OAAS;MAAAC,SAAA,EAAWtB,UAAUsB;IAAS;EAAA,CACrE,CAAA;EAED,MAAMC,aAAaC,SAAAA,CAAAA,aAAc,CAAAC,SAAAA,CAAAA,cAAA,CAAeR,WAAW,CAAA,CAAES,UAAU,CAAA;EAEvE,MAAMC,MAAqC,GAAA;IACzCJ,UAAY,EAAAA,UAAA,CACTK,GAAI,CAACC,KAAW,KAAA;MACf,GAAGA,KAAA;MACHC,QAAA,EAAUD,MAAMC,QAAS,CAAAC,MAAA,CAAQC,OAC/B,IAAA9B,KAAA,KAAU,OAAU,GAAA8B,OAAA,CAAQC,aAAa,OAAU,GAAA,IACrD;IAAA,EACA,CACD,CAAAF,MAAA,CAAQF,KAAU,IAAAA,KAAA,CAAMC,SAASlB,MAAM;EAAA,CAC5C;EAEA,CAAAd,EAAA,GAAAO,cAAA,CAAAA,UAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAP,EAAA,CAAYoC,WAAY,CAAAP,MAAA,CAAA;AAC1B,CAAE,SAAA;EACQpB,OAAA,EAAA;AACV"}