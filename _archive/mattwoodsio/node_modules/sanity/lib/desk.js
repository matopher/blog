'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var StructureToolProvider = require('./_chunks/StructureToolProvider-DndCsu52.js');
require('react/jsx-runtime');
require('@sanity/icons');
require('@sanity/ui');
require('react');
require('./_chunks/TooltipDelayGroupProvider-CXQG_E3r.js');
require('sanity');
require('@sanity/telemetry/react');
require('lodash/template.js');
require('lodash/isEqual.js');
require('sanity/router');
require('react-rx');
require('rxjs');
require('@sanity/types');
require('@sanity/util/paths');
require('lodash/omit.js');
require('lodash/isNumber.js');
require('lodash/isString.js');
require('@sanity/uuid');
require('lodash/findIndex.js');
const ComponentBuilder = StructureToolProvider.ComponentBuilder;
const ComponentViewBuilder = StructureToolProvider.ComponentViewBuilder;
const ConfirmDeleteDialog = StructureToolProvider.ConfirmDeleteDialogContainer;
const DEFAULT_INTENT_HANDLER = StructureToolProvider.DEFAULT_INTENT_HANDLER;
const DeskToolProvider = StructureToolProvider.StructureToolProvider;
const DocumentBuilder = StructureToolProvider.DocumentBuilder;
const DocumentInspectorHeader = StructureToolProvider.DocumentInspectorHeader;
const DocumentListBuilder = StructureToolProvider.DocumentListBuilder;
const DocumentListItemBuilder = StructureToolProvider.DocumentListItemBuilder;
const DocumentListPane = StructureToolProvider.DocumentListPane;
const DocumentPane = StructureToolProvider.DocumentPane;
const DocumentPaneProvider = StructureToolProvider.DocumentPaneProvider;
const DocumentTypeListBuilder = StructureToolProvider.DocumentTypeListBuilder;
const FormViewBuilder = StructureToolProvider.FormViewBuilder;
const GenericListBuilder = StructureToolProvider.GenericListBuilder;
const GenericViewBuilder = StructureToolProvider.GenericViewBuilder;
const HELP_URL = StructureToolProvider.HELP_URL;
const InitialValueTemplateItemBuilder = StructureToolProvider.InitialValueTemplateItemBuilder;
const ListBuilder = StructureToolProvider.ListBuilder;
const ListItemBuilder = StructureToolProvider.ListItemBuilder;
const MenuItemBuilder = StructureToolProvider.MenuItemBuilder;
const MenuItemGroupBuilder = StructureToolProvider.MenuItemGroupBuilder;
const PaneLayout = StructureToolProvider.PaneLayout;
const PaneRouterContext = StructureToolProvider.PaneRouterContext;
const SerializeError = StructureToolProvider.SerializeError;
const component = StructureToolProvider.component;
const createStructureBuilder = StructureToolProvider.createStructureBuilder;
const defaultInitialValueTemplateItems = StructureToolProvider.defaultInitialValueTemplateItems;
const defaultIntentChecker = StructureToolProvider.defaultIntentChecker;
const deskTool = StructureToolProvider.structureTool;
const documentFromEditor = StructureToolProvider.documentFromEditor;
const documentFromEditorWithInitialValue = StructureToolProvider.documentFromEditorWithInitialValue;
const form = StructureToolProvider.form;
const getOrderingMenuItem = StructureToolProvider.getOrderingMenuItem;
const getOrderingMenuItemsForSchemaType = StructureToolProvider.getOrderingMenuItemsForSchemaType;
const getTypeNamesFromFilter = StructureToolProvider.getTypeNamesFromFilter;
const isDocumentListItem = StructureToolProvider.isDocumentListItem;
const maybeSerializeInitialValueTemplateItem = StructureToolProvider.maybeSerializeInitialValueTemplateItem;
const maybeSerializeMenuItem = StructureToolProvider.maybeSerializeMenuItem;
const maybeSerializeMenuItemGroup = StructureToolProvider.maybeSerializeMenuItemGroup;
const maybeSerializeView = StructureToolProvider.maybeSerializeView;
const menuItemsFromInitialValueTemplateItems = StructureToolProvider.menuItemsFromInitialValueTemplateItems;
const shallowIntentChecker = StructureToolProvider.shallowIntentChecker;
const structureLocaleNamespace = StructureToolProvider.structureLocaleNamespace;
const useDeskTool = StructureToolProvider.useStructureTool;
const useDocumentPane = StructureToolProvider.useDocumentPane;
const useDocumentTitle = StructureToolProvider.useDocumentTitle;
const usePaneRouter = StructureToolProvider.usePaneRouter;
exports.ComponentBuilder = ComponentBuilder;
exports.ComponentViewBuilder = ComponentViewBuilder;
exports.ConfirmDeleteDialog = ConfirmDeleteDialog;
exports.DEFAULT_INTENT_HANDLER = DEFAULT_INTENT_HANDLER;
exports.DeskToolProvider = DeskToolProvider;
exports.DocumentBuilder = DocumentBuilder;
exports.DocumentInspectorHeader = DocumentInspectorHeader;
exports.DocumentListBuilder = DocumentListBuilder;
exports.DocumentListItemBuilder = DocumentListItemBuilder;
exports.DocumentListPane = DocumentListPane;
exports.DocumentPane = DocumentPane;
exports.DocumentPaneProvider = DocumentPaneProvider;
exports.DocumentTypeListBuilder = DocumentTypeListBuilder;
exports.FormViewBuilder = FormViewBuilder;
exports.GenericListBuilder = GenericListBuilder;
exports.GenericViewBuilder = GenericViewBuilder;
exports.HELP_URL = HELP_URL;
exports.InitialValueTemplateItemBuilder = InitialValueTemplateItemBuilder;
exports.ListBuilder = ListBuilder;
exports.ListItemBuilder = ListItemBuilder;
exports.MenuItemBuilder = MenuItemBuilder;
exports.MenuItemGroupBuilder = MenuItemGroupBuilder;
exports.PaneLayout = PaneLayout;
exports.PaneRouterContext = PaneRouterContext;
exports.SerializeError = SerializeError;
exports.component = component;
exports.createStructureBuilder = createStructureBuilder;
exports.defaultInitialValueTemplateItems = defaultInitialValueTemplateItems;
exports.defaultIntentChecker = defaultIntentChecker;
exports.deskTool = deskTool;
exports.documentFromEditor = documentFromEditor;
exports.documentFromEditorWithInitialValue = documentFromEditorWithInitialValue;
exports.form = form;
exports.getOrderingMenuItem = getOrderingMenuItem;
exports.getOrderingMenuItemsForSchemaType = getOrderingMenuItemsForSchemaType;
exports.getTypeNamesFromFilter = getTypeNamesFromFilter;
exports.isDocumentListItem = isDocumentListItem;
exports.maybeSerializeInitialValueTemplateItem = maybeSerializeInitialValueTemplateItem;
exports.maybeSerializeMenuItem = maybeSerializeMenuItem;
exports.maybeSerializeMenuItemGroup = maybeSerializeMenuItemGroup;
exports.maybeSerializeView = maybeSerializeView;
exports.menuItemsFromInitialValueTemplateItems = menuItemsFromInitialValueTemplateItems;
exports.shallowIntentChecker = shallowIntentChecker;
exports.structureLocaleNamespace = structureLocaleNamespace;
exports.useDeskTool = useDeskTool;
exports.useDocumentPane = useDocumentPane;
exports.useDocumentTitle = useDocumentTitle;
exports.usePaneRouter = usePaneRouter;
//# sourceMappingURL=desk.js.map
