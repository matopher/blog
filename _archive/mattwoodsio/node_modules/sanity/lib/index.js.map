{"version":3,"file":"index.js","sources":["../src/core/components/react-track-elements/createNoopTrackerScope.tsx","../src/core/changeIndicators/ChangeFieldWrapper.tsx","../src/core/util/isArray.ts","../src/core/util/isTruthy.ts","../src/core/util/schemaUtils.ts","../src/core/util/uncaughtErrorHandler.ts","../src/core/util/useThrottledCallback.ts","../src/core/components/scroll/hooks.ts","../src/core/components/scroll/scrollMonitor.tsx","../src/core/changeIndicators/helpers/findMostSpecificTarget.ts","../src/core/changeIndicators/helpers/scrollUtils.ts","../src/core/changeIndicators/helpers/getOffsetsTo.ts","../src/core/changeIndicators/helpers/isChangeBar.ts","../src/core/changeIndicators/helpers/scrollIntoView.ts","../src/core/changeIndicators/overlay/useResizeObserver.ts","../src/core/changeIndicators/overlay/ConnectorsOverlay.tsx","../src/core/changeIndicators/overlay/ChangeConnectorRoot.tsx","../src/core/components/BetaBadge.tsx","../src/core/components/Favicons.tsx","../src/core/components/globalErrorHandler/GlobalErrorHandler.tsx","../src/core/components/NoJavascript.tsx","../src/core/components/DefaultDocument.tsx","../src/core/config/defineConfig.ts","../src/core/config/definePlugin.ts","../src/core/config/document/fieldActions/define.ts","../src/core/config/document/inspector.ts","../src/core/store/_legacy/authStore/createMockAuthStore.ts","../src/core/field/types/array/util/arrayUtils.ts","../src/core/field/types/array/diff/ArrayOfOptionsFieldDiff.tsx","../src/core/field/types/slug/diff/SlugFieldDiff.tsx","../src/core/field/types/url/diff/UrlFieldDiff.tsx","../src/core/field/diff/resolve/diffResolver.ts","../src/core/form/field/HoveredFieldProvider.tsx","../src/core/presence/PresenceScope.tsx","../src/core/form/patch/PatchChannel.ts","../src/core/form/members/array/ArrayOfObjectsInputMember.tsx","../src/core/form/members/array/ArrayOfObjectsInputMembers.tsx","../src/core/form/studio/contexts/reviewChanges/useReviewChanges.ts","../src/core/form/studio/defaults.ts","../src/core/form/inputs/PortableText/_legacyDefaultParts/CustomMarkers.tsx","../src/core/form/FormBuilderProvider.tsx","../src/core/form/studio/FormProvider.tsx","../src/core/form/studio/FormBuilder.tsx","../src/core/store/_legacy/document/document-pair/remoteSnapshots.ts","../src/core/templates/prepare.ts","../src/core/store/_legacy/document/hooks/useDocumentType.ts","../src/core/store/_legacy/history/useTimelineSelector.ts","../src/core/store/_legacy/history/useTimelineStore.ts","../src/core/store/_legacy/project/useProject.ts","../src/core/store/_legacy/project/useProjectDatasets.ts","../src/core/config/resolveConfig.ts","../src/core/config/useConfigContextFromSource.ts","../src/core/studio/addonDataset/AddonDatasetProvider.tsx","../src/core/studio/addonDataset/useAddonDataset.ts","../src/core/studio/components/navbar/StudioLogo.tsx","../src/core/theme/_legacy/helpers.ts","../src/core/theme/_legacy/color.ts","../src/core/theme/_legacy/fonts.ts","../src/core/theme/_legacy/palette.ts","../src/core/theme/_legacy/tones.ts","../src/core/theme/_legacy/theme.ts","../src/core/studio/Studio.tsx","../src/core/studio/renderStudio.tsx","../src/core/hooks/useConnectionState.ts","../src/core/hooks/useDocumentOperationEvent.ts","../src/core/hooks/useEditState.ts","../src/core/hooks/useFormattedDuration.ts","../src/core/hooks/useNumberFormat.ts","../src/core/hooks/useSyncState.ts","../src/core/hooks/useTimeAgo.ts","../src/core/hooks/useTools.ts","../src/core/hooks/useUserListWithPermissions.ts","../src/core/hooks/useValidationStatus.ts","../src/core/components/hookCollection/actionId.ts","../src/core/components/hookCollection/requestIdleCallback.ts","../src/core/components/hookCollection/GetHookCollectionState.tsx","../src/core/components/Hotkeys.tsx","../src/core/components/IntentButton.tsx","../src/core/components/RelativeTime.tsx","../src/core/components/WithReferringDocuments.tsx","../src/core/components/zOffsets/ZIndexProvider.tsx","../src/core/form/inputs/TelephoneInput.tsx","../src/core/form/store/conditional-property/resolveConditionalProperty.ts","../src/core/form/store/stateTreeHelper.ts","../src/core/form/store/constants.ts","../src/core/form/store/utils/getCollapsibleOptions.ts","../src/core/form/store/utils/getItemType.ts","../src/core/form/store/formState.ts","../src/core/form/store/useFormState.ts","../src/core/form/store/types/asserters.ts","../src/core/form/store/utils/getExpandOperations.ts","../src/core/form/utils/path.ts","../src/core/form/utils/mutationPatch.ts"],"sourcesContent":["import {type ReactNode} from 'react'\n\nimport {type Reported} from './types'\n\n// eslint-disable-next-line no-empty-function, @typescript-eslint/no-empty-function\nfunction noop() {}\n\nfunction NoopTracker({children}: {children: ReactNode}) {\n  return <>{children}</>\n}\n\n/** @internal */\nexport function createNoopTrackerScope<T>() {\n  return {\n    useReportedValues: noop as () => Reported<T>[],\n    Tracker: NoopTracker,\n    useReporter: noop as (id: string | null, value: T | (() => T)) => void,\n  }\n}\n","import {type Path} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ReactNode, type SyntheticEvent, useCallback, useContext, useRef, useState} from 'react'\nimport deepCompare from 'react-fast-compare'\n\nimport {ConnectorContext} from './ConnectorContext'\nimport {useReporter} from './tracker'\n\n/**\n * This is used to draw the bar that wraps the diff components in the changes panel\n *\n * @internal\n */\nexport const ChangeFieldWrapper = (props: {path: Path; children: ReactNode; hasHover: boolean}) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const {onSetFocus} = useContext(ConnectorContext)\n  const [isHover, setHover] = useState(false)\n\n  const onMouseEnter = useCallback(() => {\n    setHover(true)\n  }, [])\n\n  const onMouseLeave = useCallback(() => {\n    setHover(false)\n  }, [])\n\n  useReporter(\n    `change-${PathUtils.toString(props.path)}`,\n    () => ({\n      element: ref.current!,\n      path: props.path,\n      isChanged: true,\n      hasFocus: false,\n      hasHover: isHover,\n      hasRevertHover: props.hasHover,\n    }),\n    // note: deepCompare should be ok here since we're not comparing deep values\n    deepCompare,\n  )\n\n  const handleClick = useCallback(\n    (event: SyntheticEvent) => {\n      setFocusWithStopPropagation(event, onSetFocus, props.path)\n    },\n    [onSetFocus, props.path],\n  )\n\n  return (\n    <div ref={ref} onClick={handleClick} onMouseLeave={onMouseLeave} onMouseEnter={onMouseEnter}>\n      {props.children}\n    </div>\n  )\n}\n\n// Stop the propagation here, or it will trigger the parent diff component's onClick.\nfunction setFocusWithStopPropagation(\n  event: SyntheticEvent,\n  onSetFocus: (toPath: Path) => void,\n  path: Path,\n): void {\n  event.stopPropagation()\n  onSetFocus(path)\n}\n","/** @internal */\nexport function isArray(value: unknown): value is unknown[] {\n  return Array.isArray(value)\n}\n","/** @internal */\nexport function isTruthy<T>(value: T | false): value is T {\n  return Boolean(value)\n}\n","import {type SchemaTypeDefinition} from '@sanity/types'\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\n/**\n * @internal\n */\nexport function _isSanityDocumentTypeDefinition(\n  def: SchemaTypeDefinition,\n): def is SchemaTypeDefinition<'document'> {\n  return def.type === 'document' && BUNDLED_DOC_TYPES.includes(def.name)\n}\n\n/**\n * @internal\n */\nexport function _isCustomDocumentTypeDefinition(\n  def: SchemaTypeDefinition,\n): def is SchemaTypeDefinition<'document'> {\n  return def.type === 'document' && !_isSanityDocumentTypeDefinition(def)\n}\n","const FONT_SANS_SERIF = `-apple-system, BlinkMacSystemFont, \\\\'Segoe UI\\\\', Roboto, \\\\'Helvetica Neue\\\\', Helvetica, Arial, system-ui, sans-serif`\nconst FONT_MONOSPACE = `-apple-system-ui-monospace, \\\\'SF Mono\\\\', Menlo, Monaco, Consolas, monospace`\n\n/** @internal */\nexport const uncaughtErrorHandler = (): string =>\n  // prettier-ignore\n  [\n    `window.onerror = function(m,u,l,c,e) {`,\n      `var p=window.location.port;`,\n      `var h=window.location.protocol+'//'+window.location.hostname+(p?':'+p:'');`,\n      `var r=document.getElementById('sanity');`,\n      `while(r.firstChild){r.removeChild(r.firstChild);}`,\n      `var s=document.createElement('style');`,\n      `s.appendChild(document.createTextNode('`,\n        `html,body,#sanityBody,#sanity,#sanityError{height:100%;}`,\n        `body{-webkit-font-smoothing:antialiased;margin:0;}`,\n        `#sanityError{position:fixed;top:0;left:0;width:100%;height:100%;overflow:auto;background-color:#fff;color:#121923;font-family:${FONT_SANS_SERIF};font-size:16px;line-height:21px;min-height:100%;}`,\n        `#sanityError>div{background-color:#fff;max-width:960px;margin:0 auto;padding:47px 32px 52px;}`,\n        `@media(min-width:512px){`,\n          `#sanityError>div{`,\n            `padding:47px 84px;`,\n          `}`,\n        `}`,\n        `#sanityError button{-webkit-font-smoothing:inherit;font:inherit;font-weight:500;background-color:#2276FC;color:#fff;padding:7px 12px;border-radius:3px;border:0;}`,\n        `#sanityError button:hover{background-color:#1E63D0;}`,\n        `#sanityError button:active{background-color:#1B50A5;}`,\n      `'));`,\n      `document.head.appendChild(s);`,\n      `var f=document.createElement('div');`,\n      `f.id='sanityError';`,\n      `f.innerHTML='`,\n        `<div>`,\n          `<h1 style=\"font-size:21px;line-height:27px;margin: 0 0 10px;\">Unhandled error</h1>`,\n          `<p style=\"color:#66758D;margin:10px 0 14px;\">Encountered an unhandled error in this Studio.</p>`,\n          `<button class=\"sanity-error-handler__reload-btn\" type=\"button\">Reload page</button>`,\n          `<pre style=\"background-color:#FDEBEA;color:#C3362C;font-size:13px;line-height:17px;padding:8px 12px;border-radius:3px;margin:32px 0 0;overflow:auto;\">`,\n            `<code style=\"font-family:${FONT_MONOSPACE};\">`,\n              `'+e.stack.replaceAll(h,'')+'`,\n            `</code>`,\n          `</pre>`,\n        `</div>`,\n      `';`,\n      `var b=f.querySelector('.sanity-error-handler__reload-btn');`,\n      `if(b){`,\n        `b.onclick=function() {`,\n          `window.location.reload();`,\n        `}`,\n      `};`,\n      `r.appendChild(f);`,\n    `};`,\n  ].join('')\n","import {throttle, type ThrottleSettings} from 'lodash'\nimport {useMemo} from 'react'\n\n/**\n * @internal\n *\n * @example\n * ```tsx\n * // First create a callback using React’s `useCallback` hook\n * const myCallback = useCallback(() => {\n *   // this is not throttled\n * }, [])\n *\n * // Then make a throttled version using the `useThrottledCallback` hook\n * const myThrottledCallback = useThrottledCallback(myCallback, 100)\n *\n * // Call the throttled callback\n * <Button onClick={myThrottledCallback} />\n * ```\n */\nexport function useThrottledCallback(\n  callback: (...args: any[]) => any,\n  wait: number,\n  options: ThrottleSettings,\n): (...args: any[]) => any {\n  const throttledCallback = useMemo(\n    () => throttle(callback, wait, options),\n    [callback, options, wait],\n  )\n\n  return throttledCallback\n}\n","import {type Subscriber} from 'nano-pubsub'\nimport {useContext, useEffect} from 'react'\n\nimport {ScrollContext} from './scrollContext'\n\n/** @internal */\nexport function useOnScroll(callback: Subscriber<Event>) {\n  const parentContext = useContext(ScrollContext)\n  useEffect(() => {\n    return parentContext?.subscribe(callback)\n  }, [callback, parentContext])\n}\n","import {type ReactNode} from 'react'\n\nimport {useOnScroll} from './hooks'\nimport {type ScrollEventHandler} from './types'\n\n/** @internal */\nexport interface ScrollMonitorProps {\n  onScroll: ScrollEventHandler\n  children?: ReactNode\n}\n\n/** @internal */\nexport function ScrollMonitor({onScroll, children}: ScrollMonitorProps) {\n  useOnScroll(onScroll)\n  return <>{children}</>\n}\n","import {isKeyedObject} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\n\nimport {type TrackedArea, type TrackedChange} from '../tracker'\n\nexport function findMostSpecificTarget(\n  targetType: 'change' | 'field',\n  id: string,\n  values: Map<string, TrackedChange | TrackedArea>,\n): TrackedChange | undefined {\n  const pathString = id.slice(id.indexOf('-') + 1) || '[]'\n  const path = PathUtils.fromString(pathString)\n  const exactId = `${targetType}-${PathUtils.toString(path)}`\n  if (values.has(exactId)) {\n    return values.get(exactId) as TrackedChange\n  }\n\n  let mostSpecific: TrackedChange | undefined\n  for (const [targetId, target] of values) {\n    if (!('path' in target) || !targetId.startsWith(targetType)) {\n      continue\n    }\n\n    const numEqual = PathUtils.numEqualSegments(path, target.path)\n    const lastPathSegment = target.path[target.path.length - 1]\n    const pathOnlyDiffersByKey =\n      numEqual === target.path.length - 1 && isKeyedObject(lastPathSegment)\n\n    if (numEqual === 0) {\n      continue\n    } else if (numEqual !== target.path.length && !pathOnlyDiffersByKey) {\n      /*\n       * We only allow matching to shorter paths if the last element in the path is a keyed object.\n       * `foo.bar.portableTextField[_key=abc123]` should resolve to `foo.bar.portableTextField`.\n       *\n       * Otherwise we'll only get a connector line when you add new elements to a portable text\n       * field and not when you alter an existing part.\n       */\n      continue\n    }\n\n    mostSpecific = target\n\n    if (numEqual === path.length) {\n      // On exact match, return early\n      break\n    }\n  }\n\n  // if (!mostSpecific) {\n  //   throw new Error(`target not found: \"${id}\"`)\n  // }\n\n  return mostSpecific\n}\n","export function hasOverflowScroll(el: HTMLElement): boolean {\n  const overflow = getComputedStyle(el).overflow\n\n  return overflow.includes('auto') || overflow.includes('scroll')\n}\n\n// Check whether an element is currently scrollable (meaning it must both have overflow scroll *and* content overflowing)\nexport function isScrollable(el: HTMLElement): boolean {\n  const scrollableContent = el.scrollHeight !== el.offsetHeight || el.scrollWidth !== el.offsetWidth\n\n  return scrollableContent && hasOverflowScroll(el)\n}\n","import {type Rect} from '../overlay/types'\nimport {hasOverflowScroll} from './scrollUtils'\n\nexport const getOffsetsTo = (\n  source: HTMLElement,\n  target: HTMLElement,\n): {rect: Rect; bounds: Rect} => {\n  const bounds: Rect = {\n    top: 0,\n    left: 0,\n    height: target.offsetHeight,\n    width: target.offsetWidth,\n  }\n\n  const rect: Rect = {\n    top: 0,\n    left: 0,\n    height: source.offsetHeight,\n    width: source.offsetWidth,\n  }\n\n  let foundScrollContainer = false\n  let el: HTMLElement | null = source\n\n  while (el && el !== target && target.contains(el)) {\n    if (foundScrollContainer) {\n      bounds.top += el.offsetTop\n      bounds.left += el.offsetLeft\n    }\n\n    if (hasOverflowScroll(el)) {\n      bounds.top = el.offsetTop\n      bounds.height = el.offsetHeight\n      bounds.left = el.offsetLeft\n      bounds.width = el.offsetWidth\n\n      foundScrollContainer = true\n    }\n\n    rect.top += el.offsetTop - el.scrollTop\n    rect.left += el.offsetLeft - el.scrollLeft\n\n    el = el.offsetParent as HTMLElement\n  }\n\n  return {rect, bounds}\n}\n","import {type Reported} from '../../components/react-track-elements'\nimport {type TrackedArea, type TrackedChange} from '../tracker'\n\nexport function isChangeBar(\n  v: Reported<TrackedArea | TrackedChange>,\n): v is Reported<TrackedChange> {\n  return v[0] !== 'changePanel'\n}\n","import {type Rect} from '../overlay/types'\nimport {isScrollable} from './scrollUtils'\n\nconst SCROLL_INTO_VIEW_TOP_PADDING = -15\n\nexport function scrollIntoView(field: {element: HTMLElement; rect: Rect; bounds: Rect}): void {\n  const element = field.element\n\n  /*\n   * Start at current element and check the parent for a scroll\n   * bar until a scrollable element has been found.\n   */\n  let parentElementWithScroll: HTMLElement | null = element\n\n  while (!isScrollable(parentElementWithScroll)) {\n    parentElementWithScroll = parentElementWithScroll.parentElement\n\n    /*\n     * If the parent element is null it means we are at the root\n     * element, which has no parent. Since no scroll bar has\n     * been found so far it does not make sense to scroll.\n     */\n    if (!parentElementWithScroll) {\n      return\n    }\n  }\n\n  parentElementWithScroll.scroll({\n    top:\n      parentElementWithScroll.scrollTop +\n      field.rect.top -\n      field.bounds.top +\n      SCROLL_INTO_VIEW_TOP_PADDING,\n    left: 0,\n    behavior: 'smooth',\n  })\n}\n","import {useEffect} from 'react'\n\nimport {resizeObserver} from '../../util'\n\nexport function useResizeObserver(\n  element: HTMLDivElement,\n  onResize: (event: ResizeObserverEntry) => void,\n): void {\n  useEffect(() => resizeObserver.observe(element, onResize), [element, onResize])\n}\n","import {type Path} from '@sanity/types'\nimport {sortBy} from 'lodash'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type Reported} from '../../components/react-track-elements'\nimport {ScrollMonitor} from '../../components/scroll'\nimport {isNonNullable} from '../../util'\nimport {DEBUG_LAYER_BOUNDS} from '../constants'\nimport {findMostSpecificTarget} from '../helpers/findMostSpecificTarget'\nimport {getOffsetsTo} from '../helpers/getOffsetsTo'\nimport {isChangeBar} from '../helpers/isChangeBar'\nimport {scrollIntoView} from '../helpers/scrollIntoView'\nimport {type TrackedArea, type TrackedChange, useReportedValues} from '../tracker'\nimport {Connector} from './Connector'\nimport {SvgWrapper} from './ConnectorsOverlay.styled'\nimport {DebugLayers} from './DebugLayers'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface Rect {\n  height: number\n  width: number\n  top: number\n  left: number\n}\n\ninterface State {\n  connectors: {\n    field: TrackedChange & {id: string; rect: Rect; bounds: Rect}\n    change: TrackedChange & {id: string; rect: Rect; bounds: Rect}\n    hasFocus: boolean\n    hasHover: boolean\n    hasRevertHover: boolean\n  }[]\n  isHoverConnector: boolean\n}\n\ninterface ConnectorsOverlayProps {\n  rootElement: HTMLDivElement\n  onSetFocus: (nextFocusPath: Path) => void\n}\n\nfunction getState(\n  allReportedValues: Reported<TrackedChange | TrackedArea>[],\n  hovered: string | null,\n  byId: Map<string, TrackedChange | TrackedArea>,\n  rootElement: HTMLElement,\n): State {\n  const changeBarsWithHover: Reported<TrackedChange>[] = []\n  const changeBarsWithFocus: Reported<TrackedChange>[] = []\n\n  for (const value of allReportedValues) {\n    if (!isChangeBar(value) || !value[1].isChanged) {\n      continue\n    }\n\n    const [id, reportedChangeBar] = value\n\n    if (id === hovered) {\n      changeBarsWithHover.push(value)\n      continue\n    }\n\n    if (reportedChangeBar.hasHover) {\n      changeBarsWithHover.push(value)\n      continue\n    }\n\n    if (reportedChangeBar.hasFocus) {\n      changeBarsWithFocus.push(value)\n      continue\n    }\n  }\n\n  const isHoverConnector = changeBarsWithHover.length > 0\n\n  const changeBars = isHoverConnector ? changeBarsWithHover : changeBarsWithFocus\n\n  const connectors = changeBars\n    .map(([id]) => {\n      const field = findMostSpecificTarget('field', id, byId)\n      const change = findMostSpecificTarget('change', id, byId)\n\n      if (!field || !change) return null\n\n      return {field: {id, ...field}, change: {id, ...change}}\n    })\n    .filter(isNonNullable)\n    // .filter(({field, change}) => field && change && field.element && change.element)\n    .map(({field, change}) => ({\n      hasHover: field.hasHover || change.hasHover,\n      hasFocus: field.hasFocus,\n      hasRevertHover: change.hasRevertHover,\n      field: {...field, ...getOffsetsTo(field.element, rootElement)},\n      change: {...change, ...getOffsetsTo(change.element, rootElement)},\n    }))\n\n  return {connectors, isHoverConnector}\n}\n\nexport function ConnectorsOverlay(props: ConnectorsOverlayProps) {\n  const {rootElement, onSetFocus} = props\n  const [hovered, setHovered] = useState<string | null>(null)\n  const allReportedValues = useReportedValues()\n  const byId: Map<string, TrackedChange | TrackedArea> = useMemo(\n    () => new Map(allReportedValues),\n    [allReportedValues],\n  )\n\n  const [{connectors}, setState] = useState<State>(() =>\n    getState(allReportedValues, hovered, byId, rootElement),\n  )\n\n  const visibleConnectors = useMemo(\n    () => sortBy(connectors, (c) => 0 - c.field.path.length).slice(0, 1),\n    [connectors],\n  )\n\n  const handleScrollOrResize = useCallback(() => {\n    setState(getState(allReportedValues, hovered, byId, rootElement))\n  }, [byId, allReportedValues, hovered, rootElement])\n\n  useResizeObserver(rootElement, handleScrollOrResize)\n\n  return (\n    <ScrollMonitor onScroll={handleScrollOrResize}>\n      <SvgWrapper style={{zIndex: visibleConnectors[0] && visibleConnectors[0].field.zIndex}}>\n        {visibleConnectors.map(({field, change}) => {\n          if (!change) {\n            return null\n          }\n\n          return (\n            <ConnectorGroup\n              field={field}\n              change={change}\n              key={field.id}\n              onSetFocus={onSetFocus}\n              setHovered={setHovered}\n            />\n          )\n        })}\n      </SvgWrapper>\n    </ScrollMonitor>\n  )\n}\n\ninterface ConnectorGroupProps {\n  field: TrackedChange & {id: string; rect: Rect; bounds: Rect}\n  change: TrackedChange & {id: string; rect: Rect; bounds: Rect}\n  setHovered: (id: string | null) => void\n  onSetFocus: (path: Path) => void\n}\n\nfunction ConnectorGroup(props: ConnectorGroupProps) {\n  const {change, field, onSetFocus, setHovered} = props\n\n  const onConnectorClick = useCallback(() => {\n    scrollIntoView(field)\n    scrollIntoView(change)\n    onSetFocus(field.path)\n  }, [field, change, onSetFocus])\n\n  const handleMouseEnter = useCallback(() => setHovered(field.id), [field, setHovered])\n  const handleMouseLeave = useCallback(() => setHovered(null), [setHovered])\n\n  const from = useMemo(\n    () => ({\n      rect: {\n        ...field.rect,\n        left: field.rect.left + 3,\n      },\n      bounds: field.bounds,\n    }),\n    [field.bounds, field.rect],\n  )\n\n  const to = useMemo(\n    () => ({\n      rect: {\n        ...change.rect,\n        left: change.rect.left + 1,\n      },\n      bounds: change.bounds,\n    }),\n    [change.bounds, change.rect],\n  )\n\n  return (\n    <>\n      <g onClick={onConnectorClick} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Connector from={from} to={to} />\n      </g>\n\n      {DEBUG_LAYER_BOUNDS && <DebugLayers field={field} change={change} />}\n    </>\n  )\n}\n","import {type Path} from '@sanity/types'\nimport {type ReactNode, useMemo, useState} from 'react'\n\nimport {ScrollContainer} from '../../components/scroll'\nimport {ConnectorContext} from '../ConnectorContext'\nimport {ENABLED} from '../constants'\nimport {Tracker} from '../tracker'\nimport {ConnectorsOverlay} from './ConnectorsOverlay'\n\n/** @internal */\nexport interface EnabledChangeConnectorRootProps {\n  children: ReactNode\n  className?: string\n  isReviewChangesOpen: boolean\n  onOpenReviewChanges: () => void\n  onSetFocus: (path: Path) => void\n}\n\n/** @internal */\nexport function EnabledChangeConnectorRoot({\n  children,\n  className,\n  isReviewChangesOpen,\n  onOpenReviewChanges,\n  onSetFocus,\n  ...restProps\n}: EnabledChangeConnectorRootProps) {\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>()\n\n  const contextValue = useMemo(\n    () => ({\n      isReviewChangesOpen,\n      onOpenReviewChanges,\n      onSetFocus,\n    }),\n    [isReviewChangesOpen, onOpenReviewChanges, onSetFocus],\n  )\n\n  return (\n    <ConnectorContext.Provider value={contextValue}>\n      <Tracker>\n        <ScrollContainer {...restProps} ref={setRootElement} className={className}>\n          {children}\n          {rootElement && <ConnectorsOverlay rootElement={rootElement} onSetFocus={onSetFocus} />}\n        </ScrollContainer>\n      </Tracker>\n    </ConnectorContext.Provider>\n  )\n}\n\n/** @internal */\nexport interface DisabledChangeConnectorRootProps {\n  className?: string\n  children: ReactNode\n}\n\n/** @internal */\nexport function DisabledChangeConnectorRoot({\n  children,\n  className,\n}: DisabledChangeConnectorRootProps) {\n  return <ScrollContainer className={className}>{children}</ScrollContainer>\n}\n\n/** @internal */\nexport const ChangeConnectorRoot = ENABLED\n  ? EnabledChangeConnectorRoot\n  : DisabledChangeConnectorRoot\n","import {Badge, type BadgeProps} from '@sanity/ui'\nimport {type HTMLProps} from 'react'\n\n/** @internal */\nexport type BetaBadgeProps = Omit<BadgeProps, 'mode' | 'tone'>\n\n/** @internal */\nexport function BetaBadge(props: BetaBadgeProps & Omit<HTMLProps<HTMLDivElement>, 'ref'>) {\n  const {fontSize = 1, children = 'Beta', ...rest} = props\n\n  return (\n    <Badge {...rest} fontSize={fontSize} radius={2} tone=\"primary\">\n      {children}\n    </Badge>\n  )\n}\n","export interface FaviconProps {\n  basePath: string\n}\n\nexport function Favicons({basePath}: FaviconProps) {\n  const base = `${basePath.replace(/\\/+$/, '')}/static`\n  return (\n    <>\n      <link rel=\"icon\" href={`${base}/favicon.ico`} sizes=\"any\" />\n      <link rel=\"icon\" href={`${base}/favicon.svg`} type=\"image/svg+xml\" />\n      <link rel=\"apple-touch-icon\" href={`${base}/apple-touch-icon.png`} />\n      <link rel=\"manifest\" href={`${base}/manifest.webmanifest`} />\n    </>\n  )\n}\n","const errorHandlerScript = `\n;(function () {\n  var _caughtErrors = []\n\n  var errorChannel = (function () {\n    var subscribers = []\n\n    function publish(msg) {\n      for (var i = 0; i < subscribers.length; i += 1) {\n        subscribers[i](msg)\n      }\n    }\n\n    function subscribe(subscriber) {\n      subscribers.push(subscriber)\n\n      return function () {\n        var idx = subscribers.indexOf(subscriber)\n\n        if (idx > -1) {\n          subscribers.splice(idx, 1)\n        }\n      }\n    }\n\n    return {publish, subscribe, subscribers}\n  })()\n\n  // NOTE: Store the error channel instance in the global scope so that the Studio application can\n  // access it and subscribe to errors.\n  window.__sanityErrorChannel = {\n    subscribe: errorChannel.subscribe,\n  }\n\n  function _nextTick(callback) {\n    setTimeout(callback, 0)\n  }\n\n  function _handleError(error, params) {\n    _nextTick(function () {\n      // - If there are error channel subscribers, then we notify them (no console error).\n      // - If there are no subscribers, then we log the error to the console and render the error overlay.\n      if (errorChannel.subscribers.length) {\n        errorChannel.publish({error, params})\n      } else {\n        console.error(error)\n\n        _renderErrorOverlay(error, params)\n      }\n    })\n  }\n\n  var ERROR_BOX_STYLE = [\n    'background: #fff',\n    'border-radius: 6px',\n    'box-sizing: border-box',\n    'color: #121923',\n    'flex: 1',\n    \"font-family: -apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue','Liberation Sans',Helvetica,Arial,system-ui,sans-serif\",\n    'font-size: 16px',\n    'line-height: 21px',\n    'margin: 0 auto',\n    'max-width: 960px',\n    'overflow: auto',\n    'padding: 20px',\n    'width: 100%',\n  ].join(';')\n\n  var ERROR_CODE_STYLE = [\n    'color: #972E2A',\n    \"font-family: -apple-system-ui-monospace, 'SF Mono', Menlo, Monaco, Consolas, monospace\",\n    'font-size: 13px',\n    'line-height: 17px',\n    'margin: 0',\n  ].join(';')\n\n  function _renderErrorOverlay(error, params) {\n    var errorElement = document.querySelector('#__sanityError') || document.createElement('div')\n    var colno = params.event.colno\n    var lineno = params.event.lineno\n    var filename = params.event.filename\n\n    errorElement.id = '__sanityError'\n    errorElement.innerHTML = [\n      '<div style=\"' + ERROR_BOX_STYLE + '\">',\n      '<div style=\"font-weight: 700;\">Uncaught error: ' + error.message + '</div>',\n      '<div style=\"color: #515E72; font-size: 13px; line-height: 17px; margin: 10px 0;\">' +\n        filename +\n        ':' +\n        lineno +\n        ':' +\n        colno +\n        '</div>',\n      '<pre style=\"' + ERROR_CODE_STYLE + '\">' + error.stack + '</pre>',\n      '</div>',\n    ].join('')\n\n    errorElement.style.position = 'fixed'\n    errorElement.style.zIndex = 1000000\n    errorElement.style.top = 0\n    errorElement.style.left = 0\n    errorElement.style.right = 0\n    errorElement.style.bottom = 0\n    errorElement.style.padding = '20px'\n    errorElement.style.background = 'rgba(16,17,18,0.66)'\n    errorElement.style.display = 'flex'\n    errorElement.style.alignItems = 'center'\n    errorElement.style.justifyContent = 'center'\n\n    document.body.appendChild(errorElement)\n  }\n\n  // NOTE:\n  // Yes – we're attaching 2 error listeners below 👀\n  // This is because React makes the same error throw twice (in development mode).\n  // See: https://github.com/facebook/react/issues/10384\n\n  // Error listener #1\n  window.onerror = function (event, source, lineno, colno, error) {\n    _nextTick(function () {\n      if (_caughtErrors.indexOf(error) !== -1) return\n\n      _caughtErrors.push(error)\n\n      _handleError(error, {\n        event,\n        lineno,\n        colno,\n        source,\n      })\n\n      _nextTick(function () {\n        var idx = _caughtErrors.indexOf(error)\n\n        if (idx > -1) _caughtErrors.splice(idx, 1)\n      })\n    })\n\n    // IMPORTANT: this callback must return \\`true\\` to prevent the error from being rendered in\n    // the browser’s console.\n    return true\n  }\n\n  // Error listener #2\n  window.addEventListener('error', function (event) {\n    if (_caughtErrors.indexOf(event.error) !== -1) return true\n\n    _caughtErrors.push(event.error)\n\n    _handleError(event.error, {\n      event,\n      lineno: event.lineno,\n      colno: event.colno,\n    })\n\n    _nextTick(function () {\n      _nextTick(function () {\n        var idx = _caughtErrors.indexOf(event.error)\n\n        if (idx > -1) _caughtErrors.splice(idx, 1)\n      })\n    })\n\n    return true\n  })\n})()\n`\n\n/** @internal */\nexport function GlobalErrorHandler() {\n  // eslint-disable-next-line react/no-danger\n  return <script dangerouslySetInnerHTML={{__html: errorHandlerScript}} />\n}\n","/* eslint-disable i18next/no-literal-string,@sanity/i18n/no-attribute-string-literals */\nconst NoJsStyles = `\n.sanity-app-no-js__root {\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  background: #fff;\n}\n\n.sanity-app-no-js__content {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-family: helvetica, arial, sans-serif;\n}\n`\n\n/** @internal */\nexport function NoJavascript() {\n  return (\n    <noscript>\n      <div className=\"sanity-app-no-js__root\">\n        <div className=\"sanity-app-no-js__content\">\n          <style type=\"text/css\">{NoJsStyles}</style>\n          <h1>JavaScript disabled</h1>\n          <p>\n            Please <a href=\"https://www.enable-javascript.com/\">enable JavaScript</a> in your\n            browser and reload the page to proceed.\n          </p>\n        </div>\n      </div>\n    </noscript>\n  )\n}\n","/* eslint-disable i18next/no-literal-string */\nimport {type ReactElement} from 'react'\n\nimport {Favicons} from './Favicons'\nimport {GlobalErrorHandler} from './globalErrorHandler'\nimport {NoJavascript} from './NoJavascript'\n\nconst globalStyles = `\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 400;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Regular.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 400;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Italic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 500;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Medium.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 500;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-MediumItalic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 600;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-SemiBold.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 600;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-SemiBoldItalic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 700;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Bold.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 700;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-BoldItalic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 800;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-ExtraBold.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 800;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-ExtraBoldItalic.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 900;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-Black.woff2\") format(\"woff2\");\n  }\n  @font-face {\n    font-family: Inter;\n    font-style: italic;\n    font-weight: 900;\n    font-display: swap;\n    src: url(\"https://studio-static.sanity.io/Inter-BlackItalic.woff2\") format(\"woff2\");\n  }\n  html {\n    background-color: #f1f3f6;\n  }\n  html,\n  body,\n  #sanity {\n    height: 100%;\n  }\n  body {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n  }\n`\n\n/**\n * @hidden\n * @beta */\nexport interface DefaultDocumentProps {\n  entryPath: string\n  css?: string[]\n  basePath?: string\n}\n\nconst EMPTY_ARRAY: never[] = []\n\n/**\n * @hidden\n * @beta */\nexport function DefaultDocument(props: DefaultDocumentProps): ReactElement {\n  const {entryPath, css = EMPTY_ARRAY, basePath = '/'} = props\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, maximum-scale=1, viewport-fit=cover\"\n        />\n        <meta name=\"robots\" content=\"noindex\" />\n        <meta name=\"referrer\" content=\"same-origin\" />\n\n        <Favicons basePath={basePath} />\n\n        <title>Sanity Studio</title>\n\n        <GlobalErrorHandler />\n\n        {css.map((href) => (\n          <link key={href} rel=\"stylesheet\" href={href} />\n        ))}\n        {/* eslint-disable-next-line react/no-danger */}\n        <style dangerouslySetInnerHTML={{__html: globalStyles}} />\n      </head>\n      <body>\n        <div id=\"sanity\" />\n        <script type=\"module\" src={entryPath} />\n        <NoJavascript />\n      </body>\n    </html>\n  )\n}\n","import {type Config} from './types'\n\n/**\n * @hidden\n * @beta */\nexport function defineConfig<T extends Config>(config: T): T {\n  return config\n}\n\n/**\n * @deprecated Use `defineConfig` instead\n *\n * @hidden\n * @beta\n */\nexport function createConfig<T extends Config>(config: T): T {\n  return defineConfig(config)\n}\n","import {isString} from 'lodash'\n\nimport {type Plugin, type PluginOptions} from './types'\n\n/**\n * @hidden\n * @beta */\nexport type PluginFactory<TOptions> = (options: TOptions) => PluginOptions\n\nfunction validatePlugin(pluginResult: PluginOptions) {\n  // TODO: name is required etc\n  const messages = [\n    'projectId' in pluginResult && '`projectId` not allowed in plugin configuration',\n    'dataset' in pluginResult && '`dataset` not allowed in plugin configuration',\n  ].filter(isString)\n\n  if (messages.length)\n    throw new Error(\n      `Invalid plugin configuration:\\n${messages.map((message) => `\\t${message}`).join('\\n')}`,\n    )\n}\n\n/**\n * @hidden\n * @beta */\nexport function definePlugin<TOptions = void>(\n  arg: PluginFactory<TOptions> | PluginOptions,\n): Plugin<TOptions> {\n  if (typeof arg === 'function') {\n    const pluginFactory = arg\n\n    return (options: TOptions) => {\n      // TODO: there's a possiblity of passing default arguments to users'\n      // plugin factories or reading from default options in `TOptions`\n      const result = pluginFactory(options)\n\n      validatePlugin(result)\n      return result\n    }\n  }\n\n  validatePlugin(arg)\n  return () => arg\n}\n\n/**\n * @deprecated Use `definePlugin` instead\n *\n * @hidden\n * @beta\n */\nexport function createPlugin<TOptions = void>(\n  arg: PluginFactory<TOptions> | PluginOptions,\n): Plugin<TOptions> {\n  return definePlugin(arg)\n}\n","import {type DocumentFieldAction} from './types'\n\n/** @internal */\nexport function defineDocumentFieldAction(fieldAction: DocumentFieldAction): DocumentFieldAction {\n  return fieldAction\n}\n","import {type ButtonTone} from '@sanity/ui'\nimport {type ComponentType} from 'react'\n\n/** @hidden @beta */\nexport interface DocumentInspectorProps {\n  documentId: string\n  documentType: string\n  onClose: () => void\n}\n\n/** @hidden @beta */\nexport type DocumentInspectorComponent = ComponentType<DocumentInspectorProps>\n\n/** @hidden @beta */\nexport interface DocumentInspectorUseMenuItemProps {\n  documentId: string\n  documentType: string\n}\n\n/** @hidden @beta */\nexport interface DocumentInspectorMenuItem {\n  hidden?: boolean\n  hotkeys?: string[]\n  icon?: ComponentType\n  showAsAction?: boolean\n  status?: ButtonTone\n  title: string\n  tone?: ButtonTone\n}\n\n/** @hidden @beta */\nexport interface DocumentInspector {\n  name: string\n  component: DocumentInspectorComponent\n  /**\n   * Hook for defining a menu item for the inspector.\n   */\n  useMenuItem?: (props: DocumentInspectorUseMenuItemProps) => DocumentInspectorMenuItem\n\n  /**\n   * Callback for when the inspector is closed, which can be used to clean up custom document pane\n   * parameters.\n   */\n  onClose?: (ctx: {params: Record<string, string | undefined>}) => {\n    params: Record<string, string | undefined>\n  }\n\n  /**\n   * Callback for when the inspector is opened, which can be used to set custom document pane\n   * parameters.\n   */\n  onOpen?: (ctx: {params: Record<string, string | undefined>}) => {\n    params: Record<string, string | undefined>\n  }\n}\n\n/**\n * Define a document inspector to be used in Sanity configuration.\n *\n * @example\n *\n * ```ts\n * // sanity.config.ts\n *\n * import {RocketIcon} from '@sanity/icons'\n * import {defineConfig, defineDocumentInspector} from 'sanity'\n *\n * const customInspector = defineDocumentInspector({\n *   name: 'custom',\n *   useMenuItem: () => ({\n *     icon: RocketIcon,\n *     showAsAction: true,\n *     title: 'Custom'\n *   }),\n *   component: lazy(() => import('./inspectors/custom')),\n * })\n *\n * export default defineConfig({\n *   // ...\n *\n *   document: {\n *     inspectors: (prev) => [customInspector, ...prev],\n *   },\n * })\n * ```\n *\n * @hidden @beta\n * */\nexport function defineDocumentInspector(inspector: DocumentInspector): DocumentInspector {\n  return inspector\n}\n","import {type SanityClient} from '@sanity/client'\nimport {type CurrentUser} from '@sanity/types'\nimport {of} from 'rxjs'\n\nimport {type AuthStore} from './types'\n\n/** @internal */\nexport interface MockAuthStoreOptions {\n  currentUser: CurrentUser | null\n  client: SanityClient\n}\n\n/**\n * Creates a mock `AuthStore` (for testing) that emits an `AuthState` derived\n * from the `client` and `currentUser` given.\n *\n * @internal\n */\nexport function createMockAuthStore({client, currentUser = null}: MockAuthStoreOptions): AuthStore {\n  return {\n    state: of({authenticated: true, client, currentUser}),\n  }\n}\n","import {isKeyedObject} from '@sanity/types'\n\nexport function isEqual(item: unknown, otherItem: unknown): boolean {\n  if (item === otherItem) {\n    return true\n  }\n\n  if (typeof item !== typeof otherItem) {\n    return false\n  }\n\n  if (typeof item !== 'object' && !Array.isArray(item)) {\n    return item === otherItem\n  }\n\n  if (isKeyedObject(item) && isKeyedObject(otherItem) && item._key === otherItem._key) {\n    return true\n  }\n\n  if (Array.isArray(item) && Array.isArray(otherItem)) {\n    if (item.length !== otherItem.length) {\n      return false\n    }\n\n    return item.every((child, i) => isEqual(child, otherItem[i]))\n  }\n\n  if (item === null || otherItem === null) {\n    return item === otherItem\n  }\n\n  const obj = item as Record<string, unknown>\n  const otherObj = otherItem as Record<string, unknown>\n\n  const keys = Object.keys(obj)\n  const otherKeys = Object.keys(otherObj)\n  if (keys.length !== otherKeys.length) {\n    return false\n  }\n\n  return keys.every((keyName) => isEqual(obj[keyName], otherObj[keyName]))\n}\n","import {type ArraySchemaType, isKeyedObject, type SchemaType, type TypedObject} from '@sanity/types'\nimport {Box, Flex} from '@sanity/ui'\n\nimport {useTranslation} from '../../../../i18n'\nimport {Preview} from '../../../../preview/components/Preview'\nimport {useUserColorManager} from '../../../../user-color'\nimport {DiffTooltip, FromToArrow, getAnnotationColor} from '../../../diff'\nimport {\n  type Annotation,\n  type ArrayDiff,\n  type Diff,\n  type DiffComponent,\n  type ItemDiff,\n} from '../../../types'\nimport {Checkbox} from '../../boolean/preview'\nimport {isEqual} from '../util/arrayUtils'\n\ninterface NamedListOption {\n  title?: string\n  value: unknown\n}\n\ninterface NormalizedListOption {\n  title?: string\n  value: unknown\n  memberType?: Exclude<SchemaType, ArraySchemaType>\n  isPresent: boolean\n  annotation: Annotation\n  itemIndex: number\n}\n\nexport const ArrayOfOptionsFieldDiff: DiffComponent<ArrayDiff> = ({diff, schemaType}) => {\n  const options = schemaType.options?.list\n  const colorManager = useUserColorManager()\n  const {t} = useTranslation()\n  if (!Array.isArray(options)) {\n    // Shouldn't happen, because the resolver should only resolve here if it does\n    return null\n  }\n\n  return (\n    <div>\n      {diff.items\n        .map((item) => normalizeItems(item, diff, schemaType))\n        .filter((item): item is NormalizedListOption => item !== null)\n        .sort(sortItems)\n        .map((item, index) => {\n          const {annotation, isPresent, value, memberType, title} = item\n          const color = getAnnotationColor(colorManager, annotation)\n          const action = isPresent ? t('changes.added-label') : t('changes.removed-label')\n          return (\n            <Flex align=\"center\" key={getItemKey(diff, index)}>\n              <DiffTooltip annotations={annotation ? [annotation] : []} description={action}>\n                <Flex align=\"center\">\n                  <Checkbox checked={!isPresent} color={color} />\n                  <Box margin={2}>\n                    <FromToArrow />\n                  </Box>\n                  <Checkbox checked={isPresent} color={color} />\n                </Flex>\n              </DiffTooltip>\n              <Flex align=\"center\">\n                <ItemPreview value={title || value} memberType={memberType} />\n              </Flex>\n            </Flex>\n          )\n        })}\n    </div>\n  )\n}\n\nfunction normalizeItems(\n  item: ItemDiff,\n  parentDiff: ArrayDiff,\n  schemaType: ArraySchemaType,\n): NormalizedListOption | null {\n  if (item.diff.action === 'unchanged') {\n    return null\n  }\n\n  const {fromValue, toValue} = parentDiff\n  const value = getValue(item.diff)\n  const wasPresent = isInArray(value, fromValue)\n  const isPresent = isInArray(value, toValue)\n  if (wasPresent === isPresent) {\n    return null\n  }\n\n  return {\n    title: getItemTitle(value, schemaType),\n    memberType: resolveMemberType(getValue(item.diff), schemaType),\n    itemIndex: getOptionIndex(value, schemaType),\n    annotation: item.annotation,\n    isPresent,\n    value,\n  }\n}\n\nfunction sortItems(itemA: NormalizedListOption, itemB: NormalizedListOption): number {\n  return itemA.itemIndex - itemB.itemIndex\n}\n\nfunction ItemPreview({value, memberType}: {memberType?: SchemaType; value: unknown}) {\n  return (\n    <Box marginX={2} marginY={1}>\n      {typeof value === 'string' || typeof value === 'number' ? (\n        value\n      ) : (\n        <Preview schemaType={memberType!} value={value as any} layout=\"default\" />\n      )}\n    </Box>\n  )\n}\n\nfunction isInArray(value: unknown, parent?: unknown[] | null): boolean {\n  const array = parent || []\n  return typeof value === 'object' && value !== null\n    ? array.some((item) => isEqual(item, value))\n    : array.includes(value)\n}\n\nfunction getItemKey(diff: Diff, index: number): string | number {\n  const value = diff.toValue || diff.fromValue\n  return isKeyedObject(value) ? value._key : index\n}\n\nfunction getValue(diff: Diff) {\n  return typeof diff.toValue === 'undefined' ? diff.fromValue : diff.toValue\n}\n\nfunction resolveMemberType(item: unknown, schemaType: ArraySchemaType) {\n  const itemTypeName = resolveTypeName(item)\n  return schemaType.of.find((memberType) => memberType.name === itemTypeName)\n}\n\nfunction resolveTypeName(value: unknown): string {\n  const jsType = resolveJSType(value)\n  if (jsType !== 'object') {\n    return jsType\n  }\n\n  const obj = value as TypedObject\n  return ('_type' in obj && obj._type) || jsType\n}\n\nfunction resolveJSType(val: unknown) {\n  if (val === null) {\n    return 'null'\n  }\n\n  if (Array.isArray(val)) {\n    return 'array'\n  }\n\n  return typeof val\n}\n\nfunction isNamedOption(item: unknown | NamedListOption): item is NamedListOption {\n  return typeof item === 'object' && item !== null && 'title' in item\n}\n\nfunction getOptionIndex(item: unknown, schemaType: ArraySchemaType): number {\n  const list = schemaType.options?.list || []\n  return list.findIndex((opt) => isEqual(isNamedOption(opt) ? opt.value : opt, item))\n}\n\nfunction getItemTitle(item: unknown, schemaType: ArraySchemaType): string | undefined {\n  const list = (schemaType.options?.list || []) as NamedListOption[]\n  const index = getOptionIndex(item, schemaType)\n  return index === -1 ? undefined : list[index].title || undefined\n}\n","import {DiffFromTo} from '../../../diff'\nimport {type DiffComponent, type ObjectDiff} from '../../../types'\nimport {SlugPreview} from '../preview'\n\ninterface Slug {\n  current?: string\n}\n\nexport const SlugFieldDiff: DiffComponent<ObjectDiff<Slug>> = ({diff, schemaType}) => {\n  return (\n    <DiffFromTo\n      layout=\"inline\"\n      diff={diff}\n      schemaType={schemaType}\n      previewComponent={SlugPreview}\n    />\n  )\n}\n","import {DiffFromTo} from '../../../diff'\nimport {type DiffComponent, type StringDiff} from '../../../types'\nimport {StringPreview} from '../../string/preview'\n\nexport const UrlFieldDiff: DiffComponent<StringDiff> = ({diff, schemaType}) => {\n  return <DiffFromTo diff={diff} schemaType={schemaType} previewComponent={StringPreview} />\n}\n","import {type DiffComponentResolver} from '../../types'\nimport {ArrayOfOptionsFieldDiff} from '../../types/array/diff'\nimport {DatetimeFieldDiff} from '../../types/datetime/diff'\nimport {SlugFieldDiff} from '../../types/slug/diff'\nimport {UrlFieldDiff} from '../../types/url/diff'\n\n/** @internal */\nexport const diffResolver: DiffComponentResolver = ({schemaType}) => {\n  // datetime or date\n  if (['datetime', 'date'].includes(schemaType.name)) {\n    return DatetimeFieldDiff\n  }\n\n  if (schemaType.name === 'url') {\n    return UrlFieldDiff\n  }\n\n  if (schemaType.name === 'slug') {\n    return SlugFieldDiff\n  }\n\n  if (schemaType.jsonType === 'array' && Array.isArray(schemaType.options?.list)) {\n    return ArrayOfOptionsFieldDiff\n  }\n\n  return undefined\n}\n","import {type Path} from '@sanity/types'\nimport {type PropsWithChildren, useCallback, useMemo, useState} from 'react'\n\nimport {pathToString} from '../../field'\nimport {HoveredFieldContext, type HoveredFieldContextValue} from './HoveredFieldContext'\n\n/** @internal */\nexport function HoveredFieldProvider(props: PropsWithChildren) {\n  const {children} = props\n  const [hoveredStack, setHoveredStack] = useState<string[]>([])\n\n  const handleMouseEnter = useCallback((path: Path) => {\n    const pathString = pathToString(path)\n\n    setHoveredStack((prev) => {\n      if (prev.includes(pathString)) {\n        return prev\n      }\n\n      return [pathString, ...prev]\n    })\n  }, [])\n\n  const handleMouseLeave = useCallback((path: Path) => {\n    const pathString = pathToString(path)\n\n    setHoveredStack((prev) => {\n      if (prev.includes(pathString)) {\n        return prev.filter((item) => item !== pathString)\n      }\n\n      return prev\n    })\n  }, [])\n\n  const context: HoveredFieldContextValue = useMemo(\n    () => ({\n      hoveredStack,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n    }),\n    [handleMouseEnter, handleMouseLeave, hoveredStack],\n  )\n\n  return <HoveredFieldContext.Provider value={context}>{children}</HoveredFieldContext.Provider>\n}\n","import {type Path} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ReactNode, useContext, useMemo} from 'react'\n\nimport {FormFieldPresenceContext} from './context'\n\nconst EMPTY_ARRAY: never[] = []\n\nfunction trimChildPath(path: Path, childPath: Path) {\n  return PathUtils.startsWith(path, childPath) ? PathUtils.trimLeft(path, childPath) : EMPTY_ARRAY\n}\n\n/** @internal */\nexport interface PresenceScopeProps {\n  readOnly?: boolean\n  path: Path\n  children: ReactNode\n}\n\n/** @internal */\nexport function PresenceScope(props: PresenceScopeProps) {\n  const {readOnly, path, children} = props\n  const contextPresence = useContext(FormFieldPresenceContext)\n\n  const childPresence = useMemo(() => {\n    return readOnly\n      ? EMPTY_ARRAY\n      : (contextPresence || EMPTY_ARRAY)\n          .filter((presence) => {\n            return PathUtils.startsWith(path, presence.path)\n          })\n          .map((presence) => ({\n            ...presence,\n            path: trimChildPath(path, presence.path),\n          }))\n  }, [contextPresence, path, readOnly])\n\n  return (\n    <FormFieldPresenceContext.Provider value={childPresence}>\n      {children}\n    </FormFieldPresenceContext.Provider>\n  )\n}\n","import {type FormPatch} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport interface MutationPatchMsg {\n  type: 'mutation'\n  patches: FormPatch[]\n  snapshot: unknown\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport interface RebasePatchMsg {\n  type: 'rebase'\n  patches: FormPatch[]\n  snapshot: unknown\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport type PatchMsg = MutationPatchMsg | RebasePatchMsg\n\n/**\n *\n * @hidden\n * @beta\n */\nexport interface PatchMsgSubscriber {\n  (msg: PatchMsg): void\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport interface PatchChannel {\n  publish: (msg: PatchMsg) => void\n  subscribe: (subscriber: PatchMsgSubscriber) => () => void\n}\n\n/**\n * @internal\n */\nexport function createPatchChannel(): PatchChannel {\n  const _subscribers: PatchMsgSubscriber[] = []\n\n  return {\n    publish(msg: PatchMsg) {\n      for (const subscriber of _subscribers) {\n        subscriber(msg)\n      }\n    },\n\n    subscribe(subscriber) {\n      _subscribers.push(subscriber)\n\n      return () => {\n        const idx = _subscribers.indexOf(subscriber)\n\n        if (idx > -1) {\n          _subscribers.splice(idx, 1)\n        }\n      }\n    },\n  }\n}\n","import {type ArrayOfObjectsMember} from '../../store'\nimport {\n  type RenderAnnotationCallback,\n  type RenderArrayOfObjectsItemCallback,\n  type RenderBlockCallback,\n  type RenderFieldCallback,\n  type RenderInputCallback,\n  type RenderPreviewCallback,\n} from '../../types'\nimport {ArrayOfObjectsItem} from './items/ArrayOfObjectsItem'\nimport {MemberItemError} from './MemberItemError'\n\n/** @internal */\nexport interface ArrayOfObjectsMemberProps {\n  member: ArrayOfObjectsMember\n  renderAnnotation?: RenderAnnotationCallback\n  renderBlock?: RenderBlockCallback\n  renderField: RenderFieldCallback\n  renderInlineBlock?: RenderBlockCallback\n  renderInput: RenderInputCallback\n  renderItem: RenderArrayOfObjectsItemCallback\n  renderPreview: RenderPreviewCallback\n}\n\n/**\n * Convenience component for rendering an \"array of objects\"-item\n * @internal\n */\nexport function ArrayOfObjectsInputMember(props: ArrayOfObjectsMemberProps) {\n  const {\n    member,\n    renderAnnotation,\n    renderBlock,\n    renderField,\n    renderInlineBlock,\n    renderInput,\n    renderItem,\n    renderPreview,\n  } = props\n  if (member.kind === 'item') {\n    return (\n      <ArrayOfObjectsItem\n        key={member.key}\n        member={member}\n        renderAnnotation={renderAnnotation}\n        renderBlock={renderBlock}\n        renderField={renderField}\n        renderInlineBlock={renderInlineBlock}\n        renderInput={renderInput}\n        renderItem={renderItem}\n        renderPreview={renderPreview}\n      />\n    )\n  }\n  if (member.kind === 'error') {\n    return <MemberItemError key={member.key} member={member} />\n  }\n\n  //@ts-expect-error The branching above should cover all possible cases\n  console.warn(new Error(`Unhandled member kind ${member.kind}`))\n  return null\n}\n","import {type ArrayOfObjectsMember} from '../../store'\nimport {\n  type RenderAnnotationCallback,\n  type RenderArrayOfObjectsItemCallback,\n  type RenderBlockCallback,\n  type RenderFieldCallback,\n  type RenderInputCallback,\n  type RenderPreviewCallback,\n} from '../../types'\nimport {ArrayOfObjectsInputMember} from './ArrayOfObjectsInputMember'\n\n/** @internal */\nexport interface ArrayOfObjectsInputMembersProps {\n  members: ArrayOfObjectsMember[]\n  renderAnnotation?: RenderAnnotationCallback\n  renderBlock?: RenderBlockCallback\n  renderInlineBlock?: RenderBlockCallback\n  renderInput: RenderInputCallback\n  renderField: RenderFieldCallback\n  renderItem: RenderArrayOfObjectsItemCallback\n  renderPreview: RenderPreviewCallback\n}\n\n/**\n * Convenience component for wrapping an array of objects\n * @internal\n */\nexport function ArrayOfObjectsInputMembers(props: ArrayOfObjectsInputMembersProps) {\n  const {members, ...rest} = props\n  return (\n    <>\n      {members.map((member) => (\n        <ArrayOfObjectsInputMember key={member.key} member={member} {...rest} />\n      ))}\n    </>\n  )\n}\n","import {useContext} from 'react'\n\nimport {ReviewChangesContext} from './ReviewChangesContext'\nimport {type ReviewChangesContextValue} from './types'\n\n/**\n * @internal\n */\nexport function useReviewChanges(): ReviewChangesContextValue {\n  const reviewChanges = useContext(ReviewChangesContext)\n\n  if (!reviewChanges) {\n    throw new Error('Review changes: missing context value')\n  }\n\n  return reviewChanges\n}\n","import {createElement} from 'react'\n\nimport {Preview} from '../../preview/components/Preview'\nimport {\n  type RenderAnnotationCallback,\n  type RenderBlockCallback,\n  type RenderFieldCallback,\n  type RenderInputCallback,\n  type RenderItemCallback,\n  type RenderPreviewCallback,\n} from '../types'\nimport {\n  defaultResolveAnnotationComponent,\n  defaultResolveBlockComponent,\n  defaultResolveInlineBlockComponent,\n} from './inputResolver/blockResolver'\nimport {defaultResolveFieldComponent} from './inputResolver/fieldResolver'\nimport {defaultResolveInputComponent} from './inputResolver/inputResolver'\nimport {defaultResolveItemComponent} from './inputResolver/itemResolver'\n\n/** @internal */\nexport const defaultRenderAnnotation: RenderAnnotationCallback = (props) => {\n  return createElement(defaultResolveAnnotationComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderBlock: RenderBlockCallback = (props) => {\n  return createElement(defaultResolveBlockComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderInlineBlock: RenderBlockCallback = (props) => {\n  return createElement(defaultResolveInlineBlockComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderField: RenderFieldCallback = (props) => {\n  return createElement(defaultResolveFieldComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderInput: RenderInputCallback = (props) => {\n  return createElement(defaultResolveInputComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderItem: RenderItemCallback = (props) => {\n  return createElement(defaultResolveItemComponent(props.schemaType), props)\n}\n\n/** @internal */\nexport const defaultRenderPreview: RenderPreviewCallback = (props) => {\n  return createElement(Preview, props)\n}\n","/* eslint-disable i18next/no-literal-string */\nimport {Text} from '@sanity/ui'\n\n// This is the fallback marker renderer if the block editor didn't get the 'renderCustomMarkers' prop\n// You will probably only see this when you first start to play with custom markers as a developer\nexport function DefaultCustomMarkers() {\n  return (\n    <Text size={1}>\n      This is a example custom marker, please implement <code>renderCustomMarkers</code> function.\n    </Text>\n  )\n}\n","/* eslint-disable camelcase */\n\nimport {type ObjectSchemaType, type Path, type ValidationMarker} from '@sanity/types'\nimport {type ReactNode, useMemo} from 'react'\n\nimport {type DocumentFieldAction, type Source} from '../config'\nimport {type FormNodePresence} from '../presence'\nimport {EMPTY_ARRAY} from '../util'\nimport {DocumentIdProvider} from './contexts/DocumentIdProvider'\nimport {HoveredFieldProvider} from './field'\nimport {FormBuilderContext, type FormBuilderContextValue} from './FormBuilderContext'\nimport {ArrayOfObjectsFunctions} from './inputs/arrays/ArrayOfObjectsInput/ArrayOfObjectsFunctions'\nimport {DefaultCustomMarkers} from './inputs/PortableText/_legacyDefaultParts/CustomMarkers'\nimport {DefaultMarkers} from './inputs/PortableText/_legacyDefaultParts/Markers'\nimport {type PatchChannel, type PatchEvent} from './patch'\nimport {type FormFieldGroup, type StateTree} from './store'\nimport {FormCallbacksProvider} from './studio/contexts/FormCallbacks'\nimport {PresenceProvider} from './studio/contexts/Presence'\nimport {ValidationProvider} from './studio/contexts/Validation'\nimport {\n  type FormBuilderFilterFieldFn,\n  type RenderAnnotationCallback,\n  type RenderBlockCallback,\n  type RenderFieldCallback,\n  type RenderInputCallback,\n  type RenderItemCallback,\n  type RenderPreviewCallback,\n} from './types'\n\nexport interface FormBuilderProviderProps {\n  /** @internal */\n  __internal_fieldActions?: DocumentFieldAction[]\n  /** @internal */\n  __internal_patchChannel?: PatchChannel // eslint-disable-line camelcase\n\n  autoFocus?: boolean\n  changesOpen?: boolean\n  children?: ReactNode\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  file: Source['form']['file']\n  filterField?: FormBuilderFilterFieldFn\n  focusPath: Path\n  focused?: boolean\n  groups: FormFieldGroup[]\n  id: string\n  image: Source['form']['image']\n  onChange: (event: PatchEvent) => void\n  onFieldGroupSelect: (path: Path, groupName: string) => void\n  onPathBlur: (path: Path) => void\n  onPathFocus: (path: Path) => void\n  onPathOpen: (path: Path) => void\n  onSetFieldSetCollapsed: (path: Path, collapsed: boolean) => void\n  onSetPathCollapsed: (path: Path, collapsed: boolean) => void\n  presence: FormNodePresence[]\n  readOnly?: boolean\n  renderAnnotation?: RenderAnnotationCallback\n  renderBlock?: RenderBlockCallback\n  renderField: RenderFieldCallback\n  renderInlineBlock?: RenderBlockCallback\n  renderInput: RenderInputCallback\n  renderItem: RenderItemCallback\n  renderPreview: RenderPreviewCallback\n  schemaType: ObjectSchemaType\n  unstable?: Source['form']['unstable']\n  validation: ValidationMarker[]\n}\n\nconst missingPatchChannel: PatchChannel = {\n  publish: () => undefined,\n  subscribe: () => {\n    console.warn(\n      'No patch channel provided to form-builder. If you need input based patch updates, please provide one',\n    )\n\n    return () => undefined\n  },\n}\n\nexport function FormBuilderProvider(props: FormBuilderProviderProps) {\n  const {\n    __internal_fieldActions: fieldActions = EMPTY_ARRAY,\n    __internal_patchChannel: patchChannel = missingPatchChannel,\n    autoFocus,\n    changesOpen,\n    children,\n    collapsedFieldSets,\n    collapsedPaths,\n    file,\n    filterField,\n    focusPath,\n    focused,\n    groups,\n    id,\n    image,\n    onChange,\n    onFieldGroupSelect,\n    onPathBlur,\n    onPathFocus,\n    onPathOpen,\n    onSetFieldSetCollapsed,\n    onSetPathCollapsed,\n    presence,\n    readOnly,\n    renderAnnotation,\n    renderBlock,\n    renderField,\n    renderInlineBlock,\n    renderInput,\n    renderItem,\n    renderPreview,\n    schemaType,\n    unstable,\n    validation,\n  } = props\n\n  const __internal: FormBuilderContextValue['__internal'] = useMemo(\n    () => ({\n      patchChannel, // eslint-disable-line camelcase\n      components: {\n        ArrayFunctions: ArrayOfObjectsFunctions,\n        CustomMarkers: unstable?.CustomMarkers || DefaultCustomMarkers,\n        Markers: unstable?.Markers || DefaultMarkers,\n      },\n      field: {\n        actions: fieldActions,\n      },\n      file: {\n        assetSources: file.assetSources,\n        directUploads: file?.directUploads !== false,\n      },\n      filterField: filterField || (() => true),\n      image: {\n        assetSources: image.assetSources,\n        directUploads: image?.directUploads !== false,\n      },\n      onChange,\n    }),\n    [\n      fieldActions,\n      file.assetSources,\n      file?.directUploads,\n      filterField,\n      image.assetSources,\n      image?.directUploads,\n      onChange,\n      patchChannel,\n      unstable?.CustomMarkers,\n      unstable?.Markers,\n    ],\n  )\n\n  const formBuilder: FormBuilderContextValue = useMemo(\n    () => ({\n      __internal,\n      autoFocus,\n      changesOpen,\n      collapsedFieldSets,\n      collapsedPaths,\n      focusPath,\n      focused,\n      groups,\n      id,\n      readOnly,\n      renderAnnotation,\n      renderBlock,\n      renderField,\n      renderInlineBlock,\n      renderInput,\n      renderItem,\n      renderPreview,\n      schemaType,\n    }),\n    [\n      __internal,\n      autoFocus,\n      changesOpen,\n      collapsedFieldSets,\n      collapsedPaths,\n      focusPath,\n      focused,\n      groups,\n      id,\n      readOnly,\n      renderAnnotation,\n      renderBlock,\n      renderField,\n      renderInlineBlock,\n      renderInput,\n      renderItem,\n      renderPreview,\n      schemaType,\n    ],\n  )\n\n  return (\n    <FormBuilderContext.Provider value={formBuilder}>\n      <FormCallbacksProvider\n        onChange={onChange}\n        onFieldGroupSelect={onFieldGroupSelect}\n        onPathBlur={onPathBlur}\n        onPathFocus={onPathFocus}\n        onPathOpen={onPathOpen}\n        onSetPathCollapsed={onSetPathCollapsed}\n        onSetFieldSetCollapsed={onSetFieldSetCollapsed}\n      >\n        <DocumentIdProvider id={id}>\n          <PresenceProvider presence={presence}>\n            <ValidationProvider validation={validation}>\n              <HoveredFieldProvider>{children}</HoveredFieldProvider>\n            </ValidationProvider>\n          </PresenceProvider>\n        </DocumentIdProvider>\n      </FormCallbacksProvider>\n    </FormBuilderContext.Provider>\n  )\n}\n","import {type ObjectSchemaType, type Path, type ValidationMarker} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\n\nimport {type DocumentFieldAction} from '../../config'\nimport {type FormNodePresence} from '../../presence'\nimport {PreviewLoader} from '../../preview/components/PreviewLoader'\nimport {useSource} from '../../studio'\nimport {\n  useAnnotationComponent,\n  useBlockComponent,\n  useFieldComponent,\n  useInlineBlockComponent,\n  useInputComponent,\n  useItemComponent,\n  usePreviewComponent,\n} from '../form-components-hooks'\nimport {FormBuilderProvider} from '../FormBuilderProvider'\nimport {type PatchChannel, type PatchEvent} from '../patch'\nimport {type FormFieldGroup, type StateTree} from '../store'\nimport {\n  type BlockAnnotationProps,\n  type BlockProps,\n  type FieldProps,\n  type InputProps,\n  type ItemProps,\n  type RenderPreviewCallbackProps,\n} from '../types'\n\n/**\n * @alpha This API might change.\n */\nexport interface FormProviderProps {\n  /** @internal */\n  __internal_fieldActions?: DocumentFieldAction[]\n  /** @internal Considered internal, do not use. */\n  __internal_patchChannel: PatchChannel\n\n  autoFocus?: boolean\n  changesOpen?: boolean\n  children?: ReactNode\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  focusPath: Path\n  focused: boolean | undefined\n  groups: FormFieldGroup[]\n  id: string\n  onChange: (changeEvent: PatchEvent) => void\n  onPathBlur: (path: Path) => void\n  onPathFocus: (path: Path) => void\n  onPathOpen: (path: Path) => void\n  onFieldGroupSelect: (path: Path, groupName: string) => void\n  onSetPathCollapsed: (path: Path, collapsed: boolean) => void\n  onSetFieldSetCollapsed: (path: Path, collapsed: boolean) => void\n  presence: FormNodePresence[]\n  readOnly?: boolean\n  schemaType: ObjectSchemaType\n  validation: ValidationMarker[]\n}\n\n/**\n * Default wiring for `FormBuilderProvider` when used with Sanity\n *\n * @alpha This API might change.\n */\nexport function FormProvider(props: FormProviderProps) {\n  const {\n    __internal_fieldActions: fieldActions,\n    __internal_patchChannel: patchChannel,\n    autoFocus,\n    changesOpen,\n    children,\n    collapsedFieldSets,\n    collapsedPaths,\n    focusPath,\n    focused,\n    groups,\n    id,\n    onChange,\n    onPathBlur,\n    onPathFocus,\n    onPathOpen,\n    onFieldGroupSelect,\n    onSetPathCollapsed,\n    onSetFieldSetCollapsed,\n    presence,\n    readOnly,\n    schemaType,\n    validation,\n  } = props\n\n  const {file, image} = useSource().form\n\n  // These hooks may be stored in context as an perf optimization\n  const Input = useInputComponent()\n  const Field = useFieldComponent()\n  const Preview = usePreviewComponent()\n  const Item = useItemComponent()\n  const Block = useBlockComponent()\n  const InlineBlock = useInlineBlockComponent()\n  const Annotation = useAnnotationComponent()\n\n  const renderInput = useCallback(\n    (inputProps: Omit<InputProps, 'renderDefault'>) => <Input {...inputProps} />,\n    [Input],\n  )\n  const renderField = useCallback(\n    (fieldProps: Omit<FieldProps, 'renderDefault'>) => <Field {...fieldProps} />,\n    [Field],\n  )\n  const renderItem = useCallback(\n    (itemProps: Omit<ItemProps, 'renderDefault'>) => <Item {...itemProps} />,\n    [Item],\n  )\n  const renderPreview = useCallback(\n    (previewProps: RenderPreviewCallbackProps) => (\n      <PreviewLoader component={Preview} {...previewProps} />\n    ),\n    [Preview],\n  )\n  const renderBlock = useCallback(\n    (blockProps: Omit<BlockProps, 'renderDefault'>) => <Block {...blockProps} />,\n    [Block],\n  )\n  const renderInlineBlock = useCallback(\n    (blockProps: Omit<BlockProps, 'renderDefault'>) => <InlineBlock {...blockProps} />,\n    [InlineBlock],\n  )\n  const renderAnnotation = useCallback(\n    (annotationProps: Omit<BlockAnnotationProps, 'renderDefault'>) => (\n      <Annotation {...annotationProps} />\n    ),\n    [Annotation],\n  )\n\n  return (\n    <FormBuilderProvider\n      __internal_fieldActions={fieldActions}\n      __internal_patchChannel={patchChannel}\n      autoFocus={autoFocus}\n      changesOpen={changesOpen}\n      collapsedFieldSets={collapsedFieldSets}\n      collapsedPaths={collapsedPaths}\n      file={file}\n      focusPath={focusPath}\n      focused={focused}\n      groups={groups}\n      id={id}\n      image={image}\n      onChange={onChange}\n      onPathBlur={onPathBlur}\n      onPathFocus={onPathFocus}\n      onPathOpen={onPathOpen}\n      onFieldGroupSelect={onFieldGroupSelect}\n      onSetPathCollapsed={onSetPathCollapsed}\n      onSetFieldSetCollapsed={onSetFieldSetCollapsed}\n      presence={presence}\n      readOnly={readOnly}\n      renderAnnotation={renderAnnotation}\n      renderBlock={renderBlock}\n      renderField={renderField}\n      renderInlineBlock={renderInlineBlock}\n      renderInput={renderInput}\n      renderItem={renderItem}\n      renderPreview={renderPreview}\n      schemaType={schemaType}\n      validation={validation}\n    >\n      {children}\n    </FormBuilderProvider>\n  )\n}\n","/* eslint-disable camelcase */\n/* eslint-disable react/jsx-handler-names */\n\nimport {type ObjectSchemaType, type Path, type ValidationMarker} from '@sanity/types'\nimport {useCallback, useRef} from 'react'\n\nimport {type DocumentFieldAction} from '../../config'\nimport {type FormNodePresence} from '../../presence'\nimport {PreviewLoader} from '../../preview'\nimport {EMPTY_ARRAY} from '../../util'\nimport {FormValueProvider} from '../contexts/FormValue'\nimport {GetFormValueProvider} from '../contexts/GetFormValue'\nimport {\n  useAnnotationComponent,\n  useBlockComponent,\n  useFieldComponent,\n  useInlineBlockComponent,\n  useInputComponent,\n  useItemComponent,\n  usePreviewComponent,\n} from '../form-components-hooks'\nimport {type FormPatch, type PatchChannel, PatchEvent} from '../patch'\nimport {type StateTree} from '../store'\nimport {type ObjectFormNode} from '../store/types/nodes'\nimport {\n  type BlockAnnotationProps,\n  type BlockProps,\n  type FieldProps,\n  type FormDocumentValue,\n  type InputProps,\n  type ItemProps,\n  type ObjectInputProps,\n  type RenderPreviewCallbackProps,\n} from '../types'\nimport {DocumentFieldActionsProvider} from './contexts/DocumentFieldActions'\nimport {FormProvider} from './FormProvider'\n\n/**\n * @alpha\n */\nexport interface FormBuilderProps\n  extends Omit<ObjectFormNode, 'level' | 'path' | 'presence' | 'validation' | '_allMembers'> {\n  /** @internal */\n  __internal_fieldActions?: DocumentFieldAction[]\n  /** @internal Considered internal – do not use. */\n  __internal_patchChannel: PatchChannel\n\n  autoFocus?: boolean\n  changesOpen?: boolean\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  focusPath: Path\n  focused: boolean | undefined\n  id: string\n  onChange: (changeEvent: PatchEvent) => void\n  onPathBlur: (path: Path) => void\n  onPathFocus: (path: Path) => void\n  onPathOpen: (path: Path) => void\n  onFieldGroupSelect: (path: Path, groupName: string) => void\n  onSetFieldSetCollapsed: (path: Path, collapsed: boolean) => void\n  onSetPathCollapsed: (path: Path, collapsed: boolean) => void\n  presence: FormNodePresence[]\n  readOnly?: boolean\n  schemaType: ObjectSchemaType\n  validation: ValidationMarker[]\n  value: FormDocumentValue | undefined\n}\n\n/**\n * @alpha\n */\nexport function FormBuilder(props: FormBuilderProps) {\n  const {\n    __internal_fieldActions: fieldActions,\n    __internal_patchChannel: patchChannel,\n    autoFocus,\n    changesOpen,\n    collapsedFieldSets,\n    collapsedPaths,\n    focusPath,\n    focused,\n    groups,\n    id,\n    members,\n    onChange,\n    onPathBlur,\n    onPathFocus,\n    onPathOpen,\n    onFieldGroupSelect,\n    onSetFieldSetCollapsed,\n    onSetPathCollapsed,\n    presence,\n    readOnly,\n    schemaType,\n    validation,\n    value,\n  } = props\n\n  const handleCollapseField = useCallback(\n    (fieldName: string) => onSetPathCollapsed([fieldName], true),\n    [onSetPathCollapsed],\n  )\n\n  const handleExpandField = useCallback(\n    (fieldName: string) => onSetPathCollapsed([fieldName], false),\n    [onSetPathCollapsed],\n  )\n\n  const handleBlur = useCallback(() => onPathBlur(EMPTY_ARRAY), [onPathBlur])\n\n  const handleFocus = useCallback(() => onPathFocus(EMPTY_ARRAY), [onPathFocus])\n\n  const handleChange = useCallback(\n    (patch: FormPatch | FormPatch[] | PatchEvent) => onChange(PatchEvent.from(patch)),\n    [onChange],\n  )\n\n  const focusRef = useRef(null)\n\n  const handleSelectFieldGroup = useCallback(\n    (groupName: string) => onFieldGroupSelect(EMPTY_ARRAY, groupName),\n    [onFieldGroupSelect],\n  )\n\n  const handleOpenField = useCallback((fieldName: string) => onPathOpen([fieldName]), [onPathOpen])\n\n  const handleCloseField = useCallback(() => onPathOpen([]), [onPathOpen])\n\n  const handleCollapseFieldSet = useCallback(\n    (fieldSetName: string) => onSetFieldSetCollapsed([fieldSetName], true),\n    [onSetFieldSetCollapsed],\n  )\n\n  const handleExpandFieldSet = useCallback(\n    (fieldSetName: string) => onSetFieldSetCollapsed([fieldSetName], false),\n    [onSetFieldSetCollapsed],\n  )\n  // These hooks may be stored in context as an perf optimization\n  const Input = useInputComponent()\n  const Field = useFieldComponent()\n  const Preview = usePreviewComponent()\n  const Item = useItemComponent()\n  const Block = useBlockComponent()\n  const InlineBlock = useInlineBlockComponent()\n  const Annotation = useAnnotationComponent()\n\n  const renderInput = useCallback(\n    (inputProps: Omit<InputProps, 'renderDefault'>) => <Input {...inputProps} />,\n    [Input],\n  )\n  const renderField = useCallback(\n    (fieldProps: Omit<FieldProps, 'renderDefault'>) => <Field {...fieldProps} />,\n    [Field],\n  )\n  const renderItem = useCallback(\n    (itemProps: Omit<ItemProps, 'renderDefault'>) => <Item {...itemProps} />,\n    [Item],\n  )\n  const renderPreview = useCallback(\n    (previewProps: RenderPreviewCallbackProps) => (\n      <PreviewLoader component={Preview} {...previewProps} />\n    ),\n    [Preview],\n  )\n  const renderBlock = useCallback(\n    (blockProps: Omit<BlockProps, 'renderDefault'>) => <Block {...blockProps} />,\n    [Block],\n  )\n  const renderInlineBlock = useCallback(\n    (blockProps: Omit<BlockProps, 'renderDefault'>) => <InlineBlock {...blockProps} />,\n    [InlineBlock],\n  )\n  const renderAnnotation = useCallback(\n    (annotationProps: Omit<BlockAnnotationProps, 'renderDefault'>) => (\n      <Annotation {...annotationProps} />\n    ),\n    [Annotation],\n  )\n\n  const rootInputProps: Omit<ObjectInputProps, 'renderDefault'> = {\n    focusPath,\n    elementProps: {\n      ref: focusRef,\n      id,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      'aria-describedby': undefined, // Root input should not have any aria-describedby\n    },\n    changed: members.some((m) => m.kind === 'field' && m.field.changed),\n    focused,\n    groups,\n    id,\n    level: 0,\n    members,\n    onChange: handleChange,\n    onFieldClose: handleCloseField,\n    onFieldCollapse: handleCollapseField,\n    onFieldSetCollapse: handleCollapseFieldSet,\n    onFieldExpand: handleExpandField,\n    onFieldSetExpand: handleExpandFieldSet,\n    onPathFocus: onPathFocus,\n    onFieldOpen: handleOpenField,\n    onFieldGroupSelect: handleSelectFieldGroup,\n    path: EMPTY_ARRAY,\n    presence: EMPTY_ARRAY,\n    readOnly,\n    renderAnnotation,\n    renderBlock,\n    renderField,\n    renderInlineBlock,\n    renderInput,\n    renderItem,\n    renderPreview,\n    schemaType,\n    validation: EMPTY_ARRAY,\n    value,\n  }\n\n  return (\n    <FormProvider\n      __internal_fieldActions={fieldActions}\n      __internal_patchChannel={patchChannel}\n      autoFocus={autoFocus}\n      changesOpen={changesOpen}\n      collapsedFieldSets={collapsedFieldSets}\n      collapsedPaths={collapsedPaths}\n      focusPath={focusPath}\n      focused={focused}\n      groups={groups}\n      id={id}\n      onChange={onChange}\n      onPathBlur={onPathBlur}\n      onPathFocus={onPathFocus}\n      onPathOpen={onPathOpen}\n      onFieldGroupSelect={onFieldGroupSelect}\n      onSetPathCollapsed={onSetPathCollapsed}\n      onSetFieldSetCollapsed={onSetFieldSetCollapsed}\n      presence={presence}\n      validation={validation}\n      readOnly={readOnly}\n      schemaType={schemaType}\n    >\n      <GetFormValueProvider value={value}>\n        <FormValueProvider value={value}>\n          <DocumentFieldActionsProvider actions={fieldActions}>\n            {renderInput(rootInputProps)}\n          </DocumentFieldActionsProvider>\n        </FormValueProvider>\n      </GetFormValueProvider>\n    </FormProvider>\n  )\n}\n","import {type SanityClient} from '@sanity/client'\nimport {merge, type Observable} from 'rxjs'\nimport {switchMap} from 'rxjs/operators'\n\nimport {type IdPair} from '../types'\nimport {memoize} from '../utils/createMemoizer'\nimport {type RemoteSnapshotVersionEvent} from './checkoutPair'\nimport {memoizedPair} from './memoizedPair'\nimport {memoizeKeyGen} from './memoizeKeyGen'\n\n/** @internal */\nexport const remoteSnapshots = memoize(\n  (\n    client: SanityClient,\n    idPair: IdPair,\n    typeName: string,\n  ): Observable<RemoteSnapshotVersionEvent> => {\n    return memoizedPair(client, idPair, typeName).pipe(\n      switchMap(({published, draft}) => merge(published.remoteSnapshot$, draft.remoteSnapshot$)),\n    )\n  },\n  memoizeKeyGen,\n)\n","import {type Schema, type SchemaType} from '@sanity/types'\n\nimport {isBuilder} from './resolve'\nimport {type Template} from './types'\nimport {validateTemplates} from './validate'\n\nfunction maybeSerialize(template: Template) {\n  return isBuilder(template) ? template.serialize() : template\n}\n\nfunction isNonNullable<T>(t: T): t is NonNullable<T> {\n  return !!t\n}\n\n/** @internal */\nexport function prepareTemplates(schema: Schema, initialValueTemplates: Template[]): Template[] {\n  const serialized = initialValueTemplates.map(maybeSerialize)\n  return validateTemplates(schema, serialized)\n}\n\n/** @internal */\nexport function defaultTemplateForType(schemaType: SchemaType): Template {\n  return {\n    id: schemaType.name,\n    schemaType: schemaType.name,\n    title: schemaType.title || schemaType.name,\n    icon: schemaType.icon,\n    value: schemaType.initialValue || {_type: schemaType.name},\n  }\n}\n\n/** @internal */\nexport function defaultTemplatesForSchema(schema: Schema): Template[] {\n  const schemaTypes = schema\n    .getTypeNames()\n    .filter((typeName) => !/^sanity\\./.test(typeName))\n    .map((typeName) => schema.get(typeName))\n    .filter(isNonNullable)\n    .filter((schemaType) => schemaType.type?.name === 'document')\n\n  return prepareTemplates(\n    schema,\n    schemaTypes.map((schemaType) => defaultTemplateForType(schemaType)),\n  )\n}\n","import {useEffect, useMemo, useState} from 'react'\n\nimport {getPublishedId} from '../../../../util'\nimport {useDocumentStore} from '../../datastores'\n\n/** @internal */\nexport interface DocumentTypeResolveState {\n  isLoaded: boolean\n  documentType: string | undefined\n}\n\nconst LOADING_STATE: DocumentTypeResolveState = {\n  isLoaded: false,\n  documentType: undefined,\n}\n\n/** @internal */\nexport function useDocumentType(documentId: string, specifiedType = '*'): DocumentTypeResolveState {\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n  const isResolved = Boolean(specifiedType && specifiedType !== '*')\n\n  // Memoize what a synchronously resolved state looks like (eg specified type is present),\n  // in order to return the same object each time. Note that this can be \"incorrect\", but\n  // that we won't be returning it in that case, eg: `{documentType: '*', isResolved: true}\n  const SYNC_RESOLVED_STATE = useMemo(\n    () => ({documentType: specifiedType, isLoaded: true}),\n    [specifiedType],\n  )\n\n  // Set up our state that we'll only use when we need to reach out to the API to find\n  // the document type for a given document. Otherwise we'll be using SYNC_RESOLVED_STATE.\n  // For consistency (between different document ids/types), we're setting the sync resolved\n  // state here as well, but it isn't strictly necessary for correct rendering.\n  const [resolvedState, setDocumentType] = useState<DocumentTypeResolveState>(\n    isResolved ? SYNC_RESOLVED_STATE : LOADING_STATE,\n  )\n\n  // Reset documentType when documentId changes. Note that we're using the referentially\n  // stable LOADING_STATE in order to prevent double rendering on initial load.\n  useEffect(() => setDocumentType(LOADING_STATE), [publishedId, specifiedType])\n\n  // Load the documentType from Content Lake, unless we're already in a resolved state\n  useEffect(() => {\n    if (isResolved) {\n      return undefined\n    }\n\n    const sub = documentStore\n      .resolveTypeForDocument(publishedId, specifiedType)\n      .subscribe((documentType: string) => setDocumentType({documentType, isLoaded: true}))\n\n    return () => sub.unsubscribe()\n  }, [documentStore, publishedId, specifiedType, isResolved])\n\n  return isResolved\n    ? // `isResolved` is only true when we're _synchronously_ resolved\n      SYNC_RESOLVED_STATE\n    : // Using the document type resolved from the API\n      resolvedState\n}\n","import {useSyncExternalStoreWithSelector} from 'use-sync-external-store/with-selector'\n\nimport {type TimelineState, type TimelineStore} from './useTimelineStore'\n\n/**\n * Custom hook which wraps around `useSyncExternalStore`.\n * Accepts a selector function which can be used to opt-in to specific timelineStore updates.\n *\n * @internal\n */\nexport function useTimelineSelector<ReturnValue>(\n  timelineStore: TimelineStore,\n  selector: (timelineState: TimelineState) => ReturnValue,\n): ReturnValue {\n  return useSyncExternalStoreWithSelector(\n    timelineStore.subscribe,\n    timelineStore.getSnapshot,\n    null,\n    selector,\n  )\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {useEffect, useMemo, useRef} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {\n  BehaviorSubject,\n  catchError,\n  distinctUntilChanged,\n  map,\n  of,\n  type Subscription,\n  tap,\n} from 'rxjs'\n\nimport {\n  type Annotation,\n  type Chunk,\n  type SelectionState,\n  type TimelineController,\n  useHistoryStore,\n} from '../../..'\nimport {useClient} from '../../../hooks'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS} from '../../../studioClient'\nimport {remoteSnapshots, type RemoteSnapshotVersionEvent} from '../document'\n\ninterface UseTimelineControllerOpts {\n  documentId: string\n  documentType: string\n  onError?: (err: Error) => void\n  rev?: string\n  since?: string\n}\n\n/** @internal */\nexport interface TimelineState {\n  chunks: Chunk[]\n  diff: ObjectDiff<Annotation, Record<string, any>> | null\n  /** null is used here when the chunks hasn't loaded / is not known */\n  hasMoreChunks: boolean | null\n  isLoading: boolean\n  /**\n   * Whether this timeline is fully loaded and completely empty (true for new documents)\n   * It can be `null` when the chunks hasn't loaded / is not known\n   */\n  isPristine: boolean | null\n  lastNonDeletedRevId: string | null\n  onOlderRevision: boolean\n  realRevChunk: Chunk | null\n  revTime: Chunk | null\n  selectionState: SelectionState\n  sinceAttributes: Record<string, unknown> | null\n  sinceTime: Chunk | null\n  timelineDisplayed: Record<string, unknown> | null\n  timelineReady: boolean\n}\n\nconst INITIAL_TIMELINE_STATE: TimelineState = {\n  chunks: [],\n  diff: null,\n  hasMoreChunks: null,\n  isLoading: false,\n  isPristine: null,\n  lastNonDeletedRevId: null,\n  onOlderRevision: false,\n  realRevChunk: null,\n  revTime: null,\n  selectionState: 'inactive',\n  sinceAttributes: null,\n  sinceTime: null,\n  timelineDisplayed: null,\n  timelineReady: false,\n}\n\n/** @internal */\nexport interface TimelineStore {\n  findRangeForRev: TimelineController['findRangeForNewRev']\n  findRangeForSince: TimelineController['findRangeForNewSince']\n  loadMore: () => void\n  getSnapshot: () => TimelineState\n  subscribe: (callback: () => void) => () => void\n}\n\n/**\n * Creates a store which handles the creation of a document Timeline,\n * TimelineController and also fetches pre-requisite document snapshots.\n *\n * `TimelineStore` exposes select TimelineController methods used to query\n * ranges and fetch more transactions. It can also be used with\n * `useSyncExternalStore` to subscribe to selected state changes.\n *\n * @internal\n * */\nexport function useTimelineStore({\n  documentId,\n  documentType,\n  onError,\n  rev,\n  since,\n}: UseTimelineControllerOpts): TimelineStore {\n  const historyStore = useHistoryStore()\n  const snapshotsSubscriptionRef = useRef<Subscription | null>(null)\n  const timelineStateRef = useRef<TimelineState>(INITIAL_TIMELINE_STATE)\n  const client = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  /**\n   * The mutable TimelineController, used internally\n   */\n  const controller = useMemo(\n    () =>\n      historyStore.getTimelineController({\n        client,\n        documentId,\n        documentType,\n      }),\n    [client, documentId, documentType, historyStore],\n  )\n\n  /**\n   * A BehaviorSubject which can be subscribed by multiple observers, which broadcasts\n   * the the latest state of the (mutable) TimelineController.\n   */\n  const timelineController$ = useMemo(\n    () => new BehaviorSubject<TimelineController>(controller),\n    [controller],\n  )\n\n  /**\n   * Broadcasts the updated state on TimelineController's `handler` updates (as well as on mount / unmount).\n   *\n   * Note that TimelineController triggers updates very frequently when fetching transactions, which it does so\n   * in fairly small batches.\n   *\n   * This will also suspend TimelineController transaction fetching on cleanup, ensuring that fetches don't\n   * continue once the document pane has been closed.\n   */\n  useEffect(() => {\n    controller.setRange(since || null, rev || null)\n    timelineController$.next(controller)\n\n    controller.handler = (err, innerController) => {\n      if (err) {\n        timelineController$.error(err)\n      } else {\n        /**\n         * NOTE: TimelineController requires that you call `setRange` manually whenever its internal\n         * timeline has changed (e.g. has a result of fetched transactions).\n         * Ideally, TimelineController would be updated to handle this automatically for us.\n         * Until then, this workaround waits until the next call stack before calling `setRange`.\n         */\n        setTimeout(() => {\n          innerController.setRange(since || null, rev || null)\n          timelineController$.next(innerController)\n        }, 0)\n      }\n    }\n    controller.resume()\n    return () => controller.suspend()\n  }, [rev, since, controller, timelineController$])\n\n  /**\n   * Fetch document snapshots and update the mutable controller.\n   * Unsubscribes on clean up, preventing double fetches in strict mode.\n   */\n  useEffect(() => {\n    if (!snapshotsSubscriptionRef.current) {\n      snapshotsSubscriptionRef.current = remoteSnapshots(\n        client,\n        {draftId: `drafts.${documentId}`, publishedId: documentId},\n        documentType,\n      ).subscribe((ev: RemoteSnapshotVersionEvent) => {\n        controller.handleRemoteMutation(ev)\n      })\n    }\n    return () => {\n      if (snapshotsSubscriptionRef.current) {\n        snapshotsSubscriptionRef.current.unsubscribe()\n        snapshotsSubscriptionRef.current = null\n      }\n    }\n  }, [client, controller, documentId, documentType])\n\n  const timelineStore = useMemo(() => {\n    return {\n      findRangeForRev: (chunk: Chunk) => controller.findRangeForNewRev(chunk),\n      findRangeForSince: (chunk: Chunk) => controller.findRangeForNewSince(chunk),\n      loadMore: () => {\n        controller.setLoadMore(true)\n        timelineStateRef.current.isLoading = true\n      },\n      getSnapshot: () => timelineStateRef.current,\n      subscribe: (callback: () => void) => {\n        const subscription = timelineController$\n          .pipe(\n            // Manually stop loading transactions in TimelineController, otherwise transaction history\n            // will continue to be fetched – even if unwanted.\n            tap((innerController) => innerController.setLoadMore(false)),\n            map((innerController) => {\n              const chunks = innerController.timeline.mapChunks((c) => c)\n              const lastNonDeletedChunk = chunks.filter(\n                (chunk) => !['delete', 'initial'].includes(chunk.type),\n              )\n              const hasMoreChunks = !innerController.timeline.reachedEarliestEntry\n              const timelineReady = !['invalid', 'loading'].includes(innerController.selectionState)\n              return {\n                chunks,\n                diff: innerController.sinceTime ? innerController.currentObjectDiff() : null,\n                isLoading: false,\n                isPristine: timelineReady ? chunks.length === 0 && hasMoreChunks === false : null,\n                hasMoreChunks: !innerController.timeline.reachedEarliestEntry,\n                lastNonDeletedRevId: lastNonDeletedChunk?.[0]?.id,\n                onOlderRevision: innerController.onOlderRevision(),\n                realRevChunk: innerController.realRevChunk,\n                revTime: innerController.revTime,\n                selectionState: innerController.selectionState,\n                sinceAttributes: innerController.sinceAttributes(),\n                sinceTime: innerController.sinceTime,\n                timelineDisplayed: innerController.displayed(),\n                timelineReady,\n              }\n            }),\n            // Only emit (and in turn, re-render) when values have changed\n            distinctUntilChanged(deepEquals),\n            // Emit initial timeline state whenever we encounter an error in TimelineController's `handler` callback.\n            // A little ham-fisted, but also reflects how we handle timeline errors in the UI\n            // (i.e. no timeline state or diffs are rendered and we revert to the current editable document)\n            catchError((err) => {\n              onError?.(err)\n              return of(INITIAL_TIMELINE_STATE)\n            }),\n            tap((timelineState) => {\n              timelineStateRef.current = timelineState\n            }),\n            // Trigger callback function required by `useSyncExternalStore` to denote when to re-render\n            tap(callback),\n          )\n          .subscribe()\n\n        return () => subscription.unsubscribe()\n      },\n    }\n  }, [controller, onError, timelineController$])\n\n  return timelineStore\n}\n","import {useEffect, useState} from 'react'\n\nimport {useProjectStore} from '../datastores'\nimport {type ProjectData} from './types'\n\n/** @internal */\nexport function useProject(): {value: ProjectData | null} {\n  const projectStore = useProjectStore()\n  const [value, setValue] = useState<ProjectData | null>(null)\n\n  useEffect(() => {\n    const project$ = projectStore.get()\n    const sub = project$.subscribe(setValue)\n\n    return () => sub.unsubscribe()\n  }, [projectStore])\n\n  return {value}\n}\n","import {useEffect, useState} from 'react'\n\nimport {useProjectStore} from '../datastores'\nimport {type ProjectDatasetData} from './types'\n\n/** @internal */\nexport function useProjectDatasets(): {value: ProjectDatasetData[] | null} {\n  const projectStore = useProjectStore()\n  const [value, setValue] = useState<ProjectDatasetData[] | null>(null)\n\n  useEffect(() => {\n    const project$ = projectStore.getDatasets()\n    const sub = project$.subscribe(setValue)\n\n    return () => sub.unsubscribe()\n  }, [projectStore])\n\n  return {value}\n}\n","import {type SanityClient} from '@sanity/client'\nimport {type CurrentUser} from '@sanity/types'\nimport {combineLatest, firstValueFrom, type Observable} from 'rxjs'\nimport {map} from 'rxjs/operators'\n\nimport {createMockAuthStore} from '../store'\nimport {prepareConfig} from './prepareConfig'\nimport {\n  type Config,\n  type SchemaPluginOptions,\n  type SingleWorkspace,\n  type Source,\n  type Workspace,\n} from './types'\n\n/**\n * Fully resolves a configuration including subscribing to all sources and\n * workspaces from a config. Returns an `Observable` that waits till all sources\n * emit once before emitting an array of fully resolved sources and workspaces.\n *\n * @internal\n */\nexport function resolveConfig(config: Config): Observable<Workspace[]> {\n  const {workspaces} = prepareConfig(config)\n\n  return combineLatest(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    workspaces.flatMap((workspaceSummary) =>\n      combineLatest(workspaceSummary.__internal.sources.map(({source}) => source)).pipe(\n        map(\n          (sources): Workspace => ({\n            ...workspaceSummary,\n            ...sources[0],\n            unstable_sources: sources,\n            type: 'workspace',\n          }),\n        ),\n      ),\n    ),\n  )\n}\n\n/** @internal */\nexport type CreateWorkspaceFromConfigOptions =\n  | SingleWorkspace\n  | (SingleWorkspace & {\n      currentUser: CurrentUser\n      getClient: (options: {apiVersion: string}) => SanityClient\n      schema?: SchemaPluginOptions\n    })\n\n/**\n * PRIMARILY FOR TESTING PURPOSES.\n *\n * This will create a fully resolved workspace from a config and optionally\n * allows a `client` and `currentUser` override. This exists primarily for\n * testing purposes. If you need to use a workspace, we recommend using the\n * `useWorkspace` hook to grab the fully resolved workspace from the\n * `StudioProvider`\n *\n * @internal\n */\nexport async function createWorkspaceFromConfig(\n  options: CreateWorkspaceFromConfigOptions,\n): Promise<Workspace> {\n  const client = 'getClient' in options ? options.getClient({apiVersion: '2023-11-13'}) : undefined\n  const [workspace] = await firstValueFrom(\n    resolveConfig({\n      ...options,\n      ...(client &&\n        'currentUser' in options && {\n          auth: createMockAuthStore({...options, client}),\n        }),\n    }),\n  )\n\n  return workspace\n}\n\n/**\n * PRIMARILY FOR TESTING PURPOSES.\n *\n * This will create a fully resolved source from a config and optionally\n * allows a `client` and `currentUser` override. This exists primarily for\n * testing purposes. If you need to use a source, we recommend using the\n * `useSource` hook to grab the fully resolved source from the `StudioProvider`\n *\n * @internal\n */\nexport async function createSourceFromConfig(\n  options: CreateWorkspaceFromConfigOptions,\n): Promise<Source> {\n  const workspace = await createWorkspaceFromConfig(options)\n  return workspace.unstable_sources[0]\n}\n","import {useMemo} from 'react'\n\nimport {type ConfigContext, type Source} from './types'\n\n/**\n * Reduce a {@link Source} down to a {@link ConfigContext}, memoizing using `useMemo`\n *\n * @param source - Source to convert\n * @returns A config context containing only the defined properties of that interface\n * @internal\n */\nexport function useConfigContextFromSource(source: Source): ConfigContext {\n  const {projectId, dataset, schema, currentUser, getClient, i18n} = source\n  return useMemo(() => {\n    return {projectId, dataset, schema, currentUser, getClient, i18n}\n  }, [projectId, dataset, schema, currentUser, getClient, i18n])\n}\n\n/**\n * Reduce a {@link Source} down to a {@link ConfigContext}, without memoization - use for non-react contexts\n *\n * @param source - Source to convert\n * @returns A config context containing only the defined properties of that interface\n * @internal\n */\nexport function getConfigContextFromSource(source: Source): ConfigContext {\n  const {projectId, dataset, schema, currentUser, getClient, i18n} = source\n  return {projectId, dataset, schema, currentUser, getClient, i18n}\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\n\nimport {useClient} from '../../hooks'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS} from '../../studioClient'\nimport {useWorkspace} from '../workspace'\nimport {AddonDatasetContext} from './AddonDatasetContext'\nimport {type AddonDatasetContextValue} from './types'\n\nconst API_VERSION = 'v2023-11-13'\n\ninterface AddonDatasetSetupProviderProps {\n  children: React.ReactNode\n}\n\n/**\n * This provider sets the addon dataset client, currently called `comments` dataset.\n * It also exposes a `createAddonDataset` function that can be used to create the addon dataset if it does not exist.\n * @beta\n * @hidden\n */\nexport function AddonDatasetProvider(props: AddonDatasetSetupProviderProps) {\n  const {children} = props\n  const {dataset, projectId} = useWorkspace()\n  const originalClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n  const [addonDatasetClient, setAddonDatasetClient] = useState<SanityClient | null>(null)\n  const [isCreatingDataset, setIsCreatingDataset] = useState<boolean>(false)\n\n  const getAddonDatasetName = useCallback(async (): Promise<string | undefined> => {\n    const res = await originalClient.withConfig({apiVersion: API_VERSION}).request({\n      uri: `/projects/${projectId}/datasets?datasetProfile=comments&addonFor=${dataset}`,\n      tag: 'sanity.studio',\n    })\n\n    // The response is an array containing the addon dataset. We only expect\n    // one addon dataset to be returned, so we return the name of the first\n    // addon dataset in the array.\n    return res?.[0]?.name\n  }, [dataset, originalClient, projectId])\n\n  const handleCreateClient = useCallback(\n    (addonDatasetName: string) => {\n      const client = originalClient.withConfig({\n        apiVersion: API_VERSION,\n        dataset: addonDatasetName,\n        projectId,\n        requestTagPrefix: 'sanity.studio',\n        useCdn: false,\n        withCredentials: true,\n      })\n\n      return client\n    },\n    [originalClient, projectId],\n  )\n\n  const handleCreateAddonDataset = useCallback(async (): Promise<SanityClient | null> => {\n    setIsCreatingDataset(true)\n\n    // Before running the setup, we check if the addon dataset already exists.\n    // The addon dataset might already exist if another user has already run\n    // the setup, but the current user has not refreshed the page yet and\n    // therefore don't have a client for the addon dataset yet.\n    try {\n      const addonDatasetName = await getAddonDatasetName()\n\n      if (addonDatasetName) {\n        const client = handleCreateClient(addonDatasetName)\n        setAddonDatasetClient(client)\n        setIsCreatingDataset(false)\n        return client\n      }\n    } catch (_) {\n      // If the dataset does not exist we will get an error, but we can ignore\n      // it since we will create the dataset in the next step.\n    }\n\n    try {\n      // 1. Create the addon dataset\n      const res = await originalClient.withConfig({apiVersion: API_VERSION}).request({\n        uri: `/comments/${dataset}/setup`,\n        method: 'POST',\n      })\n\n      const datasetName = res?.datasetName\n\n      // 2. We can't continue if the addon dataset name is not returned\n      if (!datasetName) {\n        setIsCreatingDataset(false)\n        return null\n      }\n\n      // 3. Create a client for the addon dataset and set it in the context value\n      //    so that the consumers can use it to execute comment operations and set up\n      //    the real time listener for the addon dataset.\n      const client = handleCreateClient(datasetName)\n      setAddonDatasetClient(client)\n\n      // 4. Return the client so that the caller can use it to execute operations\n      return client\n    } catch (err) {\n      throw err\n    } finally {\n      setIsCreatingDataset(false)\n    }\n  }, [dataset, getAddonDatasetName, handleCreateClient, originalClient])\n\n  useEffect(() => {\n    // On mount, we check if the addon dataset already exists. If it does, we create\n    // a client for it and set it in the context value so that the consumers can use\n    // it to execute comment operations and set up the real time listener for the addon\n    // dataset.\n    getAddonDatasetName().then((addonDatasetName) => {\n      if (!addonDatasetName) return\n      const client = handleCreateClient(addonDatasetName)\n      setAddonDatasetClient(client)\n    })\n  }, [getAddonDatasetName, handleCreateClient])\n\n  const ctxValue = useMemo(\n    (): AddonDatasetContextValue => ({\n      client: addonDatasetClient,\n      createAddonDataset: handleCreateAddonDataset,\n      isCreatingDataset,\n    }),\n    [addonDatasetClient, handleCreateAddonDataset, isCreatingDataset],\n  )\n\n  return <AddonDatasetContext.Provider value={ctxValue}>{children}</AddonDatasetContext.Provider>\n}\n","import {useContext} from 'react'\n\nimport {AddonDatasetContext} from './AddonDatasetContext'\nimport {type AddonDatasetContextValue} from './types'\n\n/**\n * @beta\n * @hidden\n */\nexport function useAddonDataset(): AddonDatasetContextValue {\n  const ctx = useContext(AddonDatasetContext)\n\n  if (!ctx) {\n    throw new Error('useAddonDataset: missing context value')\n  }\n\n  return ctx\n}\n","import {Box, Text} from '@sanity/ui'\n\nimport {type LogoProps} from '../../../config'\n\n/**\n * @hidden\n * @beta */\nexport function StudioLogo(props: LogoProps) {\n  const {title} = props\n\n  return (\n    <Box padding={3} data-testid=\"studio-logo\">\n      <Text weight=\"medium\">{title}</Text>\n    </Box>\n  )\n}\n","import {multiply, parseColor, rgbToHex, screen} from '@sanity/ui/theme'\nimport {getLuminance, mix, parseToRgb, rgb} from 'polished'\n\nimport {type LegacyThemeTints} from './types'\n\n/**\n * @internal\n */\nexport function _buildTints(bg: string, mid: string, fg: string): LegacyThemeTints {\n  return {\n    50: mix(0.1, mid, bg),\n    100: mix(0.2, mid, bg),\n    200: mix(0.4, mid, bg),\n    300: mix(0.6, mid, bg),\n    400: mix(0.8, mid, bg),\n    500: mid,\n    600: mix(0.8, mid, fg),\n    700: mix(0.6, mid, fg),\n    800: mix(0.4, mid, fg),\n    900: mix(0.2, mid, fg),\n    950: mix(0.1, mid, fg),\n  }\n}\n\n/**\n * @internal\n */\nexport function _toHex(color: string): string {\n  const {red, green, blue} = parseToRgb(color)\n  return rgb(red, green, blue)\n}\n\n/**\n * @internal\n */\nexport function _isDark(bg: string, fg: string): boolean {\n  return getLuminance(bg) < getLuminance(fg)\n}\n\n/**\n * Blend two colors using the \"screen\" blend mode\n * @internal\n */\nexport function _multiply(bg: string, fg: string): string {\n  const b = parseColor(bg)\n  const s = parseColor(fg)\n  const hex = rgbToHex(multiply(b, s))\n\n  return hex\n}\n\n/**\n * Blend two colors using the \"screen\" blend mode\n * @internal\n */\nexport function _screen(bg: string, fg: string): string {\n  const b = parseColor(bg)\n  const s = parseColor(fg)\n  const hex = rgbToHex(screen(b, s))\n\n  return hex\n}\n","import {hues} from '@sanity/color'\nimport {createColorTheme, rgba, type ThemeColorSchemes} from '@sanity/ui/theme'\n\nimport {_isDark, _multiply, _screen} from './helpers'\nimport {type LegacyPalette} from './palette'\nimport {type LegacyTones} from './tones'\nimport {type LegacyThemeTints} from './types'\n\nconst NEUTRAL_TONES = ['default', 'transparent']\n\nexport function buildColor(\n  legacyPalette: LegacyPalette,\n  legacyTones: LegacyTones,\n): ThemeColorSchemes {\n  return createColorTheme({\n    base: ({dark: navbar, name}) => {\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const dark = stateTones.dark\n      const blend = navbar ? _screen : _multiply\n      const tints = stateTones[name] || stateTones.default\n\n      if (name === 'default') {\n        const skeletonFrom = stateTones.default[100]\n\n        return {\n          fg: stateTones.fg,\n          bg: stateTones.bg,\n          border: stateTones.default[200],\n          focusRing: legacyPalette.focus.base,\n          shadow: {\n            outline: rgba(stateTones.default[500], 0.4),\n            umbra: rgba(dark ? legacyPalette.black : stateTones.default[500], 0.2),\n            penumbra: rgba(dark ? legacyPalette.black : stateTones.default[500], 0.14),\n            ambient: rgba(dark ? legacyPalette.black : stateTones.default[500], 0.12),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (name === 'transparent') {\n        const bg = tints[50]\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          fg: tints[900],\n          bg,\n          border: tints[300],\n          focusRing: legacyPalette.focus.base,\n          shadow: {\n            outline: rgba(tints[500], dark ? 0.2 : 0.4),\n            umbra: rgba(dark ? legacyPalette.black : tints[500], 0.2),\n            penumbra: rgba(dark ? legacyPalette.black : tints[500], 0.14),\n            ambient: rgba(dark ? legacyPalette.black : tints[500], 0.12),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      const bg = tints[50]\n      const skeletonFrom = blend(bg, tints[100])\n\n      return {\n        fg: tints[900],\n        bg,\n        border: tints[200],\n        focusRing: tints[500],\n        shadow: {\n          outline: rgba(tints[500], dark ? 0.2 : 0.4),\n          umbra: rgba(dark ? legacyPalette.black : tints[500], 0.2),\n          penumbra: rgba(dark ? legacyPalette.black : tints[500], 0.14),\n          ambient: rgba(dark ? legacyPalette.black : tints[500], 0.12),\n        },\n        skeleton: {\n          from: skeletonFrom,\n          to: rgba(skeletonFrom, 0.5),\n        },\n      }\n    },\n\n    solid: ({base, dark: navbar, name, state, tone}) => {\n      const buttonTones = navbar ? legacyTones.button.navbar : legacyTones.button.default\n      const dark = buttonTones.dark\n      const blend = dark ? _screen : _multiply\n      const blendInvert = dark ? _multiply : _screen\n      const defaultTints = buttonTones[name] || buttonTones.default\n      const isNeutral = NEUTRAL_TONES.includes(name) && NEUTRAL_TONES.includes(tone)\n      let tints = buttonTones[tone === 'default' ? name : tone] || defaultTints\n\n      if (state === 'disabled') {\n        tints = defaultTints\n\n        const bg = blend(base.bg, tints[200])\n        const skeletonFrom = blendInvert(bg, tints[800])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[200]),\n          fg: blend(base.bg, buttonTones.bg),\n          icon: blend(base.bg, buttonTones.bg),\n          muted: {\n            fg: blend(base.bg, tints[50]),\n          },\n          accent: {\n            fg: blend(base.bg, tints[50]),\n          },\n          link: {\n            fg: blend(base.bg, tints[50]),\n          },\n          code: {\n            bg,\n            fg: blend(base.bg, tints[50]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'hovered') {\n        const bg = blend(base.bg, tints[600])\n        const skeletonFrom = blendInvert(bg, tints[800])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[600]),\n          fg: blend(base.bg, buttonTones.bg),\n          icon: blend(base.bg, buttonTones.bg),\n          muted: {\n            fg: blend(base.bg, tints[200]),\n          },\n          accent: {\n            fg: blendInvert(bg, buttonTones.critical[300]),\n          },\n          link: {\n            fg: blendInvert(bg, buttonTones.primary[200]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(base.bg, tints[200]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'pressed') {\n        const bg = blend(base.bg, tints[800])\n        const skeletonFrom = blendInvert(bg, tints[800])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[800]),\n          fg: blend(base.bg, buttonTones.bg),\n          icon: blend(base.bg, buttonTones.bg),\n          muted: {\n            fg: blend(base.bg, tints[200]),\n          },\n          accent: {\n            fg: blendInvert(bg, buttonTones.critical[300]),\n          },\n          link: {\n            fg: blendInvert(bg, buttonTones.primary[200]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(base.bg, tints[200]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'selected') {\n        if (isNeutral) {\n          tints = buttonTones.primary\n        }\n\n        const bg = blend(base.bg, tints[800])\n        const skeletonFrom = blendInvert(bg, tints[800])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[800]),\n          fg: blend(base.bg, buttonTones.bg),\n          icon: blend(base.bg, buttonTones.bg),\n          muted: {\n            fg: blend(base.bg, tints[200]),\n          },\n          accent: {\n            fg: blendInvert(bg, buttonTones.critical[300]),\n          },\n          link: {\n            fg: blendInvert(bg, buttonTones.primary[200]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(base.bg, tints[200]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      const bg = blend(base.bg, tints[500])\n      const skeletonFrom = blendInvert(bg, tints[800])\n\n      return {\n        bg,\n        border: blend(base.bg, tints[500]),\n        fg: blend(base.bg, buttonTones.bg),\n        icon: blend(base.bg, buttonTones.bg),\n        muted: {\n          fg: blend(base.bg, tints[100]),\n        },\n        accent: {\n          fg: blendInvert(bg, buttonTones.critical[200]),\n        },\n        link: {\n          fg: blendInvert(bg, buttonTones.primary[100]),\n        },\n        code: {\n          bg: blend(bg, tints[50]),\n          fg: blend(base.bg, tints[100]),\n        },\n        skeleton: {\n          from: skeletonFrom,\n          to: rgba(skeletonFrom, 0.5),\n        },\n      }\n    },\n\n    muted: ({base, dark: navbar, name, state, tone}) => {\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const dark = stateTones.dark\n      const blend = dark ? _screen : _multiply\n      const defaultTints = stateTones[name] || stateTones.default\n      const isNeutral = NEUTRAL_TONES.includes(name) && NEUTRAL_TONES.includes(tone)\n\n      let tints: LegacyThemeTints = stateTones[tone === 'default' ? name : tone] || defaultTints\n\n      if (state === 'disabled') {\n        tints = defaultTints\n\n        const bg = base.bg\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          bg,\n          border: blend(base.bg, tints[50]),\n          fg: blend(base.bg, tints[200]),\n          icon: blend(base.bg, tints[200]),\n          muted: {\n            fg: blend(bg, tints[100]),\n          },\n          accent: {\n            fg: blend(bg, tints[100]),\n          },\n          link: {\n            fg: blend(bg, tints[100]),\n          },\n          code: {\n            bg,\n            fg: blend(bg, tints[100]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'hovered') {\n        const bg = blend(base.bg, tints[50])\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          bg,\n          border: blend(bg, tints[100]),\n          fg: blend(base.bg, tints[900]),\n          icon: blend(base.bg, tints[900]),\n          muted: {\n            fg: blend(base.bg, tints[600]),\n          },\n          accent: {\n            fg: blend(base.bg, stateTones.critical[500]),\n          },\n          link: {\n            fg: blend(base.bg, stateTones.primary[600]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(base.bg, tints[600]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'pressed') {\n        if (isNeutral) {\n          tints = stateTones.primary\n        }\n\n        const bg = blend(base.bg, tints[100])\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          bg,\n          border: blend(bg, tints[100]),\n          fg: blend(base.bg, tints[800]),\n          icon: blend(base.bg, tints[800]),\n          muted: {\n            fg: blend(base.bg, tints[600]),\n          },\n          accent: {\n            fg: blend(bg, stateTones.critical[500]),\n          },\n          link: {\n            fg: blend(bg, stateTones.primary[600]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(bg, tints[600]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      if (state === 'selected') {\n        if (isNeutral) {\n          tints = stateTones.primary\n        }\n\n        const bg = blend(base.bg, tints[100])\n        const skeletonFrom = blend(bg, tints[100])\n\n        return {\n          bg,\n          border: blend(bg, tints[100]),\n          fg: blend(bg, tints[800]),\n          icon: blend(bg, tints[800]),\n          muted: {\n            fg: blend(bg, tints[600]),\n          },\n          accent: {\n            fg: blend(bg, stateTones.critical[500]),\n          },\n          link: {\n            fg: blend(bg, stateTones.primary[600]),\n          },\n          code: {\n            bg: blend(bg, tints[50]),\n            fg: blend(bg, tints[600]),\n          },\n          skeleton: {\n            from: skeletonFrom,\n            to: rgba(skeletonFrom, 0.5),\n          },\n        }\n      }\n\n      const bg = base.bg\n      const skeletonFrom = blend(base.bg, tints[100])\n\n      return {\n        bg,\n        border: blend(bg, tints[100]),\n        fg: blend(bg, tints[700]),\n        icon: blend(bg, tints[700]),\n        muted: {\n          fg: blend(bg, tints[600]),\n        },\n        accent: {\n          fg: blend(bg, stateTones.critical[500]),\n        },\n        link: {\n          fg: blend(bg, stateTones.primary[600]),\n        },\n        code: {\n          bg: blend(bg, tints[50]),\n          fg: blend(bg, tints[600]),\n        },\n        skeleton: {\n          from: skeletonFrom,\n          to: rgba(skeletonFrom, 0.5),\n        },\n      }\n    },\n\n    button: ({base, mode, muted, solid}) => {\n      if (mode === 'bleed') {\n        return {\n          enabled: {\n            ...muted.enabled,\n            border: muted.enabled.bg,\n          },\n          hovered: {\n            ...muted.hovered,\n            border: muted.hovered.bg,\n          },\n          pressed: {\n            ...muted.pressed,\n            border: muted.pressed.bg,\n          },\n          selected: {\n            ...muted.selected,\n            border: muted.selected.bg,\n          },\n          disabled: {\n            ...muted.disabled,\n            border: muted.disabled.bg,\n          },\n        }\n      }\n\n      if (mode === 'ghost') {\n        return {\n          ...solid,\n          enabled: {\n            ...muted.enabled,\n            border: base.border,\n          },\n          disabled: muted.disabled,\n        }\n      }\n\n      return solid\n    },\n\n    card: ({base, dark: navbar, muted, name, solid, state}) => {\n      if (state === 'hovered') {\n        return muted[name].hovered\n      }\n\n      if (state === 'disabled') {\n        return muted[name].disabled\n      }\n\n      const isNeutral = NEUTRAL_TONES.includes(name)\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const tints: LegacyThemeTints = stateTones[name] || stateTones.default\n\n      const dark = stateTones.dark\n      const blend = dark ? _screen : _multiply\n\n      if (state === 'pressed') {\n        if (isNeutral) {\n          return muted.primary.pressed\n        }\n\n        return muted[name].pressed\n      }\n\n      if (state === 'selected') {\n        if (isNeutral) {\n          return solid.primary.enabled\n        }\n\n        return solid[name].enabled\n      }\n\n      const bg = base.bg\n      const skeletonFrom = blend(base.bg, tints[dark ? 900 : 100])\n\n      return {\n        bg,\n        fg: base.fg,\n        icon: base.fg,\n        border: base.border,\n        muted: {\n          fg: blend(base.bg, tints[dark ? 400 : 600]),\n        },\n        accent: {\n          fg: blend(base.bg, stateTones.critical[dark ? 400 : 500]),\n        },\n        link: {\n          fg: blend(base.bg, stateTones.primary[dark ? 400 : 600]),\n        },\n        code: {\n          bg: blend(base.bg, tints[dark ? 950 : 50]),\n          fg: tints[dark ? 400 : 600],\n        },\n        skeleton: {\n          from: skeletonFrom,\n          to: rgba(skeletonFrom, 0.5),\n        },\n      }\n    },\n\n    input: ({base, dark: navbar, mode, state}) => {\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const dark = stateTones.dark\n      const blend = dark ? _screen : _multiply\n\n      if (mode === 'invalid') {\n        const tints = stateTones.critical\n\n        return {\n          bg: blend(base.bg, tints[50]),\n          bg2: blend(base.bg, tints[50]),\n          fg: blend(base.bg, tints[700]),\n          border: blend(base.bg, tints[200]),\n          placeholder: blend(base.bg, tints[400]),\n        }\n      }\n\n      if (state === 'hovered') {\n        return {\n          bg: base.bg,\n          bg2: base.bg,\n          fg: base.fg,\n          border: blend(base.bg, hues.gray[300].hex),\n          placeholder: blend(base.bg, hues.gray[400].hex),\n        }\n      }\n\n      if (state === 'disabled') {\n        return {\n          bg: blend(base.bg, hues.gray[50].hex),\n          bg2: blend(base.bg, hues.gray[50].hex),\n          fg: blend(base.bg, hues.gray[200].hex),\n          border: blend(base.bg, hues.gray[100].hex),\n          placeholder: blend(base.bg, hues.gray[100].hex),\n        }\n      }\n\n      if (state === 'readOnly') {\n        return {\n          bg: blend(base.bg, hues.gray[50].hex),\n          bg2: blend(base.bg, hues.gray[50].hex),\n          fg: blend(base.bg, hues.gray[800].hex),\n          border: blend(base.bg, hues.gray[200].hex),\n          placeholder: blend(base.bg, hues.gray[400].hex),\n        }\n      }\n\n      return {\n        bg: base.bg,\n        bg2: base.bg,\n        fg: base.fg,\n        border: base.border,\n        placeholder: blend(base.bg, hues.gray[700].hex),\n      }\n    },\n\n    selectable: ({base, muted, tone, solid, state}) => {\n      if (state === 'enabled') {\n        return {\n          ...muted[tone].enabled,\n          bg: base.bg,\n        }\n      }\n\n      if (state === 'pressed') {\n        if (tone === 'default') {\n          return muted.primary.pressed\n        }\n\n        return muted[tone].pressed\n      }\n\n      if (state === 'selected') {\n        if (tone === 'default') {\n          return solid.primary.enabled\n        }\n\n        return solid[tone].enabled\n      }\n\n      if (state === 'disabled') {\n        return {\n          ...muted[tone].disabled,\n          bg: base.bg,\n        }\n      }\n\n      return muted[tone][state]\n    },\n\n    spot: ({base, key}) => {\n      const dark = _isDark(base.bg, base.fg)\n      const blend = dark ? _screen : _multiply\n\n      return blend(base.bg, hues[key][dark ? 400 : 500].hex)\n    },\n\n    syntax: ({base, dark: navbar}) => {\n      const stateTones = navbar ? legacyTones.state.navbar : legacyTones.state.default\n      const dark = stateTones.dark\n      const blend = dark ? _screen : _multiply\n      const mainShade = 600\n      const secondaryShade = 400\n\n      return {\n        atrule: blend(base.bg, hues.purple[mainShade].hex),\n        attrName: blend(base.bg, stateTones.positive[mainShade]),\n        attrValue: blend(base.bg, stateTones.caution[mainShade]),\n        attribute: blend(base.bg, stateTones.caution[mainShade]),\n        boolean: blend(base.bg, hues.purple[mainShade].hex),\n        builtin: blend(base.bg, hues.purple[mainShade].hex),\n        cdata: blend(base.bg, stateTones.caution[mainShade]),\n        char: blend(base.bg, stateTones.caution[mainShade]),\n        class: blend(base.bg, hues.orange[mainShade].hex),\n        className: blend(base.bg, hues.cyan[mainShade].hex),\n        comment: blend(base.bg, stateTones.default[secondaryShade]),\n        constant: blend(base.bg, hues.purple[mainShade].hex),\n        deleted: blend(base.bg, stateTones.critical[mainShade]),\n        doctype: blend(base.bg, stateTones.default[secondaryShade]),\n        entity: blend(base.bg, stateTones.critical[mainShade]),\n        function: blend(base.bg, stateTones.positive[mainShade]),\n        hexcode: blend(base.bg, stateTones.primary[mainShade]),\n        id: blend(base.bg, hues.purple[mainShade].hex),\n        important: blend(base.bg, hues.purple[mainShade].hex),\n        inserted: blend(base.bg, stateTones.caution[mainShade]),\n        keyword: blend(base.bg, hues.magenta[mainShade].hex),\n        number: blend(base.bg, hues.purple[mainShade].hex),\n        operator: blend(base.bg, hues.magenta[mainShade].hex),\n        prolog: blend(base.bg, stateTones.default[secondaryShade]),\n        property: blend(base.bg, stateTones.primary[mainShade]),\n        pseudoClass: blend(base.bg, stateTones.caution[mainShade]),\n        pseudoElement: blend(base.bg, stateTones.caution[mainShade]),\n        punctuation: blend(base.bg, stateTones.default[mainShade]),\n        regex: blend(base.bg, stateTones.primary[mainShade]),\n        selector: blend(base.bg, stateTones.critical[mainShade]),\n        string: blend(base.bg, stateTones.caution[mainShade]),\n        symbol: blend(base.bg, hues.purple[mainShade].hex),\n        tag: blend(base.bg, stateTones.critical[mainShade]),\n        unit: blend(base.bg, hues.orange[mainShade].hex),\n        url: blend(base.bg, stateTones.critical[mainShade]),\n        variable: blend(base.bg, stateTones.critical[mainShade]),\n      }\n    },\n  })\n}\n","import {studioTheme as defaults, type ThemeFonts} from '@sanity/ui'\n\nimport {type LegacyThemeProps} from './types'\n\nexport function buildFonts(cssCustomProperties: LegacyThemeProps): ThemeFonts {\n  return {\n    ...defaults.fonts,\n    code: {\n      ...defaults.fonts.code,\n      family: cssCustomProperties['--font-family-monospace'] || defaults.fonts.code.family,\n    },\n    heading: {\n      ...defaults.fonts.heading,\n      family: cssCustomProperties['--font-family-base'] || defaults.fonts.code.family,\n    },\n    label: {\n      ...defaults.fonts.label,\n      family: cssCustomProperties['--font-family-base'] || defaults.fonts.code.family,\n    },\n    text: {\n      ...defaults.fonts.text,\n      family: cssCustomProperties['--font-family-base'] || defaults.fonts.code.family,\n    },\n  }\n}\n","import {_toHex} from './helpers'\nimport {type LegacyThemeProps} from './types'\n\nexport interface LegacyPalette {\n  black: string\n  component: {\n    bg: string\n    fg: string\n  }\n  defaultButton: {\n    default: {\n      base: string\n    }\n    primary: {\n      base: string\n    }\n    success: {\n      base: string\n    }\n    warning: {\n      base: string\n    }\n    danger: {\n      base: string\n    }\n  }\n  focus: {\n    base: string\n  }\n  gray: {\n    base: string\n  }\n  mainNavigation: {\n    bg: string\n    fg: string\n  }\n  state: {\n    info: {\n      fg: string\n    }\n    success: {\n      fg: string\n    }\n    warning: {\n      fg: string\n    }\n    danger: {\n      fg: string\n    }\n  }\n}\n\nexport function buildLegacyPalette(cssCustomProperties: LegacyThemeProps): LegacyPalette {\n  return {\n    black: _toHex(cssCustomProperties['--black']),\n    component: {\n      bg: _toHex(cssCustomProperties['--component-bg']),\n      fg: _toHex(cssCustomProperties['--component-text-color']),\n    },\n    defaultButton: {\n      default: {\n        base: _toHex(cssCustomProperties['--default-button-color']),\n      },\n      primary: {\n        base: _toHex(cssCustomProperties['--default-button-primary-color']),\n      },\n      success: {\n        base: _toHex(cssCustomProperties['--default-button-success-color']),\n      },\n      warning: {\n        base: _toHex(cssCustomProperties['--default-button-warning-color']),\n      },\n      danger: {\n        base: _toHex(cssCustomProperties['--default-button-danger-color']),\n      },\n    },\n    focus: {\n      base: _toHex(cssCustomProperties['--focus-color']),\n    },\n    gray: {\n      base: _toHex(cssCustomProperties['--gray-base']),\n    },\n    mainNavigation: {\n      bg: _toHex(cssCustomProperties['--main-navigation-color']),\n      fg: _toHex(cssCustomProperties['--main-navigation-color--inverted']),\n    },\n    state: {\n      info: {\n        fg: _toHex(cssCustomProperties['--state-info-color']),\n      },\n      success: {\n        fg: _toHex(cssCustomProperties['--state-success-color']),\n      },\n      warning: {\n        fg: _toHex(cssCustomProperties['--state-warning-color']),\n      },\n      danger: {\n        fg: _toHex(cssCustomProperties['--state-danger-color']),\n      },\n    },\n  }\n}\n","import {_buildTints, _isDark} from './helpers'\nimport {type LegacyPalette} from './palette'\nimport {type LegacyThemeTints} from './types'\n\nexport interface LegacyTones {\n  button: {\n    default: {\n      bg: string\n      fg: string\n      dark: boolean\n\n      default: LegacyThemeTints\n      transparent: LegacyThemeTints\n      primary: LegacyThemeTints\n      positive: LegacyThemeTints\n      caution: LegacyThemeTints\n      critical: LegacyThemeTints\n    }\n\n    navbar: {\n      bg: string\n      fg: string\n      dark: boolean\n\n      default: LegacyThemeTints\n      transparent: LegacyThemeTints\n      primary: LegacyThemeTints\n      positive: LegacyThemeTints\n      caution: LegacyThemeTints\n      critical: LegacyThemeTints\n    }\n  }\n\n  state: {\n    default: {\n      bg: string\n      fg: string\n      dark: boolean\n\n      default: LegacyThemeTints\n      transparent: LegacyThemeTints\n      primary: LegacyThemeTints\n      positive: LegacyThemeTints\n      caution: LegacyThemeTints\n      critical: LegacyThemeTints\n    }\n\n    navbar: {\n      bg: string\n      fg: string\n      dark: boolean\n\n      default: LegacyThemeTints\n      transparent: LegacyThemeTints\n      primary: LegacyThemeTints\n      positive: LegacyThemeTints\n      caution: LegacyThemeTints\n      critical: LegacyThemeTints\n    }\n  }\n}\n\nexport function buildLegacyTones(legacyPalette: LegacyPalette): LegacyTones {\n  return {\n    state: {\n      default: {\n        bg: legacyPalette.component.bg,\n        fg: legacyPalette.component.fg,\n        dark: _isDark(legacyPalette.component.bg, legacyPalette.component.fg),\n        default: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.gray.base,\n          legacyPalette.component.fg,\n        ),\n        transparent: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.gray.base,\n          legacyPalette.component.fg,\n        ),\n        primary: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.state.info.fg,\n          legacyPalette.component.fg,\n        ),\n        positive: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.state.success.fg,\n          legacyPalette.component.fg,\n        ),\n        caution: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.state.warning.fg,\n          legacyPalette.component.fg,\n        ),\n        critical: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.state.danger.fg,\n          legacyPalette.component.fg,\n        ),\n      },\n      navbar: {\n        bg: legacyPalette.mainNavigation.bg,\n        fg: legacyPalette.mainNavigation.fg,\n        dark: _isDark(legacyPalette.mainNavigation.bg, legacyPalette.mainNavigation.fg),\n\n        default: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.gray.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        transparent: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.gray.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        primary: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.state.info.fg,\n          legacyPalette.mainNavigation.fg,\n        ),\n        positive: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.state.success.fg,\n          legacyPalette.mainNavigation.fg,\n        ),\n        caution: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.state.warning.fg,\n          legacyPalette.mainNavigation.fg,\n        ),\n        critical: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.state.danger.fg,\n          legacyPalette.mainNavigation.fg,\n        ),\n      },\n    },\n    button: {\n      default: {\n        bg: legacyPalette.component.bg,\n        fg: legacyPalette.component.fg,\n        dark: _isDark(legacyPalette.component.bg, legacyPalette.component.fg),\n\n        default: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.default.base,\n          legacyPalette.component.fg,\n        ),\n        transparent: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.default.base,\n          legacyPalette.component.fg,\n        ),\n        primary: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.primary.base,\n          legacyPalette.component.fg,\n        ),\n        positive: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.success.base,\n          legacyPalette.component.fg,\n        ),\n        caution: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.warning.base,\n          legacyPalette.component.fg,\n        ),\n        critical: _buildTints(\n          legacyPalette.component.bg,\n          legacyPalette.defaultButton.danger.base,\n          legacyPalette.component.fg,\n        ),\n      },\n      navbar: {\n        bg: legacyPalette.mainNavigation.bg,\n        fg: legacyPalette.mainNavigation.fg,\n        dark: _isDark(legacyPalette.mainNavigation.bg, legacyPalette.mainNavigation.fg),\n\n        default: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.default.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        transparent: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.default.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        primary: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.primary.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        positive: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.success.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        caution: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.warning.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n        critical: _buildTints(\n          legacyPalette.mainNavigation.bg,\n          legacyPalette.defaultButton.danger.base,\n          legacyPalette.mainNavigation.fg,\n        ),\n      },\n    },\n  }\n}\n","import {black, blue, gray, green, red, white, yellow} from '@sanity/color'\nimport {studioTheme as defaults} from '@sanity/ui'\n\nimport {type StudioTheme} from '../types'\nimport {buildColor} from './color'\nimport {buildFonts} from './fonts'\nimport {_isDark} from './helpers'\nimport {buildLegacyPalette} from './palette'\nimport {buildLegacyTones} from './tones'\nimport {type LegacyThemeProps} from './types'\n\n/**\n * Build a Sanity UI theme from legacy CSS properties.\n *\n * @example\n * ```tsx\n * import {buildLegacyTheme, defineConfig} from 'sanity'\n *\n * export default defineConfig({\n *   // project configuration ...\n *\n *   // Customize theming\n *   theme: buildLegacyTheme({\n *     '--black': '#000',\n *     '--gray': '#777',\n *     '--focus-color': '#00f',\n *   })\n * })\n * ```\n *\n * @param partialLegacyTheme - Properties to override the theme with. See {@link LegacyThemeProps}\n * @public\n * @deprecated Legacy theming will be deprecated in a future version of Sanity Studio\n */\nexport function buildLegacyTheme(partialLegacyTheme: Partial<LegacyThemeProps>): StudioTheme {\n  const legacyTheme = resolveLegacyTheme(partialLegacyTheme)\n  const legacyPalette = buildLegacyPalette(legacyTheme)\n  const legacyTones = buildLegacyTones(legacyPalette)\n\n  const color = buildColor(legacyPalette, legacyTones)\n  const fonts = buildFonts(legacyTheme)\n\n  return {\n    __dark: _isDark(color.light.default.base.bg, color.light.default.base.fg),\n    __legacy: true,\n    color,\n    fonts,\n  }\n}\n\nconst defaultCustomProperties: LegacyThemeProps = {\n  '--font-family-monospace': defaults.fonts.code.family,\n  '--font-family-base': defaults.fonts.text.family,\n\n  '--black': black.hex,\n  '--white': white.hex,\n\n  // Brand\n  '--brand-primary': blue[500].hex,\n\n  // Component\n  '--component-bg': white.hex,\n  '--component-text-color': black.hex,\n\n  // Gray\n  '--gray': gray[500].hex,\n  '--gray-base': gray[500].hex,\n\n  // Default button\n  '--default-button-color': gray[500].hex,\n  '--default-button-danger-color': red[500].hex,\n  '--default-button-primary-color': blue[500].hex,\n  '--default-button-success-color': green[500].hex,\n  '--default-button-warning-color': yellow[500].hex,\n\n  // Focus\n  '--focus-color': blue[500].hex,\n\n  // Screen\n  '--screen-medium-break': '512px',\n  '--screen-default-break': '640px',\n  '--screen-large-break': '960px',\n  '--screen-xlarge-break': '1600px',\n\n  // State\n  '--state-info-color': blue[500].hex,\n  '--state-success-color': green[500].hex,\n  '--state-warning-color': yellow[500].hex,\n  '--state-danger-color': red[500].hex,\n\n  // Navbar\n  '--main-navigation-color': black.hex,\n  '--main-navigation-color--inverted': white.hex,\n}\n\nfunction resolveLegacyTheme(legacyTheme: Partial<LegacyThemeProps>): LegacyThemeProps {\n  const props: LegacyThemeProps = {\n    ...defaultCustomProperties,\n    ...legacyTheme,\n  }\n\n  // Update properties (order matters)\n  props['--focus-color'] = legacyTheme['--focus-color'] || props['--brand-primary']\n  props['--default-button-primary-color'] =\n    legacyTheme['--default-button-primary-color'] || props['--brand-primary']\n  props['--main-navigation-color'] = legacyTheme['--main-navigation-color'] || props['--black']\n  props['--main-navigation-color--inverted'] =\n    legacyTheme['--main-navigation-color--inverted'] || props['--white']\n  props['--state-info-color'] = legacyTheme['--brand-primary'] || props['--brand-primary']\n\n  return props\n}\n","/* eslint-disable simple-import-sort/imports */\n/* disabling for now because the imports trigger side effects causing test snapshots to update */\nimport {type ReactElement} from 'react'\nimport {type Config} from '../config'\nimport {type StudioThemeColorSchemeKey} from '../theme/types'\nimport {GlobalStyle} from './GlobalStyle'\nimport {type RouterHistory} from './router'\nimport {StudioLayout} from './StudioLayout'\nimport {StudioProvider} from './StudioProvider'\n\n/**\n * @hidden\n * @beta */\nexport interface StudioProps {\n  config: Config\n  basePath?: string\n  /**\n   * Useful for scenarios where the Studio is embedded in another app,\n   * and the surrounding app also implements light and dark color schemes.\n   *\n   * The callback is fired whenever the user selects a new color scheme in the \"Appearance\" menu in the top-right dropdown.\n   * It also fires on first render with its initial value if you don't provide a `scheme` prop.\n   *\n   * If the user selects \"System\" in the \"Appearance\" menu, the callback will be fired with `\"system\"` as the scheme.\n   * To resolve `\"system\"` to the same color scheme as the Studio use the `usePrefersDark` hook from `@sanity/ui`:\n   *\n   * ```tsx\n   * import {usePrefersDark} from '@sanity/ui'\n   * import {Studio} from 'sanity'\n   *\n   * export default function StudioPage() {\n   *   const prefersDark = usePrefersDark()\n   *   const [_scheme, setScheme] = useState('system')\n   *   const prefersScheme = prefersDark ? 'dark' : 'light'\n   *   const scheme = _scheme === 'system' ? prefersScheme : _scheme\n   *\n   *   return (\n   *     <AppLayout scheme={scheme}>\n   *       <Studio config={config} onSchemeChange={setScheme} />\n   *     </AppLayout>\n   *   )\n   * }\n   * ```\n   *\n   *\n   * @hidden\n   * @beta\n   */\n  onSchemeChange?: (nextScheme: StudioThemeColorSchemeKey) => void\n  /**\n   * By default the Studio handles the color scheme itself, but you can provide a color scheme to use.\n   * If you only define `scheme` then the top-right \"Appearance\" dropdown menu will be hidden,\n   * and the Studio will stay in sync with the `scheme` prop.\n   *\n   * You may setup two-way sync and re-enable the \"Appearance\" dropdown menu by also providing an `onSchemeChange` callback:\n   * ```tsx\n   * import {Studio} from 'sanity'\n   * import {useSession} from 'your-app'\n   *\n   * export default function StudioPage() {\n   *   const session = useSession()\n   *   // Overrides the default scheme to be what's in the app user session\n   *   const [_scheme, setScheme] = useState(session.scheme)\n   *   const scheme = _scheme === 'system' ? session.scheme : _scheme\n   *\n   *   return (\n   *     <AppLayout scheme={scheme}>\n   *       <Studio config={config} scheme={scheme} onSchemeChange={setScheme} />\n   *     </AppLayout>\n   *   )\n   * }\n   * ```\n   *\n   *\n   * @hidden\n   * @beta\n   */\n  scheme?: StudioThemeColorSchemeKey\n  /**\n   * @hidden\n   * @beta */\n  unstable_history?: RouterHistory\n  /**\n   * @hidden\n   * @beta */\n  unstable_globalStyles?: boolean\n  /**\n   * @hidden\n   * @beta */\n  unstable_noAuthBoundary?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport function Studio(props: StudioProps): ReactElement {\n  const {\n    basePath,\n    config,\n    onSchemeChange,\n    scheme,\n    unstable_globalStyles: globalStyles,\n    unstable_history,\n    unstable_noAuthBoundary,\n  } = props\n\n  return (\n    <StudioProvider\n      basePath={basePath}\n      config={config}\n      onSchemeChange={onSchemeChange}\n      scheme={scheme}\n      unstable_history={unstable_history}\n      unstable_noAuthBoundary={unstable_noAuthBoundary}\n    >\n      {globalStyles && <GlobalStyle />}\n      <StudioLayout />\n    </StudioProvider>\n  )\n}\n","import {StrictMode} from 'react'\nimport {createRoot} from 'react-dom/client'\n\nimport {type Config} from '../config'\nimport {Studio} from './Studio'\n\ninterface RenderStudioOptions {\n  basePath?: string\n  reactStrictMode?: boolean\n}\n\n/**\n * @internal\n * @deprecated Use `renderStudio(rootElement, config, {reactStrictMode: true})` instead\n */\nexport function renderStudio(\n  rootElement: HTMLElement | null,\n  config: Config,\n  options: boolean,\n): () => void\n\n/** @internal */\nexport function renderStudio(rootElement: HTMLElement | null, config: Config): () => void\n\n/** @internal */\nexport function renderStudio(\n  rootElement: HTMLElement | null,\n  config: Config,\n  options: RenderStudioOptions,\n): () => void\n\n/** @internal */\nexport function renderStudio(\n  rootElement: HTMLElement | null,\n  config: Config,\n  options: RenderStudioOptions | boolean = false,\n): () => void {\n  if (!rootElement) {\n    throw new Error('Missing root element to mount application into')\n  }\n\n  const opts = typeof options === 'boolean' ? {reactStrictMode: options} : options\n  const {reactStrictMode = false, basePath} = opts\n\n  const root = createRoot(rootElement)\n\n  root.render(\n    reactStrictMode ? (\n      <StrictMode>\n        <Studio config={config} basePath={basePath} unstable_globalStyles />\n      </StrictMode>\n    ) : (\n      <Studio config={config} basePath={basePath} unstable_globalStyles />\n    ),\n  )\n\n  return () => root.unmount()\n}\n","import {useMemoObservable} from 'react-rx'\nimport {of, timer} from 'rxjs'\nimport {distinctUntilChanged, map, mapTo, startWith, switchMap} from 'rxjs/operators'\n\nimport {useDocumentStore} from '../store'\n\n/** @internal */\nexport type ConnectionState = 'connecting' | 'reconnecting' | 'connected'\n\nconst INITIAL: ConnectionState = 'connecting'\n\n/** @internal */\nexport function useConnectionState(publishedDocId: string, docTypeName: string): ConnectionState {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable(\n    () =>\n      documentStore.pair.documentEvents(publishedDocId, docTypeName).pipe(\n        map((ev: {type: string}) => ev.type),\n        map((eventType) => eventType !== 'reconnect'),\n        switchMap((isConnected) =>\n          isConnected ? of('connected') : timer(200).pipe(mapTo('reconnecting')),\n        ),\n        startWith(INITIAL as any),\n        distinctUntilChanged(),\n      ),\n    [documentStore.pair, publishedDocId, docTypeName],\n    INITIAL,\n  )\n}\n","import {useMemoObservable} from 'react-rx'\n\nimport {useDocumentStore} from '../store'\n\n/** @internal */\nexport function useDocumentOperationEvent(publishedDocId: string, docTypeName: string) {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable(\n    () => documentStore.pair.operationEvents(publishedDocId, docTypeName),\n    [documentStore.pair, publishedDocId, docTypeName],\n  )\n}\n","import {useMemoObservable} from 'react-rx'\nimport {merge, timer} from 'rxjs'\nimport {debounce, share, skip, take} from 'rxjs/operators'\n\nimport {type EditStateFor, useDocumentStore} from '../store'\n\n/** @internal */\nexport function useEditState(\n  publishedDocId: string,\n  docTypeName: string,\n  priority: 'default' | 'low' = 'default',\n): EditStateFor {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable(() => {\n    const base = documentStore.pair.editState(publishedDocId, docTypeName).pipe(share())\n    if (priority === 'low') {\n      return merge(\n        base.pipe(take(1)),\n        base.pipe(\n          skip(1),\n          debounce(() => timer(1000)),\n        ),\n      )\n    }\n    return documentStore.pair.editState(publishedDocId, docTypeName)\n  }, [documentStore.pair, publishedDocId, docTypeName, priority]) as EditStateFor\n}\n","import {useMemo} from 'react'\n\nimport {useCurrentLocale} from '../i18n/hooks/useLocale'\nimport {intlCache} from '../i18n/intlCache'\nimport {useListFormat} from './useListFormat'\n\ntype Duration = {\n  days: number\n  hours: number\n  minutes: number\n  seconds: number\n  milliseconds: number\n}\ntype DurationUnit = keyof Duration\n\nconst PERIODS = ['days', 'hours', 'minutes', 'seconds', 'milliseconds'] as const\n\n/**\n * Options for the duration formatter\n *\n * @public\n */\nexport interface UseFormattedDurationOptions {\n  /**\n   * The formatting style to use in unit and list formatting. The default is \"short\".\n   */\n  style?: 'short' | 'long' | 'narrow'\n\n  /**\n   * The resolution of the duration. The default is \"seconds\".\n   */\n  resolution?: 'seconds' | 'milliseconds'\n}\n\n/**\n * The result of the duration formatter\n *\n * @public\n */\nexport interface FormattedDuration {\n  /** The human-readable, formatted duration as a string, eg \"2 days, 3 hr, and 20 sec\" */\n  formatted: string\n\n  /** The machine-readable, formatted ISO-8601 duration string, eg \"P2DT3H20S\" */\n  iso8601: string\n}\n\n/**\n * Formats a duration (in milliseconds) to a more user friendly string eg `1h 30m` or `1t 29m 15s`.\n * Can be configured to output full units, eg `1 hour 30 minutes` or `1 hour 3 minutes 15 seconds`.\n * Uses the current locale, which also applies to the division of units.\n *\n * @example English (en-US) locale formatting\n * ```ts\n * useFormattedDuration(5589000)\n * // {\"formatted\": \"1 hour, 33 minutes, and 9 seconds\", \"iso8601\": \"PT1H33M9S\"}\n * ```\n *\n * @example Norwegian (no-NB) locale formatting\n * ```ts\n * useFormattedDuration(5589000)\n * // {\"formatted\": \"1 time, 33 minutter og 9 sekunder\", \"iso8601\": \"PT1H33M9S\"}\n * ```\n *\n * @param options - Optional options for the number formatter\n * @returns An object with `formatted` and `iso8601` properties\n * @public\n */\nexport function useFormattedDuration(\n  durationMs: number,\n  options?: UseFormattedDurationOptions,\n): FormattedDuration {\n  const {style = 'short', resolution = 'seconds'} = options || {}\n  const unitDisplay = style\n  const locale = useCurrentLocale().id\n  const listFormat = useListFormat({type: 'unit', style})\n  const isNegative = durationMs < 0\n  const duration = parseMilliseconds(Math.abs(durationMs))\n  const formatters: Record<DurationUnit, Intl.NumberFormat> = useMemo(\n    () => ({\n      days: intlCache.numberFormat(locale, {style: 'unit', unit: 'day', unitDisplay}),\n      hours: intlCache.numberFormat(locale, {style: 'unit', unit: 'hour', unitDisplay}),\n      minutes: intlCache.numberFormat(locale, {style: 'unit', unit: 'minute', unitDisplay}),\n      seconds: intlCache.numberFormat(locale, {style: 'unit', unit: 'second', unitDisplay}),\n      milliseconds: intlCache.numberFormat(locale, {\n        style: 'unit',\n        unit: 'millisecond',\n        unitDisplay,\n      }),\n    }),\n    [locale, unitDisplay],\n  )\n\n  const parts: string[] = []\n  for (const period of PERIODS) {\n    const value = duration[period]\n    if (!value || (resolution === 'seconds' && period === 'milliseconds')) {\n      continue\n    }\n\n    const prefix = isNegative && parts.length === 0 ? '-' : ''\n    parts.push(`${prefix}${formatters[period].format(value)}`)\n  }\n\n  const formatted =\n    parts.length === 0\n      ? // If passing duration 0, we still want to show something\n        formatters[resolution].format(0)\n      : // Usually, we want to join the parts with the locales list formatter\n        listFormat.format(parts)\n\n  const iso8601 = durationToISO8601(duration, isNegative)\n\n  return {formatted, iso8601}\n}\n\n/**\n * Parse milliseconds to durations. We stop at days because months are not a fixed unit,\n * nor are years (365.25 strictly speaking, but people may expact calendar days). If we\n * wanted to include those, we'd want to use `intervalToDuration` from date-fns, and base\n * it on two specific dates.\n *\n * @param milliseconds - Milliseconds to parse\n * @returns Object of duration parts\n * @internal\n */\nfunction parseMilliseconds(milliseconds: number): Duration {\n  return {\n    days: Math.trunc(milliseconds / 86400000),\n    hours: Math.trunc(milliseconds / 3600000) % 24,\n    minutes: Math.trunc(milliseconds / 60000) % 60,\n    seconds: Math.trunc(milliseconds / 1000) % 60,\n    milliseconds: Math.trunc(milliseconds) % 1000,\n  }\n}\n\n/**\n * Format the given duration to an {@link https://en.wikipedia.org/wiki/ISO_8601#Durations | ISO-8601 duration}\n * string, eg `P1DT2H3M4.005S` meaning \"1 day, 2 hours, 3 minutes, 4 seconds and 5 milliseconds\".\n *\n * If days are zero, it will skip straight to the time part, eg `PT2H3M4.005S`.\n * If milliseconds are zero, it will skip the milliseconds part, eg `PT2H3M4S`.\n *\n * @param dur - The duration to format\n * @returns The formatted duration\n * @internal\n */\nfunction durationToISO8601(dur: Duration, isNegative: boolean): string {\n  const date = dur.days ? `${dur.days}D` : ''\n\n  let time = ''\n  if (dur.hours) time += `${dur.hours}H`\n  if (dur.minutes) time += `${dur.minutes}M`\n\n  if (dur.milliseconds) {\n    time += `${((dur.seconds * 1000 + dur.milliseconds) / 1000).toFixed(3)}S`\n  } else if (dur.seconds) {\n    time += `${dur.seconds}S`\n  }\n\n  if (!date && !time) {\n    return 'PT0S'\n  }\n\n  const parts = time ? [date, time] : [date]\n  const duration = `P${parts.join('T')}`\n  return isNegative ? `-${duration}` : duration\n}\n","import {useCurrentLocale} from '../i18n/hooks/useLocale'\nimport {intlCache} from '../i18n/intlCache'\n\n/**\n * Options for the `useNumberFormat` hook\n *\n * @public\n */\nexport type UseNumberFormatOptions = Intl.NumberFormatOptions\n\n/**\n * Returns an instance of `Intl.NumberFormat` that uses the currently selected locale,\n * and enables locale/language-sensitive number formatting.\n *\n * @param options - Optional options for the number formatter\n * @returns Instance of `Intl.NumberFormat`\n * @public\n */\nexport function useNumberFormat(options: UseNumberFormatOptions = {}): Intl.NumberFormat {\n  const currentLocale = useCurrentLocale().id\n  return intlCache.numberFormat(currentLocale, options)\n}\n","import {useMemoObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\n\nimport {useDocumentStore} from '../store'\n\n/** @internal */\nexport interface SyncState {\n  isSyncing: boolean\n}\n\nconst SYNCING = {isSyncing: true}\nconst NOT_SYNCING = {isSyncing: false}\n\n/** @internal */\nexport function useSyncState(publishedDocId: string, documentType: string): SyncState {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable<SyncState>(\n    () =>\n      documentStore.pair\n        .consistencyStatus(publishedDocId, documentType)\n        .pipe(map((isConsistent) => (isConsistent ? NOT_SYNCING : SYNCING))),\n    [documentStore.pair, documentType, publishedDocId],\n    NOT_SYNCING,\n  )\n}\n","import {useRelativeTime} from './useRelativeTime'\n\n/** @internal */\nexport interface TimeAgoOpts {\n  minimal?: boolean\n  agoSuffix?: boolean\n}\n\n/**\n * @deprecated - Use {@link useRelativeTime} instead\n * @internal\n */\nexport function useTimeAgo(time: Date | string, options: TimeAgoOpts = {}): string {\n  return useRelativeTime(time, {\n    minimal: options.minimal,\n    useTemporalPhrase: options.agoSuffix,\n  })\n}\n","import {type Tool} from '../config'\nimport {useSource} from '../studio'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function useTools(): Tool[] {\n  return useSource().tools\n}\n","/* eslint-disable max-nested-callbacks */\nimport {type SanityDocument} from '@sanity/client'\nimport {type User} from '@sanity/types'\nimport {sortBy} from 'lodash'\nimport {useEffect, useMemo, useState} from 'react'\nimport {concat, forkJoin, map, mergeMap, type Observable, of, switchMap} from 'rxjs'\n\nimport {\n  type DocumentValuePermission,\n  grantsPermissionOn,\n  type ProjectData,\n  useProjectStore,\n  useUserStore,\n} from '../store'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS} from '../studioClient'\nimport {useClient} from './useClient'\n\ntype Loadable<T> = {\n  data: T | null\n  error: Error | null\n  loading: boolean\n}\n\n/**\n * @beta\n * @hidden\n */\nexport type UserListWithPermissionsHookValue = Loadable<UserWithPermission[]>\n\n/**\n * @beta\n * @hidden\n */\nexport interface UserWithPermission extends User {\n  granted: boolean\n}\n\nconst INITIAL_STATE: UserListWithPermissionsHookValue = {\n  data: [],\n  error: null,\n  loading: true,\n}\n\n/**\n * @beta\n */\nexport interface UserListWithPermissionsOptions {\n  documentValue: SanityDocument | null\n  permission: DocumentValuePermission\n}\n\nlet cachedSystemGroups: [] | null = null\n\n/**\n * @beta\n * Returns a list of users with the specified permission on the document.\n * If no document is provided it will return all as `granted: true`\n */\nexport function useUserListWithPermissions(\n  opts: UserListWithPermissionsOptions,\n): UserListWithPermissionsHookValue {\n  const {documentValue, permission} = opts\n\n  const projectStore = useProjectStore()\n  const userStore = useUserStore()\n  const client = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const [state, setState] = useState<UserListWithPermissionsHookValue>(INITIAL_STATE)\n\n  const list$ = useMemo(() => {\n    // 1. Get the project members and filter out the robot users\n    const members$: Observable<ProjectData['members']> = projectStore\n      .get()\n      .pipe(map((res: ProjectData) => res.members?.filter((m) => !m.isRobot)))\n\n    // 2. Map the members to users to get more data of the users such as displayName (used for filtering)\n    const users$: Observable<UserWithPermission[]> = members$.pipe(\n      switchMap(async (members) => {\n        const ids = members.map(({id}) => id)\n        const users = await userStore.getUsers(ids)\n        return users\n      }),\n      map((res) =>\n        res.map((user) => ({\n          displayName: user.displayName,\n          id: user.id,\n          granted: false,\n        })),\n      ),\n    )\n\n    // 3. Get all the system groups. Use the cached response if it exists to avoid unnecessary requests.\n    const cached = cachedSystemGroups\n    const systemGroup$ = cached ? of(cached) : client.observable.fetch('*[_type == \"system.group\"]')\n\n    // 4. Check if the user has read permission on the document and set the `granted` property\n    const grants$: Observable<UserWithPermission[]> = forkJoin([users$, systemGroup$]).pipe(\n      mergeMap(async ([users, groups]) => {\n        if (!cached) {\n          cachedSystemGroups = groups\n        }\n\n        const grantPromises = users?.map(async (user) => {\n          const grants = groups.map((group: any) => {\n            if (group.members.includes(user.id)) {\n              return group.grants\n            }\n\n            return []\n          })\n\n          const flattenedGrants = [...grants].flat()\n          const {granted} = await grantsPermissionOn(\n            user.id,\n            flattenedGrants,\n            permission,\n            documentValue,\n          )\n\n          return {\n            ...user,\n            granted: granted,\n          }\n        })\n\n        const usersWithPermission = await Promise.all(grantPromises || [])\n\n        return usersWithPermission\n      }),\n    )\n\n    // 5. Sort the users alphabetically\n    const $alphabetical: Observable<Loadable<UserWithPermission[]>> = grants$.pipe(\n      map((res) => ({\n        error: null,\n        loading: false,\n        data: sortBy(res, 'displayName'),\n      })),\n    )\n\n    return $alphabetical\n  }, [client.observable, documentValue, projectStore, userStore, permission])\n\n  useEffect(() => {\n    const initial$ = of(INITIAL_STATE)\n    const state$ = concat(initial$, list$)\n\n    const sub = state$.subscribe({\n      next: setState,\n      error: (error) => {\n        setState({data: [], error, loading: false})\n      },\n    })\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [list$])\n\n  return state\n}\n","import {useMemoObservable} from 'react-rx'\n\nimport {useDocumentStore, type ValidationStatus} from '../store'\n\nconst INITIAL: ValidationStatus = {validation: [], isValidating: false}\n\n/** @internal */\nexport function useValidationStatus(publishedDocId: string, docTypeName: string): ValidationStatus {\n  const documentStore = useDocumentStore()\n\n  return useMemoObservable(\n    () => documentStore.pair.validation(publishedDocId, docTypeName),\n    [documentStore.pair, publishedDocId, docTypeName],\n    INITIAL,\n  )\n}\n","import {type ActionHook} from './types'\n\nconst actionIds = new WeakMap<ActionHook<any, any>, string>()\n\nlet counter = 0\n\n/** @internal */\nexport function getHookId<T, K>(actionHook: ActionHook<T, K>): string {\n  const cachedId = actionIds.get(actionHook)\n\n  if (cachedId) return cachedId\n\n  const id = `${actionHook.name || (actionHook as any).displayName || '<anonymous>'}-${counter++}`\n\n  actionIds.set(actionHook, id)\n\n  return id\n}\n","const requestIdleCallbackShim: Window['requestIdleCallback'] = (callback) => {\n  const start = Date.now()\n\n  return setTimeout(() => {\n    callback({\n      didTimeout: false,\n      timeRemaining() {\n        return Math.max(0, Date.now() - start)\n      },\n    })\n  }, 1) as unknown as ReturnType<Window['requestIdleCallback']>\n}\n\nconst cancelIdleCallbackShim: Window['cancelIdleCallback'] = (handle: unknown) => {\n  return clearTimeout(handle as any)\n}\n\nconst _requestIdleCallback =\n  typeof requestIdleCallback === 'undefined' ? requestIdleCallbackShim : requestIdleCallback\nconst _cancelIdleCallback =\n  typeof cancelIdleCallback === 'undefined' ? cancelIdleCallbackShim : cancelIdleCallback\n\nexport {_requestIdleCallback as requestIdleCallback}\nexport {_cancelIdleCallback as cancelIdleCallback}\n","import {type ThrottleSettings} from 'lodash'\nimport {type ReactNode, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {isNonNullable, useThrottledCallback} from '../../util'\nimport {getHookId} from './actionId'\nimport {HookStateContainer} from './HookStateContainer'\nimport {cancelIdleCallback, requestIdleCallback} from './requestIdleCallback'\nimport {type ActionHook} from './types'\n\n/** @internal */\nexport interface GetHookCollectionStateProps<T, K> {\n  args: T\n  children: (props: {states: K[]}) => ReactNode\n  hooks: ActionHook<T, K>[]\n  onReset?: () => void\n}\n\nconst throttleOptions: ThrottleSettings = {trailing: true}\n\n/** @internal */\nexport function GetHookCollectionState<T, K>(props: GetHookCollectionStateProps<T, K>) {\n  const {hooks, args, children, onReset} = props\n\n  const statesRef = useRef<Record<string, {value: K}>>({})\n  const [tickId, setTick] = useState(0)\n\n  const [keys, setKeys] = useState<Record<string, number>>({})\n\n  const ricHandle = useRef<number | null>(null)\n\n  const handleRequestUpdate = useCallback(() => {\n    if (ricHandle.current) {\n      cancelIdleCallback(ricHandle.current)\n    }\n\n    ricHandle.current = requestIdleCallback(() => {\n      ricHandle.current = null\n\n      setTick((tick) => tick + 1)\n    })\n  }, [])\n\n  const handleRequestUpdateThrottled = useThrottledCallback(\n    handleRequestUpdate,\n    60,\n    throttleOptions,\n  )\n\n  const handleNext = useCallback((id: any, hookState: any) => {\n    if (hookState === null) {\n      delete statesRef.current[id]\n    } else {\n      const current = statesRef.current[id]\n      statesRef.current[id] = {...current, value: hookState}\n    }\n  }, [])\n\n  const handleReset = useCallback(\n    (id: any) => {\n      setKeys((currentKeys) => ({...currentKeys, [id]: (currentKeys[id] || 0) + 1}))\n\n      if (onReset) {\n        onReset()\n      }\n    },\n    [onReset],\n  )\n\n  const hookIds = useMemo(() => hooks.map((hook) => getHookId(hook)), [hooks])\n\n  const states = useMemo(\n    () => hookIds.map((id) => statesRef.current[id]?.value).filter(isNonNullable),\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- tickId is used to refresh the memo, before it can be removed it needs to be investigated what impact it has\n    [hookIds, tickId],\n  )\n\n  return (\n    <>\n      {hooks.map((hook) => {\n        const id = getHookId(hook)\n        const key = keys[id] || 0\n\n        return (\n          <HookStateContainer\n            key={`${id}-${key}`}\n            hook={hook}\n            id={id}\n            args={args}\n            onNext={handleNext}\n            onRequestUpdate={handleRequestUpdateThrottled}\n            onReset={handleReset}\n          />\n        )\n      })}\n\n      {children({states})}\n    </>\n  )\n}\n","import {Hotkeys as UIHotkeys, type HotkeysProps as UIHotkeysProps} from '@sanity/ui'\nimport {type HTMLProps, type RefAttributes} from 'react'\n\n/**\n * Properties for the `Hotkeys` component.\n *\n * @public\n */\nexport type HotkeysProps = UIHotkeysProps & {\n  /**\n   * Whether to make the keys platform-aware (eg `alt` to `option` on Apple devices).\n   *\n   * @defaultValue true\n   */\n  makePlatformAware?: boolean\n} & Omit<HTMLProps<HTMLElement>, 'ref' | 'size' | 'as'> &\n  RefAttributes<HTMLElement>\n\n/**\n * Renders given `keys` as \"keycaps\" visually.\n *\n * This is a wrapper around `@sanity/ui`'s `Hotkeys` component, which allows for altering keys\n * (eg `alt` to `option`) on Apple devices unless `makePlatformAware` is set to `false`.\n *\n * @param props - Properties to render with\n * @returns React element\n * @public\n */\nexport function Hotkeys({makePlatformAware = true, keys: hotKeys = [], ...props}: HotkeysProps) {\n  const keys = makePlatformAware ? hotKeys.map(platformifyKey) : hotKeys\n  return <UIHotkeys {...props} keys={keys} />\n}\n\n/**\n * @internal\n */\nconst IS_APPLE_DEVICE =\n  typeof navigator === 'undefined' || typeof navigator.platform !== 'string'\n    ? false\n    : /Mac|iPod|iPhone|iPad/.test(navigator.platform || '')\n\n/**\n * Given key 'Alt', or 'Option' (case-insensitive), return the platform-appropriate key name\n * (eg 'Alt' on non-Apple devices, 'Option' on Apple devices).\n *\n * @param key - Key to platformify\n * @returns Platform-appropriate key name\n * @internal\n */\nfunction platformifyKey(key: string): string {\n  const lowerKey = key.toLowerCase()\n\n  if (lowerKey === 'alt' && IS_APPLE_DEVICE) {\n    return matchCase(key, 'option')\n  }\n\n  if (lowerKey === 'option' && !IS_APPLE_DEVICE) {\n    return matchCase(key, 'alt')\n  }\n\n  return key\n}\n\n/**\n * Apply the case (lowercase/uppercase) of `original` to `target`, character by character,\n * eg matching ALL CAPS, all lowercase or Mixed Case.\n *\n * @param original - The original string to match case of\n * @param target - The target string to apply case to\n * @returns Target string with case applied from original\n * @internal\n */\nfunction matchCase(original: string, target: string): string {\n  const orgLength = original.length\n\n  return target.replace(/./g, (char, i) => {\n    // Replace character by character matching case of original\n    // If running out of original, just return the target case as-is\n    return i < orgLength && original[i] === original[i].toUpperCase() ? char.toUpperCase() : char\n  })\n}\n","import {type HTMLProps} from 'react'\nimport {IntentLink, type IntentLinkProps} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function IntentButton(\n  props: IntentLinkProps & ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'ref' | 'size' | 'as'>,\n) {\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...props} as={IntentLink} />\n  )\n}\n","import {type RelativeTimeOptions, useRelativeTime} from '../hooks/useRelativeTime'\n\n/**\n * @internal\n */\nexport interface RelativeTimeProps extends RelativeTimeOptions {\n  time: string | Date\n}\n\n/**\n * @internal\n */\nexport function RelativeTime({time, ...options}: RelativeTimeProps) {\n  const timestamp = time instanceof Date ? time : new Date(time)\n  const timeAgo = useRelativeTime(timestamp, options)\n\n  return (\n    <time dateTime={timestamp.toISOString()} title={timeAgo}>\n      {timeAgo}\n    </time>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type ReactElement} from 'react'\n\nimport {useReferringDocuments} from '../hooks/useReferringDocuments'\nimport {type DocumentStore} from '../store'\n\n/**\n * @internal\n * @deprecated - Will be removed in 4.0.0, use the `useReferringDocuments(<documentId>)` hook instead\n */\nexport function WithReferringDocuments({\n  children,\n  id,\n}: {\n  children: (props: {isLoading: boolean; referringDocuments: SanityDocument[]}) => ReactElement\n  /**\n   * @deprecated - no longer required\n   */\n  documentStore?: DocumentStore\n  id: string\n}) {\n  return children(useReferringDocuments(id))\n}\n","import {type ReactElement, type ReactNode} from 'react'\n\nimport {defaults} from './defaults'\nimport {ZIndexContext} from './ZIndexContext'\n\n/**\n * TODO: Rename to `ZOffsetsProvider`\n *\n * @internal\n */\nexport function ZIndexProvider({children}: {children?: ReactNode}): ReactElement {\n  return <ZIndexContext.Provider value={defaults}>{children}</ZIndexContext.Provider>\n}\n","import {TextInput} from '@sanity/ui'\n\nimport {type StringInputProps} from '../types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport type TelephoneInputProps = StringInputProps\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function TelephoneInput(props: TelephoneInputProps) {\n  const {schemaType, validationError, value, elementProps} = props\n\n  return (\n    <TextInput\n      type=\"tel\"\n      inputMode=\"tel\"\n      customValidity={validationError}\n      value={value || ''}\n      placeholder={schemaType.placeholder}\n      {...elementProps}\n    />\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {type ConditionalProperty, type CurrentUser} from '@sanity/types'\n\n/**\n * @internal\n */\nexport interface ConditionalPropertyCallbackContext {\n  parent?: unknown\n  document?: Record<string, unknown>\n  currentUser: Omit<CurrentUser, 'role'> | null\n  value: unknown\n}\n\n/**\n * @internal\n */\nexport function resolveConditionalProperty(\n  property: ConditionalProperty,\n  context: ConditionalPropertyCallbackContext,\n) {\n  const {currentUser, document, parent, value} = context\n\n  if (typeof property === 'boolean' || property === undefined) {\n    return Boolean(property)\n  }\n\n  return (\n    property({\n      document: document as any,\n      parent,\n      value,\n      currentUser,\n    }) === true // note: we can't strictly \"trust\" the return value here, so the conditional property should probably be typed as unknown\n  )\n}\n","import {isKeySegment, type Path} from '@sanity/types'\n\nimport {type StateTree} from './types'\n\n/** @internal */\nexport function setAtPath<T>(\n  currentTree: StateTree<T> | undefined,\n  path: Path,\n  value: T,\n): StateTree<T> {\n  if (path.length === 0) {\n    return {...(currentTree || {}), value}\n  }\n  const [head, ...tail] = path\n  const key = isKeySegment(head) ? head._key : String(head)\n  const children = currentTree?.children ?? {}\n  return {\n    value: currentTree?.value,\n    children: {...children, [key]: setAtPath(children[key] || {}, tail, value)},\n  }\n}\n","import {type FieldGroup} from '@sanity/types'\n\n/**\n * Max supported field depth. Fields deeper than this will be considered hidden.\n */\nexport const MAX_FIELD_DEPTH = 20\n\n/**\n * Start auto-collapsing fields at this nesting level unless schema/field configuration says otherwise\n */\nexport const AUTO_COLLAPSE_DEPTH = 3\n\nexport const ALL_FIELDS_GROUP: FieldGroup = {\n  name: 'all-fields',\n  title: 'All fields',\n  hidden: false,\n}\n","import {type ObjectSchemaTypeWithOptions} from '@sanity/types'\n\nimport {AUTO_COLLAPSE_DEPTH} from '../constants'\n\ninterface CollapsibleOptions {\n  collapsible: boolean | undefined\n  // Initial collapsed state\n  collapsed: boolean | undefined\n}\n\n/**\n * Takes an option object that can optionally have a 'collapsed' property\n * (`{collapsed?: boolean, collapsible?: boolean}`)\n * and returns a resolved collapsed state based on configuration and whether it's below a certain nesting level threshold\n - collapsible: boolean - whether the field can be collapsed\n - collapsed: boolean - whether the field is initially collapsed\n * NOTE: If a field is configured with ´collapsed: true´, ignore any ´collapsible´ configuration and make it collapsible no matter what, otherwise it will be left forever collapsed.\n *\n * If the nesting level is deeper than or equal to AUTO_COLLAPSE_DEPTH, the default for the field/fieldset becomes \"collapsed\"\n *\n * @param options - Whether the field or fieldset should be collapsed\n * @param level - Nesting level\n */\nexport function getCollapsedWithDefaults(\n  options: ObjectSchemaTypeWithOptions['options'] = {},\n  level: number,\n): CollapsibleOptions {\n  if (options?.collapsible === false || options?.collapsable === false) {\n    return {collapsible: false, collapsed: false}\n  }\n\n  const collapsed =\n    // eslint-disable-next-line no-nested-ternary\n    typeof options?.collapsed === 'boolean'\n      ? options.collapsed\n      : level >= AUTO_COLLAPSE_DEPTH\n        ? true\n        : undefined\n\n  const collapsible =\n    options?.collapsible === true || options?.collapsable === true || collapsed === true\n      ? true\n      : undefined\n\n  return {\n    collapsible,\n    collapsed,\n  }\n}\n","import {type ArraySchemaType, type SchemaType} from '@sanity/types'\nimport {resolveTypeName} from '@sanity/util/content'\n\nexport function getItemType(arrayType: ArraySchemaType, item: unknown): SchemaType | undefined {\n  const itemTypeName = resolveTypeName(item)\n\n  return itemTypeName === 'object' && arrayType.of.length === 1\n    ? arrayType.of[0]\n    : arrayType.of.find((memberType) => memberType.name === itemTypeName)\n}\n\nexport function getPrimitiveItemType(\n  arrayType: ArraySchemaType,\n  item: unknown,\n): SchemaType | undefined {\n  const itemTypeName = resolveTypeName(item)\n\n  return arrayType?.of.find(\n    (memberType) => memberType.name === itemTypeName || memberType.jsonType === itemTypeName,\n  )\n}\n","/* eslint-disable max-statements */\n/* eslint-disable camelcase, no-else-return */\n\nimport {\n  type ArraySchemaType,\n  type BooleanSchemaType,\n  type CurrentUser,\n  isArrayOfObjectsSchemaType,\n  isArraySchemaType,\n  isObjectSchemaType,\n  type NumberSchemaType,\n  type ObjectField,\n  type ObjectSchemaType,\n  type Path,\n  type StringSchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {resolveTypeName} from '@sanity/util/content'\nimport {isEqual, pathFor, startsWith, toString, trimChildPath} from '@sanity/util/paths'\nimport {castArray, isEqual as _isEqual, pick} from 'lodash'\n\nimport {type FIXME} from '../../FIXME'\nimport {type FormNodePresence} from '../../presence'\nimport {EMPTY_ARRAY, isRecord} from '../../util'\nimport {getFieldLevel} from '../studio/inputResolver/helpers'\nimport {resolveConditionalProperty} from './conditional-property'\nimport {ALL_FIELDS_GROUP, MAX_FIELD_DEPTH} from './constants'\nimport {\n  type FieldSetMember,\n  type HiddenField,\n  type ObjectArrayFormNode,\n  type PrimitiveFormNode,\n  type StateTree,\n} from './types'\nimport {type FormFieldGroup} from './types/fieldGroup'\nimport {type FieldError} from './types/memberErrors'\nimport {\n  type ArrayOfObjectsMember,\n  type ArrayOfPrimitivesMember,\n  type FieldMember,\n  type ObjectMember,\n} from './types/members'\nimport {\n  type ArrayOfObjectsFormNode,\n  type ArrayOfPrimitivesFormNode,\n  type ObjectFormNode,\n} from './types/nodes'\nimport {getCollapsedWithDefaults} from './utils/getCollapsibleOptions'\nimport {getItemType, getPrimitiveItemType} from './utils/getItemType'\n\ntype PrimitiveSchemaType = BooleanSchemaType | NumberSchemaType | StringSchemaType\n\nfunction isFieldEnabledByGroupFilter(\n  // the groups config for the \"enclosing object\" type\n  groupsConfig: FormFieldGroup[],\n  fieldGroup: string | string[] | undefined,\n  selectedGroup: FormFieldGroup,\n) {\n  if (selectedGroup.name === ALL_FIELDS_GROUP.name) {\n    return true\n  }\n\n  // \"all fields\" is not the selected group and the field has no group config, so it should be hidden\n  if (fieldGroup === undefined) {\n    return false\n  }\n\n  // if there's no group config for the object type, all fields are visible\n  if (groupsConfig.length === 0 && selectedGroup.name === ALL_FIELDS_GROUP.name) {\n    return true\n  }\n\n  return castArray(fieldGroup).includes(selectedGroup.name)\n}\n\nfunction isAcceptedObjectValue(value: any): value is Record<string, unknown> | undefined {\n  return typeof value === 'undefined' || isRecord(value)\n}\n\nfunction isValidArrayOfObjectsValue(value: any): value is unknown[] | undefined {\n  return typeof value === 'undefined' || Array.isArray(value)\n}\n\nfunction isValidArrayOfPrimitivesValue(\n  value: any,\n): value is (boolean | number | string)[] | undefined {\n  return typeof value === 'undefined' || Array.isArray(value)\n}\n\nfunction everyItemIsObject(value: unknown[]): value is object[] {\n  return value.length === 0 || value.every((item) => isRecord(item))\n}\n\nfunction findDuplicateKeyEntries(array: {_key: string}[]) {\n  const seenKeys = new Set<string>()\n  return array.reduce((acc: [index: number, key: string][], item, index) => {\n    if (seenKeys.has(item._key)) {\n      acc.push([index, item._key])\n    }\n    seenKeys.add(item._key)\n    return acc\n  }, [])\n}\n\nfunction hasKey<T extends object>(value: T): value is T & {_key: string} {\n  return '_key' in value\n}\n\nfunction everyItemHasKey<T extends object>(array: T[]): array is (T & {_key: string})[] {\n  return array?.every((item) => isRecord(item) && hasKey(item))\n}\n\nfunction isChangedValue(value: any, comparisonValue: any) {\n  // changes panel is not being able to identify changes in array of objects\n  // (especially when it comes to unpublished changes)\n  // the main issue it fixes is in instances where the array removes a last item but instead of turning\n  // \"undefined\" it returns an empty array (and so the change indicator remains active when it shouldn't)\n  if (\n    (Array.isArray(value) && typeof comparisonValue === 'undefined') ||\n    (Array.isArray(comparisonValue) && typeof value === 'undefined')\n  ) {\n    return false\n  }\n\n  if (value && !comparisonValue) {\n    return true\n  }\n  return !_isEqual(value, comparisonValue)\n}\n\n/*\n * Takes a field in context of a parent object and returns prepared props for it\n */\nfunction prepareFieldMember(props: {\n  field: ObjectField\n  parent: RawState<ObjectSchemaType, unknown> & {\n    groups: FormFieldGroup[]\n    selectedGroup: FormFieldGroup\n  }\n  index: number\n}): ObjectMember | HiddenField | null {\n  const {parent, field, index} = props\n  const fieldPath = pathFor([...parent.path, field.name])\n  const fieldLevel = getFieldLevel(field.type, parent.level + 1)\n\n  const parentValue = parent.value\n  const parentComparisonValue = parent.comparisonValue\n  if (!isAcceptedObjectValue(parentValue)) {\n    // Note: we validate each field, before passing it recursively to this function so getting this error means that the\n    // ´prepareFormState´ function itself has been called with a non-object value\n    throw new Error('Unexpected non-object value')\n  }\n\n  const normalizedFieldGroupNames = field.group ? castArray(field.group) : []\n  const inSelectedGroup = isFieldEnabledByGroupFilter(\n    parent.groups,\n    field.group,\n    parent.selectedGroup,\n  )\n\n  if (isObjectSchemaType(field.type)) {\n    const fieldValue = parentValue?.[field.name]\n    const fieldComparisonValue = isRecord(parentComparisonValue)\n      ? parentComparisonValue?.[field.name]\n      : undefined\n\n    if (!isAcceptedObjectValue(fieldValue)) {\n      return {\n        kind: 'error',\n        key: field.name,\n        fieldName: field.name,\n        error: {\n          type: 'INCOMPATIBLE_TYPE',\n          expectedSchemaType: field.type,\n          resolvedValueType: resolveTypeName(fieldValue),\n          value: fieldValue,\n        },\n      }\n    }\n\n    const conditionalPropertyContext = {\n      value: fieldValue,\n      parent: parent.value,\n      document: parent.document,\n      currentUser: parent.currentUser,\n    }\n    const hidden = resolveConditionalProperty(field.type.hidden, conditionalPropertyContext)\n\n    if (hidden) {\n      return {\n        kind: 'hidden',\n        key: `field-${field.name}`,\n        name: field.name,\n        index: index,\n      }\n    }\n\n    // readonly is inherited\n    const readOnly =\n      parent.readOnly || resolveConditionalProperty(field.type.readOnly, conditionalPropertyContext)\n\n    // todo: consider requiring a _type annotation for object values on fields as well\n    // if (resolvedValueType !== field.type.name) {\n    //   return {\n    //     kind: 'error',\n    //     key: field.name,\n    //     error: {\n    //       type: 'TYPE_ANNOTATION_MISMATCH',\n    //       expectedSchemaType: field.type,\n    //       resolvedValueType,\n    //     },\n    //   }\n    // }\n\n    const fieldGroupState = parent.fieldGroupState?.children?.[field.name]\n    const scopedCollapsedPaths = parent.collapsedPaths?.children?.[field.name]\n    const scopedCollapsedFieldsets = parent.collapsedFieldSets?.children?.[field.name]\n\n    const inputState = prepareObjectInputState({\n      schemaType: field.type,\n      currentUser: parent.currentUser,\n      parent: parent.value,\n      document: parent.document,\n      value: fieldValue,\n      changed: isChangedValue(fieldValue, fieldComparisonValue),\n      comparisonValue: fieldComparisonValue,\n      presence: parent.presence,\n      validation: parent.validation,\n      fieldGroupState,\n      path: fieldPath,\n      level: fieldLevel,\n      focusPath: parent.focusPath,\n      openPath: parent.openPath,\n      collapsedPaths: scopedCollapsedPaths,\n      collapsedFieldSets: scopedCollapsedFieldsets,\n      readOnly,\n      changesOpen: parent.changesOpen,\n    })\n\n    if (inputState === null) {\n      // if inputState is null is either because we reached max field depth or if it has no visible members\n      return null\n    }\n\n    const defaultCollapsedState = getCollapsedWithDefaults(field.type.options as FIXME, fieldLevel)\n    const collapsed = scopedCollapsedPaths\n      ? scopedCollapsedPaths.value\n      : defaultCollapsedState.collapsed\n\n    return {\n      kind: 'field',\n      key: `field-${field.name}`,\n      name: field.name,\n      index: index,\n\n      inSelectedGroup,\n      groups: normalizedFieldGroupNames,\n\n      open: startsWith(fieldPath, parent.openPath),\n      field: inputState,\n      collapsed,\n      collapsible: defaultCollapsedState.collapsible,\n    }\n  } else if (isArraySchemaType(field.type)) {\n    const fieldValue = parentValue?.[field.name] as unknown[] | undefined\n    const fieldComparisonValue = isRecord(parentComparisonValue)\n      ? parentComparisonValue?.[field.name]\n      : undefined\n    if (isArrayOfObjectsSchemaType(field.type)) {\n      const hasValue = typeof fieldValue !== 'undefined'\n      if (hasValue && !isValidArrayOfObjectsValue(fieldValue)) {\n        const resolvedValueType = resolveTypeName(fieldValue)\n\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'INCOMPATIBLE_TYPE',\n            expectedSchemaType: field.type,\n            resolvedValueType,\n            value: fieldValue,\n          },\n        }\n      }\n\n      if (hasValue && !everyItemIsObject(fieldValue)) {\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'MIXED_ARRAY',\n            schemaType: field.type,\n            value: fieldValue,\n          },\n        }\n      }\n\n      if (hasValue && !everyItemHasKey(fieldValue)) {\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'MISSING_KEYS',\n            value: fieldValue,\n            schemaType: field.type,\n          },\n        }\n      }\n\n      const duplicateKeyEntries = hasValue ? findDuplicateKeyEntries(fieldValue) : []\n      if (duplicateKeyEntries.length > 0) {\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'DUPLICATE_KEYS',\n            duplicates: duplicateKeyEntries,\n            schemaType: field.type,\n          },\n        }\n      }\n\n      const fieldGroupState = parent.fieldGroupState?.children?.[field.name]\n      const scopedCollapsedPaths = parent.collapsedPaths?.children?.[field.name]\n      const scopedCollapsedFieldSets = parent.collapsedFieldSets?.children?.[field.name]\n\n      const readOnly =\n        parent.readOnly ||\n        resolveConditionalProperty(field.type.readOnly, {\n          value: fieldValue,\n          parent: parent.value,\n          document: parent.document,\n          currentUser: parent.currentUser,\n        })\n\n      const fieldState = prepareArrayOfObjectsInputState({\n        schemaType: field.type,\n        parent: parent.value,\n        currentUser: parent.currentUser,\n        document: parent.document,\n        value: fieldValue,\n        changed: isChangedValue(fieldValue, fieldComparisonValue),\n        comparisonValue: fieldComparisonValue as FIXME,\n        fieldGroupState,\n        focusPath: parent.focusPath,\n        openPath: parent.openPath,\n        presence: parent.presence,\n        validation: parent.validation,\n        collapsedPaths: scopedCollapsedPaths,\n        collapsedFieldSets: scopedCollapsedFieldSets,\n        level: fieldLevel,\n        path: fieldPath,\n        readOnly,\n      })\n\n      if (fieldState === null) {\n        return null\n      }\n\n      return {\n        kind: 'field',\n        key: `field-${field.name}`,\n        name: field.name,\n        index: index,\n\n        open: startsWith(fieldPath, parent.openPath),\n\n        inSelectedGroup,\n        groups: normalizedFieldGroupNames,\n\n        collapsible: false,\n        collapsed: false,\n        // note: this is what we actually end up passing down as to the next input component\n        field: fieldState,\n      }\n    } else {\n      // array of primitives\n      if (!isValidArrayOfPrimitivesValue(fieldValue)) {\n        const resolvedValueType = resolveTypeName(fieldValue)\n\n        return {\n          kind: 'error',\n          key: field.name,\n          fieldName: field.name,\n          error: {\n            type: 'INCOMPATIBLE_TYPE',\n            expectedSchemaType: field.type,\n            resolvedValueType,\n            value: fieldValue,\n          },\n        }\n      }\n\n      const fieldGroupState = parent.fieldGroupState?.children?.[field.name]\n      const scopedCollapsedPaths = parent.collapsedPaths?.children?.[field.name]\n      const scopedCollapsedFieldSets = parent.collapsedFieldSets?.children?.[field.name]\n\n      const readOnly =\n        parent.readOnly ||\n        resolveConditionalProperty(field.type.readOnly, {\n          value: fieldValue,\n          parent: parent.value,\n          document: parent.document,\n          currentUser: parent.currentUser,\n        })\n\n      const fieldState = prepareArrayOfPrimitivesInputState({\n        changed: isChangedValue(fieldValue, fieldComparisonValue),\n        comparisonValue: fieldComparisonValue as FIXME,\n        schemaType: field.type,\n        parent: parent.value,\n        currentUser: parent.currentUser,\n        document: parent.document,\n        value: fieldValue,\n        fieldGroupState,\n        focusPath: parent.focusPath,\n        openPath: parent.openPath,\n        presence: parent.presence,\n        validation: parent.validation,\n        collapsedPaths: scopedCollapsedPaths,\n        collapsedFieldSets: scopedCollapsedFieldSets,\n        level: fieldLevel,\n        path: fieldPath,\n        readOnly,\n      })\n\n      if (fieldState === null) {\n        return null\n      }\n\n      return {\n        kind: 'field',\n        key: `field-${field.name}`,\n        name: field.name,\n        index: index,\n\n        inSelectedGroup,\n        groups: normalizedFieldGroupNames,\n\n        open: startsWith(fieldPath, parent.openPath),\n\n        // todo: consider support for collapsible arrays\n        collapsible: false,\n        collapsed: false,\n        // note: this is what we actually end up passing down as to the next input component\n        field: fieldState,\n      }\n    }\n  } else {\n    // primitive fields\n\n    const fieldValue = parentValue?.[field.name] as undefined | boolean | string | number\n    const fieldComparisonValue = isRecord(parentComparisonValue)\n      ? parentComparisonValue?.[field.name]\n      : undefined\n\n    const conditionalPropertyContext = {\n      value: fieldValue,\n      parent: parent.value,\n      document: parent.document,\n      currentUser: parent.currentUser,\n    }\n\n    // note: we *only* want to call the conditional props here, as it's handled by the prepare<Object|Array>InputProps otherwise\n    const hidden = resolveConditionalProperty(field.type.hidden, conditionalPropertyContext)\n\n    if (hidden) {\n      return null\n    }\n\n    const readOnly =\n      parent.readOnly || resolveConditionalProperty(field.type.readOnly, conditionalPropertyContext)\n\n    const fieldState = preparePrimitiveInputState({\n      ...parent,\n      comparisonValue: fieldComparisonValue,\n      value: fieldValue as boolean | string | number | undefined,\n      schemaType: field.type as PrimitiveSchemaType,\n      path: fieldPath,\n      readOnly,\n    })\n\n    return {\n      kind: 'field',\n      key: `field-${field.name}`,\n      name: field.name,\n      index: index,\n      open: startsWith(fieldPath, parent.openPath),\n\n      inSelectedGroup,\n      groups: normalizedFieldGroupNames,\n\n      // todo: consider support for collapsible primitive fields\n      collapsible: false,\n      collapsed: false,\n      field: fieldState,\n    }\n  }\n}\n\ninterface RawState<SchemaType, T> {\n  schemaType: SchemaType\n  value?: T\n  comparisonValue?: T | null\n  changed?: boolean\n  document: FIXME_SanityDocument\n  currentUser: Omit<CurrentUser, 'role'> | null\n  parent?: unknown\n  hidden?: boolean\n  readOnly?: boolean\n  path: Path\n  openPath: Path\n  focusPath: Path\n  presence: FormNodePresence[]\n  validation: ValidationMarker[]\n  fieldGroupState?: StateTree<string>\n  collapsedPaths?: StateTree<boolean>\n  collapsedFieldSets?: StateTree<boolean>\n  // nesting level\n  level: number\n  changesOpen?: boolean\n}\n\nfunction prepareObjectInputState<T>(\n  props: RawState<ObjectSchemaType, T>,\n  enableHiddenCheck?: false,\n): ObjectFormNode\nfunction prepareObjectInputState<T>(\n  props: RawState<ObjectSchemaType, T>,\n  enableHiddenCheck?: true,\n): ObjectFormNode | null\nfunction prepareObjectInputState<T>(\n  props: RawState<ObjectSchemaType, T>,\n  enableHiddenCheck = true,\n): ObjectFormNode | null {\n  if (props.level === MAX_FIELD_DEPTH) {\n    return null\n  }\n\n  const conditionalPropertyContext = {\n    value: props.value,\n    parent: props.parent,\n    document: props.document,\n    currentUser: props.currentUser,\n  }\n\n  // readonly is inherited\n  const readOnly =\n    props.readOnly ||\n    resolveConditionalProperty(props.schemaType.readOnly, conditionalPropertyContext)\n\n  const schemaTypeGroupConfig = props.schemaType.groups || []\n  const defaultGroupName = (schemaTypeGroupConfig.find((g) => g.default) || ALL_FIELDS_GROUP)?.name\n\n  const groups = [ALL_FIELDS_GROUP, ...schemaTypeGroupConfig].flatMap((group): FormFieldGroup[] => {\n    const groupHidden = resolveConditionalProperty(group.hidden, conditionalPropertyContext)\n    const isSelected = group.name === (props.fieldGroupState?.value || defaultGroupName)\n\n    // Set the \"all-fields\" group as selected when review changes is open to enable review of all\n    // fields and changes together. When review changes is closed - switch back to the selected tab.\n    const selected = props.changesOpen ? group.name === ALL_FIELDS_GROUP.name : isSelected\n    // Also disable non-selected groups when review changes is open\n    const disabled = props.changesOpen ? !selected : false\n\n    return groupHidden\n      ? []\n      : [\n          {\n            disabled,\n            icon: group?.icon,\n            name: group.name,\n            selected,\n            title: group.title,\n          },\n        ]\n  })\n\n  const selectedGroup = groups.find((group) => group.selected)!\n\n  // note: this is needed because not all object types gets a ´fieldsets´ property during schema parsing.\n  // ideally members should be normalized as part of the schema parsing and not here\n  const normalizedSchemaMembers: typeof props.schemaType.fieldsets = props.schemaType.fieldsets\n    ? props.schemaType.fieldsets\n    : props.schemaType.fields.map((field) => ({single: true, field}))\n\n  // create a members array for the object\n  const members = normalizedSchemaMembers.flatMap(\n    (fieldSet, index): (ObjectMember | HiddenField)[] => {\n      // \"single\" means not part of a fieldset\n      if (fieldSet.single) {\n        const field = fieldSet.field\n\n        const fieldMember = prepareFieldMember({\n          field: field,\n          parent: {...props, readOnly, groups, selectedGroup},\n          index,\n        })\n\n        return fieldMember ? [fieldMember] : []\n      }\n\n      // it's an actual fieldset\n      const fieldsetFieldNames = fieldSet.fields.map((f) => f.name)\n      const fieldsetHidden = resolveConditionalProperty(fieldSet.hidden, {\n        currentUser: props.currentUser,\n        document: props.document,\n        parent: props.value,\n        value: pick(props.value, fieldsetFieldNames),\n      })\n\n      const fieldsetReadOnly = resolveConditionalProperty(fieldSet.readOnly, {\n        currentUser: props.currentUser,\n        document: props.document,\n        parent: props.value,\n        value: pick(props.value, fieldsetFieldNames),\n      })\n\n      const fieldsetMembers = fieldSet.fields.flatMap(\n        (field): (FieldMember | FieldError | HiddenField)[] => {\n          if (fieldsetHidden) {\n            return [\n              {\n                kind: 'hidden',\n                key: `field-${field.name}`,\n                name: field.name,\n                index: index,\n              },\n            ]\n          }\n          const fieldMember = prepareFieldMember({\n            field: field,\n            parent: {...props, readOnly: readOnly || fieldsetReadOnly, groups, selectedGroup},\n            index,\n          }) as FieldMember | FieldError | HiddenField\n\n          return fieldMember ? [fieldMember] : []\n        },\n      )\n\n      const defaultCollapsedState = getCollapsedWithDefaults(fieldSet.options, props.level)\n\n      const collapsed =\n        (props.collapsedFieldSets?.children || {})[fieldSet.name]?.value ??\n        defaultCollapsedState.collapsed\n\n      return [\n        {\n          kind: 'fieldSet',\n          key: `fieldset-${fieldSet.name}`,\n          _inSelectedGroup: isFieldEnabledByGroupFilter(groups, fieldSet.group, selectedGroup),\n          groups: fieldSet.group ? castArray(fieldSet.group) : [],\n          fieldSet: {\n            path: pathFor(props.path.concat(fieldSet.name)),\n            name: fieldSet.name,\n            title: fieldSet.title,\n            description: fieldSet.description,\n            hidden: false,\n            level: props.level + 1,\n            members: fieldsetMembers.filter(\n              (member): member is FieldMember => member.kind !== 'hidden',\n            ),\n            collapsible: defaultCollapsedState?.collapsible,\n            collapsed,\n            columns: fieldSet?.options?.columns,\n          },\n        },\n      ]\n    },\n  )\n\n  const hasFieldGroups = schemaTypeGroupConfig.length > 0\n\n  const filteredPresence = props.presence.filter((item) => isEqual(item.path, props.path))\n  const presence = filteredPresence.length ? filteredPresence : EMPTY_ARRAY\n\n  const validation = props.validation\n    .filter((item) => isEqual(item.path, props.path))\n    .map((v) => ({level: v.level, message: v.message, path: v.path}))\n\n  const visibleMembers = members.filter(\n    (member): member is ObjectMember => member.kind !== 'hidden',\n  )\n\n  // Return null here only when enableHiddenCheck, or we end up with array members that have 'item: null' when they\n  // really should not be. One example is when a block object inside the PT-input have a type with one single hidden field.\n  // Then it should still be possible to see the member item, even though all of it's fields are null.\n  if (visibleMembers.length === 0 && enableHiddenCheck) {\n    return null\n  }\n\n  const visibleGroups = hasFieldGroups\n    ? groups.flatMap((group) => {\n        // The \"all fields\" group is always visible\n        if (group.name === ALL_FIELDS_GROUP.name) {\n          return group\n        }\n        const hasVisibleMembers = visibleMembers.some((member) => {\n          if (member.kind === 'error') {\n            return false\n          }\n          if (member.kind === 'field') {\n            return member.groups.includes(group.name)\n          }\n\n          return (\n            member.groups.includes(group.name) ||\n            member.fieldSet.members.some(\n              (fieldsetMember) =>\n                fieldsetMember.kind !== 'error' && fieldsetMember.groups.includes(group.name),\n            )\n          )\n        })\n        return hasVisibleMembers ? group : []\n      })\n    : []\n\n  const filtereredMembers = visibleMembers.flatMap(\n    (member): (FieldError | FieldMember | FieldSetMember)[] => {\n      if (member.kind === 'error') {\n        return [member]\n      }\n      if (member.kind === 'field') {\n        return member.inSelectedGroup ? [member] : []\n      }\n\n      const filteredFieldsetMembers: ObjectMember[] = member.fieldSet.members.filter(\n        (fieldsetMember) => fieldsetMember.kind !== 'field' || fieldsetMember.inSelectedGroup,\n      )\n      return filteredFieldsetMembers.length > 0\n        ? [\n            {\n              ...member,\n              fieldSet: {...member.fieldSet, members: filteredFieldsetMembers},\n            } as FieldSetMember,\n          ]\n        : []\n    },\n  )\n\n  const node = {\n    value: props.value as Record<string, unknown> | undefined,\n    changed: isChangedValue(props.value, props.comparisonValue),\n    schemaType: props.schemaType,\n    readOnly,\n    path: props.path,\n    id: toString(props.path),\n    level: props.level,\n    focused: isEqual(props.path, props.focusPath),\n    focusPath: trimChildPath(props.path, props.focusPath),\n    presence,\n    validation,\n    // this is currently needed by getExpandOperations which needs to know about hidden members\n    // (e.g. members not matching current group filter) in order to determine what to expand\n    members: filtereredMembers,\n    groups: visibleGroups,\n  }\n  Object.defineProperty(node, '_allMembers', {\n    value: members,\n    enumerable: false,\n  })\n  return node\n}\n\nfunction prepareArrayOfPrimitivesInputState<T extends (boolean | string | number)[]>(\n  props: RawState<ArraySchemaType, T>,\n): ArrayOfPrimitivesFormNode | null {\n  if (props.level === MAX_FIELD_DEPTH) {\n    return null\n  }\n\n  const conditionalPropertyContext = {\n    comparisonValue: props.comparisonValue,\n    value: props.value,\n    parent: props.parent,\n    document: props.document,\n    currentUser: props.currentUser,\n  }\n\n  const hidden = resolveConditionalProperty(props.schemaType.hidden, conditionalPropertyContext)\n\n  if (hidden) {\n    return null\n  }\n\n  const readOnly =\n    props.readOnly ||\n    resolveConditionalProperty(props.schemaType.readOnly, conditionalPropertyContext)\n\n  // Todo: improve error handling at the parent level so that the value here is either undefined or an array\n  const items = Array.isArray(props.value) ? props.value : []\n\n  const filteredPresence = props.presence.filter((item) => isEqual(item.path, props.path))\n  const presence = filteredPresence.length ? filteredPresence : EMPTY_ARRAY\n  const validation = props.validation\n    .filter((item) => isEqual(item.path, props.path))\n    .map((v) => ({level: v.level, message: v.message, path: v.path}))\n  const members = items.flatMap((item, index) =>\n    prepareArrayOfPrimitivesMember({arrayItem: item, parent: props, index}),\n  )\n  return {\n    // checks for changes not only on the array itself, but also on any of its items\n    changed: props.changed || members.some((m) => m.kind === 'item' && m.item.changed),\n    value: props.value as T,\n    readOnly,\n    schemaType: props.schemaType,\n    focused: isEqual(props.path, props.focusPath),\n    focusPath: trimChildPath(props.path, props.focusPath),\n    path: props.path,\n    id: toString(props.path),\n    level: props.level,\n    validation,\n    presence,\n    members,\n  }\n}\n\nfunction prepareArrayOfObjectsInputState<T extends {_key: string}[]>(\n  props: RawState<ArraySchemaType, T>,\n): ArrayOfObjectsFormNode | null {\n  if (props.level === MAX_FIELD_DEPTH) {\n    return null\n  }\n\n  const conditionalPropertyContext = {\n    value: props.value,\n    parent: props.parent,\n    document: props.document,\n    currentUser: props.currentUser,\n  }\n  const hidden = resolveConditionalProperty(props.schemaType.hidden, conditionalPropertyContext)\n\n  if (hidden) {\n    return null\n  }\n\n  const readOnly =\n    props.readOnly ||\n    resolveConditionalProperty(props.schemaType.readOnly, conditionalPropertyContext)\n\n  // Todo: improve error handling at the parent level so that the value here is either undefined or an array\n  const items = Array.isArray(props.value) ? props.value : []\n\n  const filteredPresence = props.presence.filter((item) => isEqual(item.path, props.path))\n  const presence = filteredPresence.length ? filteredPresence : EMPTY_ARRAY\n  const validation = props.validation\n    .filter((item) => isEqual(item.path, props.path))\n    .map((v) => ({level: v.level, message: v.message, path: v.path}))\n\n  const members = items.flatMap((item, index) =>\n    prepareArrayOfObjectsMember({\n      arrayItem: item,\n      parent: props,\n      index,\n    }),\n  )\n\n  return {\n    // checks for changes not only on the array itself, but also on any of its items\n    changed: props.changed || members.some((m) => m.kind === 'item' && m.item.changed),\n    value: props.value as T,\n    readOnly,\n    schemaType: props.schemaType,\n    focused: isEqual(props.path, props.focusPath),\n    focusPath: trimChildPath(props.path, props.focusPath),\n    path: props.path,\n    id: toString(props.path),\n    level: props.level,\n    validation,\n    presence,\n    members,\n  }\n}\n\n/*\n * Takes a field in context of a parent object and returns prepared props for it\n */\nfunction prepareArrayOfObjectsMember(props: {\n  arrayItem: {_key: string}\n  parent: RawState<ArraySchemaType, unknown>\n  index: number\n}): ArrayOfObjectsMember {\n  const {arrayItem, parent, index} = props\n\n  const itemType = getItemType(parent.schemaType, arrayItem) as ObjectSchemaType\n\n  const key = arrayItem._key\n\n  if (!itemType) {\n    const itemTypeName = resolveTypeName(arrayItem)\n    return {\n      kind: 'error',\n      key,\n      index,\n      error: {\n        type: 'INVALID_ITEM_TYPE',\n        resolvedValueType: itemTypeName,\n        value: arrayItem,\n        validTypes: parent.schemaType.of,\n      },\n    }\n  }\n\n  const itemPath = pathFor([...parent.path, {_key: key}])\n  const itemLevel = parent.level + 1\n\n  const conditionalPropertyContext = {\n    value: parent.value,\n    parent: props.parent,\n    document: parent.document,\n    currentUser: parent.currentUser,\n  }\n  const readOnly =\n    parent.readOnly ||\n    resolveConditionalProperty(parent.schemaType.readOnly, conditionalPropertyContext)\n\n  const fieldGroupState = parent.fieldGroupState?.children?.[key]\n  const scopedCollapsedPaths = parent.collapsedPaths?.children?.[key]\n  const scopedCollapsedFieldsets = parent.collapsedFieldSets?.children?.[key]\n  const comparisonValue =\n    (Array.isArray(parent.comparisonValue) &&\n      parent.comparisonValue.find((i) => i._key === arrayItem._key)) ||\n    undefined\n\n  const itemState = prepareObjectInputState(\n    {\n      schemaType: itemType,\n      level: itemLevel,\n      document: parent.document,\n      value: arrayItem,\n      comparisonValue,\n      changed: isChangedValue(arrayItem, comparisonValue),\n      path: itemPath,\n      focusPath: parent.focusPath,\n      openPath: parent.openPath,\n      currentUser: parent.currentUser,\n      collapsedPaths: scopedCollapsedPaths,\n      collapsedFieldSets: scopedCollapsedFieldsets,\n      presence: parent.presence,\n      validation: parent.validation,\n      fieldGroupState,\n      readOnly,\n    },\n    false,\n  ) as ObjectArrayFormNode\n\n  const defaultCollapsedState = getCollapsedWithDefaults(itemType.options, itemLevel)\n  const collapsed = scopedCollapsedPaths?.value ?? defaultCollapsedState.collapsed\n  return {\n    kind: 'item',\n    key,\n    index,\n    open: startsWith(itemPath, parent.openPath),\n    collapsed: collapsed,\n    collapsible: true,\n    parentSchemaType: parent.schemaType,\n    item: itemState,\n  }\n}\n\n/*\n * Takes a field in contet of a parent object and returns prepared props for it\n */\nfunction prepareArrayOfPrimitivesMember(props: {\n  arrayItem: unknown\n  parent: RawState<ArraySchemaType, unknown>\n  index: number\n}): ArrayOfPrimitivesMember {\n  const {arrayItem, parent, index} = props\n  const itemType = getPrimitiveItemType(parent.schemaType, arrayItem)\n\n  const itemPath = pathFor([...parent.path, index])\n  const itemValue = (parent.value as unknown[] | undefined)?.[index] as string | boolean | number\n  const itemComparisonValue = (parent.comparisonValue as unknown[] | undefined)?.[index] as\n    | string\n    | boolean\n    | number\n  const itemLevel = parent.level + 1\n\n  // Best effort attempt to make a stable key for each item in the array\n  // Since items may be reordered and change at any time, there's no way to reliably address each item uniquely\n  // This is a \"best effort\"-attempt at making sure we don't re-use internal state for item inputs\n  // when items are added to or removed from the array\n  const key = `${itemType?.name || 'invalid-type'}-${String(index)}`\n\n  if (!itemType) {\n    return {\n      kind: 'error',\n      key,\n      index,\n      error: {\n        type: 'INVALID_ITEM_TYPE',\n        validTypes: parent.schemaType.of,\n        resolvedValueType: resolveTypeName(itemType),\n        value: itemValue,\n      },\n    }\n  }\n\n  const readOnly =\n    parent.readOnly ||\n    resolveConditionalProperty(itemType.readOnly, {\n      value: itemValue,\n      parent: parent.value,\n      document: parent.document,\n      currentUser: parent.currentUser,\n    })\n\n  const item = preparePrimitiveInputState({\n    ...parent,\n    path: itemPath,\n    schemaType: itemType as PrimitiveSchemaType,\n    level: itemLevel,\n    value: itemValue,\n    comparisonValue: itemComparisonValue,\n    readOnly,\n  })\n\n  return {\n    kind: 'item',\n    key,\n    index,\n    parentSchemaType: parent.schemaType,\n    open: isEqual(itemPath, parent.openPath),\n    item,\n  }\n}\n\nfunction preparePrimitiveInputState<SchemaType extends PrimitiveSchemaType>(\n  props: RawState<SchemaType, unknown>,\n): PrimitiveFormNode {\n  const filteredPresence = props.presence.filter((item) => isEqual(item.path, props.path))\n  const presence = filteredPresence.length ? filteredPresence : EMPTY_ARRAY\n\n  const validation = props.validation\n    .filter((item) => isEqual(item.path, props.path))\n    .map((v) => ({level: v.level, message: v.message, path: v.path}))\n  return {\n    schemaType: props.schemaType,\n    changed: isChangedValue(props.value, props.comparisonValue),\n    value: props.value,\n    level: props.level,\n    id: toString(props.path),\n    readOnly: props.readOnly,\n    focused: isEqual(props.path, props.focusPath),\n    path: props.path,\n    presence,\n    validation,\n  } as PrimitiveFormNode\n}\n\n/** @internal */\nexport type FIXME_SanityDocument = Record<string, unknown>\n\n/** @internal */\nexport function prepareFormState<T extends FIXME_SanityDocument>(\n  props: RawState<ObjectSchemaType, T>,\n): ObjectFormNode | null {\n  return prepareObjectInputState(props)\n}\n","/* eslint-disable camelcase */\n\nimport {type ObjectSchemaType, type Path, type ValidationMarker} from '@sanity/types'\nimport {pathFor} from '@sanity/util/paths'\nimport {useLayoutEffect, useMemo, useRef} from 'react'\n\nimport {type FormNodePresence} from '../../presence'\nimport {useCurrentUser} from '../../store'\nimport {type FIXME_SanityDocument, prepareFormState} from './formState'\nimport {type ObjectFormNode, type StateTree} from './types'\nimport {type DocumentFormNode} from './types/nodes'\nimport {immutableReconcile} from './utils/immutableReconcile'\n\n/** @internal */\nexport type FormState<\n  T extends {[key in string]: unknown} = {[key in string]: unknown},\n  S extends ObjectSchemaType = ObjectSchemaType,\n> = ObjectFormNode<T, S>\n\n/** @internal */\nexport function useFormState<\n  T extends {[key in string]: unknown} = {[key in string]: unknown},\n  S extends ObjectSchemaType = ObjectSchemaType,\n>(\n  schemaType: ObjectSchemaType,\n  {\n    comparisonValue,\n    value,\n    fieldGroupState,\n    collapsedFieldSets,\n    collapsedPaths,\n    focusPath,\n    openPath,\n    presence,\n    validation,\n    readOnly,\n    changesOpen,\n  }: {\n    fieldGroupState?: StateTree<string> | undefined\n    collapsedFieldSets?: StateTree<boolean> | undefined\n    collapsedPaths?: StateTree<boolean> | undefined\n    value: Partial<FIXME_SanityDocument>\n    comparisonValue: Partial<FIXME_SanityDocument> | null\n    openPath: Path\n    focusPath: Path\n    presence: FormNodePresence[]\n    validation: ValidationMarker[]\n    changesOpen?: boolean\n    readOnly?: boolean\n  },\n): FormState<T, S> | null {\n  // note: feel free to move these state pieces out of this hook\n  const currentUser = useCurrentUser()\n\n  const prev = useRef<DocumentFormNode | null>(null)\n\n  useLayoutEffect(() => {\n    prev.current = null\n  }, [schemaType])\n\n  return useMemo(() => {\n    // console.time('derive form state')\n    const next = prepareFormState({\n      schemaType,\n      document: value,\n      fieldGroupState,\n      collapsedFieldSets,\n      collapsedPaths,\n      value,\n      comparisonValue,\n      focusPath,\n      openPath,\n      readOnly,\n      path: pathFor([]),\n      level: 0,\n      currentUser,\n      presence,\n      validation,\n      changesOpen,\n    }) as ObjectFormNode<T, S> // TODO: remove type cast\n\n    const reconciled = immutableReconcile(prev.current, next)\n    prev.current = reconciled\n    // console.timeEnd('derive form state')\n    return reconciled\n  }, [\n    schemaType,\n    value,\n    fieldGroupState,\n    collapsedFieldSets,\n    collapsedPaths,\n    comparisonValue,\n    focusPath,\n    openPath,\n    readOnly,\n    currentUser,\n    presence,\n    validation,\n    changesOpen,\n  ])\n}\n","import {isArrayOfObjectsSchemaType, isObjectSchemaType} from '@sanity/types'\n\nimport {type ArrayOfObjectsFormNode, type BaseFormNode, type ObjectFormNode} from './nodes'\n\n/** @internal */\nexport function isObjectFormNode(formNode: BaseFormNode): formNode is ObjectFormNode {\n  return isObjectSchemaType(formNode.schemaType)\n}\n/** @internal */\nexport function isArrayOfObjectsFormNode(\n  formNode: BaseFormNode,\n): formNode is ArrayOfObjectsFormNode {\n  return isArrayOfObjectsSchemaType(formNode.schemaType)\n}\n","import {isKeySegment, type Path} from '@sanity/types'\nimport {castArray} from 'lodash'\n\nimport {isMemberArrayOfObjects, isMemberObject} from '../../members/object/fields/asserters'\nimport {ALL_FIELDS_GROUP} from '../constants'\nimport {\n  type ArrayOfObjectsFormNode,\n  type ArrayOfObjectsItemMember,\n  type BaseFormNode,\n  type FieldMember,\n  type FieldSetMember,\n  type ObjectFormNode,\n  type ObjectMember,\n} from '../types'\nimport {isArrayOfObjectsFormNode, isObjectFormNode} from '../types/asserters'\n\n/** @internal */\nexport interface ExpandPathOperation {\n  type: 'expandPath'\n  path: Path\n}\n\n/** @internal */\nexport interface ExpandFieldSetOperation {\n  type: 'expandFieldSet'\n  path: Path\n}\n\n/** @internal */\nexport interface SetActiveGroupOperation {\n  type: 'setSelectedGroup'\n  path: Path\n  groupName: string\n}\n\n/** @internal */\nexport type ExpandOperation =\n  | ExpandPathOperation\n  | ExpandFieldSetOperation\n  | SetActiveGroupOperation\n\nfunction hasAllMembers<T extends BaseFormNode>(value: T): value is HasAllMembers<T> {\n  return '_allMembers' in value && Array.isArray(value._allMembers)\n}\n\n/**\n * This takes a form state and returns a list of operations required to open a node at a particular path\n * @param node - The base form node (i.e. the form state node for the _document_)\n * @param path - The path to open\n *\n * @internal\n */\nexport function getExpandOperations(node: BaseFormNode, path: Path): ExpandOperation[] {\n  return [\n    // make sure to expand all intermediate paths\n    ...path.map((p, i): ExpandPathOperation => ({type: 'expandPath', path: path.slice(0, i + 1)})),\n    // make sure to expand all fieldsets and selects the groups that includes the intermediate nodes\n    ...getFieldsetAndFieldGroupOperations(node, path),\n  ]\n}\nfunction getFieldsetAndFieldGroupOperations(node: BaseFormNode, path: Path) {\n  if (path.length === 0) {\n    return []\n  }\n\n  if (isObjectFormNode(node) && hasAllMembers(node)) {\n    return getObjectFieldsetAndFieldGroupOperations(node, path)\n  }\n  if (isArrayOfObjectsFormNode(node)) {\n    return getArrayFieldsetAndFieldGroupOperations(node, path)\n  }\n  return []\n}\n\ntype HasAllMembers<T> = T & {_allMembers: ObjectMember[]}\n\nfunction getObjectFieldsetAndFieldGroupOperations(\n  node: HasAllMembers<ObjectFormNode>,\n  path: Path,\n): (ExpandFieldSetOperation | SetActiveGroupOperation)[] {\n  if (path.length === 0) {\n    return []\n  }\n  // extract the field name for the current level we're looking at\n  const [fieldName, ...tail] = path\n\n  const fieldsetMember = node._allMembers.find(\n    (member): member is FieldSetMember =>\n      member.kind === 'fieldSet' &&\n      member.fieldSet.members.some(\n        (field): field is FieldMember => field.kind === 'field' && field.name === fieldName,\n      ),\n  )\n\n  // if we found the field in a fieldset we need to recurse into this fieldset's members, otherwise we can use the node's members\n  const members = fieldsetMember\n    ? fieldsetMember.fieldSet.members\n    : // Note: we need to use the internal `_allMembers` array here instead of members since hidden/collapsed members are omitted from members\n      node._allMembers\n\n  // look for the field inside the members array\n  const fieldMember = members.find(\n    (member): member is FieldMember =>\n      member !== null && member.kind === 'field' && member.name === fieldName,\n  )\n\n  // Group handling\n  const schemaField = node.schemaType.fields.find((field) => field.name === fieldName)\n  const selectedGroupName = node.groups.find((group) => group.selected)?.name\n  const defaultGroupName = (node.schemaType.groups || []).find((group) => group.default)?.name\n  const inSelectedGroup =\n    selectedGroupName &&\n    (selectedGroupName === ALL_FIELDS_GROUP.name ||\n      (schemaField && castArray(schemaField.group).includes(selectedGroupName)))\n\n  const ops: (ExpandFieldSetOperation | SetActiveGroupOperation)[] = []\n\n  if (!inSelectedGroup) {\n    ops.push({\n      type: 'setSelectedGroup',\n      path: node.path,\n      groupName: defaultGroupName || ALL_FIELDS_GROUP.name,\n    })\n  }\n\n  if (fieldsetMember) {\n    // the field is inside a fieldset, make sure we expand it too\n    ops.push({type: 'expandFieldSet', path: fieldsetMember.fieldSet.path})\n  }\n\n  if (fieldMember && hasAllMembers(fieldMember.field)) {\n    if (isMemberArrayOfObjects(fieldMember)) {\n      ops.push(...getArrayFieldsetAndFieldGroupOperations(fieldMember.field, tail))\n    } else if (isMemberObject(fieldMember)) {\n      ops.push(...getObjectFieldsetAndFieldGroupOperations(fieldMember.field, tail))\n    }\n  }\n\n  return ops\n}\n\nfunction getArrayFieldsetAndFieldGroupOperations(\n  state: ArrayOfObjectsFormNode,\n  path: Path,\n): (ExpandFieldSetOperation | SetActiveGroupOperation)[] {\n  if (path.length === 0) {\n    return []\n  }\n\n  // start at the root and make sure all groups/paths are expanded/activated along the way\n  const [segment, ...rest] = path\n  if (!isKeySegment(segment)) {\n    throw new Error('Expected path segment to be an object with a _key property')\n  }\n\n  const foundMember = state.members.find(\n    (member): member is ArrayOfObjectsItemMember => member.key === segment._key,\n  )\n\n  if (!foundMember) {\n    // tried to open a member that does not exist in the form state - it's likely hidden\n    return []\n  }\n  return getFieldsetAndFieldGroupOperations(foundMember.item, rest)\n}\n","import {arrayToJSONMatchPath} from '@sanity/mutator'\nimport {type Path, type PathSegment} from '@sanity/types'\n\nconst IS_NUMERIC = /^\\d+$/\n\nfunction unquote(str: string) {\n  return str.replace(/^['\"]/, '').replace(/['\"]$/, '')\n}\n\nfunction splitAttr(segment: string) {\n  const [attr, key] = segment.split('==')\n  return {[attr]: unquote(key)}\n}\n\nfunction coerce(segment: string): PathSegment {\n  return IS_NUMERIC.test(segment) ? Number(segment) : segment\n}\n\nfunction parseGradientPath(focusPathStr: string): Path {\n  return focusPathStr\n    .split(/[[.\\]]/g)\n    .filter(Boolean)\n    .map((seg) => (seg.includes('==') ? splitAttr(seg) : coerce(seg))) as Path\n}\n\n/**\n * @internal\n */\nexport function encodePath(formBuilderPath: Path): string {\n  return arrayToJSONMatchPath(formBuilderPath)\n}\n\n/**\n * @internal\n */\nexport function decodePath(gradientPath: string): Path {\n  return parseGradientPath(gradientPath)\n}\n","import {arrayToJSONMatchPath} from '@sanity/mutator'\nimport {flatten} from 'lodash'\n\nimport {SANITY_PATCH_TYPE} from '../patch'\nimport {type FormPatch, type FormPatchOrigin} from '../patch/types'\nimport {decodePath} from './path'\n\n/**\n * @internal\n */\nexport type MutationPatch = Record<string, any> // @todo: complete this typing\n\n/**\n * @internal\n */\nexport function toMutationPatches(patches: FormPatch[]): MutationPatch[] {\n  return patches.map(toMutationPatch)\n}\n\n/**\n * @internal\n */\nexport function fromMutationPatches(\n  origin: FormPatchOrigin,\n  patches: MutationPatch[],\n): FormPatch[] {\n  return flatten(patches.map((patch) => toFormBuilderPatches(origin, patch)))\n}\n\nconst notIn = (values: unknown[]) => (value: unknown) => !values.includes(value)\n\nfunction toFormBuilderPatches(origin: FormPatchOrigin, patch: MutationPatch): FormPatch[] {\n  return flatten(\n    Object.keys(patch)\n      .filter(notIn(['id', 'ifRevisionID', 'query']))\n      .map((type) => {\n        if (type === 'unset') {\n          return patch.unset.map((path: any) => {\n            return {\n              type: 'unset',\n              path: decodePath(path),\n              origin,\n            }\n          })\n        }\n        if (type === 'insert') {\n          const position = 'before' in patch.insert ? 'before' : 'after'\n          return {\n            type: 'insert',\n            position: position,\n            path: decodePath(patch.insert[position]),\n            items: patch.insert.items,\n            origin,\n          }\n        }\n        return Object.keys(patch[type])\n          .map((gradientPath) => {\n            if (type === 'set') {\n              return {\n                type: 'set',\n                path: decodePath(gradientPath),\n                value: patch[type][gradientPath],\n                origin,\n              }\n            }\n            if (type === 'inc' || type === 'dec') {\n              return {\n                type: type,\n                path: decodePath(gradientPath),\n                value: patch[type][gradientPath],\n                origin,\n              }\n            }\n            if (type === 'setIfMissing') {\n              return {\n                type: 'setIfMissing',\n                path: decodePath(gradientPath),\n                value: patch[type][gradientPath],\n                origin,\n              }\n            }\n            if (type === 'diffMatchPatch') {\n              return {\n                type,\n                path: decodePath(gradientPath),\n                value: patch[type][gradientPath],\n                origin,\n              }\n            }\n            // eslint-disable-next-line no-console\n            console.warn(new Error(`Unsupported patch type: ${type}`))\n            return null\n          })\n          .filter(Boolean)\n      }),\n  )\n}\n\nfunction toMutationPatch(patch: FormPatch): MutationPatch {\n  if (patch.patchType !== SANITY_PATCH_TYPE && patch.type) {\n    throw new Error(\n      `Patch is missing \"patchType\" - import and use \"${patch.type}()\" from \"sanity/form\"`,\n    )\n  } else if (patch.patchType !== SANITY_PATCH_TYPE) {\n    throw new Error(\n      `Patch is missing \"patchType\" - import and use the patch method helpers from \"sanity/form\"`,\n    )\n  }\n\n  const matchPath = arrayToJSONMatchPath(patch.path || [])\n  if (patch.type === 'insert') {\n    const {position, items} = patch\n    return {\n      insert: {\n        [position]: matchPath,\n        items: items,\n      },\n    }\n  }\n\n  if (patch.type === 'unset') {\n    return {\n      unset: [matchPath],\n    }\n  }\n\n  if (!patch.type) {\n    throw new Error(`Missing patch type in patch ${JSON.stringify(patch)}`)\n  }\n  if (matchPath) {\n    return {\n      [patch.type]: {\n        [matchPath]: patch.value,\n      },\n    }\n  }\n  return {\n    [patch.type]: patch.value,\n  }\n}\n"],"names":["noop","NoopTracker","_ref","children","createNoopTrackerScope","useReportedValues","Tracker","useReporter","ChangeFieldWrapper","props","ref","useRef","onSetFocus","useContext","ConnectorContext","isHover","setHover","useState","onMouseEnter","useCallback","onMouseLeave","concat","PathUtils","toString","path","element","current","isChanged","hasFocus","hasHover","hasRevertHover","deepCompare","default","handleClick","event","setFocusWithStopPropagation","jsx","onClick","stopPropagation","isArray","value","Array","isTruthy","Boolean","BUNDLED_DOC_TYPES","_isSanityDocumentTypeDefinition","def","type","includes","name","_isCustomDocumentTypeDefinition","FONT_SANS_SERIF","FONT_MONOSPACE","uncaughtErrorHandler","join","useThrottledCallback","callback","wait","options","throttledCallback","useMemo","throttle","useOnScroll","parentContext","ScrollContext","useEffect","subscribe","ScrollMonitor","_ref2","onScroll","findMostSpecificTarget","targetType","id","values","pathString","slice","indexOf","fromString","exactId","has","get","mostSpecific","targetId","target","startsWith","numEqual","numEqualSegments","lastPathSegment","length","pathOnlyDiffersByKey","isKeyedObject","hasOverflowScroll","el","overflow","getComputedStyle","isScrollable","scrollableContent","scrollHeight","offsetHeight","scrollWidth","offsetWidth","getOffsetsTo","source","bounds","top","left","height","width","rect","foundScrollContainer","contains","offsetTop","offsetLeft","scrollTop","scrollLeft","offsetParent","isChangeBar","v","SCROLL_INTO_VIEW_TOP_PADDING","scrollIntoView","field","parentElementWithScroll","parentElement","scroll","behavior","useResizeObserver","onResize","resizeObserver","observe","getState","allReportedValues","hovered","byId","rootElement","changeBarsWithHover","changeBarsWithFocus","reportedChangeBar","push","isHoverConnector","changeBars","connectors","map","_ref3","change","filter","isNonNullable","_ref4","ConnectorsOverlay","setHovered","Map","setState","visibleConnectors","sortBy","c","handleScrollOrResize","SvgWrapper","style","zIndex","_ref5","ConnectorGroup","onConnectorClick","handleMouseEnter","handleMouseLeave","from","to","jsxs","Fragment","Connector","DEBUG_LAYER_BOUNDS","EnabledChangeConnectorRoot","_ref6","className","isReviewChangesOpen","onOpenReviewChanges","restProps","setRootElement","contextValue","Provider","ScrollContainer","DisabledChangeConnectorRoot","_ref7","ChangeConnectorRoot","BetaBadge","fontSize","rest","Badge","radius","tone","Favicons","_ref8","basePath","base","replace","rel","href","sizes","errorHandlerScript","GlobalErrorHandler","dangerouslySetInnerHTML","__html","NoJsStyles","NoJavascript","globalStyles","EMPTY_ARRAY","DefaultDocument","entryPath","css","lang","charSet","content","src","defineConfig","config","createConfig","validatePlugin","pluginResult","messages","isString","Error","message","definePlugin","arg","pluginFactory","result","createPlugin","defineDocumentFieldAction","fieldAction","defineDocumentInspector","inspector","createMockAuthStore","_ref9","client","currentUser","state","of","authenticated","isEqual","item","otherItem","_key","every","child","i","obj","otherObj","keys","Object","otherKeys","keyName","ArrayOfOptionsFieldDiff","_ref10","diff","schemaType","_a","list","colorManager","useUserColorManager","t","useTranslation","items","normalizeItems","sort","sortItems","index","annotation","isPresent","memberType","title","color","getAnnotationColor","action","Flex","align","DiffTooltip","annotations","description","Checkbox","checked","Box","margin","FromToArrow","ItemPreview","getItemKey","parentDiff","fromValue","toValue","getValue","wasPresent","isInArray","getItemTitle","resolveMemberType","itemIndex","getOptionIndex","itemA","itemB","_ref11","marginX","marginY","Preview","layout","parent","array","some","itemTypeName","resolveTypeName","find","jsType","resolveJSType","_type","val","isNamedOption","findIndex","opt","SlugFieldDiff","_ref12","DiffFromTo","previewComponent","SlugPreview","UrlFieldDiff","_ref13","StringPreview","diffResolver","_ref14","DatetimeFieldDiff","jsonType","HoveredFieldProvider","hoveredStack","setHoveredStack","pathToString","prev","context","HoveredFieldContext","trimChildPath","childPath","trimLeft","PresenceScope","readOnly","contextPresence","FormFieldPresenceContext","childPresence","presence","createPatchChannel","_subscribers","publish","msg","subscriber","idx","splice","ArrayOfObjectsInputMember","member","renderAnnotation","renderBlock","renderField","renderInlineBlock","renderInput","renderItem","renderPreview","kind","ArrayOfObjectsItem","key","MemberItemError","console","warn","ArrayOfObjectsInputMembers","members","useReviewChanges","reviewChanges","ReviewChangesContext","defaultRenderAnnotation","createElement","defaultResolveAnnotationComponent","defaultRenderBlock","defaultResolveBlockComponent","defaultRenderInlineBlock","defaultResolveInlineBlockComponent","defaultRenderField","defaultResolveFieldComponent","defaultRenderInput","defaultResolveInputComponent","defaultRenderItem","defaultResolveItemComponent","defaultRenderPreview","DefaultCustomMarkers","Text","size","missingPatchChannel","FormBuilderProvider","__internal_fieldActions","fieldActions","__internal_patchChannel","patchChannel","autoFocus","changesOpen","collapsedFieldSets","collapsedPaths","file","filterField","focusPath","focused","groups","image","onChange","onFieldGroupSelect","onPathBlur","onPathFocus","onPathOpen","onSetFieldSetCollapsed","onSetPathCollapsed","unstable","validation","__internal","components","ArrayFunctions","ArrayOfObjectsFunctions","CustomMarkers","Markers","DefaultMarkers","actions","assetSources","directUploads","formBuilder","FormBuilderContext","FormCallbacksProvider","DocumentIdProvider","PresenceProvider","ValidationProvider","FormProvider","useSource","form","Input","useInputComponent","Field","useFieldComponent","usePreviewComponent","Item","useItemComponent","Block","useBlockComponent","InlineBlock","useInlineBlockComponent","Annotation","useAnnotationComponent","inputProps","fieldProps","itemProps","previewProps","PreviewLoader","component","blockProps","annotationProps","FormBuilder","handleCollapseField","fieldName","handleExpandField","handleBlur","handleFocus","handleChange","patch","PatchEvent","focusRef","handleSelectFieldGroup","groupName","handleOpenField","handleCloseField","handleCollapseFieldSet","fieldSetName","handleExpandFieldSet","rootInputProps","elementProps","onBlur","onFocus","changed","m","level","onFieldClose","onFieldCollapse","onFieldSetCollapse","onFieldExpand","onFieldSetExpand","onFieldOpen","GetFormValueProvider","FormValueProvider","DocumentFieldActionsProvider","remoteSnapshots","memoize","idPair","typeName","memoizedPair","pipe","switchMap","_ref15","published","draft","merge","remoteSnapshot$","memoizeKeyGen","maybeSerialize","template","isBuilder","serialize","prepareTemplates","schema","initialValueTemplates","serialized","validateTemplates","defaultTemplateForType","icon","initialValue","defaultTemplatesForSchema","schemaTypes","getTypeNames","test","LOADING_STATE","isLoaded","documentType","useDocumentType","documentId","specifiedType","arguments","undefined","documentStore","useDocumentStore","publishedId","getPublishedId","isResolved","SYNC_RESOLVED_STATE","resolvedState","setDocumentType","sub","resolveTypeForDocument","unsubscribe","useTimelineSelector","timelineStore","selector","useSyncExternalStoreWithSelector","getSnapshot","INITIAL_TIMELINE_STATE","chunks","hasMoreChunks","isLoading","isPristine","lastNonDeletedRevId","onOlderRevision","realRevChunk","revTime","selectionState","sinceAttributes","sinceTime","timelineDisplayed","timelineReady","useTimelineStore","_ref16","onError","rev","since","historyStore","useHistoryStore","snapshotsSubscriptionRef","timelineStateRef","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","controller","getTimelineController","timelineController$","BehaviorSubject","setRange","next","handler","err","innerController","error","setTimeout","resume","suspend","draftId","ev","handleRemoteMutation","findRangeForRev","chunk","findRangeForNewRev","findRangeForSince","findRangeForNewSince","loadMore","setLoadMore","subscription","tap","timeline","mapChunks","lastNonDeletedChunk","reachedEarliestEntry","currentObjectDiff","displayed","distinctUntilChanged","deepEquals","catchError","timelineState","useProject","projectStore","useProjectStore","setValue","project$","useProjectDatasets","getDatasets","resolveConfig","workspaces","prepareConfig","combineLatest","flatMap","workspaceSummary","sources","_ref17","unstable_sources","createWorkspaceFromConfig","getClient","apiVersion","workspace","firstValueFrom","auth","createSourceFromConfig","useConfigContextFromSource","projectId","dataset","i18n","getConfigContextFromSource","API_VERSION","AddonDatasetProvider","useWorkspace","originalClient","addonDatasetClient","setAddonDatasetClient","isCreatingDataset","setIsCreatingDataset","getAddonDatasetName","res","withConfig","request","uri","tag","handleCreateClient","addonDatasetName","requestTagPrefix","useCdn","withCredentials","handleCreateAddonDataset","_","method","datasetName","then","ctxValue","createAddonDataset","AddonDatasetContext","useAddonDataset","ctx","StudioLogo","padding","weight","_buildTints","bg","mid","fg","mix","_toHex","red","green","blue","parseToRgb","rgb","_isDark","getLuminance","_multiply","b","parseColor","s","hex","rgbToHex","multiply","_screen","screen","NEUTRAL_TONES","buildColor","legacyPalette","legacyTones","createColorTheme","_ref18","dark","navbar","stateTones","blend","tints","skeletonFrom","border","focusRing","focus","shadow","outline","rgba","umbra","black","penumbra","ambient","skeleton","solid","_ref19","buttonTones","button","blendInvert","defaultTints","isNeutral","muted","accent","link","code","critical","primary","_ref20","_ref21","mode","enabled","pressed","selected","disabled","card","_ref22","input","_ref23","bg2","placeholder","hues","gray","selectable","_ref24","spot","_ref25","syntax","_ref26","mainShade","secondaryShade","atrule","purple","attrName","positive","attrValue","caution","attribute","boolean","builtin","cdata","char","class","orange","cyan","comment","constant","deleted","doctype","entity","function","hexcode","important","inserted","keyword","magenta","number","operator","prolog","property","pseudoClass","pseudoElement","punctuation","regex","string","symbol","unit","url","variable","buildFonts","cssCustomProperties","defaults","studioTheme","fonts","family","heading","label","text","buildLegacyPalette","defaultButton","success","warning","danger","mainNavigation","info","buildLegacyTones","transparent","buildLegacyTheme","partialLegacyTheme","legacyTheme","resolveLegacyTheme","__dark","light","__legacy","defaultCustomProperties","white","yellow","Studio","onSchemeChange","scheme","unstable_globalStyles","unstable_history","unstable_noAuthBoundary","StudioProvider","GlobalStyle","StudioLayout","renderStudio","opts","reactStrictMode","root","createRoot","render","StrictMode","unmount","INITIAL","useConnectionState","publishedDocId","docTypeName","useMemoObservable","pair","documentEvents","eventType","isConnected","timer","mapTo","startWith","useDocumentOperationEvent","operationEvents","useEditState","priority","editState","share","take","skip","debounce","PERIODS","useFormattedDuration","durationMs","resolution","unitDisplay","locale","useCurrentLocale","listFormat","useListFormat","isNegative","duration","parseMilliseconds","Math","abs","formatters","days","intlCache","numberFormat","hours","minutes","seconds","milliseconds","parts","period","prefix","format","formatted","iso8601","durationToISO8601","trunc","dur","date","time","toFixed","useNumberFormat","currentLocale","SYNCING","isSyncing","NOT_SYNCING","useSyncState","consistencyStatus","isConsistent","useTimeAgo","useRelativeTime","minimal","useTemporalPhrase","agoSuffix","useTools","tools","INITIAL_STATE","data","loading","cachedSystemGroups","useUserListWithPermissions","documentValue","permission","userStore","useUserStore","list$","members$","isRobot","users$","ids","_ref27","users","getUsers","user","displayName","granted","cached","systemGroup$","observable","fetch","grants$","forkJoin","mergeMap","_ref28","grantPromises","grants","group","flattenedGrants","flat","grantsPermissionOn","usersWithPermission","Promise","all","$alphabetical","initial$","state$","isValidating","useValidationStatus","actionIds","WeakMap","counter","getHookId","actionHook","cachedId","set","requestIdleCallbackShim","start","Date","now","didTimeout","timeRemaining","max","cancelIdleCallbackShim","handle","clearTimeout","_requestIdleCallback","requestIdleCallback","_cancelIdleCallback","cancelIdleCallback","throttleOptions","trailing","GetHookCollectionState","hooks","args","onReset","statesRef","tickId","setTick","setKeys","ricHandle","handleRequestUpdate","tick","handleRequestUpdateThrottled","handleNext","hookState","handleReset","currentKeys","hookIds","hook","states","HookStateContainer","onNext","onRequestUpdate","Hotkeys","_ref29","makePlatformAware","hotKeys","platformifyKey","UIHotkeys","IS_APPLE_DEVICE","navigator","platform","lowerKey","toLowerCase","matchCase","original","orgLength","toUpperCase","IntentButton","Button","as","role","IntentLink","RelativeTime","_ref30","timestamp","timeAgo","dateTime","toISOString","WithReferringDocuments","_ref31","useReferringDocuments","ZIndexProvider","_ref32","ZIndexContext","TelephoneInput","validationError","TextInput","inputMode","customValidity","resolveConditionalProperty","document","setAtPath","currentTree","head","tail","isKeySegment","String","MAX_FIELD_DEPTH","AUTO_COLLAPSE_DEPTH","ALL_FIELDS_GROUP","hidden","getCollapsedWithDefaults","collapsible","collapsable","collapsed","getItemType","arrayType","getPrimitiveItemType","isFieldEnabledByGroupFilter","groupsConfig","fieldGroup","selectedGroup","castArray","isAcceptedObjectValue","isRecord","isValidArrayOfObjectsValue","isValidArrayOfPrimitivesValue","everyItemIsObject","findDuplicateKeyEntries","seenKeys","Set","reduce","acc","add","hasKey","everyItemHasKey","isChangedValue","comparisonValue","_isEqual","prepareFieldMember","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","fieldPath","pathFor","fieldLevel","getFieldLevel","parentValue","parentComparisonValue","normalizedFieldGroupNames","inSelectedGroup","isObjectSchemaType","fieldValue","fieldComparisonValue","expectedSchemaType","resolvedValueType","conditionalPropertyContext","fieldGroupState","scopedCollapsedPaths","scopedCollapsedFieldsets","inputState","prepareObjectInputState","openPath","defaultCollapsedState","open","isArraySchemaType","isArrayOfObjectsSchemaType","hasValue","duplicateKeyEntries","duplicates","scopedCollapsedFieldSets","fieldState","prepareArrayOfObjectsInputState","prepareArrayOfPrimitivesInputState","preparePrimitiveInputState","enableHiddenCheck","schemaTypeGroupConfig","defaultGroupName","g","groupHidden","isSelected","normalizedSchemaMembers","fieldsets","fields","single","fieldSet","fieldMember","fieldsetFieldNames","f","fieldsetHidden","pick","fieldsetReadOnly","fieldsetMembers","_inSelectedGroup","columns","hasFieldGroups","filteredPresence","visibleMembers","visibleGroups","hasVisibleMembers","fieldsetMember","filtereredMembers","filteredFieldsetMembers","node","defineProperty","enumerable","prepareArrayOfPrimitivesMember","arrayItem","prepareArrayOfObjectsMember","itemType","validTypes","itemPath","itemLevel","itemState","parentSchemaType","itemValue","itemComparisonValue","prepareFormState","useFormState","_ref33","useCurrentUser","useLayoutEffect","reconciled","immutableReconcile","isObjectFormNode","formNode","isArrayOfObjectsFormNode","hasAllMembers","_allMembers","getExpandOperations","p","getFieldsetAndFieldGroupOperations","getObjectFieldsetAndFieldGroupOperations","getArrayFieldsetAndFieldGroupOperations","schemaField","selectedGroupName","ops","isMemberArrayOfObjects","isMemberObject","segment","foundMember","IS_NUMERIC","unquote","str","splitAttr","attr","split","coerce","Number","parseGradientPath","focusPathStr","seg","encodePath","formBuilderPath","arrayToJSONMatchPath","decodePath","gradientPath","toMutationPatches","patches","toMutationPatch","fromMutationPatches","origin","flatten","toFormBuilderPatches","notIn","unset","position","insert","patchType","SANITY_PATCH_TYPE","matchPath","JSON","stringify"],"mappings":"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"}