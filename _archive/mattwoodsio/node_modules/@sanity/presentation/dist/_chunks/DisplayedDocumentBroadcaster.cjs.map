{"version":3,"file":"DisplayedDocumentBroadcaster.cjs","sources":["../../src/loader/DisplayedDocumentBroadcaster.tsx"],"sourcesContent":["/**\n * Report back up the document state being displayed in the document pane,\n * allowing Presentation Tool to patch the live queries with the same state.\n * This makes the Perspective switcher less confusing, as it applies to everything else on the page.\n * It's also why it's possible to select an older revision and see it in the preview,\n * effectively letting you preview a revert action you might be considering to perform.\n */\n\nimport isEqual from 'fast-deep-equal'\nimport {\n  createContext,\n  type PropsWithChildren,\n  useCallback,\n  useContext,\n  useEffect,\n} from 'react'\nimport { type SanityDocument } from 'sanity'\n\ntype SetDisplayedDocument = (\n  displayed: Partial<SanityDocument> | null | undefined,\n) => void\n\nconst Context = createContext<SetDisplayedDocument | null>(null)\n\nexport interface DisplayedDocumentBroadcasterProps extends PropsWithChildren {\n  setDisplayedDocument: React.Dispatch<\n    React.SetStateAction<Partial<SanityDocument> | null | undefined>\n  >\n  documentId: string | null | undefined\n}\n\nexport function DisplayedDocumentBroadcasterProvider(\n  props: DisplayedDocumentBroadcasterProps,\n): JSX.Element {\n  const { children, setDisplayedDocument, documentId } = props\n\n  const context = useCallback<SetDisplayedDocument>(\n    (next) =>\n      setDisplayedDocument((prev) => (isEqual(prev, next) ? prev : next)),\n    [setDisplayedDocument],\n  )\n\n  useEffect(() => {\n    // If no document is currently being displayed then reset the state\n    if (documentId) {\n      return\n    }\n    const timeout = setTimeout(() => setDisplayedDocument(null))\n    return () => clearTimeout(timeout)\n  }, [documentId, setDisplayedDocument])\n\n  return <Context.Provider value={context}>{children}</Context.Provider>\n}\n\nexport function useDisplayedDocumentBroadcaster(): SetDisplayedDocument | null {\n  return useContext(Context)\n}\n"],"names":["jsxRuntime","require","isEqual","react","_interopDefaultCompat","e","default","isEqual__default","Context","createContext","exports","D","props","children","setDisplayedDocument","documentId","context","useCallback","next","prev","useEffect","timeout","setTimeout","clearTimeout","jsx","Provider","value","u","useContext"],"mappings":"aAsBA,IAAAA,EAAAC,QAAA,qBAAAC,EAAAD,QAAA,mBAAAE,EAAAF,QAAA,SAAA,SAAAG,EAAAC,GAAA,OAAAA,GAAA,iBAAAA,GAAA,YAAAA,EAAAA,EAAA,CAAAC,QAAAD,EAAA,CAAA,IAAAE,IAAAL,GAAA,MAAMM,EAAUC,EAAAA,cAA2C,MAkC3DC,QAAAC,EAzBO,SACLC,GAEA,MAAMC,SAAEA,EAAUC,qBAAAA,EAAAC,WAAsBA,GAAeH,EAEjDI,EAAUC,EAAAA,aACbC,GACCJ,GAAsBK,GAAUjB,EAAAA,QAAQiB,EAAMD,GAAQC,EAAOD,KAC/D,CAACJ,IAGHM,OAAAA,EAAAA,WAAU,KAEJ,GAAAL,EACF,OAEF,MAAMM,EAAUC,YAAW,IAAMR,EAAqB,QAC/C,MAAA,IAAMS,aAAaF,EAAO,GAChC,CAACN,EAAYD,IAERU,EAAAA,IAAAhB,EAAQiB,SAAR,CAAiBC,MAAOV,EAAUH,YAC5C,EAIAH,QAAAiB,EAFO,WACEC,OAAAA,EAAAA,WAAWpB,EACpB"}