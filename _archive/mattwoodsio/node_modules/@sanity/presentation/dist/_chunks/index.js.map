{"version":3,"file":"index.js","sources":["../../src/constants.ts","../../src/PresentationContext.ts","../../src/useDocumentLocations.ts","../../src/document/LocationsBanner.tsx","../../src/document/PresentationDocumentContext.ts","../../src/document/PresentationDocumentHeader.tsx","../../src/document/PresentationDocumentProvider.tsx","../../src/fieldActions/openInStructure.ts","../../src/getIntentState.ts","../../src/router.ts","../../src/plugin.tsx","../../src/PresentationNavigateContext.ts","../../src/usePresentationNavigate.ts","../../src/PresentationParamsContext.ts","../../src/usePresentationParams.ts"],"sourcesContent":["import { ComposeIcon } from '@sanity/icons'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\n// @todo import from core sanity package\nexport const COMMENTS_INSPECTOR_NAME = 'sanity/structure/comments'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = '2023-10-16'\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// Batch size for fetching documents building up the cache\nexport const LIVE_QUERY_CACHE_BATCH_SIZE = 100\n\n// Total cache size for documents that are live queried\nexport const LIVE_QUERY_CACHE_SIZE = 2048\n","import { createContext } from 'react'\n\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n} from './types'\n\nexport interface PresentationContextValue {\n  deskParams: DeskDocumentPaneParams\n  devMode: boolean\n  name: string\n  navigate: PresentationNavigate\n  params: PresentationParams\n}\n\nexport const PresentationContext =\n  createContext<PresentationContextValue | null>(null)\n","import { useEffect, useState } from 'react'\nimport { isObservable, of } from 'rxjs'\nimport { useDocumentStore } from 'sanity'\n\nimport { DocumentLocationResolver, DocumentLocationsState } from './types'\n\nconst INITIAL_STATE: DocumentLocationsState = { locations: [] }\n\nexport function useDocumentLocations(props: {\n  id: string\n  locate?: DocumentLocationResolver\n  type: string\n}): DocumentLocationsState {\n  const { id, locate, type } = props\n  const documentStore = useDocumentStore()\n  const [state, setLocations] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  useEffect(() => {\n    if (!locate) return undefined\n\n    const params = { id, type }\n    const context = { documentStore }\n\n    const result = locate(params, context)\n    const locations$ = isObservable(result) ? result : of(result)\n\n    const sub = locations$.subscribe((d) => setLocations(d || INITIAL_STATE))\n\n    return () => sub.unsubscribe()\n  }, [documentStore, id, locate, type])\n\n  return state\n}\n","import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport { Box, Card, Flex, Stack, Text } from '@sanity/ui'\nimport {\n  ComponentType,\n  createElement,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from 'react'\nimport { ObjectSchemaType } from 'sanity'\nimport { useIntentLink } from 'sanity/router'\n\nimport { DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE } from '../constants'\nimport { PresentationContext } from '../PresentationContext'\nimport { DocumentLocation, PresentationPluginOptions } from '../types'\nimport { useDocumentLocations } from '../useDocumentLocations'\n\nconst LENGTH_FORMAT: Record<number, string> = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n}\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n}): ReactNode {\n  const { documentId, options, schemaType, showPresentationTitle } = props\n  const presentation = useContext(PresentationContext)\n\n  const { message, locations, tone } = useDocumentLocations({\n    id: documentId,\n    locate: options.locate,\n    type: schemaType.name,\n  })\n\n  const len = locations?.length || 0\n\n  const [expanded, setExpanded] = useState(false)\n\n  const toggle = useCallback(() => setExpanded((v) => !v), [])\n\n  const title =\n    message ||\n    (len ? (\n      <>\n        Used on {LENGTH_FORMAT[len] || len} {len === 1 ? <>page</> : <>pages</>}\n      </>\n    ) : null)\n\n  if (len === 0 && !title) {\n    return null\n  }\n\n  return (\n    <Card padding={1} radius={3} border tone={tone}>\n      <div style={{ margin: -1 }}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && (\n              <Box flex=\"none\">\n                <Text size={1}>{createElement(TONE_ICONS[tone])}</Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && (\n                  <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>\n                )}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n\n        {locations && (\n          <>\n            <Card\n              as=\"button\"\n              onClick={toggle}\n              padding={3}\n              radius={2}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <ChevronRightIcon\n                      style={{\n                        transform: `rotate(${expanded ? '90deg' : 0})`,\n                        transition: 'transform 100ms ease-in-out',\n                      }}\n                    />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && (\n                      <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>\n                    )}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l, index) => (\n                <LocationItem\n                  active={\n                    (options.name || DEFAULT_TOOL_NAME) ===\n                      presentation?.name &&\n                    l.href === presentation?.params.preview\n                  }\n                  documentId={documentId}\n                  documentType={schemaType.name}\n                  key={index}\n                  node={l}\n                  toolName={options.name || DEFAULT_TOOL_NAME}\n                />\n              ))}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const { documentId, documentType, node, active, toolName } = props\n  const presentation = useContext(PresentationContext)\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.deskParams,\n      preview: node.href,\n    },\n  })\n\n  const handleClick = useCallback(() => {\n    navigate?.({}, { preview: node.href })\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      {...(presentation ? {} : presentationLinkProps)}\n      as={presentation ? 'button' : 'a'}\n      key={node.href}\n      onClick={handleClick}\n      padding={3}\n      radius={2}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n","import { createContext } from 'react'\n\nimport { PresentationDocumentContextValue } from './types'\n\nexport const PresentationDocumentContext =\n  createContext<PresentationDocumentContextValue | null>(null)\n","import { rem, Stack } from '@sanity/ui'\nimport { type ReactNode, useContext } from 'react'\nimport { type ObjectSchemaType, type PublishedId } from 'sanity'\nimport styled from 'styled-components'\n\nimport type { PresentationPluginOptions } from '../types'\nimport { LocationsBanner } from './LocationsBanner'\nimport { PresentationDocumentContext } from './PresentationDocumentContext'\n\nconst LocationStack = styled(Stack)`\n  min-height: ${rem(42)};\n\n  & + &:empty {\n    display: none;\n  }\n`\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const { documentId, options, schemaType } = props\n\n  const context = useContext(PresentationDocumentContext)\n\n  if (context && context.options[0] !== options) {\n    return <LocationStack marginBottom={5} space={5} />\n  }\n\n  const len = context?.options?.length || 0\n\n  return (\n    <LocationStack marginBottom={5} space={5}>\n      <Stack space={2}>\n        {context?.options.map((o, idx) => (\n          <LocationsBanner\n            documentId={documentId}\n            key={idx}\n            options={o}\n            schemaType={schemaType}\n            showPresentationTitle={len > 1}\n          />\n        ))}\n      </Stack>\n    </LocationStack>\n  )\n}\n","import {\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport { PresentationPluginOptions } from '../types'\nimport { PresentationDocumentContext } from './PresentationDocumentContext'\nimport { PresentationDocumentContextValue } from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): ReactElement {\n  const { children, options } = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(\n    () => [],\n  )\n\n  const register = useCallback(\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const registerRef = useRef(register)\n  registerRef.current = register\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  useEffect(() => registerRef.current(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n","import { MasterDetailIcon } from '@sanity/icons'\nimport { useContext, useMemo } from 'react'\nimport {\n  defineDocumentFieldAction,\n  DocumentFieldActionItem,\n  isRecord,\n  pathToString,\n  Tool,\n  useWorkspace,\n} from 'sanity'\nimport { useRouter } from 'sanity/router'\n\nimport { PresentationContext } from '../PresentationContext'\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction({ documentId, documentType, path }) {\n    const workspace = useWorkspace()\n    const { navigateIntent } = useRouter()\n    const presentation = useContext(PresentationContext)\n\n    const defaultStructureTool = useMemo(\n      () => findStructureTool(workspace.tools, documentId, documentType),\n      [documentId, documentType, workspace.tools],\n    )\n\n    return {\n      type: 'action',\n      hidden: !presentation || path.length > 0 || !defaultStructureTool,\n      icon: defaultStructureTool?.icon || MasterDetailIcon,\n      title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n      onAction() {\n        navigateIntent('edit', {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n          path: pathToString(path),\n        })\n      },\n      renderAsButton: true,\n    } satisfies DocumentFieldActionItem\n  },\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n): Tool | undefined {\n  const results = tools.map((t) => {\n    const match = t.canHandleIntent?.(\n      'edit',\n      {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n      },\n      {},\n    )\n\n    return { tool: t, match }\n  })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match.mode)\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n","import { uuid } from '@sanity/uuid'\nimport { getPublishedId } from 'sanity'\nimport { encodeJsonParams, SearchParam } from 'sanity/router'\n\nimport { PresentationStateParams } from './types'\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  _routerState: undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & { _searchParams: SearchParam[] })\n  | { intent: string; params: Record<string, string>; payload: unknown } {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { id, mode, path, presentation, type, ...searchParams } = params\n\n  if (intent === 'edit' && id) {\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(searchParams),\n    }\n  }\n\n  if (intent === 'create') {\n    searchParams.preview =\n      searchParams.preview ||\n      new URLSearchParams(window.location.search).get('preview') ||\n      '/'\n\n    if (payload && typeof payload === 'object') {\n      searchParams.templateParams = encodeJsonParams(\n        payload as Record<string, unknown>,\n      )\n    }\n\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(searchParams),\n    }\n  }\n  return { intent, params, payload }\n}\n","import { route } from 'sanity/router'\n\nexport const router = route.create(\n  '/',\n  { __unsafe_disableScopedSearchParams: true },\n  [\n    route.intents('/intent'),\n    route.create(':type', [route.create(':id', [route.create(':path')])]),\n  ],\n)\n","import type { SanityDocument } from '@sanity/client'\nimport { lazy, Suspense } from 'react'\nimport {\n  definePlugin,\n  getPublishedId,\n  InputProps,\n  isDocumentSchemaType,\n} from 'sanity'\n\nimport {\n  DEFAULT_TOOL_ICON,\n  DEFAULT_TOOL_NAME,\n  EDIT_INTENT_MODE,\n} from './constants'\nimport { PresentationDocumentHeader } from './document/PresentationDocumentHeader'\nimport { PresentationDocumentProvider } from './document/PresentationDocumentProvider'\nimport { openInStructure } from './fieldActions/openInStructure'\nimport { getIntentState } from './getIntentState'\nimport { router } from './router'\nimport { PresentationPluginOptions } from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationTool'))\nconst BroadcastDisplayedDocument = lazy(\n  () => import('./loader/BroadcastDisplayedDocument'),\n)\n\nexport const presentationTool = definePlugin<PresentationPluginOptions>(\n  (options) => {\n    const toolName = options.name || DEFAULT_TOOL_NAME\n\n    function PresentationDocumentInput(props: InputProps) {\n      const value = props.value as SanityDocument\n      const documentId = value?._id ? getPublishedId(value?._id) : undefined\n\n      if (isDocumentSchemaType(props.schemaType)) {\n        return (\n          <PresentationDocumentProvider options={options}>\n            {options.locate && documentId && (\n              <PresentationDocumentHeader\n                documentId={documentId}\n                options={options}\n                schemaType={props.schemaType}\n              />\n            )}\n            {props.renderDefault(props)}\n            <Suspense key=\"broadcast-displayed-document\">\n              <BroadcastDisplayedDocument value={value} />\n            </Suspense>\n          </PresentationDocumentProvider>\n        )\n      }\n\n      return props.renderDefault(props)\n    }\n\n    function canHandleCreateIntent(params: Record<string, unknown>) {\n      // We can't handle create intents without a `type` parameter\n      if (!('type' in params)) {\n        return false\n      }\n\n      if ('presentation' in params && params.presentation !== toolName) {\n        return false\n      }\n\n      return 'template' in params ? { template: true } : true\n    }\n\n    function canHandleEditIntent(params: Record<string, unknown>) {\n      // We can't handle edit intents without `type` or `id` parameters\n      if (!('type' in params) || !('id' in params)) {\n        return false\n      }\n\n      if ('presentation' in params && params.presentation !== toolName) {\n        return false\n      }\n\n      return 'mode' in params\n        ? { mode: params.mode === EDIT_INTENT_MODE }\n        : true\n    }\n\n    return {\n      document: {\n        unstable_fieldActions: (prev) => {\n          return [\n            ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n            openInStructure,\n          ]\n        },\n      },\n\n      form: {\n        components: {\n          input: PresentationDocumentInput,\n        },\n      },\n\n      tools: [\n        {\n          icon: options.icon || DEFAULT_TOOL_ICON,\n          name: toolName,\n          title: options.title,\n          component: PresentationTool,\n          options,\n          canHandleIntent(intent, params) {\n            if (intent === 'create') return canHandleCreateIntent(params)\n            if (intent === 'edit') return canHandleEditIntent(params)\n            return false\n          },\n          getIntentState,\n          router,\n        },\n      ],\n    }\n  },\n)\n","import { createContext } from 'react'\n\nexport type PresentationNavigateContextValue = (\n  preview: string | undefined,\n  document?: { type: string; id: string },\n) => void\n\nexport const PresentationNavigateContext =\n  createContext<PresentationNavigateContextValue | null>(null)\n","import { useContext } from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\n\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type { PresentationNavigateContextValue }\n","import { createContext } from 'react'\n\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsContext =\n  createContext<PresentationParams | null>(null)\n","import { useContext } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport function usePresentationParams(): PresentationParams {\n  const params = useContext(PresentationParamsContext)\n\n  if (!params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n"],"names":["jsx","jsxs","Fragment","createContext","useState","useEffect","useContext","useCallback","createElement","useRef","useMemo","lazy","Suspense","useDocumentStore","defineDocumentFieldAction","useWorkspace","pathToString","isRecord","getPublishedId","definePlugin","isDocumentSchemaType","ComposeIcon","ChevronRightIcon","DesktopIcon","InfoOutlineIcon","WarningOutlineIcon","ErrorOutlineIcon","MasterDetailIcon","Card","Flex","Box","Text","Stack","rem","styled","useIntentLink","useRouter","encodeJsonParams","route","isObservable","of","uuid","DEFAULT_TOOL_ICON","DEFAULT_TOOL_NAME","DEFAULT_TOOL_TITLE","COMMENTS_INSPECTOR_NAME","EDIT_INTENT_MODE","MAX_TIME_TO_OVERLAYS_CONNECTION","API_VERSION","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","LIVE_QUERY_CACHE_BATCH_SIZE","LIVE_QUERY_CACHE_SIZE","PresentationContext","INITIAL_STATE","locations","LENGTH_FORMAT","TONE_ICONS","positive","caution","critical","LocationsBanner","props","documentId","options","schemaType","showPresentationTitle","presentation","message","tone","id","locate","type","documentStore","state","setLocations","result","sub","subscribe","d","unsubscribe","useDocumentLocations","name","len","length","expanded","setExpanded","toggle","v","title","children","padding","radius","border","style","margin","align","gap","flex","size","weight","as","onClick","transform","transition","hidden","marginTop","space","map","l","index","LocationItem","active","href","params","preview","documentType","node","toolName","navigate","presentationLinkProps","intent","mode","deskParams","handleClick","key","pressed","muted","textOverflow","PresentationDocumentContext","LocationStack","PresentationDocumentHeader","_a","context","marginBottom","o","idx","PresentationDocumentProvider","parent","parentRegister","register","optionsArray","setOptionsArray","prev","concat","filter","registerRef","current","Provider","value","openInStructure","useAction","path","workspace","navigateIntent","defaultStructureTool","tools","results","t","tool","match","canHandleIntent","call","modeMatches","findStructureTool","icon","onAction","renderAsButton","getIntentState","_routerState","payload","searchParams","_searchParams","Object","entries","URLSearchParams","window","location","search","get","templateParams","router","create","__unsafe_disableScopedSearchParams","intents","PresentationTool","import","BroadcastDisplayedDocument","presentationTool","document","unstable_fieldActions","a","form","components","input","_id","renderDefault","component","template","canHandleCreateIntent","canHandleEditIntent","PresentationNavigateContext","usePresentationNavigate","Error","PresentationParamsContext","usePresentationParams"],"mappings":"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"}