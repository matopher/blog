import { S as SanityClient, e as ObservableSanityClient, d as defineCreateClientExports, m as middleware } from "./_chunks/nodeMiddleware.js";
import { B, b, C, O, c, P, a, T, v } from "./_chunks/nodeMiddleware.js";
import { adapter, environment } from "get-it";
import { e, s } from "./_chunks/stegaEncodeSourceMap.js";
class SanityStegaClient extends SanityClient {
}
class ObservableSanityStegaClient extends ObservableSanityClient {
}
const exp = defineCreateClientExports(middleware, SanityClient), requester = exp.requester, createClient = exp.createClient;
export {
  B as BasePatch,
  b as BaseTransaction,
  C as ClientError,
  O as ObservablePatch,
  ObservableSanityClient,
  ObservableSanityStegaClient,
  c as ObservableTransaction,
  P as Patch,
  SanityClient,
  SanityStegaClient,
  a as ServerError,
  T as Transaction,
  createClient,
  e as encodeIntoResult,
  requester,
  s as stegaEncodeSourceMap,
  adapter as unstable__adapter,
  environment as unstable__environment,
  v as vercelStegaCleanAll
};
//# sourceMappingURL=stega.js.map
