{"version":3,"file":"resolve-BRccvP_d.js","sources":["../../src/legacy/searchConfig/resolve.ts"],"sourcesContent":["import {isFinite, uniqBy} from 'lodash'\n\nexport const DEFAULT_MAX_FIELD_DEPTH = 5\n\nconst stringFieldsSymbols = {}\n\nconst getStringFieldSymbol = (maxDepth: number) => {\n  if (!stringFieldsSymbols[maxDepth]) {\n    stringFieldsSymbols[maxDepth] = Symbol(`__cachedStringFields_${maxDepth}`)\n  }\n\n  return stringFieldsSymbols[maxDepth]\n}\n\nconst isReference = (type) => type.type && type.type.name === 'reference'\n\nconst portableTextFields = ['style', 'list']\nconst isPortableTextBlock = (type) =>\n  type.name === 'block' || (type.type && isPortableTextBlock(type.type))\nconst isPortableTextArray = (type) =>\n  type.jsonType === 'array' && Array.isArray(type.of) && type.of.some(isPortableTextBlock)\n\nfunction reduceType(type, reducer, acc, path = [], maxDepth) {\n  if (maxDepth < 0) {\n    return acc\n  }\n\n  const accumulator = reducer(acc, type, path)\n  if (type.jsonType === 'array' && Array.isArray(type.of)) {\n    return reduceArray(type, reducer, accumulator, path, maxDepth)\n  }\n\n  if (type.jsonType === 'object' && Array.isArray(type.fields) && !isReference(type)) {\n    return reduceObject(type, reducer, accumulator, path, maxDepth)\n  }\n\n  return accumulator\n}\n\nfunction reduceArray(arrayType, reducer, accumulator, path, maxDepth) {\n  return arrayType.of.reduce(\n    (acc, ofType) => reduceType(ofType, reducer, acc, path, maxDepth - 1),\n    accumulator,\n  )\n}\n\nfunction reduceObject(objectType, reducer, accumulator, path, maxDepth) {\n  const isPtBlock = isPortableTextBlock(objectType)\n  return objectType.fields.reduce((acc, field) => {\n    // Don't include styles and list types as searchable paths for portable text blocks\n    if (isPtBlock && portableTextFields.includes(field.name)) {\n      return acc\n    }\n\n    const segment = [field.name].concat(field.type.jsonType === 'array' ? [[]] : [])\n    return reduceType(field.type, reducer, acc, path.concat(segment), maxDepth - 1)\n  }, accumulator)\n}\n\nconst BASE_WEIGHTS = [\n  {weight: 1, path: ['_id']},\n  {weight: 1, path: ['_type']},\n]\n\nconst PREVIEW_FIELD_WEIGHT_MAP = {\n  title: 10,\n  subtitle: 5,\n  description: 1.5,\n}\n\n/**\n * @internal\n */\nexport function deriveFromPreview(\n  type: {\n    preview: {select: Record<string, string>}\n  },\n  maxDepth: number,\n): {weight?: number; path: (string | number)[]}[] {\n  const select = type?.preview?.select\n\n  if (!select) {\n    return []\n  }\n\n  const fields: {weight: number; path: (string | number)[]}[] = []\n\n  for (const fieldName of Object.keys(select)) {\n    if (!(fieldName in PREVIEW_FIELD_WEIGHT_MAP)) {\n      continue\n    }\n\n    const path = select[fieldName].split('.')\n\n    if (maxDepth > -1 && path.length - 1 > maxDepth) {\n      continue\n    }\n\n    fields.push({\n      weight: PREVIEW_FIELD_WEIGHT_MAP[fieldName],\n      path,\n    })\n  }\n\n  return fields\n}\n\nfunction getCachedStringFieldPaths(type, maxDepth: number) {\n  const symbol = getStringFieldSymbol(maxDepth)\n  if (!type[symbol]) {\n    type[symbol] = uniqBy(\n      [\n        ...BASE_WEIGHTS,\n        ...deriveFromPreview(type, maxDepth),\n        ...getStringFieldPaths(type, maxDepth).map((path) => ({weight: 1, path})),\n        ...getPortableTextFieldPaths(type, maxDepth).map((path) => ({\n          weight: 1,\n          path,\n          mapWith: 'pt::text',\n        })),\n      ],\n      (spec) => spec.path.join('.'),\n    )\n  }\n  return type[symbol]\n}\n\nfunction getCachedBaseFieldPaths(type, maxDepth: number) {\n  const symbol = getStringFieldSymbol(maxDepth)\n  if (!type[symbol]) {\n    type[symbol] = uniqBy([...BASE_WEIGHTS, ...deriveFromPreview(type, maxDepth)], (spec) =>\n      spec.path.join('.'),\n    )\n  }\n  return type[symbol]\n}\n\nfunction getStringFieldPaths(type, maxDepth: number) {\n  const reducer = (accumulator, childType, path) =>\n    childType.jsonType === 'string' ? [...accumulator, path] : accumulator\n\n  return reduceType(type, reducer, [], [], maxDepth)\n}\n\nfunction getPortableTextFieldPaths(type, maxDepth) {\n  const reducer = (accumulator, childType, path) =>\n    isPortableTextArray(childType) ? [...accumulator, path] : accumulator\n\n  return reduceType(type, reducer, [], [], maxDepth)\n}\n\nexport function resolveSearchConfigForBaseFieldPaths(type, maxDepth?: number) {\n  return getCachedBaseFieldPaths(type, normalizeMaxDepth(maxDepth))\n}\n\n/**\n * @internal\n */\nexport function resolveSearchConfig(type, maxDepth?: number) {\n  return getCachedStringFieldPaths(type, normalizeMaxDepth(maxDepth))\n}\n\n/**\n * Normalizes a one-indexed maxDepth to a zero-indexed maxDepth\n * 0 = all fields\n *\n * @internal\n */\nfunction normalizeMaxDepth(maxDepth?: number) {\n  if (!isFinite(maxDepth) || maxDepth < 1 || maxDepth > DEFAULT_MAX_FIELD_DEPTH) {\n    return DEFAULT_MAX_FIELD_DEPTH - 1\n  }\n\n  return maxDepth - 1\n}\n"],"names":["DEFAULT_MAX_FIELD_DEPTH","stringFieldsSymbols","getStringFieldSymbol","maxDepth","Symbol","concat","isReference","type","name","portableTextFields","isPortableTextBlock","isPortableTextArray","jsonType","Array","isArray","of","some","reduceType","reducer","acc","path","arguments","length","undefined","accumulator","reduceArray","fields","reduceObject","arrayType","reduce","ofType","objectType","isPtBlock","field","includes","segment","BASE_WEIGHTS","weight","PREVIEW_FIELD_WEIGHT_MAP","title","subtitle","description","deriveFromPreview","_a","select","preview","fieldName","Object","keys","split","push","getCachedStringFieldPaths","symbol","uniqBy","default","getStringFieldPaths","map","getPortableTextFieldPaths","mapWith","spec","join","getCachedBaseFieldPaths","childType","resolveSearchConfigForBaseFieldPaths","normalizeMaxDepth","resolveSearchConfig","isFinite"],"mappings":"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"}