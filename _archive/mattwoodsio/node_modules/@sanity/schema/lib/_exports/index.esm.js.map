{"version":3,"file":"index.esm.js","sources":["../../src/legacy/types/constants.ts","../../src/legacy/types/any.ts","../../src/legacy/types/utils.ts","../../src/legacy/types/array.ts","../../src/legacy/preview/deprecationUtils.ts","../../src/legacy/preview/JSONStringifyHuman.ts","../../src/legacy/preview/fallbackPrepare.ts","../../src/legacy/preview/portableText.ts","../../src/legacy/preview/guessPreviewConfig.ts","../../src/legacy/preview/createPreviewGetter.ts","../../src/legacy/types/blocks/defaults.ts","../../src/legacy/types/blocks/block.ts","../../src/legacy/types/blocks/span.ts","../../src/legacy/preview/primitivePreview.ts","../../src/legacy/types/boolean.ts","../../src/legacy/types/crossDatasetReference.ts","../../src/legacy/types/date.ts","../../src/legacy/types/datetime.ts","../../src/legacy/ordering/guessOrderingConfig.ts","../../src/legacy/searchConfig/normalize.ts","../../src/legacy/types/object.ts","../../src/legacy/types/document.ts","../../src/legacy/types/email.ts","../../src/legacy/types/file.ts","../../src/legacy/types/image/fieldDefs.ts","../../src/legacy/types/image.ts","../../src/legacy/types/number.ts","../../src/legacy/types/reference.ts","../../src/legacy/types/string.ts","../../src/legacy/types/text.ts","../../src/legacy/types/url.ts","../../src/legacy/Schema.ts","../../src/_exports/index.ts"],"sourcesContent":["export const DEFAULT_OVERRIDEABLE_FIELDS = [\n  'jsonType',\n  'type',\n  'name',\n  'title',\n  'description',\n  'options',\n  'fieldsets',\n  'validation',\n  'readOnly',\n  'hidden',\n  'components',\n  'diffComponent',\n  'initialValue',\n  'deprecated',\n]\n","import {omit, pick} from 'lodash'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ANY_CORE = {\n  name: 'any',\n  type: null,\n  jsonType: 'any',\n}\n\nexport const AnyType = {\n  get() {\n    return ANY_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const parsed = Object.assign(pick(ANY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ANY_CORE,\n      of: subTypeDef.of.map((fieldDef) => {\n        return {\n          name: fieldDef.name,\n          type: extendMember(omit(fieldDef, 'name')),\n        }\n      }),\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","interface Config {\n  enumerable?: boolean\n  writable?: boolean\n}\nexport function lazyGetter(target, key, getter, config: Config = {}) {\n  Object.defineProperty(target, key, {\n    configurable: true,\n    enumerable: config.enumerable !== false,\n    get() {\n      const val = getter()\n      Object.defineProperty(target, key, {\n        value: val,\n        writable: Boolean(config.writable),\n        configurable: false,\n      })\n      return val\n    },\n  })\n  return target\n}\n\n//\n// const o = lazyGetter({}, 'expensive', function() {\n//   console.log('doing expensive calculations')\n//   return 'RESULT OF EXPENSIVE'\n// })\n//\n// console.log(o.expensive)\n// console.log(o.expensive)\n// console.log(o.expensive)\n","import {pick} from 'lodash'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {lazyGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ARRAY_CORE = {\n  name: 'array',\n  type: null,\n  jsonType: 'array',\n  of: [],\n}\n\nexport const ArrayType = {\n  get() {\n    return ARRAY_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    const parsed = Object.assign(pick(ARRAY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ARRAY_CORE,\n    })\n    lazyGetter(parsed, 'of', () => {\n      return subTypeDef.of.map((ofTypeDef) => {\n        return createMemberType(ofTypeDef)\n      })\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export function warnIfPreviewOnOptions(type) {\n  if (type.options && type.options.preview) {\n    // eslint-disable-next-line no-console\n    console.warn(`Heads up! The preview config is no longer defined on \"options\", but instead on the type/field itself.\nPlease move {options: {preview: ...}} to {..., preview: ...} on the type/field definition of \"${type.name}\".\n`)\n  }\n}\n\nexport function warnIfPreviewHasFields(type) {\n  const preview = type.preview || (type.options || {}).preview\n  if (preview && 'fields' in preview) {\n    // eslint-disable-next-line no-console\n    console.warn(`Heads up! \"preview.fields\" should be renamed to \"preview.select\". Please update the preview config for \"${type.name}\".\n`)\n  }\n}\n","import {pick} from 'lodash'\n\nfunction isEmpty(object) {\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction _stringify(value, options, depth) {\n  if (depth > options.maxDepth) {\n    return '...'\n  }\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return '[empty]'\n    }\n    const capLength = Math.max(value.length - options.maxBreadth)\n    const asString = value\n      .slice(0, options.maxBreadth)\n      .map((item, index) => _stringify(item, options, depth + 1))\n      .concat(capLength > 0 ? `â€¦+${capLength}` : [])\n      .join(', ')\n\n    return depth === 0 ? asString : `[${asString}]`\n  }\n  if (typeof value === 'object' && value !== null) {\n    const keys = Object.keys(value).filter(\n      (key) => !options.ignoreKeys.includes(key) && typeof value[key] !== 'undefined',\n    )\n\n    if (isEmpty(pick(value, keys))) {\n      return '{empty}'\n    }\n\n    const asString = keys\n      .slice(0, options.maxBreadth)\n      .map((key) => `${key}: ${_stringify(value[key], options, depth + 1)}`)\n      .join(', ')\n\n    return depth === 0 ? asString : `{${asString}}`\n  }\n  const asString = String(value)\n  return asString === '' ? '\"\"' : asString\n}\n\nexport default function stringify(\n  value,\n  options: {maxDepth?: number; maxBreadth?: number; ignoreKeys?: string[]} = {},\n) {\n  const opts = {\n    maxDepth: 'maxDepth' in options ? options.maxDepth : 2,\n    maxBreadth: 'maxBreadth' in options ? options.maxBreadth : 2,\n    ignoreKeys: 'ignoreKeys' in options ? options.ignoreKeys : [],\n  }\n  return _stringify(value, opts, 0)\n}\n","import {pick} from 'lodash'\n\nimport stringify from './JSONStringifyHuman'\n\nconst OPTIONS = {\n  maxEntries: 2,\n  maxDepth: 2,\n  maxBreadth: 2,\n  ignoreKeys: ['_id', '_type', '_key', '_ref'],\n}\n\nexport function createFallbackPrepare(fieldNames) {\n  return (value) => ({\n    title: stringify(pick(value, fieldNames), OPTIONS),\n  })\n}\n","type FieldDef = {\n  type: string\n  name: string\n  of?: {type: string}[]\n}\n\nexport function isBlockField(field: FieldDef): boolean {\n  return field.type === 'array' && field.of && field.of.some((member) => member.type === 'block')\n}\n","import arrify from 'arrify'\nimport {isUndefined, omitBy} from 'lodash'\n\nimport {createFallbackPrepare} from './fallbackPrepare'\nimport {isBlockField} from './portableText'\n\nconst TITLE_CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption']\nconst DESCRIPTION_CANDIDATES = ['description', ...TITLE_CANDIDATES]\n\nfunction fieldHasReferenceTo(fieldDef, refType) {\n  return arrify(fieldDef.to || []).some((memberTypeDef) => memberTypeDef.type === refType)\n}\n\nfunction isImageAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.imageAsset')\n}\n\nfunction resolveImageAssetPath(typeDef) {\n  const fields = typeDef.fields || []\n  const imageAssetField = fields.find(isImageAssetField)\n  if (imageAssetField) {\n    return imageAssetField.name\n  }\n  const fieldWithImageAsset = fields.find((fieldDef) =>\n    (fieldDef.fields || []).some(isImageAssetField),\n  )\n\n  return fieldWithImageAsset ? `${fieldWithImageAsset.name}.asset` : undefined\n}\n\nfunction isFileAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.fileAsset')\n}\n\nfunction resolveFileAssetPath(typeDef) {\n  const fields = typeDef.fields || []\n  const assetField = fields.find(isFileAssetField)\n  if (assetField) {\n    return assetField.name\n  }\n  const fieldWithFileAsset = fields.find((fieldDef) =>\n    (fieldDef.fields || []).some(isFileAssetField),\n  )\n  return fieldWithFileAsset ? `${fieldWithFileAsset.name}.asset` : undefined\n}\n\nexport default function guessPreviewFields(rawObjectTypeDef) {\n  const objectTypeDef = {fields: [], ...rawObjectTypeDef}\n\n  const stringFieldNames = objectTypeDef.fields\n    .filter((field) => field.type === 'string')\n    .map((field) => field.name)\n\n  const blockFieldNames = objectTypeDef.fields.filter(isBlockField).map((field) => field.name)\n\n  // Check if we have fields with names that is listed in candidate fields\n  let titleField = TITLE_CANDIDATES.find(\n    (candidate) => stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate),\n  )\n\n  let descField = DESCRIPTION_CANDIDATES.find(\n    (candidate) =>\n      candidate !== titleField &&\n      (stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate)),\n  )\n\n  if (!titleField) {\n    // Pick first defined string field\n    titleField = stringFieldNames[0] || blockFieldNames[0]\n    // Pick next as desc\n    descField = stringFieldNames[1] || blockFieldNames[1]\n  }\n\n  const mediaField = objectTypeDef.fields.find((field) => field.type === 'image')\n\n  const imageAssetPath = resolveImageAssetPath(objectTypeDef)\n\n  if (!titleField) {\n    const fileAssetPath = resolveFileAssetPath(objectTypeDef)\n    if (fileAssetPath) {\n      titleField = `${fileAssetPath}.originalFilename`\n    }\n    if (imageAssetPath) {\n      titleField = `${imageAssetPath}.originalFilename`\n    }\n  }\n\n  if (!titleField && !imageAssetPath) {\n    // last resort, pick all fields and concat them\n    const fieldNames = objectTypeDef.fields.map((field) => field.name)\n    const fieldMapping = fieldNames.reduce((acc, fieldName) => {\n      acc[fieldName] = fieldName\n      return acc\n    }, {})\n\n    return {\n      select: fieldMapping,\n      prepare: createFallbackPrepare(fieldNames),\n    }\n  }\n\n  const select = omitBy(\n    {\n      title: titleField,\n      description: descField,\n      media: mediaField ? mediaField.name : imageAssetPath,\n    },\n    isUndefined,\n  )\n\n  return {\n    select: select,\n  }\n}\n","import {pick} from 'lodash'\n\nimport {warnIfPreviewHasFields, warnIfPreviewOnOptions} from './deprecationUtils'\nimport guessPreviewConfig from './guessPreviewConfig'\n\nfunction parseSelection(selection) {\n  return selection.reduce((acc, field) => {\n    acc[field] = field\n    return acc\n  }, {})\n}\n\nfunction parsePreview(preview) {\n  if (!preview) {\n    return preview\n  }\n  const select = preview.select || preview.fields || {}\n  if (Array.isArray(select)) {\n    return {\n      ...pick(preview, ['prepare', 'component']),\n      select: parseSelection(select),\n    }\n  }\n  return {\n    ...pick(preview, ['prepare', 'component']),\n    select,\n  }\n}\n\nexport default function createPreviewGetter(objectTypeDef) {\n  return function previewGetter() {\n    warnIfPreviewOnOptions(objectTypeDef)\n    warnIfPreviewHasFields(objectTypeDef)\n    const preview = parsePreview(objectTypeDef.preview || (objectTypeDef.options || {}).preview)\n    return preview || guessPreviewConfig(objectTypeDef)\n  }\n}\n","export const DEFAULT_LINK_ANNOTATION = {\n  type: 'object',\n  name: 'link',\n  title: 'Link',\n  i18nTitleKey: 'inputs.portable-text.annotation.link',\n  options: {\n    modal: {type: 'popover'},\n  },\n  fields: [\n    {\n      name: 'href',\n      type: 'url',\n      title: 'Link',\n      description: 'A valid web, email, phone, or relative link.',\n      validation: (Rule) =>\n        Rule.uri({\n          scheme: ['http', 'https', 'tel', 'mailto'],\n          allowRelative: true,\n        }),\n    },\n  ],\n}\n\nexport const DEFAULT_TEXT_FIELD = {\n  type: 'text',\n  name: 'text',\n  title: 'Text',\n}\n\nexport const DEFAULT_MARKS_FIELD = {\n  name: 'marks',\n  type: 'array',\n  of: [{type: 'string'}],\n  title: 'Marks',\n}\n\nexport const LIST_TYPES = {\n  bullet: {\n    title: 'Bulleted list',\n    value: 'bullet',\n    i18nTitleKey: 'inputs.portable-text.list-type.bullet',\n  },\n  numbered: {\n    title: 'Numbered list',\n    value: 'number',\n    i18nTitleKey: 'inputs.portable-text.list-type.number',\n  },\n}\n\nexport const DEFAULT_LIST_TYPES = [LIST_TYPES.bullet, LIST_TYPES.numbered]\n\nexport const BLOCK_STYLES = {\n  normal: {title: 'Normal', value: 'normal', i18nTitleKey: 'inputs.portable-text.style.normal'},\n  h1: {title: 'Heading 1', value: 'h1', i18nTitleKey: 'inputs.portable-text.style.h1'},\n  h2: {title: 'Heading 2', value: 'h2', i18nTitleKey: 'inputs.portable-text.style.h2'},\n  h3: {title: 'Heading 3', value: 'h3', i18nTitleKey: 'inputs.portable-text.style.h3'},\n  h4: {title: 'Heading 4', value: 'h4', i18nTitleKey: 'inputs.portable-text.style.h4'},\n  h5: {title: 'Heading 5', value: 'h5', i18nTitleKey: 'inputs.portable-text.style.h5'},\n  h6: {title: 'Heading 6', value: 'h6', i18nTitleKey: 'inputs.portable-text.style.h6'},\n  blockquote: {\n    title: 'Quote',\n    value: 'blockquote',\n    i18nTitleKey: 'inputs.portable-text.style.quote',\n  },\n}\n\nexport const DEFAULT_BLOCK_STYLES = [\n  BLOCK_STYLES.normal,\n  BLOCK_STYLES.h1,\n  BLOCK_STYLES.h2,\n  BLOCK_STYLES.h3,\n  BLOCK_STYLES.h4,\n  BLOCK_STYLES.h5,\n  BLOCK_STYLES.h6,\n  BLOCK_STYLES.blockquote,\n]\n\nexport const DECORATOR_STRONG = {\n  title: 'Strong',\n  value: 'strong',\n  i18nTitleKey: 'inputs.portable-text.decorator.strong',\n}\nexport const DECORATOR_EMPHASIS = {\n  title: 'Italic',\n  value: 'em',\n  i18nTitleKey: 'inputs.portable-text.decorator.emphasis',\n}\nexport const DECORATOR_CODE = {\n  title: 'Code',\n  value: 'code',\n  i18nTitleKey: 'inputs.portable-text.decorator.code',\n}\nexport const DECORATOR_UNDERLINE = {\n  title: 'Underline',\n  value: 'underline',\n  i18nTitleKey: 'inputs.portable-text.decorator.underline',\n}\nexport const DECORATOR_STRIKE = {\n  title: 'Strike',\n  value: 'strike-through',\n  i18nTitleKey: 'inputs.portable-text.decorator.strike-through',\n}\n\nexport const DECORATORS = {\n  strong: DECORATOR_STRONG,\n  em: DECORATOR_EMPHASIS,\n  code: DECORATOR_CODE,\n  underline: DECORATOR_UNDERLINE,\n  strikeThrough: DECORATOR_STRIKE,\n}\n\nexport const DEFAULT_DECORATORS = [\n  DECORATORS.strong,\n  DECORATORS.em,\n  DECORATORS.code,\n  DECORATORS.underline,\n  DECORATORS.strikeThrough,\n]\n","import {pick} from 'lodash'\n\nimport createPreviewGetter from '../../preview/createPreviewGetter'\nimport {lazyGetter} from '../utils'\nimport {\n  BLOCK_STYLES,\n  DEFAULT_BLOCK_STYLES,\n  DEFAULT_DECORATORS,\n  DEFAULT_LINK_ANNOTATION,\n  DEFAULT_LIST_TYPES,\n  DEFAULT_MARKS_FIELD,\n  DEFAULT_TEXT_FIELD,\n} from './defaults'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst BLOCK_CORE = {\n  name: 'block',\n  title: 'Block',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const BlockType = {\n  get() {\n    return BLOCK_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {marks, styles, lists, of, ...rest} = subTypeDef\n\n    const childrenField = createChildrenField(marks, of)\n    const styleField = createStyleField(styles)\n    const listItemField = createListItemField(lists)\n\n    const markDefsField = {\n      name: 'markDefs',\n      title: 'Mark definitions',\n      type: 'array',\n      of: marks?.annotations || DEFAULT_ANNOTATIONS,\n    }\n\n    const levelField = {\n      name: 'level',\n      title: 'Indentation',\n      type: 'number',\n    }\n\n    // NOTE: if you update this (EVEN THE ORDER OF FIELDS) you _NEED TO_ also\n    // update `BlockSchemaType`, `isBlockSchemaType` and similar in `@sanity/types`\n    const fields = [childrenField, styleField, listItemField, markDefsField, levelField].concat(\n      subTypeDef.fields || [],\n    )\n\n    const parsed = Object.assign(pick(BLOCK_CORE, INHERITED_FIELDS), rest, {\n      type: BLOCK_CORE,\n      options: options,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"block\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, INHERITED_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nfunction ensureNormalStyle(styles) {\n  return styles.some((style) => style.value === 'normal')\n    ? styles\n    : [BLOCK_STYLES.normal, ...styles]\n}\n\nfunction createStyleField(styles) {\n  return {\n    name: 'style',\n    title: 'Style',\n    type: 'string',\n    options: {\n      list: ensureNormalStyle(styles || DEFAULT_BLOCK_STYLES),\n    },\n  }\n}\n\nfunction createListItemField(lists) {\n  return {\n    name: 'listItem',\n    title: 'List type',\n    type: 'string',\n    options: {\n      list: lists || DEFAULT_LIST_TYPES,\n    },\n  }\n}\n\nconst DEFAULT_ANNOTATIONS = [DEFAULT_LINK_ANNOTATION]\n\nfunction createChildrenField(marks, of = []) {\n  return {\n    name: 'children',\n    title: 'Content',\n    type: 'array',\n    of: [\n      {\n        type: 'span',\n        fields: [DEFAULT_TEXT_FIELD, DEFAULT_MARKS_FIELD],\n        annotations: marks && marks.annotations ? marks.annotations : DEFAULT_ANNOTATIONS,\n        decorators: marks && marks.decorators ? marks.decorators : DEFAULT_DECORATORS,\n      },\n      ...of.filter((memberType) => memberType.type !== 'span'),\n    ],\n  }\n}\n","import {pick} from 'lodash'\n\nimport createPreviewGetter from '../../preview/createPreviewGetter'\nimport {lazyGetter} from '../utils'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst SPAN_CORE = {\n  name: 'span',\n  title: 'Span',\n  type: null,\n  jsonType: 'object',\n}\n\nconst MARKS_FIELD = {\n  name: 'marks',\n  title: 'Marks',\n  type: 'array',\n  of: [{type: 'string'}],\n}\n\nconst TEXT_FIELD = {\n  name: 'text',\n  title: 'Text',\n  type: 'string',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const SpanType = {\n  get() {\n    return SPAN_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {annotations = [], marks = []} = subTypeDef\n\n    // NOTE: if you update this please also update `SpanSchemaType` in`@sanity/types`\n    const fields = [MARKS_FIELD, TEXT_FIELD]\n\n    const parsed = Object.assign(pick(SPAN_CORE, INHERITED_FIELDS), subTypeDef, {\n      type: SPAN_CORE,\n      options: options,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'annotations', () => annotations.map(extendMember))\n    lazyGetter(parsed, 'marks', () => marks.map(extendMember))\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"span\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, INHERITED_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export default {\n  prepare: (val) => ({title: String(val)}),\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst BOOLEAN_CORE = {\n  name: 'boolean',\n  title: 'Boolean',\n  type: null,\n  jsonType: 'boolean',\n}\n\nexport const BooleanType = {\n  get() {\n    return BOOLEAN_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(BOOLEAN_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: BOOLEAN_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import arrify from 'arrify'\nimport {capitalize, pick} from 'lodash'\n\nimport {resolveSearchConfigForBaseFieldPaths} from '../searchConfig/resolve'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {lazyGetter} from './utils'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference marker',\n  type: 'boolean',\n}\n\nconst DATASET_FIELD = {\n  name: '_dataset',\n  title: 'Target dataset',\n  type: 'string',\n}\n\nconst PROJECT_ID_FIELD = {\n  name: '_projectId',\n  title: 'Target project ID',\n  type: 'string',\n  hidden: true,\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD, DATASET_FIELD, PROJECT_ID_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst CROSS_DATASET_REFERENCE_CORE = {\n  name: 'crossDatasetReference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr, conjunction) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type) {\n  if (!type.to || type.to.length === 0) {\n    return 'Cross dataset Reference'\n  }\n  return `Cross dataset reference to ${humanize(\n    arrify(type.to).map((toType) => toType.title || capitalize(toType.type)),\n    'or',\n  ).toLowerCase()}`\n}\n\nexport const CrossDatasetReferenceType = {\n  get() {\n    return CROSS_DATASET_REFERENCE_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in cross dataset reference definition. Check the type ${subTypeDef.name}`,\n      )\n    }\n    const parsed = Object.assign(\n      pick(CROSS_DATASET_REFERENCE_CORE, OVERRIDABLE_FIELDS),\n      subTypeDef,\n      {\n        type: CROSS_DATASET_REFERENCE_CORE,\n      },\n    )\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType) => {\n        return {\n          ...toType,\n          // eslint-disable-next-line camelcase\n          __experimental_search: resolveSearchConfigForBaseFieldPaths(toType),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATE_CORE = {\n  name: 'date',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateType = {\n  get() {\n    return DATE_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(DATE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: DATE_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATETIME_CORE = {\n  name: 'datetime',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateTimeType = {\n  get() {\n    return DATETIME_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(DATETIME_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: DATETIME_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {type SortOrdering} from '@sanity/types'\nimport {capitalize, startCase} from 'lodash'\n\nconst CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption', 'description']\n\nconst PRIMITIVES = ['string', 'boolean', 'number']\n\nconst isPrimitive = (field) => PRIMITIVES.includes(field.type)\n\nexport default function guessOrderingConfig(objectTypeDef): SortOrdering[] {\n  let candidates = CANDIDATES.filter((candidate) =>\n    objectTypeDef.fields.some((field) => isPrimitive(field) && field.name === candidate),\n  )\n\n  // None of the candidates were found, fallback to all fields\n  if (candidates.length === 0) {\n    candidates = objectTypeDef.fields.filter(isPrimitive).map((field) => field.name)\n  }\n\n  return candidates.map(\n    (name): SortOrdering => ({\n      name: name,\n      i18n: {\n        title: {key: `default-orderings.${name}`, ns: 'studio'},\n      },\n      title: capitalize(startCase(name)),\n      by: [{field: name, direction: 'asc'}],\n    }),\n  )\n}\n","import {isPlainObject, toPath} from 'lodash'\n\nexport function normalizeSearchConfigs(configs) {\n  if (!Array.isArray(configs)) {\n    throw new Error(\n      'The search config of a document type must be an array of search config objects',\n    )\n  }\n  return configs.map((conf) => {\n    if (conf === 'defaults') {\n      return conf\n    }\n    if (!isPlainObject(conf)) {\n      throw new Error('Search config must be an object of {path: string, weight: number}')\n    }\n    return {\n      weight: 'weight' in conf ? conf.weight : 1,\n      path: toPath(conf.path),\n      mapWith: typeof conf.mapWith === 'string' ? conf.mapWith : undefined,\n    }\n  })\n}\n","import {\n  type FieldGroup,\n  type FieldGroupDefinition,\n  type Fieldset,\n  type FieldsetDefinition,\n  type ObjectDefinition,\n  type ObjectField,\n} from '@sanity/types'\nimport {castArray, flatMap, pick, startCase} from 'lodash'\n\nimport guessOrderingConfig from '../ordering/guessOrderingConfig'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {normalizeSearchConfigs} from '../searchConfig/normalize'\nimport {resolveSearchConfig} from '../searchConfig/resolve'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {lazyGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [\n  ...DEFAULT_OVERRIDEABLE_FIELDS,\n  'orderings',\n  '__experimental_search',\n  'blockEditor',\n  'icon',\n]\n\nexport const ObjectType = {\n  get() {\n    return {\n      name: 'object',\n      title: 'Object',\n      type: null,\n      jsonType: 'object',\n    }\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const subTypeDef = {fields: [], ...rawSubTypeDef}\n\n    const options = {...(subTypeDef.options || {})}\n    const parsed = Object.assign(pick(this.get(), OVERRIDABLE_FIELDS), subTypeDef, {\n      type: this.get(),\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n      options: options,\n      orderings: subTypeDef.orderings || guessOrderingConfig(subTypeDef),\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const {name, fieldset, group, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          group,\n          fieldset,\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'groups', () => {\n      return createFieldsGroups(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    lazyGetter(\n      parsed,\n      '__experimental_search',\n      () => {\n        const userProvidedSearchConfig = subTypeDef.__experimental_search\n          ? normalizeSearchConfigs(subTypeDef.__experimental_search)\n          : null\n\n        if (userProvidedSearchConfig) {\n          return userProvidedSearchConfig.map((entry) =>\n            entry === 'defaults' ? normalizeSearchConfigs(subTypeDef) : entry,\n          )\n        }\n        return resolveSearchConfig(parsed)\n      },\n      {\n        enumerable: false,\n      },\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"object\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            title:\n              extensionDef.title ||\n              subTypeDef.title ||\n              (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n            type: parent,\n          })\n          lazyGetter(current, '__experimental_search', () => parent.__experimental_search)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nexport function createFieldsets(typeDef: ObjectDefinition, fields: ObjectField[]): Fieldset[] {\n  const fieldsetsByName: Record<string, FieldsetDefinition & {fields: ObjectField[]}> = {}\n\n  for (const fieldset of typeDef.fieldsets || []) {\n    if (fieldsetsByName[fieldset.name]) {\n      throw new Error(\n        `Duplicate fieldset name \"${fieldset.name}\" found for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }'`,\n      )\n    }\n\n    fieldsetsByName[fieldset.name] = {title: startCase(fieldset.name), ...fieldset, fields: []}\n  }\n\n  const fieldsets = new Set<Fieldset>()\n\n  for (const field of fields) {\n    if (!field.fieldset) {\n      fieldsets.add({single: true, field})\n      continue\n    }\n\n    const fieldset = fieldsetsByName[field.fieldset]\n    if (!fieldset) {\n      throw new Error(\n        `Fieldset '${field.fieldset}' is not defined in schema for type '${typeDef.name}'`,\n      )\n    }\n\n    fieldset.fields.push(field)\n\n    // The Set will prevent duplicates\n    fieldsets.add(fieldset)\n  }\n\n  return Array.from(fieldsets)\n}\n\nfunction createFieldsGroups(typeDef: ObjectDefinition, fields: ObjectField[]): FieldGroup[] {\n  const groupsByName: Record<string, FieldGroupDefinition & {fields: ObjectField[]}> = {}\n\n  let numDefaultGroups = 0\n  for (const group of typeDef.groups || []) {\n    if (groupsByName[group.name]) {\n      throw new Error(\n        `Duplicate group name \"${group.name}\" found for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }'`,\n      )\n    }\n\n    groupsByName[group.name] = {title: startCase(group.name), ...group, fields: []}\n\n    if (group.default && ++numDefaultGroups > 1) {\n      // Throw if you have multiple default field groups defined\n      throw new Error(\n        `More than one field group defined as default for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }' - only 1 is supported`,\n      )\n    }\n  }\n\n  fields.forEach((field) => {\n    const fieldGroupNames = castArray(field.group || [])\n    if (fieldGroupNames.length === 0) {\n      return\n    }\n\n    fieldGroupNames.forEach((fieldGroupName) => {\n      const currentGroup = groupsByName[fieldGroupName]\n\n      if (!currentGroup) {\n        throw new Error(\n          `Field group '${fieldGroupName}' is not defined in schema for type '${\n            typeDef.title ? typeDef.name : startCase(typeDef.name)\n          }'`,\n        )\n      }\n\n      currentGroup.fields.push(field)\n    })\n  })\n\n  return flatMap(groupsByName).filter((group) => group.fields.length > 0)\n}\n","import {ObjectType} from './object'\n\nconst DOCUMENT_CORE = {\n  name: 'document',\n  title: 'Document',\n  type: null,\n  jsonType: 'object',\n}\n\nexport const DocumentType = {\n  get() {\n    return DOCUMENT_CORE\n  },\n  extend: ObjectType.extend,\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst EMAIL_CORE = {\n  name: 'email',\n  title: 'Email',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const EmailType = {\n  get() {\n    return EMAIL_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(EMAIL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: EMAIL_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick, startCase} from 'lodash'\n\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\nimport {lazyGetter} from './utils'\n\nexport const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: {type: 'sanity.fileAsset'},\n}\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst FILE_CORE = {\n  name: 'file',\n  title: 'File',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {\n  accept: '',\n}\n\nexport const FileType = {\n  get() {\n    return FILE_CORE\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const options = {...(rawSubTypeDef.options || DEFAULT_OPTIONS)}\n\n    const fields = [ASSET_FIELD, ...(rawSubTypeDef.fields || [])]\n\n    const subTypeDef = {...rawSubTypeDef, fields}\n\n    const parsed = Object.assign(pick(FILE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: FILE_CORE,\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n      options: options,\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const {name, fieldset, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          fieldset,\n          isCustomized: Boolean(rawSubTypeDef.fields),\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"file\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: [{type: 'sanity.imageAsset'}],\n}\n\nexport const HOTSPOT_FIELD = {\n  name: 'hotspot',\n  type: 'sanity.imageHotspot',\n}\n\nexport const CROP_FIELD = {\n  name: 'crop',\n  type: 'sanity.imageCrop',\n}\n","import {pick, startCase} from 'lodash'\n\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {ASSET_FIELD, CROP_FIELD, HOTSPOT_FIELD} from './image/fieldDefs'\nimport {createFieldsets} from './object'\nimport {lazyGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst IMAGE_CORE = {\n  name: 'image',\n  title: 'Image',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const ImageType = {\n  get() {\n    return IMAGE_CORE\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const options = {...(rawSubTypeDef.options || DEFAULT_OPTIONS)}\n\n    let hotspotFields = [HOTSPOT_FIELD, CROP_FIELD]\n    if (!options.hotspot) {\n      hotspotFields = hotspotFields.map((field) => ({...field, hidden: true}))\n    }\n\n    const fields = [ASSET_FIELD, ...hotspotFields, ...(rawSubTypeDef.fields || [])]\n    const subTypeDef = {...rawSubTypeDef, fields}\n\n    const parsed = Object.assign(pick(this.get(), OVERRIDABLE_FIELDS), subTypeDef, {\n      type: IMAGE_CORE,\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n      options: options,\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const {name, fieldset, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          fieldset,\n          isCustomized: Boolean(rawSubTypeDef.fields),\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"image\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst NUMBER_CORE = {\n  name: 'number',\n  title: 'Number',\n  type: null,\n  jsonType: 'number',\n}\n\nexport const NumberType = {\n  get() {\n    return NUMBER_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(NUMBER_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: NUMBER_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import arrify from 'arrify'\nimport {pick} from 'lodash'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\nimport {lazyGetter} from './utils'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference',\n  type: 'boolean',\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst REFERENCE_CORE = {\n  name: 'reference',\n  title: 'Reference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr, conjunction) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type) {\n  if (!type.to || type.to.length === 0) {\n    return 'Reference'\n  }\n  return `Reference to ${humanize(\n    arrify(type.to).map((toType) => toType.title),\n    'or',\n  ).toLowerCase()}`\n}\n\nexport const ReferenceType = {\n  get() {\n    return REFERENCE_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in reference definition. Check the type ${subTypeDef.name}`,\n      )\n    }\n    const parsed = Object.assign(pick(REFERENCE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: REFERENCE_CORE,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType) => createMemberType(toType))\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst STRING_CORE = {\n  name: 'string',\n  title: 'String',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const StringType = {\n  get() {\n    return STRING_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(STRING_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: STRING_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS, 'rows']\n\nconst TEXT_CORE = {\n  name: 'text',\n  title: 'Text',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const TextType = {\n  get() {\n    return TEXT_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(TEXT_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: TEXT_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst URL_CORE = {\n  name: 'url',\n  title: 'Url',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const UrlType = {\n  get() {\n    return URL_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(URL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: URL_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import * as types from './types'\n\nfunction compileRegistry(schemaDef) {\n  const registry = Object.assign(Object.create(null), types)\n\n  const defsByName = schemaDef.types.reduce((acc, def) => {\n    if (acc[def.name]) {\n      throw new Error(`Duplicate type name added to schema: ${def.name}`)\n    }\n    acc[def.name] = def\n    return acc\n  }, {})\n\n  schemaDef.types.forEach(add)\n\n  return registry\n\n  function ensure(typeName) {\n    if (!registry[typeName]) {\n      if (!defsByName[typeName]) {\n        throw new Error(`Unknown type: ${typeName}`)\n      }\n      add(defsByName[typeName])\n    }\n  }\n\n  function extendMember(memberDef) {\n    ensure(memberDef.type)\n    return registry[memberDef.type].extend(memberDef, extendMember).get()\n  }\n\n  function add(typeDef) {\n    ensure(typeDef.type)\n    if (registry[typeDef.name]) {\n      return\n    }\n    registry[typeDef.name] = registry[typeDef.type].extend(typeDef, extendMember)\n  }\n}\n\n/**\n * @beta\n */\nexport class Schema {\n  _original: {name: string; types: any[]}\n  _registry: {[typeName: string]: any}\n\n  static compile(schemaDef: any): Schema {\n    return new Schema(schemaDef)\n  }\n\n  constructor(schemaDef: any) {\n    this._original = schemaDef\n    this._registry = compileRegistry(schemaDef)\n  }\n\n  get name(): string {\n    return this._original.name\n  }\n\n  get(name: string): any {\n    return this._registry[name] && this._registry[name].get()\n  }\n\n  has(name: string): boolean {\n    return name in this._registry\n  }\n\n  getTypeNames(): string[] {\n    return Object.keys(this._registry)\n  }\n}\n\n/**\n * @deprecated Use `import {Schema} from \"@sanity/schema\"` instead\n */\nexport class DeprecatedDefaultSchema extends Schema {\n  static compile(schemaDef: any): Schema {\n    return new DeprecatedDefaultSchema(schemaDef)\n  }\n\n  constructor(schemaDef: any) {\n    super(schemaDef)\n\n    const stack = new Error(\n      'The default export of `@sanity/schema` is deprecated. Use `import {Schema} from \"@sanity/schema\"` instead.',\n    ).stack.replace(/^Error/, 'Warning')\n\n    // eslint-disable-next-line no-console\n    console.warn(stack)\n  }\n}\n","import {DeprecatedDefaultSchema, Schema as NamedSchema} from '../legacy/Schema'\n\nexport default DeprecatedDefaultSchema\nexport const Schema = NamedSchema\nexport {type SchemaValidationResult} from '../sanity/typedefs'\n"],"names":["DEFAULT_OVERRIDEABLE_FIELDS","OVERRIDABLE_FIELDS","ANY_CORE","name","type","jsonType","AnyType","get","extend","subTypeDef","extendMember","parsed","Object","assign","pick","of","map","fieldDef","omit","subtype","parent","extensionDef","Error","current","lazyGetter","target","key","getter","config","arguments","length","undefined","defineProperty","configurable","enumerable","val","value","writable","Boolean","ARRAY_CORE","ArrayType","createMemberType","ofTypeDef","warnIfPreviewOnOptions","options","preview","console","warn","concat","warnIfPreviewHasFields","isEmpty","object","hasOwnProperty","_stringify","depth","maxDepth","Array","isArray","capLength","Math","max","maxBreadth","asString","slice","item","index","join","keys","filter","ignoreKeys","includes","String","stringify","opts","OPTIONS","maxEntries","createFallbackPrepare","fieldNames","title","isBlockField","field","some","member","TITLE_CANDIDATES","DESCRIPTION_CANDIDATES","fieldHasReferenceTo","refType","arrify","to","memberTypeDef","isImageAssetField","resolveImageAssetPath","typeDef","fields","imageAssetField","find","fieldWithImageAsset","isFileAssetField","resolveFileAssetPath","assetField","fieldWithFileAsset","guessPreviewFields","rawObjectTypeDef","objectTypeDef","stringFieldNames","blockFieldNames","titleField","candidate","descField","mediaField","imageAssetPath","fileAssetPath","fieldMapping","reduce","acc","fieldName","select","prepare","omitBy","description","media","isUndefined","parseSelection","selection","parsePreview","createPreviewGetter","previewGetter","guessPreviewConfig","DEFAULT_LINK_ANNOTATION","i18nTitleKey","modal","validation","Rule","uri","scheme","allowRelative","DEFAULT_TEXT_FIELD","DEFAULT_MARKS_FIELD","LIST_TYPES","bullet","numbered","DEFAULT_LIST_TYPES","BLOCK_STYLES","normal","h1","h2","h3","h4","h5","h6","blockquote","DEFAULT_BLOCK_STYLES","DECORATOR_STRONG","DECORATOR_EMPHASIS","DECORATOR_CODE","DECORATOR_UNDERLINE","DECORATOR_STRIKE","DECORATORS","strong","em","code","underline","strikeThrough","DEFAULT_DECORATORS","INHERITED_FIELDS","BLOCK_CORE","DEFAULT_OPTIONS","BlockType","marks","styles","lists","rest","childrenField","createChildrenField","styleField","createStyleField","listItemField","createListItemField","markDefsField","annotations","DEFAULT_ANNOTATIONS","levelField","ensureNormalStyle","style","list","decorators","memberType","SPAN_CORE","MARKS_FIELD","TEXT_FIELD","SpanType","primitivePreview","BOOLEAN_CORE","BooleanType","REF_FIELD","WEAK_FIELD","DATASET_FIELD","PROJECT_ID_FIELD","hidden","REFERENCE_FIELDS","CROSS_DATASET_REFERENCE_CORE","humanize","humanize$1","arr","conjunction","len","first","last","buildTitle","toType","capitalize","toLowerCase","CrossDatasetReferenceType","__experimental_search","resolveSearchConfigForBaseFieldPaths","DATE_CORE","DateType","DATETIME_CORE","DateTimeType","CANDIDATES","PRIMITIVES","isPrimitive","guessOrderingConfig","candidates","i18n","ns","startCase","by","direction","normalizeSearchConfigs","configs","conf","isPlainObject","weight","path","toPath","mapWith","ObjectType","rawSubTypeDef","orderings","fieldset","group","compiledField","createFieldsets","createFieldsGroups","userProvidedSearchConfig","entry","resolveSearchConfig","fieldsetsByName","fieldsets","Set","add","single","push","from","groupsByName","numDefaultGroups","groups","default","forEach","fieldGroupNames","castArray","fieldGroupName","currentGroup","flatMap","DOCUMENT_CORE","DocumentType","EMAIL_CORE","EmailType","ASSET_FIELD","FILE_CORE","accept","FileType","isCustomized","HOTSPOT_FIELD","CROP_FIELD","IMAGE_CORE","ImageType","hotspotFields","hotspot","NUMBER_CORE","NumberType","REFERENCE_CORE","ReferenceType","STRING_CORE","StringType","TEXT_CORE","TextType","URL_CORE","UrlType","compileRegistry","schemaDef","registry","create","types","defsByName","def","ensure","typeName","memberDef","Schema$1","Schema","compile","constructor","_original","_registry","has","getTypeNames","DeprecatedDefaultSchema","stack","replace","NamedSchema"],"mappings":"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"}