{"version":3,"file":"constants.js","sources":["../../src/constants.ts"],"sourcesContent":["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n} from './types'\n\n/** @internal */\nexport const schemaType =\n  'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix =\n  'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const apiVersion = '2023-11-09'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n  _id,\n  _updatedAt,\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n"],"names":["schemaType","schemaIdPrefix","apiVersion","urlSearchParamPreviewSecret","urlSearchParamPreviewPathname","isDev","process","env","NODE_ENV","SECRET_TTL","fetchSecretQuery","deleteExpiredSecretsQuery","tag"],"mappings":"AAMO,MAAMA,EACX,0BAGWC,EACX,4BAGWC,EAAa,aAGbC,EAA8B,wBAG9BC,EAAgC,0BAGhCC,EAAiC,gBAAzBC,QAAQC,IAAIC,SAMpBC,EAAa,KAGbC,EAAA,eACeV,mIAQfW,EAAA,eACeX,wDAMfY,EAAM"}