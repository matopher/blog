'use strict';var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0);}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}var chalk$4=require('chalk');var loadEnv=require('./loadEnv-DKAMfVsd.js');var require$$0$4=require('fs');var nodeMachineId=require('node-machine-id');var require$$0$6=require('os');var path$t=require('path');var require$$1$2=require('module');var telemetry=require('@sanity/telemetry');var require$$0$5=require('child_process');var fs$o=require('fs/promises');var require$$0$9=require('util');var require$$0$a=require('url');var require$$1$4=require('get-it');var require$$2$1=require('get-it/middleware');var require$$0$7=require('constants');var require$$0$8=require('stream');var require$$1$3=require('assert');var require$$3$1=require('events');var require$$6$1=require('http');var semver$2=require('semver');var getCliConfig=require('./getCliConfig-DoiVfP79.js');var pkgDir=require('pkg-dir');var require$$3$2=require('crypto');var fs$p=require('@sanity/util/fs');var decompress=require('decompress');var validateNpmPackageName=require('validate-npm-package-name');var require$$0$b=require('buffer');var goldenFleece=require('golden-fleece');var traverse=require('@babel/traverse');var require$$0$c=require('readline');var require$$0$d=require('tty');function _interopDefaultCompat(e){return e&&typeof e==='object'&&'default'in e?e:{default:e};}function _mergeNamespaces(n,m){m.forEach(function(e){e&&typeof e!=='string'&&!Array.isArray(e)&&Object.keys(e).forEach(function(k){if(k!=='default'&&!(k in n)){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k];}});}});});return Object.freeze(n);}var chalk__default=/*#__PURE__*/_interopDefaultCompat(chalk$4);var require$$0__default=/*#__PURE__*/_interopDefaultCompat(require$$0$4);var require$$0__default$2=/*#__PURE__*/_interopDefaultCompat(require$$0$6);var path__default=/*#__PURE__*/_interopDefaultCompat(path$t);var require$$1__default=/*#__PURE__*/_interopDefaultCompat(require$$1$2);var require$$0__default$1=/*#__PURE__*/_interopDefaultCompat(require$$0$5);var fs__default=/*#__PURE__*/_interopDefaultCompat(fs$o);var require$$0__default$5=/*#__PURE__*/_interopDefaultCompat(require$$0$9);var require$$0__default$6=/*#__PURE__*/_interopDefaultCompat(require$$0$a);var require$$1__default$2=/*#__PURE__*/_interopDefaultCompat(require$$1$4);var require$$2__default=/*#__PURE__*/_interopDefaultCompat(require$$2$1);var require$$0__default$3=/*#__PURE__*/_interopDefaultCompat(require$$0$7);var require$$0__default$4=/*#__PURE__*/_interopDefaultCompat(require$$0$8);var require$$1__default$1=/*#__PURE__*/_interopDefaultCompat(require$$1$3);var require$$3__default=/*#__PURE__*/_interopDefaultCompat(require$$3$1);var require$$6__default=/*#__PURE__*/_interopDefaultCompat(require$$6$1);var semver__default=/*#__PURE__*/_interopDefaultCompat(semver$2);var pkgDir__default=/*#__PURE__*/_interopDefaultCompat(pkgDir);var require$$3__default$1=/*#__PURE__*/_interopDefaultCompat(require$$3$2);var decompress__default=/*#__PURE__*/_interopDefaultCompat(decompress);var validateNpmPackageName__default=/*#__PURE__*/_interopDefaultCompat(validateNpmPackageName);var require$$0__default$7=/*#__PURE__*/_interopDefaultCompat(require$$0$b);var traverse__default=/*#__PURE__*/_interopDefaultCompat(traverse);var require$$0__default$8=/*#__PURE__*/_interopDefaultCompat(require$$0$c);var require$$0__default$9=/*#__PURE__*/_interopDefaultCompat(require$$0$d);var resolveFrom$2={exports:{}};const path$s=path__default.default;const Module=require$$1__default.default;const fs$n=require$$0__default.default;const resolveFrom=(fromDirectory,moduleId,silent)=>{if(typeof fromDirectory!=='string'){throw new TypeError("Expected `fromDir` to be of type `string`, got `".concat(typeof fromDirectory,"`"));}if(typeof moduleId!=='string'){throw new TypeError("Expected `moduleId` to be of type `string`, got `".concat(typeof moduleId,"`"));}try{fromDirectory=fs$n.realpathSync(fromDirectory);}catch(error){if(error.code==='ENOENT'){fromDirectory=path$s.resolve(fromDirectory);}else if(silent){return;}else{throw error;}}const fromFile=path$s.join(fromDirectory,'noop.js');const resolveFileName=()=>Module._resolveFilename(moduleId,{id:fromFile,filename:fromFile,paths:Module._nodeModulePaths(fromDirectory)});if(silent){try{return resolveFileName();}catch(error){return;}}return resolveFileName();};resolveFrom$2.exports=(fromDirectory,moduleId)=>resolveFrom(fromDirectory,moduleId);resolveFrom$2.exports.silent=(fromDirectory,moduleId)=>resolveFrom(fromDirectory,moduleId,true);var resolveFromExports=resolveFrom$2.exports;var resolveFrom$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(resolveFromExports);const CliCommand=telemetry.defineTrace({name:"CLI Command Executed",version:1,description:"A CLI command was executed"});var lodash={exports:{}};/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */(function(module,exports){(function(){/** Used as a safe reference for `undefined` in pre-ES5 environments. */var undefined$1;/** Used as the semantic version number. */var VERSION='4.17.21';/** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200;/** Error message constants. */var CORE_ERROR_TEXT='Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',FUNC_ERROR_TEXT='Expected a function',INVALID_TEMPL_VAR_ERROR_TEXT='Invalid `variable` option passed into `_.template`';/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/** Used as the maximum memoize cache size. */var MAX_MEMOIZE_SIZE=500;/** Used as the internal argument placeholder. */var PLACEHOLDER='__lodash_placeholder__';/** Used to compose bitmasks for cloning. */var CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4;/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** Used to compose bitmasks for function metadata. */var WRAP_BIND_FLAG=1,WRAP_BIND_KEY_FLAG=2,WRAP_CURRY_BOUND_FLAG=4,WRAP_CURRY_FLAG=8,WRAP_CURRY_RIGHT_FLAG=16,WRAP_PARTIAL_FLAG=32,WRAP_PARTIAL_RIGHT_FLAG=64,WRAP_ARY_FLAG=128,WRAP_REARG_FLAG=256,WRAP_FLIP_FLAG=512;/** Used as default options for `_.truncate`. */var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...';/** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=800,HOT_SPAN=16;/** Used to indicate the type of lazy iteratees. */var LAZY_FILTER_FLAG=1,LAZY_MAP_FLAG=2,LAZY_WHILE_FLAG=3;/** Used as references for various `Number` constants. */var INFINITY=1/0,MAX_SAFE_INTEGER=9007199254740991,MAX_INTEGER=1.7976931348623157e+308,NAN=0/0;/** Used as references for the maximum length and index of an array. */var MAX_ARRAY_LENGTH=4294967295,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1;/** Used to associate wrap methods with their bit flags. */var wrapFlags=[['ary',WRAP_ARY_FLAG],['bind',WRAP_BIND_FLAG],['bindKey',WRAP_BIND_KEY_FLAG],['curry',WRAP_CURRY_FLAG],['curryRight',WRAP_CURRY_RIGHT_FLAG],['flip',WRAP_FLIP_FLAG],['partial',WRAP_PARTIAL_FLAG],['partialRight',WRAP_PARTIAL_RIGHT_FLAG],['rearg',WRAP_REARG_FLAG]];/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',asyncTag='[object AsyncFunction]',boolTag='[object Boolean]',dateTag='[object Date]',domExcTag='[object DOMException]',errorTag='[object Error]',funcTag='[object Function]',genTag='[object GeneratorFunction]',mapTag='[object Map]',numberTag='[object Number]',nullTag='[object Null]',objectTag='[object Object]',promiseTag='[object Promise]',proxyTag='[object Proxy]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]',undefinedTag='[object Undefined]',weakMapTag='[object WeakMap]',weakSetTag='[object WeakSet]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';/** Used to match empty string literals in compiled template source. */var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;/** Used to match HTML entities and HTML characters. */var reEscapedHtml=/&(?:amp|lt|gt|quot|#39);/g,reUnescapedHtml=/[&<>"']/g,reHasEscapedHtml=RegExp(reEscapedHtml.source),reHasUnescapedHtml=RegExp(reUnescapedHtml.source);/** Used to match template delimiters. */var reEscape=/<%-([\s\S]+?)%>/g,reEvaluate=/<%([\s\S]+?)%>/g,reInterpolate=/<%=([\s\S]+?)%>/g;/** Used to match property names within property paths. */var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;/**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	   */var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source);/** Used to match leading whitespace. */var reTrimStart=/^\s+/;/** Used to match a single whitespace character. */var reWhitespace=/\s/;/** Used to match wrap detail comments. */var reWrapComment=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,reWrapDetails=/\{\n\/\* \[wrapped with (.+)\] \*/,reSplitDetails=/,? & /;/** Used to match words composed of alphanumeric characters. */var reAsciiWord=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;/**
	   * Used to validate the `validate` option in `_.template` variable.
	   *
	   * Forbids characters which could potentially change the meaning of the function argument definition:
	   * - "()," (modification of function parameters)
	   * - "=" (default value)
	   * - "[]{}" (destructuring of function parameters)
	   * - "/" (beginning of a comment)
	   * - whitespace
	   */var reForbiddenIdentifierChars=/[()=,{}\[\]\/\s]/;/** Used to match backslashes in property paths. */var reEscapeChar=/\\(\\)?/g;/**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
	   */var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;/** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/;/** Used to detect bad signed hexadecimal string values. */var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;/** Used to detect binary string values. */var reIsBinary=/^0b[01]+$/i;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\[object .+?Constructor\]$/;/** Used to detect octal string values. */var reIsOctal=/^0o[0-7]+$/i;/** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\d*)$/;/** Used to match Latin Unicode letters (excluding mathematical operators). */var reLatin=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;/** Used to ensure capturing order of template delimiters. */var reNoMatch=/($^)/;/** Used to match unescaped characters in compiled string literals. */var reUnescapedString=/['\n\r\u2028\u2029\\]/g;/** Used to compose unicode character classes. */var rsAstralRange='\\ud800-\\udfff',rsComboMarksRange='\\u0300-\\u036f',reComboHalfMarksRange='\\ufe20-\\ufe2f',rsComboSymbolsRange='\\u20d0-\\u20ff',rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsDingbatRange='\\u2700-\\u27bf',rsLowerRange='a-z\\xdf-\\xf6\\xf8-\\xff',rsMathOpRange='\\xac\\xb1\\xd7\\xf7',rsNonCharRange='\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',rsPunctuationRange='\\u2000-\\u206f',rsSpaceRange=' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',rsUpperRange='A-Z\\xc0-\\xd6\\xd8-\\xde',rsVarRange='\\ufe0e\\ufe0f',rsBreakRange=rsMathOpRange+rsNonCharRange+rsPunctuationRange+rsSpaceRange;/** Used to compose unicode capture groups. */var rsApos="['\u2019]",rsAstral='['+rsAstralRange+']',rsBreak='['+rsBreakRange+']',rsCombo='['+rsComboRange+']',rsDigits='\\d+',rsDingbat='['+rsDingbatRange+']',rsLower='['+rsLowerRange+']',rsMisc='[^'+rsAstralRange+rsBreakRange+rsDigits+rsDingbatRange+rsLowerRange+rsUpperRange+']',rsFitz='\\ud83c[\\udffb-\\udfff]',rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional='(?:\\ud83c[\\udde6-\\uddff]){2}',rsSurrPair='[\\ud800-\\udbff][\\udc00-\\udfff]',rsUpper='['+rsUpperRange+']',rsZWJ='\\u200d';/** Used to compose unicode regexes. */var rsMiscLower='(?:'+rsLower+'|'+rsMisc+')',rsMiscUpper='(?:'+rsUpper+'|'+rsMisc+')',rsOptContrLower='(?:'+rsApos+'(?:d|ll|m|re|s|t|ve))?',rsOptContrUpper='(?:'+rsApos+'(?:D|LL|M|RE|S|T|VE))?',reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsOrdLower='\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',rsOrdUpper='\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsEmoji='(?:'+[rsDingbat,rsRegional,rsSurrPair].join('|')+')'+rsSeq,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';/** Used to match apostrophes. */var reApos=RegExp(rsApos,'g');/**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */var reComboMark=RegExp(rsCombo,'g');/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reUnicode=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g');/** Used to match complex or compound words. */var reUnicodeWord=RegExp([rsUpper+'?'+rsLower+'+'+rsOptContrLower+'(?='+[rsBreak,rsUpper,'$'].join('|')+')',rsMiscUpper+'+'+rsOptContrUpper+'(?='+[rsBreak,rsUpper+rsMiscLower,'$'].join('|')+')',rsUpper+'?'+rsMiscLower+'+'+rsOptContrLower,rsUpper+'+'+rsOptContrUpper,rsOrdUpper,rsOrdLower,rsDigits,rsEmoji].join('|'),'g');/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */var reHasUnicode=RegExp('['+rsZWJ+rsAstralRange+rsComboRange+rsVarRange+']');/** Used to detect strings that need a more robust regexp to match words. */var reHasUnicodeWord=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;/** Used to assign default `context` object properties. */var contextProps=['Array','Buffer','DataView','Date','Error','Float32Array','Float64Array','Function','Int8Array','Int16Array','Int32Array','Map','Math','Object','Promise','RegExp','Set','String','Symbol','TypeError','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap','_','clearTimeout','isFinite','parseInt','setTimeout'];/** Used to make template sourceURLs easier to identify. */var templateCounter=-1;/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/** Used to identify `toStringTag` values supported by `_.clone`. */var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;/** Used to map Latin Unicode letters to basic Latin letters. */var deburredLetters={// Latin-1 Supplement block.
'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A','\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a','\xc7':'C','\xe7':'c','\xd0':'D','\xf0':'d','\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E','\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e','\xcc':'I','\xcd':'I','\xce':'I','\xcf':'I','\xec':'i','\xed':'i','\xee':'i','\xef':'i','\xd1':'N','\xf1':'n','\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O','\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o','\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U','\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u','\xdd':'Y','\xfd':'y','\xff':'y','\xc6':'Ae','\xe6':'ae','\xde':'Th','\xfe':'th','\xdf':'ss',// Latin Extended-A block.
'\u0100':'A','\u0102':'A','\u0104':'A','\u0101':'a','\u0103':'a','\u0105':'a','\u0106':'C','\u0108':'C','\u010a':'C','\u010c':'C','\u0107':'c','\u0109':'c','\u010b':'c','\u010d':'c','\u010e':'D','\u0110':'D','\u010f':'d','\u0111':'d','\u0112':'E','\u0114':'E','\u0116':'E','\u0118':'E','\u011a':'E','\u0113':'e','\u0115':'e','\u0117':'e','\u0119':'e','\u011b':'e','\u011c':'G','\u011e':'G','\u0120':'G','\u0122':'G','\u011d':'g','\u011f':'g','\u0121':'g','\u0123':'g','\u0124':'H','\u0126':'H','\u0125':'h','\u0127':'h','\u0128':'I','\u012a':'I','\u012c':'I','\u012e':'I','\u0130':'I','\u0129':'i','\u012b':'i','\u012d':'i','\u012f':'i','\u0131':'i','\u0134':'J','\u0135':'j','\u0136':'K','\u0137':'k','\u0138':'k','\u0139':'L','\u013b':'L','\u013d':'L','\u013f':'L','\u0141':'L','\u013a':'l','\u013c':'l','\u013e':'l','\u0140':'l','\u0142':'l','\u0143':'N','\u0145':'N','\u0147':'N','\u014a':'N','\u0144':'n','\u0146':'n','\u0148':'n','\u014b':'n','\u014c':'O','\u014e':'O','\u0150':'O','\u014d':'o','\u014f':'o','\u0151':'o','\u0154':'R','\u0156':'R','\u0158':'R','\u0155':'r','\u0157':'r','\u0159':'r','\u015a':'S','\u015c':'S','\u015e':'S','\u0160':'S','\u015b':'s','\u015d':'s','\u015f':'s','\u0161':'s','\u0162':'T','\u0164':'T','\u0166':'T','\u0163':'t','\u0165':'t','\u0167':'t','\u0168':'U','\u016a':'U','\u016c':'U','\u016e':'U','\u0170':'U','\u0172':'U','\u0169':'u','\u016b':'u','\u016d':'u','\u016f':'u','\u0171':'u','\u0173':'u','\u0174':'W','\u0175':'w','\u0176':'Y','\u0177':'y','\u0178':'Y','\u0179':'Z','\u017b':'Z','\u017d':'Z','\u017a':'z','\u017c':'z','\u017e':'z','\u0132':'IJ','\u0133':'ij','\u0152':'Oe','\u0153':'oe','\u0149':"'n",'\u017f':'s'};/** Used to map characters to HTML entities. */var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'};/** Used to map HTML entities to characters. */var htmlUnescapes={'&amp;':'&','&lt;':'<','&gt;':'>','&quot;':'"','&#39;':"'"};/** Used to escape characters for inclusion in compiled string literals. */var stringEscapes={'\\':'\\',"'":"'",'\n':'n','\r':'r','\u2028':'u2028','\u2029':'u2029'};/** Built-in method references without a dependency on `root`. */var freeParseFloat=parseFloat,freeParseInt=parseInt;/** Detect free variable `global` from Node.js. */var freeGlobal=typeof loadEnv.commonjsGlobal=='object'&&loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.Object===Object&&loadEnv.commonjsGlobal;/** Detect free variable `self`. */var freeSelf=typeof self=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();/** Detect free variable `exports`. */var freeExports=exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&'object'=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{// Use `util.types` for Node.js 10+.
var types=freeModule&&freeModule.require&&freeModule.require('util').types;if(types){return types;}// Legacy `process.binding('util')` for Node.js < 10.
return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();/* Node.js helper references. */var nodeIsArrayBuffer=nodeUtil&&nodeUtil.isArrayBuffer,nodeIsDate=nodeUtil&&nodeUtil.isDate,nodeIsMap=nodeUtil&&nodeUtil.isMap,nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp,nodeIsSet=nodeUtil&&nodeUtil.isSet,nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;/*--------------------------------------------------------------------------*/ /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}/**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */function arrayAggregator(array,setter,iteratee,accumulator){var index=-1,length=array==null?0:array.length;while(++index<length){var value=array[index];setter(accumulator,value,iteratee(value),array);}return accumulator;}/**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;}/**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */function arrayEachRight(array,iteratee){var length=array==null?0:array.length;while(length--){if(iteratee(array[length],length,array)===false){break;}}return array;}/**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */function arrayEvery(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(!predicate(array[index],index,array)){return false;}}return true;}/**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;}/**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */function arrayIncludes(array,value){var length=array==null?0:array.length;return!!length&&baseIndexOf(array,value,0)>-1;}/**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */function arrayIncludesWith(array,value,comparator){var index=-1,length=array==null?0:array.length;while(++index<length){if(comparator(value,array[index])){return true;}}return false;}/**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}/**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;}/**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=array==null?0:array.length;if(initAccum&&length){accumulator=array[++index];}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array);}return accumulator;}/**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */function arrayReduceRight(array,iteratee,accumulator,initAccum){var length=array==null?0:array.length;if(initAccum&&length){accumulator=array[--length];}while(length--){accumulator=iteratee(accumulator,array[length],length,array);}return accumulator;}/**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;}/**
	   * Gets the size of an ASCII `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */var asciiSize=baseProperty('length');/**
	   * Converts an ASCII `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */function asciiToArray(string){return string.split('');}/**
	   * Splits an ASCII `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */function asciiWords(string){return string.match(reAsciiWord)||[];}/**
	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	   * without support for iteratee shorthands, which iterates over `collection`
	   * using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */function baseFindKey(collection,predicate,eachFunc){var result;eachFunc(collection,function(value,key,collection){if(predicate(value,key,collection)){result=key;return false;}});return result;}/**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return-1;}/**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}/**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseIndexOfWith(array,value,fromIndex,comparator){var index=fromIndex-1,length=array.length;while(++index<length){if(comparator(array[index],value)){return index;}}return-1;}/**
	   * The base implementation of `_.isNaN` without support for number objects.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	   */function baseIsNaN(value){return value!==value;}/**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */function baseMean(array,iteratee){var length=array==null?0:array.length;return length?baseSum(array,iteratee)/length:NAN;}/**
	   * The base implementation of `_.property` without support for deep paths.
	   *
	   * @private
	   * @param {string} key The key of the property to get.
	   * @returns {Function} Returns the new accessor function.
	   */function baseProperty(key){return function(object){return object==null?undefined$1:object[key];};}/**
	   * The base implementation of `_.propertyOf` without support for deep paths.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @returns {Function} Returns the new accessor function.
	   */function basePropertyOf(object){return function(key){return object==null?undefined$1:object[key];};}/**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index,collection);});return accumulator;}/**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;}/**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */function baseSum(array,iteratee){var result,index=-1,length=array.length;while(++index<length){var current=iteratee(array[index]);if(current!==undefined$1){result=result===undefined$1?current:result+current;}}return result;}/**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}/**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */function baseToPairs(object,props){return arrayMap(props,function(key){return[key,object[key]];});}/**
	   * The base implementation of `_.trim`.
	   *
	   * @private
	   * @param {string} string The string to trim.
	   * @returns {string} Returns the trimmed string.
	   */function baseTrim(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,''):string;}/**
	   * The base implementation of `_.unary` without support for storing metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */function baseUnary(func){return function(value){return func(value);};}/**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */function baseValues(object,props){return arrayMap(props,function(key){return object[key];});}/**
	   * Checks if a `cache` value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */function cacheHas(cache,key){return cache.has(key);}/**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */function charsStartIndex(strSymbols,chrSymbols){var index=-1,length=strSymbols.length;while(++index<length&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */function charsEndIndex(strSymbols,chrSymbols){var index=strSymbols.length;while(index--&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */function countHolders(array,placeholder){var length=array.length,result=0;while(length--){if(array[length]===placeholder){++result;}}return result;}/**
	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	   * letters to basic Latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */var deburrLetter=basePropertyOf(deburredLetters);/**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */var escapeHtmlChar=basePropertyOf(htmlEscapes);/**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */function escapeStringChar(chr){return'\\'+stringEscapes[chr];}/**
	   * Gets the value at `key` of `object`.
	   *
	   * @private
	   * @param {Object} [object] The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */function getValue(object,key){return object==null?undefined$1:object[key];}/**
	   * Checks if `string` contains Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	   */function hasUnicode(string){return reHasUnicode.test(string);}/**
	   * Checks if `string` contains a word composed of Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a word is found, else `false`.
	   */function hasUnicodeWord(string){return reHasUnicodeWord.test(string);}/**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */function iteratorToArray(iterator){var data,result=[];while(!(data=iterator.next()).done){result.push(data.value);}return result;}/**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;}/**
	   * Creates a unary function that invokes `func` with its argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */function overArg(func,transform){return function(arg){return func(transform(arg));};}/**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */function replaceHolders(array,placeholder){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value===placeholder||value===PLACEHOLDER){array[index]=PLACEHOLDER;result[resIndex++]=index;}}return result;}/**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;}/**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */function setToPairs(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=[value,value];});return result;}/**
	   * A specialized version of `_.indexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return-1;}/**
	   * A specialized version of `_.lastIndexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function strictLastIndexOf(array,value,fromIndex){var index=fromIndex+1;while(index--){if(array[index]===value){return index;}}return index;}/**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string);}/**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */function stringToArray(string){return hasUnicode(string)?unicodeToArray(string):asciiToArray(string);}/**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
	   * character of `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the index of the last non-whitespace character.
	   */function trimmedEndIndex(string){var index=string.length;while(index--&&reWhitespace.test(string.charAt(index))){}return index;}/**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */var unescapeHtmlChar=basePropertyOf(htmlUnescapes);/**
	   * Gets the size of a Unicode `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result;}return result;}/**
	   * Converts a Unicode `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */function unicodeToArray(string){return string.match(reUnicode)||[];}/**
	   * Splits a Unicode `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */function unicodeWords(string){return string.match(reUnicodeWord)||[];}/*--------------------------------------------------------------------------*/ /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */var runInContext=function runInContext(context){context=context==null?root:_.defaults(root.Object(),context,_.pick(root,contextProps));/** Built-in constructor references. */var Array=context.Array,Date=context.Date,Error=context.Error,Function=context.Function,Math=context.Math,Object=context.Object,RegExp=context.RegExp,String=context.String,TypeError=context.TypeError;/** Used for built-in method references. */var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;/** Used to detect overreaching core-js shims. */var coreJsData=context['__core-js_shared__'];/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to generate unique IDs. */var idCounter=0;/** Used to detect methods masquerading as native. */var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();/**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	     * of values.
	     */var nativeObjectToString=objectProto.toString;/** Used to infer the `Object` constructor. */var objectCtorString=funcToString.call(Object);/** Used to restore the original `_` reference in `_.noConflict`. */var oldDash=root._;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');/** Built-in value references. */var Buffer=moduleExports?context.Buffer:undefined$1,Symbol=context.Symbol,Uint8Array=context.Uint8Array,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined$1,getPrototype=overArg(Object.getPrototypeOf,Object),objectCreate=Object.create,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,spreadableSymbol=Symbol?Symbol.isConcatSpreadable:undefined$1,symIterator=Symbol?Symbol.iterator:undefined$1,symToStringTag=Symbol?Symbol.toStringTag:undefined$1;var defineProperty=function(){try{var func=getNative(Object,'defineProperty');func({},'',{});return func;}catch(e){}}();/** Mocked built-ins. */var ctxClearTimeout=context.clearTimeout!==root.clearTimeout&&context.clearTimeout,ctxNow=Date&&Date.now!==root.Date.now&&Date.now,ctxSetTimeout=context.setTimeout!==root.setTimeout&&context.setTimeout;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil,nativeFloor=Math.floor,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:undefined$1,nativeIsFinite=context.isFinite,nativeJoin=arrayProto.join,nativeKeys=overArg(Object.keys,Object),nativeMax=Math.max,nativeMin=Math.min,nativeNow=Date.now,nativeParseInt=context.parseInt,nativeRandom=Math.random,nativeReverse=arrayProto.reverse;/* Built-in method references that are verified to be native. */var DataView=getNative(context,'DataView'),Map=getNative(context,'Map'),Promise=getNative(context,'Promise'),Set=getNative(context,'Set'),WeakMap=getNative(context,'WeakMap'),nativeCreate=getNative(Object,'create');/** Used to store function metadata. */var metaMap=WeakMap&&new WeakMap();/** Used to lookup unminified function names. */var realNames={};/** Used to detect maps, sets, and weakmaps. */var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);/** Used to convert symbols to primitives and strings. */var symbolProto=Symbol?Symbol.prototype:undefined$1,symbolValueOf=symbolProto?symbolProto.valueOf:undefined$1,symbolToString=symbolProto?symbolProto.toString:undefined$1;/*------------------------------------------------------------------------*/ /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array and iteratees accept only
	     * one argument. The heuristic for whether a section qualifies for shortcut
	     * fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	     * `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */function lodash(value){if(isObjectLike(value)&&!isArray(value)&&!(value instanceof LazyWrapper)){if(value instanceof LodashWrapper){return value;}if(hasOwnProperty.call(value,'__wrapped__')){return wrapperClone(value);}}return new LodashWrapper(value);}/**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} proto The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */var baseCreate=function(){function object(){}return function(proto){if(!isObject(proto)){return{};}if(objectCreate){return objectCreate(proto);}object.prototype=proto;var result=new object();object.prototype=undefined$1;return result;};}();/**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */function baseLodash(){// No operation performed.
}/**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */function LodashWrapper(value,chainAll){this.__wrapped__=value;this.__actions__=[];this.__chain__=!!chainAll;this.__index__=0;this.__values__=undefined$1;}/**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
	     * following template settings to use alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */lodash.templateSettings={/**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'escape':reEscape,/**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'evaluate':reEvaluate,/**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'interpolate':reInterpolate,/**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */'variable':'',/**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */'imports':{/**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */'_':lodash}};// Ensure wrappers are instances of `baseLodash`.
lodash.prototype=baseLodash.prototype;lodash.prototype.constructor=lodash;LodashWrapper.prototype=baseCreate(baseLodash.prototype);LodashWrapper.prototype.constructor=LodashWrapper;/*------------------------------------------------------------------------*/ /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */function LazyWrapper(value){this.__wrapped__=value;this.__actions__=[];this.__dir__=1;this.__filtered__=false;this.__iteratees__=[];this.__takeCount__=MAX_ARRAY_LENGTH;this.__views__=[];}/**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */function lazyClone(){var result=new LazyWrapper(this.__wrapped__);result.__actions__=copyArray(this.__actions__);result.__dir__=this.__dir__;result.__filtered__=this.__filtered__;result.__iteratees__=copyArray(this.__iteratees__);result.__takeCount__=this.__takeCount__;result.__views__=copyArray(this.__views__);return result;}/**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */function lazyReverse(){if(this.__filtered__){var result=new LazyWrapper(this);result.__dir__=-1;result.__filtered__=true;}else{result=this.clone();result.__dir__*=-1;}return result;}/**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */function lazyValue(){var array=this.__wrapped__.value(),dir=this.__dir__,isArr=isArray(array),isRight=dir<0,arrLength=isArr?array.length:0,view=getView(0,arrLength,this.__views__),start=view.start,end=view.end,length=end-start,index=isRight?end:start-1,iteratees=this.__iteratees__,iterLength=iteratees.length,resIndex=0,takeCount=nativeMin(length,this.__takeCount__);if(!isArr||!isRight&&arrLength==length&&takeCount==length){return baseWrapperValue(array,this.__actions__);}var result=[];outer:while(length--&&resIndex<takeCount){index+=dir;var iterIndex=-1,value=array[index];while(++iterIndex<iterLength){var data=iteratees[iterIndex],iteratee=data.iteratee,type=data.type,computed=iteratee(value);if(type==LAZY_MAP_FLAG){value=computed;}else if(!computed){if(type==LAZY_FILTER_FLAG){continue outer;}else{break outer;}}}result[resIndex++]=value;}return result;}// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype=baseCreate(baseLodash.prototype);LazyWrapper.prototype.constructor=LazyWrapper;/*------------------------------------------------------------------------*/ /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}/**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}/**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined$1:result;}return hasOwnProperty.call(data,key)?data[key]:undefined$1;}/**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined$1:hasOwnProperty.call(data,key);}/**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined$1?HASH_UNDEFINED:value;return this;}// Add methods to `Hash`.
Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;/*------------------------------------------------------------------------*/ /**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */function listCacheClear(){this.__data__=[];this.size=0;}/**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else{splice.call(data,index,1);}--this.size;return true;}/**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined$1:data[index][1];}/**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}/**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value]);}else{data[index][1]=value;}return this;}// Add methods to `ListCache`.
ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;/*------------------------------------------------------------------------*/ /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */function mapCacheClear(){this.size=0;this.__data__={'hash':new Hash(),'map':new(Map||ListCache)(),'string':new Hash()};}/**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function mapCacheDelete(key){var result=getMapData(this,key)['delete'](key);this.size-=result?1:0;return result;}/**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function mapCacheGet(key){return getMapData(this,key).get(key);}/**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function mapCacheHas(key){return getMapData(this,key).has(key);}/**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this;}// Add methods to `MapCache`.
MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;/*------------------------------------------------------------------------*/ /**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}}/**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}/**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */function setCacheHas(value){return this.__data__.has(value);}// Add methods to `SetCache`.
SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;/*------------------------------------------------------------------------*/ /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}/**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */function stackClear(){this.__data__=new ListCache();this.size=0;}/**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function stackDelete(key){var data=this.__data__,result=data['delete'](key);this.size=data.size;return result;}/**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function stackGet(key){return this.__data__.get(key);}/**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function stackHas(key){return this.__data__.has(key);}/**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}// Add methods to `Stack`.
Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;/*------------------------------------------------------------------------*/ /**
	     * Creates an array of the enumerable property names of the array-like `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @param {boolean} inherited Specify returning inherited property names.
	     * @returns {Array} Returns the array of property names.
	     */function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(// Safari 9 has enumerable `arguments.length` in strict mode.
key=='length'||// Node.js 0.10 has enumerable non-index properties on buffers.
isBuff&&(key=='offset'||key=='parent')||// PhantomJS 2 has enumerable non-index properties on typed arrays.
isType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||// Skip index properties.
isIndex(key,length)))){result.push(key);}}return result;}/**
	     * A specialized version of `_.sample` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @returns {*} Returns the random element.
	     */function arraySample(array){var length=array.length;return length?array[baseRandom(0,length-1)]:undefined$1;}/**
	     * A specialized version of `_.sampleSize` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */function arraySampleSize(array,n){return shuffleSelf(copyArray(array),baseClamp(n,0,array.length));}/**
	     * A specialized version of `_.shuffle` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */function arrayShuffle(array){return shuffleSelf(copyArray(array));}/**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */function assignMergeValue(object,key,value){if(value!==undefined$1&&!eq(object[key],value)||value===undefined$1&&!(key in object)){baseAssignValue(object,key,value);}}/**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined$1&&!(key in object)){baseAssignValue(object,key,value);}}/**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return-1;}/**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */function baseAggregator(collection,setter,iteratee,accumulator){baseEach(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection);});return accumulator;}/**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */function baseAssign(object,source){return object&&copyObject(source,keys(source),object);}/**
	     * The base implementation of `_.assignIn` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object);}/**
	     * The base implementation of `assignValue` and `assignMergeValue` without
	     * value checks.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */function baseAssignValue(object,key,value){if(key=='__proto__'&&defineProperty){defineProperty(object,key,{'configurable':true,'enumerable':true,'value':value,'writable':true});}else{object[key]=value;}}/**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Array} Returns the picked elements.
	     */function baseAt(object,paths){var index=-1,length=paths.length,result=Array(length),skip=object==null;while(++index<length){result[index]=skip?undefined$1:get(object,paths[index]);}return result;}/**
	     * The base implementation of `_.clamp` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */function baseClamp(number,lower,upper){if(number===number){if(upper!==undefined$1){number=number<=upper?number:upper;}if(lower!==undefined$1){number=number>=lower?number:lower;}}return number;}/**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Deep clone
	     *  2 - Flatten inherited properties
	     *  4 - Clone symbols
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}if(result!==undefined$1){return result;}if(!isObject(value)){return value;}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else{var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep);}if(tag==objectTag||tag==argsTag||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value));}}else{if(!cloneableTags[tag]){return object?value:{};}result=initCloneByTag(value,tag,isDeep);}}// Check for circular references and return its corresponding clone.
stack||(stack=new Stack());var stacked=stack.get(value);if(stacked){return stacked;}stack.set(value,result);if(isSet(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack));});}else if(isMap(value)){value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack));});}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys;var props=isArr?undefined$1:keysFunc(value);arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key];}// Recursively populate clone (susceptible to call stack limits).
assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack));});return result;}/**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */function baseConforms(source){var props=keys(source);return function(object){return baseConformsTo(object,source,props);};}/**
	     * The base implementation of `_.conformsTo` which accepts `props` to check.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     */function baseConformsTo(object,source,props){var length=props.length;if(object==null){return!length;}object=Object(object);while(length--){var key=props[length],predicate=source[key],value=object[key];if(value===undefined$1&&!(key in object)||!predicate(value)){return false;}}return true;}/**
	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
	     * to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Array} args The arguments to provide to `func`.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */function baseDelay(func,wait,args){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return setTimeout(function(){func.apply(undefined$1,args);},wait);}/**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */function baseDifference(array,values,iteratee,comparator){var index=-1,includes=arrayIncludes,isCommon=true,length=array.length,result=[],valuesLength=values.length;if(!length){return result;}if(iteratee){values=arrayMap(values,baseUnary(iteratee));}if(comparator){includes=arrayIncludesWith;isCommon=false;}else if(values.length>=LARGE_ARRAY_SIZE){includes=cacheHas;isCommon=false;values=new SetCache(values);}outer:while(++index<length){var value=array[index],computed=iteratee==null?value:iteratee(value);value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var valuesIndex=valuesLength;while(valuesIndex--){if(values[valuesIndex]===computed){continue outer;}}result.push(value);}else if(!includes(values,computed,comparator)){result.push(value);}}return result;}/**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */var baseEach=createBaseEach(baseForOwn);/**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */var baseEachRight=createBaseEach(baseForOwnRight,true);/**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */function baseEvery(collection,predicate){var result=true;baseEach(collection,function(value,index,collection){result=!!predicate(value,index,collection);return result;});return result;}/**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined$1?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value;}}return result;}/**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */function baseFill(array,value,start,end){var length=array.length;start=toInteger(start);if(start<0){start=-start>length?0:length+start;}end=end===undefined$1||end>length?length:toInteger(end);if(end<0){end+=length;}end=start>end?0:toLength(end);while(start<end){array[start++]=value;}return array;}/**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value);}});return result;}/**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){// Recursively flatten arrays (susceptible to call stack limits).
baseFlatten(value,depth-1,predicate,isStrict,result);}else{arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}/**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */var baseFor=createBaseFor();/**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */var baseForRight=createBaseFor(true);/**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}/**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */function baseForOwnRight(object,iteratee){return object&&baseForRight(object,iteratee,keys);}/**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */function baseFunctions(object,props){return arrayFilter(props,function(key){return isFunction(object[key]);});}/**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined$1;}/**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}/**
	     * The base implementation of `getTag` without fallbacks for buggy environments.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */function baseGetTag(value){if(value==null){return value===undefined$1?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}/**
	     * The base implementation of `_.gt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */function baseGt(value,other){return value>other;}/**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */function baseHas(object,key){return object!=null&&hasOwnProperty.call(object,key);}/**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */function baseHasIn(object,key){return object!=null&&key in Object(object);}/**
	     * The base implementation of `_.inRange` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */function baseInRange(number,start,end){return number>=nativeMin(start,end)&&number<nativeMax(start,end);}/**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee));}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined$1;}array=arrays[0];var index=-1,seen=caches[0];outer:while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer;}}if(seen){seen.push(computed);}result.push(value);}}return result;}/**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */function baseInverter(object,setter,iteratee,accumulator){baseForOwn(object,function(value,key,object){setter(accumulator,iteratee(value),key,object);});return accumulator;}/**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */function baseInvoke(object,path,args){path=castPath(path,object);object=parent(object,path);var func=object==null?object:object[toKey(last(path))];return func==null?undefined$1:apply(func,object,args);}/**
	     * The base implementation of `_.isArguments`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     */function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag;}/**
	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     */function baseIsArrayBuffer(value){return isObjectLike(value)&&baseGetTag(value)==arrayBufferTag;}/**
	     * The base implementation of `_.isDate` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     */function baseIsDate(value){return isObjectLike(value)&&baseGetTag(value)==dateTag;}/**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Unordered comparison
	     *  2 - Partial comparison
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true;}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);}/**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}/**
	     * The base implementation of `_.isMap` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     */function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag;}/**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return!length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined$1&&!(key in object)){return false;}}else{var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined$1?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false;}}}return true;}/**
	     * The base implementation of `_.isNative` without bad shim checks.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}/**
	     * The base implementation of `_.isRegExp` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     */function baseIsRegExp(value){return isObjectLike(value)&&baseGetTag(value)==regexpTag;}/**
	     * The base implementation of `_.isSet` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     */function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag;}/**
	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}/**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
if(typeof value=='function'){return value;}if(value==null){return identity;}if(typeof value=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}/**
	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!='constructor'){result.push(key);}}return result;}/**
	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */function baseKeysIn(object){if(!isObject(object)){return nativeKeysIn(object);}var isProto=isPrototype(object),result=[];for(var key in object){if(!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key);}}return result;}/**
	     * The base implementation of `_.lt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */function baseLt(value,other){return value<other;}/**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;}/**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};}/**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined$1&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG);};}/**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return;}baseFor(source,function(srcValue,key){stack||(stack=new Stack());if(isObject(srcValue)){baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else{var newValue=customizer?customizer(safeGet(object,key),srcValue,key+'',object,source,stack):undefined$1;if(newValue===undefined$1){newValue=srcValue;}assignMergeValue(object,key,newValue);}},keysIn);}/**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=safeGet(object,key),srcValue=safeGet(source,key),stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return;}var newValue=customizer?customizer(objValue,srcValue,key+'',object,source,stack):undefined$1;var isCommon=newValue===undefined$1;if(isCommon){var isArr=isArray(srcValue),isBuff=!isArr&&isBuffer(srcValue),isTyped=!isArr&&!isBuff&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isBuff||isTyped){if(isArray(objValue)){newValue=objValue;}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue);}else if(isBuff){isCommon=false;newValue=cloneBuffer(srcValue,true);}else if(isTyped){isCommon=false;newValue=cloneTypedArray(srcValue,true);}else{newValue=[];}}else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue)){newValue=toPlainObject(objValue);}else if(!isObject(objValue)||isFunction(objValue)){newValue=initCloneObject(srcValue);}}else{isCommon=false;}}if(isCommon){// Recursively merge objects and arrays (susceptible to call stack limits).
stack.set(srcValue,newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack['delete'](srcValue);}assignMergeValue(object,key,newValue);}/**
	     * The base implementation of `_.nth` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */function baseNth(array,n){var length=array.length;if(!length){return;}n+=n<0?length:0;return isIndex(n,length)?array[n]:undefined$1;}/**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */function baseOrderBy(collection,iteratees,orders){if(iteratees.length){iteratees=arrayMap(iteratees,function(iteratee){if(isArray(iteratee)){return function(value){return baseGet(value,iteratee.length===1?iteratee[0]:iteratee);};}return iteratee;});}else{iteratees=[identity];}var index=-1;iteratees=arrayMap(iteratees,baseUnary(getIteratee()));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return{'criteria':criteria,'index':++index,'value':value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}/**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Object} Returns the new object.
	     */function basePick(object,paths){return basePickBy(object,paths,function(value,path){return hasIn(object,path);});}/**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */function basePickBy(object,paths,predicate){var index=-1,length=paths.length,result={};while(++index<length){var path=paths[index],value=baseGet(object,path);if(predicate(value,path)){baseSet(result,castPath(path,object),value);}}return result;}/**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */function basePropertyDeep(path){return function(object){return baseGet(object,path);};}/**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */function basePullAll(array,values,iteratee,comparator){var indexOf=comparator?baseIndexOfWith:baseIndexOf,index=-1,length=values.length,seen=array;if(array===values){values=copyArray(values);}if(iteratee){seen=arrayMap(array,baseUnary(iteratee));}while(++index<length){var fromIndex=0,value=values[index],computed=iteratee?iteratee(value):value;while((fromIndex=indexOf(seen,computed,fromIndex,comparator))>-1){if(seen!==array){splice.call(seen,fromIndex,1);}splice.call(array,fromIndex,1);}}return array;}/**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */function basePullAt(array,indexes){var length=array?indexes.length:0,lastIndex=length-1;while(length--){var index=indexes[length];if(length==lastIndex||index!==previous){var previous=index;if(isIndex(index)){splice.call(array,index,1);}else{baseUnset(array,index);}}}return array;}/**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */function baseRandom(lower,upper){return lower+nativeFloor(nativeRandom()*(upper-lower+1));}/**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step;}return result;}/**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */function baseRepeat(string,n){var result='';if(!string||n<1||n>MAX_SAFE_INTEGER){return result;}// Leverage the exponentiation by squaring algorithm for a faster repeat.
// See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
do{if(n%2){result+=string;}n=nativeFloor(n/2);if(n){string+=string;}}while(n);return result;}/**
	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     */function baseRest(func,start){return setToString(overRest(func,start,identity),func+'');}/**
	     * The base implementation of `_.sample`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     */function baseSample(collection){return arraySample(values(collection));}/**
	     * The base implementation of `_.sampleSize` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */function baseSampleSize(collection,n){var array=values(collection);return shuffleSelf(array,baseClamp(n,0,array.length));}/**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */function baseSet(object,path,value,customizer){if(!isObject(object)){return object;}path=castPath(path,object);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]),newValue=value;if(key==='__proto__'||key==='constructor'||key==='prototype'){return object;}if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined$1;if(newValue===undefined$1){newValue=isObject(objValue)?objValue:isIndex(path[index+1])?[]:{};}}assignValue(nested,key,newValue);nested=nested[key];}return object;}/**
	     * The base implementation of `setData` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */var baseSetData=!metaMap?identity:function(func,data){metaMap.set(func,data);return func;};/**
	     * The base implementation of `setToString` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,'toString',{'configurable':true,'enumerable':false,'value':constant(string),'writable':true});};/**
	     * The base implementation of `_.shuffle`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */function baseShuffle(collection){return shuffleSelf(values(collection));}/**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;}/**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */function baseSome(collection,predicate){var result;baseEach(collection,function(value,index,collection){result=predicate(value,index,collection);return!result;});return!!result;}/**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */function baseSortedIndex(array,value,retHighest){var low=0,high=array==null?low:array.length;if(typeof value=='number'&&value===value&&high<=HALF_MAX_ARRAY_LENGTH){while(low<high){var mid=low+high>>>1,computed=array[mid];if(computed!==null&&!isSymbol(computed)&&(retHighest?computed<=value:computed<value)){low=mid+1;}else{high=mid;}}return high;}return baseSortedIndexBy(array,value,identity,retHighest);}/**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */function baseSortedIndexBy(array,value,iteratee,retHighest){var low=0,high=array==null?0:array.length;if(high===0){return 0;}value=iteratee(value);var valIsNaN=value!==value,valIsNull=value===null,valIsSymbol=isSymbol(value),valIsUndefined=value===undefined$1;while(low<high){var mid=nativeFloor((low+high)/2),computed=iteratee(array[mid]),othIsDefined=computed!==undefined$1,othIsNull=computed===null,othIsReflexive=computed===computed,othIsSymbol=isSymbol(computed);if(valIsNaN){var setLow=retHighest||othIsReflexive;}else if(valIsUndefined){setLow=othIsReflexive&&(retHighest||othIsDefined);}else if(valIsNull){setLow=othIsReflexive&&othIsDefined&&(retHighest||!othIsNull);}else if(valIsSymbol){setLow=othIsReflexive&&othIsDefined&&!othIsNull&&(retHighest||!othIsSymbol);}else if(othIsNull||othIsSymbol){setLow=false;}else{setLow=retHighest?computed<=value:computed<value;}if(setLow){low=mid+1;}else{high=mid;}}return nativeMin(high,MAX_ARRAY_INDEX);}/**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */function baseSortedUniq(array,iteratee){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;if(!index||!eq(computed,seen)){var seen=computed;result[resIndex++]=value===0?0:value;}}return result;}/**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */function baseToNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}return+value;}/**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.
if(typeof value=='string'){return value;}if(isArray(value)){// Recursively convert values (susceptible to call stack limits).
return arrayMap(value,baseToString)+'';}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set);}isCommon=false;includes=cacheHas;seen=new SetCache();}else{seen=iteratee?[]:result;}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}if(iteratee){seen.push(computed);}result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}result.push(value);}}return result;}/**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The property path to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */function baseUnset(object,path){path=castPath(path,object);object=parent(object,path);return object==null||delete object[toKey(last(path))];}/**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */function baseUpdate(object,path,updater,customizer){return baseSet(object,path,updater(baseGet(object,path)),customizer);}/**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */function baseWhile(array,predicate,isDrop,fromRight){var length=array.length,index=fromRight?length:-1;while((fromRight?index--:++index<length)&&predicate(array[index],index,array)){}return isDrop?baseSlice(array,fromRight?0:index,fromRight?index+1:length):baseSlice(array,fromRight?index+1:0,fromRight?length:index);}/**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */function baseWrapperValue(value,actions){var result=value;if(result instanceof LazyWrapper){result=result.value();}return arrayReduce(actions,function(result,action){return action.func.apply(action.thisArg,arrayPush([result],action.args));},result);}/**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */function baseXor(arrays,iteratee,comparator){var length=arrays.length;if(length<2){return length?baseUniq(arrays[0]):[];}var index=-1,result=Array(length);while(++index<length){var array=arrays[index],othIndex=-1;while(++othIndex<length){if(othIndex!=index){result[index]=baseDifference(result[index]||array,arrays[othIndex],iteratee,comparator);}}}return baseUniq(baseFlatten(result,1),iteratee,comparator);}/**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:undefined$1;assignFunc(result,props[index],value);}return result;}/**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[];}/**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */function castFunction(value){return typeof value=='function'?value:identity;}/**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {Array} Returns the cast property path array.
	     */function castPath(value,object){if(isArray(value)){return value;}return isKey(value,object)?[value]:stringToPath(toString(value));}/**
	     * A `baseRest` alias which can be replaced with `identity` by module
	     * replacement plugins.
	     *
	     * @private
	     * @type {Function}
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */var castRest=baseRest;/**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */function castSlice(array,start,end){var length=array.length;end=end===undefined$1?length:end;return!start&&end>=length?array:baseSlice(array,start,end);}/**
	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
	     *
	     * @private
	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
	     */var clearTimeout=ctxClearTimeout||function(id){return root.clearTimeout(id);};/**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result;}/**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result;}/**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}/**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;}/**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{};}/**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);}/**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined$1,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined$1,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return-1;}}return 0;}/**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
// that causes it, under certain circumstances, to provide the same value for
// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
// for more details.
//
// This also ensures a stable sort in V8 and other engines.
// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
return object.index-other.index;}/**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */function composeArgs(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersLength=holders.length,leftIndex=-1,leftLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(leftLength+rangeLength),isUncurried=!isCurried;while(++leftIndex<leftLength){result[leftIndex]=partials[leftIndex];}while(++argsIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[holders[argsIndex]]=args[argsIndex];}}while(rangeLength--){result[leftIndex++]=args[argsIndex++];}return result;}/**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */function composeArgsRight(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersIndex=-1,holdersLength=holders.length,rightIndex=-1,rightLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(rangeLength+rightLength),isUncurried=!isCurried;while(++argsIndex<rangeLength){result[argsIndex]=args[argsIndex];}var offset=argsIndex;while(++rightIndex<rightLength){result[offset+rightIndex]=partials[rightIndex];}while(++holdersIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[offset+holders[holdersIndex]]=args[argsIndex++];}}return result;}/**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index];}return array;}/**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined$1;if(newValue===undefined$1){newValue=source[key];}if(isNew){baseAssignValue(object,key,newValue);}else{assignValue(object,key,newValue);}}return object;}/**
	     * Copies own symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */function copySymbols(source,object){return copyObject(source,getSymbols(source),object);}/**
	     * Copies own and inherited symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn(source),object);}/**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */function createAggregator(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,getIteratee(iteratee,2),accumulator);};}/**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */function createAssigner(assigner){return baseRest(function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined$1,guard=length>2?sources[2]:undefined$1;customizer=assigner.length>3&&typeof customizer=='function'?(length--,customizer):undefined$1;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined$1:customizer;length=1;}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer);}}return object;});}/**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}/**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}/**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createBind(func,bitmask,thisArg){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return fn.apply(isBind?thisArg:this,arguments);}return wrapper;}/**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */function createCaseFirst(methodName){return function(string){string=toString(string);var strSymbols=hasUnicode(string)?stringToArray(string):undefined$1;var chr=strSymbols?strSymbols[0]:string.charAt(0);var trailing=strSymbols?castSlice(strSymbols,1).join(''):string.slice(1);return chr[methodName]()+trailing;};}/**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */function createCompounder(callback){return function(string){return arrayReduce(words(deburr(string).replace(reApos,'')),callback,'');};}/**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */function createCtor(Ctor){return function(){// Use a `switch` statement to work with class constructors. See
// http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
// for more details.
var args=arguments;switch(args.length){case 0:return new Ctor();case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],args[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}var thisBinding=baseCreate(Ctor.prototype),result=Ctor.apply(thisBinding,args);// Mimic the constructor's `return` behavior.
// See https://es5.github.io/#x13.2.2 for more details.
return isObject(result)?result:thisBinding;};}/**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createCurry(func,bitmask,arity){var Ctor=createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length,placeholder=getHolder(wrapper);while(index--){args[index]=arguments[index];}var holders=length<3&&args[0]!==placeholder&&args[length-1]!==placeholder?[]:replaceHolders(args,placeholder);length-=holders.length;if(length<arity){return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,undefined$1,args,holders,undefined$1,undefined$1,arity-length);}var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return apply(fn,this,args);}return wrapper;}/**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} findIndexFunc The function to find the collection index.
	     * @returns {Function} Returns the new find function.
	     */function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=getIteratee(predicate,3);collection=keys(collection);predicate=function(key){return iteratee(iterable[key],key,iterable);};}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined$1;};}/**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */function createFlow(fromRight){return flatRest(function(funcs){var length=funcs.length,index=length,prereq=LodashWrapper.prototype.thru;if(fromRight){funcs.reverse();}while(index--){var func=funcs[index];if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(prereq&&!wrapper&&getFuncName(func)=='wrapper'){var wrapper=new LodashWrapper([],true);}}index=wrapper?index:length;while(++index<length){func=funcs[index];var funcName=getFuncName(func),data=funcName=='wrapper'?getData(func):undefined$1;if(data&&isLaziable(data[0])&&data[1]==(WRAP_ARY_FLAG|WRAP_CURRY_FLAG|WRAP_PARTIAL_FLAG|WRAP_REARG_FLAG)&&!data[4].length&&data[9]==1){wrapper=wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else{wrapper=func.length==1&&isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}return function(){var args=arguments,value=args[0];if(wrapper&&args.length==1&&isArray(value)){return wrapper.plant(value).value();}var index=0,result=length?funcs[index].apply(this,args):value;while(++index<length){result=funcs[index].call(this,result);}return result;};});}/**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createHybrid(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){var isAry=bitmask&WRAP_ARY_FLAG,isBind=bitmask&WRAP_BIND_FLAG,isBindKey=bitmask&WRAP_BIND_KEY_FLAG,isCurried=bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG),isFlip=bitmask&WRAP_FLIP_FLAG,Ctor=isBindKey?undefined$1:createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length;while(index--){args[index]=arguments[index];}if(isCurried){var placeholder=getHolder(wrapper),holdersCount=countHolders(args,placeholder);}if(partials){args=composeArgs(args,partials,holders,isCurried);}if(partialsRight){args=composeArgsRight(args,partialsRight,holdersRight,isCurried);}length-=holdersCount;if(isCurried&&length<arity){var newHolders=replaceHolders(args,placeholder);return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,thisArg,args,newHolders,argPos,ary,arity-length);}var thisBinding=isBind?thisArg:this,fn=isBindKey?thisBinding[func]:func;length=args.length;if(argPos){args=reorder(args,argPos);}else if(isFlip&&length>1){args.reverse();}if(isAry&&ary<length){args.length=ary;}if(this&&this!==root&&this instanceof wrapper){fn=Ctor||createCtor(fn);}return fn.apply(thisBinding,args);}return wrapper;}/**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */function createInverter(setter,toIteratee){return function(object,iteratee){return baseInverter(object,setter,toIteratee(iteratee),{});};}/**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @param {number} [defaultValue] The value used for `undefined` arguments.
	     * @returns {Function} Returns the new mathematical operation function.
	     */function createMathOperation(operator,defaultValue){return function(value,other){var result;if(value===undefined$1&&other===undefined$1){return defaultValue;}if(value!==undefined$1){result=value;}if(other!==undefined$1){if(result===undefined$1){return other;}if(typeof value=='string'||typeof other=='string'){value=baseToString(value);other=baseToString(other);}else{value=baseToNumber(value);other=baseToNumber(other);}result=operator(value,other);}return result;};}/**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */function createOver(arrayFunc){return flatRest(function(iteratees){iteratees=arrayMap(iteratees,baseUnary(getIteratee()));return baseRest(function(args){var thisArg=this;return arrayFunc(iteratees,function(iteratee){return apply(iteratee,thisArg,args);});});});}/**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */function createPadding(length,chars){chars=chars===undefined$1?' ':baseToString(chars);var charsLength=chars.length;if(charsLength<2){return charsLength?baseRepeat(chars,length):chars;}var result=baseRepeat(chars,nativeCeil(length/stringSize(chars)));return hasUnicode(chars)?castSlice(stringToArray(result),0,length).join(''):result.slice(0,length);}/**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */function createPartial(func,bitmask,thisArg,partials){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var argsIndex=-1,argsLength=arguments.length,leftIndex=-1,leftLength=partials.length,args=Array(leftLength+argsLength),fn=this&&this!==root&&this instanceof wrapper?Ctor:func;while(++leftIndex<leftLength){args[leftIndex]=partials[leftIndex];}while(argsLength--){args[leftIndex++]=arguments[++argsIndex];}return apply(fn,isBind?thisArg:this,args);}return wrapper;}/**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */function createRange(fromRight){return function(start,end,step){if(step&&typeof step!='number'&&isIterateeCall(start,end,step)){end=step=undefined$1;}// Ensure the sign of `-0` is preserved.
start=toFinite(start);if(end===undefined$1){end=start;start=0;}else{end=toFinite(end);}step=step===undefined$1?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight);};}/**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */function createRelationalOperation(operator){return function(value,other){if(!(typeof value=='string'&&typeof other=='string')){value=toNumber(value);other=toNumber(other);}return operator(value,other);};}/**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createRecurry(func,bitmask,wrapFunc,placeholder,thisArg,partials,holders,argPos,ary,arity){var isCurry=bitmask&WRAP_CURRY_FLAG,newHolders=isCurry?holders:undefined$1,newHoldersRight=isCurry?undefined$1:holders,newPartials=isCurry?partials:undefined$1,newPartialsRight=isCurry?undefined$1:partials;bitmask|=isCurry?WRAP_PARTIAL_FLAG:WRAP_PARTIAL_RIGHT_FLAG;bitmask&=~(isCurry?WRAP_PARTIAL_RIGHT_FLAG:WRAP_PARTIAL_FLAG);if(!(bitmask&WRAP_CURRY_BOUND_FLAG)){bitmask&=~(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG);}var newData=[func,bitmask,thisArg,newPartials,newHolders,newPartialsRight,newHoldersRight,argPos,ary,arity];var result=wrapFunc.apply(undefined$1,newData);if(isLaziable(func)){setData(result,newData);}result.placeholder=placeholder;return setWrapToString(result,func,bitmask);}/**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */function createRound(methodName){var func=Math[methodName];return function(number,precision){number=toNumber(number);precision=precision==null?0:nativeMin(toInteger(precision),292);if(precision&&nativeIsFinite(number)){// Shift with exponential notation to avoid floating-point issues.
// See [MDN](https://mdn.io/round#Examples) for more details.
var pair=(toString(number)+'e').split('e'),value=func(pair[0]+'e'+(+pair[1]+precision));pair=(toString(value)+'e').split('e');return+(pair[0]+'e'+(+pair[1]-precision));}return func(number);};}/**
	     * Creates a set object of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values);};/**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */function createToPairs(keysFunc){return function(object){var tag=getTag(object);if(tag==mapTag){return mapToArray(object);}if(tag==setTag){return setToPairs(object);}return baseToPairs(object,keysFunc(object));};}/**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags.
	     *    1 - `_.bind`
	     *    2 - `_.bindKey`
	     *    4 - `_.curry` or `_.curryRight` of a bound function
	     *    8 - `_.curry`
	     *   16 - `_.curryRight`
	     *   32 - `_.partial`
	     *   64 - `_.partialRight`
	     *  128 - `_.rearg`
	     *  256 - `_.ary`
	     *  512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createWrap(func,bitmask,thisArg,partials,holders,argPos,ary,arity){var isBindKey=bitmask&WRAP_BIND_KEY_FLAG;if(!isBindKey&&typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var length=partials?partials.length:0;if(!length){bitmask&=~(WRAP_PARTIAL_FLAG|WRAP_PARTIAL_RIGHT_FLAG);partials=holders=undefined$1;}ary=ary===undefined$1?ary:nativeMax(toInteger(ary),0);arity=arity===undefined$1?arity:toInteger(arity);length-=holders?holders.length:0;if(bitmask&WRAP_PARTIAL_RIGHT_FLAG){var partialsRight=partials,holdersRight=holders;partials=holders=undefined$1;}var data=isBindKey?undefined$1:getData(func);var newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];if(data){mergeData(newData,data);}func=newData[0];bitmask=newData[1];thisArg=newData[2];partials=newData[3];holders=newData[4];arity=newData[9]=newData[9]===undefined$1?isBindKey?0:func.length:nativeMax(newData[9]-length,0);if(!arity&&bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG)){bitmask&=~(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG);}if(!bitmask||bitmask==WRAP_BIND_FLAG){var result=createBind(func,bitmask,thisArg);}else if(bitmask==WRAP_CURRY_FLAG||bitmask==WRAP_CURRY_RIGHT_FLAG){result=createCurry(func,bitmask,arity);}else if((bitmask==WRAP_PARTIAL_FLAG||bitmask==(WRAP_BIND_FLAG|WRAP_PARTIAL_FLAG))&&!holders.length){result=createPartial(func,bitmask,thisArg,partials);}else{result=createHybrid.apply(undefined$1,newData);}var setter=data?baseSetData:setData;return setWrapToString(setter(result,newData),func,bitmask);}/**
	     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
	     * of source objects to the destination object for all destination properties
	     * that resolve to `undefined`.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */function customDefaultsAssignIn(objValue,srcValue,key,object){if(objValue===undefined$1||eq(objValue,objectProto[key])&&!hasOwnProperty.call(object,key)){return srcValue;}return objValue;}/**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
	     * objects into destination objects that are passed thru.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */function customDefaultsMerge(objValue,srcValue,key,object,source,stack){if(isObject(objValue)&&isObject(srcValue)){// Recursively merge objects and arrays (susceptible to call stack limits).
stack.set(srcValue,objValue);baseMerge(objValue,srcValue,undefined$1,customDefaultsMerge,stack);stack['delete'](srcValue);}return objValue;}/**
	     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	     * objects.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {string} key The key of the property to inspect.
	     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	     */function customOmitClone(value){return isPlainObject(value)?undefined$1:value;}/**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}// Check that cyclic values are equal.
var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array;}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache():undefined$1;stack.set(array,other);stack.set(other,array);// Ignore non-index properties.
while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined$1){if(compared){continue;}result=false;break;}// Recursively compare arrays (susceptible to call stack limits).
if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}stack['delete'](array);stack['delete'](other);return result;}/**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.
// Invalid dates are coerced to `NaN`.
return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,
// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
// for more details.
return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}// Assume cyclic values are equal.
var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=COMPARE_UNORDERED_FLAG;// Recursively compare objects (susceptible to call stack limits).
stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}/**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false;}}// Check that cyclic values are equal.
var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object;}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}// Recursively compare objects (susceptible to call stack limits).
if(!(compared===undefined$1?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;// Non `Object` object instances with different constructors are not equal.
if(objCtor!=othCtor&&'constructor'in object&&'constructor'in other&&!(typeof objCtor=='function'&&objCtor instanceof objCtor&&typeof othCtor=='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);stack['delete'](other);return result;}/**
	     * A specialized version of `baseRest` which flattens the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */function flatRest(func){return setToString(overRest(func,undefined$1,flatten),func+'');}/**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}/**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn);}/**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */var getData=!metaMap?noop:function(func){return metaMap.get(func);};/**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */function getFuncName(func){var result=func.name+'',array=realNames[result],length=hasOwnProperty.call(realNames,result)?array.length:0;while(length--){var data=array[length],otherFunc=data.func;if(otherFunc==null||otherFunc==func){return data.name;}}return result;}/**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */function getHolder(func){var object=hasOwnProperty.call(lodash,'placeholder')?lodash:func;return object.placeholder;}/**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */function getIteratee(){var result=lodash.iteratee||iteratee;result=result===iteratee?baseIteratee:result;return arguments.length?result(arguments[0],arguments[1]):result;}/**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;}/**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)];}return result;}/**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined$1;}/**
	     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the raw `toStringTag`.
	     */function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined$1;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag;}else{delete value[symToStringTag];}}return result;}/**
	     * Creates an array of the own enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return[];}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol);});};/**
	     * Creates an array of the own and inherited enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */var getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object);}return result;};/**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */var getTag=baseGetTag;// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined$1,ctorString=Ctor?toSource(Ctor):'';if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};}/**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */function getView(start,end,transforms){var index=-1,length=transforms.length;while(++index<length){var data=transforms[index],size=data.size;switch(data.type){case'drop':start+=size;break;case'dropRight':end-=size;break;case'take':end=nativeMin(end,start+size);break;case'takeRight':start=nativeMax(start,end-size);break;}}return{'start':start,'end':end};}/**
	     * Extracts wrapper details from the `source` body comment.
	     *
	     * @private
	     * @param {string} source The source to inspect.
	     * @returns {Array} Returns the wrapper details.
	     */function getWrapDetails(source){var match=source.match(reWrapDetails);return match?match[1].split(reSplitDetails):[];}/**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result||++index!=length){return result;}length=object==null?0:object.length;return!!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object));}/**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */function initCloneArray(array){var length=array.length,result=new array.constructor(length);// Add properties assigned by `RegExp#exec`.
if(length&&typeof array[0]=='string'&&hasOwnProperty.call(array,'index')){result.index=array.index;result.input=array.input;}return result;}/**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */function initCloneObject(object){return typeof object.constructor=='function'&&!isPrototype(object)?baseCreate(getPrototype(object)):{};}/**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return new Ctor();case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return new Ctor();case symbolTag:return cloneSymbol(object);}}/**
	     * Inserts wrapper `details` in a comment at the top of the `source` body.
	     *
	     * @private
	     * @param {string} source The source to modify.
	     * @returns {Array} details The details to insert.
	     * @returns {string} Returns the modified source.
	     */function insertWrapDetails(source,details){var length=details.length;if(!length){return source;}var lastIndex=length-1;details[lastIndex]=(length>1?'& ':'')+details[lastIndex];details=details.join(length>2?', ':' ');return source.replace(reWrapComment,'{\n/* [wrapped with '+details+'] */\n');}/**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}/**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */function isIndex(value,length){var type=typeof value;length=length==null?MAX_SAFE_INTEGER:length;return!!length&&(type=='number'||type!='symbol'&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}/**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=typeof index;if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}/**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value;if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}/**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */function isKeyable(value){var type=typeof value;return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}/**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */function isLaziable(func){var funcName=getFuncName(func),other=lodash[funcName];if(typeof other!='function'||!(funcName in LazyWrapper.prototype)){return false;}if(func===other){return true;}var data=getData(other);return!!data&&func===data[0];}/**
	     * Checks if `func` has its source masked.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	     */function isMasked(func){return!!maskSrcKey&&maskSrcKey in func;}/**
	     * Checks if `func` is capable of being masked.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
	     */var isMaskable=coreJsData?isFunction:stubFalse;/**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;return value===proto;}/**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */function isStrictComparable(value){return value===value&&!isObject(value);}/**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined$1||key in Object(object));};}/**
	     * A specialized version of `_.memoize` which clears the memoized function's
	     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	     *
	     * @private
	     * @param {Function} func The function to have its output memoized.
	     * @returns {Function} Returns the new memoized function.
	     */function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear();}return key;});var cache=result.cache;return result;}/**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */function mergeData(data,source){var bitmask=data[1],srcBitmask=source[1],newBitmask=bitmask|srcBitmask,isCommon=newBitmask<(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG|WRAP_ARY_FLAG);var isCombo=srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_CURRY_FLAG||srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_REARG_FLAG&&data[7].length<=source[8]||srcBitmask==(WRAP_ARY_FLAG|WRAP_REARG_FLAG)&&source[7].length<=source[8]&&bitmask==WRAP_CURRY_FLAG;// Exit early if metadata can't be merged.
if(!(isCommon||isCombo)){return data;}// Use source `thisArg` if available.
if(srcBitmask&WRAP_BIND_FLAG){data[2]=source[2];// Set when currying a bound function.
newBitmask|=bitmask&WRAP_BIND_FLAG?0:WRAP_CURRY_BOUND_FLAG;}// Compose partial arguments.
var value=source[3];if(value){var partials=data[3];data[3]=partials?composeArgs(partials,value,source[4]):value;data[4]=partials?replaceHolders(data[3],PLACEHOLDER):source[4];}// Compose partial right arguments.
value=source[5];if(value){partials=data[5];data[5]=partials?composeArgsRight(partials,value,source[6]):value;data[6]=partials?replaceHolders(data[5],PLACEHOLDER):source[6];}// Use source `argPos` if available.
value=source[7];if(value){data[7]=value;}// Use source `ary` if it's smaller.
if(srcBitmask&WRAP_ARY_FLAG){data[8]=data[8]==null?source[8]:nativeMin(data[8],source[8]);}// Use source `arity` if one is not provided.
if(data[9]==null){data[9]=source[9];}// Use source `func` and merge bitmasks.
data[0]=source[0];data[1]=newBitmask;return data;}/**
	     * This function is like
	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * except that it includes inherited enumerable properties.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key);}}return result;}/**
	     * Converts `value` to a string using `Object.prototype.toString`.
	     *
	     * @private
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     */function objectToString(value){return nativeObjectToString.call(value);}/**
	     * A specialized version of `baseRest` which transforms the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @param {Function} transform The rest array transform.
	     * @returns {Function} Returns the new function.
	     */function overRest(func,start,transform){start=nativeMax(start===undefined$1?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}/**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */function parent(object,path){return path.length<2?object:baseGet(object,baseSlice(path,0,-1));}/**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */function reorder(array,indexes){var arrLength=array.length,length=nativeMin(indexes.length,arrLength),oldArray=copyArray(array);while(length--){var index=indexes[length];array[length]=isIndex(index,arrLength)?oldArray[index]:undefined$1;}return array;}/**
	     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the property to get.
	     * @returns {*} Returns the property value.
	     */function safeGet(object,key){if(key==='constructor'&&typeof object[key]==='function'){return;}if(key=='__proto__'){return;}return object[key];}/**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */var setData=shortOut(baseSetData);/**
	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */var setTimeout=ctxSetTimeout||function(func,wait){return root.setTimeout(func,wait);};/**
	     * Sets the `toString` method of `func` to return `string`.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */var setToString=shortOut(baseSetToString);/**
	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	     * with wrapper details in a comment at the top of the source body.
	     *
	     * @private
	     * @param {Function} wrapper The function to modify.
	     * @param {Function} reference The reference function.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Function} Returns `wrapper`.
	     */function setWrapToString(wrapper,reference,bitmask){var source=reference+'';return setToString(wrapper,insertWrapDetails(source,updateWrapDetails(getWrapDetails(source),bitmask)));}/**
	     * Creates a function that'll short out and invoke `identity` instead
	     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	     * milliseconds.
	     *
	     * @private
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new shortable function.
	     */function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else{count=0;}return func.apply(undefined$1,arguments);};}/**
	     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @param {number} [size=array.length] The size of `array`.
	     * @returns {Array} Returns `array`.
	     */function shuffleSelf(array,size){var index=-1,length=array.length,lastIndex=length-1;size=size===undefined$1?length:size;while(++index<size){var rand=baseRandom(index,lastIndex),value=array[rand];array[rand]=array[index];array[index]=value;}array.length=size;return array;}/**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46/* . */){result.push('');}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,'$1'):number||match);});return result;});/**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to convert.
	     * @returns {string} Returns the source code.
	     */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return'';}/**
	     * Updates wrapper `details` based on `bitmask` flags.
	     *
	     * @private
	     * @returns {Array} details The details to modify.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Array} Returns `details`.
	     */function updateWrapDetails(details,bitmask){arrayEach(wrapFlags,function(pair){var value='_.'+pair[0];if(bitmask&pair[1]&&!arrayIncludes(details,value)){details.push(value);}});return details.sort();}/**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */function wrapperClone(wrapper){if(wrapper instanceof LazyWrapper){return wrapper.clone();}var result=new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__);result.__actions__=copyArray(wrapper.__actions__);result.__index__=wrapper.__index__;result.__values__=wrapper.__values__;return result;}/*------------------------------------------------------------------------*/ /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */function chunk(array,size,guard){if(guard?isIterateeCall(array,size,guard):size===undefined$1){size=1;}else{size=nativeMax(toInteger(size),0);}var length=array==null?0:array.length;if(!length||size<1){return[];}var index=0,resIndex=0,result=Array(nativeCeil(length/size));while(index<length){result[resIndex++]=baseSlice(array,index,index+=size);}return result;}/**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */function compact(array){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value){result[resIndex++]=value;}}return result;}/**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */function concat(){var length=arguments.length;if(!length){return[];}var args=Array(length-1),array=arguments[0],index=length;while(index--){args[index-1]=arguments[index];}return arrayPush(isArray(array)?copyArray(array):[array],baseFlatten(args,1));}/**
	     * Creates an array of `array` values not included in the other given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([2, 1], [2, 3]);
	     * // => [1]
	     */var difference=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true)):[];});/**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */var differenceBy=baseRest(function(array,values){var iteratee=last(values);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),getIteratee(iteratee,2)):[];});/**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. The order and
	     * references of result values are determined by the first array. The comparator
	     * is invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */var differenceWith=baseRest(function(array,values){var comparator=last(values);if(isArrayLikeObject(comparator)){comparator=undefined$1;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),undefined$1,comparator):[];});/**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */function drop(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined$1?1:toInteger(n);return baseSlice(array,n<0?0:n,length);}/**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */function dropRight(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined$1?1:toInteger(n);n=length-n;return baseSlice(array,0,n<0?0:n);}/**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */function dropRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true,true):[];}/**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */function dropWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true):[];}/**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */function fill(array,value,start,end){var length=array==null?0:array.length;if(!length){return[];}if(start&&typeof start!='number'&&isIterateeCall(array,value,start)){start=0;end=length;}return baseFill(array,value,start,end);}/**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */function findIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseFindIndex(array,getIteratee(predicate,3),index);}/**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */function findLastIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=length-1;if(fromIndex!==undefined$1){index=toInteger(fromIndex);index=fromIndex<0?nativeMax(length+index,0):nativeMin(index,length-1);}return baseFindIndex(array,getIteratee(predicate,3),index,true);}/**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */function flatten(array){var length=array==null?0:array.length;return length?baseFlatten(array,1):[];}/**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */function flattenDeep(array){var length=array==null?0:array.length;return length?baseFlatten(array,INFINITY):[];}/**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */function flattenDepth(array,depth){var length=array==null?0:array.length;if(!length){return[];}depth=depth===undefined$1?1:toInteger(depth);return baseFlatten(array,depth);}/**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['a', 1], ['b', 2]]);
	     * // => { 'a': 1, 'b': 2 }
	     */function fromPairs(pairs){var index=-1,length=pairs==null?0:pairs.length,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}/**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */function head(array){return array&&array.length?array[0]:undefined$1;}/**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */function indexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseIndexOf(array,value,index);}/**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */function initial(array){var length=array==null?0:array.length;return length?baseSlice(array,0,-1):[];}/**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [2, 3]);
	     * // => [2]
	     */var intersection=baseRest(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped):[];});/**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */var intersectionBy=baseRest(function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined$1;}else{mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,getIteratee(iteratee,2)):[];});/**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. The order and references
	     * of result values are determined by the first array. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */var intersectionWith=baseRest(function(arrays){var comparator=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);comparator=typeof comparator=='function'?comparator:undefined$1;if(comparator){mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,undefined$1,comparator):[];});/**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */function join(array,separator){return array==null?'':nativeJoin.call(array,separator);}/**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */function last(array){var length=array==null?0:array.length;return length?array[length-1]:undefined$1;}/**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */function lastIndexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return-1;}var index=length;if(fromIndex!==undefined$1){index=toInteger(fromIndex);index=index<0?nativeMax(length+index,0):nativeMin(index,length-1);}return value===value?strictLastIndexOf(array,value,index):baseFindIndex(array,baseIsNaN,index,true);}/**
	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */function nth(array,n){return array&&array.length?baseNth(array,toInteger(n)):undefined$1;}/**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pull(array, 'a', 'c');
	     * console.log(array);
	     * // => ['b', 'b']
	     */var pull=baseRest(pullAll);/**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pullAll(array, ['a', 'c']);
	     * console.log(array);
	     * // => ['b', 'b']
	     */function pullAll(array,values){return array&&array.length&&values&&values.length?basePullAll(array,values):array;}/**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */function pullAllBy(array,values,iteratee){return array&&array.length&&values&&values.length?basePullAll(array,values,getIteratee(iteratee,2)):array;}/**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */function pullAllWith(array,values,comparator){return array&&array.length&&values&&values.length?basePullAll(array,values,undefined$1,comparator):array;}/**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     * var pulled = _.pullAt(array, [1, 3]);
	     *
	     * console.log(array);
	     * // => ['a', 'c']
	     *
	     * console.log(pulled);
	     * // => ['b', 'd']
	     */var pullAt=flatRest(function(array,indexes){var length=array==null?0:array.length,result=baseAt(array,indexes);basePullAt(array,arrayMap(indexes,function(index){return isIndex(index,length)?+index:index;}).sort(compareAscending));return result;});/**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */function remove(array,predicate){var result=[];if(!(array&&array.length)){return result;}var index=-1,indexes=[],length=array.length;predicate=getIteratee(predicate,3);while(++index<length){var value=array[index];if(predicate(value,index,array)){result.push(value);indexes.push(index);}}basePullAt(array,indexes);return result;}/**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */function reverse(array){return array==null?array:nativeReverse.call(array);}/**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */function slice(array,start,end){var length=array==null?0:array.length;if(!length){return[];}if(end&&typeof end!='number'&&isIterateeCall(array,start,end)){start=0;end=length;}else{start=start==null?0:toInteger(start);end=end===undefined$1?length:toInteger(end);}return baseSlice(array,start,end);}/**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     */function sortedIndex(array,value){return baseSortedIndex(array,value);}/**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 0
	     */function sortedIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2));}/**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 1
	     */function sortedIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value);if(index<length&&eq(array[index],value)){return index;}}return-1;}/**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
	     * // => 4
	     */function sortedLastIndex(array,value){return baseSortedIndex(array,value,true);}/**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 1
	     */function sortedLastIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2),true);}/**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 3
	     */function sortedLastIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value,true)-1;if(eq(array[index],value)){return index;}}return-1;}/**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */function sortedUniq(array){return array&&array.length?baseSortedUniq(array):[];}/**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */function sortedUniqBy(array,iteratee){return array&&array.length?baseSortedUniq(array,getIteratee(iteratee,2)):[];}/**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */function tail(array){var length=array==null?0:array.length;return length?baseSlice(array,1,length):[];}/**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */function take(array,n,guard){if(!(array&&array.length)){return[];}n=guard||n===undefined$1?1:toInteger(n);return baseSlice(array,0,n<0?0:n);}/**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */function takeRight(array,n,guard){var length=array==null?0:array.length;if(!length){return[];}n=guard||n===undefined$1?1:toInteger(n);n=length-n;return baseSlice(array,n<0?0:n,length);}/**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */function takeRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),false,true):[];}/**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */function takeWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3)):[];}/**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2], [1, 2]);
	     * // => [2, 1]
	     */var union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));});/**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. Result values are chosen from the first
	     * array in which the value occurs. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */var unionBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),getIteratee(iteratee,2));});/**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. Result values are chosen from
	     * the first array in which the value occurs. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */var unionWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined$1;return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),undefined$1,comparator);});/**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each element
	     * is kept. The order of result values is determined by the order they occur
	     * in the array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */function uniq(array){return array&&array.length?baseUniq(array):[];}/**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The order of result values is determined by the
	     * order they occur in the array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */function uniqBy(array,iteratee){return array&&array.length?baseUniq(array,getIteratee(iteratee,2)):[];}/**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The order of result values is
	     * determined by the order they occur in the array.The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */function uniqWith(array,comparator){comparator=typeof comparator=='function'?comparator:undefined$1;return array&&array.length?baseUniq(array,undefined$1,comparator):[];}/**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['a', 'b'], [1, 2], [true, false]]
	     */function unzip(array){if(!(array&&array.length)){return[];}var length=0;array=arrayFilter(array,function(group){if(isArrayLikeObject(group)){length=nativeMax(group.length,length);return true;}});return baseTimes(length,function(index){return arrayMap(array,baseProperty(index));});}/**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */function unzipWith(array,iteratee){if(!(array&&array.length)){return[];}var result=unzip(array);if(iteratee==null){return result;}return arrayMap(result,function(group){return apply(iteratee,undefined$1,group);});}/**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.pull`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([2, 1, 2, 3], 1, 2);
	     * // => [3]
	     */var without=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[];});/**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [2, 3]);
	     * // => [1, 3]
	     */var xor=baseRest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject));});/**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The order of result values is determined
	     * by the order they occur in the arrays. The iteratee is invoked with one
	     * argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2, 3.4]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */var xorBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return baseXor(arrayFilter(arrays,isArrayLikeObject),getIteratee(iteratee,2));});/**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The order of result values is
	     * determined by the order they occur in the arrays. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */var xorWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined$1;return baseXor(arrayFilter(arrays,isArrayLikeObject),undefined$1,comparator);});/**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     */var zip=baseRest(unzip);/**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue);}/**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */function zipObjectDeep(props,values){return baseZipObject(props||[],values||[],baseSet);}/**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */var zipWith=baseRest(function(arrays){var length=arrays.length,iteratee=length>1?arrays[length-1]:undefined$1;iteratee=typeof iteratee=='function'?(arrays.pop(),iteratee):undefined$1;return unzipWith(arrays,iteratee);});/*------------------------------------------------------------------------*/ /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */function chain(value){var result=lodash(value);result.__chain__=true;return result;}/**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */function tap(value,interceptor){interceptor(value);return value;}/**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */function thru(value,interceptor){return interceptor(value);}/**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     */var wrapperAt=flatRest(function(paths){var length=paths.length,start=length?paths[0]:0,value=this.__wrapped__,interceptor=function(object){return baseAt(object,paths);};if(length>1||this.__actions__.length||!(value instanceof LazyWrapper)||!isIndex(start)){return this.thru(interceptor);}value=value.slice(start,+start+(length?1:0));value.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined$1});return new LodashWrapper(value,this.__chain__).thru(function(array){if(length&&!array.length){array.push(undefined$1);}return array;});});/**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */function wrapperChain(){return chain(this);}/**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */function wrapperCommit(){return new LodashWrapper(this.value(),this.__chain__);}/**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */function wrapperNext(){if(this.__values__===undefined$1){this.__values__=toArray(this.value());}var done=this.__index__>=this.__values__.length,value=done?undefined$1:this.__values__[this.__index__++];return{'done':done,'value':value};}/**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */function wrapperToIterator(){return this;}/**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */function wrapperPlant(value){var result,parent=this;while(parent instanceof baseLodash){var clone=wrapperClone(parent);clone.__index__=0;clone.__values__=undefined$1;if(result){previous.__wrapped__=clone;}else{result=clone;}var previous=clone;parent=parent.__wrapped__;}previous.__wrapped__=value;return result;}/**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */function wrapperReverse(){var value=this.__wrapped__;if(value instanceof LazyWrapper){var wrapped=value;if(this.__actions__.length){wrapped=new LazyWrapper(this);}wrapped=wrapped.reverse();wrapped.__actions__.push({'func':thru,'args':[reverse],'thisArg':undefined$1});return new LodashWrapper(wrapped,this.__chain__);}return this.thru(reverse);}/**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */function wrapperValue(){return baseWrapperValue(this.__wrapped__,this.__actions__);}/*------------------------------------------------------------------------*/ /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */var countBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){++result[key];}else{baseAssignValue(result,key,1);}});/**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * **Note:** This method returns `true` for
	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	     * elements of empty collections.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */function every(collection,predicate,guard){var func=isArray(collection)?arrayEvery:baseEvery;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined$1;}return func(collection,getIteratee(predicate,3));}/**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * **Note:** Unlike `_.remove`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     *
	     * // Combining several predicates using `_.overEvery` or `_.overSome`.
	     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
	     * // => objects for ['fred', 'barney']
	     */function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,getIteratee(predicate,3));}/**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */var find=createFind(findIndex);/**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=collection.length-1] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */var findLast=createFind(findLastIndex);/**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */function flatMap(collection,iteratee){return baseFlatten(map(collection,iteratee),1);}/**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */function flatMapDeep(collection,iteratee){return baseFlatten(map(collection,iteratee),INFINITY);}/**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */function flatMapDepth(collection,iteratee,depth){depth=depth===undefined$1?1:toInteger(depth);return baseFlatten(map(collection,iteratee),depth);}/**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _.forEach([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,getIteratee(iteratee,3));}/**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */function forEachRight(collection,iteratee){var func=isArray(collection)?arrayEachRight:baseEachRight;return func(collection,getIteratee(iteratee,3));}/**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */var groupBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){result[key].push(value);}else{baseAssignValue(result,key,[value]);}});/**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'a': 1, 'b': 2 }, 1);
	     * // => true
	     *
	     * _.includes('abcd', 'bc');
	     * // => true
	     */function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&baseIndexOf(collection,value,fromIndex)>-1;}/**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `path` is a function, it's invoked
	     * for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */var invokeMap=baseRest(function(collection,path,args){var index=-1,isFunc=typeof path=='function',result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value){result[++index]=isFunc?apply(path,value,args):baseInvoke(value,path,args);});return result;});/**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */var keyBy=createAggregator(function(result,value,key){baseAssignValue(result,key,value);});/**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,getIteratee(iteratee,3));}/**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */function orderBy(collection,iteratees,orders,guard){if(collection==null){return[];}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees];}orders=guard?undefined$1:orders;if(!isArray(orders)){orders=orders==null?[]:[orders];}return baseOrderBy(collection,iteratees,orders);}/**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */var partition=createAggregator(function(result,value,key){result[key?0:1].push(value);},function(){return[[],[]];});/**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEach);}/**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */function reduceRight(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduceRight:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEachRight);}/**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */function reject(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,negate(getIteratee(predicate,3)));}/**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */function sample(collection){var func=isArray(collection)?arraySample:baseSample;return func(collection);}/**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */function sampleSize(collection,n,guard){if(guard?isIterateeCall(collection,n,guard):n===undefined$1){n=1;}else{n=toInteger(n);}var func=isArray(collection)?arraySampleSize:baseSampleSize;return func(collection,n);}/**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */function shuffle(collection){var func=isArray(collection)?arrayShuffle:baseShuffle;return func(collection);}/**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */function size(collection){if(collection==null){return 0;}if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length;}var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size;}return baseKeys(collection).length;}/**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */function some(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined$1;}return func(collection,getIteratee(predicate,3));}/**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 30 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, [function(o) { return o.user; }]);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
	     */var sortBy=baseRest(function(collection,iteratees){if(collection==null){return[];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}return baseOrderBy(collection,baseFlatten(iteratees,1),[]);});/*------------------------------------------------------------------------*/ /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred invocation.
	     */var now=ctxNow||function(){return root.Date.now();};/*------------------------------------------------------------------------*/ /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */function after(n,func){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n<1){return func.apply(this,arguments);}};}/**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */function ary(func,n,guard){n=guard?undefined$1:n;n=func&&n==null?func.length:n;return createWrap(func,WRAP_ARY_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,n);}/**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => Allows adding up to 4 contacts to the list.
	     */function before(n,func){var result;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n>0){result=func.apply(this,arguments);}if(n<=1){func=undefined$1;}return result;};}/**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * function greet(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * }
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */var bind=baseRest(function(func,thisArg,partials){var bitmask=WRAP_BIND_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bind));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(func,bitmask,thisArg,partials,holders);});/**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */var bindKey=baseRest(function(object,key,partials){var bitmask=WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bindKey));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(key,bitmask,object,partials,holders);});/**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */function curry(func,arity,guard){arity=guard?undefined$1:arity;var result=createWrap(func,WRAP_CURRY_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,undefined$1,arity);result.placeholder=curry.placeholder;return result;}/**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */function curryRight(func,arity,guard){arity=guard?undefined$1:arity;var result=createWrap(func,WRAP_CURRY_RIGHT_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,undefined$1,arity);result.placeholder=curryRight.placeholder;return result;}/**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide `options` to indicate whether `func` should be invoked on the
	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent
	     * calls to the debounced function return the result of the last `func`
	     * invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the debounced function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing='maxWait'in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing='trailing'in options?!!options.trailing:trailing;}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=undefined$1;lastInvokeTime=time;result=func.apply(thisArg,args);return result;}function leadingEdge(time){// Reset any `maxWait` timer.
lastInvokeTime=time;// Start the timer for the trailing edge.
timerId=setTimeout(timerExpired,wait);// Invoke the leading edge.
return leading?invokeFunc(time):result;}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,timeWaiting=wait-timeSinceLastCall;return maxing?nativeMin(timeWaiting,maxWait-timeSinceLastInvoke):timeWaiting;}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;// Either this is the first call, activity has stopped and we're at the
// trailing edge, the system time has gone backwards and we're treating
// it as the trailing edge, or we've hit the `maxWait` limit.
return lastCallTime===undefined$1||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait;}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time);}// Restart the timer.
timerId=setTimeout(timerExpired,remainingWait(time));}function trailingEdge(time){timerId=undefined$1;// Only invoke if we have `lastArgs` which means `func` has been
// debounced at least once.
if(trailing&&lastArgs){return invokeFunc(time);}lastArgs=lastThis=undefined$1;return result;}function cancel(){if(timerId!==undefined$1){clearTimeout(timerId);}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined$1;}function flush(){return timerId===undefined$1?result:trailingEdge(now());}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined$1){return leadingEdge(lastCallTime);}if(maxing){// Handle invocations in a tight loop.
clearTimeout(timerId);timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime);}}if(timerId===undefined$1){timerId=setTimeout(timerExpired,wait);}return result;}debounced.cancel=cancel;debounced.flush=flush;return debounced;}/**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one millisecond.
	     */var defer=baseRest(function(func,args){return baseDelay(func,1,args);});/**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */var delay=baseRest(function(func,wait,args){return baseDelay(func,toNumber(wait)||0,args);});/**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */function flip(func){return createWrap(func,WRAP_FLIP_FLAG);}/**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */function memoize(func,resolver){if(typeof func!='function'||resolver!=null&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}// Expose `MapCache`.
memoize.Cache=MapCache;/**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */function negate(predicate){if(typeof predicate!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return function(){var args=arguments;switch(args.length){case 0:return!predicate.call(this);case 1:return!predicate.call(this,args[0]);case 2:return!predicate.call(this,args[0],args[1]);case 3:return!predicate.call(this,args[0],args[1],args[2]);}return!predicate.apply(this,args);};}/**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // => `createApplication` is invoked once
	     */function once(func){return before(2,func);}/**
	     * Creates a function that invokes `func` with its arguments transformed.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms=[_.identity]]
	     *  The argument transforms.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, [square, doubled]);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */var overArgs=castRest(function(func,transforms){transforms=transforms.length==1&&isArray(transforms[0])?arrayMap(transforms[0],baseUnary(getIteratee())):arrayMap(baseFlatten(transforms,1),baseUnary(getIteratee()));var funcsLength=transforms.length;return baseRest(function(args){var index=-1,length=nativeMin(args.length,funcsLength);while(++index<length){args[index]=transforms[index].call(this,args[index]);}return apply(func,this,args);});});/**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */var partial=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partial));return createWrap(func,WRAP_PARTIAL_FLAG,undefined$1,partials,holders);});/**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */var partialRight=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partialRight));return createWrap(func,WRAP_PARTIAL_RIGHT_FLAG,undefined$1,partials,holders);});/**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, [2, 0, 1]);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */var rearg=flatRest(function(func,indexes){return createWrap(func,WRAP_REARG_FLAG,undefined$1,undefined$1,undefined$1,indexes);});/**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */function rest(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined$1?start:toInteger(start);return baseRest(func,start);}/**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */function spread(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start==null?0:nativeMax(toInteger(start),0);return baseRest(function(args){var array=args[start],otherArgs=castSlice(args,0,start);if(array){arrayPush(otherArgs,array);}return apply(func,this,otherArgs);});}/**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide `options` to indicate whether `func`
	     * should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */function throttle(func,wait,options){var leading=true,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(isObject(options)){leading='leading'in options?!!options.leading:leading;trailing='trailing'in options?!!options.trailing:trailing;}return debounce(func,wait,{'leading':leading,'maxWait':wait,'trailing':trailing});}/**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */function unary(func){return ary(func,1);}/**
	     * Creates a function that provides `value` to `wrapper` as its first
	     * argument. Any additional arguments provided to the function are appended
	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
	     * binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */function wrap(value,wrapper){return partial(castFunction(wrapper),value);}/*------------------------------------------------------------------------*/ /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */function castArray(){if(!arguments.length){return[];}var value=arguments[0];return isArray(value)?value:[value];}/**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */function clone(value){return baseClone(value,CLONE_SYMBOLS_FLAG);}/**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */function cloneWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseClone(value,CLONE_SYMBOLS_FLAG,customizer);}/**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */function cloneDeep(value){return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG);}/**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */function cloneDeepWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG,customizer);}/**
	     * Checks if `object` conforms to `source` by invoking the predicate
	     * properties of `source` with the corresponding property values of `object`.
	     *
	     * **Note:** This method is equivalent to `_.conforms` when `source` is
	     * partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
	     * // => true
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
	     * // => false
	     */function conformsTo(object,source){return source==null||baseConformsTo(object,source,keys(source));}/**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */function eq(value,other){return value===other||value!==value&&other!==other;}/**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */var gt=createRelationalOperation(baseGt);/**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */var gte=createRelationalOperation(function(value,other){return value>=other;});/**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');};/**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */var isArray=Array.isArray;/**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */var isArrayBuffer=nodeIsArrayBuffer?baseUnary(nodeIsArrayBuffer):baseIsArrayBuffer;/**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}/**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);}/**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */function isBoolean(value){return value===true||value===false||isObjectLike(value)&&baseGetTag(value)==boolTag;}/**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */var isBuffer=nativeIsBuffer||stubFalse;/**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */var isDate=nodeIsDate?baseUnary(nodeIsDate):baseIsDate;/**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */function isElement(value){return isObjectLike(value)&&value.nodeType===1&&!isPlainObject(value);}/**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */function isEmpty(value){if(value==null){return true;}if(isArrayLike(value)&&(isArray(value)||typeof value=='string'||typeof value.splice=='function'||isBuffer(value)||isTypedArray(value)||isArguments(value))){return!value.length;}var tag=getTag(value);if(tag==mapTag||tag==setTag){return!value.size;}if(isPrototype(value)){return!baseKeys(value).length;}for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}return true;}/**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are compared by strict equality, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */function isEqual(value,other){return baseIsEqual(value,other);}/**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */function isEqualWith(value,other,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;var result=customizer?customizer(value,other):undefined$1;return result===undefined$1?baseIsEqual(value,other,undefined$1,customizer):!!result;}/**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */function isError(value){if(!isObjectLike(value)){return false;}var tag=baseGetTag(value);return tag==errorTag||tag==domExcTag||typeof value.message=='string'&&typeof value.name=='string'&&!isPlainObject(value);}/**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */function isFinite(value){return typeof value=='number'&&nativeIsFinite(value);}/**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */function isFunction(value){if(!isObject(value)){return false;}// The use of `Object#toString` avoids issues with the `typeof` operator
// in Safari 9 which returns 'object' for typed arrays and other constructors.
var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}/**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */function isInteger(value){return typeof value=='number'&&value==toInteger(value);}/**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}/**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */function isObject(value){var type=typeof value;return value!=null&&(type=='object'||type=='function');}/**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */function isObjectLike(value){return value!=null&&typeof value=='object';}/**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;/**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values.
	     *
	     * **Note:** This method is equivalent to `_.matches` when `source` is
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.isMatch(object, { 'b': 2 });
	     * // => true
	     *
	     * _.isMatch(object, { 'b': 1 });
	     * // => false
	     */function isMatch(object,source){return object===source||baseIsMatch(object,source,getMatchData(source));}/**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */function isMatchWith(object,source,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseIsMatch(object,source,getMatchData(source),customizer);}/**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */function isNaN(value){// An `NaN` primitive is the only value that is not equal to itself.
// Perform the `toStringTag` check first to avoid errors with some
// ActiveX objects in IE.
return isNumber(value)&&value!=+value;}/**
	     * Checks if `value` is a pristine native function.
	     *
	     * **Note:** This method can't reliably detect native functions in the presence
	     * of the core-js package because core-js circumvents this kind of detection.
	     * Despite multiple requests, the core-js maintainer has made it clear: any
	     * attempt to fix the detection will be obstructed. As a result, we're left
	     * with little choice but to throw an error. Unfortunately, this also affects
	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
	     * which rely on core-js.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */function isNative(value){if(isMaskable(value)){throw new Error(CORE_ERROR_TEXT);}return baseIsNative(value);}/**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */function isNull(value){return value===null;}/**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */function isNil(value){return value==null;}/**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */function isNumber(value){return typeof value=='number'||isObjectLike(value)&&baseGetTag(value)==numberTag;}/**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty.call(proto,'constructor')&&proto.constructor;return typeof Ctor=='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;}/**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */var isRegExp=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;/**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */function isSafeInteger(value){return isInteger(value)&&value>=-MAX_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER;}/**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;/**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */function isString(value){return typeof value=='string'||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag;}/**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */function isSymbol(value){return typeof value=='symbol'||isObjectLike(value)&&baseGetTag(value)==symbolTag;}/**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;/**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */function isUndefined(value){return value===undefined$1;}/**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */function isWeakMap(value){return isObjectLike(value)&&getTag(value)==weakMapTag;}/**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */function isWeakSet(value){return isObjectLike(value)&&baseGetTag(value)==weakSetTag;}/**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */var lt=createRelationalOperation(baseLt);/**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */var lte=createRelationalOperation(function(value,other){return value<=other;});/**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */function toArray(value){if(!value){return[];}if(isArrayLike(value)){return isString(value)?stringToArray(value):copyArray(value);}if(symIterator&&value[symIterator]){return iteratorToArray(value[symIterator]());}var tag=getTag(value),func=tag==mapTag?mapToArray:tag==setTag?setToArray:values;return func(value);}/**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */function toFinite(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;}/**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}/**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */function toLength(value){return value?baseClamp(toInteger(value),0,MAX_ARRAY_LENGTH):0;}/**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */function toNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject(value)){var other=typeof value.valueOf=='function'?value.valueOf():value;value=isObject(other)?other+'':other;}if(typeof value!='string'){return value===0?value:+value;}value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}/**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */function toPlainObject(value){return copyObject(value,keysIn(value));}/**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */function toSafeInteger(value){return value?baseClamp(toInteger(value),-MAX_SAFE_INTEGER,MAX_SAFE_INTEGER):value===0?value:0;}/**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */function toString(value){return value==null?'':baseToString(value);}/*------------------------------------------------------------------------*/ /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assign({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3 }
	     */var assign=createAssigner(function(object,source){if(isPrototype(source)||isArrayLike(source)){copyObject(source,keys(source),object);return;}for(var key in source){if(hasOwnProperty.call(source,key)){assignValue(object,key,source[key]);}}});/**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	     */var assignIn=createAssigner(function(object,source){copyObject(source,keysIn(source),object);});/**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */var assignInWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer);});/**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */var assignWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keys(source),object,customizer);});/**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     */var at=flatRest(baseAt);/**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */function create(prototype,properties){var result=baseCreate(prototype);return properties==null?result:baseAssign(result,properties);}/**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */var defaults=baseRest(function(object,sources){object=Object(object);var index=-1;var length=sources.length;var guard=length>2?sources[2]:undefined$1;if(guard&&isIterateeCall(sources[0],sources[1],guard)){length=1;}while(++index<length){var source=sources[index];var props=keysIn(source);var propsIndex=-1;var propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex];var value=object[key];if(value===undefined$1||eq(value,objectProto[key])&&!hasOwnProperty.call(object,key)){object[key]=source[key];}}}return object;});/**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	     * // => { 'a': { 'b': 2, 'c': 3 } }
	     */var defaultsDeep=baseRest(function(args){args.push(undefined$1,customDefaultsMerge);return apply(mergeWith,undefined$1,args);});/**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */function findKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwn);}/**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */function findLastKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwnRight);}/**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */function forIn(object,iteratee){return object==null?object:baseFor(object,getIteratee(iteratee,3),keysIn);}/**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */function forInRight(object,iteratee){return object==null?object:baseForRight(object,getIteratee(iteratee,3),keysIn);}/**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */function forOwn(object,iteratee){return object&&baseForOwn(object,getIteratee(iteratee,3));}/**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */function forOwnRight(object,iteratee){return object&&baseForOwnRight(object,getIteratee(iteratee,3));}/**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */function functions(object){return object==null?[]:baseFunctions(object,keys(object));}/**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */function functionsIn(object){return object==null?[]:baseFunctions(object,keysIn(object));}/**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is returned in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */function get(object,path,defaultValue){var result=object==null?undefined$1:baseGet(object,path);return result===undefined$1?defaultValue:result;}/**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */function has(object,path){return object!=null&&hasPath(object,path,baseHas);}/**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);}/**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */var invert=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}result[value]=key;},constant(identity));/**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */var invertBy=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}if(hasOwnProperty.call(result,value)){result[value].push(key);}else{result[value]=[key];}},getIteratee);/**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */var invoke=baseRest(baseInvoke);/**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}/**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object);}/**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */function mapKeys(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,iteratee(value,key,object),value);});return result;}/**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */function mapValues(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,key,iteratee(value,key,object));});return result;}/**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {
	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
	     * };
	     *
	     * var other = {
	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
	     * };
	     *
	     * _.merge(object, other);
	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	     */var merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex);});/**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with six arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = { 'a': [1], 'b': [2] };
	     * var other = { 'a': [3], 'b': [4] };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'a': [1, 3], 'b': [2, 4] }
	     */var mergeWith=createAssigner(function(object,source,srcIndex,customizer){baseMerge(object,source,srcIndex,customizer);});/**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable property paths of `object` that are not omitted.
	     *
	     * **Note:** This method is considerably slower than `_.pick`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */var omit=flatRest(function(object,paths){var result={};if(object==null){return result;}var isDeep=false;paths=arrayMap(paths,function(path){path=castPath(path,object);isDeep||(isDeep=path.length>1);return path;});copyObject(object,getAllKeysIn(object),result);if(isDeep){result=baseClone(result,CLONE_DEEP_FLAG|CLONE_FLAT_FLAG|CLONE_SYMBOLS_FLAG,customOmitClone);}var length=paths.length;while(length--){baseUnset(result,paths[length]);}return result;});/**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */function omitBy(object,predicate){return pickBy(object,negate(getIteratee(predicate)));}/**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */var pick=flatRest(function(object,paths){return object==null?{}:basePick(object,paths);});/**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */function pickBy(object,predicate){if(object==null){return{};}var props=arrayMap(getAllKeysIn(object),function(prop){return[prop];});predicate=getIteratee(predicate);return basePickBy(object,props,function(value,path){return predicate(value,path[0]);});}/**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */function result(object,path,defaultValue){path=castPath(path,object);var index=-1,length=path.length;// Ensure the loop is entered when path is empty.
if(!length){length=1;object=undefined$1;}while(++index<length){var value=object==null?undefined$1:object[toKey(path[index])];if(value===undefined$1){index=length;value=defaultValue;}object=isFunction(value)?value.call(object):value;}return object;}/**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */function set(object,path,value){return object==null?object:baseSet(object,path,value);}/**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */function setWith(object,path,value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return object==null?object:baseSet(object,path,value,customizer);}/**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */var toPairs=createToPairs(keys);/**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */var toPairsIn=createToPairs(keysIn);/**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. If `accumulator` is not
	     * provided, a new object with the same `[[Prototype]]` will be used. The
	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */function transform(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=getIteratee(iteratee,4);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}else{accumulator={};}}(isArrLike?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;}/**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */function unset(object,path){return object==null?true:baseUnset(object,path);}/**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */function update(object,path,updater){return object==null?object:baseUpdate(object,path,castFunction(updater));}/**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */function updateWith(object,path,updater,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return object==null?object:baseUpdate(object,path,castFunction(updater),customizer);}/**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */function values(object){return object==null?[]:baseValues(object,keys(object));}/**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */function valuesIn(object){return object==null?[]:baseValues(object,keysIn(object));}/*------------------------------------------------------------------------*/ /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */function clamp(number,lower,upper){if(upper===undefined$1){upper=lower;lower=undefined$1;}if(upper!==undefined$1){upper=toNumber(upper);upper=upper===upper?upper:0;}if(lower!==undefined$1){lower=toNumber(lower);lower=lower===lower?lower:0;}return baseClamp(toNumber(number),lower,upper);}/**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */function inRange(number,start,end){start=toFinite(start);if(end===undefined$1){end=start;start=0;}else{end=toFinite(end);}number=toNumber(number);return baseInRange(number,start,end);}/**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */function random(lower,upper,floating){if(floating&&typeof floating!='boolean'&&isIterateeCall(lower,upper,floating)){upper=floating=undefined$1;}if(floating===undefined$1){if(typeof upper=='boolean'){floating=upper;upper=undefined$1;}else if(typeof lower=='boolean'){floating=lower;lower=undefined$1;}}if(lower===undefined$1&&upper===undefined$1){lower=0;upper=1;}else{lower=toFinite(lower);if(upper===undefined$1){upper=lower;lower=0;}else{upper=toFinite(upper);}}if(lower>upper){var temp=lower;lower=upper;upper=temp;}if(floating||lower%1||upper%1){var rand=nativeRandom();return nativeMin(lower+rand*(upper-lower+freeParseFloat('1e-'+((rand+'').length-1))),upper);}return baseRandom(lower,upper);}/*------------------------------------------------------------------------*/ /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */var camelCase=createCompounder(function(result,word,index){word=word.toLowerCase();return result+(index?capitalize(word):word);});/**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */function capitalize(string){return upperFirst(toString(string).toLowerCase());}/**
	     * Deburrs `string` by converting
	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	     * letters to basic Latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */function deburr(string){string=toString(string);return string&&string.replace(reLatin,deburrLetter).replace(reComboMark,'');}/**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search up to.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */function endsWith(string,target,position){string=toString(string);target=baseToString(target);var length=string.length;position=position===undefined$1?length:baseClamp(toInteger(position),0,length);var end=position;position-=target.length;return position>=0&&string.slice(position,end)==target;}/**
	     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
	     * corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string;}/**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */function escapeRegExp(string){string=toString(string);return string&&reHasRegExpChar.test(string)?string.replace(reRegExpChar,'\\$&'):string;}/**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */var kebabCase=createCompounder(function(result,word,index){return result+(index?'-':'')+word.toLowerCase();});/**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */var lowerCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toLowerCase();});/**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */var lowerFirst=createCaseFirst('toLowerCase');/**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */function pad(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;if(!length||strLength>=length){return string;}var mid=(length-strLength)/2;return createPadding(nativeFloor(mid),chars)+string+createPadding(nativeCeil(mid),chars);}/**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */function padEnd(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?string+createPadding(length-strLength,chars):string;}/**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */function padStart(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?createPadding(length-strLength,chars)+string:string;}/**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */function parseInt(string,radix,guard){if(guard||radix==null){radix=0;}else if(radix){radix=+radix;}return nativeParseInt(toString(string).replace(reTrimStart,''),radix||0);}/**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined$1){n=1;}else{n=toInteger(n);}return baseRepeat(toString(string),n);}/**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */function replace(){var args=arguments,string=toString(args[0]);return args.length<3?string:string.replace(args[1],args[2]);}/**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */var snakeCase=createCompounder(function(result,word,index){return result+(index?'_':'')+word.toLowerCase();});/**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */function split(string,separator,limit){if(limit&&typeof limit!='number'&&isIterateeCall(string,separator,limit)){separator=limit=undefined$1;}limit=limit===undefined$1?MAX_ARRAY_LENGTH:limit>>>0;if(!limit){return[];}string=toString(string);if(string&&(typeof separator=='string'||separator!=null&&!isRegExp(separator))){separator=baseToString(separator);if(!separator&&hasUnicode(string)){return castSlice(stringToArray(string),0,limit);}}return string.split(separator,limit);}/**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */var startCase=createCompounder(function(result,word,index){return result+(index?' ':'')+upperFirst(word);});/**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */function startsWith(string,target,position){string=toString(string);position=position==null?0:baseClamp(toInteger(position),0,string.length);target=baseToString(target);return string.slice(position,position+target.length)==target;}/**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES template literal delimiter as an "interpolate" delimiter.
	     * // Disable support by replacing the "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */function template(string,options,guard){// Based on John Resig's `tmpl` implementation
// (http://ejohn.org/blog/javascript-micro-templating/)
// and Laura Doktorova's doT.js (https://github.com/olado/doT).
var settings=lodash.templateSettings;if(guard&&isIterateeCall(string,options,guard)){options=undefined$1;}string=toString(string);options=assignInWith({},options,settings,customDefaultsAssignIn);var imports=assignInWith({},options.imports,settings.imports,customDefaultsAssignIn),importsKeys=keys(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '";// Compile the regexp to match each delimiter.
var reDelimiters=RegExp((options.escape||reNoMatch).source+'|'+interpolate.source+'|'+(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+(options.evaluate||reNoMatch).source+'|$','g');// Use a sourceURL for easier debugging.
// The sourceURL gets injected into the source that's eval-ed, so be careful
// to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
// and escape the comment, thus injecting code that gets evaled.
var sourceURL='//# sourceURL='+(hasOwnProperty.call(options,'sourceURL')?(options.sourceURL+'').replace(/\s/g,' '):'lodash.templateSources['+ ++templateCounter+']')+'\n';string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue);// Escape characters that can't be included in string literals.
source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar);// Replace delimiters with snippets.
if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'";}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '";}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";}index=offset+match.length;// The JS engine embedded in Adobe products needs `match` returned in
// order to produce the correct `offset` value.
return match;});source+="';\n";// If `variable` is not specified wrap a with-statement around the generated
// code to add the data object to the top of the scope chain.
var variable=hasOwnProperty.call(options,'variable')&&options.variable;if(!variable){source='with (obj) {\n'+source+'\n}\n';}// Throw an error if a forbidden character was found in `variable`, to prevent
// potential command injection attacks.
else if(reForbiddenIdentifierChars.test(variable)){throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);}// Cleanup code by stripping empty strings.
source=(isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;');// Frame code as the function body.
source='function('+(variable||'obj')+') {\n'+(variable?'':'obj || (obj = {});\n')+"var __t, __p = ''"+(isEscaping?', __e = _.escape':'')+(isEvaluating?', __j = Array.prototype.join;\n'+"function print() { __p += __j.call(arguments, '') }\n":';\n')+source+'return __p\n}';var result=attempt(function(){return Function(importsKeys,sourceURL+'return '+source).apply(undefined$1,importsValues);});// Provide the compiled function's source by its `toString` method or
// the `source` property as a convenience for inlining compiled templates.
result.source=source;if(isError(result)){throw result;}return result;}/**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */function toLower(value){return toString(value).toLowerCase();}/**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */function toUpper(value){return toString(value).toUpperCase();}/**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */function trim(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return baseTrim(string);}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),chrSymbols=stringToArray(chars),start=charsStartIndex(strSymbols,chrSymbols),end=charsEndIndex(strSymbols,chrSymbols)+1;return castSlice(strSymbols,start,end).join('');}/**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */function trimEnd(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.slice(0,trimmedEndIndex(string)+1);}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),end=charsEndIndex(strSymbols,stringToArray(chars))+1;return castSlice(strSymbols,0,end).join('');}/**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */function trimStart(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.replace(reTrimStart,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),start=charsStartIndex(strSymbols,stringToArray(chars));return castSlice(strSymbols,start).join('');}/**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator'in options?options.separator:separator;length='length'in options?toInteger(options.length):length;omission='omission'in options?baseToString(options.omission):omission;}string=toString(string);var strLength=string.length;if(hasUnicode(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined$1){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined$1?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;}/**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */function unescape(string){string=toString(string);return string&&reHasEscapedHtml.test(string)?string.replace(reEscapedHtml,unescapeHtmlChar):string;}/**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */var upperCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toUpperCase();});/**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */var upperFirst=createCaseFirst('toUpperCase');/**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */function words(string,pattern,guard){string=toString(string);pattern=guard?undefined$1:pattern;if(pattern===undefined$1){return hasUnicodeWord(string)?unicodeWords(string):asciiWords(string);}return string.match(pattern)||[];}/*------------------------------------------------------------------------*/ /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */var attempt=baseRest(function(func,args){try{return apply(func,undefined$1,args);}catch(e){return isError(e)?e:new Error(e);}});/**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'click': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, ['click']);
	     * jQuery(element).on('click', view.click);
	     * // => Logs 'clicked docs' when clicked.
	     */var bindAll=flatRest(function(object,methodNames){arrayEach(methodNames,function(key){key=toKey(key);baseAssignValue(object,key,bind(object[key],object));});return object;});/**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.stubTrue,                      _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */function cond(pairs){var length=pairs==null?0:pairs.length,toIteratee=getIteratee();pairs=!length?[]:arrayMap(pairs,function(pair){if(typeof pair[1]!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return[toIteratee(pair[0]),pair[1]];});return baseRest(function(args){var index=-1;while(++index<length){var pair=pairs[index];if(apply(pair[0],this,args)){return apply(pair[1],this,args);}}});}/**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.conformsTo` with
	     * `source` partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 2, 'b': 1 },
	     *   { 'a': 1, 'b': 2 }
	     * ];
	     *
	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
	     * // => [{ 'a': 1, 'b': 2 }]
	     */function conforms(source){return baseConforms(baseClone(source,CLONE_DEEP_FLAG));}/**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */function constant(value){return function(){return value;};}/**
	     * Checks `value` to determine whether a default value should be returned in
	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
	     * or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Util
	     * @param {*} value The value to check.
	     * @param {*} defaultValue The default value.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * _.defaultTo(1, 10);
	     * // => 1
	     *
	     * _.defaultTo(undefined, 10);
	     * // => 10
	     */function defaultTo(value,defaultValue){return value==null||value!==value?defaultValue:value;}/**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow([_.add, square]);
	     * addSquare(1, 2);
	     * // => 9
	     */var flow=createFlow();/**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight([square, _.add]);
	     * addSquare(1, 2);
	     * // => 9
	     */var flowRight=createFlow(true);/**
	     * This method returns the first argument it receives.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */function identity(value){return value;}/**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */function iteratee(func){return baseIteratee(typeof func=='function'?func:baseClone(func,CLONE_DEEP_FLAG));}/**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * **Note:** Multiple values can be checked by combining several matchers
	     * using `_.overSome`
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
	     *
	     * // Checking for several possible values
	     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
	     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
	     */function matches(source){return baseMatches(baseClone(source,CLONE_DEEP_FLAG));}/**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** Partial comparisons will match empty array and empty object
	     * `srcValue` values against any array or object value, respectively. See
	     * `_.isEqual` for a list of supported value comparisons.
	     *
	     * **Note:** Multiple values can be checked by combining several matchers
	     * using `_.overSome`
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.find(objects, _.matchesProperty('a', 4));
	     * // => { 'a': 4, 'b': 5, 'c': 6 }
	     *
	     * // Checking for several possible values
	     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
	     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
	     */function matchesProperty(path,srcValue){return baseMatchesProperty(path,baseClone(srcValue,CLONE_DEEP_FLAG));}/**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */var method=baseRest(function(path,args){return function(object){return baseInvoke(object,path,args);};});/**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */var methodOf=baseRest(function(object,args){return function(path){return baseInvoke(object,path,args);};});/**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */function mixin(object,source,options){var props=keys(source),methodNames=baseFunctions(source,props);if(options==null&&!(isObject(source)&&(methodNames.length||!props.length))){options=source;source=object;object=this;methodNames=baseFunctions(source,keys(source));}var chain=!(isObject(options)&&'chain'in options)||!!options.chain,isFunc=isFunction(object);arrayEach(methodNames,function(methodName){var func=source[methodName];object[methodName]=func;if(isFunc){object.prototype[methodName]=function(){var chainAll=this.__chain__;if(chain||chainAll){var result=object(this.__wrapped__),actions=result.__actions__=copyArray(this.__actions__);actions.push({'func':func,'args':arguments,'thisArg':object});result.__chain__=chainAll;return result;}return func.apply(object,arrayPush([this.value()],arguments));};}});return object;}/**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */function noConflict(){if(root._===this){root._=oldDash;}return this;}/**
	     * This method returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */function noop(){// No operation performed.
}/**
	     * Creates a function that gets the argument at index `n`. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */function nthArg(n){n=toInteger(n);return baseRest(function(args){return baseNth(args,n);});}/**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over([Math.max, Math.min]);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */var over=createOver(arrayMap);/**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * Following shorthands are possible for providing predicates.
	     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
	     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */var overEvery=createOver(arrayEvery);/**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * Following shorthands are possible for providing predicates.
	     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
	     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     *
	     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
	     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
	     */var overSome=createOver(arraySome);/**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);}/**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */function propertyOf(object){return function(path){return object==null?undefined$1:baseGet(object,path);};}/**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */var range=createRange();/**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */var rangeRight=createRange(true);/**
	     * This method returns a new empty array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Array} Returns the new empty array.
	     * @example
	     *
	     * var arrays = _.times(2, _.stubArray);
	     *
	     * console.log(arrays);
	     * // => [[], []]
	     *
	     * console.log(arrays[0] === arrays[1]);
	     * // => false
	     */function stubArray(){return[];}/**
	     * This method returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `false`.
	     * @example
	     *
	     * _.times(2, _.stubFalse);
	     * // => [false, false]
	     */function stubFalse(){return false;}/**
	     * This method returns a new empty object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Object} Returns the new empty object.
	     * @example
	     *
	     * var objects = _.times(2, _.stubObject);
	     *
	     * console.log(objects);
	     * // => [{}, {}]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => false
	     */function stubObject(){return{};}/**
	     * This method returns an empty string.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {string} Returns the empty string.
	     * @example
	     *
	     * _.times(2, _.stubString);
	     * // => ['', '']
	     */function stubString(){return'';}/**
	     * This method returns `true`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `true`.
	     * @example
	     *
	     * _.times(2, _.stubTrue);
	     * // => [true, true]
	     */function stubTrue(){return true;}/**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(0));
	     * // => [0, 0, 0, 0]
	     */function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return[];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=getIteratee(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;}/**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     */function toPath(value){if(isArray(value)){return arrayMap(value,toKey);}return isSymbol(value)?[value]:copyArray(stringToPath(toString(value)));}/**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id;}/*------------------------------------------------------------------------*/ /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */var add=createMathOperation(function(augend,addend){return augend+addend;},0);/**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */var ceil=createRound('ceil');/**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */var divide=createMathOperation(function(dividend,divisor){return dividend/divisor;},1);/**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */var floor=createRound('floor');/**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):undefined$1;}/**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseGt):undefined$1;}/**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */function mean(array){return baseMean(array,identity);}/**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */function meanBy(array,iteratee){return baseMean(array,getIteratee(iteratee,2));}/**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined$1;}/**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */function minBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseLt):undefined$1;}/**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */var multiply=createMathOperation(function(multiplier,multiplicand){return multiplier*multiplicand;},1);/**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */var round=createRound('round');/**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */var subtract=createMathOperation(function(minuend,subtrahend){return minuend-subtrahend;},0);/**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */function sum(array){return array&&array.length?baseSum(array,identity):0;}/**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */function sumBy(array,iteratee){return array&&array.length?baseSum(array,getIteratee(iteratee,2)):0;}/*------------------------------------------------------------------------*/ // Add methods that return wrapped values in chain sequences.
lodash.after=after;lodash.ary=ary;lodash.assign=assign;lodash.assignIn=assignIn;lodash.assignInWith=assignInWith;lodash.assignWith=assignWith;lodash.at=at;lodash.before=before;lodash.bind=bind;lodash.bindAll=bindAll;lodash.bindKey=bindKey;lodash.castArray=castArray;lodash.chain=chain;lodash.chunk=chunk;lodash.compact=compact;lodash.concat=concat;lodash.cond=cond;lodash.conforms=conforms;lodash.constant=constant;lodash.countBy=countBy;lodash.create=create;lodash.curry=curry;lodash.curryRight=curryRight;lodash.debounce=debounce;lodash.defaults=defaults;lodash.defaultsDeep=defaultsDeep;lodash.defer=defer;lodash.delay=delay;lodash.difference=difference;lodash.differenceBy=differenceBy;lodash.differenceWith=differenceWith;lodash.drop=drop;lodash.dropRight=dropRight;lodash.dropRightWhile=dropRightWhile;lodash.dropWhile=dropWhile;lodash.fill=fill;lodash.filter=filter;lodash.flatMap=flatMap;lodash.flatMapDeep=flatMapDeep;lodash.flatMapDepth=flatMapDepth;lodash.flatten=flatten;lodash.flattenDeep=flattenDeep;lodash.flattenDepth=flattenDepth;lodash.flip=flip;lodash.flow=flow;lodash.flowRight=flowRight;lodash.fromPairs=fromPairs;lodash.functions=functions;lodash.functionsIn=functionsIn;lodash.groupBy=groupBy;lodash.initial=initial;lodash.intersection=intersection;lodash.intersectionBy=intersectionBy;lodash.intersectionWith=intersectionWith;lodash.invert=invert;lodash.invertBy=invertBy;lodash.invokeMap=invokeMap;lodash.iteratee=iteratee;lodash.keyBy=keyBy;lodash.keys=keys;lodash.keysIn=keysIn;lodash.map=map;lodash.mapKeys=mapKeys;lodash.mapValues=mapValues;lodash.matches=matches;lodash.matchesProperty=matchesProperty;lodash.memoize=memoize;lodash.merge=merge;lodash.mergeWith=mergeWith;lodash.method=method;lodash.methodOf=methodOf;lodash.mixin=mixin;lodash.negate=negate;lodash.nthArg=nthArg;lodash.omit=omit;lodash.omitBy=omitBy;lodash.once=once;lodash.orderBy=orderBy;lodash.over=over;lodash.overArgs=overArgs;lodash.overEvery=overEvery;lodash.overSome=overSome;lodash.partial=partial;lodash.partialRight=partialRight;lodash.partition=partition;lodash.pick=pick;lodash.pickBy=pickBy;lodash.property=property;lodash.propertyOf=propertyOf;lodash.pull=pull;lodash.pullAll=pullAll;lodash.pullAllBy=pullAllBy;lodash.pullAllWith=pullAllWith;lodash.pullAt=pullAt;lodash.range=range;lodash.rangeRight=rangeRight;lodash.rearg=rearg;lodash.reject=reject;lodash.remove=remove;lodash.rest=rest;lodash.reverse=reverse;lodash.sampleSize=sampleSize;lodash.set=set;lodash.setWith=setWith;lodash.shuffle=shuffle;lodash.slice=slice;lodash.sortBy=sortBy;lodash.sortedUniq=sortedUniq;lodash.sortedUniqBy=sortedUniqBy;lodash.split=split;lodash.spread=spread;lodash.tail=tail;lodash.take=take;lodash.takeRight=takeRight;lodash.takeRightWhile=takeRightWhile;lodash.takeWhile=takeWhile;lodash.tap=tap;lodash.throttle=throttle;lodash.thru=thru;lodash.toArray=toArray;lodash.toPairs=toPairs;lodash.toPairsIn=toPairsIn;lodash.toPath=toPath;lodash.toPlainObject=toPlainObject;lodash.transform=transform;lodash.unary=unary;lodash.union=union;lodash.unionBy=unionBy;lodash.unionWith=unionWith;lodash.uniq=uniq;lodash.uniqBy=uniqBy;lodash.uniqWith=uniqWith;lodash.unset=unset;lodash.unzip=unzip;lodash.unzipWith=unzipWith;lodash.update=update;lodash.updateWith=updateWith;lodash.values=values;lodash.valuesIn=valuesIn;lodash.without=without;lodash.words=words;lodash.wrap=wrap;lodash.xor=xor;lodash.xorBy=xorBy;lodash.xorWith=xorWith;lodash.zip=zip;lodash.zipObject=zipObject;lodash.zipObjectDeep=zipObjectDeep;lodash.zipWith=zipWith;// Add aliases.
lodash.entries=toPairs;lodash.entriesIn=toPairsIn;lodash.extend=assignIn;lodash.extendWith=assignInWith;// Add methods to `lodash.prototype`.
mixin(lodash,lodash);/*------------------------------------------------------------------------*/ // Add methods that return unwrapped values in chain sequences.
lodash.add=add;lodash.attempt=attempt;lodash.camelCase=camelCase;lodash.capitalize=capitalize;lodash.ceil=ceil;lodash.clamp=clamp;lodash.clone=clone;lodash.cloneDeep=cloneDeep;lodash.cloneDeepWith=cloneDeepWith;lodash.cloneWith=cloneWith;lodash.conformsTo=conformsTo;lodash.deburr=deburr;lodash.defaultTo=defaultTo;lodash.divide=divide;lodash.endsWith=endsWith;lodash.eq=eq;lodash.escape=escape;lodash.escapeRegExp=escapeRegExp;lodash.every=every;lodash.find=find;lodash.findIndex=findIndex;lodash.findKey=findKey;lodash.findLast=findLast;lodash.findLastIndex=findLastIndex;lodash.findLastKey=findLastKey;lodash.floor=floor;lodash.forEach=forEach;lodash.forEachRight=forEachRight;lodash.forIn=forIn;lodash.forInRight=forInRight;lodash.forOwn=forOwn;lodash.forOwnRight=forOwnRight;lodash.get=get;lodash.gt=gt;lodash.gte=gte;lodash.has=has;lodash.hasIn=hasIn;lodash.head=head;lodash.identity=identity;lodash.includes=includes;lodash.indexOf=indexOf;lodash.inRange=inRange;lodash.invoke=invoke;lodash.isArguments=isArguments;lodash.isArray=isArray;lodash.isArrayBuffer=isArrayBuffer;lodash.isArrayLike=isArrayLike;lodash.isArrayLikeObject=isArrayLikeObject;lodash.isBoolean=isBoolean;lodash.isBuffer=isBuffer;lodash.isDate=isDate;lodash.isElement=isElement;lodash.isEmpty=isEmpty;lodash.isEqual=isEqual;lodash.isEqualWith=isEqualWith;lodash.isError=isError;lodash.isFinite=isFinite;lodash.isFunction=isFunction;lodash.isInteger=isInteger;lodash.isLength=isLength;lodash.isMap=isMap;lodash.isMatch=isMatch;lodash.isMatchWith=isMatchWith;lodash.isNaN=isNaN;lodash.isNative=isNative;lodash.isNil=isNil;lodash.isNull=isNull;lodash.isNumber=isNumber;lodash.isObject=isObject;lodash.isObjectLike=isObjectLike;lodash.isPlainObject=isPlainObject;lodash.isRegExp=isRegExp;lodash.isSafeInteger=isSafeInteger;lodash.isSet=isSet;lodash.isString=isString;lodash.isSymbol=isSymbol;lodash.isTypedArray=isTypedArray;lodash.isUndefined=isUndefined;lodash.isWeakMap=isWeakMap;lodash.isWeakSet=isWeakSet;lodash.join=join;lodash.kebabCase=kebabCase;lodash.last=last;lodash.lastIndexOf=lastIndexOf;lodash.lowerCase=lowerCase;lodash.lowerFirst=lowerFirst;lodash.lt=lt;lodash.lte=lte;lodash.max=max;lodash.maxBy=maxBy;lodash.mean=mean;lodash.meanBy=meanBy;lodash.min=min;lodash.minBy=minBy;lodash.stubArray=stubArray;lodash.stubFalse=stubFalse;lodash.stubObject=stubObject;lodash.stubString=stubString;lodash.stubTrue=stubTrue;lodash.multiply=multiply;lodash.nth=nth;lodash.noConflict=noConflict;lodash.noop=noop;lodash.now=now;lodash.pad=pad;lodash.padEnd=padEnd;lodash.padStart=padStart;lodash.parseInt=parseInt;lodash.random=random;lodash.reduce=reduce;lodash.reduceRight=reduceRight;lodash.repeat=repeat;lodash.replace=replace;lodash.result=result;lodash.round=round;lodash.runInContext=runInContext;lodash.sample=sample;lodash.size=size;lodash.snakeCase=snakeCase;lodash.some=some;lodash.sortedIndex=sortedIndex;lodash.sortedIndexBy=sortedIndexBy;lodash.sortedIndexOf=sortedIndexOf;lodash.sortedLastIndex=sortedLastIndex;lodash.sortedLastIndexBy=sortedLastIndexBy;lodash.sortedLastIndexOf=sortedLastIndexOf;lodash.startCase=startCase;lodash.startsWith=startsWith;lodash.subtract=subtract;lodash.sum=sum;lodash.sumBy=sumBy;lodash.template=template;lodash.times=times;lodash.toFinite=toFinite;lodash.toInteger=toInteger;lodash.toLength=toLength;lodash.toLower=toLower;lodash.toNumber=toNumber;lodash.toSafeInteger=toSafeInteger;lodash.toString=toString;lodash.toUpper=toUpper;lodash.trim=trim;lodash.trimEnd=trimEnd;lodash.trimStart=trimStart;lodash.truncate=truncate;lodash.unescape=unescape;lodash.uniqueId=uniqueId;lodash.upperCase=upperCase;lodash.upperFirst=upperFirst;// Add aliases.
lodash.each=forEach;lodash.eachRight=forEachRight;lodash.first=head;mixin(lodash,function(){var source={};baseForOwn(lodash,function(func,methodName){if(!hasOwnProperty.call(lodash.prototype,methodName)){source[methodName]=func;}});return source;}(),{'chain':false});/*------------------------------------------------------------------------*/ /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */lodash.VERSION=VERSION;// Assign default placeholders.
arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){lodash[methodName].placeholder=lodash;});// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
arrayEach(['drop','take'],function(methodName,index){LazyWrapper.prototype[methodName]=function(n){n=n===undefined$1?1:nativeMax(toInteger(n),0);var result=this.__filtered__&&!index?new LazyWrapper(this):this.clone();if(result.__filtered__){result.__takeCount__=nativeMin(n,result.__takeCount__);}else{result.__views__.push({'size':nativeMin(n,MAX_ARRAY_LENGTH),'type':methodName+(result.__dir__<0?'Right':'')});}return result;};LazyWrapper.prototype[methodName+'Right']=function(n){return this.reverse()[methodName](n).reverse();};});// Add `LazyWrapper` methods that accept an `iteratee` value.
arrayEach(['filter','map','takeWhile'],function(methodName,index){var type=index+1,isFilter=type==LAZY_FILTER_FLAG||type==LAZY_WHILE_FLAG;LazyWrapper.prototype[methodName]=function(iteratee){var result=this.clone();result.__iteratees__.push({'iteratee':getIteratee(iteratee,3),'type':type});result.__filtered__=result.__filtered__||isFilter;return result;};});// Add `LazyWrapper` methods for `_.head` and `_.last`.
arrayEach(['head','last'],function(methodName,index){var takeName='take'+(index?'Right':'');LazyWrapper.prototype[methodName]=function(){return this[takeName](1).value()[0];};});// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
arrayEach(['initial','tail'],function(methodName,index){var dropName='drop'+(index?'':'Right');LazyWrapper.prototype[methodName]=function(){return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});LazyWrapper.prototype.compact=function(){return this.filter(identity);};LazyWrapper.prototype.find=function(predicate){return this.filter(predicate).head();};LazyWrapper.prototype.findLast=function(predicate){return this.reverse().find(predicate);};LazyWrapper.prototype.invokeMap=baseRest(function(path,args){if(typeof path=='function'){return new LazyWrapper(this);}return this.map(function(value){return baseInvoke(value,path,args);});});LazyWrapper.prototype.reject=function(predicate){return this.filter(negate(getIteratee(predicate)));};LazyWrapper.prototype.slice=function(start,end){start=toInteger(start);var result=this;if(result.__filtered__&&(start>0||end<0)){return new LazyWrapper(result);}if(start<0){result=result.takeRight(-start);}else if(start){result=result.drop(start);}if(end!==undefined$1){end=toInteger(end);result=end<0?result.dropRight(-end):result.take(end-start);}return result;};LazyWrapper.prototype.takeRightWhile=function(predicate){return this.reverse().takeWhile(predicate).reverse();};LazyWrapper.prototype.toArray=function(){return this.take(MAX_ARRAY_LENGTH);};// Add `LazyWrapper` methods to `lodash.prototype`.
baseForOwn(LazyWrapper.prototype,function(func,methodName){var checkIteratee=/^(?:filter|find|map|reject)|While$/.test(methodName),isTaker=/^(?:head|last)$/.test(methodName),lodashFunc=lodash[isTaker?'take'+(methodName=='last'?'Right':''):methodName],retUnwrapped=isTaker||/^find/.test(methodName);if(!lodashFunc){return;}lodash.prototype[methodName]=function(){var value=this.__wrapped__,args=isTaker?[1]:arguments,isLazy=value instanceof LazyWrapper,iteratee=args[0],useLazy=isLazy||isArray(value);var interceptor=function(value){var result=lodashFunc.apply(lodash,arrayPush([value],args));return isTaker&&chainAll?result[0]:result;};if(useLazy&&checkIteratee&&typeof iteratee=='function'&&iteratee.length!=1){// Avoid lazy use if the iteratee has a "length" value other than `1`.
isLazy=useLazy=false;}var chainAll=this.__chain__,isHybrid=!!this.__actions__.length,isUnwrapped=retUnwrapped&&!chainAll,onlyLazy=isLazy&&!isHybrid;if(!retUnwrapped&&useLazy){value=onlyLazy?value:new LazyWrapper(this);var result=func.apply(value,args);result.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined$1});return new LodashWrapper(result,chainAll);}if(isUnwrapped&&onlyLazy){return func.apply(this,args);}result=this.thru(interceptor);return isUnwrapped?isTaker?result.value()[0]:result.value():result;};});// Add `Array` methods to `lodash.prototype`.
arrayEach(['pop','push','shift','sort','splice','unshift'],function(methodName){var func=arrayProto[methodName],chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',retUnwrapped=/^(?:pop|shift)$/.test(methodName);lodash.prototype[methodName]=function(){var args=arguments;if(retUnwrapped&&!this.__chain__){var value=this.value();return func.apply(isArray(value)?value:[],args);}return this[chainName](function(value){return func.apply(isArray(value)?value:[],args);});};});// Map minified method names to their real names.
baseForOwn(LazyWrapper.prototype,function(func,methodName){var lodashFunc=lodash[methodName];if(lodashFunc){var key=lodashFunc.name+'';if(!hasOwnProperty.call(realNames,key)){realNames[key]=[];}realNames[key].push({'name':methodName,'func':lodashFunc});}});realNames[createHybrid(undefined$1,WRAP_BIND_KEY_FLAG).name]=[{'name':'wrapper','func':undefined$1}];// Add methods to `LazyWrapper`.
LazyWrapper.prototype.clone=lazyClone;LazyWrapper.prototype.reverse=lazyReverse;LazyWrapper.prototype.value=lazyValue;// Add chain sequence methods to the `lodash` wrapper.
lodash.prototype.at=wrapperAt;lodash.prototype.chain=wrapperChain;lodash.prototype.commit=wrapperCommit;lodash.prototype.next=wrapperNext;lodash.prototype.plant=wrapperPlant;lodash.prototype.reverse=wrapperReverse;lodash.prototype.toJSON=lodash.prototype.valueOf=lodash.prototype.value=wrapperValue;// Add lazy aliases.
lodash.prototype.first=lodash.prototype.head;if(symIterator){lodash.prototype[symIterator]=wrapperToIterator;}return lodash;};/*--------------------------------------------------------------------------*/ // Export lodash.
var _=runInContext();// Some AMD build optimizers, like r.js, check for condition patterns like:
if(freeModule){// Export for Node.js.
(freeModule.exports=_)._=_;// Export for CommonJS support.
freeExports._=_;}else{// Export to the global object.
root._=_;}}).call(loadEnv.commonjsGlobal);})(lodash,lodash.exports);var lodashExports=lodash.exports;const purpose$2="Transform `sanity/desk` imports to `sanity/structure`";const description$2="\nModifies all code paths that are found to import  from 'sanity/desk' to instead import from\n'sanity/structure', and renames any renamed members.\n\nfrom: import {deskTool} from 'sanity/desk'\n  to: import {structureTool} from 'sanity/structure'\n\nfrom: import {StructureBuilder} from 'sanity/desk'\n  to: import {StructureBuilder} from 'sanity/structure'\n".trim();const deskRename={purpose:purpose$2,description:description$2,filename:"deskRename.js"};const purpose$1="Add parts types directive to all ts/tsx files that has one or more part imports";const description$1="\nAdds a '///<reference types=\"@sanity/types/parts\" />' header to all source files that has one or more part imports.\nFor example:\n\nBefore:\n---- somefile.ts\nimport client from 'part:@sanity/base/client'\n//\u2026\n----\n\nAfter:\n---- somefile.ts\n///<reference types=\"@sanity/types/parts\" />\nimport client from 'part:@sanity/base/client'\n//\u2026\n----\n\n\n".trim();const partsTypeDirective={purpose:purpose$1,description:description$1,filename:"partsTypeDirective.js"};var semverCompare=function cmp(a,b){var pa=a.split('.');var pb=b.split('.');for(var i=0;i<3;i++){var na=Number(pa[i]);var nb=Number(pb[i]);if(na>nb)return 1;if(nb>na)return-1;if(!isNaN(na)&&isNaN(nb))return 1;if(isNaN(na)&&!isNaN(nb))return-1;}return 0;};var semverCompare$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(semverCompare);async function readJson(filePath){const content=await fs$o.readFile(filePath,"utf8");return JSON.parse(content);}const purpose="Transform react-icons v2 imports to v3 form";const description="\nModifies all found react-icons import and require statements from their v2 form\nto the path structure used in react-icons v3. For instance:\n\nfrom: import {MdPerson} from 'react-icons/lib/md'\n  to: import {MdPerson} from 'react-icons/md'\n\nfrom: import PersonIcon from 'react-icons/lib/md/person'\n  to: import {MdPerson as PersonIcon} from 'react-icons/md'\n".trim();const reactIconsV3={purpose,description,filename:"reactIconsV3.js",verify:async context=>{const{workDir}=context;const studioPkg=await maybeReadJson(path__default.default.join(workDir,"package.json"));const dependencies=studioPkg&&studioPkg.dependencies||{};const dependencyVersion=(dependencies["react-icons"]||"").replace(/^[\^~]/,"");if(!dependencyVersion){throw new Error("Could not find react-icons declared as dependency in package.json");}if(semverCompare$1(dependencyVersion,"3.0.0")<0){throw new Error("react-icons declared in package.json dependencies is lower than 3.0.0");}const iconPkgPath=resolveFrom$1.silent(workDir,"react-icons/package.json");const iconPkg=iconPkgPath&&(await maybeReadJson(iconPkgPath));if(iconPkg&&semverCompare$1(iconPkg.version,"3.0.0")<0){throw new Error("The installed version of react-icon seems to be < 3.0.0");}}};async function maybeReadJson(jsonPath){try{return await readJson(jsonPath);}catch(err){return null;}}var mods={reactIconsV3,partsTypeDirective,deskRename};const codemodAction=async function codemodAction2(args,context){const{output,cliRoot,workDir}=context;const[name]=args.argsWithoutOptions;const cliFlags=args.extOptions;if(!name){printMods(output);return;}const normalizedMods={};for(const[originalName,mod2]of Object.entries(mods)){normalizedMods[originalName.toLowerCase()]=mod2;}const mod=normalizedMods[name.toLowerCase()];if(!mod){throw new Error("Codemod with name \"".concat(name,"\" not found"));}if(typeof mod.verify==="function"&&cliFlags.verify!==false){await mod.verify(context);}const exts=cliFlags.extensions?cliFlags.extensions.split(",").map(ext=>ext.trim().replace(/^\./,"")):["js","ts","tsx"];const dryRun=Boolean(typeof cliFlags.dry==="undefined"?false:cliFlags.dry);ensureNpx();const hasGitIgnore=require$$0__default.default.existsSync(path__default.default.join(workDir,".gitignore"));const modPath=path__default.default.resolve(path__default.default.join(cliRoot,"codemods",mod.filename));const cmdArgs=["jscodeshift","--ignore-pattern","node_modules","--ignore-pattern","dist",hasGitIgnore&&"--ignore-config",hasGitIgnore&&".gitignore","-t",modPath,"--extensions",exts.join(","),dryRun&&"--dry",workDir].filter(item=>typeof item==="string");const child=require$$0__default$1.default.spawn("npx",cmdArgs,{stdio:"inherit"});process.on("SIGINT",()=>{child.kill(2);});child.on("close",code=>{process.exit(code||void 0);});};function printMods(output){output.print("Available code modifications:\n");for(const[modName,mod]of Object.entries(mods)){output.print("".concat(modName," - ").concat(mod.purpose));}}function ensureNpx(){try{const npxHelp=require$$0__default$1.default.execSync("npx --help",{encoding:"utf8"});if(!npxHelp.includes("npm")){throw new Error("Not the npx we expected");}}catch(err){throw new Error("Failed to run \"npx\" - required to run codemods. Do you have a recent version of npm installed?");}}const helpText$9="\nRuns a given code modification script on the current studio folder.\nRunning the command without a specified codemod name will list available transformations.\n\nOptions\n  --dry Dry run (no changes are made to files)\n  --extensions=EXT Transform files with these file extensions (comma separated list)\n                   (default: js,ts,tsx)\n  --no-verify Skips verification steps before running codemod\n\nExamples\n  # Show available code mods\n  sanity codemod\n\n  # Run codemod to transform react-icons imports from v2 style to v3 style,\n  # but only as a dry-run (do not write the files)\n  sanity codemod reactIconsV3 --dry\n\n";const codemodCommand={name:"codemod",signature:"[CODEMOD_NAME]",description:"Updates Sanity Studio codebase with a code modification script",helpText:helpText$9,action:codemodAction};/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ /** `Object#toString` result references. */var objectTag='[object Object]';/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */function isHostObject(value){// Many host objects are `Object` objects that can coerce to strings
// despite having improperly defined `toString` methods.
var result=false;if(value!=null&&typeof value.toString!='function'){try{result=!!(value+'');}catch(e){}}return result;}/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */function overArg(func,transform){return function(arg){return func(transform(arg));};}/** Used for built-in method references. */var funcProto=Function.prototype,objectProto$2=Object.prototype;/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty$3=objectProto$2.hasOwnProperty;/** Used to infer the `Object` constructor. */var objectCtorString=funcToString.call(Object);/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */var objectToString$2=objectProto$2.toString;/** Built-in value references. */var getPrototype=overArg(Object.getPrototypeOf,Object);/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */function isObjectLike$2(value){return!!value&&typeof value=='object';}/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */function isPlainObject$3(value){if(!isObjectLike$2(value)||objectToString$2.call(value)!=objectTag||isHostObject(value)){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty$3.call(proto,'constructor')&&proto.constructor;return typeof Ctor=='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;}var lodash_isplainobject=isPlainObject$3;const isPlainObject$2=lodash_isplainobject;function isPromiseLike(obj){return obj&&typeof obj==='object'&&typeof obj.then==='function';}function promiseProps(obj){const keys=Object.keys(obj);const values=keys.map(key=>obj[key]);return promiseArray(values).then(results=>{const result={};for(let i=0;i<keys.length;i++){result[keys[i]]=results[i];}return result;});}function promiseArray(arr){return Promise.all(arr.map(promisePropsRecursive));}function promisePropsRecursive(obj){if(isPromiseLike(obj)){return obj.then(promisePropsRecursive);}if(isPlainObject$2(obj)){return promiseProps(obj);}if(Array.isArray(obj)){return promiseArray(obj);}return Promise.resolve(obj);}var promisePropsRecursive_1=promisePropsRecursive;var promiseProps$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(promisePropsRecursive_1);var xdgBasedir$2={};(function(exports){const os=require$$0__default$2.default;const path=path__default.default;const homeDirectory=os.homedir();const{env}=process;exports.data=env.XDG_DATA_HOME||(homeDirectory?path.join(homeDirectory,'.local','share'):undefined);exports.config=env.XDG_CONFIG_HOME||(homeDirectory?path.join(homeDirectory,'.config'):undefined);exports.cache=env.XDG_CACHE_HOME||(homeDirectory?path.join(homeDirectory,'.cache'):undefined);exports.runtime=env.XDG_RUNTIME_DIR||undefined;exports.dataDirs=(env.XDG_DATA_DIRS||'/usr/local/share/:/usr/share/').split(':');if(exports.data){exports.dataDirs.unshift(exports.data);}exports.configDirs=(env.XDG_CONFIG_DIRS||'/etc/xdg').split(':');if(exports.config){exports.configDirs.unshift(exports.config);}})(xdgBasedir$2);var xdgBasedir$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(xdgBasedir$2);var registryUrl$2={exports:{}};var utils$b={};var ini$5={};ini$5.parse=ini$5.decode=decode$1;ini$5.stringify=ini$5.encode=encode$1;ini$5.safe=safe$1;ini$5.unsafe=unsafe$1;var eol$1=typeof process!=='undefined'&&process.platform==='win32'?'\r\n':'\n';function encode$1(obj,opt){var children=[];var out='';if(typeof opt==='string'){opt={section:opt,whitespace:false};}else{opt=opt||{};opt.whitespace=opt.whitespace===true;}var separator=opt.whitespace?' = ':'=';Object.keys(obj).forEach(function(k,_,__){var val=obj[k];if(val&&Array.isArray(val)){val.forEach(function(item){out+=safe$1(k+'[]')+separator+safe$1(item)+'\n';});}else if(val&&typeof val==='object')children.push(k);else out+=safe$1(k)+separator+safe$1(val)+eol$1;});if(opt.section&&out.length)out='['+safe$1(opt.section)+']'+eol$1+out;children.forEach(function(k,_,__){var nk=dotSplit$1(k).join('\\.');var section=(opt.section?opt.section+'.':'')+nk;var child=encode$1(obj[k],{section:section,whitespace:opt.whitespace});if(out.length&&child.length)out+=eol$1;out+=child;});return out;}function dotSplit$1(str){return str.replace(/\1/g,'\u0002LITERAL\\1LITERAL\u0002').replace(/\\\./g,'\u0001').split(/\./).map(function(part){return part.replace(/\1/g,'\\.').replace(/\2LITERAL\\1LITERAL\2/g,'\u0001');});}function decode$1(str){var out={};var p=out;var section=null;//          section     |key      = value
var re=/^\[([^\]]*)\]$|^([^=]+)(=(.*))?$/i;var lines=str.split(/[\r\n]+/g);lines.forEach(function(line,_,__){if(!line||line.match(/^\s*[;#]/))return;var match=line.match(re);if(!match)return;if(match[1]!==undefined){section=unsafe$1(match[1]);if(section==='__proto__'){// not allowed
// keep parsing the section, but don't attach it.
p={};return;}p=out[section]=out[section]||{};return;}var key=unsafe$1(match[2]);if(key==='__proto__')return;var value=match[3]?unsafe$1(match[4]):true;switch(value){case'true':case'false':case'null':value=JSON.parse(value);}// Convert keys with '[]' suffix to an array
if(key.length>2&&key.slice(-2)==='[]'){key=key.substring(0,key.length-2);if(key==='__proto__')return;if(!p[key])p[key]=[];else if(!Array.isArray(p[key]))p[key]=[p[key]];}// safeguard against resetting a previously defined
// array by accidentally forgetting the brackets
if(Array.isArray(p[key]))p[key].push(value);else p[key]=value;});// {a:{y:1},"a.b":{x:2}} --> {a:{y:1,b:{x:2}}}
// use a filter to return the keys that have to be deleted.
Object.keys(out).filter(function(k,_,__){if(!out[k]||typeof out[k]!=='object'||Array.isArray(out[k]))return false;// see if the parent section is also an object.
// if so, add it to that, and mark this one for deletion
var parts=dotSplit$1(k);var p=out;var l=parts.pop();var nl=l.replace(/\\\./g,'.');parts.forEach(function(part,_,__){if(part==='__proto__')return;if(!p[part]||typeof p[part]!=='object')p[part]={};p=p[part];});if(p===out&&nl===l)return false;p[nl]=out[k];return true;}).forEach(function(del,_,__){delete out[del];});return out;}function isQuoted$1(val){return val.charAt(0)==='"'&&val.slice(-1)==='"'||val.charAt(0)==="'"&&val.slice(-1)==="'";}function safe$1(val){return typeof val!=='string'||val.match(/[=\r\n]/)||val.match(/^\[/)||val.length>1&&isQuoted$1(val)||val!==val.trim()?JSON.stringify(val):val.replace(/;/g,'\\;').replace(/#/g,'\\#');}function unsafe$1(val,doUnesc){val=(val||'').trim();if(isQuoted$1(val)){// remove the single quotes before calling JSON.parse
if(val.charAt(0)==="'")val=val.substr(1,val.length-2);try{val=JSON.parse(val);}catch(_){}}else{// walk the val to find the first not-escaped ; character
var esc=false;var unesc='';for(var i=0,l=val.length;i<l;i++){var c=val.charAt(i);if(esc){if('\\;#'.indexOf(c)!==-1)unesc+=c;else unesc+='\\'+c;esc=false;}else if(';#'.indexOf(c)!==-1)break;else if(c==='\\')esc=true;else unesc+=c;}if(esc)unesc+='\\';return unesc.trim();}return val;}var singleComment=1;var multiComment=2;function stripWithoutWhitespace(){return'';}function stripWithWhitespace(str,start,end){return str.slice(start,end).replace(/\S/g,' ');}var stripJsonComments$1=function(str,opts){opts=opts||{};var currentChar;var nextChar;var insideString=false;var insideComment=false;var offset=0;var ret='';var strip=opts.whitespace===false?stripWithoutWhitespace:stripWithWhitespace;for(var i=0;i<str.length;i++){currentChar=str[i];nextChar=str[i+1];if(!insideComment&&currentChar==='"'){var escaped=str[i-1]==='\\'&&str[i-2]!=='\\';if(!escaped){insideString=!insideString;}}if(insideString){continue;}if(!insideComment&&currentChar+nextChar==='//'){ret+=str.slice(offset,i);offset=i;insideComment=singleComment;i++;}else if(insideComment===singleComment&&currentChar+nextChar==='\r\n'){i++;insideComment=false;ret+=strip(str,offset,i);offset=i;continue;}else if(insideComment===singleComment&&currentChar==='\n'){insideComment=false;ret+=strip(str,offset,i);offset=i;}else if(!insideComment&&currentChar+nextChar==='/*'){ret+=str.slice(offset,i);offset=i;insideComment=multiComment;i++;continue;}else if(insideComment===multiComment&&currentChar+nextChar==='*/'){i++;insideComment=false;ret+=strip(str,offset,i+1);offset=i+1;continue;}}return ret+(insideComment?strip(str.substr(offset)):str.substr(offset));};var fs$m=require$$0__default.default;var ini$4=ini$5;var path$r=path__default.default;var stripJsonComments=stripJsonComments$1;var parse$e=utils$b.parse=function(content){//if it ends in .json or starts with { then it must be json.
//must be done this way, because ini accepts everything.
//can't just try and parse it and let it throw if it's not ini.
//everything is ini. even json with a syntax error.
if(/^\s*{/.test(content))return JSON.parse(stripJsonComments(content));return ini$4.parse(content);};var file=utils$b.file=function(){var args=[].slice.call(arguments).filter(function(arg){return arg!=null;});//path.join breaks if it's a not a string, so just skip this.
for(var i in args)if('string'!==typeof args[i])return;var file=path$r.join.apply(null,args);try{return fs$m.readFileSync(file,'utf-8');}catch(err){return;}};utils$b.json=function(){var content=file.apply(null,arguments);return content?parse$e(content):null;};utils$b.env=function(prefix,env){env=env||process.env;var obj={};var l=prefix.length;for(var k in env){if(k.toLowerCase().indexOf(prefix.toLowerCase())===0){var keypath=k.substring(l).split('__');// Trim empty strings from keypath array
var _emptyStringIndex;while((_emptyStringIndex=keypath.indexOf(''))>-1){keypath.splice(_emptyStringIndex,1);}var cursor=obj;keypath.forEach(function _buildSubObj(_subkey,i){// (check for _subkey first so we ignore empty strings)
// (check for cursor to avoid assignment to primitive objects)
if(!_subkey||typeof cursor!=='object')return;// If this is the last key, just stuff the value in there
// Assigns actual value from env variable to final key
// (unless it's just an empty string- in that case use the last valid key)
if(i===keypath.length-1)cursor[_subkey]=env[k];// Build sub-object if nothing already exists at the keypath
if(cursor[_subkey]===undefined)cursor[_subkey]={};// Increment cursor used to track the object at the current depth
cursor=cursor[_subkey];});}}return obj;};utils$b.find=function(){var rel=path$r.join.apply(null,[].slice.call(arguments));function find(start,rel){var file=path$r.join(start,rel);try{fs$m.statSync(file);return file;}catch(err){if(path$r.dirname(start)!==start)// root
return find(path$r.dirname(start),rel);}}return find(process.cwd(),rel);};var deepExtend$2={exports:{}};/*!
 * @description Recursive object extending
 * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>
 * @license MIT
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2013-2018 Viacheslav Lotsmanov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */function isSpecificValue(val){return val instanceof Buffer||val instanceof Date||val instanceof RegExp?true:false;}function cloneSpecificValue(val){if(val instanceof Buffer){var x=Buffer.alloc?Buffer.alloc(val.length):new Buffer(val.length);val.copy(x);return x;}else if(val instanceof Date){return new Date(val.getTime());}else if(val instanceof RegExp){return new RegExp(val);}else{throw new Error('Unexpected situation');}}/**
 * Recursive cloning array.
 */function deepCloneArray(arr){var clone=[];arr.forEach(function(item,index){if(typeof item==='object'&&item!==null){if(Array.isArray(item)){clone[index]=deepCloneArray(item);}else if(isSpecificValue(item)){clone[index]=cloneSpecificValue(item);}else{clone[index]=deepExtend$1({},item);}}else{clone[index]=item;}});return clone;}function safeGetProperty(object,property){return property==='__proto__'?undefined:object[property];}/**
 * Extening object that entered in first argument.
 *
 * Returns extended object or false if have no target object or incorrect type.
 *
 * If you wish to clone source object (without modify it), just use empty new
 * object as first argument, like this:
 *   deepExtend({}, yourObj_1, [yourObj_N]);
 */var deepExtend$1=deepExtend$2.exports=function/*obj_1, [obj_2], [obj_N]*/(){if(arguments.length<1||typeof arguments[0]!=='object'){return false;}if(arguments.length<2){return arguments[0];}var target=arguments[0];// convert arguments to array and cut off target object
var args=Array.prototype.slice.call(arguments,1);var val,src;args.forEach(function(obj){// skip argument if isn't an object, is null, or is an array
if(typeof obj!=='object'||obj===null||Array.isArray(obj)){return;}Object.keys(obj).forEach(function(key){src=safeGetProperty(target,key);// source value
val=safeGetProperty(obj,key);// new value
// recursion prevention
if(val===target){return;/**
			 * if new value isn't object then just overwrite by new value
			 * instead of extending.
			 */}else if(typeof val!=='object'||val===null){target[key]=val;return;// just clone arrays (and recursive clone objects inside)
}else if(Array.isArray(val)){target[key]=deepCloneArray(val);return;// custom cloning and overwrite for specific objects
}else if(isSpecificValue(val)){target[key]=cloneSpecificValue(val);return;// overwrite by new value if source isn't object or array
}else if(typeof src!=='object'||src===null||Array.isArray(src)){target[key]=deepExtend$1({},val);return;// source value and new value is objects both, extending...
}else{target[key]=deepExtend$1(src,val);return;}});});return target;};var deepExtendExports=deepExtend$2.exports;function hasKey$1(obj,keys){var o=obj;keys.slice(0,-1).forEach(function(key){o=o[key]||{};});var key=keys[keys.length-1];return key in o;}function isNumber$4(x){if(typeof x==='number'){return true;}if(/^0x[0-9a-f]+$/i.test(x)){return true;}return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x);}function isConstructorOrProto(obj,key){return key==='constructor'&&typeof obj[key]==='function'||key==='__proto__';}var minimist=function(args,opts){if(!opts){opts={};}var flags={bools:{},strings:{},unknownFn:null};if(typeof opts.unknown==='function'){flags.unknownFn=opts.unknown;}if(typeof opts.boolean==='boolean'&&opts.boolean){flags.allBools=true;}else{[].concat(opts.boolean).filter(Boolean).forEach(function(key){flags.bools[key]=true;});}var aliases={};function aliasIsBoolean(key){return aliases[key].some(function(x){return flags.bools[x];});}Object.keys(opts.alias||{}).forEach(function(key){aliases[key]=[].concat(opts.alias[key]);aliases[key].forEach(function(x){aliases[x]=[key].concat(aliases[key].filter(function(y){return x!==y;}));});});[].concat(opts.string).filter(Boolean).forEach(function(key){flags.strings[key]=true;if(aliases[key]){[].concat(aliases[key]).forEach(function(k){flags.strings[k]=true;});}});var defaults=opts.default||{};var argv={_:[]};function argDefined(key,arg){return flags.allBools&&/^--[^=]+$/.test(arg)||flags.strings[key]||flags.bools[key]||aliases[key];}function setKey(obj,keys,value){var o=obj;for(var i=0;i<keys.length-1;i++){var key=keys[i];if(isConstructorOrProto(o,key)){return;}if(o[key]===undefined){o[key]={};}if(o[key]===Object.prototype||o[key]===Number.prototype||o[key]===String.prototype){o[key]={};}if(o[key]===Array.prototype){o[key]=[];}o=o[key];}var lastKey=keys[keys.length-1];if(isConstructorOrProto(o,lastKey)){return;}if(o===Object.prototype||o===Number.prototype||o===String.prototype){o={};}if(o===Array.prototype){o=[];}if(o[lastKey]===undefined||flags.bools[lastKey]||typeof o[lastKey]==='boolean'){o[lastKey]=value;}else if(Array.isArray(o[lastKey])){o[lastKey].push(value);}else{o[lastKey]=[o[lastKey],value];}}function setArg(key,val,arg){if(arg&&flags.unknownFn&&!argDefined(key,arg)){if(flags.unknownFn(arg)===false){return;}}var value=!flags.strings[key]&&isNumber$4(val)?Number(val):val;setKey(argv,key.split('.'),value);(aliases[key]||[]).forEach(function(x){setKey(argv,x.split('.'),value);});}Object.keys(flags.bools).forEach(function(key){setArg(key,defaults[key]===undefined?false:defaults[key]);});var notFlags=[];if(args.indexOf('--')!==-1){notFlags=args.slice(args.indexOf('--')+1);args=args.slice(0,args.indexOf('--'));}for(var i=0;i<args.length;i++){var arg=args[i];var key;var next;if(/^--.+=/.test(arg)){// Using [\s\S] instead of . because js doesn't support the
// 'dotall' regex modifier. See:
// http://stackoverflow.com/a/1068308/13216
var m=arg.match(/^--([^=]+)=([\s\S]*)$/);key=m[1];var value=m[2];if(flags.bools[key]){value=value!=='false';}setArg(key,value,arg);}else if(/^--no-.+/.test(arg)){key=arg.match(/^--no-(.+)/)[1];setArg(key,false,arg);}else if(/^--.+/.test(arg)){key=arg.match(/^--(.+)/)[1];next=args[i+1];if(next!==undefined&&!/^(-|--)[^-]/.test(next)&&!flags.bools[key]&&!flags.allBools&&(aliases[key]?!aliasIsBoolean(key):true)){setArg(key,next,arg);i+=1;}else if(/^(true|false)$/.test(next)){setArg(key,next==='true',arg);i+=1;}else{setArg(key,flags.strings[key]?'':true,arg);}}else if(/^-[^-]+/.test(arg)){var letters=arg.slice(1,-1).split('');var broken=false;for(var j=0;j<letters.length;j++){next=arg.slice(j+2);if(next==='-'){setArg(letters[j],next,arg);continue;}if(/[A-Za-z]/.test(letters[j])&&next[0]==='='){setArg(letters[j],next.slice(1),arg);broken=true;break;}if(/[A-Za-z]/.test(letters[j])&&/-?\d+(\.\d*)?(e-?\d+)?$/.test(next)){setArg(letters[j],next,arg);broken=true;break;}if(letters[j+1]&&letters[j+1].match(/\W/)){setArg(letters[j],arg.slice(j+2),arg);broken=true;break;}else{setArg(letters[j],flags.strings[letters[j]]?'':true,arg);}}key=arg.slice(-1)[0];if(!broken&&key!=='-'){if(args[i+1]&&!/^(-|--)[^-]/.test(args[i+1])&&!flags.bools[key]&&(aliases[key]?!aliasIsBoolean(key):true)){setArg(key,args[i+1],arg);i+=1;}else if(args[i+1]&&/^(true|false)$/.test(args[i+1])){setArg(key,args[i+1]==='true',arg);i+=1;}else{setArg(key,flags.strings[key]?'':true,arg);}}}else{if(!flags.unknownFn||flags.unknownFn(arg)!==false){argv._.push(flags.strings._||!isNumber$4(arg)?arg:Number(arg));}if(opts.stopEarly){argv._.push.apply(argv._,args.slice(i+1));break;}}}Object.keys(defaults).forEach(function(k){if(!hasKey$1(argv,k.split('.'))){setKey(argv,k.split('.'),defaults[k]);(aliases[k]||[]).forEach(function(x){setKey(argv,x.split('.'),defaults[k]);});}});if(opts['--']){argv['--']=notFlags.slice();}else{notFlags.forEach(function(k){argv._.push(k);});}return argv;};var minimist$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(minimist);var cc=utils$b;var join=path__default.default.join;var deepExtend=deepExtendExports;var etc='/etc';var win$1=process.platform==="win32";var home=win$1?process.env.USERPROFILE:process.env.HOME;var rc$1=function(name,defaults,argv,parse){if('string'!==typeof name)throw new Error('rc(name): name *must* be string');if(!argv)argv=minimist(process.argv.slice(2));defaults=('string'===typeof defaults?cc.json(defaults):defaults)||{};parse=parse||cc.parse;var env=cc.env(name+'_');var configs=[defaults];var configFiles=[];function addConfigFile(file){if(configFiles.indexOf(file)>=0)return;var fileConfig=cc.file(file);if(fileConfig){configs.push(parse(fileConfig));configFiles.push(file);}}// which files do we look at?
if(!win$1)[join(etc,name,'config'),join(etc,name+'rc')].forEach(addConfigFile);if(home)[join(home,'.config',name,'config'),join(home,'.config',name),join(home,'.'+name,'config'),join(home,'.'+name+'rc')].forEach(addConfigFile);addConfigFile(cc.find('.'+name+'rc'));if(env.config)addConfigFile(env.config);if(argv.config)addConfigFile(argv.config);return deepExtend.apply(null,configs.concat([env,argv,configFiles.length?{configs:configFiles,config:configFiles[configFiles.length-1]}:undefined]));};const rc=rc$1;const registryUrl$1=scope=>{const result=rc('npm',{registry:'https://registry.npmjs.org/'});const url=result["".concat(scope,":registry")]||result.config_registry||result.registry;return url.slice(-1)==='/'?url:"".concat(url,"/");};registryUrl$2.exports=registryUrl$1;// TODO: Remove this for the next major release
registryUrl$2.exports.default=registryUrl$1;var registryUrlExports=registryUrl$2.exports;var npmConf$1={exports:{}};var dist$4={};var caFile={};var constants$5=require$$0__default$3.default;var origCwd$1=process.cwd;var cwd$1=null;var platform$3=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){if(!cwd$1)cwd$1=origCwd$1.call(process);return cwd$1;};try{process.cwd();}catch(er){}// This check is needed until node.js 12 is required
if(typeof process.chdir==='function'){var chdir$1=process.chdir;process.chdir=function(d){cwd$1=null;chdir$1.call(process,d);};if(Object.setPrototypeOf)Object.setPrototypeOf(process.chdir,chdir$1);}var polyfills$3=patch$3;function patch$3(fs){// (re-)implement some things that are known busted or missing.
// lchmod, broken prior to 0.6.2
// back-port the fix here.
if(constants$5.hasOwnProperty('O_SYMLINK')&&process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)){patchLchmod(fs);}// lutimes implementation, or no-op
if(!fs.lutimes){patchLutimes(fs);}// https://github.com/isaacs/node-graceful-fs/issues/4
// Chown should not fail on einval or eperm if non-root.
// It should not fail on enosys ever, as this just indicates
// that a fs doesn't support the intended operation.
fs.chown=chownFix(fs.chown);fs.fchown=chownFix(fs.fchown);fs.lchown=chownFix(fs.lchown);fs.chmod=chmodFix(fs.chmod);fs.fchmod=chmodFix(fs.fchmod);fs.lchmod=chmodFix(fs.lchmod);fs.chownSync=chownFixSync(fs.chownSync);fs.fchownSync=chownFixSync(fs.fchownSync);fs.lchownSync=chownFixSync(fs.lchownSync);fs.chmodSync=chmodFixSync(fs.chmodSync);fs.fchmodSync=chmodFixSync(fs.fchmodSync);fs.lchmodSync=chmodFixSync(fs.lchmodSync);fs.stat=statFix(fs.stat);fs.fstat=statFix(fs.fstat);fs.lstat=statFix(fs.lstat);fs.statSync=statFixSync(fs.statSync);fs.fstatSync=statFixSync(fs.fstatSync);fs.lstatSync=statFixSync(fs.lstatSync);// if lchmod/lchown do not exist, then make them no-ops
if(fs.chmod&&!fs.lchmod){fs.lchmod=function(path,mode,cb){if(cb)process.nextTick(cb);};fs.lchmodSync=function(){};}if(fs.chown&&!fs.lchown){fs.lchown=function(path,uid,gid,cb){if(cb)process.nextTick(cb);};fs.lchownSync=function(){};}// on Windows, A/V software can lock the directory, causing this
// to fail with an EACCES or EPERM if the directory contains newly
// created files.  Try again on failure, for up to 60 seconds.
// Set the timeout this long because some Windows Anti-Virus, such as Parity
// bit9, may lock files for up to a minute, causing npm package install
// failures. Also, take care to yield the scheduler. Windows scheduling gives
// CPU to a busy looping process, which can cause the program causing the lock
// contention to be starved of CPU by node, so the contention doesn't resolve.
if(platform$3==="win32"){fs.rename=typeof fs.rename!=='function'?fs.rename:function(fs$rename){function rename(from,to,cb){var start=Date.now();var backoff=0;fs$rename(from,to,function CB(er){if(er&&(er.code==="EACCES"||er.code==="EPERM")&&Date.now()-start<60000){setTimeout(function(){fs.stat(to,function(stater,st){if(stater&&stater.code==="ENOENT")fs$rename(from,to,CB);else cb(er);});},backoff);if(backoff<100)backoff+=10;return;}if(cb)cb(er);});}if(Object.setPrototypeOf)Object.setPrototypeOf(rename,fs$rename);return rename;}(fs.rename);}// if read() returns EAGAIN, then just try it again.
fs.read=typeof fs.read!=='function'?fs.read:function(fs$read){function read(fd,buffer,offset,length,position,callback_){var callback;if(callback_&&typeof callback_==='function'){var eagCounter=0;callback=function(er,_,__){if(er&&er.code==='EAGAIN'&&eagCounter<10){eagCounter++;return fs$read.call(fs,fd,buffer,offset,length,position,callback);}callback_.apply(this,arguments);};}return fs$read.call(fs,fd,buffer,offset,length,position,callback);}// This ensures `util.promisify` works as it does for native `fs.read`.
if(Object.setPrototypeOf)Object.setPrototypeOf(read,fs$read);return read;}(fs.read);fs.readSync=typeof fs.readSync!=='function'?fs.readSync:function(fs$readSync){return function(fd,buffer,offset,length,position){var eagCounter=0;while(true){try{return fs$readSync.call(fs,fd,buffer,offset,length,position);}catch(er){if(er.code==='EAGAIN'&&eagCounter<10){eagCounter++;continue;}throw er;}}};}(fs.readSync);function patchLchmod(fs){fs.lchmod=function(path,mode,callback){fs.open(path,constants$5.O_WRONLY|constants$5.O_SYMLINK,mode,function(err,fd){if(err){if(callback)callback(err);return;}// prefer to return the chmod error, if one occurs,
// but still try to close, and report closing errors if they occur.
fs.fchmod(fd,mode,function(err){fs.close(fd,function(err2){if(callback)callback(err||err2);});});});};fs.lchmodSync=function(path,mode){var fd=fs.openSync(path,constants$5.O_WRONLY|constants$5.O_SYMLINK,mode);// prefer to return the chmod error, if one occurs,
// but still try to close, and report closing errors if they occur.
var threw=true;var ret;try{ret=fs.fchmodSync(fd,mode);threw=false;}finally{if(threw){try{fs.closeSync(fd);}catch(er){}}else{fs.closeSync(fd);}}return ret;};}function patchLutimes(fs){if(constants$5.hasOwnProperty("O_SYMLINK")&&fs.futimes){fs.lutimes=function(path,at,mt,cb){fs.open(path,constants$5.O_SYMLINK,function(er,fd){if(er){if(cb)cb(er);return;}fs.futimes(fd,at,mt,function(er){fs.close(fd,function(er2){if(cb)cb(er||er2);});});});};fs.lutimesSync=function(path,at,mt){var fd=fs.openSync(path,constants$5.O_SYMLINK);var ret;var threw=true;try{ret=fs.futimesSync(fd,at,mt);threw=false;}finally{if(threw){try{fs.closeSync(fd);}catch(er){}}else{fs.closeSync(fd);}}return ret;};}else if(fs.futimes){fs.lutimes=function(_a,_b,_c,cb){if(cb)process.nextTick(cb);};fs.lutimesSync=function(){};}}function chmodFix(orig){if(!orig)return orig;return function(target,mode,cb){return orig.call(fs,target,mode,function(er){if(chownErOk(er))er=null;if(cb)cb.apply(this,arguments);});};}function chmodFixSync(orig){if(!orig)return orig;return function(target,mode){try{return orig.call(fs,target,mode);}catch(er){if(!chownErOk(er))throw er;}};}function chownFix(orig){if(!orig)return orig;return function(target,uid,gid,cb){return orig.call(fs,target,uid,gid,function(er){if(chownErOk(er))er=null;if(cb)cb.apply(this,arguments);});};}function chownFixSync(orig){if(!orig)return orig;return function(target,uid,gid){try{return orig.call(fs,target,uid,gid);}catch(er){if(!chownErOk(er))throw er;}};}function statFix(orig){if(!orig)return orig;// Older versions of Node erroneously returned signed integers for
// uid + gid.
return function(target,options,cb){if(typeof options==='function'){cb=options;options=null;}function callback(er,stats){if(stats){if(stats.uid<0)stats.uid+=0x100000000;if(stats.gid<0)stats.gid+=0x100000000;}if(cb)cb.apply(this,arguments);}return options?orig.call(fs,target,options,callback):orig.call(fs,target,callback);};}function statFixSync(orig){if(!orig)return orig;// Older versions of Node erroneously returned signed integers for
// uid + gid.
return function(target,options){var stats=options?orig.call(fs,target,options):orig.call(fs,target);if(stats){if(stats.uid<0)stats.uid+=0x100000000;if(stats.gid<0)stats.gid+=0x100000000;}return stats;};}// ENOSYS means that the fs doesn't support the op. Just ignore
// that, because it doesn't matter.
//
// if there's no getuid, or if getuid() is something other
// than 0, and the error is EINVAL or EPERM, then just ignore
// it.
//
// This specific case is a silent failure in cp, install, tar,
// and most other unix tools that manage permissions.
//
// When running as root, or if other types of errors are
// encountered, then it's strict.
function chownErOk(er){if(!er)return true;if(er.code==="ENOSYS")return true;var nonroot=!process.getuid||process.getuid()!==0;if(nonroot){if(er.code==="EINVAL"||er.code==="EPERM")return true;}return false;}}var Stream$2=require$$0__default$4.default.Stream;var legacyStreams$1=legacy$3;function legacy$3(fs){return{ReadStream:ReadStream,WriteStream:WriteStream};function ReadStream(path,options){if(!(this instanceof ReadStream))return new ReadStream(path,options);Stream$2.call(this);var self=this;this.path=path;this.fd=null;this.readable=true;this.paused=false;this.flags='r';this.mode=438;/*=0666*/this.bufferSize=64*1024;options=options||{};// Mixin options into this
var keys=Object.keys(options);for(var index=0,length=keys.length;index<length;index++){var key=keys[index];this[key]=options[key];}if(this.encoding)this.setEncoding(this.encoding);if(this.start!==undefined){if('number'!==typeof this.start){throw TypeError('start must be a Number');}if(this.end===undefined){this.end=Infinity;}else if('number'!==typeof this.end){throw TypeError('end must be a Number');}if(this.start>this.end){throw new Error('start must be <= end');}this.pos=this.start;}if(this.fd!==null){process.nextTick(function(){self._read();});return;}fs.open(this.path,this.flags,this.mode,function(err,fd){if(err){self.emit('error',err);self.readable=false;return;}self.fd=fd;self.emit('open',fd);self._read();});}function WriteStream(path,options){if(!(this instanceof WriteStream))return new WriteStream(path,options);Stream$2.call(this);this.path=path;this.fd=null;this.writable=true;this.flags='w';this.encoding='binary';this.mode=438;/*=0666*/this.bytesWritten=0;options=options||{};// Mixin options into this
var keys=Object.keys(options);for(var index=0,length=keys.length;index<length;index++){var key=keys[index];this[key]=options[key];}if(this.start!==undefined){if('number'!==typeof this.start){throw TypeError('start must be a Number');}if(this.start<0){throw new Error('start must be >= zero');}this.pos=this.start;}this.busy=false;this._queue=[];if(this.fd===null){this._open=fs.open;this._queue.push([this._open,this.path,this.flags,this.mode,undefined]);this.flush();}}}var clone_1$1=clone$5;var getPrototypeOf$1=Object.getPrototypeOf||function(obj){return obj.__proto__;};function clone$5(obj){if(obj===null||typeof obj!=='object')return obj;if(obj instanceof Object)var copy={__proto__:getPrototypeOf$1(obj)};else var copy=Object.create(null);Object.getOwnPropertyNames(obj).forEach(function(key){Object.defineProperty(copy,key,Object.getOwnPropertyDescriptor(obj,key));});return copy;}var fs$l=require$$0__default.default;var polyfills$2=polyfills$3;var legacy$2=legacyStreams$1;var clone$4=clone_1$1;var util$a=require$$0__default$5.default;/* istanbul ignore next - node 0.x polyfill */var gracefulQueue$1;var previousSymbol$1;/* istanbul ignore else - node 0.x polyfill */if(typeof Symbol==='function'&&typeof Symbol.for==='function'){gracefulQueue$1=Symbol.for('graceful-fs.queue');// This is used in testing by future versions
previousSymbol$1=Symbol.for('graceful-fs.previous');}else{gracefulQueue$1='___graceful-fs.queue';previousSymbol$1='___graceful-fs.previous';}function noop$6(){}function publishQueue$1(context,queue){Object.defineProperty(context,gracefulQueue$1,{get:function(){return queue;}});}var debug$4=noop$6;if(util$a.debuglog)debug$4=util$a.debuglog('gfs4');else if(/\bgfs4\b/i.test(process.env.NODE_DEBUG||''))debug$4=function(){var m=util$a.format.apply(util$a,arguments);m='GFS4: '+m.split(/\n/).join('\nGFS4: ');console.error(m);};// Once time initialization
if(!fs$l[gracefulQueue$1]){// This queue can be shared by multiple loaded instances
var queue$2=loadEnv.commonjsGlobal[gracefulQueue$1]||[];publishQueue$1(fs$l,queue$2);// Patch fs.close/closeSync to shared queue version, because we need
// to retry() whenever a close happens *anywhere* in the program.
// This is essential when multiple graceful-fs instances are
// in play at the same time.
fs$l.close=function(fs$close){function close(fd,cb){return fs$close.call(fs$l,fd,function(err){// This function uses the graceful-fs shared queue
if(!err){resetQueue$1();}if(typeof cb==='function')cb.apply(this,arguments);});}Object.defineProperty(close,previousSymbol$1,{value:fs$close});return close;}(fs$l.close);fs$l.closeSync=function(fs$closeSync){function closeSync(fd){// This function uses the graceful-fs shared queue
fs$closeSync.apply(fs$l,arguments);resetQueue$1();}Object.defineProperty(closeSync,previousSymbol$1,{value:fs$closeSync});return closeSync;}(fs$l.closeSync);if(/\bgfs4\b/i.test(process.env.NODE_DEBUG||'')){process.on('exit',function(){debug$4(fs$l[gracefulQueue$1]);require$$1__default$1.default.equal(fs$l[gracefulQueue$1].length,0);});}}if(!loadEnv.commonjsGlobal[gracefulQueue$1]){publishQueue$1(loadEnv.commonjsGlobal,fs$l[gracefulQueue$1]);}var gracefulFs$1=patch$2(clone$4(fs$l));if(process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!fs$l.__patched){gracefulFs$1=patch$2(fs$l);fs$l.__patched=true;}function patch$2(fs){// Everything that references the open() function needs to be in here
polyfills$2(fs);fs.gracefulify=patch$2;fs.createReadStream=createReadStream;fs.createWriteStream=createWriteStream;var fs$readFile=fs.readFile;fs.readFile=readFile;function readFile(path,options,cb){if(typeof options==='function')cb=options,options=null;return go$readFile(path,options,cb);function go$readFile(path,options,cb,startTime){return fs$readFile(path,options,function(err){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue$1([go$readFile,[path,options,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}var fs$writeFile=fs.writeFile;fs.writeFile=writeFile;function writeFile(path,data,options,cb){if(typeof options==='function')cb=options,options=null;return go$writeFile(path,data,options,cb);function go$writeFile(path,data,options,cb,startTime){return fs$writeFile(path,data,options,function(err){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue$1([go$writeFile,[path,data,options,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}var fs$appendFile=fs.appendFile;if(fs$appendFile)fs.appendFile=appendFile;function appendFile(path,data,options,cb){if(typeof options==='function')cb=options,options=null;return go$appendFile(path,data,options,cb);function go$appendFile(path,data,options,cb,startTime){return fs$appendFile(path,data,options,function(err){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue$1([go$appendFile,[path,data,options,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}var fs$copyFile=fs.copyFile;if(fs$copyFile)fs.copyFile=copyFile;function copyFile(src,dest,flags,cb){if(typeof flags==='function'){cb=flags;flags=0;}return go$copyFile(src,dest,flags,cb);function go$copyFile(src,dest,flags,cb,startTime){return fs$copyFile(src,dest,flags,function(err){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue$1([go$copyFile,[src,dest,flags,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}var fs$readdir=fs.readdir;fs.readdir=readdir;var noReaddirOptionVersions=/^v[0-5]\./;function readdir(path,options,cb){if(typeof options==='function')cb=options,options=null;var go$readdir=noReaddirOptionVersions.test(process.version)?function go$readdir(path,options,cb,startTime){return fs$readdir(path,fs$readdirCallback(path,options,cb,startTime));}:function go$readdir(path,options,cb,startTime){return fs$readdir(path,options,fs$readdirCallback(path,options,cb,startTime));};return go$readdir(path,options,cb);function fs$readdirCallback(path,options,cb,startTime){return function(err,files){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue$1([go$readdir,[path,options,cb],err,startTime||Date.now(),Date.now()]);else{if(files&&files.sort)files.sort();if(typeof cb==='function')cb.call(this,err,files);}};}}if(process.version.substr(0,4)==='v0.8'){var legStreams=legacy$2(fs);ReadStream=legStreams.ReadStream;WriteStream=legStreams.WriteStream;}var fs$ReadStream=fs.ReadStream;if(fs$ReadStream){ReadStream.prototype=Object.create(fs$ReadStream.prototype);ReadStream.prototype.open=ReadStream$open;}var fs$WriteStream=fs.WriteStream;if(fs$WriteStream){WriteStream.prototype=Object.create(fs$WriteStream.prototype);WriteStream.prototype.open=WriteStream$open;}Object.defineProperty(fs,'ReadStream',{get:function(){return ReadStream;},set:function(val){ReadStream=val;},enumerable:true,configurable:true});Object.defineProperty(fs,'WriteStream',{get:function(){return WriteStream;},set:function(val){WriteStream=val;},enumerable:true,configurable:true});// legacy names
var FileReadStream=ReadStream;Object.defineProperty(fs,'FileReadStream',{get:function(){return FileReadStream;},set:function(val){FileReadStream=val;},enumerable:true,configurable:true});var FileWriteStream=WriteStream;Object.defineProperty(fs,'FileWriteStream',{get:function(){return FileWriteStream;},set:function(val){FileWriteStream=val;},enumerable:true,configurable:true});function ReadStream(path,options){if(this instanceof ReadStream)return fs$ReadStream.apply(this,arguments),this;else return ReadStream.apply(Object.create(ReadStream.prototype),arguments);}function ReadStream$open(){var that=this;open(that.path,that.flags,that.mode,function(err,fd){if(err){if(that.autoClose)that.destroy();that.emit('error',err);}else{that.fd=fd;that.emit('open',fd);that.read();}});}function WriteStream(path,options){if(this instanceof WriteStream)return fs$WriteStream.apply(this,arguments),this;else return WriteStream.apply(Object.create(WriteStream.prototype),arguments);}function WriteStream$open(){var that=this;open(that.path,that.flags,that.mode,function(err,fd){if(err){that.destroy();that.emit('error',err);}else{that.fd=fd;that.emit('open',fd);}});}function createReadStream(path,options){return new fs.ReadStream(path,options);}function createWriteStream(path,options){return new fs.WriteStream(path,options);}var fs$open=fs.open;fs.open=open;function open(path,flags,mode,cb){if(typeof mode==='function')cb=mode,mode=null;return go$open(path,flags,mode,cb);function go$open(path,flags,mode,cb,startTime){return fs$open(path,flags,mode,function(err,fd){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue$1([go$open,[path,flags,mode,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}return fs;}function enqueue$1(elem){debug$4('ENQUEUE',elem[0].name,elem[1]);fs$l[gracefulQueue$1].push(elem);retry$3();}// keep track of the timeout between retry() calls
var retryTimer$1;// reset the startTime and lastTime to now
// this resets the start of the 60 second overall timeout as well as the
// delay between attempts so that we'll retry these jobs sooner
function resetQueue$1(){var now=Date.now();for(var i=0;i<fs$l[gracefulQueue$1].length;++i){// entries that are only a length of 2 are from an older version, don't
// bother modifying those since they'll be retried anyway.
if(fs$l[gracefulQueue$1][i].length>2){fs$l[gracefulQueue$1][i][3]=now;// startTime
fs$l[gracefulQueue$1][i][4]=now;// lastTime
}}// call retry to make sure we're actively processing the queue
retry$3();}function retry$3(){// clear the timer and remove it to help prevent unintended concurrency
clearTimeout(retryTimer$1);retryTimer$1=undefined;if(fs$l[gracefulQueue$1].length===0)return;var elem=fs$l[gracefulQueue$1].shift();var fn=elem[0];var args=elem[1];// these items may be unset if they were added by an older graceful-fs
var err=elem[2];var startTime=elem[3];var lastTime=elem[4];// if we don't have a startTime we have no way of knowing if we've waited
// long enough, so go ahead and retry this item now
if(startTime===undefined){debug$4('RETRY',fn.name,args);fn.apply(null,args);}else if(Date.now()-startTime>=60000){// it's been more than 60 seconds total, bail now
debug$4('TIMEOUT',fn.name,args);var cb=args.pop();if(typeof cb==='function')cb.call(null,err);}else{// the amount of time between the last attempt and right now
var sinceAttempt=Date.now()-lastTime;// the amount of time between when we first tried, and when we last tried
// rounded up to at least 1
var sinceStart=Math.max(lastTime-startTime,1);// backoff. wait longer than the total time we've been retrying, but only
// up to a maximum of 100ms
var desiredDelay=Math.min(sinceStart*1.2,100);// it's been long enough since the last retry, do it again
if(sinceAttempt>=desiredDelay){debug$4('RETRY',fn.name,args);fn.apply(null,args.concat([startTime]));}else{// if we can't do this job yet, push it to the end of the queue
// and let the next iteration check again
fs$l[gracefulQueue$1].push(elem);}}// schedule our next run if one isn't already scheduled
if(retryTimer$1===undefined){retryTimer$1=setTimeout(retry$3,0);}}var __importDefault$8=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(caFile,"__esModule",{value:true});caFile.readCAFileSync=void 0;const graceful_fs_1=__importDefault$8(gracefulFs$1);function readCAFileSync$1(filePath){try{const contents=graceful_fs_1.default.readFileSync(filePath,'utf8');const delim='-----END CERTIFICATE-----';const output=contents.split(delim).filter(ca=>Boolean(ca.trim())).map(ca=>"".concat(ca.trimLeft()).concat(delim));return output;}catch(err){if(err.code==='ENOENT')return undefined;throw err;}}caFile.readCAFileSync=readCAFileSync$1;(function(exports){var __createBinding=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||("get"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __exportStar=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p);};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(caFile,exports);})(dist$4);var configChain={exports:{}};var protoList=ProtoList$1;function setProto(obj,proto){if(typeof Object.setPrototypeOf==="function")return Object.setPrototypeOf(obj,proto);else obj.__proto__=proto;}function ProtoList$1(){this.list=[];var root=null;Object.defineProperty(this,'root',{get:function(){return root;},set:function(r){root=r;if(this.list.length){setProto(this.list[this.list.length-1],r);}},enumerable:true,configurable:true});}ProtoList$1.prototype={get length(){return this.list.length;},get keys(){var k=[];for(var i in this.list[0])k.push(i);return k;},get snapshot(){var o={};this.keys.forEach(function(k){o[k]=this.get(k);},this);return o;},get store(){return this.list[0];},push:function(obj){if(typeof obj!=="object")obj={valueOf:obj};if(this.list.length>=1){setProto(this.list[this.list.length-1],obj);}setProto(obj,this.root);return this.list.push(obj);},pop:function(){if(this.list.length>=2){setProto(this.list[this.list.length-2],this.root);}return this.list.pop();},unshift:function(obj){setProto(obj,this.list[0]||this.root);return this.list.unshift(obj);},shift:function(){if(this.list.length===1){setProto(this.list[0],this.root);}return this.list.shift();},get:function(key){return this.list[0][key];},set:function(key,val,save){if(!this.length)this.push({});if(save&&this.list[0].hasOwnProperty(key))this.push({});return this.list[0][key]=val;},forEach:function(fn,thisp){for(var key in this.list[0])fn.call(thisp,key,this.list[0][key]);},slice:function(){return this.list.slice.apply(this.list,arguments);},splice:function(){// handle injections
var ret=this.list.splice.apply(this.list,arguments);for(var i=0,l=this.list.length;i<l;i++){setProto(this.list[i],this.list[i+1]||this.root);}return ret;}};var ProtoList=protoList,path$q=path__default.default,fs$k=require$$0__default.default,ini$3=ini$5,EE$1=require$$3__default.default.EventEmitter,url$2=require$$0__default$6.default,http=require$$6__default.default;var exports$1=configChain.exports=function(){var args=[].slice.call(arguments),conf=new ConfigChain$1();while(args.length){var a=args.shift();if(a)conf.push('string'===typeof a?json$3(a):a);}return conf;};//recursively find a file...
exports$1.find=function(){var rel=path$q.join.apply(null,[].slice.call(arguments));function find(start,rel){var file=path$q.join(start,rel);try{fs$k.statSync(file);return file;}catch(err){if(path$q.dirname(start)!==start)// root
return find(path$q.dirname(start),rel);}}return find(__dirname,rel);};var parse$d=exports$1.parse=function(content,file,type){content=''+content;// if we don't know what it is, try json and fall back to ini
// if we know what it is, then it must be that.
if(!type){try{return JSON.parse(content);}catch(er){return ini$3.parse(content);}}else if(type==='json'){if(this.emit){try{return JSON.parse(content);}catch(er){this.emit('error',er);}}else{return JSON.parse(content);}}else{return ini$3.parse(content);}};var json$3=exports$1.json=function(){var args=[].slice.call(arguments).filter(function(arg){return arg!=null;});var file=path$q.join.apply(null,args);var content;try{content=fs$k.readFileSync(file,'utf-8');}catch(err){return;}return parse$d(content,file,'json');};exports$1.env=function(prefix,env){env=env||process.env;var obj={};var l=prefix.length;for(var k in env){if(k.indexOf(prefix)===0)obj[k.substring(l)]=env[k];}return obj;};exports$1.ConfigChain=ConfigChain$1;function ConfigChain$1(){EE$1.apply(this);ProtoList.apply(this,arguments);this._awaiting=0;this._saving=0;this.sources={};}// multi-inheritance-ish
var extras={constructor:{value:ConfigChain$1}};Object.keys(EE$1.prototype).forEach(function(k){extras[k]=Object.getOwnPropertyDescriptor(EE$1.prototype,k);});ConfigChain$1.prototype=Object.create(ProtoList.prototype,extras);ConfigChain$1.prototype.del=function(key,where){// if not specified where, then delete from the whole chain, scorched
// earth style
if(where){var target=this.sources[where];target=target&&target.data;if(!target){return this.emit('error',new Error('not found '+where));}delete target[key];}else{for(var i=0,l=this.list.length;i<l;i++){delete this.list[i][key];}}return this;};ConfigChain$1.prototype.set=function(key,value,where){var target;if(where){target=this.sources[where];target=target&&target.data;if(!target){return this.emit('error',new Error('not found '+where));}}else{target=this.list[0];if(!target){return this.emit('error',new Error('cannot set, no confs!'));}}target[key]=value;return this;};ConfigChain$1.prototype.get=function(key,where){if(where){where=this.sources[where];if(where)where=where.data;if(where&&Object.hasOwnProperty.call(where,key))return where[key];return undefined;}return this.list[0][key];};ConfigChain$1.prototype.save=function(where,type,cb){if(typeof type==='function')cb=type,type=null;var target=this.sources[where];if(!target||!(target.path||target.source)||!target.data){// TODO: maybe save() to a url target could be a PUT or something?
// would be easy to swap out with a reddis type thing, too
return this.emit('error',new Error('bad save target: '+where));}if(target.source){var pref=target.prefix||'';Object.keys(target.data).forEach(function(k){target.source[pref+k]=target.data[k];});return this;}var type=type||target.type;var data=target.data;if(target.type==='json'){data=JSON.stringify(data);}else{data=ini$3.stringify(data);}this._saving++;fs$k.writeFile(target.path,data,'utf8',function(er){this._saving--;if(er){if(cb)return cb(er);else return this.emit('error',er);}if(this._saving===0){if(cb)cb();this.emit('save');}}.bind(this));return this;};ConfigChain$1.prototype.addFile=function(file,type,name){name=name||file;var marker={__source__:name};this.sources[name]={path:file,type:type};this.push(marker);this._await();fs$k.readFile(file,'utf8',function(er,data){if(er)this.emit('error',er);this.addString(data,file,type,marker);}.bind(this));return this;};ConfigChain$1.prototype.addEnv=function(prefix,env,name){name=name||'env';var data=exports$1.env(prefix,env);this.sources[name]={data:data,source:env,prefix:prefix};return this.add(data,name);};ConfigChain$1.prototype.addUrl=function(req,type,name){this._await();var href=url$2.format(req);name=name||href;var marker={__source__:name};this.sources[name]={href:href,type:type};this.push(marker);http.request(req,function(res){var c=[];var ct=res.headers['content-type'];if(!type){type=ct.indexOf('json')!==-1?'json':ct.indexOf('ini')!==-1?'ini':href.match(/\.json$/)?'json':href.match(/\.ini$/)?'ini':null;marker.type=type;}res.on('data',c.push.bind(c)).on('end',function(){this.addString(Buffer.concat(c),href,type,marker);}.bind(this)).on('error',this.emit.bind(this,'error'));}.bind(this)).on('error',this.emit.bind(this,'error')).end();return this;};ConfigChain$1.prototype.addString=function(data,file,type,marker){data=this.parse(data,file,type);this.add(data,marker);return this;};ConfigChain$1.prototype.add=function(data,marker){if(marker&&typeof marker==='object'){var i=this.list.indexOf(marker);if(i===-1){return this.emit('error',new Error('bad marker'));}this.splice(i,1,data);marker=marker.__source__;this.sources[marker]=this.sources[marker]||{};this.sources[marker].data=data;// we were waiting for this.  maybe emit 'load'
this._resolve();}else{if(typeof marker==='string'){this.sources[marker]=this.sources[marker]||{};this.sources[marker].data=data;}// trigger the load event if nothing was already going to do so.
this._await();this.push(data);process.nextTick(this._resolve.bind(this));}return this;};ConfigChain$1.prototype.parse=exports$1.parse;ConfigChain$1.prototype._await=function(){this._awaiting++;};ConfigChain$1.prototype._resolve=function(){this._awaiting--;if(this._awaiting===0)this.emit('load',this);};var configChainExports=configChain.exports;var envKeyToSetting$1=function(x){const colonIndex=x.indexOf(':');if(colonIndex===-1){return normalize(x);}const firstPart=x.substr(0,colonIndex);const secondPart=x.substr(colonIndex+1);return"".concat(normalize(firstPart),":").concat(normalize(secondPart));};function normalize(s){s=s.toLowerCase();if(s==='_authtoken')return'_authToken';let r=s[0];for(let i=1;i<s.length;i++){r+=s[i]==='_'?'-':s[i];}return r;}var util$9={};var dist$3={};var envReplace$2={};Object.defineProperty(envReplace$2,"__esModule",{value:true});envReplace$2.envReplace=void 0;const ENV_EXPR=/(?<!\\)(\\*)\$\{([^${}]+)\}/g;function envReplace$1(settingValue,env){return settingValue.replace(ENV_EXPR,replaceEnvMatch.bind(null,env));}envReplace$2.envReplace=envReplace$1;function replaceEnvMatch(env,orig,escape,name){if(escape.length%2){return orig.slice((escape.length+1)/2);}const envValue=getEnvValue(env,name);if(envValue===undefined){throw new Error("Failed to replace env in config: ".concat(orig));}return"".concat(escape.slice(escape.length/2)).concat(envValue);}const ENV_VALUE=/([^:-]+)(:?)-(.+)/;function getEnvValue(env,name){const matched=name.match(ENV_VALUE);if(!matched)return env[name];const[,variableName,colon,fallback]=matched;if(Object.prototype.hasOwnProperty.call(env,variableName)){return!env[variableName]&&colon?fallback:env[variableName];}return fallback;}(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.envReplace=void 0;var env_replace_1=envReplace$2;Object.defineProperty(exports,"envReplace",{enumerable:true,get:function(){return env_replace_1.envReplace;}});})(dist$3);const fs$j=require$$0__default.default;const path$p=path__default.default;const{envReplace}=dist$3;// https://github.com/npm/cli/blob/latest/lib/config/core.js#L359-L404
const parseField=(types,field,key)=>{if(typeof field!=='string'){return field;}const typeList=[].concat(types[key]);const isPath=typeList.indexOf(path$p)!==-1;const isBool=typeList.indexOf(Boolean)!==-1;const isString=typeList.indexOf(String)!==-1;const isNumber=typeList.indexOf(Number)!==-1;field="".concat(field).trim();if(/^".*"$/.test(field)){try{field=JSON.parse(field);}catch(error){throw new Error("Failed parsing JSON config key ".concat(key,": ").concat(field));}}if(isBool&&!isString&&field===''){return true;}switch(field){// eslint-disable-line default-case
case'true':{return true;}case'false':{return false;}case'null':{return null;}case'undefined':{return undefined;}}field=envReplace(field,process.env);if(isPath){const regex=process.platform==='win32'?/^~(\/|\\)/:/^~\//;if(regex.test(field)&&process.env.HOME){field=path$p.resolve(process.env.HOME,field.substr(2));}field=path$p.resolve(field);}if(isNumber&&!isNaN(field)){field=Number(field);}return field;};// https://github.com/npm/cli/blob/latest/lib/config/find-prefix.js
const findPrefix=name=>{name=path$p.resolve(name);let walkedUp=false;while(path$p.basename(name)==='node_modules'){name=path$p.dirname(name);walkedUp=true;}if(walkedUp){return name;}const find=(name,original)=>{const regex=/^[a-zA-Z]:(\\|\/)?$/;if(name==='/'||process.platform==='win32'&&regex.test(name)){return original;}try{const files=fs$j.readdirSync(name);if(files.includes('node_modules')||files.includes('package.json')||files.includes('package.json5')||files.includes('package.yaml')||files.includes('pnpm-workspace.yaml')){return name;}const dirname=path$p.dirname(name);if(dirname===name){return original;}return find(dirname,original);}catch(error){if(name===original){if(error.code==='ENOENT'){return original;}throw error;}return original;}};return find(name,name);};util$9.envReplace=envReplace;util$9.findPrefix=findPrefix;util$9.parseField=parseField;var types$2={};var hasRequiredTypes$1;function requireTypes$1(){if(hasRequiredTypes$1)return types$2;hasRequiredTypes$1=1;const path=path__default.default;const Stream=require$$0__default$4.default.Stream;const url=require$$0__default$6.default;const Umask=()=>{};const getLocalAddresses=()=>[];const semver=()=>{};types$2.types={access:[null,'restricted','public'],'allow-same-version':Boolean,'always-auth':Boolean,also:[null,'dev','development'],audit:Boolean,'auth-type':['legacy','sso','saml','oauth'],'bin-links':Boolean,browser:[null,String],ca:[null,String,Array],cafile:path,cache:path,'cache-lock-stale':Number,'cache-lock-retries':Number,'cache-lock-wait':Number,'cache-max':Number,'cache-min':Number,cert:[null,String],cidr:[null,String,Array],color:['always',Boolean],depth:Number,description:Boolean,dev:Boolean,'dry-run':Boolean,editor:String,'engine-strict':Boolean,force:Boolean,'fetch-retries':Number,'fetch-retry-factor':Number,'fetch-retry-mintimeout':Number,'fetch-retry-maxtimeout':Number,git:String,'git-tag-version':Boolean,'commit-hooks':Boolean,global:Boolean,globalconfig:path,'global-style':Boolean,group:[Number,String],'https-proxy':[null,url],'user-agent':String,'ham-it-up':Boolean,'heading':String,'if-present':Boolean,'ignore-prepublish':Boolean,'ignore-scripts':Boolean,'init-module':path,'init-author-name':String,'init-author-email':String,'init-author-url':['',url],'init-license':String,'init-version':semver,json:Boolean,key:[null,String],'legacy-bundling':Boolean,link:Boolean,// local-address must be listed as an IP for a local network interface
// must be IPv4 due to node bug
'local-address':getLocalAddresses(),loglevel:['silent','error','warn','notice','http','timing','info','verbose','silly'],logstream:Stream,'logs-max':Number,long:Boolean,maxsockets:Number,message:String,'metrics-registry':[null,String],'node-options':[null,String],'node-version':[null,semver],'no-proxy':[null,String,Array],offline:Boolean,'onload-script':[null,String],only:[null,'dev','development','prod','production'],optional:Boolean,'package-lock':Boolean,otp:[null,String],'package-lock-only':Boolean,parseable:Boolean,'prefer-offline':Boolean,'prefer-online':Boolean,prefix:path,production:Boolean,progress:Boolean,proxy:[null,false,url],provenance:Boolean,// allow proxy to be disabled explicitly
'read-only':Boolean,'rebuild-bundle':Boolean,registry:[null,url],rollback:Boolean,save:Boolean,'save-bundle':Boolean,'save-dev':Boolean,'save-exact':Boolean,'save-optional':Boolean,'save-prefix':String,'save-prod':Boolean,scope:String,'script-shell':[null,String],'scripts-prepend-node-path':[false,true,'auto','warn-only'],searchopts:String,searchexclude:[null,String],searchlimit:Number,searchstaleness:Number,'send-metrics':Boolean,shell:String,shrinkwrap:Boolean,'sign-git-tag':Boolean,'sso-poll-frequency':Number,'sso-type':[null,'oauth','saml'],'strict-ssl':Boolean,tag:String,timing:Boolean,tmp:path,unicode:Boolean,'unsafe-perm':Boolean,usage:Boolean,user:[Number,String],userconfig:path,umask:Umask,version:Boolean,'tag-version-prefix':String,versions:Boolean,viewer:String,_exit:Boolean};return types$2;}const{readCAFileSync}=dist$4;const fs$i=require$$0__default.default;const path$o=path__default.default;const{ConfigChain}=configChainExports;const envKeyToSetting=envKeyToSetting$1;const util$8=util$9;class Conf extends ConfigChain{// https://github.com/npm/cli/blob/latest/lib/config/core.js#L203-L217
constructor(base,types){super(base);this.root=base;this._parseField=util$8.parseField.bind(null,types||requireTypes$1());}// https://github.com/npm/cli/blob/latest/lib/config/core.js#L326-L338
add(data,marker){try{for(const x of Object.keys(data)){data[x]=this._parseField(data[x],x);}}catch(error){throw error;}return super.add(data,marker);}// https://github.com/npm/cli/blob/latest/lib/config/core.js#L306-L319
addFile(file,name){name=name||file;const marker={__source__:name};this.sources[name]={path:file,type:'ini'};this.push(marker);this._await();try{const contents=fs$i.readFileSync(file,'utf8');this.addString(contents,file,'ini',marker);}catch(error){if(error.code==='ENOENT'){this.add({},marker);}else{return"Issue while reading \"".concat(file,"\". ").concat(error.message);}}}// https://github.com/npm/cli/blob/latest/lib/config/core.js#L341-L357
addEnv(env){env=env||process.env;const conf={};Object.keys(env).filter(x=>/^npm_config_/i.test(x)).forEach(x=>{if(!env[x]){return;}conf[envKeyToSetting(x.substr(11))]=env[x];});return super.addEnv('',conf,'env');}// https://github.com/npm/cli/blob/latest/lib/config/load-prefix.js
loadPrefix(){const cli=this.list[0];Object.defineProperty(this,'prefix',{enumerable:true,set:prefix=>{const g=this.get('global');this[g?'globalPrefix':'localPrefix']=prefix;},get:()=>{const g=this.get('global');return g?this.globalPrefix:this.localPrefix;}});Object.defineProperty(this,'globalPrefix',{enumerable:true,set:prefix=>{this.set('prefix',prefix);},get:()=>{return path$o.resolve(this.get('prefix'));}});let p;Object.defineProperty(this,'localPrefix',{enumerable:true,set:prefix=>{p=prefix;},get:()=>{return p;}});if(Object.prototype.hasOwnProperty.call(cli,'prefix')){p=path$o.resolve(cli.prefix);}else{try{const prefix=util$8.findPrefix(process.cwd());p=prefix;}catch(error){throw error;}}return p;}// https://github.com/npm/cli/blob/latest/lib/config/load-cafile.js
loadCAFile(file){if(!file){return;}const ca=readCAFileSync(file);if(ca){this.set('ca',ca);}}// https://github.com/npm/cli/blob/latest/lib/config/set-user.js
loadUser(){const defConf=this.root;if(this.get('global')){return;}if(process.env.SUDO_UID){defConf.user=Number(process.env.SUDO_UID);return;}const prefix=path$o.resolve(this.get('prefix'));try{const stats=fs$i.statSync(prefix);defConf.user=stats.uid;}catch(error){if(error.code==='ENOENT'){return;}throw error;}}}var conf=Conf;var defaults$5={};(function(exports){const os=require$$0__default$2.default;const path=path__default.default;const temp=os.tmpdir();const uidOrPid=process.getuid?process.getuid():process.pid;const hasUnicode=()=>true;const isWindows=process.platform==='win32';const osenv={editor:()=>process.env.EDITOR||process.env.VISUAL||(isWindows?'notepad.exe':'vi'),shell:()=>isWindows?process.env.COMSPEC||'cmd.exe':process.env.SHELL||'/bin/bash'};const umask={fromString:()=>process.umask()};let home=os.homedir();if(home){process.env.HOME=home;}else{home=path.resolve(temp,'npm-'+uidOrPid);}const cacheExtra=process.platform==='win32'?'npm-cache':'.npm';const cacheRoot=process.platform==='win32'&&process.env.APPDATA||home;const cache=path.resolve(cacheRoot,cacheExtra);let defaults;let globalPrefix;Object.defineProperty(exports,'defaults',{get:function(){if(defaults)return defaults;if(process.env.PREFIX){globalPrefix=process.env.PREFIX;}else if(process.platform==='win32'){// c:\node\node.exe --> prefix=c:\node\
globalPrefix=path.dirname(process.execPath);}else{// /usr/local/bin/node --> prefix=/usr/local
globalPrefix=path.dirname(path.dirname(process.execPath));// destdir only is respected on Unix
if(process.env.DESTDIR){globalPrefix=path.join(process.env.DESTDIR,globalPrefix);}}defaults={access:null,'allow-same-version':false,'always-auth':false,also:null,audit:true,'auth-type':'legacy','bin-links':true,browser:null,ca:null,cafile:null,cache:cache,'cache-lock-stale':60000,'cache-lock-retries':10,'cache-lock-wait':10000,'cache-max':Infinity,'cache-min':10,cert:null,cidr:null,color:process.env.NO_COLOR==null,depth:Infinity,description:true,dev:false,'dry-run':false,editor:osenv.editor(),'engine-strict':false,force:false,'fetch-retries':2,'fetch-retry-factor':10,'fetch-retry-mintimeout':10000,'fetch-retry-maxtimeout':60000,git:'git','git-tag-version':true,'commit-hooks':true,global:false,globalconfig:path.resolve(globalPrefix,'etc','npmrc'),'global-style':false,group:process.platform==='win32'?0:process.env.SUDO_GID||process.getgid&&process.getgid(),'ham-it-up':false,heading:'npm','if-present':false,'ignore-prepublish':false,'ignore-scripts':false,'init-module':path.resolve(home,'.npm-init.js'),'init-author-name':'','init-author-email':'','init-author-url':'','init-version':'1.0.0','init-license':'ISC',json:false,key:null,'legacy-bundling':false,link:false,'local-address':undefined,loglevel:'notice',logstream:process.stderr,'logs-max':10,long:false,maxsockets:50,message:'%s','metrics-registry':null,'node-options':null,// We remove node-version to fix the issue described here: https://github.com/pnpm/pnpm/issues/4203#issuecomment-1133872769
'offline':false,'onload-script':false,only:null,optional:true,otp:null,'package-lock':true,'package-lock-only':false,parseable:false,'prefer-offline':false,'prefer-online':false,prefix:globalPrefix,production:process.env.NODE_ENV==='production','progress':!process.env.TRAVIS&&!process.env.CI,provenance:false,proxy:null,'https-proxy':null,'no-proxy':null,'user-agent':'npm/{npm-version} '+'node/{node-version} '+'{platform} '+'{arch}','read-only':false,'rebuild-bundle':true,registry:'https://registry.npmjs.org/',rollback:true,save:true,'save-bundle':false,'save-dev':false,'save-exact':false,'save-optional':false,'save-prefix':'^','save-prod':false,scope:'','script-shell':null,'scripts-prepend-node-path':'warn-only',searchopts:'',searchexclude:null,searchlimit:20,searchstaleness:15*60,'send-metrics':false,shell:osenv.shell(),shrinkwrap:true,'sign-git-tag':false,'sso-poll-frequency':500,'sso-type':'oauth','strict-ssl':true,tag:'latest','tag-version-prefix':'v',timing:false,tmp:temp,unicode:hasUnicode(),'unsafe-perm':process.platform==='win32'||process.platform==='cygwin'||!(process.getuid&&process.setuid&&process.getgid&&process.setgid)||process.getuid()!==0,usage:false,user:process.platform==='win32'?0:'nobody',userconfig:path.resolve(home,'.npmrc'),umask:process.umask?process.umask():umask.fromString('022'),version:false,versions:false,viewer:process.platform==='win32'?'browser':'man',_exit:true};return defaults;}});})(defaults$5);(function(module){const path=path__default.default;const Conf=conf;const _defaults=defaults$5;// https://github.com/npm/cli/blob/latest/lib/config/core.js#L101-L200
module.exports=(opts,types,defaults)=>{const conf=new Conf(Object.assign({},_defaults.defaults,defaults),types);conf.add(Object.assign({},opts),'cli');const warnings=[];let failedToLoadBuiltInConfig=false;if(require.resolve.paths){const paths=require.resolve.paths('npm');// Assume that last path in resolve paths is builtin modules directory
let npmPath;try{npmPath=require.resolve('npm',{paths:paths.slice(-1)});}catch(error){// Error will be thrown if module cannot be found.
// Update the flag while loading builtin config failed.
failedToLoadBuiltInConfig=true;}if(npmPath){/**
				 *  According to https://github.com/npm/cli/blob/86f5bdb91f7a5971953a5171d32d6eeda6a2e972/lib/npm.js#L258
				 *  and https://github.com/npm/cli/blob/86f5bdb91f7a5971953a5171d32d6eeda6a2e972/lib/config/core.js#L92
				 */warnings.push(conf.addFile(path.resolve(path.dirname(npmPath),'..','npmrc'),'builtin'));}}conf.addEnv();conf.loadPrefix();const projectConf=path.resolve(conf.localPrefix,'.npmrc');const userConf=conf.get('userconfig');if(!conf.get('global')&&projectConf!==userConf){warnings.push(conf.addFile(projectConf,'project'));}else{conf.add({},'project');}// TODO: cover with tests that configs from workspace .npmrc have bigger priority
// than the ones in userconfig
if(conf.get('workspace-prefix')&&conf.get('workspace-prefix')!==projectConf){const workspaceConf=path.resolve(conf.get('workspace-prefix'),'.npmrc');warnings.push(conf.addFile(workspaceConf,'workspace'));}warnings.push(conf.addFile(conf.get('userconfig'),'user'));if(conf.get('prefix')){const etc=path.resolve(conf.get('prefix'),'etc');conf.root.globalconfig=path.resolve(etc,'npmrc');conf.root.globalignorefile=path.resolve(etc,'npmignore');}warnings.push(conf.addFile(conf.get('globalconfig'),'global'));conf.loadUser();const caFile=conf.get('cafile');if(caFile){conf.loadCAFile(caFile);}return{config:conf,warnings:warnings.filter(Boolean),failedToLoadBuiltInConfig};};Object.defineProperty(module.exports,'defaults',{get(){return _defaults.defaults;},enumerable:true});})(npmConf$1);var npmConfExports=npmConf$1.exports;const url$1=require$$0__default$6.default;const npmConf=npmConfExports;const tokenKey=':_authToken';const legacyTokenKey=':_auth';const userKey=':username';const passwordKey=':_password';var registryAuthToken$1=function getRegistryAuthToken(){let checkUrl;let options;if(arguments.length>=2){checkUrl=arguments[0];options=Object.assign({},arguments[1]);}else if(typeof arguments[0]==='string'){checkUrl=arguments[0];}else{options=Object.assign({},arguments[0]);}options=options||{};const providedNpmrc=options.npmrc;options.npmrc=(options.npmrc?{config:{get:key=>providedNpmrc[key]}}:npmConf()).config;checkUrl=checkUrl||options.npmrc.get('registry')||npmConf.defaults.registry;return getRegistryAuthInfo(checkUrl,options)||getLegacyAuthInfo(options.npmrc);};function getRegistryAuthInfo(checkUrl,options){const parsed=url$1.parse(checkUrl,false,true);let pathname;while(pathname!=='/'&&parsed.pathname!==pathname){pathname=parsed.pathname||'/';const regUrl='//'+parsed.host+pathname.replace(/\/$/,'');const authInfo=getAuthInfoForUrl(regUrl,options.npmrc);if(authInfo){return authInfo;}// break if not recursive
if(!options.recursive){return /\/$/.test(checkUrl)?undefined:getRegistryAuthInfo(url$1.resolve(checkUrl,'.'),options);}parsed.pathname=url$1.resolve(normalizePath$1(pathname),'..')||'/';}return undefined;}function getLegacyAuthInfo(npmrc){if(!npmrc.get('_auth')){return undefined;}const token=replaceEnvironmentVariable(npmrc.get('_auth'));return{token:token,type:'Basic'};}function normalizePath$1(path){return path[path.length-1]==='/'?path:path+'/';}function getAuthInfoForUrl(regUrl,npmrc){// try to get bearer token
const bearerAuth=getBearerToken(npmrc.get(regUrl+tokenKey)||npmrc.get(regUrl+'/'+tokenKey));if(bearerAuth){return bearerAuth;}// try to get basic token
const username=npmrc.get(regUrl+userKey)||npmrc.get(regUrl+'/'+userKey);const password=npmrc.get(regUrl+passwordKey)||npmrc.get(regUrl+'/'+passwordKey);const basicAuth=getTokenForUsernameAndPassword(username,password);if(basicAuth){return basicAuth;}const basicAuthWithToken=getLegacyAuthToken(npmrc.get(regUrl+legacyTokenKey)||npmrc.get(regUrl+'/'+legacyTokenKey));if(basicAuthWithToken){return basicAuthWithToken;}return undefined;}function replaceEnvironmentVariable(token){return token.replace(/^\$\{?([^}]*)\}?$/,function(fullMatch,envVar){return process.env[envVar];});}function getBearerToken(tok){if(!tok){return undefined;}// check if bearer token is set as environment variable
const token=replaceEnvironmentVariable(tok);return{token:token,type:'Bearer'};}function getTokenForUsernameAndPassword(username,password){if(!username||!password){return undefined;}// passwords are base64 encoded, so we need to decode it
// See https://github.com/npm/npm/blob/v3.10.6/lib/config/set-credentials-by-uri.js#L26
const pass=Buffer.from(replaceEnvironmentVariable(password),'base64').toString('utf8');// a basic auth token is base64 encoded 'username:password'
// See https://github.com/npm/npm/blob/v3.10.6/lib/config/get-credentials-by-uri.js#L70
const token=Buffer.from(username+':'+pass,'utf8').toString('base64');// we found a basicToken token so let's exit the loop
return{token:token,type:'Basic',password:pass,username:username};}function getLegacyAuthToken(tok){if(!tok){return undefined;}// check if legacy auth token is set as environment variable
const token=replaceEnvironmentVariable(tok);return{token:token,type:'Basic'};}const url=require$$0__default$6.default;const{getIt}=require$$1__default$2.default;const{debug:debug$3,retry:retry$2,promise:promise$1,httpErrors,jsonResponse}=require$$2__default.default;const registryUrl=registryUrlExports;const registryAuthToken=registryAuthToken$1;const semver$1=semver__default.default;const isJson=contentType=>/(application\/json|\+json)/.test(contentType||'');function shouldRetry(err,num,options){const response=err.response||{statusCode:500,headers:{}};return(// allow retries on low-level errors (socket errors et al)
retry$2.shouldRetry(err,num,options)||// npm registry routinely fails, giving 503 and similar
response&&response.statusCode>=500||// npm registry sometimes returns 2xx with HTML content
response.statusCode<300&&!isJson(response.headers['content-type']));}function resolveRegistryUrl(pkgName,options){if(options.registryUrl){return options.registryUrl;}const scope=pkgName.split('/')[0];return registryUrl(scope);}const httpRequest=getIt([jsonResponse({force:true}),httpErrors(),debug$3({namespace:'get-latest-version'}),promise$1(),retry$2({shouldRetry})]);async function getLatestVersion(pkgName,opts){const options=typeof opts==='string'?{range:opts,auth:true}:Object.assign({range:'latest',auth:true},opts);const regUrl=resolveRegistryUrl(pkgName,options);const pkgUrl=url.resolve(regUrl,encodeURIComponent(pkgName).replace(/^%40/,'@'));const authInfo=options.auth&&registryAuthToken(regUrl,{recursive:true});const request=options.request||httpRequest;const headers={accept:'application/vnd.npm.install-v1+json; q=1.0, application/json; q=0.8, */*'};if(authInfo){headers.authorization="".concat(authInfo.type," ").concat(authInfo.token);}let res;try{res=await request({url:pkgUrl,headers});}catch(err){if(err.response&&err.response.statusCode===404){throw new Error("Package `".concat(pkgName,"` doesn't exist"));}throw err;}const data=res.body;const range=options.range;const latest=data['dist-tags'].latest;if(data['dist-tags'][range]){return options.includeLatest?{latest,inRange:data['dist-tags'][range]}:data['dist-tags'][range];}if(data.versions[range]){return options.includeLatest?{latest,inRange:range}:range;}const versions=Object.keys(data.versions);const version=semver$1.maxSatisfying(versions,range);if(version){return options.includeLatest?{latest,inRange:version}:version;}return options.includeLatest?{latest,inRange:undefined}:undefined;}getLatestVersion.request=httpRequest;var src=getLatestVersion;var latestVersion=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(src);async function getCliVersion(){const cliPath=pkgDir__default.default.sync(__dirname);if(!cliPath){throw new Error("Unable to resolve root of @sanity/cli module");}let data;try{data=await fs__default.default.readFile(path__default.default.join(cliPath,"package.json"),"utf-8");}catch(err){throw new Error("Unable to read @sanity/cli/package.json: ".concat(err.message));}const pkg=JSON.parse(data);return pkg.version;}function getLocalVersion(moduleId,workDir){const fromPath=workDir||process.cwd();const modulePath=resolveFrom$1.silent(fromPath,path__default.default.join(moduleId,"package.json"));if(modulePath){return tryGetVersion(modulePath);}const pathSegment=path__default.default.normalize(moduleId);const parentPath=resolveFrom$1.silent(fromPath,moduleId);if(!parentPath){return void 0;}const moduleRoot=parentPath.slice(0,parentPath.lastIndexOf(pathSegment)+pathSegment.length);const manifestPath=path__default.default.join(moduleRoot,"package.json");return tryGetVersion(manifestPath);}function tryGetVersion(modulePath){try{return getCliConfig.dynamicRequire(modulePath).version;}catch(err){return void 0;}}const PACKAGES_TO_EXCLUDE=["@sanity/block-content-to-html","@sanity/block-content-to-react","@sanity/block-tools","@sanity/client"];const defaultOptions={includeCli:true};async function findSanityModuleVersions(context){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const{spinner}=context.output;const{target,includeCli}={...defaultOptions,...options};const cliVersion=await getCliVersion();const sanityModules=filterSanityModules(getLocalManifest(context.workDir));const resolveOpts={includeCli,target};const spin=spinner("Resolving latest versions").start();const versions=await promiseProps$1(buildPackageArray(sanityModules,context.workDir,resolveOpts,cliVersion));const packages=Object.values(versions);spin.stop();return packages.map(mod=>{var _semver__default$defa;const current=mod.installed||((_semver__default$defa=semver__default.default.minVersion(mod.declared))===null||_semver__default$defa===void 0?void 0:_semver__default$defa.toString())||"";const needsUpdate=target==="latest"?semverCompare$1(current,mod.latest)===-1:typeof mod.latestInRange!=="undefined"&&mod.installed!==mod.latestInRange;return{...mod,needsUpdate};});}function getLocalManifest(workDir){try{return getCliConfig.dynamicRequire(path__default.default.join(workDir,"package.json"));}catch(err){return{};}}function filterSanityModules(manifest){const dependencies={...manifest.dependencies,...manifest.devDependencies};return Object.keys(dependencies).filter(mod=>mod.startsWith("@sanity/")||mod==="sanity").filter(mod=>!PACKAGES_TO_EXCLUDE.includes(mod)).sort().reduce((versions,dependency)=>{versions[dependency]=dependencies[dependency];return versions;},{});}function buildPackageArray(packages,workDir){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};let cliVersion=arguments.length>3?arguments[3]:undefined;const{includeCli,target}=options;const modules=[];if(includeCli){const[cliMajor]=cliVersion.split(".");const latest=tryFindLatestVersion("@sanity/cli",target||"^".concat(cliMajor));modules.push({name:"@sanity/cli",declared:"^".concat(cliVersion),installed:trimHash(cliVersion),latest:latest.then(versions=>versions.latest),latestInRange:latest.then(versions=>versions.latestInRange),isPinned:false,isGlobal:true});}return[...modules,...Object.keys(packages).map(pkgName=>{const latest=tryFindLatestVersion(pkgName,target||packages[pkgName]||"latest");const localVersion=getLocalVersion(pkgName,workDir);return{name:pkgName,declared:packages[pkgName],installed:localVersion?trimHash(localVersion):void 0,latest:latest.then(versions=>versions.latest),latestInRange:latest.then(versions=>versions.latestInRange),isPinned:isPinnedVersion(packages[pkgName]),isGlobal:false};})];}async function tryFindLatestVersion(pkgName,range){try{const{latest,inRange}=await latestVersion(pkgName,{range,includeLatest:true});return{latest,latestInRange:inRange};}catch(err){if(!(err instanceof Error)||!err.message.includes("No version exists")){throw err;}const latest=await latestVersion(pkgName);return{latest,latestInRange:void 0};}}function isPinnedVersion(version){return /^\d+\.\d+\.\d+/.test(version);}function trimHash(version){return version.replace(/\+[a-z0-9]{8,}$/,"");}const BASE_URL="https://docs.sanity.io/help/";function generateHelpUrl(slug){return BASE_URL+slug;}var constants$4=require$$0__default$3.default;var origCwd=process.cwd;var cwd=null;var platform$2=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){if(!cwd)cwd=origCwd.call(process);return cwd;};try{process.cwd();}catch(er){}// This check is needed until node.js 12 is required
if(typeof process.chdir==='function'){var chdir=process.chdir;process.chdir=function(d){cwd=null;chdir.call(process,d);};if(Object.setPrototypeOf)Object.setPrototypeOf(process.chdir,chdir);}var polyfills$1=patch$1;function patch$1(fs){// (re-)implement some things that are known busted or missing.
// lchmod, broken prior to 0.6.2
// back-port the fix here.
if(constants$4.hasOwnProperty('O_SYMLINK')&&process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)){patchLchmod(fs);}// lutimes implementation, or no-op
if(!fs.lutimes){patchLutimes(fs);}// https://github.com/isaacs/node-graceful-fs/issues/4
// Chown should not fail on einval or eperm if non-root.
// It should not fail on enosys ever, as this just indicates
// that a fs doesn't support the intended operation.
fs.chown=chownFix(fs.chown);fs.fchown=chownFix(fs.fchown);fs.lchown=chownFix(fs.lchown);fs.chmod=chmodFix(fs.chmod);fs.fchmod=chmodFix(fs.fchmod);fs.lchmod=chmodFix(fs.lchmod);fs.chownSync=chownFixSync(fs.chownSync);fs.fchownSync=chownFixSync(fs.fchownSync);fs.lchownSync=chownFixSync(fs.lchownSync);fs.chmodSync=chmodFixSync(fs.chmodSync);fs.fchmodSync=chmodFixSync(fs.fchmodSync);fs.lchmodSync=chmodFixSync(fs.lchmodSync);fs.stat=statFix(fs.stat);fs.fstat=statFix(fs.fstat);fs.lstat=statFix(fs.lstat);fs.statSync=statFixSync(fs.statSync);fs.fstatSync=statFixSync(fs.fstatSync);fs.lstatSync=statFixSync(fs.lstatSync);// if lchmod/lchown do not exist, then make them no-ops
if(fs.chmod&&!fs.lchmod){fs.lchmod=function(path,mode,cb){if(cb)process.nextTick(cb);};fs.lchmodSync=function(){};}if(fs.chown&&!fs.lchown){fs.lchown=function(path,uid,gid,cb){if(cb)process.nextTick(cb);};fs.lchownSync=function(){};}// on Windows, A/V software can lock the directory, causing this
// to fail with an EACCES or EPERM if the directory contains newly
// created files.  Try again on failure, for up to 60 seconds.
// Set the timeout this long because some Windows Anti-Virus, such as Parity
// bit9, may lock files for up to a minute, causing npm package install
// failures. Also, take care to yield the scheduler. Windows scheduling gives
// CPU to a busy looping process, which can cause the program causing the lock
// contention to be starved of CPU by node, so the contention doesn't resolve.
if(platform$2==="win32"){fs.rename=typeof fs.rename!=='function'?fs.rename:function(fs$rename){function rename(from,to,cb){var start=Date.now();var backoff=0;fs$rename(from,to,function CB(er){if(er&&(er.code==="EACCES"||er.code==="EPERM"||er.code==="EBUSY")&&Date.now()-start<60000){setTimeout(function(){fs.stat(to,function(stater,st){if(stater&&stater.code==="ENOENT")fs$rename(from,to,CB);else cb(er);});},backoff);if(backoff<100)backoff+=10;return;}if(cb)cb(er);});}if(Object.setPrototypeOf)Object.setPrototypeOf(rename,fs$rename);return rename;}(fs.rename);}// if read() returns EAGAIN, then just try it again.
fs.read=typeof fs.read!=='function'?fs.read:function(fs$read){function read(fd,buffer,offset,length,position,callback_){var callback;if(callback_&&typeof callback_==='function'){var eagCounter=0;callback=function(er,_,__){if(er&&er.code==='EAGAIN'&&eagCounter<10){eagCounter++;return fs$read.call(fs,fd,buffer,offset,length,position,callback);}callback_.apply(this,arguments);};}return fs$read.call(fs,fd,buffer,offset,length,position,callback);}// This ensures `util.promisify` works as it does for native `fs.read`.
if(Object.setPrototypeOf)Object.setPrototypeOf(read,fs$read);return read;}(fs.read);fs.readSync=typeof fs.readSync!=='function'?fs.readSync:function(fs$readSync){return function(fd,buffer,offset,length,position){var eagCounter=0;while(true){try{return fs$readSync.call(fs,fd,buffer,offset,length,position);}catch(er){if(er.code==='EAGAIN'&&eagCounter<10){eagCounter++;continue;}throw er;}}};}(fs.readSync);function patchLchmod(fs){fs.lchmod=function(path,mode,callback){fs.open(path,constants$4.O_WRONLY|constants$4.O_SYMLINK,mode,function(err,fd){if(err){if(callback)callback(err);return;}// prefer to return the chmod error, if one occurs,
// but still try to close, and report closing errors if they occur.
fs.fchmod(fd,mode,function(err){fs.close(fd,function(err2){if(callback)callback(err||err2);});});});};fs.lchmodSync=function(path,mode){var fd=fs.openSync(path,constants$4.O_WRONLY|constants$4.O_SYMLINK,mode);// prefer to return the chmod error, if one occurs,
// but still try to close, and report closing errors if they occur.
var threw=true;var ret;try{ret=fs.fchmodSync(fd,mode);threw=false;}finally{if(threw){try{fs.closeSync(fd);}catch(er){}}else{fs.closeSync(fd);}}return ret;};}function patchLutimes(fs){if(constants$4.hasOwnProperty("O_SYMLINK")&&fs.futimes){fs.lutimes=function(path,at,mt,cb){fs.open(path,constants$4.O_SYMLINK,function(er,fd){if(er){if(cb)cb(er);return;}fs.futimes(fd,at,mt,function(er){fs.close(fd,function(er2){if(cb)cb(er||er2);});});});};fs.lutimesSync=function(path,at,mt){var fd=fs.openSync(path,constants$4.O_SYMLINK);var ret;var threw=true;try{ret=fs.futimesSync(fd,at,mt);threw=false;}finally{if(threw){try{fs.closeSync(fd);}catch(er){}}else{fs.closeSync(fd);}}return ret;};}else if(fs.futimes){fs.lutimes=function(_a,_b,_c,cb){if(cb)process.nextTick(cb);};fs.lutimesSync=function(){};}}function chmodFix(orig){if(!orig)return orig;return function(target,mode,cb){return orig.call(fs,target,mode,function(er){if(chownErOk(er))er=null;if(cb)cb.apply(this,arguments);});};}function chmodFixSync(orig){if(!orig)return orig;return function(target,mode){try{return orig.call(fs,target,mode);}catch(er){if(!chownErOk(er))throw er;}};}function chownFix(orig){if(!orig)return orig;return function(target,uid,gid,cb){return orig.call(fs,target,uid,gid,function(er){if(chownErOk(er))er=null;if(cb)cb.apply(this,arguments);});};}function chownFixSync(orig){if(!orig)return orig;return function(target,uid,gid){try{return orig.call(fs,target,uid,gid);}catch(er){if(!chownErOk(er))throw er;}};}function statFix(orig){if(!orig)return orig;// Older versions of Node erroneously returned signed integers for
// uid + gid.
return function(target,options,cb){if(typeof options==='function'){cb=options;options=null;}function callback(er,stats){if(stats){if(stats.uid<0)stats.uid+=0x100000000;if(stats.gid<0)stats.gid+=0x100000000;}if(cb)cb.apply(this,arguments);}return options?orig.call(fs,target,options,callback):orig.call(fs,target,callback);};}function statFixSync(orig){if(!orig)return orig;// Older versions of Node erroneously returned signed integers for
// uid + gid.
return function(target,options){var stats=options?orig.call(fs,target,options):orig.call(fs,target);if(stats){if(stats.uid<0)stats.uid+=0x100000000;if(stats.gid<0)stats.gid+=0x100000000;}return stats;};}// ENOSYS means that the fs doesn't support the op. Just ignore
// that, because it doesn't matter.
//
// if there's no getuid, or if getuid() is something other
// than 0, and the error is EINVAL or EPERM, then just ignore
// it.
//
// This specific case is a silent failure in cp, install, tar,
// and most other unix tools that manage permissions.
//
// When running as root, or if other types of errors are
// encountered, then it's strict.
function chownErOk(er){if(!er)return true;if(er.code==="ENOSYS")return true;var nonroot=!process.getuid||process.getuid()!==0;if(nonroot){if(er.code==="EINVAL"||er.code==="EPERM")return true;}return false;}}var Stream$1=require$$0__default$4.default.Stream;var legacyStreams=legacy$1;function legacy$1(fs){return{ReadStream:ReadStream,WriteStream:WriteStream};function ReadStream(path,options){if(!(this instanceof ReadStream))return new ReadStream(path,options);Stream$1.call(this);var self=this;this.path=path;this.fd=null;this.readable=true;this.paused=false;this.flags='r';this.mode=438;/*=0666*/this.bufferSize=64*1024;options=options||{};// Mixin options into this
var keys=Object.keys(options);for(var index=0,length=keys.length;index<length;index++){var key=keys[index];this[key]=options[key];}if(this.encoding)this.setEncoding(this.encoding);if(this.start!==undefined){if('number'!==typeof this.start){throw TypeError('start must be a Number');}if(this.end===undefined){this.end=Infinity;}else if('number'!==typeof this.end){throw TypeError('end must be a Number');}if(this.start>this.end){throw new Error('start must be <= end');}this.pos=this.start;}if(this.fd!==null){process.nextTick(function(){self._read();});return;}fs.open(this.path,this.flags,this.mode,function(err,fd){if(err){self.emit('error',err);self.readable=false;return;}self.fd=fd;self.emit('open',fd);self._read();});}function WriteStream(path,options){if(!(this instanceof WriteStream))return new WriteStream(path,options);Stream$1.call(this);this.path=path;this.fd=null;this.writable=true;this.flags='w';this.encoding='binary';this.mode=438;/*=0666*/this.bytesWritten=0;options=options||{};// Mixin options into this
var keys=Object.keys(options);for(var index=0,length=keys.length;index<length;index++){var key=keys[index];this[key]=options[key];}if(this.start!==undefined){if('number'!==typeof this.start){throw TypeError('start must be a Number');}if(this.start<0){throw new Error('start must be >= zero');}this.pos=this.start;}this.busy=false;this._queue=[];if(this.fd===null){this._open=fs.open;this._queue.push([this._open,this.path,this.flags,this.mode,undefined]);this.flush();}}}var clone_1=clone$3;var getPrototypeOf=Object.getPrototypeOf||function(obj){return obj.__proto__;};function clone$3(obj){if(obj===null||typeof obj!=='object')return obj;if(obj instanceof Object)var copy={__proto__:getPrototypeOf(obj)};else var copy=Object.create(null);Object.getOwnPropertyNames(obj).forEach(function(key){Object.defineProperty(copy,key,Object.getOwnPropertyDescriptor(obj,key));});return copy;}var fs$h=require$$0__default.default;var polyfills=polyfills$1;var legacy=legacyStreams;var clone$2=clone_1;var util$7=require$$0__default$5.default;/* istanbul ignore next - node 0.x polyfill */var gracefulQueue;var previousSymbol;/* istanbul ignore else - node 0.x polyfill */if(typeof Symbol==='function'&&typeof Symbol.for==='function'){gracefulQueue=Symbol.for('graceful-fs.queue');// This is used in testing by future versions
previousSymbol=Symbol.for('graceful-fs.previous');}else{gracefulQueue='___graceful-fs.queue';previousSymbol='___graceful-fs.previous';}function noop$5(){}function publishQueue(context,queue){Object.defineProperty(context,gracefulQueue,{get:function(){return queue;}});}var debug$2=noop$5;if(util$7.debuglog)debug$2=util$7.debuglog('gfs4');else if(/\bgfs4\b/i.test(process.env.NODE_DEBUG||''))debug$2=function(){var m=util$7.format.apply(util$7,arguments);m='GFS4: '+m.split(/\n/).join('\nGFS4: ');console.error(m);};// Once time initialization
if(!fs$h[gracefulQueue]){// This queue can be shared by multiple loaded instances
var queue$1=loadEnv.commonjsGlobal[gracefulQueue]||[];publishQueue(fs$h,queue$1);// Patch fs.close/closeSync to shared queue version, because we need
// to retry() whenever a close happens *anywhere* in the program.
// This is essential when multiple graceful-fs instances are
// in play at the same time.
fs$h.close=function(fs$close){function close(fd,cb){return fs$close.call(fs$h,fd,function(err){// This function uses the graceful-fs shared queue
if(!err){resetQueue();}if(typeof cb==='function')cb.apply(this,arguments);});}Object.defineProperty(close,previousSymbol,{value:fs$close});return close;}(fs$h.close);fs$h.closeSync=function(fs$closeSync){function closeSync(fd){// This function uses the graceful-fs shared queue
fs$closeSync.apply(fs$h,arguments);resetQueue();}Object.defineProperty(closeSync,previousSymbol,{value:fs$closeSync});return closeSync;}(fs$h.closeSync);if(/\bgfs4\b/i.test(process.env.NODE_DEBUG||'')){process.on('exit',function(){debug$2(fs$h[gracefulQueue]);require$$1__default$1.default.equal(fs$h[gracefulQueue].length,0);});}}if(!loadEnv.commonjsGlobal[gracefulQueue]){publishQueue(loadEnv.commonjsGlobal,fs$h[gracefulQueue]);}var gracefulFs=patch(clone$2(fs$h));if(process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!fs$h.__patched){gracefulFs=patch(fs$h);fs$h.__patched=true;}function patch(fs){// Everything that references the open() function needs to be in here
polyfills(fs);fs.gracefulify=patch;fs.createReadStream=createReadStream;fs.createWriteStream=createWriteStream;var fs$readFile=fs.readFile;fs.readFile=readFile;function readFile(path,options,cb){if(typeof options==='function')cb=options,options=null;return go$readFile(path,options,cb);function go$readFile(path,options,cb,startTime){return fs$readFile(path,options,function(err){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue([go$readFile,[path,options,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}var fs$writeFile=fs.writeFile;fs.writeFile=writeFile;function writeFile(path,data,options,cb){if(typeof options==='function')cb=options,options=null;return go$writeFile(path,data,options,cb);function go$writeFile(path,data,options,cb,startTime){return fs$writeFile(path,data,options,function(err){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue([go$writeFile,[path,data,options,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}var fs$appendFile=fs.appendFile;if(fs$appendFile)fs.appendFile=appendFile;function appendFile(path,data,options,cb){if(typeof options==='function')cb=options,options=null;return go$appendFile(path,data,options,cb);function go$appendFile(path,data,options,cb,startTime){return fs$appendFile(path,data,options,function(err){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue([go$appendFile,[path,data,options,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}var fs$copyFile=fs.copyFile;if(fs$copyFile)fs.copyFile=copyFile;function copyFile(src,dest,flags,cb){if(typeof flags==='function'){cb=flags;flags=0;}return go$copyFile(src,dest,flags,cb);function go$copyFile(src,dest,flags,cb,startTime){return fs$copyFile(src,dest,flags,function(err){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue([go$copyFile,[src,dest,flags,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}var fs$readdir=fs.readdir;fs.readdir=readdir;var noReaddirOptionVersions=/^v[0-5]\./;function readdir(path,options,cb){if(typeof options==='function')cb=options,options=null;var go$readdir=noReaddirOptionVersions.test(process.version)?function go$readdir(path,options,cb,startTime){return fs$readdir(path,fs$readdirCallback(path,options,cb,startTime));}:function go$readdir(path,options,cb,startTime){return fs$readdir(path,options,fs$readdirCallback(path,options,cb,startTime));};return go$readdir(path,options,cb);function fs$readdirCallback(path,options,cb,startTime){return function(err,files){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue([go$readdir,[path,options,cb],err,startTime||Date.now(),Date.now()]);else{if(files&&files.sort)files.sort();if(typeof cb==='function')cb.call(this,err,files);}};}}if(process.version.substr(0,4)==='v0.8'){var legStreams=legacy(fs);ReadStream=legStreams.ReadStream;WriteStream=legStreams.WriteStream;}var fs$ReadStream=fs.ReadStream;if(fs$ReadStream){ReadStream.prototype=Object.create(fs$ReadStream.prototype);ReadStream.prototype.open=ReadStream$open;}var fs$WriteStream=fs.WriteStream;if(fs$WriteStream){WriteStream.prototype=Object.create(fs$WriteStream.prototype);WriteStream.prototype.open=WriteStream$open;}Object.defineProperty(fs,'ReadStream',{get:function(){return ReadStream;},set:function(val){ReadStream=val;},enumerable:true,configurable:true});Object.defineProperty(fs,'WriteStream',{get:function(){return WriteStream;},set:function(val){WriteStream=val;},enumerable:true,configurable:true});// legacy names
var FileReadStream=ReadStream;Object.defineProperty(fs,'FileReadStream',{get:function(){return FileReadStream;},set:function(val){FileReadStream=val;},enumerable:true,configurable:true});var FileWriteStream=WriteStream;Object.defineProperty(fs,'FileWriteStream',{get:function(){return FileWriteStream;},set:function(val){FileWriteStream=val;},enumerable:true,configurable:true});function ReadStream(path,options){if(this instanceof ReadStream)return fs$ReadStream.apply(this,arguments),this;else return ReadStream.apply(Object.create(ReadStream.prototype),arguments);}function ReadStream$open(){var that=this;open(that.path,that.flags,that.mode,function(err,fd){if(err){if(that.autoClose)that.destroy();that.emit('error',err);}else{that.fd=fd;that.emit('open',fd);that.read();}});}function WriteStream(path,options){if(this instanceof WriteStream)return fs$WriteStream.apply(this,arguments),this;else return WriteStream.apply(Object.create(WriteStream.prototype),arguments);}function WriteStream$open(){var that=this;open(that.path,that.flags,that.mode,function(err,fd){if(err){that.destroy();that.emit('error',err);}else{that.fd=fd;that.emit('open',fd);}});}function createReadStream(path,options){return new fs.ReadStream(path,options);}function createWriteStream(path,options){return new fs.WriteStream(path,options);}var fs$open=fs.open;fs.open=open;function open(path,flags,mode,cb){if(typeof mode==='function')cb=mode,mode=null;return go$open(path,flags,mode,cb);function go$open(path,flags,mode,cb,startTime){return fs$open(path,flags,mode,function(err,fd){if(err&&(err.code==='EMFILE'||err.code==='ENFILE'))enqueue([go$open,[path,flags,mode,cb],err,startTime||Date.now(),Date.now()]);else{if(typeof cb==='function')cb.apply(this,arguments);}});}}return fs;}function enqueue(elem){debug$2('ENQUEUE',elem[0].name,elem[1]);fs$h[gracefulQueue].push(elem);retry$1();}// keep track of the timeout between retry() calls
var retryTimer;// reset the startTime and lastTime to now
// this resets the start of the 60 second overall timeout as well as the
// delay between attempts so that we'll retry these jobs sooner
function resetQueue(){var now=Date.now();for(var i=0;i<fs$h[gracefulQueue].length;++i){// entries that are only a length of 2 are from an older version, don't
// bother modifying those since they'll be retried anyway.
if(fs$h[gracefulQueue][i].length>2){fs$h[gracefulQueue][i][3]=now;// startTime
fs$h[gracefulQueue][i][4]=now;// lastTime
}}// call retry to make sure we're actively processing the queue
retry$1();}function retry$1(){// clear the timer and remove it to help prevent unintended concurrency
clearTimeout(retryTimer);retryTimer=undefined;if(fs$h[gracefulQueue].length===0)return;var elem=fs$h[gracefulQueue].shift();var fn=elem[0];var args=elem[1];// these items may be unset if they were added by an older graceful-fs
var err=elem[2];var startTime=elem[3];var lastTime=elem[4];// if we don't have a startTime we have no way of knowing if we've waited
// long enough, so go ahead and retry this item now
if(startTime===undefined){debug$2('RETRY',fn.name,args);fn.apply(null,args);}else if(Date.now()-startTime>=60000){// it's been more than 60 seconds total, bail now
debug$2('TIMEOUT',fn.name,args);var cb=args.pop();if(typeof cb==='function')cb.call(null,err);}else{// the amount of time between the last attempt and right now
var sinceAttempt=Date.now()-lastTime;// the amount of time between when we first tried, and when we last tried
// rounded up to at least 1
var sinceStart=Math.max(lastTime-startTime,1);// backoff. wait longer than the total time we've been retrying, but only
// up to a maximum of 100ms
var desiredDelay=Math.min(sinceStart*1.2,100);// it's been long enough since the last retry, do it again
if(sinceAttempt>=desiredDelay){debug$2('RETRY',fn.name,args);fn.apply(null,args.concat([startTime]));}else{// if we can't do this job yet, push it to the end of the queue
// and let the next iteration check again
fs$h[gracefulQueue].push(elem);}}// schedule our next run if one isn't already scheduled
if(retryTimer===undefined){retryTimer=setTimeout(retry$1,0);}}var makeDir$2={exports:{}};const fs$g=require$$0__default.default;const path$n=path__default.default;const{promisify:promisify$3}=require$$0__default$5.default;const semver=semver__default.default;const useNativeRecursiveOption=semver.satisfies(process.version,'>=10.12.0');// https://github.com/nodejs/node/issues/8987
// https://github.com/libuv/libuv/pull/1088
const checkPath=pth=>{if(process.platform==='win32'){const pathHasInvalidWinCharacters=/[<>:"|?*]/.test(pth.replace(path$n.parse(pth).root,''));if(pathHasInvalidWinCharacters){const error=new Error("Path contains invalid characters: ".concat(pth));error.code='EINVAL';throw error;}}};const processOptions=options=>{// https://github.com/sindresorhus/make-dir/issues/18
const defaults={mode:0o777,fs:fs$g};return{...defaults,...options};};const permissionError$1=pth=>{// This replicates the exception of `fs.mkdir` with native the
// `recusive` option when run on an invalid drive under Windows.
const error=new Error("operation not permitted, mkdir '".concat(pth,"'"));error.code='EPERM';error.errno=-4048;error.path=pth;error.syscall='mkdir';return error;};const makeDir$1=async(input,options)=>{checkPath(input);options=processOptions(options);const mkdir=promisify$3(options.fs.mkdir);const stat=promisify$3(options.fs.stat);if(useNativeRecursiveOption&&options.fs.mkdir===fs$g.mkdir){const pth=path$n.resolve(input);await mkdir(pth,{mode:options.mode,recursive:true});return pth;}const make=async pth=>{try{await mkdir(pth,options.mode);return pth;}catch(error){if(error.code==='EPERM'){throw error;}if(error.code==='ENOENT'){if(path$n.dirname(pth)===pth){throw permissionError$1(pth);}if(error.message.includes('null bytes')){throw error;}await make(path$n.dirname(pth));return make(pth);}try{const stats=await stat(pth);if(!stats.isDirectory()){throw new Error('The path is not a directory');}}catch(_){throw error;}return pth;}};return make(path$n.resolve(input));};makeDir$2.exports=makeDir$1;makeDir$2.exports.sync=(input,options)=>{checkPath(input);options=processOptions(options);if(useNativeRecursiveOption&&options.fs.mkdirSync===fs$g.mkdirSync){const pth=path$n.resolve(input);fs$g.mkdirSync(pth,{mode:options.mode,recursive:true});return pth;}const make=pth=>{try{options.fs.mkdirSync(pth,options.mode);}catch(error){if(error.code==='EPERM'){throw error;}if(error.code==='ENOENT'){if(path$n.dirname(pth)===pth){throw permissionError$1(pth);}if(error.message.includes('null bytes')){throw error;}make(path$n.dirname(pth));return make(pth);}try{if(!options.fs.statSync(pth).isDirectory()){throw new Error('The path is not a directory');}}catch(_){throw error;}}return pth;};return make(path$n.resolve(input));};var makeDirExports=makeDir$2.exports;var writeFileAtomic$1={exports:{}};var imurmurhash={exports:{}};/**
 * @preserve
 * JS Implementation of incremental MurmurHash3 (r150) (as of May 10, 2013)
 *
 * @author <a href="mailto:jensyt@gmail.com">Jens Taylor</a>
 * @see http://github.com/homebrewing/brauhaus-diff
 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
 * @see http://github.com/garycourt/murmurhash-js
 * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
 * @see http://sites.google.com/site/murmurhash/
 */(function(module){(function(){var cache;// Call this function without `new` to use the cached object (good for
// single-threaded environments), or with `new` to create a new object.
//
// @param {string} key A UTF-16 or ASCII string
// @param {number} seed An optional positive integer
// @return {object} A MurmurHash3 object for incremental hashing
function MurmurHash3(key,seed){var m=this instanceof MurmurHash3?this:cache;m.reset(seed);if(typeof key==='string'&&key.length>0){m.hash(key);}if(m!==this){return m;}}// Incrementally add a string to this hash
//
// @param {string} key A UTF-16 or ASCII string
// @return {object} this
MurmurHash3.prototype.hash=function(key){var h1,k1,i,top,len;len=key.length;this.len+=len;k1=this.k1;i=0;switch(this.rem){case 0:k1^=len>i?key.charCodeAt(i++)&0xffff:0;case 1:k1^=len>i?(key.charCodeAt(i++)&0xffff)<<8:0;case 2:k1^=len>i?(key.charCodeAt(i++)&0xffff)<<16:0;case 3:k1^=len>i?(key.charCodeAt(i)&0xff)<<24:0;k1^=len>i?(key.charCodeAt(i++)&0xff00)>>8:0;}this.rem=len+this.rem&3;// & 3 is same as % 4
len-=this.rem;if(len>0){h1=this.h1;while(1){k1=k1*0x2d51+(k1&0xffff)*0xcc9e0000&0xffffffff;k1=k1<<15|k1>>>17;k1=k1*0x3593+(k1&0xffff)*0x1b870000&0xffffffff;h1^=k1;h1=h1<<13|h1>>>19;h1=h1*5+0xe6546b64&0xffffffff;if(i>=len){break;}k1=key.charCodeAt(i++)&0xffff^(key.charCodeAt(i++)&0xffff)<<8^(key.charCodeAt(i++)&0xffff)<<16;top=key.charCodeAt(i++);k1^=(top&0xff)<<24^(top&0xff00)>>8;}k1=0;switch(this.rem){case 3:k1^=(key.charCodeAt(i+2)&0xffff)<<16;case 2:k1^=(key.charCodeAt(i+1)&0xffff)<<8;case 1:k1^=key.charCodeAt(i)&0xffff;}this.h1=h1;}this.k1=k1;return this;};// Get the result of this hash
//
// @return {number} The 32-bit hash
MurmurHash3.prototype.result=function(){var k1,h1;k1=this.k1;h1=this.h1;if(k1>0){k1=k1*0x2d51+(k1&0xffff)*0xcc9e0000&0xffffffff;k1=k1<<15|k1>>>17;k1=k1*0x3593+(k1&0xffff)*0x1b870000&0xffffffff;h1^=k1;}h1^=this.len;h1^=h1>>>16;h1=h1*0xca6b+(h1&0xffff)*0x85eb0000&0xffffffff;h1^=h1>>>13;h1=h1*0xae35+(h1&0xffff)*0xc2b20000&0xffffffff;h1^=h1>>>16;return h1>>>0;};// Reset the hash object for reuse
//
// @param {number} seed An optional positive integer
MurmurHash3.prototype.reset=function(seed){this.h1=typeof seed==='number'?seed:0;this.rem=this.k1=this.len=0;return this;};// A cached object to use. This can be safely used if you're in a single-
// threaded environment, otherwise you need to create new hashes to use.
cache=new MurmurHash3();{module.exports=MurmurHash3;}})();})(imurmurhash);var imurmurhashExports=imurmurhash.exports;var signalExit$1={exports:{}};var signals$1={exports:{}};var hasRequiredSignals;function requireSignals(){if(hasRequiredSignals)return signals$1.exports;hasRequiredSignals=1;(function(module){// This is not the set of all possible signals.
//
// It IS, however, the set of all signals that trigger
// an exit on either Linux or BSD systems.  Linux is a
// superset of the signal names supported on BSD, and
// the unknown signals just fail to register, so we can
// catch that easily enough.
//
// Don't bother with SIGKILL.  It's uncatchable, which
// means that we can't fire any callbacks anyway.
//
// If a user does happen to register a handler on a non-
// fatal signal like SIGWINCH or something, and then
// exit, it'll end up firing `process.emit('exit')`, so
// the handler will be fired anyway.
//
// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised
// artificially, inherently leave the process in a
// state from which it is not safe to try and enter JS
// listeners.
module.exports=['SIGABRT','SIGALRM','SIGHUP','SIGINT','SIGTERM'];if(process.platform!=='win32'){module.exports.push('SIGVTALRM','SIGXCPU','SIGXFSZ','SIGUSR2','SIGTRAP','SIGSYS','SIGQUIT','SIGIOT'// should detect profiler and enable/disable accordingly.
// see #21
// 'SIGPROF'
);}if(process.platform==='linux'){module.exports.push('SIGIO','SIGPOLL','SIGPWR','SIGSTKFLT','SIGUNUSED');}})(signals$1);return signals$1.exports;}// Note: since nyc uses this module to output coverage, any lines
// that are in the direct sync flow of nyc's outputCoverage are
// ignored, since we can never get coverage for them.
// grab a reference to node's real process object right away
var process$1=loadEnv.commonjsGlobal.process;const processOk=function(process){return process&&typeof process==='object'&&typeof process.removeListener==='function'&&typeof process.emit==='function'&&typeof process.reallyExit==='function'&&typeof process.listeners==='function'&&typeof process.kill==='function'&&typeof process.pid==='number'&&typeof process.on==='function';};// some kind of non-node environment, just no-op
/* istanbul ignore if */if(!processOk(process$1)){signalExit$1.exports=function(){return function(){};};}else{var assert$1=require$$1__default$1.default;var signals=requireSignals();var isWin$3=/^win/i.test(process$1.platform);var EE=require$$3__default.default;/* istanbul ignore if */if(typeof EE!=='function'){EE=EE.EventEmitter;}var emitter;if(process$1.__signal_exit_emitter__){emitter=process$1.__signal_exit_emitter__;}else{emitter=process$1.__signal_exit_emitter__=new EE();emitter.count=0;emitter.emitted={};}// Because this emitter is a global, we have to check to see if a
// previous version of this library failed to enable infinite listeners.
// I know what you're about to say.  But literally everything about
// signal-exit is a compromise with evil.  Get used to it.
if(!emitter.infinite){emitter.setMaxListeners(Infinity);emitter.infinite=true;}signalExit$1.exports=function(cb,opts){/* istanbul ignore if */if(!processOk(loadEnv.commonjsGlobal.process)){return function(){};}assert$1.equal(typeof cb,'function','a callback must be provided for exit handler');if(loaded===false){load$3();}var ev='exit';if(opts&&opts.alwaysLast){ev='afterexit';}var remove=function(){emitter.removeListener(ev,cb);if(emitter.listeners('exit').length===0&&emitter.listeners('afterexit').length===0){unload();}};emitter.on(ev,cb);return remove;};var unload=function unload(){if(!loaded||!processOk(loadEnv.commonjsGlobal.process)){return;}loaded=false;signals.forEach(function(sig){try{process$1.removeListener(sig,sigListeners[sig]);}catch(er){}});process$1.emit=originalProcessEmit;process$1.reallyExit=originalProcessReallyExit;emitter.count-=1;};signalExit$1.exports.unload=unload;var emit=function emit(event,code,signal){/* istanbul ignore if */if(emitter.emitted[event]){return;}emitter.emitted[event]=true;emitter.emit(event,code,signal);};// { <signal>: <listener fn>, ... }
var sigListeners={};signals.forEach(function(sig){sigListeners[sig]=function listener(){/* istanbul ignore if */if(!processOk(loadEnv.commonjsGlobal.process)){return;}// If there are no other listeners, an exit is coming!
// Simplest way: remove us and then re-send the signal.
// We know that this will kill the process, so we can
// safely emit now.
var listeners=process$1.listeners(sig);if(listeners.length===emitter.count){unload();emit('exit',null,sig);/* istanbul ignore next */emit('afterexit',null,sig);/* istanbul ignore next */if(isWin$3&&sig==='SIGHUP'){// "SIGHUP" throws an `ENOSYS` error on Windows,
// so use a supported signal instead
sig='SIGINT';}/* istanbul ignore next */process$1.kill(process$1.pid,sig);}};});signalExit$1.exports.signals=function(){return signals;};var loaded=false;var load$3=function load(){if(loaded||!processOk(loadEnv.commonjsGlobal.process)){return;}loaded=true;// This is the number of onSignalExit's that are in play.
// It's important so that we can count the correct number of
// listeners on signals, and don't wait for the other one to
// handle it instead of us.
emitter.count+=1;signals=signals.filter(function(sig){try{process$1.on(sig,sigListeners[sig]);return true;}catch(er){return false;}});process$1.emit=processEmit;process$1.reallyExit=processReallyExit;};signalExit$1.exports.load=load$3;var originalProcessReallyExit=process$1.reallyExit;var processReallyExit=function processReallyExit(code){/* istanbul ignore if */if(!processOk(loadEnv.commonjsGlobal.process)){return;}process$1.exitCode=code||/* istanbul ignore next */0;emit('exit',process$1.exitCode,null);/* istanbul ignore next */emit('afterexit',process$1.exitCode,null);/* istanbul ignore next */originalProcessReallyExit.call(process$1,process$1.exitCode);};var originalProcessEmit=process$1.emit;var processEmit=function processEmit(ev,arg){if(ev==='exit'&&processOk(loadEnv.commonjsGlobal.process)){/* istanbul ignore else */if(arg!==undefined){process$1.exitCode=arg;}var ret=originalProcessEmit.apply(this,arguments);/* istanbul ignore next */emit('exit',process$1.exitCode,null);/* istanbul ignore next */emit('afterexit',process$1.exitCode,null);/* istanbul ignore next */return ret;}else{return originalProcessEmit.apply(this,arguments);}};}var signalExitExports=signalExit$1.exports;var isTypedarray=isTypedArray$2;isTypedArray$2.strict=isStrictTypedArray;isTypedArray$2.loose=isLooseTypedArray;var toString$2=Object.prototype.toString;var names={'[object Int8Array]':true,'[object Int16Array]':true,'[object Int32Array]':true,'[object Uint8Array]':true,'[object Uint8ClampedArray]':true,'[object Uint16Array]':true,'[object Uint32Array]':true,'[object Float32Array]':true,'[object Float64Array]':true};function isTypedArray$2(arr){return isStrictTypedArray(arr)||isLooseTypedArray(arr);}function isStrictTypedArray(arr){return arr instanceof Int8Array||arr instanceof Int16Array||arr instanceof Int32Array||arr instanceof Uint8Array||arr instanceof Uint8ClampedArray||arr instanceof Uint16Array||arr instanceof Uint32Array||arr instanceof Float32Array||arr instanceof Float64Array;}function isLooseTypedArray(arr){return names[toString$2.call(arr)];}/**
 * Convert a typed array to a Buffer without a copy
 *
 * Author:   Feross Aboukhadijeh <https://feross.org>
 * License:  MIT
 *
 * `npm install typedarray-to-buffer`
 */var isTypedArray$1=isTypedarray.strict;var typedarrayToBuffer=function typedarrayToBuffer(arr){if(isTypedArray$1(arr)){// To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer
var buf=Buffer.from(arr.buffer);if(arr.byteLength!==arr.buffer.byteLength){// Respect the "view", i.e. byteOffset and byteLength, without doing a copy
buf=buf.slice(arr.byteOffset,arr.byteOffset+arr.byteLength);}return buf;}else{// Pass through all other types to `Buffer.from`
return Buffer.from(arr);}};writeFileAtomic$1.exports=writeFile;writeFileAtomic$1.exports.sync=writeFileSync;writeFileAtomic$1.exports._getTmpname=getTmpname;// for testing
writeFileAtomic$1.exports._cleanupOnExit=cleanupOnExit;const fs$f=require$$0__default.default;const MurmurHash3=imurmurhashExports;const onExit$1=signalExitExports;const path$m=path__default.default;const isTypedArray=isTypedarray;const typedArrayToBuffer=typedarrayToBuffer;const{promisify:promisify$2}=require$$0__default$5.default;const activeFiles={};// if we run inside of a worker_thread, `process.pid` is not unique
/* istanbul ignore next */const threadId=function getId(){try{const workerThreads=require('worker_threads');/// if we are in main thread, this is set to `0`
return workerThreads.threadId;}catch(e){// worker_threads are not available, fallback to 0
return 0;}}();let invocations=0;function getTmpname(filename){return filename+'.'+MurmurHash3(__filename).hash(String(process.pid)).hash(String(threadId)).hash(String(++invocations)).result();}function cleanupOnExit(tmpfile){return()=>{try{fs$f.unlinkSync(typeof tmpfile==='function'?tmpfile():tmpfile);}catch(_){}};}function serializeActiveFile(absoluteName){return new Promise(resolve=>{// make a queue if it doesn't already exist
if(!activeFiles[absoluteName])activeFiles[absoluteName]=[];activeFiles[absoluteName].push(resolve);// add this job to the queue
if(activeFiles[absoluteName].length===1)resolve();// kick off the first one
});}// https://github.com/isaacs/node-graceful-fs/blob/master/polyfills.js#L315-L342
function isChownErrOk(err){if(err.code==='ENOSYS'){return true;}const nonroot=!process.getuid||process.getuid()!==0;if(nonroot){if(err.code==='EINVAL'||err.code==='EPERM'){return true;}}return false;}async function writeFileAsync(filename,data){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(typeof options==='string'){options={encoding:options};}let fd;let tmpfile;/* istanbul ignore next -- The closure only gets called when onExit triggers */const removeOnExitHandler=onExit$1(cleanupOnExit(()=>tmpfile));const absoluteName=path$m.resolve(filename);try{await serializeActiveFile(absoluteName);const truename=await promisify$2(fs$f.realpath)(filename).catch(()=>filename);tmpfile=getTmpname(truename);if(!options.mode||!options.chown){// Either mode or chown is not explicitly set
// Default behavior is to copy it from original file
const stats=await promisify$2(fs$f.stat)(truename).catch(()=>{});if(stats){if(options.mode==null){options.mode=stats.mode;}if(options.chown==null&&process.getuid){options.chown={uid:stats.uid,gid:stats.gid};}}}fd=await promisify$2(fs$f.open)(tmpfile,'w',options.mode);if(options.tmpfileCreated){await options.tmpfileCreated(tmpfile);}if(isTypedArray(data)){data=typedArrayToBuffer(data);}if(Buffer.isBuffer(data)){await promisify$2(fs$f.write)(fd,data,0,data.length,0);}else if(data!=null){await promisify$2(fs$f.write)(fd,String(data),0,String(options.encoding||'utf8'));}if(options.fsync!==false){await promisify$2(fs$f.fsync)(fd);}await promisify$2(fs$f.close)(fd);fd=null;if(options.chown){await promisify$2(fs$f.chown)(tmpfile,options.chown.uid,options.chown.gid).catch(err=>{if(!isChownErrOk(err)){throw err;}});}if(options.mode){await promisify$2(fs$f.chmod)(tmpfile,options.mode).catch(err=>{if(!isChownErrOk(err)){throw err;}});}await promisify$2(fs$f.rename)(tmpfile,truename);}finally{if(fd){await promisify$2(fs$f.close)(fd).catch(/* istanbul ignore next */()=>{});}removeOnExitHandler();await promisify$2(fs$f.unlink)(tmpfile).catch(()=>{});activeFiles[absoluteName].shift();// remove the element added by serializeSameFile
if(activeFiles[absoluteName].length>0){activeFiles[absoluteName][0]();// start next job if one is pending
}else delete activeFiles[absoluteName];}}function writeFile(filename,data,options,callback){if(options instanceof Function){callback=options;options={};}const promise=writeFileAsync(filename,data,options);if(callback){promise.then(callback,callback);}return promise;}function writeFileSync(filename,data,options){if(typeof options==='string')options={encoding:options};else if(!options)options={};try{filename=fs$f.realpathSync(filename);}catch(ex){// it's ok, it'll happen on a not yet existing file
}const tmpfile=getTmpname(filename);if(!options.mode||!options.chown){// Either mode or chown is not explicitly set
// Default behavior is to copy it from original file
try{const stats=fs$f.statSync(filename);options=Object.assign({},options);if(!options.mode){options.mode=stats.mode;}if(!options.chown&&process.getuid){options.chown={uid:stats.uid,gid:stats.gid};}}catch(ex){// ignore stat errors
}}let fd;const cleanup=cleanupOnExit(tmpfile);const removeOnExitHandler=onExit$1(cleanup);let threw=true;try{fd=fs$f.openSync(tmpfile,'w',options.mode||0o666);if(options.tmpfileCreated){options.tmpfileCreated(tmpfile);}if(isTypedArray(data)){data=typedArrayToBuffer(data);}if(Buffer.isBuffer(data)){fs$f.writeSync(fd,data,0,data.length,0);}else if(data!=null){fs$f.writeSync(fd,String(data),0,String(options.encoding||'utf8'));}if(options.fsync!==false){fs$f.fsyncSync(fd);}fs$f.closeSync(fd);fd=null;if(options.chown){try{fs$f.chownSync(tmpfile,options.chown.uid,options.chown.gid);}catch(err){if(!isChownErrOk(err)){throw err;}}}if(options.mode){try{fs$f.chmodSync(tmpfile,options.mode);}catch(err){if(!isChownErrOk(err)){throw err;}}}fs$f.renameSync(tmpfile,filename);threw=false;}finally{if(fd){try{fs$f.closeSync(fd);}catch(ex){// ignore close errors at this stage, error may have closed fd already.
}}removeOnExitHandler();if(threw){cleanup();}}}var writeFileAtomicExports=writeFileAtomic$1.exports;var isObj$1=value=>{const type=typeof value;return value!==null&&(type==='object'||type==='function');};const isObj=isObj$1;const disallowedKeys=['__proto__','prototype','constructor'];const isValidPath=pathSegments=>!pathSegments.some(segment=>disallowedKeys.includes(segment));function getPathSegments(path){const pathArray=path.split('.');const parts=[];for(let i=0;i<pathArray.length;i++){let p=pathArray[i];while(p[p.length-1]==='\\'&&pathArray[i+1]!==undefined){p=p.slice(0,-1)+'.';p+=pathArray[++i];}parts.push(p);}if(!isValidPath(parts)){return[];}return parts;}var dotProp$1={get(object,path,value){if(!isObj(object)||typeof path!=='string'){return value===undefined?object:value;}const pathArray=getPathSegments(path);if(pathArray.length===0){return;}for(let i=0;i<pathArray.length;i++){if(!Object.prototype.propertyIsEnumerable.call(object,pathArray[i])){return value;}object=object[pathArray[i]];if(object===undefined||object===null){// `object` is either `undefined` or `null` so we want to stop the loop, and
// if this is not the last bit of the path, and
// if it did't return `undefined`
// it would return `null` if `object` is `null`
// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`
if(i!==pathArray.length-1){return value;}break;}}return object;},set(object,path,value){if(!isObj(object)||typeof path!=='string'){return object;}const root=object;const pathArray=getPathSegments(path);for(let i=0;i<pathArray.length;i++){const p=pathArray[i];if(!isObj(object[p])){object[p]={};}if(i===pathArray.length-1){object[p]=value;}object=object[p];}return root;},delete(object,path){if(!isObj(object)||typeof path!=='string'){return false;}const pathArray=getPathSegments(path);for(let i=0;i<pathArray.length;i++){const p=pathArray[i];if(i===pathArray.length-1){delete object[p];return true;}object=object[p];if(!isObj(object)){return false;}}},has(object,path){if(!isObj(object)||typeof path!=='string'){return false;}const pathArray=getPathSegments(path);if(pathArray.length===0){return false;}// eslint-disable-next-line unicorn/no-for-loop
for(let i=0;i<pathArray.length;i++){if(isObj(object)){if(!(pathArray[i]in object)){return false;}object=object[pathArray[i]];}else{return false;}}return true;}};const crypto=require$$3__default$1.default;var cryptoRandomString$1=length=>{if(!Number.isFinite(length)){throw new TypeError('Expected a finite number');}return crypto.randomBytes(Math.ceil(length/2)).toString('hex').slice(0,length);};const cryptoRandomString=cryptoRandomString$1;var uniqueString$1=()=>cryptoRandomString(32);const path$l=path__default.default;const os$5=require$$0__default$2.default;const fs$e=gracefulFs;const makeDir=makeDirExports;const xdgBasedir=xdgBasedir$2;const writeFileAtomic=writeFileAtomicExports;const dotProp=dotProp$1;const uniqueString=uniqueString$1;const configDirectory=xdgBasedir.config||path$l.join(os$5.tmpdir(),uniqueString());const permissionError='You don\'t have access to this file.';const makeDirOptions={mode:0o0700};const writeFileOptions={mode:0o0600};class Configstore{constructor(id,defaults){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const pathPrefix=options.globalConfigPath?path$l.join(id,'config.json'):path$l.join('configstore',"".concat(id,".json"));this.path=options.configPath||path$l.join(configDirectory,pathPrefix);if(defaults){this.all={...defaults,...this.all};}}get all(){try{return JSON.parse(fs$e.readFileSync(this.path,'utf8'));}catch(error){// Create directory if it doesn't exist
if(error.code==='ENOENT'){return{};}// Improve the message of permission errors
if(error.code==='EACCES'){error.message="".concat(error.message,"\n").concat(permissionError,"\n");}// Empty the file if it encounters invalid JSON
if(error.name==='SyntaxError'){writeFileAtomic.sync(this.path,'',writeFileOptions);return{};}throw error;}}set all(value){try{// Make sure the folder exists as it could have been deleted in the meantime
makeDir.sync(path$l.dirname(this.path),makeDirOptions);writeFileAtomic.sync(this.path,JSON.stringify(value,undefined,'\t'),writeFileOptions);}catch(error){// Improve the message of permission errors
if(error.code==='EACCES'){error.message="".concat(error.message,"\n").concat(permissionError,"\n");}throw error;}}get size(){return Object.keys(this.all||{}).length;}get(key){return dotProp.get(this.all,key);}set(key,value){const config=this.all;if(arguments.length===1){for(const k of Object.keys(key)){dotProp.set(config,k,key[k]);}}else{dotProp.set(config,key,value);}this.all=config;}has(key){return dotProp.has(this.all,key);}delete(key){const config=this.all;dotProp.delete(config,key);this.all=config;}clear(){this.all={};}}var configstore=Configstore;var ConfigStore=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(configstore);const sanityEnv$1=(process.env.SANITY_INTERNAL_ENV||"").toLowerCase();const configName=sanityEnv$1&&sanityEnv$1!=="production"?"sanity-".concat(sanityEnv$1):"sanity";const defaults$4={};let config$1;const getUserConfig=()=>{if(!config$1){config$1=new ConfigStore(configName,defaults$4,{globalConfigPath:true});}return config$1;};const apiHosts={staging:"https://api.sanity.work",development:"http://api.sanity.wtf"};const defaults$3={requireUser:true,requireProject:true};const authErrors=()=>({onError:err=>{if(!err||!isReqResError(err)){return err;}const statusCode=err.response&&err.response.body&&err.response.body.statusCode;if(statusCode===401){err.message="".concat(err.message,". You may need to login again with ").concat(chalk__default.default.cyan("sanity login"),".\nFor more information, see ").concat(generateHelpUrl("cli-errors"),".");}return err;}});function isReqResError(err){return err.hasOwnProperty("response");}function getCliToken(){const envAuthToken=process.env.SANITY_AUTH_TOKEN;const userConfig=getUserConfig();return envAuthToken||userConfig.get("authToken");}function getClientWrapper(cliApiConfig,configPath){const requester=loadEnv.requester.clone();requester.use(authErrors());return function(opts){const sanityEnv=process.env.SANITY_INTERNAL_ENV||"production";const{requireUser,requireProject,api}={...defaults$3,...opts};const token=getCliToken();const apiHost=apiHosts[sanityEnv];const apiConfig={...(cliApiConfig||{}),...(api||{})};if(apiHost){apiConfig.apiHost=apiHost;}if(requireUser&&!token){throw new Error('You must login first - run "sanity login"');}if(requireProject&&!apiConfig.projectId){const relativeConfigPath=path__default.default.relative(process.cwd(),configPath);throw new Error("".concat(relativeConfigPath," does not contain a project identifier (\"api.projectId\"), which is required for the Sanity CLI to communicate with the Sanity API"));}return loadEnv.createClient({...apiConfig,apiVersion:"1",dataset:apiConfig.dataset||"~dummy-placeholder-dataset-",token:requireUser?token:void 0,useProjectHostname:requireProject,requester,useCdn:false});};}const printVersionResultCommand=async(args,context)=>{const versions=await findSanityModuleVersions(context,{target:"latest"});printResult(versions,context.output.print);};function printResult(versions,print){const{versionLength,formatName}=getFormatters(versions);versions.forEach(mod=>{const version=lodashExports.padStart(mod.installed||"<missing>",versionLength);const latest=mod.installed===mod.latest?chalk__default.default.green("(up to date)"):"(latest: ".concat(chalk__default.default.yellow(mod.latest),")");print("".concat(formatName(getDisplayName(mod))," ").concat(version," ").concat(latest));});}function getFormatters(versions){const nameLength=versions.reduce((max,mod)=>Math.max(max,getDisplayName(mod).length),0);const versionLength=versions.reduce((max,mod)=>Math.max(max,(mod.installed||"<missing>").length),0);const formatName=name=>lodashExports.padEnd(name,nameLength+1).replace(/^@sanity\/(.*?)(\s|$)/,"".concat(chalk__default.default.yellow("@sanity/")).concat(chalk__default.default.cyan("$1"),"$2")).replace(/^sanity(\s|$)/,"".concat(chalk__default.default.yellow("sanity"),"$1"));return{nameLength,versionLength,formatName};}function getDisplayName(mod){return mod.isGlobal?"".concat(mod.name," (global)"):mod.name;}const printDebugInfo=async(args,context)=>{const flags=args.extOptions;const{user,globalConfig,projectConfig,project,versions}=await gatherInfo(context);const{chalk}=context;context.output.print("\nUser:");if(user instanceof Error){context.output.print("  ".concat(chalk.red(user.message),"\n"));}else{printKeyValue({ID:user.id,Name:user.name,Email:user.email,Roles:project?project.userRoles:void 0},context);}if(project){context.output.print("Project:");printKeyValue({ID:project.id,"Display name":project.displayName,"Studio URL":project.studioHostname},context);}const authToken=process.env.SANITY_AUTH_TOKEN||globalConfig.authToken;if(authToken){context.output.print("Authentication:");printKeyValue({"User type":globalConfig.authType||"normal","Auth token":flags.secrets?authToken:"<redacted>"},context);if(!flags.secrets){context.output.print("  (run with --secrets to reveal token)\n");}}context.output.print("Global config (".concat(chalk.yellow(getGlobalConfigLocation()),"):"));const globalCfg=lodashExports.omit(globalConfig,["authType","authToken"]);context.output.print("  ".concat(formatObject(globalCfg).replace(/\n/g,"\n  "),"\n"));if(projectConfig){const configLocation=context.cliConfigPath?" (".concat(chalk.yellow(path__default.default.relative(process.cwd(),context.cliConfigPath)),")"):"";context.output.print("Project config".concat(configLocation,":"));context.output.print("  ".concat(formatObject(projectConfig).replace(/\n/g,"\n  ")));}if(versions){context.output.print("\nPackage versions:");printResult(versions,line=>context.output.print("  ".concat(line)));context.output.print("");}};function formatObject(obj){return require$$0__default$5.default.inspect(obj,{colors:true,depth:Infinity});}function printKeyValue(obj,context){let printedLines=0;Object.keys(obj).forEach(key=>{if(typeof obj[key]!=="undefined"){context.output.print("  ".concat(key,": ").concat(formatObject(obj[key])));printedLines++;}});if(printedLines>0){context.output.print("");}}async function gatherInfo(context){const baseInfo=await promiseProps$1({globalConfig:gatherGlobalConfigInfo(),projectConfig:gatherProjectConfigInfo(context)});const withUser={...baseInfo,user:await gatherUserInfo(context,{projectBased:Boolean(baseInfo.projectConfig&&baseInfo.projectConfig.api)})};return promiseProps$1({project:gatherProjectInfo(context,withUser),versions:findSanityModuleVersions(context,{target:"latest"}),...withUser});}function getGlobalConfigLocation(){const user=(require$$0__default$2.default.userInfo().username||"user").replace(/\\/g,"");const configDir=xdgBasedir$1.config||path__default.default.join(require$$0__default$2.default.tmpdir(),user,".config");return path__default.default.join(configDir,"sanity","config.json");}function gatherGlobalConfigInfo(){return getUserConfig().all;}function gatherProjectConfigInfo(context){var _cliConfig$api;const{cliConfig}=context;if(cliConfig!==null&&cliConfig!==void 0&&(_cliConfig$api=cliConfig.api)!==null&&_cliConfig$api!==void 0&&_cliConfig$api.projectId){return cliConfig;}return{error:"Missing required \"api.projectId\" key"};}async function gatherProjectInfo(context,baseInfo){const projectClient=context.apiClient({requireUser:false,requireProject:false});const projectId=projectClient.config().projectId;const hasToken=Boolean(getCliToken());if(!projectId||!hasToken){return null;}const client=context.apiClient({requireUser:true,requireProject:false}).withConfig({apiVersion:"2023-06-06"});const projectInfo=await client.request({url:"/projects/".concat(projectId)});if(!projectInfo){return new Error("Project specified in configuration (".concat(projectId,") does not exist in API"));}const userId=baseInfo.user instanceof Error?null:baseInfo.user.id;const host=projectInfo.studioHost;const member=(projectInfo.members||[]).find(user=>user.id===userId);const hostname=host&&"https://".concat(host,".sanity.studio/");return{id:projectId,displayName:projectInfo.displayName,studioHostname:hostname,userRoles:member?member.roles.map(role=>role.name):["<none>"]};}async function gatherUserInfo(context,options){const hasToken=Boolean(getCliToken());if(!hasToken){return new Error("Not logged in");}const client=context.apiClient({requireUser:true,requireProject:options.projectBased});const userInfo=await client.users.getById("me");if(!userInfo){return new Error("Token expired or invalid");}return lodashExports.pick(userInfo,["id","name","email"]);}const help$2="\nUsed to find information about the Sanity environment, and to debug Sanity-related issues.\n\nOptions\n  --secrets Include API keys in output\n\nExamples\n  # Show information about the user, project, and local/global Sanity environment\n  sanity debug\n\n  # Include API keys in the output\n  sanity debug --secrets\n";const debugCommand={name:"debug",signature:"[--secrets]",description:"Provides diagnostic info for Sanity Studio troubleshooting",helpText:help$2,action:printDebugInfo};var isWsl$2={exports:{}};const fs$d=require$$0__default.default;let isDocker$2;function hasDockerEnv(){try{fs$d.statSync('/.dockerenv');return true;}catch(_){return false;}}function hasDockerCGroup(){try{return fs$d.readFileSync('/proc/self/cgroup','utf8').includes('docker');}catch(_){return false;}}var isDocker_1=()=>{if(isDocker$2===undefined){isDocker$2=hasDockerEnv()||hasDockerCGroup();}return isDocker$2;};const os$4=require$$0__default$2.default;const fs$c=require$$0__default.default;const isDocker$1=isDocker_1;const isWsl$1=()=>{if(process.platform!=='linux'){return false;}if(os$4.release().toLowerCase().includes('microsoft')){if(isDocker$1()){return false;}return true;}try{return fs$c.readFileSync('/proc/version','utf8').toLowerCase().includes('microsoft')?!isDocker$1():false;}catch(_){return false;}};if(process.env.__IS_WSL_TEST__){isWsl$2.exports=isWsl$1;}else{isWsl$2.exports=isWsl$1();}var isWslExports=isWsl$2.exports;var defineLazyProp=(object,propertyName,fn)=>{const define=value=>Object.defineProperty(object,propertyName,{value,enumerable:true,writable:true});Object.defineProperty(object,propertyName,{configurable:true,enumerable:true,get(){const result=fn();define(result);return result;},set(value){define(value);}});return object;};const path$k=path__default.default;const childProcess$1=require$$0__default$1.default;const{promises:fs$b,constants:fsConstants}=require$$0__default.default;const isWsl=isWslExports;const isDocker=isDocker_1;const defineLazyProperty=defineLazyProp;// Path to included `xdg-open`.
const localXdgOpenPath=path$k.join(__dirname,'xdg-open');const{platform:platform$1,arch}=process;// Podman detection
const hasContainerEnv=()=>{try{fs$b.statSync('/run/.containerenv');return true;}catch{return false;}};let cachedResult;function isInsideContainer(){if(cachedResult===undefined){cachedResult=hasContainerEnv()||isDocker();}return cachedResult;}/**
Get the mount point for fixed drives in WSL.

@inner
@returns {string} The mount point.
*/const getWslDrivesMountPoint=(()=>{// Default value for "root" param
// according to https://docs.microsoft.com/en-us/windows/wsl/wsl-config
const defaultMountPoint='/mnt/';let mountPoint;return async function(){if(mountPoint){// Return memoized mount point value
return mountPoint;}const configFilePath='/etc/wsl.conf';let isConfigFileExists=false;try{await fs$b.access(configFilePath,fsConstants.F_OK);isConfigFileExists=true;}catch{}if(!isConfigFileExists){return defaultMountPoint;}const configContent=await fs$b.readFile(configFilePath,{encoding:'utf8'});const configMountPoint=/(?<!#.*)root\s*=\s*(?<mountPoint>.*)/g.exec(configContent);if(!configMountPoint){return defaultMountPoint;}mountPoint=configMountPoint.groups.mountPoint.trim();mountPoint=mountPoint.endsWith('/')?mountPoint:"".concat(mountPoint,"/");return mountPoint;};})();const pTryEach=async(array,mapper)=>{let latestError;for(const item of array){try{return await mapper(item);// eslint-disable-line no-await-in-loop
}catch(error){latestError=error;}}throw latestError;};const baseOpen=async options=>{options={wait:false,background:false,newInstance:false,allowNonzeroExitCode:false,...options};if(Array.isArray(options.app)){return pTryEach(options.app,singleApp=>baseOpen({...options,app:singleApp}));}let{name:app,arguments:appArguments=[]}=options.app||{};appArguments=[...appArguments];if(Array.isArray(app)){return pTryEach(app,appName=>baseOpen({...options,app:{name:appName,arguments:appArguments}}));}let command;const cliArguments=[];const childProcessOptions={};if(platform$1==='darwin'){command='open';if(options.wait){cliArguments.push('--wait-apps');}if(options.background){cliArguments.push('--background');}if(options.newInstance){cliArguments.push('--new');}if(app){cliArguments.push('-a',app);}}else if(platform$1==='win32'||isWsl&&!isInsideContainer()&&!app){const mountPoint=await getWslDrivesMountPoint();command=isWsl?"".concat(mountPoint,"c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe"):"".concat(process.env.SYSTEMROOT,"\\System32\\WindowsPowerShell\\v1.0\\powershell");cliArguments.push('-NoProfile','-NonInteractive','–ExecutionPolicy','Bypass','-EncodedCommand');if(!isWsl){childProcessOptions.windowsVerbatimArguments=true;}const encodedArguments=['Start'];if(options.wait){encodedArguments.push('-Wait');}if(app){// Double quote with double quotes to ensure the inner quotes are passed through.
// Inner quotes are delimited for PowerShell interpretation with backticks.
encodedArguments.push("\"`\"".concat(app,"`\"\""),'-ArgumentList');if(options.target){appArguments.unshift(options.target);}}else if(options.target){encodedArguments.push("\"".concat(options.target,"\""));}if(appArguments.length>0){appArguments=appArguments.map(arg=>"\"`\"".concat(arg,"`\"\""));encodedArguments.push(appArguments.join(','));}// Using Base64-encoded command, accepted by PowerShell, to allow special characters.
options.target=Buffer.from(encodedArguments.join(' '),'utf16le').toString('base64');}else{if(app){command=app;}else{// When bundled by Webpack, there's no actual package file path and no local `xdg-open`.
const isBundled=!__dirname||__dirname==='/';// Check if local `xdg-open` exists and is executable.
let exeLocalXdgOpen=false;try{await fs$b.access(localXdgOpenPath,fsConstants.X_OK);exeLocalXdgOpen=true;}catch{}const useSystemXdgOpen=process.versions.electron||platform$1==='android'||isBundled||!exeLocalXdgOpen;command=useSystemXdgOpen?'xdg-open':localXdgOpenPath;}if(appArguments.length>0){cliArguments.push(...appArguments);}if(!options.wait){// `xdg-open` will block the process unless stdio is ignored
// and it's detached from the parent even if it's unref'd.
childProcessOptions.stdio='ignore';childProcessOptions.detached=true;}}if(options.target){cliArguments.push(options.target);}if(platform$1==='darwin'&&appArguments.length>0){cliArguments.push('--args',...appArguments);}const subprocess=childProcess$1.spawn(command,cliArguments,childProcessOptions);if(options.wait){return new Promise((resolve,reject)=>{subprocess.once('error',reject);subprocess.once('close',exitCode=>{if(!options.allowNonzeroExitCode&&exitCode>0){reject(new Error("Exited with code ".concat(exitCode)));return;}resolve(subprocess);});});}subprocess.unref();return subprocess;};const open=(target,options)=>{if(typeof target!=='string'){throw new TypeError('Expected a `target`');}return baseOpen({...options,target});};const openApp=(name,options)=>{if(typeof name!=='string'){throw new TypeError('Expected a `name`');}const{arguments:appArguments=[]}=options||{};if(appArguments!==undefined&&appArguments!==null&&!Array.isArray(appArguments)){throw new TypeError('Expected `appArguments` as Array type');}return baseOpen({...options,app:{name,arguments:appArguments}});};function detectArchBinary(binary){if(typeof binary==='string'||Array.isArray(binary)){return binary;}const{[arch]:archBinary}=binary;if(!archBinary){throw new Error("".concat(arch," is not supported"));}return archBinary;}function detectPlatformBinary(_ref3,_ref4){let{[platform$1]:platformBinary}=_ref3;let{wsl}=_ref4;if(wsl&&isWsl){return detectArchBinary(wsl);}if(!platformBinary){throw new Error("".concat(platform$1," is not supported"));}return detectArchBinary(platformBinary);}const apps={};defineLazyProperty(apps,'chrome',()=>detectPlatformBinary({darwin:'google chrome',win32:'chrome',linux:['google-chrome','google-chrome-stable','chromium']},{wsl:{ia32:'/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe',x64:['/mnt/c/Program Files/Google/Chrome/Application/chrome.exe','/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe']}}));defineLazyProperty(apps,'firefox',()=>detectPlatformBinary({darwin:'firefox',win32:'C:\\Program Files\\Mozilla Firefox\\firefox.exe',linux:'firefox'},{wsl:'/mnt/c/Program Files/Mozilla Firefox/firefox.exe'}));defineLazyProperty(apps,'edge',()=>detectPlatformBinary({darwin:'microsoft edge',win32:'msedge',linux:['microsoft-edge','microsoft-edge-dev']},{wsl:'/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe'}));open.apps=apps;open.openApp=openApp;var open_1=open;var open$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(open_1);const docsCommand={name:"docs",helpText:"",signature:"docs",description:"Opens Sanity Studio documentation in your web browser",async action(args,context){const{output}=context;const{print}=output;const url="https://www.sanity.io/docs";print("Opening ".concat(url));await open$1(url);}};var leven$2={exports:{}};const array=[];const charCodeCache=[];const leven=(left,right)=>{if(left===right){return 0;}const swap=left;// Swapping the strings if `a` is longer than `b` so we know which one is the
// shortest & which one is the longest
if(left.length>right.length){left=right;right=swap;}let leftLength=left.length;let rightLength=right.length;// Performing suffix trimming:
// We can linearly drop suffix common to both strings since they
// don't increase distance at all
// Note: `~-` is the bitwise way to perform a `- 1` operation
while(leftLength>0&&left.charCodeAt(~-leftLength)===right.charCodeAt(~-rightLength)){leftLength--;rightLength--;}// Performing prefix trimming
// We can linearly drop prefix common to both strings since they
// don't increase distance at all
let start=0;while(start<leftLength&&left.charCodeAt(start)===right.charCodeAt(start)){start++;}leftLength-=start;rightLength-=start;if(leftLength===0){return rightLength;}let bCharCode;let result;let temp;let temp2;let i=0;let j=0;while(i<leftLength){charCodeCache[i]=left.charCodeAt(start+i);array[i]=++i;}while(j<rightLength){bCharCode=right.charCodeAt(start+j);temp=j++;result=j;for(i=0;i<leftLength;i++){temp2=bCharCode===charCodeCache[i]?temp:temp+1;temp=array[i];// eslint-disable-next-line no-multi-assign
result=array[i]=temp>result?temp2>result?result+1:temp2:temp2>temp?temp+1:temp2;}}return result;};leven$2.exports=leven;// TODO: Remove this for the next major release
leven$2.exports.default=leven;var levenExports=leven$2.exports;var leven$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(levenExports);const commonMistakes={get:"list"};const levenThreshold=3;const coreCommands=["build","check","configcheck","cors","dataset","deploy","dev","documents","exec","graphql","hook","preview","migrate","schema","start","undeploy","uninstall","users"];const helpText$8="\nRun the command again within a Sanity project directory, where \"sanity\"\nis installed as a dependency.";function getNoSuchCommandText(cmdName,parentGroupName,groups){if(parentGroupName&&groups&&groups[parentGroupName]){return suggestCommand(cmdName,groups[parentGroupName],parentGroupName);}const isCoreCommand=coreCommands.includes(cmdName);if(isCoreCommand){return"Command \"".concat(cmdName,"\" is not available outside of a Sanity project context.").concat(helpText$8);}return suggestCommand(cmdName,groups?groups.default:[]);}function suggestCommand(cmdName,group){let parentGroupName=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;const closest=group.map(command=>leven$1(command.name,cmdName)).reduce((current,distance,index)=>distance<current.distance?{index,distance}:current,{index:0,distance:Infinity});let suggestCmd="";if(closest.distance<=levenThreshold){const cmdCandidate=group[closest.index];suggestCmd=cmdCandidate.name;}const alternative=commonMistakes[cmdName];if(!suggestCmd&&alternative){suggestCmd=alternative;}const input=chalk__default.default.cyan("\"".concat(cmdName,"\""));const suggest=chalk__default.default.green("\"".concat(suggestCmd,"\""));const help=chalk__default.default.cyan('"sanity --help"');const didYouMean=suggestCmd?"Did you mean ".concat(suggest,"? "):" ";return parentGroupName?"".concat(input," is not a subcommand of \"sanity ").concat(parentGroupName,"\". ").concat(didYouMean,"See ").concat(help):"".concat(input," is not a sanity command. ").concat(didYouMean,"See ").concat(help);}function generateCommandsDocumentation(commandGroups){let group=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"default";const commandGroup=commandGroups[group];const commands=commandGroup&&commandGroup.filter(cmd=>!cmd.hideFromHelp);if(!commands||commands.length===0){throw new Error(getNoSuchCommandText(group));}const cmdLength=commands.reduce((max,cmd)=>Math.max(cmd.name.length,max),0);const prefix=group==="default"?"":" ".concat(group);const rows=["usage: sanity".concat(prefix," [--default] [-v|--version] [-d|--debug] [-h|--help] <command> [<args>]"),"","Commands:"].concat(commands.map(cmd=>"   ".concat(lodashExports.padEnd(cmd.name,cmdLength+1)," ").concat(cmd.description))).concat(["","See 'sanity help".concat(prefix," <command>' for specific information on a subcommand.")]);return rows.join("\n");}function generateCommandDocumentation(command,group,subCommand){if(!command){throw new Error(subCommand?"\"".concat(subCommand,"\" is not a subcommand of \"").concat(group,"\". See 'sanity help ").concat(group,"'"):getNoSuchCommandText(group||command));}const cmdParts=[group||command.name,subCommand].filter(Boolean).join(" ");return["usage: sanity ".concat(cmdParts," ").concat(command.signature),"","   ".concat(command.description),"",(command.helpText||"").trim()].join("\n");}function isCommandGroup(cmdOrGroup){return"isGroupRoot"in cmdOrGroup;}const showHelpAction=async(args,context)=>{const[commandName,subCommandName]=args.argsWithoutOptions;const{commandGroups}=context.commandRunner;if(!commandName){loadEnv.debug('No command given to "help", showing generate Sanity CLI help');context.output.print(generateCommandsDocumentation(commandGroups));return;}const defaultCommand=commandGroups.default.find(cmd=>cmd.name===commandName);if(defaultCommand&&!isCommandGroup(defaultCommand)){loadEnv.debug("Found command in default group with name \"".concat(commandName,"\""));context.output.print(generateCommandDocumentation(defaultCommand));return;}const group=commandGroups[commandName];if(!subCommandName&&!group){loadEnv.debug("No subcommand given, and we couldn't find a group with name \"".concat(group,"\""));throw new Error(getNoSuchCommandText(commandName,null,commandGroups));}if(!subCommandName&&group){loadEnv.debug("No subcommand given, but found group with name \"".concat(commandName,"\""));context.output.print(generateCommandsDocumentation(commandGroups,commandName));return;}if(subCommandName&&!group){loadEnv.debug("Subcommand given, but couldn't find group with name \"".concat(commandName,"\""));throw new Error(getNoSuchCommandText(subCommandName,commandName,commandGroups));}const subCommand=context.commandRunner.resolveSubcommand(group,subCommandName,commandName);if(!subCommand){loadEnv.debug("Subcommand given, but not found in group \"".concat(commandName,"\""));throw new Error(getNoSuchCommandText(subCommandName,commandName,commandGroups));}loadEnv.debug('Subcommand "%s" for group "%s" found, showing help',subCommandName,commandName);if(!isCommandGroup(subCommand.command)){context.output.print(generateCommandDocumentation(subCommand.command,commandName,subCommandName));}};const help$1="\nWith no options and no COMMAND given, the synopsis of the sanity command and a\nlist of the most commonly used commands are printed on the standard output.\n\nIf a command is given, the help page for that command is printed to standard\noutput. This will usually be more in-depth than the brief description shown in\nthe command list.\n";const command$1={name:"help",signature:"[COMMAND]",description:"Displays help information about Sanity CLI commands",action:showHelpAction,helpText:help$1};var frameworks={};var readConfigFile$1={};var jsYaml$4={};var loader$5={};var common$l={};function isNothing$2(subject){return typeof subject==='undefined'||subject===null;}function isObject$7(subject){return typeof subject==='object'&&subject!==null;}function toArray$3(sequence){if(Array.isArray(sequence))return sequence;else if(isNothing$2(sequence))return[];return[sequence];}function extend$4(target,source){var index,length,key,sourceKeys;if(source){sourceKeys=Object.keys(source);for(index=0,length=sourceKeys.length;index<length;index+=1){key=sourceKeys[index];target[key]=source[key];}}return target;}function repeat$3(string,count){var result='',cycle;for(cycle=0;cycle<count;cycle+=1){result+=string;}return result;}function isNegativeZero$2(number){return number===0&&Number.NEGATIVE_INFINITY===1/number;}common$l.isNothing=isNothing$2;common$l.isObject=isObject$7;common$l.toArray=toArray$3;common$l.repeat=repeat$3;common$l.isNegativeZero=isNegativeZero$2;common$l.extend=extend$4;function YAMLException$e(reason,mark){// Super constructor
Error.call(this);this.name='YAMLException';this.reason=reason;this.mark=mark;this.message=(this.reason||'(unknown reason)')+(this.mark?' '+this.mark.toString():'');// Include stack trace in error object
if(Error.captureStackTrace){// Chrome and NodeJS
Error.captureStackTrace(this,this.constructor);}else{// FF, IE 10+ and Safari 6+. Fallback for others
this.stack=new Error().stack||'';}}// Inherit from Error
YAMLException$e.prototype=Object.create(Error.prototype);YAMLException$e.prototype.constructor=YAMLException$e;YAMLException$e.prototype.toString=function toString(compact){var result=this.name+': ';result+=this.reason||'(unknown reason)';if(!compact&&this.mark){result+=' '+this.mark.toString();}return result;};var exception$2=YAMLException$e;var common$k=common$l;function Mark$3(name,buffer,position,line,column){this.name=name;this.buffer=buffer;this.position=position;this.line=line;this.column=column;}Mark$3.prototype.getSnippet=function getSnippet(indent,maxLength){var head,start,tail,end,snippet;if(!this.buffer)return null;indent=indent||4;maxLength=maxLength||75;head='';start=this.position;while(start>0&&'\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(start-1))===-1){start-=1;if(this.position-start>maxLength/2-1){head=' ... ';start+=5;break;}}tail='';end=this.position;while(end<this.buffer.length&&'\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(end))===-1){end+=1;if(end-this.position>maxLength/2-1){tail=' ... ';end-=5;break;}}snippet=this.buffer.slice(start,end);return common$k.repeat(' ',indent)+head+snippet+tail+'\n'+common$k.repeat(' ',indent+this.position-start+head.length)+'^';};Mark$3.prototype.toString=function toString(compact){var snippet,where='';if(this.name){where+='in "'+this.name+'" ';}where+='at line '+(this.line+1)+', column '+(this.column+1);if(!compact){snippet=this.getSnippet();if(snippet){where+=':\n'+snippet;}}return where;};var mark$2=Mark$3;var YAMLException$d=exception$2;var TYPE_CONSTRUCTOR_OPTIONS$2=['kind','resolve','construct','instanceOf','predicate','represent','defaultStyle','styleAliases'];var YAML_NODE_KINDS$2=['scalar','sequence','mapping'];function compileStyleAliases$2(map){var result={};if(map!==null){Object.keys(map).forEach(function(style){map[style].forEach(function(alias){result[String(alias)]=style;});});}return result;}function Type$O(tag,options){options=options||{};Object.keys(options).forEach(function(name){if(TYPE_CONSTRUCTOR_OPTIONS$2.indexOf(name)===-1){throw new YAMLException$d('Unknown option "'+name+'" is met in definition of "'+tag+'" YAML type.');}});// TODO: Add tag format check.
this.tag=tag;this.kind=options['kind']||null;this.resolve=options['resolve']||function(){return true;};this.construct=options['construct']||function(data){return data;};this.instanceOf=options['instanceOf']||null;this.predicate=options['predicate']||null;this.represent=options['represent']||null;this.defaultStyle=options['defaultStyle']||null;this.styleAliases=compileStyleAliases$2(options['styleAliases']||null);if(YAML_NODE_KINDS$2.indexOf(this.kind)===-1){throw new YAMLException$d('Unknown kind "'+this.kind+'" is specified for "'+tag+'" YAML type.');}}var type$2=Type$O;/*eslint-disable max-len*/var common$j=common$l;var YAMLException$c=exception$2;var Type$N=type$2;function compileList$2(schema,name,result){var exclude=[];schema.include.forEach(function(includedSchema){result=compileList$2(includedSchema,name,result);});schema[name].forEach(function(currentType){result.forEach(function(previousType,previousIndex){if(previousType.tag===currentType.tag&&previousType.kind===currentType.kind){exclude.push(previousIndex);}});result.push(currentType);});return result.filter(function(type,index){return exclude.indexOf(index)===-1;});}function compileMap$2(/* lists... */){var result={scalar:{},sequence:{},mapping:{},fallback:{}},index,length;function collectType(type){result[type.kind][type.tag]=result['fallback'][type.tag]=type;}for(index=0,length=arguments.length;index<length;index+=1){arguments[index].forEach(collectType);}return result;}function Schema$d(definition){this.include=definition.include||[];this.implicit=definition.implicit||[];this.explicit=definition.explicit||[];this.implicit.forEach(function(type){if(type.loadKind&&type.loadKind!=='scalar'){throw new YAMLException$c('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');}});this.compiledImplicit=compileList$2(this,'implicit',[]);this.compiledExplicit=compileList$2(this,'explicit',[]);this.compiledTypeMap=compileMap$2(this.compiledImplicit,this.compiledExplicit);}Schema$d.DEFAULT=null;Schema$d.create=function createSchema(){var schemas,types;switch(arguments.length){case 1:schemas=Schema$d.DEFAULT;types=arguments[0];break;case 2:schemas=arguments[0];types=arguments[1];break;default:throw new YAMLException$c('Wrong number of arguments for Schema.create function');}schemas=common$j.toArray(schemas);types=common$j.toArray(types);if(!schemas.every(function(schema){return schema instanceof Schema$d;})){throw new YAMLException$c('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');}if(!types.every(function(type){return type instanceof Type$N;})){throw new YAMLException$c('Specified list of YAML types (or a single Type object) contains a non-Type object.');}return new Schema$d({include:schemas,explicit:types});};var schema$2=Schema$d;var Type$M=type$2;var str$2=new Type$M('tag:yaml.org,2002:str',{kind:'scalar',construct:function(data){return data!==null?data:'';}});var Type$L=type$2;var seq$2=new Type$L('tag:yaml.org,2002:seq',{kind:'sequence',construct:function(data){return data!==null?data:[];}});var Type$K=type$2;var map$3=new Type$K('tag:yaml.org,2002:map',{kind:'mapping',construct:function(data){return data!==null?data:{};}});var Schema$c=schema$2;var failsafe$2=new Schema$c({explicit:[str$2,seq$2,map$3]});var Type$J=type$2;function resolveYamlNull$2(data){if(data===null)return true;var max=data.length;return max===1&&data==='~'||max===4&&(data==='null'||data==='Null'||data==='NULL');}function constructYamlNull$2(){return null;}function isNull$2(object){return object===null;}var _null$2=new Type$J('tag:yaml.org,2002:null',{kind:'scalar',resolve:resolveYamlNull$2,construct:constructYamlNull$2,predicate:isNull$2,represent:{canonical:function(){return'~';},lowercase:function(){return'null';},uppercase:function(){return'NULL';},camelcase:function(){return'Null';}},defaultStyle:'lowercase'});var Type$I=type$2;function resolveYamlBoolean$2(data){if(data===null)return false;var max=data.length;return max===4&&(data==='true'||data==='True'||data==='TRUE')||max===5&&(data==='false'||data==='False'||data==='FALSE');}function constructYamlBoolean$2(data){return data==='true'||data==='True'||data==='TRUE';}function isBoolean$2(object){return Object.prototype.toString.call(object)==='[object Boolean]';}var bool$2=new Type$I('tag:yaml.org,2002:bool',{kind:'scalar',resolve:resolveYamlBoolean$2,construct:constructYamlBoolean$2,predicate:isBoolean$2,represent:{lowercase:function(object){return object?'true':'false';},uppercase:function(object){return object?'TRUE':'FALSE';},camelcase:function(object){return object?'True':'False';}},defaultStyle:'lowercase'});var common$i=common$l;var Type$H=type$2;function isHexCode$2(c){return 0x30/* 0 */<=c&&c<=0x39/* 9 */||0x41/* A */<=c&&c<=0x46/* F */||0x61/* a */<=c&&c<=0x66/* f */;}function isOctCode$2(c){return 0x30/* 0 */<=c&&c<=0x37/* 7 */;}function isDecCode$2(c){return 0x30/* 0 */<=c&&c<=0x39/* 9 */;}function resolveYamlInteger$2(data){if(data===null)return false;var max=data.length,index=0,hasDigits=false,ch;if(!max)return false;ch=data[index];// sign
if(ch==='-'||ch==='+'){ch=data[++index];}if(ch==='0'){// 0
if(index+1===max)return true;ch=data[++index];// base 2, base 8, base 16
if(ch==='b'){// base 2
index++;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(ch!=='0'&&ch!=='1')return false;hasDigits=true;}return hasDigits&&ch!=='_';}if(ch==='x'){// base 16
index++;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(!isHexCode$2(data.charCodeAt(index)))return false;hasDigits=true;}return hasDigits&&ch!=='_';}// base 8
for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(!isOctCode$2(data.charCodeAt(index)))return false;hasDigits=true;}return hasDigits&&ch!=='_';}// base 10 (except 0) or base 60
// value should not start with `_`;
if(ch==='_')return false;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(ch===':')break;if(!isDecCode$2(data.charCodeAt(index))){return false;}hasDigits=true;}// Should have digits and should not end with `_`
if(!hasDigits||ch==='_')return false;// if !base60 - done;
if(ch!==':')return true;// base60 almost not used, no needs to optimize
return /^(:[0-5]?[0-9])+$/.test(data.slice(index));}function constructYamlInteger$2(data){var value=data,sign=1,ch,base,digits=[];if(value.indexOf('_')!==-1){value=value.replace(/_/g,'');}ch=value[0];if(ch==='-'||ch==='+'){if(ch==='-')sign=-1;value=value.slice(1);ch=value[0];}if(value==='0')return 0;if(ch==='0'){if(value[1]==='b')return sign*parseInt(value.slice(2),2);if(value[1]==='x')return sign*parseInt(value,16);return sign*parseInt(value,8);}if(value.indexOf(':')!==-1){value.split(':').forEach(function(v){digits.unshift(parseInt(v,10));});value=0;base=1;digits.forEach(function(d){value+=d*base;base*=60;});return sign*value;}return sign*parseInt(value,10);}function isInteger$3(object){return Object.prototype.toString.call(object)==='[object Number]'&&object%1===0&&!common$i.isNegativeZero(object);}var int$2=new Type$H('tag:yaml.org,2002:int',{kind:'scalar',resolve:resolveYamlInteger$2,construct:constructYamlInteger$2,predicate:isInteger$3,represent:{binary:function(obj){return obj>=0?'0b'+obj.toString(2):'-0b'+obj.toString(2).slice(1);},octal:function(obj){return obj>=0?'0'+obj.toString(8):'-0'+obj.toString(8).slice(1);},decimal:function(obj){return obj.toString(10);},/* eslint-disable max-len */hexadecimal:function(obj){return obj>=0?'0x'+obj.toString(16).toUpperCase():'-0x'+obj.toString(16).toUpperCase().slice(1);}},defaultStyle:'decimal',styleAliases:{binary:[2,'bin'],octal:[8,'oct'],decimal:[10,'dec'],hexadecimal:[16,'hex']}});var common$h=common$l;var Type$G=type$2;var YAML_FLOAT_PATTERN$2=new RegExp(// 2.5e4, 2.5 and integers
'^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?'+// .2e4, .2
// special case, seems not from spec
'|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?'+// 20:59
'|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*'+// .inf
'|[-+]?\\.(?:inf|Inf|INF)'+// .nan
'|\\.(?:nan|NaN|NAN))$');function resolveYamlFloat$2(data){if(data===null)return false;if(!YAML_FLOAT_PATTERN$2.test(data)||// Quick hack to not allow integers end with `_`
// Probably should update regexp & check speed
data[data.length-1]==='_'){return false;}return true;}function constructYamlFloat$2(data){var value,sign,base,digits;value=data.replace(/_/g,'').toLowerCase();sign=value[0]==='-'?-1:1;digits=[];if('+-'.indexOf(value[0])>=0){value=value.slice(1);}if(value==='.inf'){return sign===1?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;}else if(value==='.nan'){return NaN;}else if(value.indexOf(':')>=0){value.split(':').forEach(function(v){digits.unshift(parseFloat(v,10));});value=0.0;base=1;digits.forEach(function(d){value+=d*base;base*=60;});return sign*value;}return sign*parseFloat(value,10);}var SCIENTIFIC_WITHOUT_DOT$2=/^[-+]?[0-9]+e/;function representYamlFloat$2(object,style){var res;if(isNaN(object)){switch(style){case'lowercase':return'.nan';case'uppercase':return'.NAN';case'camelcase':return'.NaN';}}else if(Number.POSITIVE_INFINITY===object){switch(style){case'lowercase':return'.inf';case'uppercase':return'.INF';case'camelcase':return'.Inf';}}else if(Number.NEGATIVE_INFINITY===object){switch(style){case'lowercase':return'-.inf';case'uppercase':return'-.INF';case'camelcase':return'-.Inf';}}else if(common$h.isNegativeZero(object)){return'-0.0';}res=object.toString(10);// JS stringifier can build scientific format without dots: 5e-100,
// while YAML requres dot: 5.e-100. Fix it with simple hack
return SCIENTIFIC_WITHOUT_DOT$2.test(res)?res.replace('e','.e'):res;}function isFloat$3(object){return Object.prototype.toString.call(object)==='[object Number]'&&(object%1!==0||common$h.isNegativeZero(object));}var float$2=new Type$G('tag:yaml.org,2002:float',{kind:'scalar',resolve:resolveYamlFloat$2,construct:constructYamlFloat$2,predicate:isFloat$3,represent:representYamlFloat$2,defaultStyle:'lowercase'});var Schema$b=schema$2;var json$2=new Schema$b({include:[failsafe$2],implicit:[_null$2,bool$2,int$2,float$2]});var Schema$a=schema$2;var core$6=new Schema$a({include:[json$2]});var Type$F=type$2;var YAML_DATE_REGEXP$2=new RegExp('^([0-9][0-9][0-9][0-9])'+// [1] year
'-([0-9][0-9])'+// [2] month
'-([0-9][0-9])$');// [3] day
var YAML_TIMESTAMP_REGEXP$2=new RegExp('^([0-9][0-9][0-9][0-9])'+// [1] year
'-([0-9][0-9]?)'+// [2] month
'-([0-9][0-9]?)'+// [3] day
'(?:[Tt]|[ \\t]+)'+// ...
'([0-9][0-9]?)'+// [4] hour
':([0-9][0-9])'+// [5] minute
':([0-9][0-9])'+// [6] second
'(?:\\.([0-9]*))?'+// [7] fraction
'(?:[ \\t]*(Z|([-+])([0-9][0-9]?)'+// [8] tz [9] tz_sign [10] tz_hour
'(?::([0-9][0-9]))?))?$');// [11] tz_minute
function resolveYamlTimestamp$2(data){if(data===null)return false;if(YAML_DATE_REGEXP$2.exec(data)!==null)return true;if(YAML_TIMESTAMP_REGEXP$2.exec(data)!==null)return true;return false;}function constructYamlTimestamp$2(data){var match,year,month,day,hour,minute,second,fraction=0,delta=null,tz_hour,tz_minute,date;match=YAML_DATE_REGEXP$2.exec(data);if(match===null)match=YAML_TIMESTAMP_REGEXP$2.exec(data);if(match===null)throw new Error('Date resolve error');// match: [1] year [2] month [3] day
year=+match[1];month=+match[2]-1;// JS month starts with 0
day=+match[3];if(!match[4]){// no hour
return new Date(Date.UTC(year,month,day));}// match: [4] hour [5] minute [6] second [7] fraction
hour=+match[4];minute=+match[5];second=+match[6];if(match[7]){fraction=match[7].slice(0,3);while(fraction.length<3){// milli-seconds
fraction+='0';}fraction=+fraction;}// match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute
if(match[9]){tz_hour=+match[10];tz_minute=+(match[11]||0);delta=(tz_hour*60+tz_minute)*60000;// delta in mili-seconds
if(match[9]==='-')delta=-delta;}date=new Date(Date.UTC(year,month,day,hour,minute,second,fraction));if(delta)date.setTime(date.getTime()-delta);return date;}function representYamlTimestamp$2(object/*, style*/){return object.toISOString();}var timestamp$3=new Type$F('tag:yaml.org,2002:timestamp',{kind:'scalar',resolve:resolveYamlTimestamp$2,construct:constructYamlTimestamp$2,instanceOf:Date,represent:representYamlTimestamp$2});var Type$E=type$2;function resolveYamlMerge$2(data){return data==='<<'||data===null;}var merge$4=new Type$E('tag:yaml.org,2002:merge',{kind:'scalar',resolve:resolveYamlMerge$2});function commonjsRequire(path){throw new Error('Could not dynamically require "'+path+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');}/*eslint-disable no-bitwise*/var NodeBuffer$1;try{// A trick for browserified version, to not include `Buffer` shim
var _require$3=commonjsRequire;NodeBuffer$1=_require$3('buffer').Buffer;}catch(__){}var Type$D=type$2;// [ 64, 65, 66 ] -> [ padding, CR, LF ]
var BASE64_MAP$2='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';function resolveYamlBinary$2(data){if(data===null)return false;var code,idx,bitlen=0,max=data.length,map=BASE64_MAP$2;// Convert one by one.
for(idx=0;idx<max;idx++){code=map.indexOf(data.charAt(idx));// Skip CR/LF
if(code>64)continue;// Fail on illegal characters
if(code<0)return false;bitlen+=6;}// If there are any bits left, source was corrupted
return bitlen%8===0;}function constructYamlBinary$2(data){var idx,tailbits,input=data.replace(/[\r\n=]/g,''),// remove CR/LF & padding to simplify scan
max=input.length,map=BASE64_MAP$2,bits=0,result=[];// Collect by 6*4 bits (3 bytes)
for(idx=0;idx<max;idx++){if(idx%4===0&&idx){result.push(bits>>16&0xFF);result.push(bits>>8&0xFF);result.push(bits&0xFF);}bits=bits<<6|map.indexOf(input.charAt(idx));}// Dump tail
tailbits=max%4*6;if(tailbits===0){result.push(bits>>16&0xFF);result.push(bits>>8&0xFF);result.push(bits&0xFF);}else if(tailbits===18){result.push(bits>>10&0xFF);result.push(bits>>2&0xFF);}else if(tailbits===12){result.push(bits>>4&0xFF);}// Wrap into Buffer for NodeJS and leave Array for browser
if(NodeBuffer$1){// Support node 6.+ Buffer API when available
return NodeBuffer$1.from?NodeBuffer$1.from(result):new NodeBuffer$1(result);}return result;}function representYamlBinary$2(object/*, style*/){var result='',bits=0,idx,tail,max=object.length,map=BASE64_MAP$2;// Convert every three bytes to 4 ASCII characters.
for(idx=0;idx<max;idx++){if(idx%3===0&&idx){result+=map[bits>>18&0x3F];result+=map[bits>>12&0x3F];result+=map[bits>>6&0x3F];result+=map[bits&0x3F];}bits=(bits<<8)+object[idx];}// Dump tail
tail=max%3;if(tail===0){result+=map[bits>>18&0x3F];result+=map[bits>>12&0x3F];result+=map[bits>>6&0x3F];result+=map[bits&0x3F];}else if(tail===2){result+=map[bits>>10&0x3F];result+=map[bits>>4&0x3F];result+=map[bits<<2&0x3F];result+=map[64];}else if(tail===1){result+=map[bits>>2&0x3F];result+=map[bits<<4&0x3F];result+=map[64];result+=map[64];}return result;}function isBinary$2(object){return NodeBuffer$1&&NodeBuffer$1.isBuffer(object);}var binary$3=new Type$D('tag:yaml.org,2002:binary',{kind:'scalar',resolve:resolveYamlBinary$2,construct:constructYamlBinary$2,predicate:isBinary$2,represent:representYamlBinary$2});var Type$C=type$2;var _hasOwnProperty$b=Object.prototype.hasOwnProperty;var _toString$8=Object.prototype.toString;function resolveYamlOmap$2(data){if(data===null)return true;var objectKeys=[],index,length,pair,pairKey,pairHasKey,object=data;for(index=0,length=object.length;index<length;index+=1){pair=object[index];pairHasKey=false;if(_toString$8.call(pair)!=='[object Object]')return false;for(pairKey in pair){if(_hasOwnProperty$b.call(pair,pairKey)){if(!pairHasKey)pairHasKey=true;else return false;}}if(!pairHasKey)return false;if(objectKeys.indexOf(pairKey)===-1)objectKeys.push(pairKey);else return false;}return true;}function constructYamlOmap$2(data){return data!==null?data:[];}var omap$2=new Type$C('tag:yaml.org,2002:omap',{kind:'sequence',resolve:resolveYamlOmap$2,construct:constructYamlOmap$2});var Type$B=type$2;var _toString$7=Object.prototype.toString;function resolveYamlPairs$2(data){if(data===null)return true;var index,length,pair,keys,result,object=data;result=new Array(object.length);for(index=0,length=object.length;index<length;index+=1){pair=object[index];if(_toString$7.call(pair)!=='[object Object]')return false;keys=Object.keys(pair);if(keys.length!==1)return false;result[index]=[keys[0],pair[keys[0]]];}return true;}function constructYamlPairs$2(data){if(data===null)return[];var index,length,pair,keys,result,object=data;result=new Array(object.length);for(index=0,length=object.length;index<length;index+=1){pair=object[index];keys=Object.keys(pair);result[index]=[keys[0],pair[keys[0]]];}return result;}var pairs$3=new Type$B('tag:yaml.org,2002:pairs',{kind:'sequence',resolve:resolveYamlPairs$2,construct:constructYamlPairs$2});var Type$A=type$2;var _hasOwnProperty$a=Object.prototype.hasOwnProperty;function resolveYamlSet$2(data){if(data===null)return true;var key,object=data;for(key in object){if(_hasOwnProperty$a.call(object,key)){if(object[key]!==null)return false;}}return true;}function constructYamlSet$2(data){return data!==null?data:{};}var set$2=new Type$A('tag:yaml.org,2002:set',{kind:'mapping',resolve:resolveYamlSet$2,construct:constructYamlSet$2});var Schema$9=schema$2;var default_safe$1=new Schema$9({include:[core$6],implicit:[timestamp$3,merge$4],explicit:[binary$3,omap$2,pairs$3,set$2]});var Type$z=type$2;function resolveJavascriptUndefined$1(){return true;}function constructJavascriptUndefined$1(){/*eslint-disable no-undefined*/return undefined;}function representJavascriptUndefined$1(){return'';}function isUndefined$1(object){return typeof object==='undefined';}var _undefined$1=new Type$z('tag:yaml.org,2002:js/undefined',{kind:'scalar',resolve:resolveJavascriptUndefined$1,construct:constructJavascriptUndefined$1,predicate:isUndefined$1,represent:representJavascriptUndefined$1});var Type$y=type$2;function resolveJavascriptRegExp$1(data){if(data===null)return false;if(data.length===0)return false;var regexp=data,tail=/\/([gim]*)$/.exec(data),modifiers='';// if regexp starts with '/' it can have modifiers and must be properly closed
// `/foo/gim` - modifiers tail can be maximum 3 chars
if(regexp[0]==='/'){if(tail)modifiers=tail[1];if(modifiers.length>3)return false;// if expression starts with /, is should be properly terminated
if(regexp[regexp.length-modifiers.length-1]!=='/')return false;}return true;}function constructJavascriptRegExp$1(data){var regexp=data,tail=/\/([gim]*)$/.exec(data),modifiers='';// `/foo/gim` - tail can be maximum 4 chars
if(regexp[0]==='/'){if(tail)modifiers=tail[1];regexp=regexp.slice(1,regexp.length-modifiers.length-1);}return new RegExp(regexp,modifiers);}function representJavascriptRegExp$1(object/*, style*/){var result='/'+object.source+'/';if(object.global)result+='g';if(object.multiline)result+='m';if(object.ignoreCase)result+='i';return result;}function isRegExp$1(object){return Object.prototype.toString.call(object)==='[object RegExp]';}var regexp$1=new Type$y('tag:yaml.org,2002:js/regexp',{kind:'scalar',resolve:resolveJavascriptRegExp$1,construct:constructJavascriptRegExp$1,predicate:isRegExp$1,represent:representJavascriptRegExp$1});var esprima$4;// Browserified version does not have esprima
//
// 1. For node.js just require module as deps
// 2. For browser try to require mudule via external AMD system.
//    If not found - try to fallback to window.esprima. If not
//    found too - then fail to parse.
//
try{// workaround to exclude package from browserify list.
var _require$2=commonjsRequire;esprima$4=_require$2('esprima');}catch(_){/*global window */if(typeof window!=='undefined')esprima$4=window.esprima;}var Type$x=type$2;function resolveJavascriptFunction$1(data){if(data===null)return false;try{var source='('+data+')',ast=esprima$4.parse(source,{range:true});if(ast.type!=='Program'||ast.body.length!==1||ast.body[0].type!=='ExpressionStatement'||ast.body[0].expression.type!=='ArrowFunctionExpression'&&ast.body[0].expression.type!=='FunctionExpression'){return false;}return true;}catch(err){return false;}}function constructJavascriptFunction$1(data){/*jslint evil:true*/var source='('+data+')',ast=esprima$4.parse(source,{range:true}),params=[],body;if(ast.type!=='Program'||ast.body.length!==1||ast.body[0].type!=='ExpressionStatement'||ast.body[0].expression.type!=='ArrowFunctionExpression'&&ast.body[0].expression.type!=='FunctionExpression'){throw new Error('Failed to resolve function');}ast.body[0].expression.params.forEach(function(param){params.push(param.name);});body=ast.body[0].expression.body.range;// Esprima's ranges include the first '{' and the last '}' characters on
// function expressions. So cut them out.
if(ast.body[0].expression.body.type==='BlockStatement'){/*eslint-disable no-new-func*/return new Function(params,source.slice(body[0]+1,body[1]-1));}// ES6 arrow functions can omit the BlockStatement. In that case, just return
// the body.
/*eslint-disable no-new-func*/return new Function(params,'return '+source.slice(body[0],body[1]));}function representJavascriptFunction$1(object/*, style*/){return object.toString();}function isFunction$2(object){return Object.prototype.toString.call(object)==='[object Function]';}var _function$1=new Type$x('tag:yaml.org,2002:js/function',{kind:'scalar',resolve:resolveJavascriptFunction$1,construct:constructJavascriptFunction$1,predicate:isFunction$2,represent:representJavascriptFunction$1});var Schema$8=schema$2;var default_full$1=Schema$8.DEFAULT=new Schema$8({include:[default_safe$1],explicit:[_undefined$1,regexp$1,_function$1]});/*eslint-disable max-len,no-use-before-define*/var common$g=common$l;var YAMLException$b=exception$2;var Mark$2=mark$2;var DEFAULT_SAFE_SCHEMA$3=default_safe$1;var DEFAULT_FULL_SCHEMA$3=default_full$1;var _hasOwnProperty$9=Object.prototype.hasOwnProperty;var CONTEXT_FLOW_IN$2=1;var CONTEXT_FLOW_OUT$2=2;var CONTEXT_BLOCK_IN$2=3;var CONTEXT_BLOCK_OUT$2=4;var CHOMPING_CLIP$2=1;var CHOMPING_STRIP$2=2;var CHOMPING_KEEP$2=3;var PATTERN_NON_PRINTABLE$2=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;var PATTERN_NON_ASCII_LINE_BREAKS$2=/[\x85\u2028\u2029]/;var PATTERN_FLOW_INDICATORS$2=/[,\[\]\{\}]/;var PATTERN_TAG_HANDLE$2=/^(?:!|!!|![a-z\-]+!)$/i;var PATTERN_TAG_URI$2=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function _class$2(obj){return Object.prototype.toString.call(obj);}function is_EOL$2(c){return c===0x0A/* LF */||c===0x0D/* CR */;}function is_WHITE_SPACE$2(c){return c===0x09/* Tab */||c===0x20/* Space */;}function is_WS_OR_EOL$2(c){return c===0x09/* Tab */||c===0x20/* Space */||c===0x0A/* LF */||c===0x0D/* CR */;}function is_FLOW_INDICATOR$2(c){return c===0x2C/* , */||c===0x5B/* [ */||c===0x5D/* ] */||c===0x7B/* { */||c===0x7D/* } */;}function fromHexCode$2(c){var lc;if(0x30/* 0 */<=c&&c<=0x39/* 9 */){return c-0x30;}/*eslint-disable no-bitwise*/lc=c|0x20;if(0x61/* a */<=lc&&lc<=0x66/* f */){return lc-0x61+10;}return-1;}function escapedHexLen$2(c){if(c===0x78/* x */){return 2;}if(c===0x75/* u */){return 4;}if(c===0x55/* U */){return 8;}return 0;}function fromDecimalCode$2(c){if(0x30/* 0 */<=c&&c<=0x39/* 9 */){return c-0x30;}return-1;}function simpleEscapeSequence$2(c){/* eslint-disable indent */return c===0x30/* 0 */?'\x00':c===0x61/* a */?'\x07':c===0x62/* b */?'\x08':c===0x74/* t */?'\x09':c===0x09/* Tab */?'\x09':c===0x6E/* n */?'\x0A':c===0x76/* v */?'\x0B':c===0x66/* f */?'\x0C':c===0x72/* r */?'\x0D':c===0x65/* e */?'\x1B':c===0x20/* Space */?' ':c===0x22/* " */?'\x22':c===0x2F/* / */?'/':c===0x5C/* \ */?'\x5C':c===0x4E/* N */?'\x85':c===0x5F/* _ */?'\xA0':c===0x4C/* L */?'\u2028':c===0x50/* P */?'\u2029':'';}function charFromCodepoint$2(c){if(c<=0xFFFF){return String.fromCharCode(c);}// Encode UTF-16 surrogate pair
// https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
return String.fromCharCode((c-0x010000>>10)+0xD800,(c-0x010000&0x03FF)+0xDC00);}var simpleEscapeCheck$2=new Array(256);// integer, for fast access
var simpleEscapeMap$2=new Array(256);for(var i$2=0;i$2<256;i$2++){simpleEscapeCheck$2[i$2]=simpleEscapeSequence$2(i$2)?1:0;simpleEscapeMap$2[i$2]=simpleEscapeSequence$2(i$2);}function State$6(input,options){this.input=input;this.filename=options['filename']||null;this.schema=options['schema']||DEFAULT_FULL_SCHEMA$3;this.onWarning=options['onWarning']||null;this.legacy=options['legacy']||false;this.json=options['json']||false;this.listener=options['listener']||null;this.implicitTypes=this.schema.compiledImplicit;this.typeMap=this.schema.compiledTypeMap;this.length=input.length;this.position=0;this.line=0;this.lineStart=0;this.lineIndent=0;this.documents=[];/*
  this.version;
  this.checkLineBreaks;
  this.tagMap;
  this.anchorMap;
  this.tag;
  this.anchor;
  this.kind;
  this.result;*/}function generateError$2(state,message){return new YAMLException$b(message,new Mark$2(state.filename,state.input,state.position,state.line,state.position-state.lineStart));}function throwError$3(state,message){throw generateError$2(state,message);}function throwWarning$2(state,message){if(state.onWarning){state.onWarning.call(null,generateError$2(state,message));}}var directiveHandlers$2={YAML:function handleYamlDirective(state,name,args){var match,major,minor;if(state.version!==null){throwError$3(state,'duplication of %YAML directive');}if(args.length!==1){throwError$3(state,'YAML directive accepts exactly one argument');}match=/^([0-9]+)\.([0-9]+)$/.exec(args[0]);if(match===null){throwError$3(state,'ill-formed argument of the YAML directive');}major=parseInt(match[1],10);minor=parseInt(match[2],10);if(major!==1){throwError$3(state,'unacceptable YAML version of the document');}state.version=args[0];state.checkLineBreaks=minor<2;if(minor!==1&&minor!==2){throwWarning$2(state,'unsupported YAML version of the document');}},TAG:function handleTagDirective(state,name,args){var handle,prefix;if(args.length!==2){throwError$3(state,'TAG directive accepts exactly two arguments');}handle=args[0];prefix=args[1];if(!PATTERN_TAG_HANDLE$2.test(handle)){throwError$3(state,'ill-formed tag handle (first argument) of the TAG directive');}if(_hasOwnProperty$9.call(state.tagMap,handle)){throwError$3(state,'there is a previously declared suffix for "'+handle+'" tag handle');}if(!PATTERN_TAG_URI$2.test(prefix)){throwError$3(state,'ill-formed tag prefix (second argument) of the TAG directive');}state.tagMap[handle]=prefix;}};function captureSegment$2(state,start,end,checkJson){var _position,_length,_character,_result;if(start<end){_result=state.input.slice(start,end);if(checkJson){for(_position=0,_length=_result.length;_position<_length;_position+=1){_character=_result.charCodeAt(_position);if(!(_character===0x09||0x20<=_character&&_character<=0x10FFFF)){throwError$3(state,'expected valid JSON character');}}}else if(PATTERN_NON_PRINTABLE$2.test(_result)){throwError$3(state,'the stream contains non-printable characters');}state.result+=_result;}}function mergeMappings$2(state,destination,source,overridableKeys){var sourceKeys,key,index,quantity;if(!common$g.isObject(source)){throwError$3(state,'cannot merge mappings; the provided source object is unacceptable');}sourceKeys=Object.keys(source);for(index=0,quantity=sourceKeys.length;index<quantity;index+=1){key=sourceKeys[index];if(!_hasOwnProperty$9.call(destination,key)){destination[key]=source[key];overridableKeys[key]=true;}}}function storeMappingPair$2(state,_result,overridableKeys,keyTag,keyNode,valueNode,startLine,startPos){var index,quantity;// The output is a plain object here, so keys can only be strings.
// We need to convert keyNode to a string, but doing so can hang the process
// (deeply nested arrays that explode exponentially using aliases).
if(Array.isArray(keyNode)){keyNode=Array.prototype.slice.call(keyNode);for(index=0,quantity=keyNode.length;index<quantity;index+=1){if(Array.isArray(keyNode[index])){throwError$3(state,'nested arrays are not supported inside keys');}if(typeof keyNode==='object'&&_class$2(keyNode[index])==='[object Object]'){keyNode[index]='[object Object]';}}}// Avoid code execution in load() via toString property
// (still use its own toString for arrays, timestamps,
// and whatever user schema extensions happen to have @@toStringTag)
if(typeof keyNode==='object'&&_class$2(keyNode)==='[object Object]'){keyNode='[object Object]';}keyNode=String(keyNode);if(_result===null){_result={};}if(keyTag==='tag:yaml.org,2002:merge'){if(Array.isArray(valueNode)){for(index=0,quantity=valueNode.length;index<quantity;index+=1){mergeMappings$2(state,_result,valueNode[index],overridableKeys);}}else{mergeMappings$2(state,_result,valueNode,overridableKeys);}}else{if(!state.json&&!_hasOwnProperty$9.call(overridableKeys,keyNode)&&_hasOwnProperty$9.call(_result,keyNode)){state.line=startLine||state.line;state.position=startPos||state.position;throwError$3(state,'duplicated mapping key');}_result[keyNode]=valueNode;delete overridableKeys[keyNode];}return _result;}function readLineBreak$2(state){var ch;ch=state.input.charCodeAt(state.position);if(ch===0x0A/* LF */){state.position++;}else if(ch===0x0D/* CR */){state.position++;if(state.input.charCodeAt(state.position)===0x0A/* LF */){state.position++;}}else{throwError$3(state,'a line break is expected');}state.line+=1;state.lineStart=state.position;}function skipSeparationSpace$2(state,allowComments,checkIndent){var lineBreaks=0,ch=state.input.charCodeAt(state.position);while(ch!==0){while(is_WHITE_SPACE$2(ch)){ch=state.input.charCodeAt(++state.position);}if(allowComments&&ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0x0A/* LF */&&ch!==0x0D/* CR */&&ch!==0);}if(is_EOL$2(ch)){readLineBreak$2(state);ch=state.input.charCodeAt(state.position);lineBreaks++;state.lineIndent=0;while(ch===0x20/* Space */){state.lineIndent++;ch=state.input.charCodeAt(++state.position);}}else{break;}}if(checkIndent!==-1&&lineBreaks!==0&&state.lineIndent<checkIndent){throwWarning$2(state,'deficient indentation');}return lineBreaks;}function testDocumentSeparator$2(state){var _position=state.position,ch;ch=state.input.charCodeAt(_position);// Condition state.position === state.lineStart is tested
// in parent on each call, for efficiency. No needs to test here again.
if((ch===0x2D/* - */||ch===0x2E/* . */)&&ch===state.input.charCodeAt(_position+1)&&ch===state.input.charCodeAt(_position+2)){_position+=3;ch=state.input.charCodeAt(_position);if(ch===0||is_WS_OR_EOL$2(ch)){return true;}}return false;}function writeFoldedLines$2(state,count){if(count===1){state.result+=' ';}else if(count>1){state.result+=common$g.repeat('\n',count-1);}}function readPlainScalar$2(state,nodeIndent,withinFlowCollection){var preceding,following,captureStart,captureEnd,hasPendingContent,_line,_lineStart,_lineIndent,_kind=state.kind,_result=state.result,ch;ch=state.input.charCodeAt(state.position);if(is_WS_OR_EOL$2(ch)||is_FLOW_INDICATOR$2(ch)||ch===0x23/* # */||ch===0x26/* & */||ch===0x2A/* * */||ch===0x21/* ! */||ch===0x7C/* | */||ch===0x3E/* > */||ch===0x27/* ' */||ch===0x22/* " */||ch===0x25/* % */||ch===0x40/* @ */||ch===0x60/* ` */){return false;}if(ch===0x3F/* ? */||ch===0x2D/* - */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL$2(following)||withinFlowCollection&&is_FLOW_INDICATOR$2(following)){return false;}}state.kind='scalar';state.result='';captureStart=captureEnd=state.position;hasPendingContent=false;while(ch!==0){if(ch===0x3A/* : */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL$2(following)||withinFlowCollection&&is_FLOW_INDICATOR$2(following)){break;}}else if(ch===0x23/* # */){preceding=state.input.charCodeAt(state.position-1);if(is_WS_OR_EOL$2(preceding)){break;}}else if(state.position===state.lineStart&&testDocumentSeparator$2(state)||withinFlowCollection&&is_FLOW_INDICATOR$2(ch)){break;}else if(is_EOL$2(ch)){_line=state.line;_lineStart=state.lineStart;_lineIndent=state.lineIndent;skipSeparationSpace$2(state,false,-1);if(state.lineIndent>=nodeIndent){hasPendingContent=true;ch=state.input.charCodeAt(state.position);continue;}else{state.position=captureEnd;state.line=_line;state.lineStart=_lineStart;state.lineIndent=_lineIndent;break;}}if(hasPendingContent){captureSegment$2(state,captureStart,captureEnd,false);writeFoldedLines$2(state,state.line-_line);captureStart=captureEnd=state.position;hasPendingContent=false;}if(!is_WHITE_SPACE$2(ch)){captureEnd=state.position+1;}ch=state.input.charCodeAt(++state.position);}captureSegment$2(state,captureStart,captureEnd,false);if(state.result){return true;}state.kind=_kind;state.result=_result;return false;}function readSingleQuotedScalar$2(state,nodeIndent){var ch,captureStart,captureEnd;ch=state.input.charCodeAt(state.position);if(ch!==0x27/* ' */){return false;}state.kind='scalar';state.result='';state.position++;captureStart=captureEnd=state.position;while((ch=state.input.charCodeAt(state.position))!==0){if(ch===0x27/* ' */){captureSegment$2(state,captureStart,state.position,true);ch=state.input.charCodeAt(++state.position);if(ch===0x27/* ' */){captureStart=state.position;state.position++;captureEnd=state.position;}else{return true;}}else if(is_EOL$2(ch)){captureSegment$2(state,captureStart,captureEnd,true);writeFoldedLines$2(state,skipSeparationSpace$2(state,false,nodeIndent));captureStart=captureEnd=state.position;}else if(state.position===state.lineStart&&testDocumentSeparator$2(state)){throwError$3(state,'unexpected end of the document within a single quoted scalar');}else{state.position++;captureEnd=state.position;}}throwError$3(state,'unexpected end of the stream within a single quoted scalar');}function readDoubleQuotedScalar$2(state,nodeIndent){var captureStart,captureEnd,hexLength,hexResult,tmp,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x22/* " */){return false;}state.kind='scalar';state.result='';state.position++;captureStart=captureEnd=state.position;while((ch=state.input.charCodeAt(state.position))!==0){if(ch===0x22/* " */){captureSegment$2(state,captureStart,state.position,true);state.position++;return true;}else if(ch===0x5C/* \ */){captureSegment$2(state,captureStart,state.position,true);ch=state.input.charCodeAt(++state.position);if(is_EOL$2(ch)){skipSeparationSpace$2(state,false,nodeIndent);// TODO: rework to inline fn with no type cast?
}else if(ch<256&&simpleEscapeCheck$2[ch]){state.result+=simpleEscapeMap$2[ch];state.position++;}else if((tmp=escapedHexLen$2(ch))>0){hexLength=tmp;hexResult=0;for(;hexLength>0;hexLength--){ch=state.input.charCodeAt(++state.position);if((tmp=fromHexCode$2(ch))>=0){hexResult=(hexResult<<4)+tmp;}else{throwError$3(state,'expected hexadecimal character');}}state.result+=charFromCodepoint$2(hexResult);state.position++;}else{throwError$3(state,'unknown escape sequence');}captureStart=captureEnd=state.position;}else if(is_EOL$2(ch)){captureSegment$2(state,captureStart,captureEnd,true);writeFoldedLines$2(state,skipSeparationSpace$2(state,false,nodeIndent));captureStart=captureEnd=state.position;}else if(state.position===state.lineStart&&testDocumentSeparator$2(state)){throwError$3(state,'unexpected end of the document within a double quoted scalar');}else{state.position++;captureEnd=state.position;}}throwError$3(state,'unexpected end of the stream within a double quoted scalar');}function readFlowCollection$2(state,nodeIndent){var readNext=true,_line,_tag=state.tag,_result,_anchor=state.anchor,following,terminator,isPair,isExplicitPair,isMapping,overridableKeys={},keyNode,keyTag,valueNode,ch;ch=state.input.charCodeAt(state.position);if(ch===0x5B/* [ */){terminator=0x5D;/* ] */isMapping=false;_result=[];}else if(ch===0x7B/* { */){terminator=0x7D;/* } */isMapping=true;_result={};}else{return false;}if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(++state.position);while(ch!==0){skipSeparationSpace$2(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if(ch===terminator){state.position++;state.tag=_tag;state.anchor=_anchor;state.kind=isMapping?'mapping':'sequence';state.result=_result;return true;}else if(!readNext){throwError$3(state,'missed comma between flow collection entries');}keyTag=keyNode=valueNode=null;isPair=isExplicitPair=false;if(ch===0x3F/* ? */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL$2(following)){isPair=isExplicitPair=true;state.position++;skipSeparationSpace$2(state,true,nodeIndent);}}_line=state.line;composeNode$2(state,nodeIndent,CONTEXT_FLOW_IN$2,false,true);keyTag=state.tag;keyNode=state.result;skipSeparationSpace$2(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if((isExplicitPair||state.line===_line)&&ch===0x3A/* : */){isPair=true;ch=state.input.charCodeAt(++state.position);skipSeparationSpace$2(state,true,nodeIndent);composeNode$2(state,nodeIndent,CONTEXT_FLOW_IN$2,false,true);valueNode=state.result;}if(isMapping){storeMappingPair$2(state,_result,overridableKeys,keyTag,keyNode,valueNode);}else if(isPair){_result.push(storeMappingPair$2(state,null,overridableKeys,keyTag,keyNode,valueNode));}else{_result.push(keyNode);}skipSeparationSpace$2(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if(ch===0x2C/* , */){readNext=true;ch=state.input.charCodeAt(++state.position);}else{readNext=false;}}throwError$3(state,'unexpected end of the stream within a flow collection');}function readBlockScalar$2(state,nodeIndent){var captureStart,folding,chomping=CHOMPING_CLIP$2,didReadContent=false,detectedIndent=false,textIndent=nodeIndent,emptyLines=0,atMoreIndented=false,tmp,ch;ch=state.input.charCodeAt(state.position);if(ch===0x7C/* | */){folding=false;}else if(ch===0x3E/* > */){folding=true;}else{return false;}state.kind='scalar';state.result='';while(ch!==0){ch=state.input.charCodeAt(++state.position);if(ch===0x2B/* + */||ch===0x2D/* - */){if(CHOMPING_CLIP$2===chomping){chomping=ch===0x2B/* + */?CHOMPING_KEEP$2:CHOMPING_STRIP$2;}else{throwError$3(state,'repeat of a chomping mode identifier');}}else if((tmp=fromDecimalCode$2(ch))>=0){if(tmp===0){throwError$3(state,'bad explicit indentation width of a block scalar; it cannot be less than one');}else if(!detectedIndent){textIndent=nodeIndent+tmp-1;detectedIndent=true;}else{throwError$3(state,'repeat of an indentation width identifier');}}else{break;}}if(is_WHITE_SPACE$2(ch)){do{ch=state.input.charCodeAt(++state.position);}while(is_WHITE_SPACE$2(ch));if(ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(!is_EOL$2(ch)&&ch!==0);}}while(ch!==0){readLineBreak$2(state);state.lineIndent=0;ch=state.input.charCodeAt(state.position);while((!detectedIndent||state.lineIndent<textIndent)&&ch===0x20/* Space */){state.lineIndent++;ch=state.input.charCodeAt(++state.position);}if(!detectedIndent&&state.lineIndent>textIndent){textIndent=state.lineIndent;}if(is_EOL$2(ch)){emptyLines++;continue;}// End of the scalar.
if(state.lineIndent<textIndent){// Perform the chomping.
if(chomping===CHOMPING_KEEP$2){state.result+=common$g.repeat('\n',didReadContent?1+emptyLines:emptyLines);}else if(chomping===CHOMPING_CLIP$2){if(didReadContent){// i.e. only if the scalar is not empty.
state.result+='\n';}}// Break this `while` cycle and go to the funciton's epilogue.
break;}// Folded style: use fancy rules to handle line breaks.
if(folding){// Lines starting with white space characters (more-indented lines) are not folded.
if(is_WHITE_SPACE$2(ch)){atMoreIndented=true;// except for the first content line (cf. Example 8.1)
state.result+=common$g.repeat('\n',didReadContent?1+emptyLines:emptyLines);// End of more-indented block.
}else if(atMoreIndented){atMoreIndented=false;state.result+=common$g.repeat('\n',emptyLines+1);// Just one line break - perceive as the same line.
}else if(emptyLines===0){if(didReadContent){// i.e. only if we have already read some scalar content.
state.result+=' ';}// Several line breaks - perceive as different lines.
}else{state.result+=common$g.repeat('\n',emptyLines);}// Literal style: just add exact number of line breaks between content lines.
}else{// Keep all line breaks except the header line break.
state.result+=common$g.repeat('\n',didReadContent?1+emptyLines:emptyLines);}didReadContent=true;detectedIndent=true;emptyLines=0;captureStart=state.position;while(!is_EOL$2(ch)&&ch!==0){ch=state.input.charCodeAt(++state.position);}captureSegment$2(state,captureStart,state.position,false);}return true;}function readBlockSequence$2(state,nodeIndent){var _line,_tag=state.tag,_anchor=state.anchor,_result=[],following,detected=false,ch;if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(state.position);while(ch!==0){if(ch!==0x2D/* - */){break;}following=state.input.charCodeAt(state.position+1);if(!is_WS_OR_EOL$2(following)){break;}detected=true;state.position++;if(skipSeparationSpace$2(state,true,-1)){if(state.lineIndent<=nodeIndent){_result.push(null);ch=state.input.charCodeAt(state.position);continue;}}_line=state.line;composeNode$2(state,nodeIndent,CONTEXT_BLOCK_IN$2,false,true);_result.push(state.result);skipSeparationSpace$2(state,true,-1);ch=state.input.charCodeAt(state.position);if((state.line===_line||state.lineIndent>nodeIndent)&&ch!==0){throwError$3(state,'bad indentation of a sequence entry');}else if(state.lineIndent<nodeIndent){break;}}if(detected){state.tag=_tag;state.anchor=_anchor;state.kind='sequence';state.result=_result;return true;}return false;}function readBlockMapping$2(state,nodeIndent,flowIndent){var following,allowCompact,_line,_pos,_tag=state.tag,_anchor=state.anchor,_result={},overridableKeys={},keyTag=null,keyNode=null,valueNode=null,atExplicitKey=false,detected=false,ch;if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(state.position);while(ch!==0){following=state.input.charCodeAt(state.position+1);_line=state.line;// Save the current line.
_pos=state.position;//
// Explicit notation case. There are two separate blocks:
// first for the key (denoted by "?") and second for the value (denoted by ":")
//
if((ch===0x3F/* ? */||ch===0x3A/* : */)&&is_WS_OR_EOL$2(following)){if(ch===0x3F/* ? */){if(atExplicitKey){storeMappingPair$2(state,_result,overridableKeys,keyTag,keyNode,null);keyTag=keyNode=valueNode=null;}detected=true;atExplicitKey=true;allowCompact=true;}else if(atExplicitKey){// i.e. 0x3A/* : */ === character after the explicit key.
atExplicitKey=false;allowCompact=true;}else{throwError$3(state,'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');}state.position+=1;ch=following;//
// Implicit notation case. Flow-style node as the key first, then ":", and the value.
//
}else if(composeNode$2(state,flowIndent,CONTEXT_FLOW_OUT$2,false,true)){if(state.line===_line){ch=state.input.charCodeAt(state.position);while(is_WHITE_SPACE$2(ch)){ch=state.input.charCodeAt(++state.position);}if(ch===0x3A/* : */){ch=state.input.charCodeAt(++state.position);if(!is_WS_OR_EOL$2(ch)){throwError$3(state,'a whitespace character is expected after the key-value separator within a block mapping');}if(atExplicitKey){storeMappingPair$2(state,_result,overridableKeys,keyTag,keyNode,null);keyTag=keyNode=valueNode=null;}detected=true;atExplicitKey=false;allowCompact=false;keyTag=state.tag;keyNode=state.result;}else if(detected){throwError$3(state,'can not read an implicit mapping pair; a colon is missed');}else{state.tag=_tag;state.anchor=_anchor;return true;// Keep the result of `composeNode`.
}}else if(detected){throwError$3(state,'can not read a block mapping entry; a multiline key may not be an implicit key');}else{state.tag=_tag;state.anchor=_anchor;return true;// Keep the result of `composeNode`.
}}else{break;// Reading is done. Go to the epilogue.
}//
// Common reading code for both explicit and implicit notations.
//
if(state.line===_line||state.lineIndent>nodeIndent){if(composeNode$2(state,nodeIndent,CONTEXT_BLOCK_OUT$2,true,allowCompact)){if(atExplicitKey){keyNode=state.result;}else{valueNode=state.result;}}if(!atExplicitKey){storeMappingPair$2(state,_result,overridableKeys,keyTag,keyNode,valueNode,_line,_pos);keyTag=keyNode=valueNode=null;}skipSeparationSpace$2(state,true,-1);ch=state.input.charCodeAt(state.position);}if(state.lineIndent>nodeIndent&&ch!==0){throwError$3(state,'bad indentation of a mapping entry');}else if(state.lineIndent<nodeIndent){break;}}//
// Epilogue.
//
// Special case: last mapping's node contains only the key in explicit notation.
if(atExplicitKey){storeMappingPair$2(state,_result,overridableKeys,keyTag,keyNode,null);}// Expose the resulting mapping.
if(detected){state.tag=_tag;state.anchor=_anchor;state.kind='mapping';state.result=_result;}return detected;}function readTagProperty$2(state){var _position,isVerbatim=false,isNamed=false,tagHandle,tagName,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x21/* ! */)return false;if(state.tag!==null){throwError$3(state,'duplication of a tag property');}ch=state.input.charCodeAt(++state.position);if(ch===0x3C/* < */){isVerbatim=true;ch=state.input.charCodeAt(++state.position);}else if(ch===0x21/* ! */){isNamed=true;tagHandle='!!';ch=state.input.charCodeAt(++state.position);}else{tagHandle='!';}_position=state.position;if(isVerbatim){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0&&ch!==0x3E/* > */);if(state.position<state.length){tagName=state.input.slice(_position,state.position);ch=state.input.charCodeAt(++state.position);}else{throwError$3(state,'unexpected end of the stream within a verbatim tag');}}else{while(ch!==0&&!is_WS_OR_EOL$2(ch)){if(ch===0x21/* ! */){if(!isNamed){tagHandle=state.input.slice(_position-1,state.position+1);if(!PATTERN_TAG_HANDLE$2.test(tagHandle)){throwError$3(state,'named tag handle cannot contain such characters');}isNamed=true;_position=state.position+1;}else{throwError$3(state,'tag suffix cannot contain exclamation marks');}}ch=state.input.charCodeAt(++state.position);}tagName=state.input.slice(_position,state.position);if(PATTERN_FLOW_INDICATORS$2.test(tagName)){throwError$3(state,'tag suffix cannot contain flow indicator characters');}}if(tagName&&!PATTERN_TAG_URI$2.test(tagName)){throwError$3(state,'tag name cannot contain such characters: '+tagName);}if(isVerbatim){state.tag=tagName;}else if(_hasOwnProperty$9.call(state.tagMap,tagHandle)){state.tag=state.tagMap[tagHandle]+tagName;}else if(tagHandle==='!'){state.tag='!'+tagName;}else if(tagHandle==='!!'){state.tag='tag:yaml.org,2002:'+tagName;}else{throwError$3(state,'undeclared tag handle "'+tagHandle+'"');}return true;}function readAnchorProperty$2(state){var _position,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x26/* & */)return false;if(state.anchor!==null){throwError$3(state,'duplication of an anchor property');}ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL$2(ch)&&!is_FLOW_INDICATOR$2(ch)){ch=state.input.charCodeAt(++state.position);}if(state.position===_position){throwError$3(state,'name of an anchor node must contain at least one character');}state.anchor=state.input.slice(_position,state.position);return true;}function readAlias$2(state){var _position,alias,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x2A/* * */)return false;ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL$2(ch)&&!is_FLOW_INDICATOR$2(ch)){ch=state.input.charCodeAt(++state.position);}if(state.position===_position){throwError$3(state,'name of an alias node must contain at least one character');}alias=state.input.slice(_position,state.position);if(!state.anchorMap.hasOwnProperty(alias)){throwError$3(state,'unidentified alias "'+alias+'"');}state.result=state.anchorMap[alias];skipSeparationSpace$2(state,true,-1);return true;}function composeNode$2(state,parentIndent,nodeContext,allowToSeek,allowCompact){var allowBlockStyles,allowBlockScalars,allowBlockCollections,indentStatus=1,// 1: this>parent, 0: this=parent, -1: this<parent
atNewLine=false,hasContent=false,typeIndex,typeQuantity,type,flowIndent,blockIndent;if(state.listener!==null){state.listener('open',state);}state.tag=null;state.anchor=null;state.kind=null;state.result=null;allowBlockStyles=allowBlockScalars=allowBlockCollections=CONTEXT_BLOCK_OUT$2===nodeContext||CONTEXT_BLOCK_IN$2===nodeContext;if(allowToSeek){if(skipSeparationSpace$2(state,true,-1)){atNewLine=true;if(state.lineIndent>parentIndent){indentStatus=1;}else if(state.lineIndent===parentIndent){indentStatus=0;}else if(state.lineIndent<parentIndent){indentStatus=-1;}}}if(indentStatus===1){while(readTagProperty$2(state)||readAnchorProperty$2(state)){if(skipSeparationSpace$2(state,true,-1)){atNewLine=true;allowBlockCollections=allowBlockStyles;if(state.lineIndent>parentIndent){indentStatus=1;}else if(state.lineIndent===parentIndent){indentStatus=0;}else if(state.lineIndent<parentIndent){indentStatus=-1;}}else{allowBlockCollections=false;}}}if(allowBlockCollections){allowBlockCollections=atNewLine||allowCompact;}if(indentStatus===1||CONTEXT_BLOCK_OUT$2===nodeContext){if(CONTEXT_FLOW_IN$2===nodeContext||CONTEXT_FLOW_OUT$2===nodeContext){flowIndent=parentIndent;}else{flowIndent=parentIndent+1;}blockIndent=state.position-state.lineStart;if(indentStatus===1){if(allowBlockCollections&&(readBlockSequence$2(state,blockIndent)||readBlockMapping$2(state,blockIndent,flowIndent))||readFlowCollection$2(state,flowIndent)){hasContent=true;}else{if(allowBlockScalars&&readBlockScalar$2(state,flowIndent)||readSingleQuotedScalar$2(state,flowIndent)||readDoubleQuotedScalar$2(state,flowIndent)){hasContent=true;}else if(readAlias$2(state)){hasContent=true;if(state.tag!==null||state.anchor!==null){throwError$3(state,'alias node should not have any properties');}}else if(readPlainScalar$2(state,flowIndent,CONTEXT_FLOW_IN$2===nodeContext)){hasContent=true;if(state.tag===null){state.tag='?';}}if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}}}else if(indentStatus===0){// Special case: block sequences are allowed to have same indentation level as the parent.
// http://www.yaml.org/spec/1.2/spec.html#id2799784
hasContent=allowBlockCollections&&readBlockSequence$2(state,blockIndent);}}if(state.tag!==null&&state.tag!=='!'){if(state.tag==='?'){for(typeIndex=0,typeQuantity=state.implicitTypes.length;typeIndex<typeQuantity;typeIndex+=1){type=state.implicitTypes[typeIndex];// Implicit resolving is not allowed for non-scalar types, and '?'
// non-specific tag is only assigned to plain scalars. So, it isn't
// needed to check for 'kind' conformity.
if(type.resolve(state.result)){// `state.result` updated in resolver if matched
state.result=type.construct(state.result);state.tag=type.tag;if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}break;}}}else if(_hasOwnProperty$9.call(state.typeMap[state.kind||'fallback'],state.tag)){type=state.typeMap[state.kind||'fallback'][state.tag];if(state.result!==null&&type.kind!==state.kind){throwError$3(state,'unacceptable node kind for !<'+state.tag+'> tag; it should be "'+type.kind+'", not "'+state.kind+'"');}if(!type.resolve(state.result)){// `state.result` updated in resolver if matched
throwError$3(state,'cannot resolve a node with !<'+state.tag+'> explicit tag');}else{state.result=type.construct(state.result);if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}}}else{throwError$3(state,'unknown tag !<'+state.tag+'>');}}if(state.listener!==null){state.listener('close',state);}return state.tag!==null||state.anchor!==null||hasContent;}function readDocument$2(state){var documentStart=state.position,_position,directiveName,directiveArgs,hasDirectives=false,ch;state.version=null;state.checkLineBreaks=state.legacy;state.tagMap={};state.anchorMap={};while((ch=state.input.charCodeAt(state.position))!==0){skipSeparationSpace$2(state,true,-1);ch=state.input.charCodeAt(state.position);if(state.lineIndent>0||ch!==0x25/* % */){break;}hasDirectives=true;ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL$2(ch)){ch=state.input.charCodeAt(++state.position);}directiveName=state.input.slice(_position,state.position);directiveArgs=[];if(directiveName.length<1){throwError$3(state,'directive name must not be less than one character in length');}while(ch!==0){while(is_WHITE_SPACE$2(ch)){ch=state.input.charCodeAt(++state.position);}if(ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0&&!is_EOL$2(ch));break;}if(is_EOL$2(ch))break;_position=state.position;while(ch!==0&&!is_WS_OR_EOL$2(ch)){ch=state.input.charCodeAt(++state.position);}directiveArgs.push(state.input.slice(_position,state.position));}if(ch!==0)readLineBreak$2(state);if(_hasOwnProperty$9.call(directiveHandlers$2,directiveName)){directiveHandlers$2[directiveName](state,directiveName,directiveArgs);}else{throwWarning$2(state,'unknown document directive "'+directiveName+'"');}}skipSeparationSpace$2(state,true,-1);if(state.lineIndent===0&&state.input.charCodeAt(state.position)===0x2D/* - */&&state.input.charCodeAt(state.position+1)===0x2D/* - */&&state.input.charCodeAt(state.position+2)===0x2D/* - */){state.position+=3;skipSeparationSpace$2(state,true,-1);}else if(hasDirectives){throwError$3(state,'directives end mark is expected');}composeNode$2(state,state.lineIndent-1,CONTEXT_BLOCK_OUT$2,false,true);skipSeparationSpace$2(state,true,-1);if(state.checkLineBreaks&&PATTERN_NON_ASCII_LINE_BREAKS$2.test(state.input.slice(documentStart,state.position))){throwWarning$2(state,'non-ASCII line breaks are interpreted as content');}state.documents.push(state.result);if(state.position===state.lineStart&&testDocumentSeparator$2(state)){if(state.input.charCodeAt(state.position)===0x2E/* . */){state.position+=3;skipSeparationSpace$2(state,true,-1);}return;}if(state.position<state.length-1){throwError$3(state,'end of the stream or a document separator is expected');}else{return;}}function loadDocuments$2(input,options){input=String(input);options=options||{};if(input.length!==0){// Add tailing `\n` if not exists
if(input.charCodeAt(input.length-1)!==0x0A/* LF */&&input.charCodeAt(input.length-1)!==0x0D/* CR */){input+='\n';}// Strip BOM
if(input.charCodeAt(0)===0xFEFF){input=input.slice(1);}}var state=new State$6(input,options);// Use 0 as string terminator. That significantly simplifies bounds check.
state.input+='\0';while(state.input.charCodeAt(state.position)===0x20/* Space */){state.lineIndent+=1;state.position+=1;}while(state.position<state.length-1){readDocument$2(state);}return state.documents;}function loadAll$2(input,iterator,options){var documents=loadDocuments$2(input,options),index,length;if(typeof iterator!=='function'){return documents;}for(index=0,length=documents.length;index<length;index+=1){iterator(documents[index]);}}function load$2(input,options){var documents=loadDocuments$2(input,options);if(documents.length===0){/*eslint-disable no-undefined*/return undefined;}else if(documents.length===1){return documents[0];}throw new YAMLException$b('expected a single document in the stream, but found more');}function safeLoadAll$1(input,output,options){if(typeof output==='function'){loadAll$2(input,output,common$g.extend({schema:DEFAULT_SAFE_SCHEMA$3},options));}else{return loadAll$2(input,common$g.extend({schema:DEFAULT_SAFE_SCHEMA$3},options));}}function safeLoad$1(input,options){return load$2(input,common$g.extend({schema:DEFAULT_SAFE_SCHEMA$3},options));}loader$5.loadAll=loadAll$2;loader$5.load=load$2;loader$5.safeLoadAll=safeLoadAll$1;loader$5.safeLoad=safeLoad$1;var dumper$5={};/*eslint-disable no-use-before-define*/var common$f=common$l;var YAMLException$a=exception$2;var DEFAULT_FULL_SCHEMA$2=default_full$1;var DEFAULT_SAFE_SCHEMA$2=default_safe$1;var _toString$6=Object.prototype.toString;var _hasOwnProperty$8=Object.prototype.hasOwnProperty;var CHAR_TAB$2=0x09;/* Tab */var CHAR_LINE_FEED$2=0x0A;/* LF */var CHAR_SPACE$2=0x20;/* Space */var CHAR_EXCLAMATION$2=0x21;/* ! */var CHAR_DOUBLE_QUOTE$3=0x22;/* " */var CHAR_SHARP$2=0x23;/* # */var CHAR_PERCENT$2=0x25;/* % */var CHAR_AMPERSAND$2=0x26;/* & */var CHAR_SINGLE_QUOTE$3=0x27;/* ' */var CHAR_ASTERISK$3=0x2A;/* * */var CHAR_COMMA$5=0x2C;/* , */var CHAR_MINUS$2=0x2D;/* - */var CHAR_COLON$3=0x3A;/* : */var CHAR_GREATER_THAN$2=0x3E;/* > */var CHAR_QUESTION$2=0x3F;/* ? */var CHAR_COMMERCIAL_AT$2=0x40;/* @ */var CHAR_LEFT_SQUARE_BRACKET$4=0x5B;/* [ */var CHAR_RIGHT_SQUARE_BRACKET$4=0x5D;/* ] */var CHAR_GRAVE_ACCENT$2=0x60;/* ` */var CHAR_LEFT_CURLY_BRACKET$2=0x7B;/* { */var CHAR_VERTICAL_LINE$2=0x7C;/* | */var CHAR_RIGHT_CURLY_BRACKET$2=0x7D;/* } */var ESCAPE_SEQUENCES$2={};ESCAPE_SEQUENCES$2[0x00]='\\0';ESCAPE_SEQUENCES$2[0x07]='\\a';ESCAPE_SEQUENCES$2[0x08]='\\b';ESCAPE_SEQUENCES$2[0x09]='\\t';ESCAPE_SEQUENCES$2[0x0A]='\\n';ESCAPE_SEQUENCES$2[0x0B]='\\v';ESCAPE_SEQUENCES$2[0x0C]='\\f';ESCAPE_SEQUENCES$2[0x0D]='\\r';ESCAPE_SEQUENCES$2[0x1B]='\\e';ESCAPE_SEQUENCES$2[0x22]='\\"';ESCAPE_SEQUENCES$2[0x5C]='\\\\';ESCAPE_SEQUENCES$2[0x85]='\\N';ESCAPE_SEQUENCES$2[0xA0]='\\_';ESCAPE_SEQUENCES$2[0x2028]='\\L';ESCAPE_SEQUENCES$2[0x2029]='\\P';var DEPRECATED_BOOLEANS_SYNTAX$2=['y','Y','yes','Yes','YES','on','On','ON','n','N','no','No','NO','off','Off','OFF'];function compileStyleMap$2(schema,map){var result,keys,index,length,tag,style,type;if(map===null)return{};result={};keys=Object.keys(map);for(index=0,length=keys.length;index<length;index+=1){tag=keys[index];style=String(map[tag]);if(tag.slice(0,2)==='!!'){tag='tag:yaml.org,2002:'+tag.slice(2);}type=schema.compiledTypeMap['fallback'][tag];if(type&&_hasOwnProperty$8.call(type.styleAliases,style)){style=type.styleAliases[style];}result[tag]=style;}return result;}function encodeHex$2(character){var string,handle,length;string=character.toString(16).toUpperCase();if(character<=0xFF){handle='x';length=2;}else if(character<=0xFFFF){handle='u';length=4;}else if(character<=0xFFFFFFFF){handle='U';length=8;}else{throw new YAMLException$a('code point within a string may not be greater than 0xFFFFFFFF');}return'\\'+handle+common$f.repeat('0',length-string.length)+string;}function State$5(options){this.schema=options['schema']||DEFAULT_FULL_SCHEMA$2;this.indent=Math.max(1,options['indent']||2);this.noArrayIndent=options['noArrayIndent']||false;this.skipInvalid=options['skipInvalid']||false;this.flowLevel=common$f.isNothing(options['flowLevel'])?-1:options['flowLevel'];this.styleMap=compileStyleMap$2(this.schema,options['styles']||null);this.sortKeys=options['sortKeys']||false;this.lineWidth=options['lineWidth']||80;this.noRefs=options['noRefs']||false;this.noCompatMode=options['noCompatMode']||false;this.condenseFlow=options['condenseFlow']||false;this.implicitTypes=this.schema.compiledImplicit;this.explicitTypes=this.schema.compiledExplicit;this.tag=null;this.result='';this.duplicates=[];this.usedDuplicates=null;}// Indents every line in a string. Empty lines (\n only) are not indented.
function indentString$2(string,spaces){var ind=common$f.repeat(' ',spaces),position=0,next=-1,result='',line,length=string.length;while(position<length){next=string.indexOf('\n',position);if(next===-1){line=string.slice(position);position=length;}else{line=string.slice(position,next+1);position=next+1;}if(line.length&&line!=='\n')result+=ind;result+=line;}return result;}function generateNextLine$2(state,level){return'\n'+common$f.repeat(' ',state.indent*level);}function testImplicitResolving$2(state,str){var index,length,type;for(index=0,length=state.implicitTypes.length;index<length;index+=1){type=state.implicitTypes[index];if(type.resolve(str)){return true;}}return false;}// [33] s-white ::= s-space | s-tab
function isWhitespace$2(c){return c===CHAR_SPACE$2||c===CHAR_TAB$2;}// Returns true if the character can be printed without escaping.
// From YAML 1.2: "any allowed characters known to be non-printable
// should also be escaped. [However,] This isn’t mandatory"
// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
function isPrintable$2(c){return 0x00020<=c&&c<=0x00007E||0x000A1<=c&&c<=0x00D7FF&&c!==0x2028&&c!==0x2029||0x0E000<=c&&c<=0x00FFFD&&c!==0xFEFF/* BOM */||0x10000<=c&&c<=0x10FFFF;}// Simplified test for values allowed after the first character in plain style.
function isPlainSafe$2(c){// Uses a subset of nb-char - c-flow-indicator - ":" - "#"
// where nb-char ::= c-printable - b-char - c-byte-order-mark.
return isPrintable$2(c)&&c!==0xFEFF// - c-flow-indicator
&&c!==CHAR_COMMA$5&&c!==CHAR_LEFT_SQUARE_BRACKET$4&&c!==CHAR_RIGHT_SQUARE_BRACKET$4&&c!==CHAR_LEFT_CURLY_BRACKET$2&&c!==CHAR_RIGHT_CURLY_BRACKET$2// - ":" - "#"
&&c!==CHAR_COLON$3&&c!==CHAR_SHARP$2;}// Simplified test for values allowed as the first character in plain style.
function isPlainSafeFirst$2(c){// Uses a subset of ns-char - c-indicator
// where ns-char = nb-char - s-white.
return isPrintable$2(c)&&c!==0xFEFF&&!isWhitespace$2(c)// - s-white
// - (c-indicator ::=
// “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
&&c!==CHAR_MINUS$2&&c!==CHAR_QUESTION$2&&c!==CHAR_COLON$3&&c!==CHAR_COMMA$5&&c!==CHAR_LEFT_SQUARE_BRACKET$4&&c!==CHAR_RIGHT_SQUARE_BRACKET$4&&c!==CHAR_LEFT_CURLY_BRACKET$2&&c!==CHAR_RIGHT_CURLY_BRACKET$2// | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “"”
&&c!==CHAR_SHARP$2&&c!==CHAR_AMPERSAND$2&&c!==CHAR_ASTERISK$3&&c!==CHAR_EXCLAMATION$2&&c!==CHAR_VERTICAL_LINE$2&&c!==CHAR_GREATER_THAN$2&&c!==CHAR_SINGLE_QUOTE$3&&c!==CHAR_DOUBLE_QUOTE$3// | “%” | “@” | “`”)
&&c!==CHAR_PERCENT$2&&c!==CHAR_COMMERCIAL_AT$2&&c!==CHAR_GRAVE_ACCENT$2;}// Determines whether block indentation indicator is required.
function needIndentIndicator$2(string){var leadingSpaceRe=/^\n* /;return leadingSpaceRe.test(string);}var STYLE_PLAIN$2=1,STYLE_SINGLE$2=2,STYLE_LITERAL$2=3,STYLE_FOLDED$2=4,STYLE_DOUBLE$2=5;// Determines which scalar styles are possible and returns the preferred style.
// lineWidth = -1 => no limit.
// Pre-conditions: str.length > 0.
// Post-conditions:
//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
function chooseScalarStyle$2(string,singleLineOnly,indentPerLevel,lineWidth,testAmbiguousType){var i;var char;var hasLineBreak=false;var hasFoldableLine=false;// only checked if shouldTrackWidth
var shouldTrackWidth=lineWidth!==-1;var previousLineBreak=-1;// count the first line correctly
var plain=isPlainSafeFirst$2(string.charCodeAt(0))&&!isWhitespace$2(string.charCodeAt(string.length-1));if(singleLineOnly){// Case: no block styles.
// Check for disallowed characters to rule out plain and single.
for(i=0;i<string.length;i++){char=string.charCodeAt(i);if(!isPrintable$2(char)){return STYLE_DOUBLE$2;}plain=plain&&isPlainSafe$2(char);}}else{// Case: block styles permitted.
for(i=0;i<string.length;i++){char=string.charCodeAt(i);if(char===CHAR_LINE_FEED$2){hasLineBreak=true;// Check if any line can be folded.
if(shouldTrackWidth){hasFoldableLine=hasFoldableLine||// Foldable line = too long, and not more-indented.
i-previousLineBreak-1>lineWidth&&string[previousLineBreak+1]!==' ';previousLineBreak=i;}}else if(!isPrintable$2(char)){return STYLE_DOUBLE$2;}plain=plain&&isPlainSafe$2(char);}// in case the end is missing a \n
hasFoldableLine=hasFoldableLine||shouldTrackWidth&&i-previousLineBreak-1>lineWidth&&string[previousLineBreak+1]!==' ';}// Although every style can represent \n without escaping, prefer block styles
// for multiline, since they're more readable and they don't add empty lines.
// Also prefer folding a super-long line.
if(!hasLineBreak&&!hasFoldableLine){// Strings interpretable as another type have to be quoted;
// e.g. the string 'true' vs. the boolean true.
return plain&&!testAmbiguousType(string)?STYLE_PLAIN$2:STYLE_SINGLE$2;}// Edge case: block indentation indicator can only have one digit.
if(indentPerLevel>9&&needIndentIndicator$2(string)){return STYLE_DOUBLE$2;}// At this point we know block styles are valid.
// Prefer literal style unless we want to fold.
return hasFoldableLine?STYLE_FOLDED$2:STYLE_LITERAL$2;}// Note: line breaking/folding is implemented for only the folded style.
// NB. We drop the last trailing newline (if any) of a returned block scalar
//  since the dumper adds its own newline. This always works:
//    • No ending newline => unaffected; already using strip "-" chomping.
//    • Ending newline    => removed then restored.
//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
function writeScalar$2(state,string,level,iskey){state.dump=function(){if(string.length===0){return"''";}if(!state.noCompatMode&&DEPRECATED_BOOLEANS_SYNTAX$2.indexOf(string)!==-1){return"'"+string+"'";}var indent=state.indent*Math.max(1,level);// no 0-indent scalars
// As indentation gets deeper, let the width decrease monotonically
// to the lower bound min(state.lineWidth, 40).
// Note that this implies
//  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
//  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
// This behaves better than a constant minimum width which disallows narrower options,
// or an indent threshold which causes the width to suddenly increase.
var lineWidth=state.lineWidth===-1?-1:Math.max(Math.min(state.lineWidth,40),state.lineWidth-indent);// Without knowing if keys are implicit/explicit, assume implicit for safety.
var singleLineOnly=iskey// No block styles in flow mode.
||state.flowLevel>-1&&level>=state.flowLevel;function testAmbiguity(string){return testImplicitResolving$2(state,string);}switch(chooseScalarStyle$2(string,singleLineOnly,state.indent,lineWidth,testAmbiguity)){case STYLE_PLAIN$2:return string;case STYLE_SINGLE$2:return"'"+string.replace(/'/g,"''")+"'";case STYLE_LITERAL$2:return'|'+blockHeader$2(string,state.indent)+dropEndingNewline$2(indentString$2(string,indent));case STYLE_FOLDED$2:return'>'+blockHeader$2(string,state.indent)+dropEndingNewline$2(indentString$2(foldString$2(string,lineWidth),indent));case STYLE_DOUBLE$2:return'"'+escapeString$3(string)+'"';default:throw new YAMLException$a('impossible error: invalid scalar style');}}();}// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
function blockHeader$2(string,indentPerLevel){var indentIndicator=needIndentIndicator$2(string)?String(indentPerLevel):'';// note the special case: the string '\n' counts as a "trailing" empty line.
var clip=string[string.length-1]==='\n';var keep=clip&&(string[string.length-2]==='\n'||string==='\n');var chomp=keep?'+':clip?'':'-';return indentIndicator+chomp+'\n';}// (See the note for writeScalar.)
function dropEndingNewline$2(string){return string[string.length-1]==='\n'?string.slice(0,-1):string;}// Note: a long line without a suitable break point will exceed the width limit.
// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
function foldString$2(string,width){// In folded style, $k$ consecutive newlines output as $k+1$ newlines—
// unless they're before or after a more-indented line, or at the very
// beginning or end, in which case $k$ maps to $k$.
// Therefore, parse each chunk as newline(s) followed by a content line.
var lineRe=/(\n+)([^\n]*)/g;// first line (possibly an empty line)
var result=function(){var nextLF=string.indexOf('\n');nextLF=nextLF!==-1?nextLF:string.length;lineRe.lastIndex=nextLF;return foldLine$2(string.slice(0,nextLF),width);}();// If we haven't reached the first content line yet, don't add an extra \n.
var prevMoreIndented=string[0]==='\n'||string[0]===' ';var moreIndented;// rest of the lines
var match;while(match=lineRe.exec(string)){var prefix=match[1],line=match[2];moreIndented=line[0]===' ';result+=prefix+(!prevMoreIndented&&!moreIndented&&line!==''?'\n':'')+foldLine$2(line,width);prevMoreIndented=moreIndented;}return result;}// Greedy line breaking.
// Picks the longest line under the limit each time,
// otherwise settles for the shortest line over the limit.
// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
function foldLine$2(line,width){if(line===''||line[0]===' ')return line;// Since a more-indented line adds a \n, breaks can't be followed by a space.
var breakRe=/ [^ ]/g;// note: the match index will always be <= length-2.
var match;// start is an inclusive index. end, curr, and next are exclusive.
var start=0,end,curr=0,next=0;var result='';// Invariants: 0 <= start <= length-1.
//   0 <= curr <= next <= max(0, length-2). curr - start <= width.
// Inside the loop:
//   A match implies length >= 2, so curr and next are <= length-2.
while(match=breakRe.exec(line)){next=match.index;// maintain invariant: curr - start <= width
if(next-start>width){end=curr>start?curr:next;// derive end <= length-2
result+='\n'+line.slice(start,end);// skip the space that was output as \n
start=end+1;// derive start <= length-1
}curr=next;}// By the invariants, start <= length-1, so there is something left over.
// It is either the whole string or a part starting from non-whitespace.
result+='\n';// Insert a break if the remainder is too long and there is a break available.
if(line.length-start>width&&curr>start){result+=line.slice(start,curr)+'\n'+line.slice(curr+1);}else{result+=line.slice(start);}return result.slice(1);// drop extra \n joiner
}// Escapes a double-quoted string.
function escapeString$3(string){var result='';var char,nextChar;var escapeSeq;for(var i=0;i<string.length;i++){char=string.charCodeAt(i);// Check for surrogate pairs (reference Unicode 3.0 section "3.7 Surrogates").
if(char>=0xD800&&char<=0xDBFF/* high surrogate */){nextChar=string.charCodeAt(i+1);if(nextChar>=0xDC00&&nextChar<=0xDFFF/* low surrogate */){// Combine the surrogate pair and store it escaped.
result+=encodeHex$2((char-0xD800)*0x400+nextChar-0xDC00+0x10000);// Advance index one extra since we already used that char here.
i++;continue;}}escapeSeq=ESCAPE_SEQUENCES$2[char];result+=!escapeSeq&&isPrintable$2(char)?string[i]:escapeSeq||encodeHex$2(char);}return result;}function writeFlowSequence$2(state,level,object){var _result='',_tag=state.tag,index,length;for(index=0,length=object.length;index<length;index+=1){// Write only valid elements.
if(writeNode$2(state,level,object[index],false,false)){if(index!==0)_result+=','+(!state.condenseFlow?' ':'');_result+=state.dump;}}state.tag=_tag;state.dump='['+_result+']';}function writeBlockSequence$2(state,level,object,compact){var _result='',_tag=state.tag,index,length;for(index=0,length=object.length;index<length;index+=1){// Write only valid elements.
if(writeNode$2(state,level+1,object[index],true,true)){if(!compact||index!==0){_result+=generateNextLine$2(state,level);}if(state.dump&&CHAR_LINE_FEED$2===state.dump.charCodeAt(0)){_result+='-';}else{_result+='- ';}_result+=state.dump;}}state.tag=_tag;state.dump=_result||'[]';// Empty sequence if no valid values.
}function writeFlowMapping$2(state,level,object){var _result='',_tag=state.tag,objectKeyList=Object.keys(object),index,length,objectKey,objectValue,pairBuffer;for(index=0,length=objectKeyList.length;index<length;index+=1){pairBuffer=state.condenseFlow?'"':'';if(index!==0)pairBuffer+=', ';objectKey=objectKeyList[index];objectValue=object[objectKey];if(!writeNode$2(state,level,objectKey,false,false)){continue;// Skip this pair because of invalid key;
}if(state.dump.length>1024)pairBuffer+='? ';pairBuffer+=state.dump+(state.condenseFlow?'"':'')+':'+(state.condenseFlow?'':' ');if(!writeNode$2(state,level,objectValue,false,false)){continue;// Skip this pair because of invalid value.
}pairBuffer+=state.dump;// Both key and value are valid.
_result+=pairBuffer;}state.tag=_tag;state.dump='{'+_result+'}';}function writeBlockMapping$2(state,level,object,compact){var _result='',_tag=state.tag,objectKeyList=Object.keys(object),index,length,objectKey,objectValue,explicitPair,pairBuffer;// Allow sorting keys so that the output file is deterministic
if(state.sortKeys===true){// Default sorting
objectKeyList.sort();}else if(typeof state.sortKeys==='function'){// Custom sort function
objectKeyList.sort(state.sortKeys);}else if(state.sortKeys){// Something is wrong
throw new YAMLException$a('sortKeys must be a boolean or a function');}for(index=0,length=objectKeyList.length;index<length;index+=1){pairBuffer='';if(!compact||index!==0){pairBuffer+=generateNextLine$2(state,level);}objectKey=objectKeyList[index];objectValue=object[objectKey];if(!writeNode$2(state,level+1,objectKey,true,true,true)){continue;// Skip this pair because of invalid key.
}explicitPair=state.tag!==null&&state.tag!=='?'||state.dump&&state.dump.length>1024;if(explicitPair){if(state.dump&&CHAR_LINE_FEED$2===state.dump.charCodeAt(0)){pairBuffer+='?';}else{pairBuffer+='? ';}}pairBuffer+=state.dump;if(explicitPair){pairBuffer+=generateNextLine$2(state,level);}if(!writeNode$2(state,level+1,objectValue,true,explicitPair)){continue;// Skip this pair because of invalid value.
}if(state.dump&&CHAR_LINE_FEED$2===state.dump.charCodeAt(0)){pairBuffer+=':';}else{pairBuffer+=': ';}pairBuffer+=state.dump;// Both key and value are valid.
_result+=pairBuffer;}state.tag=_tag;state.dump=_result||'{}';// Empty mapping if no valid pairs.
}function detectType$2(state,object,explicit){var _result,typeList,index,length,type,style;typeList=explicit?state.explicitTypes:state.implicitTypes;for(index=0,length=typeList.length;index<length;index+=1){type=typeList[index];if((type.instanceOf||type.predicate)&&(!type.instanceOf||typeof object==='object'&&object instanceof type.instanceOf)&&(!type.predicate||type.predicate(object))){state.tag=explicit?type.tag:'?';if(type.represent){style=state.styleMap[type.tag]||type.defaultStyle;if(_toString$6.call(type.represent)==='[object Function]'){_result=type.represent(object,style);}else if(_hasOwnProperty$8.call(type.represent,style)){_result=type.represent[style](object,style);}else{throw new YAMLException$a('!<'+type.tag+'> tag resolver accepts not "'+style+'" style');}state.dump=_result;}return true;}}return false;}// Serializes `object` and writes it to global `result`.
// Returns true on success, or false on invalid object.
//
function writeNode$2(state,level,object,block,compact,iskey){state.tag=null;state.dump=object;if(!detectType$2(state,object,false)){detectType$2(state,object,true);}var type=_toString$6.call(state.dump);if(block){block=state.flowLevel<0||state.flowLevel>level;}var objectOrArray=type==='[object Object]'||type==='[object Array]',duplicateIndex,duplicate;if(objectOrArray){duplicateIndex=state.duplicates.indexOf(object);duplicate=duplicateIndex!==-1;}if(state.tag!==null&&state.tag!=='?'||duplicate||state.indent!==2&&level>0){compact=false;}if(duplicate&&state.usedDuplicates[duplicateIndex]){state.dump='*ref_'+duplicateIndex;}else{if(objectOrArray&&duplicate&&!state.usedDuplicates[duplicateIndex]){state.usedDuplicates[duplicateIndex]=true;}if(type==='[object Object]'){if(block&&Object.keys(state.dump).length!==0){writeBlockMapping$2(state,level,state.dump,compact);if(duplicate){state.dump='&ref_'+duplicateIndex+state.dump;}}else{writeFlowMapping$2(state,level,state.dump);if(duplicate){state.dump='&ref_'+duplicateIndex+' '+state.dump;}}}else if(type==='[object Array]'){var arrayLevel=state.noArrayIndent&&level>0?level-1:level;if(block&&state.dump.length!==0){writeBlockSequence$2(state,arrayLevel,state.dump,compact);if(duplicate){state.dump='&ref_'+duplicateIndex+state.dump;}}else{writeFlowSequence$2(state,arrayLevel,state.dump);if(duplicate){state.dump='&ref_'+duplicateIndex+' '+state.dump;}}}else if(type==='[object String]'){if(state.tag!=='?'){writeScalar$2(state,state.dump,level,iskey);}}else{if(state.skipInvalid)return false;throw new YAMLException$a('unacceptable kind of an object to dump '+type);}if(state.tag!==null&&state.tag!=='?'){state.dump='!<'+state.tag+'> '+state.dump;}}return true;}function getDuplicateReferences$2(object,state){var objects=[],duplicatesIndexes=[],index,length;inspectNode$2(object,objects,duplicatesIndexes);for(index=0,length=duplicatesIndexes.length;index<length;index+=1){state.duplicates.push(objects[duplicatesIndexes[index]]);}state.usedDuplicates=new Array(length);}function inspectNode$2(object,objects,duplicatesIndexes){var objectKeyList,index,length;if(object!==null&&typeof object==='object'){index=objects.indexOf(object);if(index!==-1){if(duplicatesIndexes.indexOf(index)===-1){duplicatesIndexes.push(index);}}else{objects.push(object);if(Array.isArray(object)){for(index=0,length=object.length;index<length;index+=1){inspectNode$2(object[index],objects,duplicatesIndexes);}}else{objectKeyList=Object.keys(object);for(index=0,length=objectKeyList.length;index<length;index+=1){inspectNode$2(object[objectKeyList[index]],objects,duplicatesIndexes);}}}}}function dump$2(input,options){options=options||{};var state=new State$5(options);if(!state.noRefs)getDuplicateReferences$2(input,state);if(writeNode$2(state,0,input,true,true))return state.dump+'\n';return'';}function safeDump$1(input,options){return dump$2(input,common$f.extend({schema:DEFAULT_SAFE_SCHEMA$2},options));}dumper$5.dump=dump$2;dumper$5.safeDump=safeDump$1;var loader$4=loader$5;var dumper$4=dumper$5;function deprecated$1(name){return function(){throw new Error('Function '+name+' is deprecated and cannot be used.');};}jsYaml$4.Type=type$2;jsYaml$4.Schema=schema$2;jsYaml$4.FAILSAFE_SCHEMA=failsafe$2;jsYaml$4.JSON_SCHEMA=json$2;jsYaml$4.CORE_SCHEMA=core$6;jsYaml$4.DEFAULT_SAFE_SCHEMA=default_safe$1;jsYaml$4.DEFAULT_FULL_SCHEMA=default_full$1;jsYaml$4.load=loader$4.load;jsYaml$4.loadAll=loader$4.loadAll;jsYaml$4.safeLoad=loader$4.safeLoad;jsYaml$4.safeLoadAll=loader$4.safeLoadAll;jsYaml$4.dump=dumper$4.dump;jsYaml$4.safeDump=dumper$4.safeDump;jsYaml$4.YAMLException=exception$2;// Deprecated schema names from JS-YAML 2.0.x
jsYaml$4.MINIMAL_SCHEMA=failsafe$2;jsYaml$4.SAFE_SCHEMA=default_safe$1;jsYaml$4.DEFAULT_SCHEMA=default_full$1;// Deprecated functions from JS-YAML 1.x.x
jsYaml$4.scan=deprecated$1('scan');jsYaml$4.parse=deprecated$1('parse');jsYaml$4.compose=deprecated$1('compose');jsYaml$4.addConstructor=deprecated$1('addConstructor');var yaml$2=jsYaml$4;var jsYaml$3=yaml$2;var toml={};var parse$c={exports:{}};var tomlParser={exports:{}};const ParserEND=0x110000;class ParserError extends Error{/* istanbul ignore next */constructor(msg,filename,linenumber){super('[ParserError] '+msg,filename,linenumber);this.name='ParserError';this.code='ParserError';if(Error.captureStackTrace)Error.captureStackTrace(this,ParserError);}}let State$4=class State{constructor(parser){this.parser=parser;this.buf='';this.returned=null;this.result=null;this.resultTable=null;this.resultArr=null;}};class Parser{constructor(){this.pos=0;this.col=0;this.line=0;this.obj={};this.ctx=this.obj;this.stack=[];this._buf='';this.char=null;this.ii=0;this.state=new State$4(this.parseStart);}parse(str){/* istanbul ignore next */if(str.length===0||str.length==null)return;this._buf=String(str);this.ii=-1;this.char=-1;let getNext;while(getNext===false||this.nextChar()){getNext=this.runOne();}this._buf=null;}nextChar(){if(this.char===0x0A){++this.line;this.col=-1;}++this.ii;this.char=this._buf.codePointAt(this.ii);++this.pos;++this.col;return this.haveBuffer();}haveBuffer(){return this.ii<this._buf.length;}runOne(){return this.state.parser.call(this,this.state.returned);}finish(){this.char=ParserEND;let last;do{last=this.state.parser;this.runOne();}while(this.state.parser!==last);this.ctx=null;this.state=null;this._buf=null;return this.obj;}next(fn){/* istanbul ignore next */if(typeof fn!=='function')throw new ParserError('Tried to set state to non-existent state: '+JSON.stringify(fn));this.state.parser=fn;}goto(fn){this.next(fn);return this.runOne();}call(fn,returnWith){if(returnWith)this.next(returnWith);this.stack.push(this.state);this.state=new State$4(fn);}callNow(fn,returnWith){this.call(fn,returnWith);return this.runOne();}return(value){/* istanbul ignore next */if(this.stack.length===0)throw this.error(new ParserError('Stack underflow'));if(value===undefined)value=this.state.buf;this.state=this.stack.pop();this.state.returned=value;}returnNow(value){this.return(value);return this.runOne();}consume(){/* istanbul ignore next */if(this.char===ParserEND)throw this.error(new ParserError('Unexpected end-of-buffer'));this.state.buf+=this._buf[this.ii];}error(err){err.line=this.line;err.col=this.col;err.pos=this.pos;return err;}/* istanbul ignore next */parseStart(){throw new ParserError('Must declare a parseStart method');}}Parser.END=ParserEND;Parser.Error=ParserError;var parser$2=Parser;var createDatetime=value=>{const date=new Date(value);/* istanbul ignore if */if(isNaN(date)){throw new TypeError('Invalid Datetime');}else{return date;}};var formatNum=(d,num)=>{num=String(num);while(num.length<d)num='0'+num;return num;};const f$2=formatNum;class FloatingDateTime extends Date{constructor(value){super(value+'Z');this.isFloating=true;}toISOString(){const date="".concat(this.getUTCFullYear(),"-").concat(f$2(2,this.getUTCMonth()+1),"-").concat(f$2(2,this.getUTCDate()));const time="".concat(f$2(2,this.getUTCHours()),":").concat(f$2(2,this.getUTCMinutes()),":").concat(f$2(2,this.getUTCSeconds()),".").concat(f$2(3,this.getUTCMilliseconds()));return"".concat(date,"T").concat(time);}}var createDatetimeFloat=value=>{const date=new FloatingDateTime(value);/* istanbul ignore if */if(isNaN(date)){throw new TypeError('Invalid Datetime');}else{return date;}};const f$1=formatNum;const DateTime=loadEnv.commonjsGlobal.Date;let Date$1=class Date extends DateTime{constructor(value){super(value);this.isDate=true;}toISOString(){return"".concat(this.getUTCFullYear(),"-").concat(f$1(2,this.getUTCMonth()+1),"-").concat(f$1(2,this.getUTCDate()));}};var createDate$1=value=>{const date=new Date$1(value);/* istanbul ignore if */if(isNaN(date)){throw new TypeError('Invalid Datetime');}else{return date;}};const f=formatNum;class Time extends Date{constructor(value){super("0000-01-01T".concat(value,"Z"));this.isTime=true;}toISOString(){return"".concat(f(2,this.getUTCHours()),":").concat(f(2,this.getUTCMinutes()),":").concat(f(2,this.getUTCSeconds()),".").concat(f(3,this.getUTCMilliseconds()));}}var createTime$1=value=>{const date=new Time(value);/* istanbul ignore if */if(isNaN(date)){throw new TypeError('Invalid Datetime');}else{return date;}};/* eslint-disable no-new-wrappers, no-eval, camelcase, operator-linebreak */tomlParser.exports=makeParserClass(parser$2);tomlParser.exports.makeParserClass=makeParserClass;class TomlError extends Error{constructor(msg){super(msg);this.name='TomlError';/* istanbul ignore next */if(Error.captureStackTrace)Error.captureStackTrace(this,TomlError);this.fromTOML=true;this.wrapped=null;}}TomlError.wrap=err=>{const terr=new TomlError(err.message);terr.code=err.code;terr.wrapped=err;return terr;};tomlParser.exports.TomlError=TomlError;const createDateTime=createDatetime;const createDateTimeFloat=createDatetimeFloat;const createDate=createDate$1;const createTime=createTime$1;const CTRL_I=0x09;const CTRL_J=0x0A;const CTRL_M=0x0D;const CTRL_CHAR_BOUNDARY=0x1F;// the last non-character in the latin1 region of unicode, except DEL
const CHAR_SP=0x20;const CHAR_QUOT=0x22;const CHAR_NUM=0x23;const CHAR_APOS=0x27;const CHAR_PLUS$1=0x2B;const CHAR_COMMA$4=0x2C;const CHAR_HYPHEN=0x2D;const CHAR_PERIOD=0x2E;const CHAR_0=0x30;const CHAR_1=0x31;const CHAR_7=0x37;const CHAR_9=0x39;const CHAR_COLON$2=0x3A;const CHAR_EQUALS$2=0x3D;const CHAR_A=0x41;const CHAR_E=0x45;const CHAR_F=0x46;const CHAR_T=0x54;const CHAR_U=0x55;const CHAR_Z=0x5A;const CHAR_LOWBAR=0x5F;const CHAR_a=0x61;const CHAR_b=0x62;const CHAR_e=0x65;const CHAR_f=0x66;const CHAR_i=0x69;const CHAR_l=0x6C;const CHAR_n=0x6E;const CHAR_o=0x6F;const CHAR_r=0x72;const CHAR_s=0x73;const CHAR_t=0x74;const CHAR_u=0x75;const CHAR_x=0x78;const CHAR_z=0x7A;const CHAR_LCUB=0x7B;const CHAR_RCUB=0x7D;const CHAR_LSQB=0x5B;const CHAR_BSOL=0x5C;const CHAR_RSQB=0x5D;const CHAR_DEL=0x7F;const SURROGATE_FIRST=0xD800;const SURROGATE_LAST=0xDFFF;const escapes={[CHAR_b]:'\u0008',[CHAR_t]:'\u0009',[CHAR_n]:'\u000A',[CHAR_f]:'\u000C',[CHAR_r]:'\u000D',[CHAR_QUOT]:'\u0022',[CHAR_BSOL]:'\u005C'};function isDigit(cp){return cp>=CHAR_0&&cp<=CHAR_9;}function isHexit(cp){return cp>=CHAR_A&&cp<=CHAR_F||cp>=CHAR_a&&cp<=CHAR_f||cp>=CHAR_0&&cp<=CHAR_9;}function isBit(cp){return cp===CHAR_1||cp===CHAR_0;}function isOctit(cp){return cp>=CHAR_0&&cp<=CHAR_7;}function isAlphaNumQuoteHyphen(cp){return cp>=CHAR_A&&cp<=CHAR_Z||cp>=CHAR_a&&cp<=CHAR_z||cp>=CHAR_0&&cp<=CHAR_9||cp===CHAR_APOS||cp===CHAR_QUOT||cp===CHAR_LOWBAR||cp===CHAR_HYPHEN;}function isAlphaNumHyphen(cp){return cp>=CHAR_A&&cp<=CHAR_Z||cp>=CHAR_a&&cp<=CHAR_z||cp>=CHAR_0&&cp<=CHAR_9||cp===CHAR_LOWBAR||cp===CHAR_HYPHEN;}const _type=Symbol('type');const _declared=Symbol('declared');const hasOwnProperty$2=Object.prototype.hasOwnProperty;const defineProperty=Object.defineProperty;const descriptor={configurable:true,enumerable:true,writable:true,value:undefined};function hasKey(obj,key){if(hasOwnProperty$2.call(obj,key))return true;if(key==='__proto__')defineProperty(obj,'__proto__',descriptor);return false;}const INLINE_TABLE=Symbol('inline-table');function InlineTable(){return Object.defineProperties({},{[_type]:{value:INLINE_TABLE}});}function isInlineTable(obj){if(obj===null||typeof obj!=='object')return false;return obj[_type]===INLINE_TABLE;}const TABLE=Symbol('table');function Table(){return Object.defineProperties({},{[_type]:{value:TABLE},[_declared]:{value:false,writable:true}});}function isTable(obj){if(obj===null||typeof obj!=='object')return false;return obj[_type]===TABLE;}const _contentType=Symbol('content-type');const INLINE_LIST=Symbol('inline-list');function InlineList(type){return Object.defineProperties([],{[_type]:{value:INLINE_LIST},[_contentType]:{value:type}});}function isInlineList(obj){if(obj===null||typeof obj!=='object')return false;return obj[_type]===INLINE_LIST;}const LIST=Symbol('list');function List(){return Object.defineProperties([],{[_type]:{value:LIST}});}function isList(obj){if(obj===null||typeof obj!=='object')return false;return obj[_type]===LIST;}// in an eval, to let bundlers not slurp in a util proxy
let _custom;try{const utilInspect=eval("require('util').inspect");_custom=utilInspect.custom;}catch(_){/* eval require not available in transpiled bundle */}/* istanbul ignore next */const _inspect=_custom||'inspect';class BoxedBigInt{constructor(value){try{this.value=loadEnv.commonjsGlobal.BigInt.asIntN(64,value);}catch(_){/* istanbul ignore next */this.value=null;}Object.defineProperty(this,_type,{value:INTEGER});}isNaN(){return this.value===null;}/* istanbul ignore next */toString(){return String(this.value);}/* istanbul ignore next */[_inspect](){return"[BigInt: ".concat(this.toString(),"]}");}valueOf(){return this.value;}}const INTEGER=Symbol('integer');function Integer(value){let num=Number(value);// -0 is a float thing, not an int thing
if(Object.is(num,-0))num=0;/* istanbul ignore else */if(loadEnv.commonjsGlobal.BigInt&&!Number.isSafeInteger(num)){return new BoxedBigInt(value);}else{/* istanbul ignore next */return Object.defineProperties(new Number(num),{isNaN:{value:function(){return isNaN(this);}},[_type]:{value:INTEGER},[_inspect]:{value:()=>"[Integer: ".concat(value,"]")}});}}function isInteger$2(obj){if(obj===null||typeof obj!=='object')return false;return obj[_type]===INTEGER;}const FLOAT=Symbol('float');function Float(value){/* istanbul ignore next */return Object.defineProperties(new Number(value),{[_type]:{value:FLOAT},[_inspect]:{value:()=>"[Float: ".concat(value,"]")}});}function isFloat$2(obj){if(obj===null||typeof obj!=='object')return false;return obj[_type]===FLOAT;}function tomlType$1(value){const type=typeof value;if(type==='object'){/* istanbul ignore if */if(value===null)return'null';if(value instanceof Date)return'datetime';/* istanbul ignore else */if(_type in value){switch(value[_type]){case INLINE_TABLE:return'inline-table';case INLINE_LIST:return'inline-list';/* istanbul ignore next */case TABLE:return'table';/* istanbul ignore next */case LIST:return'list';case FLOAT:return'float';case INTEGER:return'integer';}}}return type;}function makeParserClass(Parser){class TOMLParser extends Parser{constructor(){super();this.ctx=this.obj=Table();}/* MATCH HELPER */atEndOfWord(){return this.char===CHAR_NUM||this.char===CTRL_I||this.char===CHAR_SP||this.atEndOfLine();}atEndOfLine(){return this.char===Parser.END||this.char===CTRL_J||this.char===CTRL_M;}parseStart(){if(this.char===Parser.END){return null;}else if(this.char===CHAR_LSQB){return this.call(this.parseTableOrList);}else if(this.char===CHAR_NUM){return this.call(this.parseComment);}else if(this.char===CTRL_J||this.char===CHAR_SP||this.char===CTRL_I||this.char===CTRL_M){return null;}else if(isAlphaNumQuoteHyphen(this.char)){return this.callNow(this.parseAssignStatement);}else{throw this.error(new TomlError("Unknown character \"".concat(this.char,"\"")));}}// HELPER, this strips any whitespace and comments to the end of the line
// then RETURNS. Last state in a production.
parseWhitespaceToEOL(){if(this.char===CHAR_SP||this.char===CTRL_I||this.char===CTRL_M){return null;}else if(this.char===CHAR_NUM){return this.goto(this.parseComment);}else if(this.char===Parser.END||this.char===CTRL_J){return this.return();}else{throw this.error(new TomlError('Unexpected character, expected only whitespace or comments till end of line'));}}/* ASSIGNMENT: key = value */parseAssignStatement(){return this.callNow(this.parseAssign,this.recordAssignStatement);}recordAssignStatement(kv){let target=this.ctx;let finalKey=kv.key.pop();for(let kw of kv.key){if(hasKey(target,kw)&&(!isTable(target[kw])||target[kw][_declared])){throw this.error(new TomlError("Can't redefine existing key"));}target=target[kw]=target[kw]||Table();}if(hasKey(target,finalKey)){throw this.error(new TomlError("Can't redefine existing key"));}// unbox our numbers
if(isInteger$2(kv.value)||isFloat$2(kv.value)){target[finalKey]=kv.value.valueOf();}else{target[finalKey]=kv.value;}return this.goto(this.parseWhitespaceToEOL);}/* ASSSIGNMENT expression, key = value possibly inside an inline table */parseAssign(){return this.callNow(this.parseKeyword,this.recordAssignKeyword);}recordAssignKeyword(key){if(this.state.resultTable){this.state.resultTable.push(key);}else{this.state.resultTable=[key];}return this.goto(this.parseAssignKeywordPreDot);}parseAssignKeywordPreDot(){if(this.char===CHAR_PERIOD){return this.next(this.parseAssignKeywordPostDot);}else if(this.char!==CHAR_SP&&this.char!==CTRL_I){return this.goto(this.parseAssignEqual);}}parseAssignKeywordPostDot(){if(this.char!==CHAR_SP&&this.char!==CTRL_I){return this.callNow(this.parseKeyword,this.recordAssignKeyword);}}parseAssignEqual(){if(this.char===CHAR_EQUALS$2){return this.next(this.parseAssignPreValue);}else{throw this.error(new TomlError('Invalid character, expected "="'));}}parseAssignPreValue(){if(this.char===CHAR_SP||this.char===CTRL_I){return null;}else{return this.callNow(this.parseValue,this.recordAssignValue);}}recordAssignValue(value){return this.returnNow({key:this.state.resultTable,value:value});}/* COMMENTS: #...eol */parseComment(){do{if(this.char===Parser.END||this.char===CTRL_J){return this.return();}}while(this.nextChar());}/* TABLES AND LISTS, [foo] and [[foo]] */parseTableOrList(){if(this.char===CHAR_LSQB){this.next(this.parseList);}else{return this.goto(this.parseTable);}}/* TABLE [foo.bar.baz] */parseTable(){this.ctx=this.obj;return this.goto(this.parseTableNext);}parseTableNext(){if(this.char===CHAR_SP||this.char===CTRL_I){return null;}else{return this.callNow(this.parseKeyword,this.parseTableMore);}}parseTableMore(keyword){if(this.char===CHAR_SP||this.char===CTRL_I){return null;}else if(this.char===CHAR_RSQB){if(hasKey(this.ctx,keyword)&&(!isTable(this.ctx[keyword])||this.ctx[keyword][_declared])){throw this.error(new TomlError("Can't redefine existing key"));}else{this.ctx=this.ctx[keyword]=this.ctx[keyword]||Table();this.ctx[_declared]=true;}return this.next(this.parseWhitespaceToEOL);}else if(this.char===CHAR_PERIOD){if(!hasKey(this.ctx,keyword)){this.ctx=this.ctx[keyword]=Table();}else if(isTable(this.ctx[keyword])){this.ctx=this.ctx[keyword];}else if(isList(this.ctx[keyword])){this.ctx=this.ctx[keyword][this.ctx[keyword].length-1];}else{throw this.error(new TomlError("Can't redefine existing key"));}return this.next(this.parseTableNext);}else{throw this.error(new TomlError('Unexpected character, expected whitespace, . or ]'));}}/* LIST [[a.b.c]] */parseList(){this.ctx=this.obj;return this.goto(this.parseListNext);}parseListNext(){if(this.char===CHAR_SP||this.char===CTRL_I){return null;}else{return this.callNow(this.parseKeyword,this.parseListMore);}}parseListMore(keyword){if(this.char===CHAR_SP||this.char===CTRL_I){return null;}else if(this.char===CHAR_RSQB){if(!hasKey(this.ctx,keyword)){this.ctx[keyword]=List();}if(isInlineList(this.ctx[keyword])){throw this.error(new TomlError("Can't extend an inline array"));}else if(isList(this.ctx[keyword])){const next=Table();this.ctx[keyword].push(next);this.ctx=next;}else{throw this.error(new TomlError("Can't redefine an existing key"));}return this.next(this.parseListEnd);}else if(this.char===CHAR_PERIOD){if(!hasKey(this.ctx,keyword)){this.ctx=this.ctx[keyword]=Table();}else if(isInlineList(this.ctx[keyword])){throw this.error(new TomlError("Can't extend an inline array"));}else if(isInlineTable(this.ctx[keyword])){throw this.error(new TomlError("Can't extend an inline table"));}else if(isList(this.ctx[keyword])){this.ctx=this.ctx[keyword][this.ctx[keyword].length-1];}else if(isTable(this.ctx[keyword])){this.ctx=this.ctx[keyword];}else{throw this.error(new TomlError("Can't redefine an existing key"));}return this.next(this.parseListNext);}else{throw this.error(new TomlError('Unexpected character, expected whitespace, . or ]'));}}parseListEnd(keyword){if(this.char===CHAR_RSQB){return this.next(this.parseWhitespaceToEOL);}else{throw this.error(new TomlError('Unexpected character, expected whitespace, . or ]'));}}/* VALUE string, number, boolean, inline list, inline object */parseValue(){if(this.char===Parser.END){throw this.error(new TomlError('Key without value'));}else if(this.char===CHAR_QUOT){return this.next(this.parseDoubleString);}if(this.char===CHAR_APOS){return this.next(this.parseSingleString);}else if(this.char===CHAR_HYPHEN||this.char===CHAR_PLUS$1){return this.goto(this.parseNumberSign);}else if(this.char===CHAR_i){return this.next(this.parseInf);}else if(this.char===CHAR_n){return this.next(this.parseNan);}else if(isDigit(this.char)){return this.goto(this.parseNumberOrDateTime);}else if(this.char===CHAR_t||this.char===CHAR_f){return this.goto(this.parseBoolean);}else if(this.char===CHAR_LSQB){return this.call(this.parseInlineList,this.recordValue);}else if(this.char===CHAR_LCUB){return this.call(this.parseInlineTable,this.recordValue);}else{throw this.error(new TomlError('Unexpected character, expecting string, number, datetime, boolean, inline array or inline table'));}}recordValue(value){return this.returnNow(value);}parseInf(){if(this.char===CHAR_n){return this.next(this.parseInf2);}else{throw this.error(new TomlError('Unexpected character, expected "inf", "+inf" or "-inf"'));}}parseInf2(){if(this.char===CHAR_f){if(this.state.buf==='-'){return this.return(-Infinity);}else{return this.return(Infinity);}}else{throw this.error(new TomlError('Unexpected character, expected "inf", "+inf" or "-inf"'));}}parseNan(){if(this.char===CHAR_a){return this.next(this.parseNan2);}else{throw this.error(new TomlError('Unexpected character, expected "nan"'));}}parseNan2(){if(this.char===CHAR_n){return this.return(NaN);}else{throw this.error(new TomlError('Unexpected character, expected "nan"'));}}/* KEYS, barewords or basic, literal, or dotted */parseKeyword(){if(this.char===CHAR_QUOT){return this.next(this.parseBasicString);}else if(this.char===CHAR_APOS){return this.next(this.parseLiteralString);}else{return this.goto(this.parseBareKey);}}/* KEYS: barewords */parseBareKey(){do{if(this.char===Parser.END){throw this.error(new TomlError('Key ended without value'));}else if(isAlphaNumHyphen(this.char)){this.consume();}else if(this.state.buf.length===0){throw this.error(new TomlError('Empty bare keys are not allowed'));}else{return this.returnNow();}}while(this.nextChar());}/* STRINGS, single quoted (literal) */parseSingleString(){if(this.char===CHAR_APOS){return this.next(this.parseLiteralMultiStringMaybe);}else{return this.goto(this.parseLiteralString);}}parseLiteralString(){do{if(this.char===CHAR_APOS){return this.return();}else if(this.atEndOfLine()){throw this.error(new TomlError('Unterminated string'));}else if(this.char===CHAR_DEL||this.char<=CTRL_CHAR_BOUNDARY&&this.char!==CTRL_I){throw this.errorControlCharInString();}else{this.consume();}}while(this.nextChar());}parseLiteralMultiStringMaybe(){if(this.char===CHAR_APOS){return this.next(this.parseLiteralMultiString);}else{return this.returnNow();}}parseLiteralMultiString(){if(this.char===CTRL_M){return null;}else if(this.char===CTRL_J){return this.next(this.parseLiteralMultiStringContent);}else{return this.goto(this.parseLiteralMultiStringContent);}}parseLiteralMultiStringContent(){do{if(this.char===CHAR_APOS){return this.next(this.parseLiteralMultiEnd);}else if(this.char===Parser.END){throw this.error(new TomlError('Unterminated multi-line string'));}else if(this.char===CHAR_DEL||this.char<=CTRL_CHAR_BOUNDARY&&this.char!==CTRL_I&&this.char!==CTRL_J&&this.char!==CTRL_M){throw this.errorControlCharInString();}else{this.consume();}}while(this.nextChar());}parseLiteralMultiEnd(){if(this.char===CHAR_APOS){return this.next(this.parseLiteralMultiEnd2);}else{this.state.buf+="'";return this.goto(this.parseLiteralMultiStringContent);}}parseLiteralMultiEnd2(){if(this.char===CHAR_APOS){return this.return();}else{this.state.buf+="''";return this.goto(this.parseLiteralMultiStringContent);}}/* STRINGS double quoted */parseDoubleString(){if(this.char===CHAR_QUOT){return this.next(this.parseMultiStringMaybe);}else{return this.goto(this.parseBasicString);}}parseBasicString(){do{if(this.char===CHAR_BSOL){return this.call(this.parseEscape,this.recordEscapeReplacement);}else if(this.char===CHAR_QUOT){return this.return();}else if(this.atEndOfLine()){throw this.error(new TomlError('Unterminated string'));}else if(this.char===CHAR_DEL||this.char<=CTRL_CHAR_BOUNDARY&&this.char!==CTRL_I){throw this.errorControlCharInString();}else{this.consume();}}while(this.nextChar());}recordEscapeReplacement(replacement){this.state.buf+=replacement;return this.goto(this.parseBasicString);}parseMultiStringMaybe(){if(this.char===CHAR_QUOT){return this.next(this.parseMultiString);}else{return this.returnNow();}}parseMultiString(){if(this.char===CTRL_M){return null;}else if(this.char===CTRL_J){return this.next(this.parseMultiStringContent);}else{return this.goto(this.parseMultiStringContent);}}parseMultiStringContent(){do{if(this.char===CHAR_BSOL){return this.call(this.parseMultiEscape,this.recordMultiEscapeReplacement);}else if(this.char===CHAR_QUOT){return this.next(this.parseMultiEnd);}else if(this.char===Parser.END){throw this.error(new TomlError('Unterminated multi-line string'));}else if(this.char===CHAR_DEL||this.char<=CTRL_CHAR_BOUNDARY&&this.char!==CTRL_I&&this.char!==CTRL_J&&this.char!==CTRL_M){throw this.errorControlCharInString();}else{this.consume();}}while(this.nextChar());}errorControlCharInString(){let displayCode='\\u00';if(this.char<16){displayCode+='0';}displayCode+=this.char.toString(16);return this.error(new TomlError("Control characters (codes < 0x1f and 0x7f) are not allowed in strings, use ".concat(displayCode," instead")));}recordMultiEscapeReplacement(replacement){this.state.buf+=replacement;return this.goto(this.parseMultiStringContent);}parseMultiEnd(){if(this.char===CHAR_QUOT){return this.next(this.parseMultiEnd2);}else{this.state.buf+='"';return this.goto(this.parseMultiStringContent);}}parseMultiEnd2(){if(this.char===CHAR_QUOT){return this.return();}else{this.state.buf+='""';return this.goto(this.parseMultiStringContent);}}parseMultiEscape(){if(this.char===CTRL_M||this.char===CTRL_J){return this.next(this.parseMultiTrim);}else if(this.char===CHAR_SP||this.char===CTRL_I){return this.next(this.parsePreMultiTrim);}else{return this.goto(this.parseEscape);}}parsePreMultiTrim(){if(this.char===CHAR_SP||this.char===CTRL_I){return null;}else if(this.char===CTRL_M||this.char===CTRL_J){return this.next(this.parseMultiTrim);}else{throw this.error(new TomlError("Can't escape whitespace"));}}parseMultiTrim(){// explicitly whitespace here, END should follow the same path as chars
if(this.char===CTRL_J||this.char===CHAR_SP||this.char===CTRL_I||this.char===CTRL_M){return null;}else{return this.returnNow();}}parseEscape(){if(this.char in escapes){return this.return(escapes[this.char]);}else if(this.char===CHAR_u){return this.call(this.parseSmallUnicode,this.parseUnicodeReturn);}else if(this.char===CHAR_U){return this.call(this.parseLargeUnicode,this.parseUnicodeReturn);}else{throw this.error(new TomlError('Unknown escape character: '+this.char));}}parseUnicodeReturn(char){try{const codePoint=parseInt(char,16);if(codePoint>=SURROGATE_FIRST&&codePoint<=SURROGATE_LAST){throw this.error(new TomlError('Invalid unicode, character in range 0xD800 - 0xDFFF is reserved'));}return this.returnNow(String.fromCodePoint(codePoint));}catch(err){throw this.error(TomlError.wrap(err));}}parseSmallUnicode(){if(!isHexit(this.char)){throw this.error(new TomlError('Invalid character in unicode sequence, expected hex'));}else{this.consume();if(this.state.buf.length>=4)return this.return();}}parseLargeUnicode(){if(!isHexit(this.char)){throw this.error(new TomlError('Invalid character in unicode sequence, expected hex'));}else{this.consume();if(this.state.buf.length>=8)return this.return();}}/* NUMBERS */parseNumberSign(){this.consume();return this.next(this.parseMaybeSignedInfOrNan);}parseMaybeSignedInfOrNan(){if(this.char===CHAR_i){return this.next(this.parseInf);}else if(this.char===CHAR_n){return this.next(this.parseNan);}else{return this.callNow(this.parseNoUnder,this.parseNumberIntegerStart);}}parseNumberIntegerStart(){if(this.char===CHAR_0){this.consume();return this.next(this.parseNumberIntegerExponentOrDecimal);}else{return this.goto(this.parseNumberInteger);}}parseNumberIntegerExponentOrDecimal(){if(this.char===CHAR_PERIOD){this.consume();return this.call(this.parseNoUnder,this.parseNumberFloat);}else if(this.char===CHAR_E||this.char===CHAR_e){this.consume();return this.next(this.parseNumberExponentSign);}else{return this.returnNow(Integer(this.state.buf));}}parseNumberInteger(){if(isDigit(this.char)){this.consume();}else if(this.char===CHAR_LOWBAR){return this.call(this.parseNoUnder);}else if(this.char===CHAR_E||this.char===CHAR_e){this.consume();return this.next(this.parseNumberExponentSign);}else if(this.char===CHAR_PERIOD){this.consume();return this.call(this.parseNoUnder,this.parseNumberFloat);}else{const result=Integer(this.state.buf);/* istanbul ignore if */if(result.isNaN()){throw this.error(new TomlError('Invalid number'));}else{return this.returnNow(result);}}}parseNoUnder(){if(this.char===CHAR_LOWBAR||this.char===CHAR_PERIOD||this.char===CHAR_E||this.char===CHAR_e){throw this.error(new TomlError('Unexpected character, expected digit'));}else if(this.atEndOfWord()){throw this.error(new TomlError('Incomplete number'));}return this.returnNow();}parseNumberFloat(){if(this.char===CHAR_LOWBAR){return this.call(this.parseNoUnder,this.parseNumberFloat);}else if(isDigit(this.char)){this.consume();}else if(this.char===CHAR_E||this.char===CHAR_e){this.consume();return this.next(this.parseNumberExponentSign);}else{return this.returnNow(Float(this.state.buf));}}parseNumberExponentSign(){if(isDigit(this.char)){return this.goto(this.parseNumberExponent);}else if(this.char===CHAR_HYPHEN||this.char===CHAR_PLUS$1){this.consume();this.call(this.parseNoUnder,this.parseNumberExponent);}else{throw this.error(new TomlError('Unexpected character, expected -, + or digit'));}}parseNumberExponent(){if(isDigit(this.char)){this.consume();}else if(this.char===CHAR_LOWBAR){return this.call(this.parseNoUnder);}else{return this.returnNow(Float(this.state.buf));}}/* NUMBERS or DATETIMES  */parseNumberOrDateTime(){if(this.char===CHAR_0){this.consume();return this.next(this.parseNumberBaseOrDateTime);}else{return this.goto(this.parseNumberOrDateTimeOnly);}}parseNumberOrDateTimeOnly(){// note, if two zeros are in a row then it MUST be a date
if(this.char===CHAR_LOWBAR){return this.call(this.parseNoUnder,this.parseNumberInteger);}else if(isDigit(this.char)){this.consume();if(this.state.buf.length>4)this.next(this.parseNumberInteger);}else if(this.char===CHAR_E||this.char===CHAR_e){this.consume();return this.next(this.parseNumberExponentSign);}else if(this.char===CHAR_PERIOD){this.consume();return this.call(this.parseNoUnder,this.parseNumberFloat);}else if(this.char===CHAR_HYPHEN){return this.goto(this.parseDateTime);}else if(this.char===CHAR_COLON$2){return this.goto(this.parseOnlyTimeHour);}else{return this.returnNow(Integer(this.state.buf));}}parseDateTimeOnly(){if(this.state.buf.length<4){if(isDigit(this.char)){return this.consume();}else if(this.char===CHAR_COLON$2){return this.goto(this.parseOnlyTimeHour);}else{throw this.error(new TomlError('Expected digit while parsing year part of a date'));}}else{if(this.char===CHAR_HYPHEN){return this.goto(this.parseDateTime);}else{throw this.error(new TomlError('Expected hyphen (-) while parsing year part of date'));}}}parseNumberBaseOrDateTime(){if(this.char===CHAR_b){this.consume();return this.call(this.parseNoUnder,this.parseIntegerBin);}else if(this.char===CHAR_o){this.consume();return this.call(this.parseNoUnder,this.parseIntegerOct);}else if(this.char===CHAR_x){this.consume();return this.call(this.parseNoUnder,this.parseIntegerHex);}else if(this.char===CHAR_PERIOD){return this.goto(this.parseNumberInteger);}else if(isDigit(this.char)){return this.goto(this.parseDateTimeOnly);}else{return this.returnNow(Integer(this.state.buf));}}parseIntegerHex(){if(isHexit(this.char)){this.consume();}else if(this.char===CHAR_LOWBAR){return this.call(this.parseNoUnder);}else{const result=Integer(this.state.buf);/* istanbul ignore if */if(result.isNaN()){throw this.error(new TomlError('Invalid number'));}else{return this.returnNow(result);}}}parseIntegerOct(){if(isOctit(this.char)){this.consume();}else if(this.char===CHAR_LOWBAR){return this.call(this.parseNoUnder);}else{const result=Integer(this.state.buf);/* istanbul ignore if */if(result.isNaN()){throw this.error(new TomlError('Invalid number'));}else{return this.returnNow(result);}}}parseIntegerBin(){if(isBit(this.char)){this.consume();}else if(this.char===CHAR_LOWBAR){return this.call(this.parseNoUnder);}else{const result=Integer(this.state.buf);/* istanbul ignore if */if(result.isNaN()){throw this.error(new TomlError('Invalid number'));}else{return this.returnNow(result);}}}/* DATETIME */parseDateTime(){// we enter here having just consumed the year and about to consume the hyphen
if(this.state.buf.length<4){throw this.error(new TomlError('Years less than 1000 must be zero padded to four characters'));}this.state.result=this.state.buf;this.state.buf='';return this.next(this.parseDateMonth);}parseDateMonth(){if(this.char===CHAR_HYPHEN){if(this.state.buf.length<2){throw this.error(new TomlError('Months less than 10 must be zero padded to two characters'));}this.state.result+='-'+this.state.buf;this.state.buf='';return this.next(this.parseDateDay);}else if(isDigit(this.char)){this.consume();}else{throw this.error(new TomlError('Incomplete datetime'));}}parseDateDay(){if(this.char===CHAR_T||this.char===CHAR_SP){if(this.state.buf.length<2){throw this.error(new TomlError('Days less than 10 must be zero padded to two characters'));}this.state.result+='-'+this.state.buf;this.state.buf='';return this.next(this.parseStartTimeHour);}else if(this.atEndOfWord()){return this.return(createDate(this.state.result+'-'+this.state.buf));}else if(isDigit(this.char)){this.consume();}else{throw this.error(new TomlError('Incomplete datetime'));}}parseStartTimeHour(){if(this.atEndOfWord()){return this.returnNow(createDate(this.state.result));}else{return this.goto(this.parseTimeHour);}}parseTimeHour(){if(this.char===CHAR_COLON$2){if(this.state.buf.length<2){throw this.error(new TomlError('Hours less than 10 must be zero padded to two characters'));}this.state.result+='T'+this.state.buf;this.state.buf='';return this.next(this.parseTimeMin);}else if(isDigit(this.char)){this.consume();}else{throw this.error(new TomlError('Incomplete datetime'));}}parseTimeMin(){if(this.state.buf.length<2&&isDigit(this.char)){this.consume();}else if(this.state.buf.length===2&&this.char===CHAR_COLON$2){this.state.result+=':'+this.state.buf;this.state.buf='';return this.next(this.parseTimeSec);}else{throw this.error(new TomlError('Incomplete datetime'));}}parseTimeSec(){if(isDigit(this.char)){this.consume();if(this.state.buf.length===2){this.state.result+=':'+this.state.buf;this.state.buf='';return this.next(this.parseTimeZoneOrFraction);}}else{throw this.error(new TomlError('Incomplete datetime'));}}parseOnlyTimeHour(){/* istanbul ignore else */if(this.char===CHAR_COLON$2){if(this.state.buf.length<2){throw this.error(new TomlError('Hours less than 10 must be zero padded to two characters'));}this.state.result=this.state.buf;this.state.buf='';return this.next(this.parseOnlyTimeMin);}else{throw this.error(new TomlError('Incomplete time'));}}parseOnlyTimeMin(){if(this.state.buf.length<2&&isDigit(this.char)){this.consume();}else if(this.state.buf.length===2&&this.char===CHAR_COLON$2){this.state.result+=':'+this.state.buf;this.state.buf='';return this.next(this.parseOnlyTimeSec);}else{throw this.error(new TomlError('Incomplete time'));}}parseOnlyTimeSec(){if(isDigit(this.char)){this.consume();if(this.state.buf.length===2){return this.next(this.parseOnlyTimeFractionMaybe);}}else{throw this.error(new TomlError('Incomplete time'));}}parseOnlyTimeFractionMaybe(){this.state.result+=':'+this.state.buf;if(this.char===CHAR_PERIOD){this.state.buf='';this.next(this.parseOnlyTimeFraction);}else{return this.return(createTime(this.state.result));}}parseOnlyTimeFraction(){if(isDigit(this.char)){this.consume();}else if(this.atEndOfWord()){if(this.state.buf.length===0)throw this.error(new TomlError('Expected digit in milliseconds'));return this.returnNow(createTime(this.state.result+'.'+this.state.buf));}else{throw this.error(new TomlError('Unexpected character in datetime, expected period (.), minus (-), plus (+) or Z'));}}parseTimeZoneOrFraction(){if(this.char===CHAR_PERIOD){this.consume();this.next(this.parseDateTimeFraction);}else if(this.char===CHAR_HYPHEN||this.char===CHAR_PLUS$1){this.consume();this.next(this.parseTimeZoneHour);}else if(this.char===CHAR_Z){this.consume();return this.return(createDateTime(this.state.result+this.state.buf));}else if(this.atEndOfWord()){return this.returnNow(createDateTimeFloat(this.state.result+this.state.buf));}else{throw this.error(new TomlError('Unexpected character in datetime, expected period (.), minus (-), plus (+) or Z'));}}parseDateTimeFraction(){if(isDigit(this.char)){this.consume();}else if(this.state.buf.length===1){throw this.error(new TomlError('Expected digit in milliseconds'));}else if(this.char===CHAR_HYPHEN||this.char===CHAR_PLUS$1){this.consume();this.next(this.parseTimeZoneHour);}else if(this.char===CHAR_Z){this.consume();return this.return(createDateTime(this.state.result+this.state.buf));}else if(this.atEndOfWord()){return this.returnNow(createDateTimeFloat(this.state.result+this.state.buf));}else{throw this.error(new TomlError('Unexpected character in datetime, expected period (.), minus (-), plus (+) or Z'));}}parseTimeZoneHour(){if(isDigit(this.char)){this.consume();// FIXME: No more regexps
if(/\d\d$/.test(this.state.buf))return this.next(this.parseTimeZoneSep);}else{throw this.error(new TomlError('Unexpected character in datetime, expected digit'));}}parseTimeZoneSep(){if(this.char===CHAR_COLON$2){this.consume();this.next(this.parseTimeZoneMin);}else{throw this.error(new TomlError('Unexpected character in datetime, expected colon'));}}parseTimeZoneMin(){if(isDigit(this.char)){this.consume();if(/\d\d$/.test(this.state.buf))return this.return(createDateTime(this.state.result+this.state.buf));}else{throw this.error(new TomlError('Unexpected character in datetime, expected digit'));}}/* BOOLEAN */parseBoolean(){/* istanbul ignore else */if(this.char===CHAR_t){this.consume();return this.next(this.parseTrue_r);}else if(this.char===CHAR_f){this.consume();return this.next(this.parseFalse_a);}}parseTrue_r(){if(this.char===CHAR_r){this.consume();return this.next(this.parseTrue_u);}else{throw this.error(new TomlError('Invalid boolean, expected true or false'));}}parseTrue_u(){if(this.char===CHAR_u){this.consume();return this.next(this.parseTrue_e);}else{throw this.error(new TomlError('Invalid boolean, expected true or false'));}}parseTrue_e(){if(this.char===CHAR_e){return this.return(true);}else{throw this.error(new TomlError('Invalid boolean, expected true or false'));}}parseFalse_a(){if(this.char===CHAR_a){this.consume();return this.next(this.parseFalse_l);}else{throw this.error(new TomlError('Invalid boolean, expected true or false'));}}parseFalse_l(){if(this.char===CHAR_l){this.consume();return this.next(this.parseFalse_s);}else{throw this.error(new TomlError('Invalid boolean, expected true or false'));}}parseFalse_s(){if(this.char===CHAR_s){this.consume();return this.next(this.parseFalse_e);}else{throw this.error(new TomlError('Invalid boolean, expected true or false'));}}parseFalse_e(){if(this.char===CHAR_e){return this.return(false);}else{throw this.error(new TomlError('Invalid boolean, expected true or false'));}}/* INLINE LISTS */parseInlineList(){if(this.char===CHAR_SP||this.char===CTRL_I||this.char===CTRL_M||this.char===CTRL_J){return null;}else if(this.char===Parser.END){throw this.error(new TomlError('Unterminated inline array'));}else if(this.char===CHAR_NUM){return this.call(this.parseComment);}else if(this.char===CHAR_RSQB){return this.return(this.state.resultArr||InlineList());}else{return this.callNow(this.parseValue,this.recordInlineListValue);}}recordInlineListValue(value){if(this.state.resultArr){const listType=this.state.resultArr[_contentType];const valueType=tomlType$1(value);if(listType!==valueType){throw this.error(new TomlError("Inline lists must be a single type, not a mix of ".concat(listType," and ").concat(valueType)));}}else{this.state.resultArr=InlineList(tomlType$1(value));}if(isFloat$2(value)||isInteger$2(value)){// unbox now that we've verified they're ok
this.state.resultArr.push(value.valueOf());}else{this.state.resultArr.push(value);}return this.goto(this.parseInlineListNext);}parseInlineListNext(){if(this.char===CHAR_SP||this.char===CTRL_I||this.char===CTRL_M||this.char===CTRL_J){return null;}else if(this.char===CHAR_NUM){return this.call(this.parseComment);}else if(this.char===CHAR_COMMA$4){return this.next(this.parseInlineList);}else if(this.char===CHAR_RSQB){return this.goto(this.parseInlineList);}else{throw this.error(new TomlError('Invalid character, expected whitespace, comma (,) or close bracket (])'));}}/* INLINE TABLE */parseInlineTable(){if(this.char===CHAR_SP||this.char===CTRL_I){return null;}else if(this.char===Parser.END||this.char===CHAR_NUM||this.char===CTRL_J||this.char===CTRL_M){throw this.error(new TomlError('Unterminated inline array'));}else if(this.char===CHAR_RCUB){return this.return(this.state.resultTable||InlineTable());}else{if(!this.state.resultTable)this.state.resultTable=InlineTable();return this.callNow(this.parseAssign,this.recordInlineTableValue);}}recordInlineTableValue(kv){let target=this.state.resultTable;let finalKey=kv.key.pop();for(let kw of kv.key){if(hasKey(target,kw)&&(!isTable(target[kw])||target[kw][_declared])){throw this.error(new TomlError("Can't redefine existing key"));}target=target[kw]=target[kw]||Table();}if(hasKey(target,finalKey)){throw this.error(new TomlError("Can't redefine existing key"));}if(isInteger$2(kv.value)||isFloat$2(kv.value)){target[finalKey]=kv.value.valueOf();}else{target[finalKey]=kv.value;}return this.goto(this.parseInlineTableNext);}parseInlineTableNext(){if(this.char===CHAR_SP||this.char===CTRL_I){return null;}else if(this.char===Parser.END||this.char===CHAR_NUM||this.char===CTRL_J||this.char===CTRL_M){throw this.error(new TomlError('Unterminated inline array'));}else if(this.char===CHAR_COMMA$4){return this.next(this.parseInlineTable);}else if(this.char===CHAR_RCUB){return this.goto(this.parseInlineTable);}else{throw this.error(new TomlError('Invalid character, expected whitespace, comma (,) or close bracket (])'));}}}return TOMLParser;}var tomlParserExports=tomlParser.exports;var parsePrettyError=prettyError$2;function prettyError$2(err,buf){/* istanbul ignore if */if(err.pos==null||err.line==null)return err;let msg=err.message;msg+=" at row ".concat(err.line+1,", col ").concat(err.col+1,", pos ").concat(err.pos,":\n");/* istanbul ignore else */if(buf&&buf.split){const lines=buf.split(/\n/);const lineNumWidth=String(Math.min(lines.length,err.line+3)).length;let linePadding=' ';while(linePadding.length<lineNumWidth)linePadding+=' ';for(let ii=Math.max(0,err.line-1);ii<Math.min(lines.length,err.line+2);++ii){let lineNum=String(ii+1);if(lineNum.length<lineNumWidth)lineNum=' '+lineNum;if(err.line===ii){msg+=lineNum+'> '+lines[ii]+'\n';msg+=linePadding+'  ';for(let hh=0;hh<err.col;++hh){msg+=' ';}msg+='^\n';}else{msg+=lineNum+': '+lines[ii]+'\n';}}}err.message=msg+'\n';return err;}var parseString_1=parseString;const TOMLParser$2=tomlParserExports;const prettyError$1=parsePrettyError;function parseString(str){if(loadEnv.commonjsGlobal.Buffer&&loadEnv.commonjsGlobal.Buffer.isBuffer(str)){str=str.toString('utf8');}const parser=new TOMLParser$2();try{parser.parse(str);return parser.finish();}catch(err){throw prettyError$1(err,str);}}var parseAsync_1=parseAsync;const TOMLParser$1=tomlParserExports;const prettyError=parsePrettyError;function parseAsync(str,opts){if(!opts)opts={};const index=0;const blocksize=opts.blocksize||40960;const parser=new TOMLParser$1();return new Promise((resolve,reject)=>{setImmediate(parseAsyncNext,index,blocksize,resolve,reject);});function parseAsyncNext(index,blocksize,resolve,reject){if(index>=str.length){try{return resolve(parser.finish());}catch(err){return reject(prettyError(err,str));}}try{parser.parse(str.slice(index,index+blocksize));setImmediate(parseAsyncNext,index+blocksize,blocksize,resolve,reject);}catch(err){reject(prettyError(err,str));}}}var parseStream_1=parseStream;const stream$2=require$$0__default$4.default;const TOMLParser=tomlParserExports;function parseStream(stm){if(stm){return parseReadable(stm);}else{return parseTransform();}}function parseReadable(stm){const parser=new TOMLParser();stm.setEncoding('utf8');return new Promise((resolve,reject)=>{let readable;let ended=false;let errored=false;function finish(){ended=true;if(readable)return;try{resolve(parser.finish());}catch(err){reject(err);}}function error(err){errored=true;reject(err);}stm.once('end',finish);stm.once('error',error);readNext();function readNext(){readable=true;let data;while((data=stm.read())!==null){try{parser.parse(data);}catch(err){return error(err);}}readable=false;/* istanbul ignore if */if(ended)return finish();/* istanbul ignore if */if(errored)return;stm.once('readable',readNext);}});}function parseTransform(){const parser=new TOMLParser();return new stream$2.Transform({objectMode:true,transform(chunk,encoding,cb){try{parser.parse(chunk.toString(encoding));}catch(err){this.emit('error',err);}cb();},flush(cb){try{this.push(parser.finish());}catch(err){this.emit('error',err);}cb();}});}parse$c.exports=parseString_1;parse$c.exports.async=parseAsync_1;parse$c.exports.stream=parseStream_1;parse$c.exports.prettyError=parsePrettyError;var parseExports=parse$c.exports;var stringify$7={exports:{}};stringify$7.exports=stringify$6;stringify$7.exports.value=stringifyInline;function stringify$6(obj){if(obj===null)throw typeError('null');if(obj===void 0)throw typeError('undefined');if(typeof obj!=='object')throw typeError(typeof obj);if(typeof obj.toJSON==='function')obj=obj.toJSON();if(obj==null)return null;const type=tomlType(obj);if(type!=='table')throw typeError(type);return stringifyObject('','',obj);}function typeError(type){return new Error('Can only stringify objects, not '+type);}function arrayOneTypeError(){return new Error("Array values can't have mixed types");}function getInlineKeys(obj){return Object.keys(obj).filter(key=>isInline(obj[key]));}function getComplexKeys(obj){return Object.keys(obj).filter(key=>!isInline(obj[key]));}function toJSON(obj){let nobj=Array.isArray(obj)?[]:Object.prototype.hasOwnProperty.call(obj,'__proto__')?{['__proto__']:undefined}:{};for(let prop of Object.keys(obj)){if(obj[prop]&&typeof obj[prop].toJSON==='function'&&!('toISOString'in obj[prop])){nobj[prop]=obj[prop].toJSON();}else{nobj[prop]=obj[prop];}}return nobj;}function stringifyObject(prefix,indent,obj){obj=toJSON(obj);var inlineKeys;var complexKeys;inlineKeys=getInlineKeys(obj);complexKeys=getComplexKeys(obj);var result=[];var inlineIndent=indent||'';inlineKeys.forEach(key=>{var type=tomlType(obj[key]);if(type!=='undefined'&&type!=='null'){result.push(inlineIndent+stringifyKey(key)+' = '+stringifyAnyInline(obj[key],true));}});if(result.length>0)result.push('');var complexIndent=prefix&&inlineKeys.length>0?indent+'  ':'';complexKeys.forEach(key=>{result.push(stringifyComplex(prefix,complexIndent,key,obj[key]));});return result.join('\n');}function isInline(value){switch(tomlType(value)){case'undefined':case'null':case'integer':case'nan':case'float':case'boolean':case'string':case'datetime':return true;case'array':return value.length===0||tomlType(value[0])!=='table';case'table':return Object.keys(value).length===0;/* istanbul ignore next */default:return false;}}function tomlType(value){if(value===undefined){return'undefined';}else if(value===null){return'null';/* eslint-disable valid-typeof */}else if(typeof value==='bigint'||Number.isInteger(value)&&!Object.is(value,-0)){return'integer';}else if(typeof value==='number'){return'float';}else if(typeof value==='boolean'){return'boolean';}else if(typeof value==='string'){return'string';}else if('toISOString'in value){return isNaN(value)?'undefined':'datetime';}else if(Array.isArray(value)){return'array';}else{return'table';}}function stringifyKey(key){var keyStr=String(key);if(/^[-A-Za-z0-9_]+$/.test(keyStr)){return keyStr;}else{return stringifyBasicString(keyStr);}}function stringifyBasicString(str){return'"'+escapeString$2(str).replace(/"/g,'\\"')+'"';}function stringifyLiteralString(str){return"'"+str+"'";}function numpad(num,str){while(str.length<num)str='0'+str;return str;}function escapeString$2(str){return str.replace(/\\/g,'\\\\').replace(/[\b]/g,'\\b').replace(/\t/g,'\\t').replace(/\n/g,'\\n').replace(/\f/g,'\\f').replace(/\r/g,'\\r')/* eslint-disable no-control-regex */.replace(/([\u0000-\u001f\u007f])/,c=>'\\u'+numpad(4,c.codePointAt(0).toString(16)));/* eslint-enable no-control-regex */}function stringifyMultilineString(str){let escaped=str.split(/\n/).map(str=>{return escapeString$2(str).replace(/"(?="")/g,'\\"');}).join('\n');if(escaped.slice(-1)==='"')escaped+='\\\n';return'"""\n'+escaped+'"""';}function stringifyAnyInline(value,multilineOk){let type=tomlType(value);if(type==='string'){if(multilineOk&&/\n/.test(value)){type='string-multiline';}else if(!/[\b\t\n\f\r']/.test(value)&&/"/.test(value)){type='string-literal';}}return stringifyInline(value,type);}function stringifyInline(value,type){/* istanbul ignore if */if(!type)type=tomlType(value);switch(type){case'string-multiline':return stringifyMultilineString(value);case'string':return stringifyBasicString(value);case'string-literal':return stringifyLiteralString(value);case'integer':return stringifyInteger(value);case'float':return stringifyFloat(value);case'boolean':return stringifyBoolean(value);case'datetime':return stringifyDatetime(value);case'array':return stringifyInlineArray(value.filter(_=>tomlType(_)!=='null'&&tomlType(_)!=='undefined'&&tomlType(_)!=='nan'));case'table':return stringifyInlineTable(value);/* istanbul ignore next */default:throw typeError(type);}}function stringifyInteger(value){/* eslint-disable security/detect-unsafe-regex */return String(value).replace(/\B(?=(\d{3})+(?!\d))/g,'_');}function stringifyFloat(value){if(value===Infinity){return'inf';}else if(value===-Infinity){return'-inf';}else if(Object.is(value,NaN)){return'nan';}else if(Object.is(value,-0)){return'-0.0';}var chunks=String(value).split('.');var int=chunks[0];var dec=chunks[1]||0;return stringifyInteger(int)+'.'+dec;}function stringifyBoolean(value){return String(value);}function stringifyDatetime(value){return value.toISOString();}function isNumber$3(type){return type==='float'||type==='integer';}function arrayType(values){var contentType=tomlType(values[0]);if(values.every(_=>tomlType(_)===contentType))return contentType;// mixed integer/float, emit as floats
if(values.every(_=>isNumber$3(tomlType(_))))return'float';return'mixed';}function validateArray(values){const type=arrayType(values);if(type==='mixed'){throw arrayOneTypeError();}return type;}function stringifyInlineArray(values){values=toJSON(values);const type=validateArray(values);var result='[';var stringified=values.map(_=>stringifyInline(_,type));if(stringified.join(', ').length>60||/\n/.test(stringified)){result+='\n  '+stringified.join(',\n  ')+'\n';}else{result+=' '+stringified.join(', ')+(stringified.length>0?' ':'');}return result+']';}function stringifyInlineTable(value){value=toJSON(value);var result=[];Object.keys(value).forEach(key=>{result.push(stringifyKey(key)+' = '+stringifyAnyInline(value[key],false));});return'{ '+result.join(', ')+(result.length>0?' ':'')+'}';}function stringifyComplex(prefix,indent,key,value){var valueType=tomlType(value);/* istanbul ignore else */if(valueType==='array'){return stringifyArrayOfTables(prefix,indent,key,value);}else if(valueType==='table'){return stringifyComplexTable(prefix,indent,key,value);}else{throw typeError(valueType);}}function stringifyArrayOfTables(prefix,indent,key,values){values=toJSON(values);validateArray(values);var firstValueType=tomlType(values[0]);/* istanbul ignore if */if(firstValueType!=='table')throw typeError(firstValueType);var fullKey=prefix+stringifyKey(key);var result='';values.forEach(table=>{if(result.length>0)result+='\n';result+=indent+'[['+fullKey+']]\n';result+=stringifyObject(fullKey+'.',indent,table);});return result;}function stringifyComplexTable(prefix,indent,key,value){var fullKey=prefix+stringifyKey(key);var result='';if(getInlineKeys(value).length>0){result+=indent+'['+fullKey+']\n';}return result+stringifyObject(fullKey+'.',indent,value);}var stringifyExports=stringify$7.exports;toml.parse=parseExports;toml.stringify=stringifyExports;var dist$2={};(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.isSpawnError=exports.normalizeError=exports.errorToString=exports.isErrorLike=exports.isErrnoException=exports.isError=exports.isObject=void 0;/**
	 * A simple type guard for objects.
	 *
	 * @param obj - A possible object
	 */const isObject=obj=>typeof obj==='object'&&obj!==null;exports.isObject=isObject;/**
	 * A type guard for `try...catch` errors.
	 *
	 * This function is based on:
	 * https://github.com/stdlib-js/assert-is-error
	 */const isError=error=>{if(!(0,exports.isObject)(error))return false;// Check for `Error` objects instantiated within the current global context.
if(error instanceof Error)return true;// Walk the prototype tree until we find a matching object.
while(error){if(Object.prototype.toString.call(error)==='[object Error]')return true;error=Object.getPrototypeOf(error);}return false;};exports.isError=isError;const isErrnoException=error=>{return(0,exports.isError)(error)&&'code'in error;};exports.isErrnoException=isErrnoException;/**
	 * A type guard for error-like objects.
	 */const isErrorLike=error=>(0,exports.isObject)(error)&&'message'in error;exports.isErrorLike=isErrorLike;/**
	 * Parses errors to string, useful for getting the error message in a
	 * `try...catch` statement.
	 */const errorToString=(error,fallback)=>{if((0,exports.isError)(error)||(0,exports.isErrorLike)(error))return error.message;if(typeof error==='string')return error;return fallback!==null&&fallback!==void 0?fallback:'An unknown error has ocurred.';};exports.errorToString=errorToString;/**
	 * Normalizes unknown errors to the Error type, useful for working with errors
	 * in a `try...catch` statement.
	 */const normalizeError=error=>{if((0,exports.isError)(error))return error;const errorMessage=(0,exports.errorToString)(error);// Copy over additional properties if the object is error-like.
return(0,exports.isErrorLike)(error)?Object.assign(new Error(errorMessage),error):new Error(errorMessage);};exports.normalizeError=normalizeError;function isSpawnError(v){return(0,exports.isErrnoException)(v)&&'spawnargs'in v;}exports.isSpawnError=isSpawnError;})(dist$2);var __importDefault$7=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(readConfigFile$1,"__esModule",{value:true});readConfigFile$1.readConfigFile=void 0;const js_yaml_1$1=__importDefault$7(jsYaml$3);const toml_1=__importDefault$7(toml);const fs_1$2=require$$0__default.default;const error_utils_1$1=dist$2;const{readFile}=fs_1$2.promises;async function readFileOrNull(file){try{const data=await readFile(file);return data;}catch(error){if(!(0,error_utils_1$1.isErrnoException)(error)){throw error;}if(error.code!=='ENOENT'){throw error;}}return null;}async function readConfigFile(files){files=Array.isArray(files)?files:[files];for(const name of files){const data=await readFileOrNull(name);if(data){const str=data.toString('utf8');if(name.endsWith('.json')){return JSON.parse(str);}else if(name.endsWith('.toml')){return toml_1.default.parse(str);}else if(name.endsWith('.yaml')||name.endsWith('.yml')){return js_yaml_1$1.default.safeLoad(str,{filename:name});}}}return null;}readConfigFile$1.readConfigFile=readConfigFile;var types$1={};Object.defineProperty(types$1,"__esModule",{value:true});(function(exports){var __createBinding=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||("get"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __exportStar=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p);};Object.defineProperty(exports,"__esModule",{value:true});exports.frameworks=void 0;const path_1=path__default.default;const fs_1=require$$0__default.default;const read_config_file_1=readConfigFile$1;__exportStar(types$1,exports);const{readdir,readFile,unlink}=fs_1.promises;/**
	 * Please note that is extremely important that the `dependency` property needs
	 * to reference a CLI. This is needed because you might want (for example) a
	 * Gatsby site that is powered by Preact, so you can't look for the `preact`
	 * dependency.  Instead, you need to look for `preact-cli` when optimizing Preact
	 * CLI projects.
	 */exports.frameworks=[{name:'Blitz.js (Legacy)',slug:'blitzjs',demo:'https://blitz-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/blitz.svg',tagline:'Blitz.js: The Fullstack React Framework',description:'A brand new Blitz.js app - the result of running `npx blitz@0.45.4 new`.',website:'https://blitzjs.com',envPrefix:'NEXT_PUBLIC_',useRuntime:{src:'package.json',use:'@vercel/next'},detectors:{some:[// Intentionally does not detect a package name
// https://github.com/vercel/vercel/pull/8432
{path:'blitz.config.js'},{path:'blitz.config.ts'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `blitz build`',value:'blitz build'},devCommand:{value:'blitz start'},outputDirectory:{placeholder:'Next.js default'}},getOutputDirName:async()=>'public'},{name:'Next.js',slug:'nextjs',demo:'https://nextjs-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/next.svg',darkModeLogo:'https://api-frameworks.vercel.sh/framework-logos/next-dark.svg',screenshot:'https://assets.vercel.com/image/upload/v1673027027/front/import/nextjs.png',tagline:'Next.js makes you productive with React instantly — whether you want to build static or dynamic sites.',description:'A Next.js app and a Serverless Function API.',website:'https://nextjs.org',sort:1,envPrefix:'NEXT_PUBLIC_',useRuntime:{src:'package.json',use:'@vercel/next'},detectors:{every:[{matchPackage:'next'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `next build`',value:'next build'},devCommand:{value:'next dev --port $PORT',placeholder:'next'},outputDirectory:{placeholder:'Next.js default'}},recommendedIntegrations:[{id:'oac_5lUsiANun1DEzgLg0NZx5Es3',dependencies:['next-plugin-sentry','next-sentry-source-maps']}],getOutputDirName:async()=>'public',cachePattern:'.next/cache/**'},{name:'Gatsby.js',slug:'gatsby',demo:'https://gatsby.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/gatsby.svg',tagline:'Gatsby helps developers build blazing fast websites and apps with React.',description:'A Gatsby starter app with an API Route.',website:'https://gatsbyjs.org',sort:5,envPrefix:'GATSBY_',detectors:{every:[{matchPackage:'gatsby'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `gatsby build`',value:'gatsby build'},devCommand:{value:'gatsby develop --port $PORT',placeholder:'gatsby develop'},outputDirectory:{value:'public'}},dependency:'gatsby',getOutputDirName:async()=>'public',defaultRoutes:async dirPrefix=>{// This file could be generated by gatsby-plugin-now or gatsby-plugin-zeit-now
try{const nowRoutesPath=(0,path_1.join)(dirPrefix,'public','__now_routes_g4t5bY.json');const content=await readFile(nowRoutesPath,'utf8');const nowRoutes=JSON.parse(content);try{await unlink(nowRoutesPath);}catch(err){// do nothing if deleting the file fails
}return nowRoutes;}catch(err){// if the file doesn't exist, we implement gatsby's recommendations
// https://www.gatsbyjs.org/docs/caching
return[{src:'^/static/(.*)$',headers:{'cache-control':'public,max-age=31536000,immutable'},continue:true},{src:'^/.*\\.(js|css)$',headers:{'cache-control':'public,max-age=31536000,immutable'},continue:true},{src:'^/(sw\\.js|app-data\\.json|.*\\.html|page-data/.*)$',headers:{'cache-control':'public,max-age=0,must-revalidate'},continue:true},{handle:'filesystem'},{src:'.*',status:404,dest:'404.html'}];}},cachePattern:'{.cache,public}/**'},{name:'Remix',slug:'remix',demo:'https://remix-run-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/remix-no-shadow.svg',tagline:'Build Better Websites',description:'A new Remix app — the result of running `npx create-remix`.',website:'https://remix.run',sort:6,useRuntime:{src:'package.json',use:'@vercel/remix-builder'},ignoreRuntimes:['@vercel/node'],detectors:{some:[{path:'remix.config.js'},{path:'remix.config.mjs'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{value:'remix build',placeholder:'`npm run build` or `remix build`'},devCommand:{value:'remix dev',placeholder:'remix dev'},outputDirectory:{value:'public'}},dependency:'remix',getOutputDirName:async()=>'public'},{name:'Astro',slug:'astro',demo:'https://astro-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/astro.svg',darkModeLogo:'https://api-frameworks.vercel.sh/framework-logos/astro-dark.svg',tagline:'Astro is a new kind of static site builder for the modern web. Powerful developer experience meets lightweight output.',description:'An Astro site, using the basics starter kit.',website:'https://astro.build',envPrefix:'PUBLIC_',detectors:{every:[{matchPackage:'astro'}]},settings:{installCommand:{placeholder:'`yarn install` or `npm install`'},buildCommand:{value:'astro build',placeholder:'`npm run build` or `astro build`'},devCommand:{value:'astro dev --port $PORT',placeholder:'astro dev'},outputDirectory:{value:'dist'}},dependency:'astro',getOutputDirName:async()=>'dist',defaultRoutes:[{src:'^/assets/(.*)$',headers:{'cache-control':'public, max-age=31536000, immutable'},continue:true},{src:'^/_astro/(.*)$',headers:{'cache-control':'public, max-age=31536000, immutable'},continue:true}]},{name:'Hexo',slug:'hexo',demo:'https://hexo-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/hexo.svg',tagline:'Hexo is a fast, simple & powerful blog framework powered by Node.js.',description:'A Hexo site, created with the Hexo CLI.',website:'https://hexo.io',detectors:{every:[{matchPackage:'hexo'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `hexo generate`',value:'hexo generate'},devCommand:{value:'hexo server --port $PORT',placeholder:'hexo server'},outputDirectory:{value:'public'}},dependency:'hexo',getOutputDirName:async()=>'public'},{name:'Eleventy',slug:'eleventy',demo:'https://eleventy-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/eleventy.svg',tagline:'11ty is a simpler static site generator written in JavaScript, created to be an alternative to Jekyll.',description:'An Eleventy site, created with npm init.',website:'https://www.11ty.dev',detectors:{every:[{matchPackage:'@11ty/eleventy'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `npx @11ty/eleventy`',value:'npx @11ty/eleventy'},devCommand:{value:'npx @11ty/eleventy --serve --watch --port $PORT',placeholder:'npx @11ty/eleventy --serve'},outputDirectory:{value:'_site'}},dependency:'@11ty/eleventy',getOutputDirName:async()=>'_site',cachePattern:'.cache/**'},{name:'Docusaurus (v2)',slug:'docusaurus-2',demo:'https://docusaurus-2-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/docusaurus.svg',tagline:'Docusaurus makes it easy to maintain Open Source documentation websites.',description:'A static Docusaurus site that makes it easy to maintain OSS documentation.',website:'https://v2.docusaurus.io',detectors:{some:[{matchPackage:'@docusaurus/core'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `docusaurus build`',value:'docusaurus build'},devCommand:{value:'docusaurus start --port $PORT',placeholder:'docusaurus start'},outputDirectory:{value:'build'}},dependency:'@docusaurus/core',getOutputDirName:async dirPrefix=>{const base='build';try{const location=(0,path_1.join)(dirPrefix,base);const content=await readdir(location,{withFileTypes:true});// If there is only one file in it that is a dir we'll use it as dist dir
if(content.length===1&&content[0].isDirectory()){return(0,path_1.join)(base,content[0].name);}}catch(error){console.error("Error detecting output directory: ",error);}return base;},defaultRoutes:[{src:'^/[^./]+\\.[0-9a-f]{8}\\.(css|js)$',headers:{'cache-control':'max-age=31536000, immutable'},continue:true},{src:'^/assets/images/[^/]+-[0-9a-f]{32}\\.(ico|svg|jpg|jpeg|png|gif|webp)$',headers:{'cache-control':'max-age=31536000, immutable'},continue:true},{src:'^/assets/medias/[^/]+-[0-9a-f]{32}\\.(ogv|wav|mp3|m4a|aac|oga|flac)$',headers:{'cache-control':'max-age=31536000, immutable'},continue:true},{src:'^/assets/files/[^/]+-[0-9a-f]{32}\\.(pdf|doc|docx|xls|xlsx|zip|rar)$',headers:{'cache-control':'max-age=31536000, immutable'},continue:true},{src:'^/ideal-img/[^/]+\\.[0-9a-f]{7}\\.\\d+\\.(png|jpe?g|gif)$',headers:{'cache-control':'max-age=31536000, immutable'},continue:true},{handle:'filesystem'},{src:'.*',status:404,dest:'404.html'}]},{name:'Docusaurus (v1)',slug:'docusaurus',demo:'https://docusaurus-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/docusaurus.svg',tagline:'Docusaurus makes it easy to maintain Open Source documentation websites.',description:'A static Docusaurus site that makes it easy to maintain OSS documentation.',website:'https://docusaurus.io/',detectors:{some:[{matchPackage:'docusaurus'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `docusaurus-build`',value:'docusaurus-build'},devCommand:{value:'docusaurus-start --port $PORT',placeholder:'docusaurus-start'},outputDirectory:{value:'build'}},dependency:'docusaurus',getOutputDirName:async dirPrefix=>{const base='build';try{const location=(0,path_1.join)(dirPrefix,base);const content=await readdir(location,{withFileTypes:true});// If there is only one file in it that is a dir we'll use it as dist dir
if(content.length===1&&content[0].isDirectory()){return(0,path_1.join)(base,content[0].name);}}catch(error){console.error("Error detecting output directory: ",error);}return base;}},{name:'Preact',slug:'preact',demo:'https://preact-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/preact.svg',tagline:'Preact is a fast 3kB alternative to React with the same modern API.',description:'A Preact app, created with the Preact CLI.',website:'https://preactjs.com',detectors:{every:[// Intentionally does not detect "preact" package because that can be
// used to power other frameworks.
{matchPackage:'preact-cli'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `preact build`',value:'preact build'},devCommand:{value:'preact watch --port $PORT',placeholder:'preact watch'},outputDirectory:{value:'build'}},dependency:'preact-cli',getOutputDirName:async()=>'build',defaultRoutes:[{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{name:'SolidStart',slug:'solidstart',demo:'https://solid-start-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/solid.svg',tagline:'Simple and performant reactivity for building user interfaces.',description:'A Solid app, created with SolidStart.',website:'https://solidjs.com',envPrefix:'VITE_',detectors:{every:[{matchPackage:'solid-js'},{matchPackage:'solid-start'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `solid-start build`',value:'solid-start build'},devCommand:{value:'solid-start dev'},outputDirectory:{value:'.output'}},getOutputDirName:async()=>'.output'},{name:'Dojo',slug:'dojo',demo:'https://dojo-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/dojo.png',tagline:'Dojo is a modern progressive, TypeScript first framework.',description:"A Dojo app, created with the Dojo CLI's cli-create-app command.",website:'https://dojo.io',detectors:{some:[{matchPackage:'@dojo/framework'},{path:'.dojorc'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `dojo build`',value:'dojo build'},devCommand:{value:'dojo build -m dev -w -s -p $PORT',placeholder:'dojo build -m dev -w -s'},outputDirectory:{value:'output/dist'}},dependency:'@dojo/cli',getOutputDirName:async()=>(0,path_1.join)('output','dist'),defaultRoutes:[{handle:'filesystem'},{src:'/service-worker.js',headers:{'cache-control':'s-maxage=0'},continue:true},{src:'/(.*)',dest:'/index.html'}],defaulHeaders:[{source:'/service-worker.js',regex:'/service-worker.js',headers:{'cache-control':'s-maxage=0'},continue:true}]},{name:'Ember.js',slug:'ember',demo:'https://ember-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/ember.svg',tagline:'Ember.js helps webapp developers be more productive out of the box.',description:'An Ember app, created with the Ember CLI.',website:'https://emberjs.com/',detectors:{some:[{matchPackage:'ember-source'},{matchPackage:'ember-cli'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `ember build`',value:'ember build'},devCommand:{value:'ember serve --port $PORT',placeholder:'ember serve'},outputDirectory:{value:'dist'}},dependency:'ember-cli',getOutputDirName:async()=>'dist',defaultRoutes:[{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{name:'Vue.js',slug:'vue',demo:'https://vue-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/vue.svg',tagline:'Vue.js is a versatile JavaScript framework that is as approachable as it is performant.',description:'A Vue.js app, created with the Vue CLI.',website:'https://vuejs.org',envPrefix:'VUE_APP_',detectors:{every:[{matchPackage:'@vue/cli-service'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `vue-cli-service build`',value:'vue-cli-service build'},devCommand:{value:'vue-cli-service serve --port $PORT',placeholder:'vue-cli-service serve'},outputDirectory:{value:'dist'}},dependency:'@vue/cli-service',getOutputDirName:async()=>'dist',defaultRoutes:[{src:'^/[^/]*\\.(js|txt|ico|json)',headers:{'cache-control':'max-age=300'},continue:true},{src:'^/(img|js|css|fonts|media)/[^/]+\\.[0-9a-f]{8}\\.*',headers:{'cache-control':'max-age=31536000, immutable'},continue:true},{handle:'filesystem'},{src:'^.*',dest:'/index.html'}]},{name:'Scully',slug:'scully',demo:'https://scully-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/scullyio-logo.png',tagline:'Scully is a static site generator for Angular.',description:'The Static Site Generator for Angular apps.',website:'https://github.com/scullyio/scully',detectors:{every:[{matchPackage:'@scullyio/init'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `ng build && scully`',value:'ng build && scully'},devCommand:{value:'ng serve --port $PORT',placeholder:'ng serve'},outputDirectory:{value:'dist'}},dependency:'@scullyio/init',getOutputDirName:async()=>'dist/static'},{name:'Ionic Angular',slug:'ionic-angular',demo:'https://ionic-angular-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/ionic.svg',tagline:'Ionic Angular allows you to build mobile PWAs with Angular and the Ionic Framework.',description:'An Ionic Angular site, created with the Ionic CLI.',website:'https://ionicframework.com',detectors:{every:[{matchPackage:'@ionic/angular'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `ng build`',value:'ng build'},devCommand:{value:'ng serve --port $PORT'},outputDirectory:{value:'www'}},dependency:'@ionic/angular',getOutputDirName:async()=>'www',defaultRoutes:[{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{name:'Angular',slug:'angular',demo:'https://angular-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/angular.svg',tagline:'Angular is a TypeScript-based cross-platform framework from Google.',description:'An Angular app, created with the Angular CLI.',website:'https://angular.io',detectors:{every:[{matchPackage:'@angular/cli'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `ng build`',value:'ng build'},devCommand:{value:'ng serve --port $PORT',placeholder:'ng serve'},outputDirectory:{value:'dist'}},dependency:'@angular/cli',getOutputDirName:async dirPrefix=>{const base='dist';try{const location=(0,path_1.join)(dirPrefix,base);const content=await readdir(location,{withFileTypes:true});// If there is only one file in it that is a dir we'll use it as dist dir
if(content.length===1&&content[0].isDirectory()){return(0,path_1.join)(base,content[0].name);}}catch(error){console.error("Error detecting output directory: ",error);}return base;},defaultRoutes:[{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{name:'Polymer',slug:'polymer',demo:'https://polymer-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/polymer.svg',tagline:'Polymer is an open-source webapps library from Google, for building using Web Components.',description:'A Polymer app, created with the Polymer CLI.',website:'https://www.polymer-project.org/',detectors:{every:[{matchPackage:'polymer-cli'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `polymer build`',value:'polymer build'},devCommand:{value:'polymer serve --port $PORT',placeholder:'polymer serve'},outputDirectory:{value:'build'}},dependency:'polymer-cli',getOutputDirName:async dirPrefix=>{const base='build';try{const location=(0,path_1.join)(dirPrefix,base);const content=await readdir(location);const paths=content.filter(item=>!item.includes('.'));return(0,path_1.join)(base,paths[0]);}catch(error){console.error("Error detecting output directory: ",error);}return base;},defaultRoutes:[{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{name:'Svelte',slug:'svelte',demo:'https://svelte.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/svelte.svg',tagline:'Svelte lets you write high performance reactive apps with significantly less boilerplate.',description:'A basic Svelte app using the default template.',website:'https://svelte.dev',sort:3,detectors:{every:[{matchPackage:'svelte'},{matchPackage:'sirv-cli'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `rollup -c`',value:'rollup -c'},devCommand:{value:'rollup -c -w'},outputDirectory:{value:'public'}},dependency:'sirv-cli',getOutputDirName:async()=>'public',defaultRoutes:[{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{// TODO: fix detected as "sveltekit-1"
name:'SvelteKit (v0)',slug:'sveltekit',demo:'https://sveltekit-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/svelte.svg',screenshot:'https://assets.vercel.com/image/upload/v1647366075/front/import/sveltekit.png',tagline:'SvelteKit is a framework for building web applications of all sizes.',description:'A SvelteKit legacy app optimized Edge-first.',website:'https://kit.svelte.dev',sort:99,envPrefix:'VITE_',detectors:{every:[{path:'package.json',matchContent:'"(dev)?(d|D)ependencies":\\s*{[^}]*"@sveltejs\\/kit":\\s*"1\\.0\\.0-next\\.(\\d+)"[^}]*}'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `svelte-kit build`',value:'svelte-kit build'},devCommand:{value:'svelte-kit dev --port $PORT',placeholder:'svelte-kit dev'},outputDirectory:{value:'public'}},getOutputDirName:async()=>'public'},{name:'SvelteKit (v1)',slug:'sveltekit-1',demo:'https://sveltekit-1-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/svelte.svg',screenshot:'https://assets.vercel.com/image/upload/v1647366075/front/import/sveltekit.png',tagline:'SvelteKit is a framework for building web applications of all sizes.',description:'A SvelteKit app optimized Edge-first.',website:'https://kit.svelte.dev',detectors:{every:[{path:'package.json',matchContent:'"(dev)?(d|D)ependencies":\\s*{[^}]*"@sveltejs\\/kit":\\s*".+?"[^}]*}'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'vite build',value:'vite build'},devCommand:{placeholder:'vite dev',value:'vite dev --port $PORT'},outputDirectory:{value:'public'}},getOutputDirName:async()=>'public'},{name:'Ionic React',slug:'ionic-react',demo:'https://ionic-react-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/ionic.svg',tagline:'Ionic React allows you to build mobile PWAs with React and the Ionic Framework.',description:'An Ionic React site, created with the Ionic CLI.',website:'https://ionicframework.com',detectors:{every:[{matchPackage:'@ionic/react'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `react-scripts build`',value:'react-scripts build'},devCommand:{value:'react-scripts start'},outputDirectory:{value:'build'}},dependency:'@ionic/react',getOutputDirName:async()=>'build',defaultRoutes:[{src:'/static/(.*)',headers:{'cache-control':'s-maxage=31536000, immutable'},continue:true},{src:'/service-worker.js',headers:{'cache-control':'s-maxage=0'},continue:true},{src:'/sockjs-node/(.*)',dest:'/sockjs-node/$1'},{handle:'filesystem'},{src:'/static/(.*)',status:404,dest:'/404.html'},{src:'/(.*)',headers:{'cache-control':'s-maxage=0'},dest:'/index.html'}]},{name:'Create React App',slug:'create-react-app',demo:'https://create-react-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/react.svg',tagline:'Create React App allows you to get going with React in no time.',description:'A client-side React app created with create-react-app.',website:'https://create-react-app.dev',sort:4,envPrefix:'REACT_APP_',detectors:{some:[{matchPackage:'react-scripts'},{matchPackage:'react-dev-utils'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `react-scripts build`',value:'react-scripts build'},devCommand:{value:'react-scripts start'},outputDirectory:{value:'build'}},dependency:'react-scripts',getOutputDirName:async()=>'build',defaultRoutes:[{src:'/static/(.*)',headers:{'cache-control':'s-maxage=31536000, immutable'},continue:true},{src:'/service-worker.js',headers:{'cache-control':'s-maxage=0'},continue:true},{src:'/sockjs-node/(.*)',dest:'/sockjs-node/$1'},{handle:'filesystem'},{src:'/static/(.*)',status:404,dest:'/404.html'},{src:'/(.*)',headers:{'cache-control':'s-maxage=0'},dest:'/index.html'}]},{name:'Gridsome',slug:'gridsome',demo:'https://gridsome-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/gridsome.svg',tagline:'Gridsome is a Vue.js-powered framework for building websites & apps that are fast by default.',description:'A Gridsome app, created with the Gridsome CLI.',website:'https://gridsome.org/',detectors:{every:[{matchPackage:'gridsome'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `gridsome build`',value:'gridsome build'},devCommand:{value:'gridsome develop -p $PORT',placeholder:'gridsome develop'},outputDirectory:{value:'dist'}},dependency:'gridsome',getOutputDirName:async()=>'dist'},{name:'UmiJS',slug:'umijs',demo:'https://umijs-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/umi.svg',tagline:'UmiJS is an extensible enterprise-level React application framework.',description:'An UmiJS app, created using the Umi CLI.',website:'https://umijs.org',detectors:{every:[{matchPackage:'umi'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `umi build`',value:'umi build'},devCommand:{value:'umi dev --port $PORT',placeholder:'umi dev'},outputDirectory:{value:'dist'}},dependency:'umi',getOutputDirName:async()=>'dist',defaultRoutes:[{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{name:'Sapper',slug:'sapper',demo:'https://sapper-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/svelte.svg',tagline:'Sapper is a framework for building high-performance universal web apps with Svelte.',description:'A Sapper app, using the Sapper template.',website:'https://sapper.svelte.dev',detectors:{every:[{matchPackage:'sapper'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `sapper export`',value:'sapper export'},devCommand:{value:'sapper dev --port $PORT',placeholder:'sapper dev'},outputDirectory:{value:'__sapper__/export'}},dependency:'sapper',getOutputDirName:async()=>'__sapper__/export'},{name:'Saber',slug:'saber',demo:'https://saber-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/saber.svg',tagline:'Saber is a framework for building static sites in Vue.js that supports data from any source.',description:'A Saber site, created with npm init.',website:'https://saber.egoist.dev',detectors:{every:[{matchPackage:'saber'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `saber build`',value:'saber build'},devCommand:{value:'saber --port $PORT',placeholder:'saber'},outputDirectory:{value:'public'}},dependency:'saber',getOutputDirName:async()=>'public',defaultRoutes:[{src:'/_saber/.*',headers:{'cache-control':'max-age=31536000, immutable'}},{handle:'filesystem'},{src:'.*',status:404,dest:'404.html'}]},{name:'Stencil',slug:'stencil',demo:'https://stencil.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/stencil.svg',tagline:'Stencil is a powerful toolchain for building Progressive Web Apps and Design Systems.',description:'A Stencil site, created with the Stencil CLI.',website:'https://stenciljs.com/',detectors:{every:[{matchPackage:'@stencil/core'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `stencil build`',value:'stencil build'},devCommand:{value:'stencil build --dev --watch --serve --port $PORT',placeholder:'stencil build --dev --watch --serve'},outputDirectory:{value:'www'}},dependency:'@stencil/core',getOutputDirName:async()=>'www',defaultRoutes:[{src:'/assets/(.*)',headers:{'cache-control':'max-age=2592000'},continue:true},{src:'/build/p-.*',headers:{'cache-control':'max-age=31536000, immutable'},continue:true},{src:'/sw.js',headers:{'cache-control':'no-cache'},continue:true},{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{name:'Nuxt.js',slug:'nuxtjs',demo:'https://nuxtjs-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/nuxt.svg',screenshot:'https://assets.vercel.com/image/upload/v1647366075/front/import/nuxtjs.png',tagline:'Nuxt.js is the web comprehensive framework that lets you dream big with Vue.js.',description:'A Nuxt.js app, bootstrapped with create-nuxt-app.',website:'https://nuxtjs.org',sort:2,envPrefix:'NUXT_ENV_',detectors:{some:[{matchPackage:'nuxt'},{matchPackage:'nuxt3'},{matchPackage:'nuxt-edge'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `nuxt generate`',value:'nuxt generate'},devCommand:{value:'nuxt'},outputDirectory:{value:'dist'}},dependency:'nuxt',getOutputDirName:async()=>'dist',cachePattern:'.nuxt/**',defaultRoutes:[{src:'/sw.js',headers:{'cache-control':'no-cache'},continue:true},{src:'/_nuxt/(.*)',headers:{'cache-control':'public,max-age=31536000,immutable'},continue:true},{handle:'filesystem'},{src:'/(.*)',dest:'/200.html'}]},{name:'RedwoodJS',slug:'redwoodjs',demo:'https://redwood-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/redwoodjs.svg',tagline:'RedwoodJS is a full-stack framework for the Jamstack.',description:'A RedwoodJS app, bootstraped with create-redwood-app.',website:'https://redwoodjs.com',envPrefix:'REDWOOD_ENV_',useRuntime:{src:'package.json',use:'@vercel/redwood'},ignoreRuntimes:['@vercel/node'],detectors:{every:[{matchPackage:'@redwoodjs/core'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{value:'yarn rw deploy vercel'},devCommand:{value:'yarn rw dev --fwd="--port=$PORT --open=false"',placeholder:'yarn rw dev'},outputDirectory:{placeholder:'RedwoodJS default'}},getOutputDirName:async()=>'public'},{name:'Hugo',slug:'hugo',demo:'https://hugo-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/hugo.svg',tagline:'Hugo is the world’s fastest framework for building websites, written in Go.',description:'A Hugo site, created with the Hugo CLI.',website:'https://gohugo.io',detectors:{some:[{path:'config.yaml',matchContent:'baseURL'},{path:'config.toml',matchContent:'baseURL'},{path:'config.json',matchContent:'baseURL'}]},settings:{installCommand:{placeholder:'None'},buildCommand:{placeholder:'`npm run build` or `hugo --gc`',value:'hugo --gc'},devCommand:{value:'hugo server -D -w -p $PORT',placeholder:'hugo server -D'},outputDirectory:{placeholder:'`public` or `publishDir` from the `config` file'}},getOutputDirName:async dirPrefix=>{const config=await(0,read_config_file_1.readConfigFile)(['config.json','config.yaml','config.toml'].map(fileName=>{return(0,path_1.join)(dirPrefix,fileName);}));return config&&config.publishDir||'public';},defaultVersion:'0.58.2'// Must match the build image
},{name:'Jekyll',slug:'jekyll',demo:'https://jekyll-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/jekyll.svg',tagline:'Jekyll makes it super easy to transform your plain text into static websites and blogs.',description:'A Jekyll site, created with the Jekyll CLI.',website:'https://jekyllrb.com/',detectors:{every:[{path:'_config.yml'}]},settings:{installCommand:{value:'bundle install'},buildCommand:{placeholder:'`npm run build` or `jekyll build`',value:'jekyll build'},devCommand:{value:'bundle exec jekyll serve --watch --port $PORT',placeholder:'bundle exec jekyll serve'},outputDirectory:{placeholder:'`_site` or `destination` from `_config.yml`'}},getOutputDirName:async dirPrefix=>{const config=await(0,read_config_file_1.readConfigFile)((0,path_1.join)(dirPrefix,'_config.yml'));return config&&config.destination||'_site';},cachePattern:'{vendor/bin,vendor/cache,vendor/bundle}/**'},{name:'Brunch',slug:'brunch',demo:'https://brunch-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/brunch.svg',tagline:'Brunch is a fast and simple webapp build tool with seamless incremental compilation for rapid development.',description:'A Brunch app, created with the Brunch CLI.',website:'https://brunch.io/',detectors:{some:[{matchPackage:'brunch'},{path:'brunch-config.js'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `brunch build --production`',value:'brunch build --production'},devCommand:{value:'brunch watch --server --port $PORT',placeholder:'brunch watch --server'},outputDirectory:{value:'public'}},getOutputDirName:async()=>'public'},{name:'Middleman',slug:'middleman',demo:'https://middleman-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/middleman.svg',tagline:'Middleman is a static site generator that uses all the shortcuts and tools in modern web development.',description:'A Middleman app, created with the Middleman CLI.',website:'https://middlemanapp.com/',detectors:{every:[{path:'config.rb'}]},settings:{installCommand:{value:'bundle install'},buildCommand:{placeholder:'`npm run build` or `bundle exec middleman build`',value:'bundle exec middleman build'},devCommand:{placeholder:'bundle exec middleman server',value:'bundle exec middleman server -p $PORT'},outputDirectory:{value:'build'}},getOutputDirName:async()=>'build',cachePattern:'{vendor/bin,vendor/cache,vendor/bundle}/**'},{name:'Zola',slug:'zola',demo:'https://zola-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/zola.png',tagline:'Everything you need to make a static site engine in one binary.',description:'A Zola app, created with the "Getting Started" tutorial.',website:'https://www.getzola.org',detectors:{every:[{path:'config.toml',matchContent:'base_url'}]},settings:{installCommand:{placeholder:'None'},buildCommand:{value:'zola build'},devCommand:{placeholder:'zola serve',value:'zola serve --port $PORT'},outputDirectory:{value:'public'}},getOutputDirName:async()=>'public',defaultVersion:'0.13.0'// Must match the build image
},{name:'Hydrogen (v1)',slug:'hydrogen',demo:'https://hydrogen-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/hydrogen.svg',tagline:'React framework for headless commerce',description:'React framework for headless commerce',website:'https://hydrogen.shopify.dev',useRuntime:{src:'package.json',use:'@vercel/hydrogen'},envPrefix:'PUBLIC_',detectors:{some:[{matchPackage:'@shopify/hydrogen'},{path:'hydrogen.config.js'},{path:'hydrogen.config.ts'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{value:'shopify hydrogen build',placeholder:'`npm run build` or `shopify hydrogen build`'},devCommand:{value:'shopify hydrogen dev',placeholder:'shopify hydrogen dev'},outputDirectory:{value:'dist'}},dependency:'@shopify/hydrogen',getOutputDirName:async()=>'dist'},{name:'Vite',slug:'vite',demo:'https://vite-vue-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/vite.svg',tagline:'Vite is a new breed of frontend build tool that significantly improves the frontend development experience.',description:'A Vue.js app, created with Vite.',website:'https://vitejs.dev',envPrefix:'VITE_',detectors:{every:[{matchPackage:'vite'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `vite build`',value:'vite build'},devCommand:{placeholder:'vite',value:'vite --port $PORT'},outputDirectory:{value:'dist'}},dependency:'vite',getOutputDirName:async()=>'dist'},{name:'VitePress',slug:'vitepress',demo:'https://vitepress-starter-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/vite.svg',tagline:"VitePress is VuePress' little brother, built on top of Vite.",description:'VuePress on top of Vite',website:'https://vitepress.vuejs.org/',detectors:{every:[{matchPackage:'vitepress'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `vitepress build docs`',value:'vitepress build docs'},devCommand:{value:'vitepress dev docs --port $PORT'},outputDirectory:{value:'docs/.vitepress/dist'}},getOutputDirName:async()=>'docs/.vitepress/dist'},{name:'VuePress',slug:'vuepress',demo:'https://vuepress-starter-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/vuepress.png',tagline:'Vue-powered Static Site Generator',description:'Vue-powered Static Site Generator',website:'https://vuepress.vuejs.org/',detectors:{every:[{matchPackage:'vuepress'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `vuepress build src`',value:'vuepress build src'},devCommand:{value:'vuepress dev src --port $PORT'},outputDirectory:{value:'src/.vuepress/dist'}},getOutputDirName:async()=>'src/.vuepress/dist'},{name:'Parcel',slug:'parcel',demo:'https://parcel-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/parcel.png',tagline:'Parcel is a zero configuration build tool for the web that scales to projects of any size and complexity.',description:'A vanilla web app built with Parcel.',website:'https://parceljs.org',detectors:{every:[{matchPackage:'parcel'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `parcel build`',value:'parcel build'},devCommand:{placeholder:'parcel',value:'parcel'},outputDirectory:{value:'dist'}},dependency:'parcel',getOutputDirName:async()=>'dist',defaultRoutes:[{src:'^/[^./]+\\.[0-9a-f]{8}\\.(css|js|png|jpg|webp|avif|svg)$',headers:{'cache-control':'s-maxage=31536000, immutable'},continue:true},{handle:'filesystem'}]},{name:'Sanity',slug:'sanity',demo:'https://sanity-studio-template.vercel.app',logo:'https://api-frameworks.vercel.sh/framework-logos/sanity.svg',tagline:'The structured content platform.',description:'A Sanity Studio',website:'https://www.sanity.io',envPrefix:'SANITY_STUDIO_',detectors:{some:[{path:'sanity.json'},{path:'sanity.config.js'},{path:'sanity.config.jsx'},{path:'sanity.config.ts'},{path:'sanity.config.tsx'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run build` or `sanity build`',value:'sanity build'},devCommand:{value:'sanity start --port $PORT'},outputDirectory:{value:'dist'}},dependency:'@sanity/cli',getOutputDirName:async()=>'dist',defaultRoutes:[{handle:'filesystem'},{src:'/(.*)',dest:'/index.html'}]},{name:'Storybook',slug:'storybook',logo:'https://api-frameworks.vercel.sh/framework-logos/storybook.svg',tagline:'Frontend workshop for UI development',description:'Storybook is a frontend workshop for building UI components and pages in isolation.',website:'https://storybook.js.org',ignoreRuntimes:['@vercel/next','@vercel/node'],disableRootMiddleware:true,detectors:{every:[{matchPackage:'storybook'}]},settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{value:'storybook build',ignorePackageJsonScript:true},devCommand:{value:"storybook dev -p $PORT"},outputDirectory:{value:'storybook-static'}},getOutputDirName:async()=>'storybook-static'},{name:'Other',slug:null,logo:'https://api-frameworks.vercel.sh/framework-logos/other.svg',description:'No framework or an unoptimized framework.',settings:{installCommand:{placeholder:'`yarn install`, `pnpm install`, or `npm install`'},buildCommand:{placeholder:'`npm run vercel-build` or `npm run build`',value:null},devCommand:{placeholder:'None',value:null},outputDirectory:{placeholder:'`public` if it exists, or `.`'}},getOutputDirName:async()=>'public'}];const def=exports.frameworks;exports.default=def;})(frameworks);var dist$1={};var detectBuilders$1={};var concatMap$3=function(xs,fn){var res=[];for(var i=0;i<xs.length;i++){var x=fn(xs[i],i);if(isArray$3(x))res.push.apply(res,x);else res.push(x);}return res;};var isArray$3=Array.isArray||function(xs){return Object.prototype.toString.call(xs)==='[object Array]';};var balancedMatch=balanced$2;function balanced$2(a,b,str){if(a instanceof RegExp)a=maybeMatch(a,str);if(b instanceof RegExp)b=maybeMatch(b,str);var r=range$1(a,b,str);return r&&{start:r[0],end:r[1],pre:str.slice(0,r[0]),body:str.slice(r[0]+a.length,r[1]),post:str.slice(r[1]+b.length)};}function maybeMatch(reg,str){var m=str.match(reg);return m?m[0]:null;}balanced$2.range=range$1;function range$1(a,b,str){var begs,beg,left,right,result;var ai=str.indexOf(a);var bi=str.indexOf(b,ai+1);var i=ai;if(ai>=0&&bi>0){if(a===b){return[ai,bi];}begs=[];left=str.length;while(i>=0&&!result){if(i==ai){begs.push(i);ai=str.indexOf(a,i+1);}else if(begs.length==1){result=[begs.pop(),bi];}else{beg=begs.pop();if(beg<left){left=beg;right=bi;}bi=str.indexOf(b,i+1);}i=ai<bi&&ai>=0?ai:bi;}if(begs.length){result=[left,right];}}return result;}var concatMap$2=concatMap$3;var balanced$1=balancedMatch;var braceExpansion$1=expandTop$1;var escSlash$1='\0SLASH'+Math.random()+'\0';var escOpen$1='\0OPEN'+Math.random()+'\0';var escClose$1='\0CLOSE'+Math.random()+'\0';var escComma$1='\0COMMA'+Math.random()+'\0';var escPeriod$1='\0PERIOD'+Math.random()+'\0';function numeric$1(str){return parseInt(str,10)==str?parseInt(str,10):str.charCodeAt(0);}function escapeBraces$1(str){return str.split('\\\\').join(escSlash$1).split('\\{').join(escOpen$1).split('\\}').join(escClose$1).split('\\,').join(escComma$1).split('\\.').join(escPeriod$1);}function unescapeBraces$1(str){return str.split(escSlash$1).join('\\').split(escOpen$1).join('{').split(escClose$1).join('}').split(escComma$1).join(',').split(escPeriod$1).join('.');}// Basically just str.split(","), but handling cases
// where we have nested braced sections, which should be
// treated as individual members, like {a,{b,c},d}
function parseCommaParts$1(str){if(!str)return[''];var parts=[];var m=balanced$1('{','}',str);if(!m)return str.split(',');var pre=m.pre;var body=m.body;var post=m.post;var p=pre.split(',');p[p.length-1]+='{'+body+'}';var postParts=parseCommaParts$1(post);if(post.length){p[p.length-1]+=postParts.shift();p.push.apply(p,postParts);}parts.push.apply(parts,p);return parts;}function expandTop$1(str){if(!str)return[];// I don't know why Bash 4.3 does this, but it does.
// Anything starting with {} will have the first two bytes preserved
// but *only* at the top level, so {},a}b will not expand to anything,
// but a{},b}c will be expanded to [a}c,abc].
// One could argue that this is a bug in Bash, but since the goal of
// this module is to match Bash's rules, we escape a leading {}
if(str.substr(0,2)==='{}'){str='\\{\\}'+str.substr(2);}return expand$7(escapeBraces$1(str),true).map(unescapeBraces$1);}function embrace$1(str){return'{'+str+'}';}function isPadded$1(el){return /^-?0\d/.test(el);}function lte$1(i,y){return i<=y;}function gte$1(i,y){return i>=y;}function expand$7(str,isTop){var expansions=[];var m=balanced$1('{','}',str);if(!m||/\$$/.test(m.pre))return[str];var isNumericSequence=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);var isAlphaSequence=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);var isSequence=isNumericSequence||isAlphaSequence;var isOptions=m.body.indexOf(',')>=0;if(!isSequence&&!isOptions){// {a},b}
if(m.post.match(/,.*\}/)){str=m.pre+'{'+m.body+escClose$1+m.post;return expand$7(str);}return[str];}var n;if(isSequence){n=m.body.split(/\.\./);}else{n=parseCommaParts$1(m.body);if(n.length===1){// x{{a,b}}y ==> x{a}y x{b}y
n=expand$7(n[0],false).map(embrace$1);if(n.length===1){var post=m.post.length?expand$7(m.post,false):[''];return post.map(function(p){return m.pre+n[0]+p;});}}}// at this point, n is the parts, and we know it's not a comma set
// with a single entry.
// no need to expand pre, since it is guaranteed to be free of brace-sets
var pre=m.pre;var post=m.post.length?expand$7(m.post,false):[''];var N;if(isSequence){var x=numeric$1(n[0]);var y=numeric$1(n[1]);var width=Math.max(n[0].length,n[1].length);var incr=n.length==3?Math.abs(numeric$1(n[2])):1;var test=lte$1;var reverse=y<x;if(reverse){incr*=-1;test=gte$1;}var pad=n.some(isPadded$1);N=[];for(var i=x;test(i,y);i+=incr){var c;if(isAlphaSequence){c=String.fromCharCode(i);if(c==='\\')c='';}else{c=String(i);if(pad){var need=width-c.length;if(need>0){var z=new Array(need+1).join('0');if(i<0)c='-'+z+c.slice(1);else c=z+c;}}}N.push(c);}}else{N=concatMap$2(n,function(el){return expand$7(el,false);});}for(var j=0;j<N.length;j++){for(var k=0;k<post.length;k++){var expansion=pre+N[j]+post[k];if(!isTop||isSequence||expansion)expansions.push(expansion);}}return expansions;}var minimatch_1$2=minimatch$2;minimatch$2.Minimatch=Minimatch$2;var path$j=function(){try{return require('path');}catch(e){}}()||{sep:'/'};minimatch$2.sep=path$j.sep;var GLOBSTAR$1=minimatch$2.GLOBSTAR=Minimatch$2.GLOBSTAR={};var expand$6=braceExpansion$1;var plTypes$1={'!':{open:'(?:(?!(?:',close:'))[^/]*?)'},'?':{open:'(?:',close:')?'},'+':{open:'(?:',close:')+'},'*':{open:'(?:',close:')*'},'@':{open:'(?:',close:')'}};// any single thing other than /
// don't need to escape / when using new RegExp()
var qmark$1='[^/]';// * => any number of characters
var star$2=qmark$1+'*?';// ** when dots are allowed.  Anything goes, except .. and .
// not (^ or / followed by one or two dots followed by $ or /),
// followed by anything, any number of times.
var twoStarDot$1='(?:(?!(?:\\\/|^)(?:\\.{1,2})($|\\\/)).)*?';// not a ^ or / followed by a dot,
// followed by anything, any number of times.
var twoStarNoDot$1='(?:(?!(?:\\\/|^)\\.).)*?';// characters that need to be escaped in RegExp.
var reSpecials$1=charSet$1('().*{}+?[]^$\\!');// "abc" -> { a:true, b:true, c:true }
function charSet$1(s){return s.split('').reduce(function(set,c){set[c]=true;return set;},{});}// normalizes slashes.
var slashSplit$1=/\/+/;minimatch$2.filter=filter$2;function filter$2(pattern,options){options=options||{};return function(p,i,list){return minimatch$2(p,pattern,options);};}function ext$1(a,b){b=b||{};var t={};Object.keys(a).forEach(function(k){t[k]=a[k];});Object.keys(b).forEach(function(k){t[k]=b[k];});return t;}minimatch$2.defaults=function(def){if(!def||typeof def!=='object'||!Object.keys(def).length){return minimatch$2;}var orig=minimatch$2;var m=function minimatch(p,pattern,options){return orig(p,pattern,ext$1(def,options));};m.Minimatch=function Minimatch(pattern,options){return new orig.Minimatch(pattern,ext$1(def,options));};m.Minimatch.defaults=function defaults(options){return orig.defaults(ext$1(def,options)).Minimatch;};m.filter=function filter(pattern,options){return orig.filter(pattern,ext$1(def,options));};m.defaults=function defaults(options){return orig.defaults(ext$1(def,options));};m.makeRe=function makeRe(pattern,options){return orig.makeRe(pattern,ext$1(def,options));};m.braceExpand=function braceExpand(pattern,options){return orig.braceExpand(pattern,ext$1(def,options));};m.match=function(list,pattern,options){return orig.match(list,pattern,ext$1(def,options));};return m;};Minimatch$2.defaults=function(def){return minimatch$2.defaults(def).Minimatch;};function minimatch$2(p,pattern,options){assertValidPattern$1(pattern);if(!options)options={};// shortcut: comments match nothing.
if(!options.nocomment&&pattern.charAt(0)==='#'){return false;}return new Minimatch$2(pattern,options).match(p);}function Minimatch$2(pattern,options){if(!(this instanceof Minimatch$2)){return new Minimatch$2(pattern,options);}assertValidPattern$1(pattern);if(!options)options={};pattern=pattern.trim();// windows support: need to use /, not \
if(!options.allowWindowsEscape&&path$j.sep!=='/'){pattern=pattern.split(path$j.sep).join('/');}this.options=options;this.set=[];this.pattern=pattern;this.regexp=null;this.negate=false;this.comment=false;this.empty=false;this.partial=!!options.partial;// make the set of regexps etc.
this.make();}Minimatch$2.prototype.debug=function(){};Minimatch$2.prototype.make=make;function make(){var pattern=this.pattern;var options=this.options;// empty patterns and comments match nothing.
if(!options.nocomment&&pattern.charAt(0)==='#'){this.comment=true;return;}if(!pattern){this.empty=true;return;}// step 1: figure out negation, etc.
this.parseNegate();// step 2: expand braces
var set=this.globSet=this.braceExpand();if(options.debug)this.debug=function debug(){console.error.apply(console,arguments);};this.debug(this.pattern,set);// step 3: now we have a set, so turn each one into a series of path-portion
// matching patterns.
// These will be regexps, except in the case of "**", which is
// set to the GLOBSTAR object for globstar behavior,
// and will not contain any / characters
set=this.globParts=set.map(function(s){return s.split(slashSplit$1);});this.debug(this.pattern,set);// glob --> regexps
set=set.map(function(s,si,set){return s.map(this.parse,this);},this);this.debug(this.pattern,set);// filter out everything that didn't compile properly.
set=set.filter(function(s){return s.indexOf(false)===-1;});this.debug(this.pattern,set);this.set=set;}Minimatch$2.prototype.parseNegate=parseNegate;function parseNegate(){var pattern=this.pattern;var negate=false;var options=this.options;var negateOffset=0;if(options.nonegate)return;for(var i=0,l=pattern.length;i<l&&pattern.charAt(i)==='!';i++){negate=!negate;negateOffset++;}if(negateOffset)this.pattern=pattern.substr(negateOffset);this.negate=negate;}// Brace expansion:
// a{b,c}d -> abd acd
// a{b,}c -> abc ac
// a{0..3}d -> a0d a1d a2d a3d
// a{b,c{d,e}f}g -> abg acdfg acefg
// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg
//
// Invalid sets are not expanded.
// a{2..}b -> a{2..}b
// a{b}c -> a{b}c
minimatch$2.braceExpand=function(pattern,options){return braceExpand$1(pattern,options);};Minimatch$2.prototype.braceExpand=braceExpand$1;function braceExpand$1(pattern,options){if(!options){if(this instanceof Minimatch$2){options=this.options;}else{options={};}}pattern=typeof pattern==='undefined'?this.pattern:pattern;assertValidPattern$1(pattern);// Thanks to Yeting Li <https://github.com/yetingli> for
// improving this regexp to avoid a ReDOS vulnerability.
if(options.nobrace||!/\{(?:(?!\{).)*\}/.test(pattern)){// shortcut. no need to expand.
return[pattern];}return expand$6(pattern);}var MAX_PATTERN_LENGTH$1=1024*64;var assertValidPattern$1=function(pattern){if(typeof pattern!=='string'){throw new TypeError('invalid pattern');}if(pattern.length>MAX_PATTERN_LENGTH$1){throw new TypeError('pattern is too long');}};// parse a component of the expanded set.
// At this point, no pattern may contain "/" in it
// so we're going to return a 2d array, where each entry is the full
// pattern, split on '/', and then turned into a regular expression.
// A regexp is made at the end which joins each array with an
// escaped /, and another full one which joins each regexp with |.
//
// Following the lead of Bash 4.1, note that "**" only has special meaning
// when it is the *only* thing in a path portion.  Otherwise, any series
// of * is equivalent to a single *.  Globstar behavior is enabled by
// default, and can be disabled by setting options.noglobstar.
Minimatch$2.prototype.parse=parse$b;var SUBPARSE$1={};function parse$b(pattern,isSub){assertValidPattern$1(pattern);var options=this.options;// shortcuts
if(pattern==='**'){if(!options.noglobstar)return GLOBSTAR$1;else pattern='*';}if(pattern==='')return'';var re='';var hasMagic=!!options.nocase;var escaping=false;// ? => one single character
var patternListStack=[];var negativeLists=[];var stateChar;var inClass=false;var reClassStart=-1;var classStart=-1;// . and .. never match anything that doesn't start with .,
// even when options.dot is set.
var patternStart=pattern.charAt(0)==='.'?''// anything
// not (start or / followed by . or .. followed by / or end)
:options.dot?'(?!(?:^|\\\/)\\.{1,2}(?:$|\\\/))':'(?!\\.)';var self=this;function clearStateChar(){if(stateChar){// we had some state-tracking character
// that wasn't consumed by this pass.
switch(stateChar){case'*':re+=star$2;hasMagic=true;break;case'?':re+=qmark$1;hasMagic=true;break;default:re+='\\'+stateChar;break;}self.debug('clearStateChar %j %j',stateChar,re);stateChar=false;}}for(var i=0,len=pattern.length,c;i<len&&(c=pattern.charAt(i));i++){this.debug('%s\t%s %s %j',pattern,i,re,c);// skip over any that are escaped.
if(escaping&&reSpecials$1[c]){re+='\\'+c;escaping=false;continue;}switch(c){/* istanbul ignore next */case'/':{// completely not allowed, even escaped.
// Should already be path-split by now.
return false;}case'\\':clearStateChar();escaping=true;continue;// the various stateChar values
// for the "extglob" stuff.
case'?':case'*':case'+':case'@':case'!':this.debug('%s\t%s %s %j <-- stateChar',pattern,i,re,c);// all of those are literals inside a class, except that
// the glob [!a] means [^a] in regexp
if(inClass){this.debug('  in class');if(c==='!'&&i===classStart+1)c='^';re+=c;continue;}// if we already have a stateChar, then it means
// that there was something like ** or +? in there.
// Handle the stateChar, then proceed with this one.
self.debug('call clearStateChar %j',stateChar);clearStateChar();stateChar=c;// if extglob is disabled, then +(asdf|foo) isn't a thing.
// just clear the statechar *now*, rather than even diving into
// the patternList stuff.
if(options.noext)clearStateChar();continue;case'(':if(inClass){re+='(';continue;}if(!stateChar){re+='\\(';continue;}patternListStack.push({type:stateChar,start:i-1,reStart:re.length,open:plTypes$1[stateChar].open,close:plTypes$1[stateChar].close});// negation is (?:(?!js)[^/]*)
re+=stateChar==='!'?'(?:(?!(?:':'(?:';this.debug('plType %j %j',stateChar,re);stateChar=false;continue;case')':if(inClass||!patternListStack.length){re+='\\)';continue;}clearStateChar();hasMagic=true;var pl=patternListStack.pop();// negation is (?:(?!js)[^/]*)
// The others are (?:<pattern>)<type>
re+=pl.close;if(pl.type==='!'){negativeLists.push(pl);}pl.reEnd=re.length;continue;case'|':if(inClass||!patternListStack.length||escaping){re+='\\|';escaping=false;continue;}clearStateChar();re+='|';continue;// these are mostly the same in regexp and glob
case'[':// swallow any state-tracking char before the [
clearStateChar();if(inClass){re+='\\'+c;continue;}inClass=true;classStart=i;reClassStart=re.length;re+=c;continue;case']'://  a right bracket shall lose its special
//  meaning and represent itself in
//  a bracket expression if it occurs
//  first in the list.  -- POSIX.2 2.8.3.2
if(i===classStart+1||!inClass){re+='\\'+c;escaping=false;continue;}// handle the case where we left a class open.
// "[z-a]" is valid, equivalent to "\[z-a\]"
// split where the last [ was, make sure we don't have
// an invalid re. if so, re-walk the contents of the
// would-be class to re-translate any characters that
// were passed through as-is
// TODO: It would probably be faster to determine this
// without a try/catch and a new RegExp, but it's tricky
// to do safely.  For now, this is safe and works.
var cs=pattern.substring(classStart+1,i);try{RegExp('['+cs+']');}catch(er){// not a valid class!
var sp=this.parse(cs,SUBPARSE$1);re=re.substr(0,reClassStart)+'\\['+sp[0]+'\\]';hasMagic=hasMagic||sp[1];inClass=false;continue;}// finish up the class.
hasMagic=true;inClass=false;re+=c;continue;default:// swallow any state char that wasn't consumed
clearStateChar();if(escaping){// no need
escaping=false;}else if(reSpecials$1[c]&&!(c==='^'&&inClass)){re+='\\';}re+=c;}// switch
}// for
// handle the case where we left a class open.
// "[abc" is valid, equivalent to "\[abc"
if(inClass){// split where the last [ was, and escape it
// this is a huge pita.  We now have to re-walk
// the contents of the would-be class to re-translate
// any characters that were passed through as-is
cs=pattern.substr(classStart+1);sp=this.parse(cs,SUBPARSE$1);re=re.substr(0,reClassStart)+'\\['+sp[0];hasMagic=hasMagic||sp[1];}// handle the case where we had a +( thing at the *end*
// of the pattern.
// each pattern list stack adds 3 chars, and we need to go through
// and escape any | chars that were passed through as-is for the regexp.
// Go through and escape them, taking care not to double-escape any
// | chars that were already escaped.
for(pl=patternListStack.pop();pl;pl=patternListStack.pop()){var tail=re.slice(pl.reStart+pl.open.length);this.debug('setting tail',re,pl);// maybe some even number of \, then maybe 1 \, followed by a |
tail=tail.replace(/((?:\\{2}){0,64})(\\?)\|/g,function(_,$1,$2){if(!$2){// the | isn't already escaped, so escape it.
$2='\\';}// need to escape all those slashes *again*, without escaping the
// one that we need for escaping the | character.  As it works out,
// escaping an even number of slashes can be done by simply repeating
// it exactly after itself.  That's why this trick works.
//
// I am sorry that you have to see this.
return $1+$1+$2+'|';});this.debug('tail=%j\n   %s',tail,tail,pl,re);var t=pl.type==='*'?star$2:pl.type==='?'?qmark$1:'\\'+pl.type;hasMagic=true;re=re.slice(0,pl.reStart)+t+'\\('+tail;}// handle trailing things that only matter at the very end.
clearStateChar();if(escaping){// trailing \\
re+='\\\\';}// only need to apply the nodot start if the re starts with
// something that could conceivably capture a dot
var addPatternStart=false;switch(re.charAt(0)){case'[':case'.':case'(':addPatternStart=true;}// Hack to work around lack of negative lookbehind in JS
// A pattern like: *.!(x).!(y|z) needs to ensure that a name
// like 'a.xyz.yz' doesn't match.  So, the first negative
// lookahead, has to look ALL the way ahead, to the end of
// the pattern.
for(var n=negativeLists.length-1;n>-1;n--){var nl=negativeLists[n];var nlBefore=re.slice(0,nl.reStart);var nlFirst=re.slice(nl.reStart,nl.reEnd-8);var nlLast=re.slice(nl.reEnd-8,nl.reEnd);var nlAfter=re.slice(nl.reEnd);nlLast+=nlAfter;// Handle nested stuff like *(*.js|!(*.json)), where open parens
// mean that we should *not* include the ) in the bit that is considered
// "after" the negated section.
var openParensBefore=nlBefore.split('(').length-1;var cleanAfter=nlAfter;for(i=0;i<openParensBefore;i++){cleanAfter=cleanAfter.replace(/\)[+*?]?/,'');}nlAfter=cleanAfter;var dollar='';if(nlAfter===''&&isSub!==SUBPARSE$1){dollar='$';}var newRe=nlBefore+nlFirst+nlAfter+dollar+nlLast;re=newRe;}// if the re is not "" at this point, then we need to make sure
// it doesn't match against an empty path part.
// Otherwise a/* will match a/, which it should not.
if(re!==''&&hasMagic){re='(?=.)'+re;}if(addPatternStart){re=patternStart+re;}// parsing just a piece of a larger pattern.
if(isSub===SUBPARSE$1){return[re,hasMagic];}// skip the regexp for non-magical patterns
// unescape anything in it, though, so that it'll be
// an exact match against a file etc.
if(!hasMagic){return globUnescape$1(pattern);}var flags=options.nocase?'i':'';try{var regExp=new RegExp('^'+re+'$',flags);}catch(er)/* istanbul ignore next - should be impossible */{// If it was an invalid regular expression, then it can't match
// anything.  This trick looks for a character after the end of
// the string, which is of course impossible, except in multi-line
// mode, but it's not a /m regex.
return new RegExp('$.');}regExp._glob=pattern;regExp._src=re;return regExp;}minimatch$2.makeRe=function(pattern,options){return new Minimatch$2(pattern,options||{}).makeRe();};Minimatch$2.prototype.makeRe=makeRe;function makeRe(){if(this.regexp||this.regexp===false)return this.regexp;// at this point, this.set is a 2d array of partial
// pattern strings, or "**".
//
// It's better to use .match().  This function shouldn't
// be used, really, but it's pretty convenient sometimes,
// when you just want to work with a regex.
var set=this.set;if(!set.length){this.regexp=false;return this.regexp;}var options=this.options;var twoStar=options.noglobstar?star$2:options.dot?twoStarDot$1:twoStarNoDot$1;var flags=options.nocase?'i':'';var re=set.map(function(pattern){return pattern.map(function(p){return p===GLOBSTAR$1?twoStar:typeof p==='string'?regExpEscape$1(p):p._src;}).join('\\\/');}).join('|');// must match entire pattern
// ending in a * or ** will make it less strict.
re='^(?:'+re+')$';// can match anything, as long as it's not this.
if(this.negate)re='^(?!'+re+').*$';try{this.regexp=new RegExp(re,flags);}catch(ex)/* istanbul ignore next - should be impossible */{this.regexp=false;}return this.regexp;}minimatch$2.match=function(list,pattern,options){options=options||{};var mm=new Minimatch$2(pattern,options);list=list.filter(function(f){return mm.match(f);});if(mm.options.nonull&&!list.length){list.push(pattern);}return list;};Minimatch$2.prototype.match=function match(f,partial){if(typeof partial==='undefined')partial=this.partial;this.debug('match',f,this.pattern);// short-circuit in the case of busted things.
// comments, etc.
if(this.comment)return false;if(this.empty)return f==='';if(f==='/'&&partial)return true;var options=this.options;// windows: need to use /, not \
if(path$j.sep!=='/'){f=f.split(path$j.sep).join('/');}// treat the test path as a set of pathparts.
f=f.split(slashSplit$1);this.debug(this.pattern,'split',f);// just ONE of the pattern sets in this.set needs to match
// in order for it to be valid.  If negating, then just one
// match means that we have failed.
// Either way, return on the first hit.
var set=this.set;this.debug(this.pattern,'set',set);// Find the basename of the path by looking for the last non-empty segment
var filename;var i;for(i=f.length-1;i>=0;i--){filename=f[i];if(filename)break;}for(i=0;i<set.length;i++){var pattern=set[i];var file=f;if(options.matchBase&&pattern.length===1){file=[filename];}var hit=this.matchOne(file,pattern,partial);if(hit){if(options.flipNegate)return true;return!this.negate;}}// didn't get any hits.  this is success if it's a negative
// pattern, failure otherwise.
if(options.flipNegate)return false;return this.negate;};// set partial to true to test if, for example,
// "/a/b" matches the start of "/*/b/*/d"
// Partial means, if you run out of file before you run
// out of pattern, then that's fine, as long as all
// the parts match.
Minimatch$2.prototype.matchOne=function(file,pattern,partial){var options=this.options;this.debug('matchOne',{'this':this,file:file,pattern:pattern});this.debug('matchOne',file.length,pattern.length);for(var fi=0,pi=0,fl=file.length,pl=pattern.length;fi<fl&&pi<pl;fi++,pi++){this.debug('matchOne loop');var p=pattern[pi];var f=file[fi];this.debug(pattern,p,f);// should be impossible.
// some invalid regexp stuff in the set.
/* istanbul ignore if */if(p===false)return false;if(p===GLOBSTAR$1){this.debug('GLOBSTAR',[pattern,p,f]);// "**"
// a/**/b/**/c would match the following:
// a/b/x/y/z/c
// a/x/y/z/b/c
// a/b/x/b/x/c
// a/b/c
// To do this, take the rest of the pattern after
// the **, and see if it would match the file remainder.
// If so, return success.
// If not, the ** "swallows" a segment, and try again.
// This is recursively awful.
//
// a/**/b/**/c matching a/b/x/y/z/c
// - a matches a
// - doublestar
//   - matchOne(b/x/y/z/c, b/**/c)
//     - b matches b
//     - doublestar
//       - matchOne(x/y/z/c, c) -> no
//       - matchOne(y/z/c, c) -> no
//       - matchOne(z/c, c) -> no
//       - matchOne(c, c) yes, hit
var fr=fi;var pr=pi+1;if(pr===pl){this.debug('** at the end');// a ** at the end will just swallow the rest.
// We have found a match.
// however, it will not swallow /.x, unless
// options.dot is set.
// . and .. are *never* matched by **, for explosively
// exponential reasons.
for(;fi<fl;fi++){if(file[fi]==='.'||file[fi]==='..'||!options.dot&&file[fi].charAt(0)==='.')return false;}return true;}// ok, let's see if we can swallow whatever we can.
while(fr<fl){var swallowee=file[fr];this.debug('\nglobstar while',file,fr,pattern,pr,swallowee);// XXX remove this slice.  Just pass the start index.
if(this.matchOne(file.slice(fr),pattern.slice(pr),partial)){this.debug('globstar found match!',fr,fl,swallowee);// found a match.
return true;}else{// can't swallow "." or ".." ever.
// can only swallow ".foo" when explicitly asked.
if(swallowee==='.'||swallowee==='..'||!options.dot&&swallowee.charAt(0)==='.'){this.debug('dot detected!',file,fr,pattern,pr);break;}// ** swallows a segment, and continue.
this.debug('globstar swallow a segment, and continue');fr++;}}// no match was found.
// However, in partial mode, we can't say this is necessarily over.
// If there's more *pattern* left, then
/* istanbul ignore if */if(partial){// ran out of file
this.debug('\n>>> no match, partial?',file,fr,pattern,pr);if(fr===fl)return true;}return false;}// something other than **
// non-magic patterns just have to match exactly
// patterns with magic have been turned into regexps.
var hit;if(typeof p==='string'){hit=f===p;this.debug('string match',p,f,hit);}else{hit=f.match(p);this.debug('pattern match',p,f,hit);}if(!hit)return false;}// Note: ending in / means that we'll get a final ""
// at the end of the pattern.  This can only match a
// corresponding "" at the end of the file.
// If the file ends in /, then it can only match a
// a pattern that ends in /, unless the pattern just
// doesn't have any more for it. But, a/b/ should *not*
// match "a/b/*", even though "" matches against the
// [^/]*? pattern, except in partial mode, where it might
// simply not be reached yet.
// However, a/b/ should still satisfy a/*
// now either we fell off the end of the pattern, or we're done.
if(fi===fl&&pi===pl){// ran out of pattern and filename at the same time.
// an exact hit!
return true;}else if(fi===fl){// ran out of file, but still had pattern left.
// this is ok if we're doing the match as part of
// a glob fs traversal.
return partial;}else/* istanbul ignore else */if(pi===pl){// ran out of pattern, still have file left.
// this is only acceptable if we're on the very last
// empty segment of a file with a trailing slash.
// a/* should match a/b/
return fi===fl-1&&file[fi]==='';}// should be unreachable.
/* istanbul ignore next */throw new Error('wtf?');};// replace stuff like \* with *
function globUnescape$1(s){return s.replace(/\\(.)/g,'$1');}function regExpEscape$1(s){return s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,'\\$&');}var isOfficialRuntime={};(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.isStaticRuntime=exports.isOfficialRuntime=void 0;/*
	 * Helper function to support both `@vercel` and legacy `@now` official Runtimes.
	 */const isOfficialRuntime=(desired,name)=>{if(typeof name!=='string'){return false;}return name==="@vercel/".concat(desired)||name==="@now/".concat(desired)||name.startsWith("@vercel/".concat(desired,"@"))||name.startsWith("@now/".concat(desired,"@"));};exports.isOfficialRuntime=isOfficialRuntime;/*
	 * Helper function to detect both `@vercel/static` and legacy `@now/static` official Runtimes.
	 */const isStaticRuntime=name=>{return(0,exports.isOfficialRuntime)('static',name);};exports.isStaticRuntime=isStaticRuntime;})(isOfficialRuntime);var __importDefault$6=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(detectBuilders$1,"__esModule",{value:true});detectBuilders$1.detectBuilders=detectBuilders$1.detectOutputDirectory=detectBuilders$1.detectApiDirectory=detectBuilders$1.detectApiExtensions=detectBuilders$1.sortFiles=void 0;const minimatch_1$1=__importDefault$6(minimatch_1$2);const semver_1$1=semver__default.default;const path_1$6=path__default.default;const frameworks_1=__importDefault$6(frameworks);const is_official_runtime_1=isOfficialRuntime;const slugToFramework=new Map(frameworks_1.default.map(f=>[f.slug,f]));// We need to sort the file paths by alphabet to make
// sure the routes stay in the same order e.g. for deduping
function sortFiles(fileA,fileB){return fileA.localeCompare(fileB);}detectBuilders$1.sortFiles=sortFiles;function detectApiExtensions(builders){return new Set(builders.filter(b=>{var _b$src;return Boolean(b.config&&b.config.zeroConfig&&((_b$src=b.src)===null||_b$src===void 0?void 0:_b$src.startsWith('api/')));}).map(b=>(0,path_1$6.extname)(b.src)).filter(Boolean));}detectBuilders$1.detectApiExtensions=detectApiExtensions;function detectApiDirectory(builders){// TODO: We eventually want to save the api directory to
// builder.config.apiDirectory so it is only detected once
const found=builders.some(b=>{var _b$src2;return b.config&&b.config.zeroConfig&&((_b$src2=b.src)===null||_b$src2===void 0?void 0:_b$src2.startsWith('api/'));});return found?'api':null;}detectBuilders$1.detectApiDirectory=detectApiDirectory;// TODO: Replace this function with `config.outputDirectory`
function getPublicBuilder(builders){for(const builder of builders){var _builder$config;if(typeof builder.src==='string'&&(0,is_official_runtime_1.isOfficialRuntime)('static',builder.use)&&/^.*\/\*\*\/\*$/.test(builder.src)&&((_builder$config=builder.config)===null||_builder$config===void 0?void 0:_builder$config.zeroConfig)===true){return builder;}}return null;}function detectOutputDirectory(builders){// TODO: We eventually want to save the output directory to
// builder.config.outputDirectory so it is only detected once
const publicBuilder=getPublicBuilder(builders);return publicBuilder?publicBuilder.src.replace('/**/*',''):null;}detectBuilders$1.detectOutputDirectory=detectOutputDirectory;async function detectBuilders(files,pkg){var _frontendBuilder;let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const errors=[];const warnings=[];let apiBuilders=[];let frontendBuilder=null;const functionError=validateFunctions(options);if(functionError){return{builders:null,errors:[functionError],warnings,defaultRoutes:null,redirectRoutes:null,rewriteRoutes:null,errorRoutes:null};}const sortedFiles=files.sort(sortFiles);const apiSortedFiles=files.sort(sortFilesBySegmentCount);// Keep track of functions that are used
const usedFunctions=new Set();const addToUsedFunctions=builder=>{const key=Object.keys(builder.config.functions||{})[0];if(key)usedFunctions.add(key);};const absolutePathCache=new Map();const{projectSettings={}}=options;const{buildCommand,outputDirectory,framework}=projectSettings;const frameworkConfig=slugToFramework.get(framework||'');const ignoreRuntimes=new Set(frameworkConfig===null||frameworkConfig===void 0?void 0:frameworkConfig.ignoreRuntimes);const withTag=options.tag?"@".concat(options.tag):'';const apiMatches=getApiMatches().filter(b=>{var _b$config;return(// Root-level middleware is enabled, unless `disableRootMiddleware: true`
((_b$config=b.config)===null||_b$config===void 0?void 0:_b$config.middleware)&&!(frameworkConfig!==null&&frameworkConfig!==void 0&&frameworkConfig.disableRootMiddleware)||// "api" dir runtimes are enabled, unless opted-out via `ignoreRuntimes`
!ignoreRuntimes.has(b.use));}).map(b=>{b.use="".concat(b.use).concat(withTag);return b;});// If either is missing we'll make the frontend static
const makeFrontendStatic=buildCommand===''||outputDirectory==='';// Only used when there is no frontend builder,
// but prevents looping over the files again.
const usedOutputDirectory=outputDirectory||'public';let hasUsedOutputDirectory=false;let hasNoneApiFiles=false;let hasNextApiFiles=false;let fallbackEntrypoint=null;const apiRoutes=[];const dynamicRoutes=[];// API
for(const fileName of sortedFiles){const apiBuilder=maybeGetApiBuilder(fileName,apiMatches,options);if(apiBuilder){const{routeError,apiRoute,isDynamic}=getApiRoute(fileName,apiSortedFiles,options,absolutePathCache);if(routeError){return{builders:null,errors:[routeError],warnings,defaultRoutes:null,redirectRoutes:null,rewriteRoutes:null,errorRoutes:null};}if(apiRoute){apiRoutes.push(apiRoute);if(isDynamic){dynamicRoutes.push(apiRoute);}}addToUsedFunctions(apiBuilder);apiBuilders.push(apiBuilder);continue;}if(!hasUsedOutputDirectory&&fileName.startsWith("".concat(usedOutputDirectory,"/"))){hasUsedOutputDirectory=true;}if(!hasNoneApiFiles&&!fileName.startsWith('api/')&&fileName!=='package.json'){hasNoneApiFiles=true;}if(!hasNextApiFiles&&(fileName.startsWith('pages/api')||fileName.startsWith('src/pages/api'))){hasNextApiFiles=true;}if(!fallbackEntrypoint&&buildCommand&&!fileName.includes('/')&&fileName!=='now.json'&&fileName!=='vercel.json'){fallbackEntrypoint=fileName;}}if(!makeFrontendStatic&&(hasBuildScript(pkg)||buildCommand||framework)){// Framework or Build
frontendBuilder=detectFrontBuilder(pkg,files,usedFunctions,fallbackEntrypoint,options);}else{if(pkg&&!makeFrontendStatic&&!apiBuilders.length&&!options.ignoreBuildScript){// We only show this error when there are no api builders
// since the dependencies of the pkg could be used for those
errors.push(getMissingBuildScriptError());return{errors,warnings,builders:null,redirectRoutes:null,defaultRoutes:null,rewriteRoutes:null,errorRoutes:null};}// If `outputDirectory` is an empty string,
// we'll default to the root directory.
if(hasUsedOutputDirectory&&outputDirectory!==''){frontendBuilder={use:'@vercel/static',src:"".concat(usedOutputDirectory,"/**/*"),config:{zeroConfig:true,outputDirectory:usedOutputDirectory}};}else if(apiBuilders.length&&hasNoneApiFiles){// Everything besides the api directory
// and package.json can be served as static files
frontendBuilder={use:'@vercel/static',src:'!{api/**,package.json,middleware.[jt]s}',config:{zeroConfig:true}};}}const unusedFunctionError=checkUnusedFunctions(frontendBuilder,usedFunctions,options);if(unusedFunctionError){return{builders:null,errors:[unusedFunctionError],warnings,redirectRoutes:null,defaultRoutes:null,rewriteRoutes:null,errorRoutes:null};}// Exclude the middleware builder for Next.js apps since @vercel/next
// will build middlewares.
//
// While maybeGetApiBuilder() excludes the middleware builder, however,
// we need to check if it's a Next.js app here again for the case where
// `projectSettings.framework == null`.
if(framework===null&&((_frontendBuilder=frontendBuilder)===null||_frontendBuilder===void 0?void 0:_frontendBuilder.use)==='@vercel/next'&&apiBuilders.length>0){apiBuilders=apiBuilders.filter(builder=>{var _builder$config2;const isMiddlewareBuilder=builder.use==='@vercel/node'&&((_builder$config2=builder.config)===null||_builder$config2===void 0?void 0:_builder$config2.middleware);return!isMiddlewareBuilder;});}const builders=[];if(apiBuilders.length){builders.push(...apiBuilders);}if(frontendBuilder){builders.push(frontendBuilder);if(hasNextApiFiles&&apiBuilders.some(b=>(0,is_official_runtime_1.isOfficialRuntime)('node',b.use))){warnings.push({code:'conflicting_files',message:'When using Next.js, it is recommended to place JavaScript Functions inside of the `pages/api` (provided by Next.js) directory instead of `api` (provided by Vercel). Other languages (Python, Go, etc) should still go in the `api` directory.',link:'https://nextjs.org/docs/api-routes/introduction',action:'Learn More'});}}const routesResult=getRouteResult(apiRoutes,dynamicRoutes,usedOutputDirectory,apiBuilders,frontendBuilder,options);return{warnings,builders:builders.length?builders:null,errors:errors.length?errors:null,redirectRoutes:routesResult.redirectRoutes,defaultRoutes:routesResult.defaultRoutes,rewriteRoutes:routesResult.rewriteRoutes,errorRoutes:routesResult.errorRoutes};}detectBuilders$1.detectBuilders=detectBuilders;function maybeGetApiBuilder(fileName,apiMatches,options){var _options$projectSetti;const middleware=fileName==='middleware.js'||fileName==='middleware.ts';// Root-level Middleware file is handled by `@vercel/next`, so don't
// schedule a separate Builder when "nextjs" framework is selected
if(middleware&&((_options$projectSetti=options.projectSettings)===null||_options$projectSetti===void 0?void 0:_options$projectSetti.framework)==='nextjs'){return null;}if(!(fileName.startsWith('api/')||middleware)){return null;}if(fileName.includes('/.')){return null;}if(fileName.includes('/_')){return null;}if(fileName.includes('/node_modules/')){return null;}if(fileName.endsWith('.d.ts')){return null;}const match=apiMatches.find(_ref5=>{let{src='**'}=_ref5;return src===fileName||(0,minimatch_1$1.default)(fileName,src);});const{fnPattern,func}=getFunction(fileName,options);const use=(func===null||func===void 0?void 0:func.runtime)||(match===null||match===void 0?void 0:match.use);if(!use){return null;}const config={zeroConfig:true};if(middleware){config.middleware=true;}if(fnPattern&&func){config.functions={[fnPattern]:func};if(func.includeFiles){config.includeFiles=func.includeFiles;}if(func.excludeFiles){config.excludeFiles=func.excludeFiles;}}const builder={use,src:fileName,config};return builder;}function getFunction(fileName,_ref6){let{functions={}}=_ref6;const keys=Object.keys(functions);if(!keys.length){return{fnPattern:null,func:null};}const func=keys.find(key=>key===fileName||(0,minimatch_1$1.default)(fileName,key));return func?{fnPattern:func,func:functions[func]}:{fnPattern:null,func:null};}function getApiMatches(){const config={zeroConfig:true};return[{src:'middleware.[jt]s',use:"@vercel/node",config:{...config,middleware:true}},{src:'api/**/*.+(js|mjs|ts|tsx)',use:"@vercel/node",config},{src:'api/**/!(*_test).go',use:"@vercel/go",config},{src:'api/**/*.py',use:"@vercel/python",config},{src:'api/**/*.rb',use:"@vercel/ruby",config}];}function hasBuildScript(pkg){const{scripts={}}=pkg||{};return Boolean(scripts&&scripts['build']);}function detectFrontBuilder(pkg,files,usedFunctions,fallbackEntrypoint,options){const{tag,projectSettings={}}=options;const withTag=tag?"@".concat(tag):'';const{createdAt=0}=projectSettings;let{framework}=projectSettings;const config={zeroConfig:true};if(framework){config.framework=framework;}if(projectSettings.devCommand){config.devCommand=projectSettings.devCommand;}if(typeof projectSettings.installCommand==='string'){config.installCommand=projectSettings.installCommand;}if(projectSettings.buildCommand){config.buildCommand=projectSettings.buildCommand;}if(projectSettings.outputDirectory){config.outputDirectory=projectSettings.outputDirectory;}if(pkg&&(framework===undefined||framework!=='storybook'&&createdAt<Date.parse('2020-03-01'))){const deps={...pkg.dependencies,...pkg.devDependencies};if(deps['next']){framework='nextjs';}}if(options.functions){// When the builder is not used yet we'll use it for the frontend
Object.entries(options.functions).forEach(_ref7=>{let[key,func]=_ref7;if(!usedFunctions.has(key)){if(!config.functions)config.functions={};config.functions[key]={...func};}});}const f=slugToFramework.get(framework||'');if(f&&f.useRuntime){const{src,use}=f.useRuntime;return{src,use:"".concat(use).concat(withTag),config};}// Entrypoints for other frameworks
// TODO - What if just a build script is provided, but no entrypoint.
const entrypoints=new Set(['package.json','config.yaml','config.toml','config.json','_config.yml','config.yml','config.rb']);const source=pkg?'package.json':files.find(file=>entrypoints.has(file))||fallbackEntrypoint||'package.json';return{src:source||'package.json',use:"@vercel/static-build".concat(withTag),config};}function getMissingBuildScriptError(){return{code:'missing_build_script',message:'Your `package.json` file is missing a `build` property inside the `scripts` property.'+'\nLearn More: https://vercel.link/missing-build-script'};}function validateFunctions(_ref8){let{functions={}}=_ref8;for(const[path,func]of Object.entries(functions)){if(path.length>256){return{code:'invalid_function_glob',message:'Function globs must be less than 256 characters long.'};}if(!func||typeof func!=='object'){return{code:'invalid_function',message:'Function must be an object.'};}if(Object.keys(func).length===0){return{code:'invalid_function',message:'Function must contain at least one property.'};}if(func.maxDuration!==undefined&&(func.maxDuration<1||func.maxDuration>900||!Number.isInteger(func.maxDuration))){return{code:'invalid_function_duration',message:'Functions must have a duration between 1 and 900.'};}if(func.memory!==undefined&&(func.memory<128||func.memory>3008)){return{code:'invalid_function_memory',message:'Functions must have a memory value between 128 and 3008'};}if(path.startsWith('/')){return{code:'invalid_function_source',message:"The function path \"".concat(path,"\" is invalid. The path must be relative to your project root and therefore cannot start with a slash.")};}if(func.runtime!==undefined){const tag="".concat(func.runtime).split('@').pop();if(!tag||!(0,semver_1$1.valid)(tag)){return{code:'invalid_function_runtime',message:'Function Runtimes must have a valid version, for example `now-php@1.0.0`.'};}}if(func.includeFiles!==undefined){if(typeof func.includeFiles!=='string'){return{code:'invalid_function_property',message:"The property `includeFiles` must be a string."};}}if(func.excludeFiles!==undefined){if(typeof func.excludeFiles!=='string'){return{code:'invalid_function_property',message:"The property `excludeFiles` must be a string."};}}}return null;}function checkUnusedFunctions(frontendBuilder,usedFunctions,options){const unusedFunctions=new Set(Object.keys(options.functions||{}).filter(key=>!usedFunctions.has(key)));if(!unusedFunctions.size){return null;}// Next.js can use functions only for `src/pages` or `pages`
if(frontendBuilder&&(0,is_official_runtime_1.isOfficialRuntime)('next',frontendBuilder.use)){for(const fnKey of unusedFunctions.values()){if(fnKey.startsWith('pages/')||fnKey.startsWith('src/pages')||fnKey.startsWith('app/')||fnKey.startsWith('src/app/')){unusedFunctions.delete(fnKey);}else{return{code:'unused_function',message:"The pattern \"".concat(fnKey,"\" defined in `functions` doesn't match any Serverless Functions."),action:'Learn More',link:'https://vercel.link/unmatched-function-pattern'};}}}if(unusedFunctions.size){const[fnKey]=Array.from(unusedFunctions);return{code:'unused_function',message:"The pattern \"".concat(fnKey,"\" defined in `functions` doesn't match any Serverless Functions inside the `api` directory."),action:'Learn More',link:'https://vercel.link/unmatched-function-pattern'};}return null;}function getApiRoute(fileName,sortedFiles,options,absolutePathCache){const conflictingSegment=getConflictingSegment(fileName);if(conflictingSegment){return{apiRoute:null,isDynamic:false,routeError:{code:'conflicting_path_segment',message:"The segment \"".concat(conflictingSegment,"\" occurs more than ")+"one time in your path \"".concat(fileName,"\". Please make sure that ")+"every segment in a path is unique."}};}const occurrences=pathOccurrences(fileName,sortedFiles,absolutePathCache);if(occurrences.length>0){const messagePaths=concatArrayOfText(occurrences.map(name=>"\"".concat(name,"\"")));return{apiRoute:null,isDynamic:false,routeError:{code:'conflicting_file_path',message:"Two or more files have conflicting paths or names. "+"Please make sure path segments and filenames, without their extension, are unique. "+"The path \"".concat(fileName,"\" has conflicts with ").concat(messagePaths,".")}};}const out=createRouteFromPath(fileName,Boolean(options.featHandleMiss),Boolean(options.cleanUrls));return{apiRoute:out.route,isDynamic:out.isDynamic,routeError:null};}// Checks if a placeholder with the same name is used
// multiple times inside the same path
function getConflictingSegment(filePath){const segments=new Set();for(const segment of filePath.split('/')){const name=getSegmentName(segment);if(name!==null&&segments.has(name)){return name;}if(name){segments.add(name);}}return null;}// Takes a filename or foldername, strips the extension
// gets the part between the "[]" brackets.
// It will return `null` if there are no brackets
// and therefore no segment.
function getSegmentName(segment){const{name}=(0,path_1$6.parse)(segment);if(name.startsWith('[')&&name.endsWith(']')){return name.slice(1,-1);}return null;}function getAbsolutePath(unresolvedPath){const{dir,name}=(0,path_1$6.parse)(unresolvedPath);const parts=joinPath(dir,name).split('/');return parts.map(part=>part.replace(/\[.*\]/,'1')).join('/');}// Counts how often a path occurs when all placeholders
// got resolved, so we can check if they have conflicts
function pathOccurrences(fileName,files,absolutePathCache){let currentAbsolutePath=absolutePathCache.get(fileName);if(!currentAbsolutePath){currentAbsolutePath=getAbsolutePath(fileName);absolutePathCache.set(fileName,currentAbsolutePath);}const prev=[];// Do not call expensive functions like `minimatch` in here
// because we iterate over every file.
for(const file of files){if(file===fileName){continue;}let absolutePath=absolutePathCache.get(file);if(!absolutePath){absolutePath=getAbsolutePath(file);absolutePathCache.set(file,absolutePath);}if(absolutePath===currentAbsolutePath){prev.push(file);}else if(partiallyMatches(fileName,file)){prev.push(file);}}return prev;}function joinPath(){for(var _len2=arguments.length,segments=new Array(_len2),_key2=0;_key2<_len2;_key2++){segments[_key2]=arguments[_key2];}const joinedPath=segments.join('/');return joinedPath.replace(/\/{2,}/g,'/');}function escapeName(name){const special='[]^$.|?*+()'.split('');for(const char of special){name=name.replace(new RegExp("\\".concat(char),'g'),"\\".concat(char));}return name;}function concatArrayOfText(texts){if(texts.length<=2){return texts.join(' and ');}const last=texts.pop();return"".concat(texts.join(', '),", and ").concat(last);}// Check if the path partially matches and has the same
// name for the path segment at the same position
function partiallyMatches(pathA,pathB){const partsA=pathA.split('/');const partsB=pathB.split('/');const long=partsA.length>partsB.length?partsA:partsB;const short=long===partsA?partsB:partsA;let index=0;for(const segmentShort of short){const segmentLong=long[index];const nameLong=getSegmentName(segmentLong);const nameShort=getSegmentName(segmentShort);// If there are no segments or the paths differ we
// return as they are not matching
if(segmentShort!==segmentLong&&(!nameLong||!nameShort)){return false;}if(nameLong!==nameShort){return true;}index+=1;}return false;}function createRouteFromPath(filePath,featHandleMiss,cleanUrls){const parts=filePath.split('/');let counter=1;const query=[];let isDynamic=false;const srcParts=parts.map((segment,i)=>{const name=getSegmentName(segment);const isLast=i===parts.length-1;if(name!==null){// We can't use `URLSearchParams` because `$` would get escaped
query.push("".concat(name,"=$").concat(counter++));isDynamic=true;return"([^/]+)";}else if(isLast){const{name:fileName,ext}=(0,path_1$6.parse)(segment);const isIndex=fileName==='index';const prefix=isIndex?'/':'';const names=[isIndex?prefix:"".concat(fileName,"/"),prefix+escapeName(fileName),featHandleMiss&&cleanUrls?'':prefix+escapeName(fileName)+escapeName(ext)].filter(Boolean);// Either filename with extension, filename without extension
// or nothing when the filename is `index`.
// When `cleanUrls: true` then do *not* add the filename with extension.
return"(".concat(names.join('|'),")").concat(isIndex?'?':'');}return segment;});const{name:fileName,ext}=(0,path_1$6.parse)(filePath);const isIndex=fileName==='index';const queryString="".concat(query.length?'?':'').concat(query.join('&'));const src=isIndex?"^/".concat(srcParts.slice(0,-1).join('/')).concat(srcParts.slice(-1)[0],"$"):"^/".concat(srcParts.join('/'),"$");let route;if(featHandleMiss){const extensionless=ext?filePath.slice(0,-ext.length):filePath;route={src,dest:"/".concat(extensionless).concat(queryString),check:true};}else{route={src,dest:"/".concat(filePath).concat(queryString)};}return{route,isDynamic};}function getRouteResult(apiRoutes,dynamicRoutes,outputDirectory,apiBuilders,frontendBuilder,options){var _frontendBuilder$conf,_slugToFramework$get;const defaultRoutes=[];const redirectRoutes=[];const rewriteRoutes=[];const errorRoutes=[];const framework=(frontendBuilder===null||frontendBuilder===void 0||(_frontendBuilder$conf=frontendBuilder.config)===null||_frontendBuilder$conf===void 0?void 0:_frontendBuilder$conf.framework)||'';const isNextjs=framework==='nextjs'||(0,is_official_runtime_1.isOfficialRuntime)('next',frontendBuilder===null||frontendBuilder===void 0?void 0:frontendBuilder.use);const ignoreRuntimes=(_slugToFramework$get=slugToFramework.get(framework))===null||_slugToFramework$get===void 0?void 0:_slugToFramework$get.ignoreRuntimes;if(apiRoutes&&apiRoutes.length>0){if(options.featHandleMiss){// Exclude extension names if the corresponding plugin is not found in package.json
// detectBuilders({ignoreRoutesForBuilders: ['@vercel/python']})
// return a copy of routes.
// We should exclud errorRoutes and
const extSet=detectApiExtensions(apiBuilders);if(extSet.size>0){const extGroup="(?:\\.(?:".concat(Array.from(extSet).map(ext=>ext.slice(1)).join('|'),"))");if(options.cleanUrls){redirectRoutes.push({src:"^/(api(?:.+)?)/index".concat(extGroup,"?/?$"),headers:{Location:options.trailingSlash?'/$1/':'/$1'},status:308});redirectRoutes.push({src:"^/api/(.+)".concat(extGroup,"/?$"),headers:{Location:options.trailingSlash?'/api/$1/':'/api/$1'},status:308});}else{defaultRoutes.push({handle:'miss'});defaultRoutes.push({src:"^/api/(.+)".concat(extGroup,"$"),dest:'/api/$1',check:true});}}rewriteRoutes.push(...dynamicRoutes);const hasApiBuild=apiBuilders.find(builder=>{var _builder$src;return(_builder$src=builder.src)===null||_builder$src===void 0?void 0:_builder$src.startsWith('api/');});if(typeof ignoreRuntimes==='undefined'&&hasApiBuild){// This route is only necessary to hide the directory listing
// to avoid enumerating serverless function names.
// But it causes issues in `vc dev` for frameworks that handle
// their own functions such as redwood, so we ignore.
rewriteRoutes.push({src:'^/api(/.*)?$',status:404});}}else{defaultRoutes.push(...apiRoutes);if(apiRoutes.length){defaultRoutes.push({status:404,src:'^/api(/.*)?$'});}}}if(outputDirectory&&frontendBuilder&&!options.featHandleMiss&&(0,is_official_runtime_1.isOfficialRuntime)('static',frontendBuilder.use)){defaultRoutes.push({src:'/(.*)',dest:"/".concat(outputDirectory,"/$1")});}if(options.featHandleMiss&&!isNextjs){// Exclude Next.js to avoid overriding custom error page
// https://nextjs.org/docs/advanced-features/custom-error-page
errorRoutes.push({status:404,src:'^(?!/api).*$',dest:options.cleanUrls?'/404':'/404.html'});}return{defaultRoutes,redirectRoutes,rewriteRoutes,errorRoutes};}function sortFilesBySegmentCount(fileA,fileB){const lengthA=fileA.split('/').length;const lengthB=fileB.split('/').length;if(lengthA>lengthB){return-1;}if(lengthA<lengthB){return 1;}// Paths that have the same segment length but
// less placeholders are preferred
const countSegments=(prev,segment)=>getSegmentName(segment)?prev+1:0;const segmentLengthA=fileA.split('/').reduce(countSegments,0);const segmentLengthB=fileB.split('/').reduce(countSegments,0);if(segmentLengthA>segmentLengthB){return 1;}if(segmentLengthA<segmentLengthB){return-1;}return fileA.localeCompare(fileB);}var detectFileSystemApi={};var hasRequiredDetectFileSystemApi;function requireDetectFileSystemApi(){if(hasRequiredDetectFileSystemApi)return detectFileSystemApi;hasRequiredDetectFileSystemApi=1;var __importDefault=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(detectFileSystemApi,"__esModule",{value:true});detectFileSystemApi.detectFileSystemAPI=void 0;const semver_1=__importDefault(semver__default.default);const _1=requireDist();/**
	 * If the Deployment can be built with the new File System API,
	 * return the new Builder. Otherwise an "Exclusion Condition"
	 * was hit so return `null` builder with a `reason` for exclusion.
	 */async function detectFileSystemAPI(_ref9){let{files,projectSettings,builders,vercelConfig,pkg,tag,enableFlag=false}=_ref9;const framework=projectSettings.framework||'';const deps=Object.assign({},pkg===null||pkg===void 0?void 0:pkg.dependencies,pkg===null||pkg===void 0?void 0:pkg.devDependencies);const plugins=Object.keys(deps).filter(dep=>dep.startsWith('vercel-plugin-'));const hasDotOutput=Object.keys(files).some(file=>file.startsWith('.output/'));const hasMiddleware=Boolean(files['_middleware.js']||files['_middleware.ts']);const metadata={plugins,hasDotOutput,hasMiddleware};const isEnabled=enableFlag||hasMiddleware||hasDotOutput;if(!isEnabled){return{metadata,fsApiBuilder:null,reason:'Flag not enabled.'};}if(vercelConfig!==null&&vercelConfig!==void 0&&vercelConfig.builds&&vercelConfig.builds.length>0){return{metadata,fsApiBuilder:null,reason:'Detected `builds` in vercel.json. Please remove it in favor of CLI plugins.'};}if(Object.values((vercelConfig===null||vercelConfig===void 0?void 0:vercelConfig.functions)||{}).some(fn=>!!fn.runtime)){return{metadata,fsApiBuilder:null,reason:'Detected `functions.runtime` in vercel.json. Please remove it in favor of CLI plugins.'};}if(process.env.HUGO_VERSION){return{metadata,fsApiBuilder:null,reason:'Detected `HUGO_VERSION` environment variable. Please remove it.'};}if(process.env.ZOLA_VERSION){return{metadata,fsApiBuilder:null,reason:'Detected `ZOLA_VERSION` environment variable. Please remove it.'};}if(process.env.GUTENBERG_VERSION){return{metadata,fsApiBuilder:null,reason:'Detected `GUTENBERG_VERSION` environment variable. Please remove it.'};}const invalidBuilder=builders.find(_ref10=>{let{use}=_ref10;const valid=(0,_1.isOfficialRuntime)('go',use)||(0,_1.isOfficialRuntime)('python',use)||(0,_1.isOfficialRuntime)('ruby',use)||(0,_1.isOfficialRuntime)('node',use)||(0,_1.isOfficialRuntime)('next',use)||(0,_1.isOfficialRuntime)('static',use)||(0,_1.isOfficialRuntime)('static-build',use);return!valid;});if(invalidBuilder){return{metadata,fsApiBuilder:null,reason:"Detected `".concat(invalidBuilder.use,"` in vercel.json. Please remove it in favor of CLI plugins.")};}for(const lang of['go','python','ruby']){for(const{use}of builders){const plugin='vercel-plugin-'+lang;if((0,_1.isOfficialRuntime)(lang,use)&&!deps[plugin]){return{metadata,fsApiBuilder:null,reason:"Detected `".concat(lang,"` Serverless Function usage without plugin `").concat(plugin,"`. Please run `npm i ").concat(plugin,"`.")};}}}if(framework==='nuxtjs'||framework==='sveltekit'||framework==='redwoodjs'){return{metadata,fsApiBuilder:null,reason:"Detected framework `".concat(framework,"` that only supports legacy File System API. Please contact the framework author.")};}if(framework==='nextjs'&&!hasDotOutput){// Use the old pipeline if a custom output directory was specified for Next.js
// because `vercel build` cannot ensure that the directory will be in the same
// location as `.output`, which can break imports (not just nft.json files).
if(projectSettings!==null&&projectSettings!==void 0&&projectSettings.outputDirectory){return{metadata,fsApiBuilder:null,reason:"Detected Next.js with Output Directory `".concat(projectSettings.outputDirectory,"` override. Please change it back to the default.")};}const nextVersion=deps['next'];if(!nextVersion){return{metadata,fsApiBuilder:null,reason:"Detected Next.js in Project Settings but missing `next` package.json dependencies. Please run `npm i next`."};}// TODO: Read version from lockfile instead of package.json
if(nextVersion!=='latest'&&nextVersion!=='canary'){const fixedVersion=semver_1.default.valid(semver_1.default.coerce(nextVersion)||'');if(!fixedVersion||!semver_1.default.gte(fixedVersion,'12.0.0')){return{metadata,fsApiBuilder:null,reason:"Detected legacy Next.js version \"".concat(nextVersion,"\" in package.json. Please run `npm i next@latest` to upgrade.")};}}}if(!hasDotOutput){// TODO: Read version from lockfile instead of package.json
const vercelCliVersion=deps['vercel'];if(vercelCliVersion&&vercelCliVersion!=='latest'&&vercelCliVersion!=='canary'){const fixedVersion=semver_1.default.valid(semver_1.default.coerce(vercelCliVersion)||'');// TODO: we might want to use '24.0.0' once its released
if(!fixedVersion||!semver_1.default.gte(fixedVersion,'23.1.3-canary.68')){return{metadata,fsApiBuilder:null,reason:"Detected legacy Vercel CLI version \"".concat(vercelCliVersion,"\" in package.json. Please run `npm i vercel@latest` to upgrade.")};}}}const frontendBuilder=builders.find(_ref11=>{let{use}=_ref11;return(0,_1.isOfficialRuntime)('next',use)||(0,_1.isOfficialRuntime)('static',use)||(0,_1.isOfficialRuntime)('static-build',use);});const config=(frontendBuilder===null||frontendBuilder===void 0?void 0:frontendBuilder.config)||{};const withTag=tag?"@".concat(tag):'';const fsApiBuilder={use:"@vercelruntimes/file-system-api".concat(withTag),src:'**',config:{...config,fileSystemAPI:true,framework:config.framework||framework||null,projectSettings,hasMiddleware,hasDotOutput}};return{metadata,fsApiBuilder,reason:null};}detectFileSystemApi.detectFileSystemAPI=detectFileSystemAPI;return detectFileSystemApi;}var detectFramework$1={};Object.defineProperty(detectFramework$1,"__esModule",{value:true});detectFramework$1.detectFrameworkVersion=detectFramework$1.detectFrameworkRecord=detectFramework$1.detectFrameworks=detectFramework$1.detectFramework=void 0;const child_process_1=require$$0__default$1.default;async function matches(fs,framework){var _result$find;const{detectors}=framework;if(!detectors){return;}const{every,some}=detectors;if(every!==undefined&&!Array.isArray(every)){return;}if(some!==undefined&&!Array.isArray(some)){return;}const check=async _ref12=>{let{path,matchContent,matchPackage}=_ref12;if(matchPackage&&matchContent){throw new Error("Cannot specify \"matchPackage\" and \"matchContent\" in the same detector for \"".concat(framework.slug,"\""));}if(matchPackage&&path){throw new Error("Cannot specify \"matchPackage\" and \"path\" in the same detector for \"".concat(framework.slug,"\" because \"path\" is assumed to be \"package.json\"."));}if(!path&&!matchPackage){throw new Error("Must specify either \"path\" or \"matchPackage\" in detector for \"".concat(framework.slug,"\"."));}if(!path){path='package.json';}if(matchPackage){matchContent="\"(dev)?(d|D)ependencies\":\\s*{[^}]*\"".concat(matchPackage,"\":\\s*\"(.+?)\"[^}]*}");}if((await fs.hasPath(path))===false){return;}if(matchContent){if((await fs.isFile(path))===false){return;}const regex=new RegExp(matchContent,'m');const content=await fs.readFile(path);const match=content.toString().match(regex);if(!match){return;}if(matchPackage&&match[3]){return{framework,detectedVersion:match[3]};}}return{framework};};const result=[];if(every){const everyResult=await Promise.all(every.map(item=>check(item)));result.push(...everyResult);}if(some){let someResult;for(const item of some){const itemResult=await check(item);if(itemResult){someResult=itemResult;break;}}result.push(someResult);}if(!result.every(res=>!!res)){return;}const detectedVersion=(_result$find=result.find(r=>typeof r==='object'&&r.detectedVersion))===null||_result$find===void 0?void 0:_result$find.detectedVersion;return{framework,detectedVersion};}// TODO: Deprecate and replace with `detectFrameworkRecord`
async function detectFramework(_ref13){var _result$find2;let{fs,frameworkList}=_ref13;const result=await Promise.all(frameworkList.map(async frameworkMatch=>{if(await matches(fs,frameworkMatch)){return frameworkMatch.slug;}return null;}));return(_result$find2=result.find(res=>res!==null))!==null&&_result$find2!==void 0?_result$find2:null;}detectFramework$1.detectFramework=detectFramework;/**
 * Detects all matching Frameworks based on the given virtual filesystem.
 */async function detectFrameworks(_ref14){let{fs,frameworkList}=_ref14;const result=await Promise.all(frameworkList.map(async frameworkMatch=>{if(await matches(fs,frameworkMatch)){return frameworkMatch;}return null;}));return result.filter(res=>res!==null);}detectFramework$1.detectFrameworks=detectFrameworks;// Note: Does not currently support a `frameworkList` of monorepo managers
async function detectFrameworkRecord(_ref15){var _result$find3;let{fs,frameworkList}=_ref15;const result=await Promise.all(frameworkList.map(async frameworkMatch=>{const matchResult=await matches(fs,frameworkMatch);if(matchResult){return{...frameworkMatch,detectedVersion:matchResult===null||matchResult===void 0?void 0:matchResult.detectedVersion};}return null;}));const frameworkRecord=(_result$find3=result.find(res=>res!==null))!==null&&_result$find3!==void 0?_result$find3:null;return frameworkRecord;}detectFramework$1.detectFrameworkRecord=detectFrameworkRecord;function detectFrameworkVersion(frameworkRecord){var _frameworkRecord$dete,_frameworkRecord$dete2;const allDetectors=[...(((_frameworkRecord$dete=frameworkRecord.detectors)===null||_frameworkRecord$dete===void 0?void 0:_frameworkRecord$dete.every)||[]),...(((_frameworkRecord$dete2=frameworkRecord.detectors)===null||_frameworkRecord$dete2===void 0?void 0:_frameworkRecord$dete2.some)||[])];const firstMatchPackage=allDetectors.find(d=>d.matchPackage);if(!(firstMatchPackage!==null&&firstMatchPackage!==void 0&&firstMatchPackage.matchPackage)){return;}return lookupInstalledVersion(process.execPath,firstMatchPackage.matchPackage);}detectFramework$1.detectFrameworkVersion=detectFrameworkVersion;function lookupInstalledVersion(cwd,packageName){try{const script="require('".concat(packageName,"/package.json').version");return(0,child_process_1.spawnSync)(cwd,['-p',script],{encoding:'utf-8'}).stdout.trim();}catch(error){console.debug("Error looking up version of installed package \"".concat(packageName,"\": ").concat(error));}return;}var getProjectPaths={};(function(exports){var __importDefault=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(exports,"__esModule",{value:true});exports.getProjectPaths=void 0;const detect_framework_1=detectFramework$1;const frameworks_1=__importDefault(frameworks);const MAX_DEPTH_TRAVERSE=3;const getProjectPaths=async _ref16=>{let{fs,path,skipPaths,depth=MAX_DEPTH_TRAVERSE}=_ref16;if(depth===0)return[];const allPaths=[];const topPath=path!==null&&path!==void 0?path:'./';if(path&&skipPaths!==null&&skipPaths!==void 0&&skipPaths.includes(path)){return allPaths;}const framework=await(0,detect_framework_1.detectFramework)({fs:fs.chdir(topPath),frameworkList:frameworks_1.default});if(framework!==null)allPaths.push(topPath);if(depth>1){const directoryContents=await fs.readdir(topPath);const childDirectories=directoryContents.filter(stat=>stat.type==='dir'&&!(skipPaths!==null&&skipPaths!==void 0&&skipPaths.includes(stat.path)));const paths=(await Promise.all(childDirectories.map(_ref17=>{let{path}=_ref17;return(0,exports.getProjectPaths)({fs,path,depth:depth-1,skipPaths});}))).flat();return[...paths,...allPaths];}return allPaths;};exports.getProjectPaths=getProjectPaths;})(getProjectPaths);var filesystem={};Object.defineProperty(filesystem,"__esModule",{value:true});filesystem.DetectorFilesystem=void 0;const path_1$5=path__default.default;/**
 * `DetectorFilesystem` is an abstract class that represents a virtual filesystem
 * to perform read-only operations on in order to detect which framework is being
 * used.
 *
 * Its abstract methods must be implemented by a subclass that perform the actual
 * FS operations. Example subclasses could be implemented as:
 *
 *  - Local filesystem, which proxies the FS operations to the equivalent `fs`
 *    module functions.
 *  - HTTP filesystem, which implements the FS operations over an HTTP server
 *    and does not require a local copy of the files.
 *  - `Files` filesystem, which operates on a virtual `Files` object (i.e. from
 *    the `glob()` function) which could include `FileFsRef`, `FileBlob`, etc.
 *
 * This base class implements various helper functions for common tasks (i.e.
 * read and parse a JSON file). It also includes caching for all FS operations
 * so that multiple detector functions de-dup read operations on the same file
 * to reduce network/filesystem overhead.
 *
 * **NOTE:** It's important that all instance methods in this base class are
 * bound to `this` so that the `fs` object may be destructured in the detector
 * functions. The easiest way to do this is to use the `=` syntax when defining
 * methods in this class definition.
 */class DetectorFilesystem{constructor(){this.hasPath=async path=>{let p=this.pathCache.get(path);if(!p){p=this._hasPath(path);this.pathCache.set(path,p);}return p;};this.isFile=async name=>{let p=this.fileCache.get(name);if(!p){p=this._isFile(name);this.fileCache.set(name,p);}return p;};this.readFile=async name=>{let p=this.readFileCache.get(name);if(!p){p=this._readFile(name);this.readFileCache.set(name,p);}return p;};/**
         * Returns a list of Stat objects from the current working directory.
         * @param dirPath The path of the directory to read.
         * @param options.potentialFiles optional. Array of potential file names (relative to the path).  If provided, these will be used to mark the filesystem caches as existing or not existing.
         */this.readdir=async(dirPath,options)=>{let p=this.readdirCache.get(dirPath);if(!p){p=this._readdir(dirPath);this.readdirCache.set(dirPath,p);}const directoryContent=await p;const directoryFiles=new Set();for(const file of directoryContent){if(file.type==='file'){// we know this file exists, mark it as so on the filesystem
this.fileCache.set(file.path,Promise.resolve(true));this.pathCache.set(file.path,Promise.resolve(true));directoryFiles.add(file.name);}}if(options!==null&&options!==void 0&&options.potentialFiles){// calculate the set of paths that truly do not exist
const filesThatDoNotExist=options.potentialFiles.filter(path=>!directoryFiles.has(path));for(const filePath of filesThatDoNotExist){const fullFilePath=dirPath==='/'?filePath:path_1$5.posix.join(dirPath,filePath);// we know this file does not exist, mark it as so on the filesystem
this.fileCache.set(fullFilePath,Promise.resolve(false));this.pathCache.set(fullFilePath,Promise.resolve(false));}}return p;};/**
         * Changes the current directory to the specified path and returns a new instance of DetectorFilesystem.
         */this.chdir=name=>{return this._chdir(name);};/**
         * Writes a file to the filesystem cache.
         * @param name the name of the file to write
         * @param content The content of the file
         */this.writeFile=async(name,content)=>{this.readFileCache.set(name,Promise.resolve(Buffer.from(content)));this.fileCache.set(name,Promise.resolve(true));this.pathCache.set(name,Promise.resolve(true));};this.pathCache=new Map();this.fileCache=new Map();this.readFileCache=new Map();this.readdirCache=new Map();}}filesystem.DetectorFilesystem=DetectorFilesystem;var localFileSystemDetector={};var __importDefault$5=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(localFileSystemDetector,"__esModule",{value:true});localFileSystemDetector.LocalFileSystemDetector=void 0;const promises_1=__importDefault$5(fs__default.default);const path_1$4=path__default.default;const filesystem_1=filesystem;const error_utils_1=dist$2;class LocalFileSystemDetector extends filesystem_1.DetectorFilesystem{constructor(rootPath){super();this.rootPath=rootPath;}async _hasPath(name){try{await promises_1.default.stat(this.getFilePath(name));return true;}catch(err){if((0,error_utils_1.isErrnoException)(err)&&err.code==='ENOENT'){return false;}throw err;}}_readFile(name){return promises_1.default.readFile(this.getFilePath(name));}async _isFile(name){const stat=await promises_1.default.stat(this.getFilePath(name));return stat.isFile();}async _readdir(dir){const dirPath=this.getFilePath(dir);const files=await promises_1.default.readdir(dirPath);return Promise.all(files.map(async name=>{const absPath=(0,path_1$4.join)(this.rootPath,dir,name);const path=(0,path_1$4.join)(this.getRelativeFilePath(dir),name);const stat=await promises_1.default.stat(absPath);let type;if(stat.isFile()){type='file';}else if(stat.isDirectory()){type='dir';}else{throw new Error("Dirent was neither file nor directory: ".concat(path));}return{name,path,type};}));}_chdir(name){return new LocalFileSystemDetector(this.getFilePath(name));}getRelativeFilePath(name){return name.startsWith(this.rootPath)?(0,path_1$4.relative)(this.rootPath,name):name;}getFilePath(name){return(0,path_1$4.join)(this.rootPath,this.getRelativeFilePath(name));}}localFileSystemDetector.LocalFileSystemDetector=LocalFileSystemDetector;var workspaceManagers={};(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.workspaceManagers=void 0;/**
	 * The supported list of workspace managers.
	 *
	 * This list is designed to work with the @see {@link detectFramework} function.
	 *
	 * @example
	 *   import { workspaceManagers as frameworkList } from '@vercel/fs-detectors'
	 *   import { detectFramework } from '@vercel/fs-detectors'
	 *
	 *   const fs = new GitDetectorFilesystem(...)
	 *   detectFramwork({ fs, frameworkList }) // returns the 'slug' field if detected, otherwise null
	 *
	 */exports.workspaceManagers=[{name:'Yarn',slug:'yarn',detectors:{every:[{path:'package.json',matchContent:'"workspaces":\\s*(?:\\[[^\\]]*]|{[^}]*"packages":[^}]*})'},{path:'yarn.lock'}]}},{name:'pnpm',slug:'pnpm',detectors:{every:[{path:'pnpm-workspace.yaml'}]}},{name:'npm',slug:'npm',detectors:{every:[{path:'package.json',matchContent:'"workspaces":\\s*(?:\\[[^\\]]*]|{[^}]*"packages":[^}]*})'},{path:'package-lock.json'}]}},{name:'nx',slug:'nx',detectors:{every:[{path:'workspace.json',matchContent:'"projects":\\s*{[^}]'}]}},{name:'rush',slug:'rush',detectors:{every:[{path:'rush.json'}]}},{name:'default',slug:'yarn',detectors:{every:[{path:'package.json',matchContent:'"workspaces":\\s*(?:\\[[^\\]]*]|{[^}]*"packages":[^}]*})'}]}}];exports.default=exports.workspaceManagers;})(workspaceManagers);var getWorkspaces$1={};var __importDefault$4=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(getWorkspaces$1,"__esModule",{value:true});getWorkspaces$1.getWorkspaces=void 0;const path_1$3=__importDefault$4(path__default.default);const workspace_managers_1=workspaceManagers;const detect_framework_1$1=detectFramework$1;const MAX_DEPTH_TRAVERSE=3;const posixPath$1=path_1$3.default.posix;async function getWorkspaces(_ref18){let{fs,depth=MAX_DEPTH_TRAVERSE,cwd='/'}=_ref18;if(depth===0)return[];const workspaceType=await(0,detect_framework_1$1.detectFramework)({fs,frameworkList:workspace_managers_1.workspaceManagers});if(workspaceType===null){const directoryContents=await fs.readdir('./');const childDirectories=directoryContents.filter(stat=>stat.type==='dir');return(await Promise.all(childDirectories.map(childDirectory=>getWorkspaces({fs:fs.chdir(childDirectory.path),depth:depth-1,cwd:posixPath$1.join(cwd,childDirectory.path)})))).flat();}return[{type:workspaceType,rootPath:cwd}];}getWorkspaces$1.getWorkspaces=getWorkspaces;var getWorkspacePackagePaths$1={};var jsYaml$2={};var loader$3={};var common$e={};function isNothing$1(subject){return typeof subject==='undefined'||subject===null;}function isObject$6(subject){return typeof subject==='object'&&subject!==null;}function toArray$2(sequence){if(Array.isArray(sequence))return sequence;else if(isNothing$1(sequence))return[];return[sequence];}function extend$3(target,source){var index,length,key,sourceKeys;if(source){sourceKeys=Object.keys(source);for(index=0,length=sourceKeys.length;index<length;index+=1){key=sourceKeys[index];target[key]=source[key];}}return target;}function repeat$2(string,count){var result='',cycle;for(cycle=0;cycle<count;cycle+=1){result+=string;}return result;}function isNegativeZero$1(number){return number===0&&Number.NEGATIVE_INFINITY===1/number;}common$e.isNothing=isNothing$1;common$e.isObject=isObject$6;common$e.toArray=toArray$2;common$e.repeat=repeat$2;common$e.isNegativeZero=isNegativeZero$1;common$e.extend=extend$3;function formatError(exception,compact){var where='',message=exception.reason||'(unknown reason)';if(!exception.mark)return message;if(exception.mark.name){where+='in "'+exception.mark.name+'" ';}where+='('+(exception.mark.line+1)+':'+(exception.mark.column+1)+')';if(!compact&&exception.mark.snippet){where+='\n\n'+exception.mark.snippet;}return message+' '+where;}function YAMLException$9(reason,mark){// Super constructor
Error.call(this);this.name='YAMLException';this.reason=reason;this.mark=mark;this.message=formatError(this,false);// Include stack trace in error object
if(Error.captureStackTrace){// Chrome and NodeJS
Error.captureStackTrace(this,this.constructor);}else{// FF, IE 10+ and Safari 6+. Fallback for others
this.stack=new Error().stack||'';}}// Inherit from Error
YAMLException$9.prototype=Object.create(Error.prototype);YAMLException$9.prototype.constructor=YAMLException$9;YAMLException$9.prototype.toString=function toString(compact){return this.name+': '+formatError(this,compact);};var exception$1=YAMLException$9;var common$d=common$e;// get snippet for a single line, respecting maxLength
function getLine(buffer,lineStart,lineEnd,position,maxLineLength){var head='';var tail='';var maxHalfLength=Math.floor(maxLineLength/2)-1;if(position-lineStart>maxHalfLength){head=' ... ';lineStart=position-maxHalfLength+head.length;}if(lineEnd-position>maxHalfLength){tail=' ...';lineEnd=position+maxHalfLength-tail.length;}return{str:head+buffer.slice(lineStart,lineEnd).replace(/\t/g,'→')+tail,pos:position-lineStart+head.length// relative position
};}function padStart(string,max){return common$d.repeat(' ',max-string.length)+string;}function makeSnippet$1(mark,options){options=Object.create(options||null);if(!mark.buffer)return null;if(!options.maxLength)options.maxLength=79;if(typeof options.indent!=='number')options.indent=1;if(typeof options.linesBefore!=='number')options.linesBefore=3;if(typeof options.linesAfter!=='number')options.linesAfter=2;var re=/\r?\n|\r|\0/g;var lineStarts=[0];var lineEnds=[];var match;var foundLineNo=-1;while(match=re.exec(mark.buffer)){lineEnds.push(match.index);lineStarts.push(match.index+match[0].length);if(mark.position<=match.index&&foundLineNo<0){foundLineNo=lineStarts.length-2;}}if(foundLineNo<0)foundLineNo=lineStarts.length-1;var result='',i,line;var lineNoLength=Math.min(mark.line+options.linesAfter,lineEnds.length).toString().length;var maxLineLength=options.maxLength-(options.indent+lineNoLength+3);for(i=1;i<=options.linesBefore;i++){if(foundLineNo-i<0)break;line=getLine(mark.buffer,lineStarts[foundLineNo-i],lineEnds[foundLineNo-i],mark.position-(lineStarts[foundLineNo]-lineStarts[foundLineNo-i]),maxLineLength);result=common$d.repeat(' ',options.indent)+padStart((mark.line-i+1).toString(),lineNoLength)+' | '+line.str+'\n'+result;}line=getLine(mark.buffer,lineStarts[foundLineNo],lineEnds[foundLineNo],mark.position,maxLineLength);result+=common$d.repeat(' ',options.indent)+padStart((mark.line+1).toString(),lineNoLength)+' | '+line.str+'\n';result+=common$d.repeat('-',options.indent+lineNoLength+3+line.pos)+'^'+'\n';for(i=1;i<=options.linesAfter;i++){if(foundLineNo+i>=lineEnds.length)break;line=getLine(mark.buffer,lineStarts[foundLineNo+i],lineEnds[foundLineNo+i],mark.position-(lineStarts[foundLineNo]-lineStarts[foundLineNo+i]),maxLineLength);result+=common$d.repeat(' ',options.indent)+padStart((mark.line+i+1).toString(),lineNoLength)+' | '+line.str+'\n';}return result.replace(/\n$/,'');}var snippet=makeSnippet$1;var YAMLException$8=exception$1;var TYPE_CONSTRUCTOR_OPTIONS$1=['kind','multi','resolve','construct','instanceOf','predicate','represent','representName','defaultStyle','styleAliases'];var YAML_NODE_KINDS$1=['scalar','sequence','mapping'];function compileStyleAliases$1(map){var result={};if(map!==null){Object.keys(map).forEach(function(style){map[style].forEach(function(alias){result[String(alias)]=style;});});}return result;}function Type$w(tag,options){options=options||{};Object.keys(options).forEach(function(name){if(TYPE_CONSTRUCTOR_OPTIONS$1.indexOf(name)===-1){throw new YAMLException$8('Unknown option "'+name+'" is met in definition of "'+tag+'" YAML type.');}});// TODO: Add tag format check.
this.options=options;// keep original options in case user wants to extend this type later
this.tag=tag;this.kind=options['kind']||null;this.resolve=options['resolve']||function(){return true;};this.construct=options['construct']||function(data){return data;};this.instanceOf=options['instanceOf']||null;this.predicate=options['predicate']||null;this.represent=options['represent']||null;this.representName=options['representName']||null;this.defaultStyle=options['defaultStyle']||null;this.multi=options['multi']||false;this.styleAliases=compileStyleAliases$1(options['styleAliases']||null);if(YAML_NODE_KINDS$1.indexOf(this.kind)===-1){throw new YAMLException$8('Unknown kind "'+this.kind+'" is specified for "'+tag+'" YAML type.');}}var type$1=Type$w;/*eslint-disable max-len*/var YAMLException$7=exception$1;var Type$v=type$1;function compileList$1(schema,name){var result=[];schema[name].forEach(function(currentType){var newIndex=result.length;result.forEach(function(previousType,previousIndex){if(previousType.tag===currentType.tag&&previousType.kind===currentType.kind&&previousType.multi===currentType.multi){newIndex=previousIndex;}});result[newIndex]=currentType;});return result;}function compileMap$1(/* lists... */){var result={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}},index,length;function collectType(type){if(type.multi){result.multi[type.kind].push(type);result.multi['fallback'].push(type);}else{result[type.kind][type.tag]=result['fallback'][type.tag]=type;}}for(index=0,length=arguments.length;index<length;index+=1){arguments[index].forEach(collectType);}return result;}function Schema$7(definition){return this.extend(definition);}Schema$7.prototype.extend=function extend(definition){var implicit=[];var explicit=[];if(definition instanceof Type$v){// Schema.extend(type)
explicit.push(definition);}else if(Array.isArray(definition)){// Schema.extend([ type1, type2, ... ])
explicit=explicit.concat(definition);}else if(definition&&(Array.isArray(definition.implicit)||Array.isArray(definition.explicit))){// Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })
if(definition.implicit)implicit=implicit.concat(definition.implicit);if(definition.explicit)explicit=explicit.concat(definition.explicit);}else{throw new YAMLException$7('Schema.extend argument should be a Type, [ Type ], '+'or a schema definition ({ implicit: [...], explicit: [...] })');}implicit.forEach(function(type){if(!(type instanceof Type$v)){throw new YAMLException$7('Specified list of YAML types (or a single Type object) contains a non-Type object.');}if(type.loadKind&&type.loadKind!=='scalar'){throw new YAMLException$7('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');}if(type.multi){throw new YAMLException$7('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');}});explicit.forEach(function(type){if(!(type instanceof Type$v)){throw new YAMLException$7('Specified list of YAML types (or a single Type object) contains a non-Type object.');}});var result=Object.create(Schema$7.prototype);result.implicit=(this.implicit||[]).concat(implicit);result.explicit=(this.explicit||[]).concat(explicit);result.compiledImplicit=compileList$1(result,'implicit');result.compiledExplicit=compileList$1(result,'explicit');result.compiledTypeMap=compileMap$1(result.compiledImplicit,result.compiledExplicit);return result;};var schema$1=Schema$7;var Type$u=type$1;var str$1=new Type$u('tag:yaml.org,2002:str',{kind:'scalar',construct:function(data){return data!==null?data:'';}});var Type$t=type$1;var seq$1=new Type$t('tag:yaml.org,2002:seq',{kind:'sequence',construct:function(data){return data!==null?data:[];}});var Type$s=type$1;var map$2=new Type$s('tag:yaml.org,2002:map',{kind:'mapping',construct:function(data){return data!==null?data:{};}});var Schema$6=schema$1;var failsafe$1=new Schema$6({explicit:[str$1,seq$1,map$2]});var Type$r=type$1;function resolveYamlNull$1(data){if(data===null)return true;var max=data.length;return max===1&&data==='~'||max===4&&(data==='null'||data==='Null'||data==='NULL');}function constructYamlNull$1(){return null;}function isNull$1(object){return object===null;}var _null$1=new Type$r('tag:yaml.org,2002:null',{kind:'scalar',resolve:resolveYamlNull$1,construct:constructYamlNull$1,predicate:isNull$1,represent:{canonical:function(){return'~';},lowercase:function(){return'null';},uppercase:function(){return'NULL';},camelcase:function(){return'Null';},empty:function(){return'';}},defaultStyle:'lowercase'});var Type$q=type$1;function resolveYamlBoolean$1(data){if(data===null)return false;var max=data.length;return max===4&&(data==='true'||data==='True'||data==='TRUE')||max===5&&(data==='false'||data==='False'||data==='FALSE');}function constructYamlBoolean$1(data){return data==='true'||data==='True'||data==='TRUE';}function isBoolean$1(object){return Object.prototype.toString.call(object)==='[object Boolean]';}var bool$1=new Type$q('tag:yaml.org,2002:bool',{kind:'scalar',resolve:resolveYamlBoolean$1,construct:constructYamlBoolean$1,predicate:isBoolean$1,represent:{lowercase:function(object){return object?'true':'false';},uppercase:function(object){return object?'TRUE':'FALSE';},camelcase:function(object){return object?'True':'False';}},defaultStyle:'lowercase'});var common$c=common$e;var Type$p=type$1;function isHexCode$1(c){return 0x30/* 0 */<=c&&c<=0x39/* 9 */||0x41/* A */<=c&&c<=0x46/* F */||0x61/* a */<=c&&c<=0x66/* f */;}function isOctCode$1(c){return 0x30/* 0 */<=c&&c<=0x37/* 7 */;}function isDecCode$1(c){return 0x30/* 0 */<=c&&c<=0x39/* 9 */;}function resolveYamlInteger$1(data){if(data===null)return false;var max=data.length,index=0,hasDigits=false,ch;if(!max)return false;ch=data[index];// sign
if(ch==='-'||ch==='+'){ch=data[++index];}if(ch==='0'){// 0
if(index+1===max)return true;ch=data[++index];// base 2, base 8, base 16
if(ch==='b'){// base 2
index++;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(ch!=='0'&&ch!=='1')return false;hasDigits=true;}return hasDigits&&ch!=='_';}if(ch==='x'){// base 16
index++;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(!isHexCode$1(data.charCodeAt(index)))return false;hasDigits=true;}return hasDigits&&ch!=='_';}if(ch==='o'){// base 8
index++;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(!isOctCode$1(data.charCodeAt(index)))return false;hasDigits=true;}return hasDigits&&ch!=='_';}}// base 10 (except 0)
// value should not start with `_`;
if(ch==='_')return false;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(!isDecCode$1(data.charCodeAt(index))){return false;}hasDigits=true;}// Should have digits and should not end with `_`
if(!hasDigits||ch==='_')return false;return true;}function constructYamlInteger$1(data){var value=data,sign=1,ch;if(value.indexOf('_')!==-1){value=value.replace(/_/g,'');}ch=value[0];if(ch==='-'||ch==='+'){if(ch==='-')sign=-1;value=value.slice(1);ch=value[0];}if(value==='0')return 0;if(ch==='0'){if(value[1]==='b')return sign*parseInt(value.slice(2),2);if(value[1]==='x')return sign*parseInt(value.slice(2),16);if(value[1]==='o')return sign*parseInt(value.slice(2),8);}return sign*parseInt(value,10);}function isInteger$1(object){return Object.prototype.toString.call(object)==='[object Number]'&&object%1===0&&!common$c.isNegativeZero(object);}var int$1=new Type$p('tag:yaml.org,2002:int',{kind:'scalar',resolve:resolveYamlInteger$1,construct:constructYamlInteger$1,predicate:isInteger$1,represent:{binary:function(obj){return obj>=0?'0b'+obj.toString(2):'-0b'+obj.toString(2).slice(1);},octal:function(obj){return obj>=0?'0o'+obj.toString(8):'-0o'+obj.toString(8).slice(1);},decimal:function(obj){return obj.toString(10);},/* eslint-disable max-len */hexadecimal:function(obj){return obj>=0?'0x'+obj.toString(16).toUpperCase():'-0x'+obj.toString(16).toUpperCase().slice(1);}},defaultStyle:'decimal',styleAliases:{binary:[2,'bin'],octal:[8,'oct'],decimal:[10,'dec'],hexadecimal:[16,'hex']}});var common$b=common$e;var Type$o=type$1;var YAML_FLOAT_PATTERN$1=new RegExp(// 2.5e4, 2.5 and integers
'^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?'+// .2e4, .2
// special case, seems not from spec
'|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?'+// .inf
'|[-+]?\\.(?:inf|Inf|INF)'+// .nan
'|\\.(?:nan|NaN|NAN))$');function resolveYamlFloat$1(data){if(data===null)return false;if(!YAML_FLOAT_PATTERN$1.test(data)||// Quick hack to not allow integers end with `_`
// Probably should update regexp & check speed
data[data.length-1]==='_'){return false;}return true;}function constructYamlFloat$1(data){var value,sign;value=data.replace(/_/g,'').toLowerCase();sign=value[0]==='-'?-1:1;if('+-'.indexOf(value[0])>=0){value=value.slice(1);}if(value==='.inf'){return sign===1?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;}else if(value==='.nan'){return NaN;}return sign*parseFloat(value,10);}var SCIENTIFIC_WITHOUT_DOT$1=/^[-+]?[0-9]+e/;function representYamlFloat$1(object,style){var res;if(isNaN(object)){switch(style){case'lowercase':return'.nan';case'uppercase':return'.NAN';case'camelcase':return'.NaN';}}else if(Number.POSITIVE_INFINITY===object){switch(style){case'lowercase':return'.inf';case'uppercase':return'.INF';case'camelcase':return'.Inf';}}else if(Number.NEGATIVE_INFINITY===object){switch(style){case'lowercase':return'-.inf';case'uppercase':return'-.INF';case'camelcase':return'-.Inf';}}else if(common$b.isNegativeZero(object)){return'-0.0';}res=object.toString(10);// JS stringifier can build scientific format without dots: 5e-100,
// while YAML requres dot: 5.e-100. Fix it with simple hack
return SCIENTIFIC_WITHOUT_DOT$1.test(res)?res.replace('e','.e'):res;}function isFloat$1(object){return Object.prototype.toString.call(object)==='[object Number]'&&(object%1!==0||common$b.isNegativeZero(object));}var float$1=new Type$o('tag:yaml.org,2002:float',{kind:'scalar',resolve:resolveYamlFloat$1,construct:constructYamlFloat$1,predicate:isFloat$1,represent:representYamlFloat$1,defaultStyle:'lowercase'});var json$1=failsafe$1.extend({implicit:[_null$1,bool$1,int$1,float$1]});var core$5=json$1;var Type$n=type$1;var YAML_DATE_REGEXP$1=new RegExp('^([0-9][0-9][0-9][0-9])'+// [1] year
'-([0-9][0-9])'+// [2] month
'-([0-9][0-9])$');// [3] day
var YAML_TIMESTAMP_REGEXP$1=new RegExp('^([0-9][0-9][0-9][0-9])'+// [1] year
'-([0-9][0-9]?)'+// [2] month
'-([0-9][0-9]?)'+// [3] day
'(?:[Tt]|[ \\t]+)'+// ...
'([0-9][0-9]?)'+// [4] hour
':([0-9][0-9])'+// [5] minute
':([0-9][0-9])'+// [6] second
'(?:\\.([0-9]*))?'+// [7] fraction
'(?:[ \\t]*(Z|([-+])([0-9][0-9]?)'+// [8] tz [9] tz_sign [10] tz_hour
'(?::([0-9][0-9]))?))?$');// [11] tz_minute
function resolveYamlTimestamp$1(data){if(data===null)return false;if(YAML_DATE_REGEXP$1.exec(data)!==null)return true;if(YAML_TIMESTAMP_REGEXP$1.exec(data)!==null)return true;return false;}function constructYamlTimestamp$1(data){var match,year,month,day,hour,minute,second,fraction=0,delta=null,tz_hour,tz_minute,date;match=YAML_DATE_REGEXP$1.exec(data);if(match===null)match=YAML_TIMESTAMP_REGEXP$1.exec(data);if(match===null)throw new Error('Date resolve error');// match: [1] year [2] month [3] day
year=+match[1];month=+match[2]-1;// JS month starts with 0
day=+match[3];if(!match[4]){// no hour
return new Date(Date.UTC(year,month,day));}// match: [4] hour [5] minute [6] second [7] fraction
hour=+match[4];minute=+match[5];second=+match[6];if(match[7]){fraction=match[7].slice(0,3);while(fraction.length<3){// milli-seconds
fraction+='0';}fraction=+fraction;}// match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute
if(match[9]){tz_hour=+match[10];tz_minute=+(match[11]||0);delta=(tz_hour*60+tz_minute)*60000;// delta in mili-seconds
if(match[9]==='-')delta=-delta;}date=new Date(Date.UTC(year,month,day,hour,minute,second,fraction));if(delta)date.setTime(date.getTime()-delta);return date;}function representYamlTimestamp$1(object/*, style*/){return object.toISOString();}var timestamp$2=new Type$n('tag:yaml.org,2002:timestamp',{kind:'scalar',resolve:resolveYamlTimestamp$1,construct:constructYamlTimestamp$1,instanceOf:Date,represent:representYamlTimestamp$1});var Type$m=type$1;function resolveYamlMerge$1(data){return data==='<<'||data===null;}var merge$3=new Type$m('tag:yaml.org,2002:merge',{kind:'scalar',resolve:resolveYamlMerge$1});/*eslint-disable no-bitwise*/var Type$l=type$1;// [ 64, 65, 66 ] -> [ padding, CR, LF ]
var BASE64_MAP$1='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';function resolveYamlBinary$1(data){if(data===null)return false;var code,idx,bitlen=0,max=data.length,map=BASE64_MAP$1;// Convert one by one.
for(idx=0;idx<max;idx++){code=map.indexOf(data.charAt(idx));// Skip CR/LF
if(code>64)continue;// Fail on illegal characters
if(code<0)return false;bitlen+=6;}// If there are any bits left, source was corrupted
return bitlen%8===0;}function constructYamlBinary$1(data){var idx,tailbits,input=data.replace(/[\r\n=]/g,''),// remove CR/LF & padding to simplify scan
max=input.length,map=BASE64_MAP$1,bits=0,result=[];// Collect by 6*4 bits (3 bytes)
for(idx=0;idx<max;idx++){if(idx%4===0&&idx){result.push(bits>>16&0xFF);result.push(bits>>8&0xFF);result.push(bits&0xFF);}bits=bits<<6|map.indexOf(input.charAt(idx));}// Dump tail
tailbits=max%4*6;if(tailbits===0){result.push(bits>>16&0xFF);result.push(bits>>8&0xFF);result.push(bits&0xFF);}else if(tailbits===18){result.push(bits>>10&0xFF);result.push(bits>>2&0xFF);}else if(tailbits===12){result.push(bits>>4&0xFF);}return new Uint8Array(result);}function representYamlBinary$1(object/*, style*/){var result='',bits=0,idx,tail,max=object.length,map=BASE64_MAP$1;// Convert every three bytes to 4 ASCII characters.
for(idx=0;idx<max;idx++){if(idx%3===0&&idx){result+=map[bits>>18&0x3F];result+=map[bits>>12&0x3F];result+=map[bits>>6&0x3F];result+=map[bits&0x3F];}bits=(bits<<8)+object[idx];}// Dump tail
tail=max%3;if(tail===0){result+=map[bits>>18&0x3F];result+=map[bits>>12&0x3F];result+=map[bits>>6&0x3F];result+=map[bits&0x3F];}else if(tail===2){result+=map[bits>>10&0x3F];result+=map[bits>>4&0x3F];result+=map[bits<<2&0x3F];result+=map[64];}else if(tail===1){result+=map[bits>>2&0x3F];result+=map[bits<<4&0x3F];result+=map[64];result+=map[64];}return result;}function isBinary$1(obj){return Object.prototype.toString.call(obj)==='[object Uint8Array]';}var binary$2=new Type$l('tag:yaml.org,2002:binary',{kind:'scalar',resolve:resolveYamlBinary$1,construct:constructYamlBinary$1,predicate:isBinary$1,represent:representYamlBinary$1});var Type$k=type$1;var _hasOwnProperty$7=Object.prototype.hasOwnProperty;var _toString$5=Object.prototype.toString;function resolveYamlOmap$1(data){if(data===null)return true;var objectKeys=[],index,length,pair,pairKey,pairHasKey,object=data;for(index=0,length=object.length;index<length;index+=1){pair=object[index];pairHasKey=false;if(_toString$5.call(pair)!=='[object Object]')return false;for(pairKey in pair){if(_hasOwnProperty$7.call(pair,pairKey)){if(!pairHasKey)pairHasKey=true;else return false;}}if(!pairHasKey)return false;if(objectKeys.indexOf(pairKey)===-1)objectKeys.push(pairKey);else return false;}return true;}function constructYamlOmap$1(data){return data!==null?data:[];}var omap$1=new Type$k('tag:yaml.org,2002:omap',{kind:'sequence',resolve:resolveYamlOmap$1,construct:constructYamlOmap$1});var Type$j=type$1;var _toString$4=Object.prototype.toString;function resolveYamlPairs$1(data){if(data===null)return true;var index,length,pair,keys,result,object=data;result=new Array(object.length);for(index=0,length=object.length;index<length;index+=1){pair=object[index];if(_toString$4.call(pair)!=='[object Object]')return false;keys=Object.keys(pair);if(keys.length!==1)return false;result[index]=[keys[0],pair[keys[0]]];}return true;}function constructYamlPairs$1(data){if(data===null)return[];var index,length,pair,keys,result,object=data;result=new Array(object.length);for(index=0,length=object.length;index<length;index+=1){pair=object[index];keys=Object.keys(pair);result[index]=[keys[0],pair[keys[0]]];}return result;}var pairs$2=new Type$j('tag:yaml.org,2002:pairs',{kind:'sequence',resolve:resolveYamlPairs$1,construct:constructYamlPairs$1});var Type$i=type$1;var _hasOwnProperty$6=Object.prototype.hasOwnProperty;function resolveYamlSet$1(data){if(data===null)return true;var key,object=data;for(key in object){if(_hasOwnProperty$6.call(object,key)){if(object[key]!==null)return false;}}return true;}function constructYamlSet$1(data){return data!==null?data:{};}var set$1=new Type$i('tag:yaml.org,2002:set',{kind:'mapping',resolve:resolveYamlSet$1,construct:constructYamlSet$1});var _default=core$5.extend({implicit:[timestamp$2,merge$3],explicit:[binary$2,omap$1,pairs$2,set$1]});/*eslint-disable max-len,no-use-before-define*/var common$a=common$e;var YAMLException$6=exception$1;var makeSnippet=snippet;var DEFAULT_SCHEMA$1=_default;var _hasOwnProperty$5=Object.prototype.hasOwnProperty;var CONTEXT_FLOW_IN$1=1;var CONTEXT_FLOW_OUT$1=2;var CONTEXT_BLOCK_IN$1=3;var CONTEXT_BLOCK_OUT$1=4;var CHOMPING_CLIP$1=1;var CHOMPING_STRIP$1=2;var CHOMPING_KEEP$1=3;var PATTERN_NON_PRINTABLE$1=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;var PATTERN_NON_ASCII_LINE_BREAKS$1=/[\x85\u2028\u2029]/;var PATTERN_FLOW_INDICATORS$1=/[,\[\]\{\}]/;var PATTERN_TAG_HANDLE$1=/^(?:!|!!|![a-z\-]+!)$/i;var PATTERN_TAG_URI$1=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function _class$1(obj){return Object.prototype.toString.call(obj);}function is_EOL$1(c){return c===0x0A/* LF */||c===0x0D/* CR */;}function is_WHITE_SPACE$1(c){return c===0x09/* Tab */||c===0x20/* Space */;}function is_WS_OR_EOL$1(c){return c===0x09/* Tab */||c===0x20/* Space */||c===0x0A/* LF */||c===0x0D/* CR */;}function is_FLOW_INDICATOR$1(c){return c===0x2C/* , */||c===0x5B/* [ */||c===0x5D/* ] */||c===0x7B/* { */||c===0x7D/* } */;}function fromHexCode$1(c){var lc;if(0x30/* 0 */<=c&&c<=0x39/* 9 */){return c-0x30;}/*eslint-disable no-bitwise*/lc=c|0x20;if(0x61/* a */<=lc&&lc<=0x66/* f */){return lc-0x61+10;}return-1;}function escapedHexLen$1(c){if(c===0x78/* x */){return 2;}if(c===0x75/* u */){return 4;}if(c===0x55/* U */){return 8;}return 0;}function fromDecimalCode$1(c){if(0x30/* 0 */<=c&&c<=0x39/* 9 */){return c-0x30;}return-1;}function simpleEscapeSequence$1(c){/* eslint-disable indent */return c===0x30/* 0 */?'\x00':c===0x61/* a */?'\x07':c===0x62/* b */?'\x08':c===0x74/* t */?'\x09':c===0x09/* Tab */?'\x09':c===0x6E/* n */?'\x0A':c===0x76/* v */?'\x0B':c===0x66/* f */?'\x0C':c===0x72/* r */?'\x0D':c===0x65/* e */?'\x1B':c===0x20/* Space */?' ':c===0x22/* " */?'\x22':c===0x2F/* / */?'/':c===0x5C/* \ */?'\x5C':c===0x4E/* N */?'\x85':c===0x5F/* _ */?'\xA0':c===0x4C/* L */?'\u2028':c===0x50/* P */?'\u2029':'';}function charFromCodepoint$1(c){if(c<=0xFFFF){return String.fromCharCode(c);}// Encode UTF-16 surrogate pair
// https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
return String.fromCharCode((c-0x010000>>10)+0xD800,(c-0x010000&0x03FF)+0xDC00);}var simpleEscapeCheck$1=new Array(256);// integer, for fast access
var simpleEscapeMap$1=new Array(256);for(var i$1=0;i$1<256;i$1++){simpleEscapeCheck$1[i$1]=simpleEscapeSequence$1(i$1)?1:0;simpleEscapeMap$1[i$1]=simpleEscapeSequence$1(i$1);}function State$3(input,options){this.input=input;this.filename=options['filename']||null;this.schema=options['schema']||DEFAULT_SCHEMA$1;this.onWarning=options['onWarning']||null;// (Hidden) Remove? makes the loader to expect YAML 1.1 documents
// if such documents have no explicit %YAML directive
this.legacy=options['legacy']||false;this.json=options['json']||false;this.listener=options['listener']||null;this.implicitTypes=this.schema.compiledImplicit;this.typeMap=this.schema.compiledTypeMap;this.length=input.length;this.position=0;this.line=0;this.lineStart=0;this.lineIndent=0;// position of first leading tab in the current line,
// used to make sure there are no tabs in the indentation
this.firstTabInLine=-1;this.documents=[];/*
  this.version;
  this.checkLineBreaks;
  this.tagMap;
  this.anchorMap;
  this.tag;
  this.anchor;
  this.kind;
  this.result;*/}function generateError$1(state,message){var mark={name:state.filename,buffer:state.input.slice(0,-1),// omit trailing \0
position:state.position,line:state.line,column:state.position-state.lineStart};mark.snippet=makeSnippet(mark);return new YAMLException$6(message,mark);}function throwError$2(state,message){throw generateError$1(state,message);}function throwWarning$1(state,message){if(state.onWarning){state.onWarning.call(null,generateError$1(state,message));}}var directiveHandlers$1={YAML:function handleYamlDirective(state,name,args){var match,major,minor;if(state.version!==null){throwError$2(state,'duplication of %YAML directive');}if(args.length!==1){throwError$2(state,'YAML directive accepts exactly one argument');}match=/^([0-9]+)\.([0-9]+)$/.exec(args[0]);if(match===null){throwError$2(state,'ill-formed argument of the YAML directive');}major=parseInt(match[1],10);minor=parseInt(match[2],10);if(major!==1){throwError$2(state,'unacceptable YAML version of the document');}state.version=args[0];state.checkLineBreaks=minor<2;if(minor!==1&&minor!==2){throwWarning$1(state,'unsupported YAML version of the document');}},TAG:function handleTagDirective(state,name,args){var handle,prefix;if(args.length!==2){throwError$2(state,'TAG directive accepts exactly two arguments');}handle=args[0];prefix=args[1];if(!PATTERN_TAG_HANDLE$1.test(handle)){throwError$2(state,'ill-formed tag handle (first argument) of the TAG directive');}if(_hasOwnProperty$5.call(state.tagMap,handle)){throwError$2(state,'there is a previously declared suffix for "'+handle+'" tag handle');}if(!PATTERN_TAG_URI$1.test(prefix)){throwError$2(state,'ill-formed tag prefix (second argument) of the TAG directive');}try{prefix=decodeURIComponent(prefix);}catch(err){throwError$2(state,'tag prefix is malformed: '+prefix);}state.tagMap[handle]=prefix;}};function captureSegment$1(state,start,end,checkJson){var _position,_length,_character,_result;if(start<end){_result=state.input.slice(start,end);if(checkJson){for(_position=0,_length=_result.length;_position<_length;_position+=1){_character=_result.charCodeAt(_position);if(!(_character===0x09||0x20<=_character&&_character<=0x10FFFF)){throwError$2(state,'expected valid JSON character');}}}else if(PATTERN_NON_PRINTABLE$1.test(_result)){throwError$2(state,'the stream contains non-printable characters');}state.result+=_result;}}function mergeMappings$1(state,destination,source,overridableKeys){var sourceKeys,key,index,quantity;if(!common$a.isObject(source)){throwError$2(state,'cannot merge mappings; the provided source object is unacceptable');}sourceKeys=Object.keys(source);for(index=0,quantity=sourceKeys.length;index<quantity;index+=1){key=sourceKeys[index];if(!_hasOwnProperty$5.call(destination,key)){destination[key]=source[key];overridableKeys[key]=true;}}}function storeMappingPair$1(state,_result,overridableKeys,keyTag,keyNode,valueNode,startLine,startLineStart,startPos){var index,quantity;// The output is a plain object here, so keys can only be strings.
// We need to convert keyNode to a string, but doing so can hang the process
// (deeply nested arrays that explode exponentially using aliases).
if(Array.isArray(keyNode)){keyNode=Array.prototype.slice.call(keyNode);for(index=0,quantity=keyNode.length;index<quantity;index+=1){if(Array.isArray(keyNode[index])){throwError$2(state,'nested arrays are not supported inside keys');}if(typeof keyNode==='object'&&_class$1(keyNode[index])==='[object Object]'){keyNode[index]='[object Object]';}}}// Avoid code execution in load() via toString property
// (still use its own toString for arrays, timestamps,
// and whatever user schema extensions happen to have @@toStringTag)
if(typeof keyNode==='object'&&_class$1(keyNode)==='[object Object]'){keyNode='[object Object]';}keyNode=String(keyNode);if(_result===null){_result={};}if(keyTag==='tag:yaml.org,2002:merge'){if(Array.isArray(valueNode)){for(index=0,quantity=valueNode.length;index<quantity;index+=1){mergeMappings$1(state,_result,valueNode[index],overridableKeys);}}else{mergeMappings$1(state,_result,valueNode,overridableKeys);}}else{if(!state.json&&!_hasOwnProperty$5.call(overridableKeys,keyNode)&&_hasOwnProperty$5.call(_result,keyNode)){state.line=startLine||state.line;state.lineStart=startLineStart||state.lineStart;state.position=startPos||state.position;throwError$2(state,'duplicated mapping key');}// used for this specific key only because Object.defineProperty is slow
if(keyNode==='__proto__'){Object.defineProperty(_result,keyNode,{configurable:true,enumerable:true,writable:true,value:valueNode});}else{_result[keyNode]=valueNode;}delete overridableKeys[keyNode];}return _result;}function readLineBreak$1(state){var ch;ch=state.input.charCodeAt(state.position);if(ch===0x0A/* LF */){state.position++;}else if(ch===0x0D/* CR */){state.position++;if(state.input.charCodeAt(state.position)===0x0A/* LF */){state.position++;}}else{throwError$2(state,'a line break is expected');}state.line+=1;state.lineStart=state.position;state.firstTabInLine=-1;}function skipSeparationSpace$1(state,allowComments,checkIndent){var lineBreaks=0,ch=state.input.charCodeAt(state.position);while(ch!==0){while(is_WHITE_SPACE$1(ch)){if(ch===0x09/* Tab */&&state.firstTabInLine===-1){state.firstTabInLine=state.position;}ch=state.input.charCodeAt(++state.position);}if(allowComments&&ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0x0A/* LF */&&ch!==0x0D/* CR */&&ch!==0);}if(is_EOL$1(ch)){readLineBreak$1(state);ch=state.input.charCodeAt(state.position);lineBreaks++;state.lineIndent=0;while(ch===0x20/* Space */){state.lineIndent++;ch=state.input.charCodeAt(++state.position);}}else{break;}}if(checkIndent!==-1&&lineBreaks!==0&&state.lineIndent<checkIndent){throwWarning$1(state,'deficient indentation');}return lineBreaks;}function testDocumentSeparator$1(state){var _position=state.position,ch;ch=state.input.charCodeAt(_position);// Condition state.position === state.lineStart is tested
// in parent on each call, for efficiency. No needs to test here again.
if((ch===0x2D/* - */||ch===0x2E/* . */)&&ch===state.input.charCodeAt(_position+1)&&ch===state.input.charCodeAt(_position+2)){_position+=3;ch=state.input.charCodeAt(_position);if(ch===0||is_WS_OR_EOL$1(ch)){return true;}}return false;}function writeFoldedLines$1(state,count){if(count===1){state.result+=' ';}else if(count>1){state.result+=common$a.repeat('\n',count-1);}}function readPlainScalar$1(state,nodeIndent,withinFlowCollection){var preceding,following,captureStart,captureEnd,hasPendingContent,_line,_lineStart,_lineIndent,_kind=state.kind,_result=state.result,ch;ch=state.input.charCodeAt(state.position);if(is_WS_OR_EOL$1(ch)||is_FLOW_INDICATOR$1(ch)||ch===0x23/* # */||ch===0x26/* & */||ch===0x2A/* * */||ch===0x21/* ! */||ch===0x7C/* | */||ch===0x3E/* > */||ch===0x27/* ' */||ch===0x22/* " */||ch===0x25/* % */||ch===0x40/* @ */||ch===0x60/* ` */){return false;}if(ch===0x3F/* ? */||ch===0x2D/* - */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL$1(following)||withinFlowCollection&&is_FLOW_INDICATOR$1(following)){return false;}}state.kind='scalar';state.result='';captureStart=captureEnd=state.position;hasPendingContent=false;while(ch!==0){if(ch===0x3A/* : */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL$1(following)||withinFlowCollection&&is_FLOW_INDICATOR$1(following)){break;}}else if(ch===0x23/* # */){preceding=state.input.charCodeAt(state.position-1);if(is_WS_OR_EOL$1(preceding)){break;}}else if(state.position===state.lineStart&&testDocumentSeparator$1(state)||withinFlowCollection&&is_FLOW_INDICATOR$1(ch)){break;}else if(is_EOL$1(ch)){_line=state.line;_lineStart=state.lineStart;_lineIndent=state.lineIndent;skipSeparationSpace$1(state,false,-1);if(state.lineIndent>=nodeIndent){hasPendingContent=true;ch=state.input.charCodeAt(state.position);continue;}else{state.position=captureEnd;state.line=_line;state.lineStart=_lineStart;state.lineIndent=_lineIndent;break;}}if(hasPendingContent){captureSegment$1(state,captureStart,captureEnd,false);writeFoldedLines$1(state,state.line-_line);captureStart=captureEnd=state.position;hasPendingContent=false;}if(!is_WHITE_SPACE$1(ch)){captureEnd=state.position+1;}ch=state.input.charCodeAt(++state.position);}captureSegment$1(state,captureStart,captureEnd,false);if(state.result){return true;}state.kind=_kind;state.result=_result;return false;}function readSingleQuotedScalar$1(state,nodeIndent){var ch,captureStart,captureEnd;ch=state.input.charCodeAt(state.position);if(ch!==0x27/* ' */){return false;}state.kind='scalar';state.result='';state.position++;captureStart=captureEnd=state.position;while((ch=state.input.charCodeAt(state.position))!==0){if(ch===0x27/* ' */){captureSegment$1(state,captureStart,state.position,true);ch=state.input.charCodeAt(++state.position);if(ch===0x27/* ' */){captureStart=state.position;state.position++;captureEnd=state.position;}else{return true;}}else if(is_EOL$1(ch)){captureSegment$1(state,captureStart,captureEnd,true);writeFoldedLines$1(state,skipSeparationSpace$1(state,false,nodeIndent));captureStart=captureEnd=state.position;}else if(state.position===state.lineStart&&testDocumentSeparator$1(state)){throwError$2(state,'unexpected end of the document within a single quoted scalar');}else{state.position++;captureEnd=state.position;}}throwError$2(state,'unexpected end of the stream within a single quoted scalar');}function readDoubleQuotedScalar$1(state,nodeIndent){var captureStart,captureEnd,hexLength,hexResult,tmp,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x22/* " */){return false;}state.kind='scalar';state.result='';state.position++;captureStart=captureEnd=state.position;while((ch=state.input.charCodeAt(state.position))!==0){if(ch===0x22/* " */){captureSegment$1(state,captureStart,state.position,true);state.position++;return true;}else if(ch===0x5C/* \ */){captureSegment$1(state,captureStart,state.position,true);ch=state.input.charCodeAt(++state.position);if(is_EOL$1(ch)){skipSeparationSpace$1(state,false,nodeIndent);// TODO: rework to inline fn with no type cast?
}else if(ch<256&&simpleEscapeCheck$1[ch]){state.result+=simpleEscapeMap$1[ch];state.position++;}else if((tmp=escapedHexLen$1(ch))>0){hexLength=tmp;hexResult=0;for(;hexLength>0;hexLength--){ch=state.input.charCodeAt(++state.position);if((tmp=fromHexCode$1(ch))>=0){hexResult=(hexResult<<4)+tmp;}else{throwError$2(state,'expected hexadecimal character');}}state.result+=charFromCodepoint$1(hexResult);state.position++;}else{throwError$2(state,'unknown escape sequence');}captureStart=captureEnd=state.position;}else if(is_EOL$1(ch)){captureSegment$1(state,captureStart,captureEnd,true);writeFoldedLines$1(state,skipSeparationSpace$1(state,false,nodeIndent));captureStart=captureEnd=state.position;}else if(state.position===state.lineStart&&testDocumentSeparator$1(state)){throwError$2(state,'unexpected end of the document within a double quoted scalar');}else{state.position++;captureEnd=state.position;}}throwError$2(state,'unexpected end of the stream within a double quoted scalar');}function readFlowCollection$1(state,nodeIndent){var readNext=true,_line,_lineStart,_pos,_tag=state.tag,_result,_anchor=state.anchor,following,terminator,isPair,isExplicitPair,isMapping,overridableKeys=Object.create(null),keyNode,keyTag,valueNode,ch;ch=state.input.charCodeAt(state.position);if(ch===0x5B/* [ */){terminator=0x5D;/* ] */isMapping=false;_result=[];}else if(ch===0x7B/* { */){terminator=0x7D;/* } */isMapping=true;_result={};}else{return false;}if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(++state.position);while(ch!==0){skipSeparationSpace$1(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if(ch===terminator){state.position++;state.tag=_tag;state.anchor=_anchor;state.kind=isMapping?'mapping':'sequence';state.result=_result;return true;}else if(!readNext){throwError$2(state,'missed comma between flow collection entries');}else if(ch===0x2C/* , */){// "flow collection entries can never be completely empty", as per YAML 1.2, section 7.4
throwError$2(state,"expected the node content, but found ','");}keyTag=keyNode=valueNode=null;isPair=isExplicitPair=false;if(ch===0x3F/* ? */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL$1(following)){isPair=isExplicitPair=true;state.position++;skipSeparationSpace$1(state,true,nodeIndent);}}_line=state.line;// Save the current line.
_lineStart=state.lineStart;_pos=state.position;composeNode$1(state,nodeIndent,CONTEXT_FLOW_IN$1,false,true);keyTag=state.tag;keyNode=state.result;skipSeparationSpace$1(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if((isExplicitPair||state.line===_line)&&ch===0x3A/* : */){isPair=true;ch=state.input.charCodeAt(++state.position);skipSeparationSpace$1(state,true,nodeIndent);composeNode$1(state,nodeIndent,CONTEXT_FLOW_IN$1,false,true);valueNode=state.result;}if(isMapping){storeMappingPair$1(state,_result,overridableKeys,keyTag,keyNode,valueNode,_line,_lineStart,_pos);}else if(isPair){_result.push(storeMappingPair$1(state,null,overridableKeys,keyTag,keyNode,valueNode,_line,_lineStart,_pos));}else{_result.push(keyNode);}skipSeparationSpace$1(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if(ch===0x2C/* , */){readNext=true;ch=state.input.charCodeAt(++state.position);}else{readNext=false;}}throwError$2(state,'unexpected end of the stream within a flow collection');}function readBlockScalar$1(state,nodeIndent){var captureStart,folding,chomping=CHOMPING_CLIP$1,didReadContent=false,detectedIndent=false,textIndent=nodeIndent,emptyLines=0,atMoreIndented=false,tmp,ch;ch=state.input.charCodeAt(state.position);if(ch===0x7C/* | */){folding=false;}else if(ch===0x3E/* > */){folding=true;}else{return false;}state.kind='scalar';state.result='';while(ch!==0){ch=state.input.charCodeAt(++state.position);if(ch===0x2B/* + */||ch===0x2D/* - */){if(CHOMPING_CLIP$1===chomping){chomping=ch===0x2B/* + */?CHOMPING_KEEP$1:CHOMPING_STRIP$1;}else{throwError$2(state,'repeat of a chomping mode identifier');}}else if((tmp=fromDecimalCode$1(ch))>=0){if(tmp===0){throwError$2(state,'bad explicit indentation width of a block scalar; it cannot be less than one');}else if(!detectedIndent){textIndent=nodeIndent+tmp-1;detectedIndent=true;}else{throwError$2(state,'repeat of an indentation width identifier');}}else{break;}}if(is_WHITE_SPACE$1(ch)){do{ch=state.input.charCodeAt(++state.position);}while(is_WHITE_SPACE$1(ch));if(ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(!is_EOL$1(ch)&&ch!==0);}}while(ch!==0){readLineBreak$1(state);state.lineIndent=0;ch=state.input.charCodeAt(state.position);while((!detectedIndent||state.lineIndent<textIndent)&&ch===0x20/* Space */){state.lineIndent++;ch=state.input.charCodeAt(++state.position);}if(!detectedIndent&&state.lineIndent>textIndent){textIndent=state.lineIndent;}if(is_EOL$1(ch)){emptyLines++;continue;}// End of the scalar.
if(state.lineIndent<textIndent){// Perform the chomping.
if(chomping===CHOMPING_KEEP$1){state.result+=common$a.repeat('\n',didReadContent?1+emptyLines:emptyLines);}else if(chomping===CHOMPING_CLIP$1){if(didReadContent){// i.e. only if the scalar is not empty.
state.result+='\n';}}// Break this `while` cycle and go to the funciton's epilogue.
break;}// Folded style: use fancy rules to handle line breaks.
if(folding){// Lines starting with white space characters (more-indented lines) are not folded.
if(is_WHITE_SPACE$1(ch)){atMoreIndented=true;// except for the first content line (cf. Example 8.1)
state.result+=common$a.repeat('\n',didReadContent?1+emptyLines:emptyLines);// End of more-indented block.
}else if(atMoreIndented){atMoreIndented=false;state.result+=common$a.repeat('\n',emptyLines+1);// Just one line break - perceive as the same line.
}else if(emptyLines===0){if(didReadContent){// i.e. only if we have already read some scalar content.
state.result+=' ';}// Several line breaks - perceive as different lines.
}else{state.result+=common$a.repeat('\n',emptyLines);}// Literal style: just add exact number of line breaks between content lines.
}else{// Keep all line breaks except the header line break.
state.result+=common$a.repeat('\n',didReadContent?1+emptyLines:emptyLines);}didReadContent=true;detectedIndent=true;emptyLines=0;captureStart=state.position;while(!is_EOL$1(ch)&&ch!==0){ch=state.input.charCodeAt(++state.position);}captureSegment$1(state,captureStart,state.position,false);}return true;}function readBlockSequence$1(state,nodeIndent){var _line,_tag=state.tag,_anchor=state.anchor,_result=[],following,detected=false,ch;// there is a leading tab before this token, so it can't be a block sequence/mapping;
// it can still be flow sequence/mapping or a scalar
if(state.firstTabInLine!==-1)return false;if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(state.position);while(ch!==0){if(state.firstTabInLine!==-1){state.position=state.firstTabInLine;throwError$2(state,'tab characters must not be used in indentation');}if(ch!==0x2D/* - */){break;}following=state.input.charCodeAt(state.position+1);if(!is_WS_OR_EOL$1(following)){break;}detected=true;state.position++;if(skipSeparationSpace$1(state,true,-1)){if(state.lineIndent<=nodeIndent){_result.push(null);ch=state.input.charCodeAt(state.position);continue;}}_line=state.line;composeNode$1(state,nodeIndent,CONTEXT_BLOCK_IN$1,false,true);_result.push(state.result);skipSeparationSpace$1(state,true,-1);ch=state.input.charCodeAt(state.position);if((state.line===_line||state.lineIndent>nodeIndent)&&ch!==0){throwError$2(state,'bad indentation of a sequence entry');}else if(state.lineIndent<nodeIndent){break;}}if(detected){state.tag=_tag;state.anchor=_anchor;state.kind='sequence';state.result=_result;return true;}return false;}function readBlockMapping$1(state,nodeIndent,flowIndent){var following,allowCompact,_line,_keyLine,_keyLineStart,_keyPos,_tag=state.tag,_anchor=state.anchor,_result={},overridableKeys=Object.create(null),keyTag=null,keyNode=null,valueNode=null,atExplicitKey=false,detected=false,ch;// there is a leading tab before this token, so it can't be a block sequence/mapping;
// it can still be flow sequence/mapping or a scalar
if(state.firstTabInLine!==-1)return false;if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(state.position);while(ch!==0){if(!atExplicitKey&&state.firstTabInLine!==-1){state.position=state.firstTabInLine;throwError$2(state,'tab characters must not be used in indentation');}following=state.input.charCodeAt(state.position+1);_line=state.line;// Save the current line.
//
// Explicit notation case. There are two separate blocks:
// first for the key (denoted by "?") and second for the value (denoted by ":")
//
if((ch===0x3F/* ? */||ch===0x3A/* : */)&&is_WS_OR_EOL$1(following)){if(ch===0x3F/* ? */){if(atExplicitKey){storeMappingPair$1(state,_result,overridableKeys,keyTag,keyNode,null,_keyLine,_keyLineStart,_keyPos);keyTag=keyNode=valueNode=null;}detected=true;atExplicitKey=true;allowCompact=true;}else if(atExplicitKey){// i.e. 0x3A/* : */ === character after the explicit key.
atExplicitKey=false;allowCompact=true;}else{throwError$2(state,'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');}state.position+=1;ch=following;//
// Implicit notation case. Flow-style node as the key first, then ":", and the value.
//
}else{_keyLine=state.line;_keyLineStart=state.lineStart;_keyPos=state.position;if(!composeNode$1(state,flowIndent,CONTEXT_FLOW_OUT$1,false,true)){// Neither implicit nor explicit notation.
// Reading is done. Go to the epilogue.
break;}if(state.line===_line){ch=state.input.charCodeAt(state.position);while(is_WHITE_SPACE$1(ch)){ch=state.input.charCodeAt(++state.position);}if(ch===0x3A/* : */){ch=state.input.charCodeAt(++state.position);if(!is_WS_OR_EOL$1(ch)){throwError$2(state,'a whitespace character is expected after the key-value separator within a block mapping');}if(atExplicitKey){storeMappingPair$1(state,_result,overridableKeys,keyTag,keyNode,null,_keyLine,_keyLineStart,_keyPos);keyTag=keyNode=valueNode=null;}detected=true;atExplicitKey=false;allowCompact=false;keyTag=state.tag;keyNode=state.result;}else if(detected){throwError$2(state,'can not read an implicit mapping pair; a colon is missed');}else{state.tag=_tag;state.anchor=_anchor;return true;// Keep the result of `composeNode`.
}}else if(detected){throwError$2(state,'can not read a block mapping entry; a multiline key may not be an implicit key');}else{state.tag=_tag;state.anchor=_anchor;return true;// Keep the result of `composeNode`.
}}//
// Common reading code for both explicit and implicit notations.
//
if(state.line===_line||state.lineIndent>nodeIndent){if(atExplicitKey){_keyLine=state.line;_keyLineStart=state.lineStart;_keyPos=state.position;}if(composeNode$1(state,nodeIndent,CONTEXT_BLOCK_OUT$1,true,allowCompact)){if(atExplicitKey){keyNode=state.result;}else{valueNode=state.result;}}if(!atExplicitKey){storeMappingPair$1(state,_result,overridableKeys,keyTag,keyNode,valueNode,_keyLine,_keyLineStart,_keyPos);keyTag=keyNode=valueNode=null;}skipSeparationSpace$1(state,true,-1);ch=state.input.charCodeAt(state.position);}if((state.line===_line||state.lineIndent>nodeIndent)&&ch!==0){throwError$2(state,'bad indentation of a mapping entry');}else if(state.lineIndent<nodeIndent){break;}}//
// Epilogue.
//
// Special case: last mapping's node contains only the key in explicit notation.
if(atExplicitKey){storeMappingPair$1(state,_result,overridableKeys,keyTag,keyNode,null,_keyLine,_keyLineStart,_keyPos);}// Expose the resulting mapping.
if(detected){state.tag=_tag;state.anchor=_anchor;state.kind='mapping';state.result=_result;}return detected;}function readTagProperty$1(state){var _position,isVerbatim=false,isNamed=false,tagHandle,tagName,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x21/* ! */)return false;if(state.tag!==null){throwError$2(state,'duplication of a tag property');}ch=state.input.charCodeAt(++state.position);if(ch===0x3C/* < */){isVerbatim=true;ch=state.input.charCodeAt(++state.position);}else if(ch===0x21/* ! */){isNamed=true;tagHandle='!!';ch=state.input.charCodeAt(++state.position);}else{tagHandle='!';}_position=state.position;if(isVerbatim){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0&&ch!==0x3E/* > */);if(state.position<state.length){tagName=state.input.slice(_position,state.position);ch=state.input.charCodeAt(++state.position);}else{throwError$2(state,'unexpected end of the stream within a verbatim tag');}}else{while(ch!==0&&!is_WS_OR_EOL$1(ch)){if(ch===0x21/* ! */){if(!isNamed){tagHandle=state.input.slice(_position-1,state.position+1);if(!PATTERN_TAG_HANDLE$1.test(tagHandle)){throwError$2(state,'named tag handle cannot contain such characters');}isNamed=true;_position=state.position+1;}else{throwError$2(state,'tag suffix cannot contain exclamation marks');}}ch=state.input.charCodeAt(++state.position);}tagName=state.input.slice(_position,state.position);if(PATTERN_FLOW_INDICATORS$1.test(tagName)){throwError$2(state,'tag suffix cannot contain flow indicator characters');}}if(tagName&&!PATTERN_TAG_URI$1.test(tagName)){throwError$2(state,'tag name cannot contain such characters: '+tagName);}try{tagName=decodeURIComponent(tagName);}catch(err){throwError$2(state,'tag name is malformed: '+tagName);}if(isVerbatim){state.tag=tagName;}else if(_hasOwnProperty$5.call(state.tagMap,tagHandle)){state.tag=state.tagMap[tagHandle]+tagName;}else if(tagHandle==='!'){state.tag='!'+tagName;}else if(tagHandle==='!!'){state.tag='tag:yaml.org,2002:'+tagName;}else{throwError$2(state,'undeclared tag handle "'+tagHandle+'"');}return true;}function readAnchorProperty$1(state){var _position,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x26/* & */)return false;if(state.anchor!==null){throwError$2(state,'duplication of an anchor property');}ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL$1(ch)&&!is_FLOW_INDICATOR$1(ch)){ch=state.input.charCodeAt(++state.position);}if(state.position===_position){throwError$2(state,'name of an anchor node must contain at least one character');}state.anchor=state.input.slice(_position,state.position);return true;}function readAlias$1(state){var _position,alias,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x2A/* * */)return false;ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL$1(ch)&&!is_FLOW_INDICATOR$1(ch)){ch=state.input.charCodeAt(++state.position);}if(state.position===_position){throwError$2(state,'name of an alias node must contain at least one character');}alias=state.input.slice(_position,state.position);if(!_hasOwnProperty$5.call(state.anchorMap,alias)){throwError$2(state,'unidentified alias "'+alias+'"');}state.result=state.anchorMap[alias];skipSeparationSpace$1(state,true,-1);return true;}function composeNode$1(state,parentIndent,nodeContext,allowToSeek,allowCompact){var allowBlockStyles,allowBlockScalars,allowBlockCollections,indentStatus=1,// 1: this>parent, 0: this=parent, -1: this<parent
atNewLine=false,hasContent=false,typeIndex,typeQuantity,typeList,type,flowIndent,blockIndent;if(state.listener!==null){state.listener('open',state);}state.tag=null;state.anchor=null;state.kind=null;state.result=null;allowBlockStyles=allowBlockScalars=allowBlockCollections=CONTEXT_BLOCK_OUT$1===nodeContext||CONTEXT_BLOCK_IN$1===nodeContext;if(allowToSeek){if(skipSeparationSpace$1(state,true,-1)){atNewLine=true;if(state.lineIndent>parentIndent){indentStatus=1;}else if(state.lineIndent===parentIndent){indentStatus=0;}else if(state.lineIndent<parentIndent){indentStatus=-1;}}}if(indentStatus===1){while(readTagProperty$1(state)||readAnchorProperty$1(state)){if(skipSeparationSpace$1(state,true,-1)){atNewLine=true;allowBlockCollections=allowBlockStyles;if(state.lineIndent>parentIndent){indentStatus=1;}else if(state.lineIndent===parentIndent){indentStatus=0;}else if(state.lineIndent<parentIndent){indentStatus=-1;}}else{allowBlockCollections=false;}}}if(allowBlockCollections){allowBlockCollections=atNewLine||allowCompact;}if(indentStatus===1||CONTEXT_BLOCK_OUT$1===nodeContext){if(CONTEXT_FLOW_IN$1===nodeContext||CONTEXT_FLOW_OUT$1===nodeContext){flowIndent=parentIndent;}else{flowIndent=parentIndent+1;}blockIndent=state.position-state.lineStart;if(indentStatus===1){if(allowBlockCollections&&(readBlockSequence$1(state,blockIndent)||readBlockMapping$1(state,blockIndent,flowIndent))||readFlowCollection$1(state,flowIndent)){hasContent=true;}else{if(allowBlockScalars&&readBlockScalar$1(state,flowIndent)||readSingleQuotedScalar$1(state,flowIndent)||readDoubleQuotedScalar$1(state,flowIndent)){hasContent=true;}else if(readAlias$1(state)){hasContent=true;if(state.tag!==null||state.anchor!==null){throwError$2(state,'alias node should not have any properties');}}else if(readPlainScalar$1(state,flowIndent,CONTEXT_FLOW_IN$1===nodeContext)){hasContent=true;if(state.tag===null){state.tag='?';}}if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}}}else if(indentStatus===0){// Special case: block sequences are allowed to have same indentation level as the parent.
// http://www.yaml.org/spec/1.2/spec.html#id2799784
hasContent=allowBlockCollections&&readBlockSequence$1(state,blockIndent);}}if(state.tag===null){if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}}else if(state.tag==='?'){// Implicit resolving is not allowed for non-scalar types, and '?'
// non-specific tag is only automatically assigned to plain scalars.
//
// We only need to check kind conformity in case user explicitly assigns '?'
// tag, for example like this: "!<?> [0]"
//
if(state.result!==null&&state.kind!=='scalar'){throwError$2(state,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+state.kind+'"');}for(typeIndex=0,typeQuantity=state.implicitTypes.length;typeIndex<typeQuantity;typeIndex+=1){type=state.implicitTypes[typeIndex];if(type.resolve(state.result)){// `state.result` updated in resolver if matched
state.result=type.construct(state.result);state.tag=type.tag;if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}break;}}}else if(state.tag!=='!'){if(_hasOwnProperty$5.call(state.typeMap[state.kind||'fallback'],state.tag)){type=state.typeMap[state.kind||'fallback'][state.tag];}else{// looking for multi type
type=null;typeList=state.typeMap.multi[state.kind||'fallback'];for(typeIndex=0,typeQuantity=typeList.length;typeIndex<typeQuantity;typeIndex+=1){if(state.tag.slice(0,typeList[typeIndex].tag.length)===typeList[typeIndex].tag){type=typeList[typeIndex];break;}}}if(!type){throwError$2(state,'unknown tag !<'+state.tag+'>');}if(state.result!==null&&type.kind!==state.kind){throwError$2(state,'unacceptable node kind for !<'+state.tag+'> tag; it should be "'+type.kind+'", not "'+state.kind+'"');}if(!type.resolve(state.result,state.tag)){// `state.result` updated in resolver if matched
throwError$2(state,'cannot resolve a node with !<'+state.tag+'> explicit tag');}else{state.result=type.construct(state.result,state.tag);if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}}}if(state.listener!==null){state.listener('close',state);}return state.tag!==null||state.anchor!==null||hasContent;}function readDocument$1(state){var documentStart=state.position,_position,directiveName,directiveArgs,hasDirectives=false,ch;state.version=null;state.checkLineBreaks=state.legacy;state.tagMap=Object.create(null);state.anchorMap=Object.create(null);while((ch=state.input.charCodeAt(state.position))!==0){skipSeparationSpace$1(state,true,-1);ch=state.input.charCodeAt(state.position);if(state.lineIndent>0||ch!==0x25/* % */){break;}hasDirectives=true;ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL$1(ch)){ch=state.input.charCodeAt(++state.position);}directiveName=state.input.slice(_position,state.position);directiveArgs=[];if(directiveName.length<1){throwError$2(state,'directive name must not be less than one character in length');}while(ch!==0){while(is_WHITE_SPACE$1(ch)){ch=state.input.charCodeAt(++state.position);}if(ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0&&!is_EOL$1(ch));break;}if(is_EOL$1(ch))break;_position=state.position;while(ch!==0&&!is_WS_OR_EOL$1(ch)){ch=state.input.charCodeAt(++state.position);}directiveArgs.push(state.input.slice(_position,state.position));}if(ch!==0)readLineBreak$1(state);if(_hasOwnProperty$5.call(directiveHandlers$1,directiveName)){directiveHandlers$1[directiveName](state,directiveName,directiveArgs);}else{throwWarning$1(state,'unknown document directive "'+directiveName+'"');}}skipSeparationSpace$1(state,true,-1);if(state.lineIndent===0&&state.input.charCodeAt(state.position)===0x2D/* - */&&state.input.charCodeAt(state.position+1)===0x2D/* - */&&state.input.charCodeAt(state.position+2)===0x2D/* - */){state.position+=3;skipSeparationSpace$1(state,true,-1);}else if(hasDirectives){throwError$2(state,'directives end mark is expected');}composeNode$1(state,state.lineIndent-1,CONTEXT_BLOCK_OUT$1,false,true);skipSeparationSpace$1(state,true,-1);if(state.checkLineBreaks&&PATTERN_NON_ASCII_LINE_BREAKS$1.test(state.input.slice(documentStart,state.position))){throwWarning$1(state,'non-ASCII line breaks are interpreted as content');}state.documents.push(state.result);if(state.position===state.lineStart&&testDocumentSeparator$1(state)){if(state.input.charCodeAt(state.position)===0x2E/* . */){state.position+=3;skipSeparationSpace$1(state,true,-1);}return;}if(state.position<state.length-1){throwError$2(state,'end of the stream or a document separator is expected');}else{return;}}function loadDocuments$1(input,options){input=String(input);options=options||{};if(input.length!==0){// Add tailing `\n` if not exists
if(input.charCodeAt(input.length-1)!==0x0A/* LF */&&input.charCodeAt(input.length-1)!==0x0D/* CR */){input+='\n';}// Strip BOM
if(input.charCodeAt(0)===0xFEFF){input=input.slice(1);}}var state=new State$3(input,options);var nullpos=input.indexOf('\0');if(nullpos!==-1){state.position=nullpos;throwError$2(state,'null byte is not allowed in input');}// Use 0 as string terminator. That significantly simplifies bounds check.
state.input+='\0';while(state.input.charCodeAt(state.position)===0x20/* Space */){state.lineIndent+=1;state.position+=1;}while(state.position<state.length-1){readDocument$1(state);}return state.documents;}function loadAll$1(input,iterator,options){if(iterator!==null&&typeof iterator==='object'&&typeof options==='undefined'){options=iterator;iterator=null;}var documents=loadDocuments$1(input,options);if(typeof iterator!=='function'){return documents;}for(var index=0,length=documents.length;index<length;index+=1){iterator(documents[index]);}}function load$1(input,options){var documents=loadDocuments$1(input,options);if(documents.length===0){/*eslint-disable no-undefined*/return undefined;}else if(documents.length===1){return documents[0];}throw new YAMLException$6('expected a single document in the stream, but found more');}loader$3.loadAll=loadAll$1;loader$3.load=load$1;var dumper$3={};/*eslint-disable no-use-before-define*/var common$9=common$e;var YAMLException$5=exception$1;var DEFAULT_SCHEMA=_default;var _toString$3=Object.prototype.toString;var _hasOwnProperty$4=Object.prototype.hasOwnProperty;var CHAR_BOM=0xFEFF;var CHAR_TAB$1=0x09;/* Tab */var CHAR_LINE_FEED$1=0x0A;/* LF */var CHAR_CARRIAGE_RETURN$1=0x0D;/* CR */var CHAR_SPACE$1=0x20;/* Space */var CHAR_EXCLAMATION$1=0x21;/* ! */var CHAR_DOUBLE_QUOTE$2=0x22;/* " */var CHAR_SHARP$1=0x23;/* # */var CHAR_PERCENT$1=0x25;/* % */var CHAR_AMPERSAND$1=0x26;/* & */var CHAR_SINGLE_QUOTE$2=0x27;/* ' */var CHAR_ASTERISK$2=0x2A;/* * */var CHAR_COMMA$3=0x2C;/* , */var CHAR_MINUS$1=0x2D;/* - */var CHAR_COLON$1=0x3A;/* : */var CHAR_EQUALS$1=0x3D;/* = */var CHAR_GREATER_THAN$1=0x3E;/* > */var CHAR_QUESTION$1=0x3F;/* ? */var CHAR_COMMERCIAL_AT$1=0x40;/* @ */var CHAR_LEFT_SQUARE_BRACKET$3=0x5B;/* [ */var CHAR_RIGHT_SQUARE_BRACKET$3=0x5D;/* ] */var CHAR_GRAVE_ACCENT$1=0x60;/* ` */var CHAR_LEFT_CURLY_BRACKET$1=0x7B;/* { */var CHAR_VERTICAL_LINE$1=0x7C;/* | */var CHAR_RIGHT_CURLY_BRACKET$1=0x7D;/* } */var ESCAPE_SEQUENCES$1={};ESCAPE_SEQUENCES$1[0x00]='\\0';ESCAPE_SEQUENCES$1[0x07]='\\a';ESCAPE_SEQUENCES$1[0x08]='\\b';ESCAPE_SEQUENCES$1[0x09]='\\t';ESCAPE_SEQUENCES$1[0x0A]='\\n';ESCAPE_SEQUENCES$1[0x0B]='\\v';ESCAPE_SEQUENCES$1[0x0C]='\\f';ESCAPE_SEQUENCES$1[0x0D]='\\r';ESCAPE_SEQUENCES$1[0x1B]='\\e';ESCAPE_SEQUENCES$1[0x22]='\\"';ESCAPE_SEQUENCES$1[0x5C]='\\\\';ESCAPE_SEQUENCES$1[0x85]='\\N';ESCAPE_SEQUENCES$1[0xA0]='\\_';ESCAPE_SEQUENCES$1[0x2028]='\\L';ESCAPE_SEQUENCES$1[0x2029]='\\P';var DEPRECATED_BOOLEANS_SYNTAX$1=['y','Y','yes','Yes','YES','on','On','ON','n','N','no','No','NO','off','Off','OFF'];var DEPRECATED_BASE60_SYNTAX=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function compileStyleMap$1(schema,map){var result,keys,index,length,tag,style,type;if(map===null)return{};result={};keys=Object.keys(map);for(index=0,length=keys.length;index<length;index+=1){tag=keys[index];style=String(map[tag]);if(tag.slice(0,2)==='!!'){tag='tag:yaml.org,2002:'+tag.slice(2);}type=schema.compiledTypeMap['fallback'][tag];if(type&&_hasOwnProperty$4.call(type.styleAliases,style)){style=type.styleAliases[style];}result[tag]=style;}return result;}function encodeHex$1(character){var string,handle,length;string=character.toString(16).toUpperCase();if(character<=0xFF){handle='x';length=2;}else if(character<=0xFFFF){handle='u';length=4;}else if(character<=0xFFFFFFFF){handle='U';length=8;}else{throw new YAMLException$5('code point within a string may not be greater than 0xFFFFFFFF');}return'\\'+handle+common$9.repeat('0',length-string.length)+string;}var QUOTING_TYPE_SINGLE=1,QUOTING_TYPE_DOUBLE=2;function State$2(options){this.schema=options['schema']||DEFAULT_SCHEMA;this.indent=Math.max(1,options['indent']||2);this.noArrayIndent=options['noArrayIndent']||false;this.skipInvalid=options['skipInvalid']||false;this.flowLevel=common$9.isNothing(options['flowLevel'])?-1:options['flowLevel'];this.styleMap=compileStyleMap$1(this.schema,options['styles']||null);this.sortKeys=options['sortKeys']||false;this.lineWidth=options['lineWidth']||80;this.noRefs=options['noRefs']||false;this.noCompatMode=options['noCompatMode']||false;this.condenseFlow=options['condenseFlow']||false;this.quotingType=options['quotingType']==='"'?QUOTING_TYPE_DOUBLE:QUOTING_TYPE_SINGLE;this.forceQuotes=options['forceQuotes']||false;this.replacer=typeof options['replacer']==='function'?options['replacer']:null;this.implicitTypes=this.schema.compiledImplicit;this.explicitTypes=this.schema.compiledExplicit;this.tag=null;this.result='';this.duplicates=[];this.usedDuplicates=null;}// Indents every line in a string. Empty lines (\n only) are not indented.
function indentString$1(string,spaces){var ind=common$9.repeat(' ',spaces),position=0,next=-1,result='',line,length=string.length;while(position<length){next=string.indexOf('\n',position);if(next===-1){line=string.slice(position);position=length;}else{line=string.slice(position,next+1);position=next+1;}if(line.length&&line!=='\n')result+=ind;result+=line;}return result;}function generateNextLine$1(state,level){return'\n'+common$9.repeat(' ',state.indent*level);}function testImplicitResolving$1(state,str){var index,length,type;for(index=0,length=state.implicitTypes.length;index<length;index+=1){type=state.implicitTypes[index];if(type.resolve(str)){return true;}}return false;}// [33] s-white ::= s-space | s-tab
function isWhitespace$1(c){return c===CHAR_SPACE$1||c===CHAR_TAB$1;}// Returns true if the character can be printed without escaping.
// From YAML 1.2: "any allowed characters known to be non-printable
// should also be escaped. [However,] This isn’t mandatory"
// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
function isPrintable$1(c){return 0x00020<=c&&c<=0x00007E||0x000A1<=c&&c<=0x00D7FF&&c!==0x2028&&c!==0x2029||0x0E000<=c&&c<=0x00FFFD&&c!==CHAR_BOM||0x10000<=c&&c<=0x10FFFF;}// [34] ns-char ::= nb-char - s-white
// [27] nb-char ::= c-printable - b-char - c-byte-order-mark
// [26] b-char  ::= b-line-feed | b-carriage-return
// Including s-white (for some reason, examples doesn't match specs in this aspect)
// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark
function isNsCharOrWhitespace(c){return isPrintable$1(c)&&c!==CHAR_BOM// - b-char
&&c!==CHAR_CARRIAGE_RETURN$1&&c!==CHAR_LINE_FEED$1;}// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out
//                             c = flow-in   ⇒ ns-plain-safe-in
//                             c = block-key ⇒ ns-plain-safe-out
//                             c = flow-key  ⇒ ns-plain-safe-in
// [128] ns-plain-safe-out ::= ns-char
// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator
// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )
//                            | ( /* An ns-char preceding */ “#” )
//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )
function isPlainSafe$1(c,prev,inblock){var cIsNsCharOrWhitespace=isNsCharOrWhitespace(c);var cIsNsChar=cIsNsCharOrWhitespace&&!isWhitespace$1(c);return(// ns-plain-safe
inblock?// c = flow-in
cIsNsCharOrWhitespace:cIsNsCharOrWhitespace// - c-flow-indicator
&&c!==CHAR_COMMA$3&&c!==CHAR_LEFT_SQUARE_BRACKET$3&&c!==CHAR_RIGHT_SQUARE_BRACKET$3&&c!==CHAR_LEFT_CURLY_BRACKET$1&&c!==CHAR_RIGHT_CURLY_BRACKET$1// ns-plain-char
)&&c!==CHAR_SHARP$1// false on '#'
&&!(prev===CHAR_COLON$1&&!cIsNsChar)// false on ': '
||isNsCharOrWhitespace(prev)&&!isWhitespace$1(prev)&&c===CHAR_SHARP$1// change to true on '[^ ]#'
||prev===CHAR_COLON$1&&cIsNsChar;// change to true on ':[^ ]'
}// Simplified test for values allowed as the first character in plain style.
function isPlainSafeFirst$1(c){// Uses a subset of ns-char - c-indicator
// where ns-char = nb-char - s-white.
// No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part
return isPrintable$1(c)&&c!==CHAR_BOM&&!isWhitespace$1(c)// - s-white
// - (c-indicator ::=
// “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
&&c!==CHAR_MINUS$1&&c!==CHAR_QUESTION$1&&c!==CHAR_COLON$1&&c!==CHAR_COMMA$3&&c!==CHAR_LEFT_SQUARE_BRACKET$3&&c!==CHAR_RIGHT_SQUARE_BRACKET$3&&c!==CHAR_LEFT_CURLY_BRACKET$1&&c!==CHAR_RIGHT_CURLY_BRACKET$1// | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “"”
&&c!==CHAR_SHARP$1&&c!==CHAR_AMPERSAND$1&&c!==CHAR_ASTERISK$2&&c!==CHAR_EXCLAMATION$1&&c!==CHAR_VERTICAL_LINE$1&&c!==CHAR_EQUALS$1&&c!==CHAR_GREATER_THAN$1&&c!==CHAR_SINGLE_QUOTE$2&&c!==CHAR_DOUBLE_QUOTE$2// | “%” | “@” | “`”)
&&c!==CHAR_PERCENT$1&&c!==CHAR_COMMERCIAL_AT$1&&c!==CHAR_GRAVE_ACCENT$1;}// Simplified test for values allowed as the last character in plain style.
function isPlainSafeLast(c){// just not whitespace or colon, it will be checked to be plain character later
return!isWhitespace$1(c)&&c!==CHAR_COLON$1;}// Same as 'string'.codePointAt(pos), but works in older browsers.
function codePointAt(string,pos){var first=string.charCodeAt(pos),second;if(first>=0xD800&&first<=0xDBFF&&pos+1<string.length){second=string.charCodeAt(pos+1);if(second>=0xDC00&&second<=0xDFFF){// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
return(first-0xD800)*0x400+second-0xDC00+0x10000;}}return first;}// Determines whether block indentation indicator is required.
function needIndentIndicator$1(string){var leadingSpaceRe=/^\n* /;return leadingSpaceRe.test(string);}var STYLE_PLAIN$1=1,STYLE_SINGLE$1=2,STYLE_LITERAL$1=3,STYLE_FOLDED$1=4,STYLE_DOUBLE$1=5;// Determines which scalar styles are possible and returns the preferred style.
// lineWidth = -1 => no limit.
// Pre-conditions: str.length > 0.
// Post-conditions:
//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
function chooseScalarStyle$1(string,singleLineOnly,indentPerLevel,lineWidth,testAmbiguousType,quotingType,forceQuotes,inblock){var i;var char=0;var prevChar=null;var hasLineBreak=false;var hasFoldableLine=false;// only checked if shouldTrackWidth
var shouldTrackWidth=lineWidth!==-1;var previousLineBreak=-1;// count the first line correctly
var plain=isPlainSafeFirst$1(codePointAt(string,0))&&isPlainSafeLast(codePointAt(string,string.length-1));if(singleLineOnly||forceQuotes){// Case: no block styles.
// Check for disallowed characters to rule out plain and single.
for(i=0;i<string.length;char>=0x10000?i+=2:i++){char=codePointAt(string,i);if(!isPrintable$1(char)){return STYLE_DOUBLE$1;}plain=plain&&isPlainSafe$1(char,prevChar,inblock);prevChar=char;}}else{// Case: block styles permitted.
for(i=0;i<string.length;char>=0x10000?i+=2:i++){char=codePointAt(string,i);if(char===CHAR_LINE_FEED$1){hasLineBreak=true;// Check if any line can be folded.
if(shouldTrackWidth){hasFoldableLine=hasFoldableLine||// Foldable line = too long, and not more-indented.
i-previousLineBreak-1>lineWidth&&string[previousLineBreak+1]!==' ';previousLineBreak=i;}}else if(!isPrintable$1(char)){return STYLE_DOUBLE$1;}plain=plain&&isPlainSafe$1(char,prevChar,inblock);prevChar=char;}// in case the end is missing a \n
hasFoldableLine=hasFoldableLine||shouldTrackWidth&&i-previousLineBreak-1>lineWidth&&string[previousLineBreak+1]!==' ';}// Although every style can represent \n without escaping, prefer block styles
// for multiline, since they're more readable and they don't add empty lines.
// Also prefer folding a super-long line.
if(!hasLineBreak&&!hasFoldableLine){// Strings interpretable as another type have to be quoted;
// e.g. the string 'true' vs. the boolean true.
if(plain&&!forceQuotes&&!testAmbiguousType(string)){return STYLE_PLAIN$1;}return quotingType===QUOTING_TYPE_DOUBLE?STYLE_DOUBLE$1:STYLE_SINGLE$1;}// Edge case: block indentation indicator can only have one digit.
if(indentPerLevel>9&&needIndentIndicator$1(string)){return STYLE_DOUBLE$1;}// At this point we know block styles are valid.
// Prefer literal style unless we want to fold.
if(!forceQuotes){return hasFoldableLine?STYLE_FOLDED$1:STYLE_LITERAL$1;}return quotingType===QUOTING_TYPE_DOUBLE?STYLE_DOUBLE$1:STYLE_SINGLE$1;}// Note: line breaking/folding is implemented for only the folded style.
// NB. We drop the last trailing newline (if any) of a returned block scalar
//  since the dumper adds its own newline. This always works:
//    • No ending newline => unaffected; already using strip "-" chomping.
//    • Ending newline    => removed then restored.
//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
function writeScalar$1(state,string,level,iskey,inblock){state.dump=function(){if(string.length===0){return state.quotingType===QUOTING_TYPE_DOUBLE?'""':"''";}if(!state.noCompatMode){if(DEPRECATED_BOOLEANS_SYNTAX$1.indexOf(string)!==-1||DEPRECATED_BASE60_SYNTAX.test(string)){return state.quotingType===QUOTING_TYPE_DOUBLE?'"'+string+'"':"'"+string+"'";}}var indent=state.indent*Math.max(1,level);// no 0-indent scalars
// As indentation gets deeper, let the width decrease monotonically
// to the lower bound min(state.lineWidth, 40).
// Note that this implies
//  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
//  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
// This behaves better than a constant minimum width which disallows narrower options,
// or an indent threshold which causes the width to suddenly increase.
var lineWidth=state.lineWidth===-1?-1:Math.max(Math.min(state.lineWidth,40),state.lineWidth-indent);// Without knowing if keys are implicit/explicit, assume implicit for safety.
var singleLineOnly=iskey// No block styles in flow mode.
||state.flowLevel>-1&&level>=state.flowLevel;function testAmbiguity(string){return testImplicitResolving$1(state,string);}switch(chooseScalarStyle$1(string,singleLineOnly,state.indent,lineWidth,testAmbiguity,state.quotingType,state.forceQuotes&&!iskey,inblock)){case STYLE_PLAIN$1:return string;case STYLE_SINGLE$1:return"'"+string.replace(/'/g,"''")+"'";case STYLE_LITERAL$1:return'|'+blockHeader$1(string,state.indent)+dropEndingNewline$1(indentString$1(string,indent));case STYLE_FOLDED$1:return'>'+blockHeader$1(string,state.indent)+dropEndingNewline$1(indentString$1(foldString$1(string,lineWidth),indent));case STYLE_DOUBLE$1:return'"'+escapeString$1(string)+'"';default:throw new YAMLException$5('impossible error: invalid scalar style');}}();}// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
function blockHeader$1(string,indentPerLevel){var indentIndicator=needIndentIndicator$1(string)?String(indentPerLevel):'';// note the special case: the string '\n' counts as a "trailing" empty line.
var clip=string[string.length-1]==='\n';var keep=clip&&(string[string.length-2]==='\n'||string==='\n');var chomp=keep?'+':clip?'':'-';return indentIndicator+chomp+'\n';}// (See the note for writeScalar.)
function dropEndingNewline$1(string){return string[string.length-1]==='\n'?string.slice(0,-1):string;}// Note: a long line without a suitable break point will exceed the width limit.
// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
function foldString$1(string,width){// In folded style, $k$ consecutive newlines output as $k+1$ newlines—
// unless they're before or after a more-indented line, or at the very
// beginning or end, in which case $k$ maps to $k$.
// Therefore, parse each chunk as newline(s) followed by a content line.
var lineRe=/(\n+)([^\n]*)/g;// first line (possibly an empty line)
var result=function(){var nextLF=string.indexOf('\n');nextLF=nextLF!==-1?nextLF:string.length;lineRe.lastIndex=nextLF;return foldLine$1(string.slice(0,nextLF),width);}();// If we haven't reached the first content line yet, don't add an extra \n.
var prevMoreIndented=string[0]==='\n'||string[0]===' ';var moreIndented;// rest of the lines
var match;while(match=lineRe.exec(string)){var prefix=match[1],line=match[2];moreIndented=line[0]===' ';result+=prefix+(!prevMoreIndented&&!moreIndented&&line!==''?'\n':'')+foldLine$1(line,width);prevMoreIndented=moreIndented;}return result;}// Greedy line breaking.
// Picks the longest line under the limit each time,
// otherwise settles for the shortest line over the limit.
// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
function foldLine$1(line,width){if(line===''||line[0]===' ')return line;// Since a more-indented line adds a \n, breaks can't be followed by a space.
var breakRe=/ [^ ]/g;// note: the match index will always be <= length-2.
var match;// start is an inclusive index. end, curr, and next are exclusive.
var start=0,end,curr=0,next=0;var result='';// Invariants: 0 <= start <= length-1.
//   0 <= curr <= next <= max(0, length-2). curr - start <= width.
// Inside the loop:
//   A match implies length >= 2, so curr and next are <= length-2.
while(match=breakRe.exec(line)){next=match.index;// maintain invariant: curr - start <= width
if(next-start>width){end=curr>start?curr:next;// derive end <= length-2
result+='\n'+line.slice(start,end);// skip the space that was output as \n
start=end+1;// derive start <= length-1
}curr=next;}// By the invariants, start <= length-1, so there is something left over.
// It is either the whole string or a part starting from non-whitespace.
result+='\n';// Insert a break if the remainder is too long and there is a break available.
if(line.length-start>width&&curr>start){result+=line.slice(start,curr)+'\n'+line.slice(curr+1);}else{result+=line.slice(start);}return result.slice(1);// drop extra \n joiner
}// Escapes a double-quoted string.
function escapeString$1(string){var result='';var char=0;var escapeSeq;for(var i=0;i<string.length;char>=0x10000?i+=2:i++){char=codePointAt(string,i);escapeSeq=ESCAPE_SEQUENCES$1[char];if(!escapeSeq&&isPrintable$1(char)){result+=string[i];if(char>=0x10000)result+=string[i+1];}else{result+=escapeSeq||encodeHex$1(char);}}return result;}function writeFlowSequence$1(state,level,object){var _result='',_tag=state.tag,index,length,value;for(index=0,length=object.length;index<length;index+=1){value=object[index];if(state.replacer){value=state.replacer.call(object,String(index),value);}// Write only valid elements, put null instead of invalid elements.
if(writeNode$1(state,level,value,false,false)||typeof value==='undefined'&&writeNode$1(state,level,null,false,false)){if(_result!=='')_result+=','+(!state.condenseFlow?' ':'');_result+=state.dump;}}state.tag=_tag;state.dump='['+_result+']';}function writeBlockSequence$1(state,level,object,compact){var _result='',_tag=state.tag,index,length,value;for(index=0,length=object.length;index<length;index+=1){value=object[index];if(state.replacer){value=state.replacer.call(object,String(index),value);}// Write only valid elements, put null instead of invalid elements.
if(writeNode$1(state,level+1,value,true,true,false,true)||typeof value==='undefined'&&writeNode$1(state,level+1,null,true,true,false,true)){if(!compact||_result!==''){_result+=generateNextLine$1(state,level);}if(state.dump&&CHAR_LINE_FEED$1===state.dump.charCodeAt(0)){_result+='-';}else{_result+='- ';}_result+=state.dump;}}state.tag=_tag;state.dump=_result||'[]';// Empty sequence if no valid values.
}function writeFlowMapping$1(state,level,object){var _result='',_tag=state.tag,objectKeyList=Object.keys(object),index,length,objectKey,objectValue,pairBuffer;for(index=0,length=objectKeyList.length;index<length;index+=1){pairBuffer='';if(_result!=='')pairBuffer+=', ';if(state.condenseFlow)pairBuffer+='"';objectKey=objectKeyList[index];objectValue=object[objectKey];if(state.replacer){objectValue=state.replacer.call(object,objectKey,objectValue);}if(!writeNode$1(state,level,objectKey,false,false)){continue;// Skip this pair because of invalid key;
}if(state.dump.length>1024)pairBuffer+='? ';pairBuffer+=state.dump+(state.condenseFlow?'"':'')+':'+(state.condenseFlow?'':' ');if(!writeNode$1(state,level,objectValue,false,false)){continue;// Skip this pair because of invalid value.
}pairBuffer+=state.dump;// Both key and value are valid.
_result+=pairBuffer;}state.tag=_tag;state.dump='{'+_result+'}';}function writeBlockMapping$1(state,level,object,compact){var _result='',_tag=state.tag,objectKeyList=Object.keys(object),index,length,objectKey,objectValue,explicitPair,pairBuffer;// Allow sorting keys so that the output file is deterministic
if(state.sortKeys===true){// Default sorting
objectKeyList.sort();}else if(typeof state.sortKeys==='function'){// Custom sort function
objectKeyList.sort(state.sortKeys);}else if(state.sortKeys){// Something is wrong
throw new YAMLException$5('sortKeys must be a boolean or a function');}for(index=0,length=objectKeyList.length;index<length;index+=1){pairBuffer='';if(!compact||_result!==''){pairBuffer+=generateNextLine$1(state,level);}objectKey=objectKeyList[index];objectValue=object[objectKey];if(state.replacer){objectValue=state.replacer.call(object,objectKey,objectValue);}if(!writeNode$1(state,level+1,objectKey,true,true,true)){continue;// Skip this pair because of invalid key.
}explicitPair=state.tag!==null&&state.tag!=='?'||state.dump&&state.dump.length>1024;if(explicitPair){if(state.dump&&CHAR_LINE_FEED$1===state.dump.charCodeAt(0)){pairBuffer+='?';}else{pairBuffer+='? ';}}pairBuffer+=state.dump;if(explicitPair){pairBuffer+=generateNextLine$1(state,level);}if(!writeNode$1(state,level+1,objectValue,true,explicitPair)){continue;// Skip this pair because of invalid value.
}if(state.dump&&CHAR_LINE_FEED$1===state.dump.charCodeAt(0)){pairBuffer+=':';}else{pairBuffer+=': ';}pairBuffer+=state.dump;// Both key and value are valid.
_result+=pairBuffer;}state.tag=_tag;state.dump=_result||'{}';// Empty mapping if no valid pairs.
}function detectType$1(state,object,explicit){var _result,typeList,index,length,type,style;typeList=explicit?state.explicitTypes:state.implicitTypes;for(index=0,length=typeList.length;index<length;index+=1){type=typeList[index];if((type.instanceOf||type.predicate)&&(!type.instanceOf||typeof object==='object'&&object instanceof type.instanceOf)&&(!type.predicate||type.predicate(object))){if(explicit){if(type.multi&&type.representName){state.tag=type.representName(object);}else{state.tag=type.tag;}}else{state.tag='?';}if(type.represent){style=state.styleMap[type.tag]||type.defaultStyle;if(_toString$3.call(type.represent)==='[object Function]'){_result=type.represent(object,style);}else if(_hasOwnProperty$4.call(type.represent,style)){_result=type.represent[style](object,style);}else{throw new YAMLException$5('!<'+type.tag+'> tag resolver accepts not "'+style+'" style');}state.dump=_result;}return true;}}return false;}// Serializes `object` and writes it to global `result`.
// Returns true on success, or false on invalid object.
//
function writeNode$1(state,level,object,block,compact,iskey,isblockseq){state.tag=null;state.dump=object;if(!detectType$1(state,object,false)){detectType$1(state,object,true);}var type=_toString$3.call(state.dump);var inblock=block;var tagStr;if(block){block=state.flowLevel<0||state.flowLevel>level;}var objectOrArray=type==='[object Object]'||type==='[object Array]',duplicateIndex,duplicate;if(objectOrArray){duplicateIndex=state.duplicates.indexOf(object);duplicate=duplicateIndex!==-1;}if(state.tag!==null&&state.tag!=='?'||duplicate||state.indent!==2&&level>0){compact=false;}if(duplicate&&state.usedDuplicates[duplicateIndex]){state.dump='*ref_'+duplicateIndex;}else{if(objectOrArray&&duplicate&&!state.usedDuplicates[duplicateIndex]){state.usedDuplicates[duplicateIndex]=true;}if(type==='[object Object]'){if(block&&Object.keys(state.dump).length!==0){writeBlockMapping$1(state,level,state.dump,compact);if(duplicate){state.dump='&ref_'+duplicateIndex+state.dump;}}else{writeFlowMapping$1(state,level,state.dump);if(duplicate){state.dump='&ref_'+duplicateIndex+' '+state.dump;}}}else if(type==='[object Array]'){if(block&&state.dump.length!==0){if(state.noArrayIndent&&!isblockseq&&level>0){writeBlockSequence$1(state,level-1,state.dump,compact);}else{writeBlockSequence$1(state,level,state.dump,compact);}if(duplicate){state.dump='&ref_'+duplicateIndex+state.dump;}}else{writeFlowSequence$1(state,level,state.dump);if(duplicate){state.dump='&ref_'+duplicateIndex+' '+state.dump;}}}else if(type==='[object String]'){if(state.tag!=='?'){writeScalar$1(state,state.dump,level,iskey,inblock);}}else if(type==='[object Undefined]'){return false;}else{if(state.skipInvalid)return false;throw new YAMLException$5('unacceptable kind of an object to dump '+type);}if(state.tag!==null&&state.tag!=='?'){// Need to encode all characters except those allowed by the spec:
//
// [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */
// [36] ns-hex-digit    ::=  ns-dec-digit
//                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */
// [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */
// [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”
// [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”
//                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”
//                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”
//
// Also need to encode '!' because it has special meaning (end of tag prefix).
//
tagStr=encodeURI(state.tag[0]==='!'?state.tag.slice(1):state.tag).replace(/!/g,'%21');if(state.tag[0]==='!'){tagStr='!'+tagStr;}else if(tagStr.slice(0,18)==='tag:yaml.org,2002:'){tagStr='!!'+tagStr.slice(18);}else{tagStr='!<'+tagStr+'>';}state.dump=tagStr+' '+state.dump;}}return true;}function getDuplicateReferences$1(object,state){var objects=[],duplicatesIndexes=[],index,length;inspectNode$1(object,objects,duplicatesIndexes);for(index=0,length=duplicatesIndexes.length;index<length;index+=1){state.duplicates.push(objects[duplicatesIndexes[index]]);}state.usedDuplicates=new Array(length);}function inspectNode$1(object,objects,duplicatesIndexes){var objectKeyList,index,length;if(object!==null&&typeof object==='object'){index=objects.indexOf(object);if(index!==-1){if(duplicatesIndexes.indexOf(index)===-1){duplicatesIndexes.push(index);}}else{objects.push(object);if(Array.isArray(object)){for(index=0,length=object.length;index<length;index+=1){inspectNode$1(object[index],objects,duplicatesIndexes);}}else{objectKeyList=Object.keys(object);for(index=0,length=objectKeyList.length;index<length;index+=1){inspectNode$1(object[objectKeyList[index]],objects,duplicatesIndexes);}}}}}function dump$1(input,options){options=options||{};var state=new State$2(options);if(!state.noRefs)getDuplicateReferences$1(input,state);var value=input;if(state.replacer){value=state.replacer.call({'':value},'',value);}if(writeNode$1(state,0,value,true,true))return state.dump+'\n';return'';}dumper$3.dump=dump$1;var loader$2=loader$3;var dumper$2=dumper$3;function renamed(from,to){return function(){throw new Error('Function yaml.'+from+' is removed in js-yaml 4. '+'Use yaml.'+to+' instead, which is now safe by default.');};}jsYaml$2.Type=type$1;jsYaml$2.Schema=schema$1;jsYaml$2.FAILSAFE_SCHEMA=failsafe$1;jsYaml$2.JSON_SCHEMA=json$1;jsYaml$2.CORE_SCHEMA=core$5;jsYaml$2.DEFAULT_SCHEMA=_default;jsYaml$2.load=loader$2.load;jsYaml$2.loadAll=loader$2.loadAll;jsYaml$2.dump=dumper$2.dump;jsYaml$2.YAMLException=exception$1;// Re-export all types in case user wants to create custom schema
jsYaml$2.types={binary:binary$2,float:float$1,map:map$2,null:_null$1,pairs:pairs$2,set:set$1,timestamp:timestamp$2,bool:bool$1,int:int$1,merge:merge$3,omap:omap$1,seq:seq$1,str:str$1};// Removed functions from JS-YAML 3.0.x
jsYaml$2.safeLoad=renamed('safeLoad','load');jsYaml$2.safeLoadAll=renamed('safeLoadAll','loadAll');jsYaml$2.safeDump=renamed('safeDump','dump');var old={};var hasRequiredOld;function requireOld(){if(hasRequiredOld)return old;hasRequiredOld=1;// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var pathModule=path__default.default;var isWindows=process.platform==='win32';var fs=require$$0__default.default;// JavaScript implementation of realpath, ported from node pre-v6
var DEBUG=process.env.NODE_DEBUG&&/fs/.test(process.env.NODE_DEBUG);function rethrow(){// Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and
// is fairly slow to generate.
var callback;if(DEBUG){var backtrace=new Error();callback=debugCallback;}else callback=missingCallback;return callback;function debugCallback(err){if(err){backtrace.message=err.message;err=backtrace;missingCallback(err);}}function missingCallback(err){if(err){if(process.throwDeprecation)throw err;// Forgot a callback but don't know where? Use NODE_DEBUG=fs
else if(!process.noDeprecation){var msg='fs: missing callback '+(err.stack||err.message);if(process.traceDeprecation)console.trace(msg);else console.error(msg);}}}}function maybeCallback(cb){return typeof cb==='function'?cb:rethrow();}// Regexp that finds the next partion of a (partial) path
// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']
if(isWindows){var nextPartRe=/(.*?)(?:[\/\\]+|$)/g;}else{var nextPartRe=/(.*?)(?:[\/]+|$)/g;}// Regex to find the device root, including trailing slash. E.g. 'c:\\'.
if(isWindows){var splitRootRe=/^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;}else{var splitRootRe=/^[\/]*/;}old.realpathSync=function realpathSync(p,cache){// make p is absolute
p=pathModule.resolve(p);if(cache&&Object.prototype.hasOwnProperty.call(cache,p)){return cache[p];}var original=p,seenLinks={},knownHard={};// current character position in p
var pos;// the partial path so far, including a trailing slash if any
var current;// the partial path without a trailing slash (except when pointing at a root)
var base;// the partial path scanned in the previous round, with slash
var previous;start();function start(){// Skip over roots
var m=splitRootRe.exec(p);pos=m[0].length;current=m[0];base=m[0];previous='';// On windows, check that the root exists. On unix there is no need.
if(isWindows&&!knownHard[base]){fs.lstatSync(base);knownHard[base]=true;}}// walk down the path, swapping out linked pathparts for their real
// values
// NB: p.length changes.
while(pos<p.length){// find the next part
nextPartRe.lastIndex=pos;var result=nextPartRe.exec(p);previous=current;current+=result[0];base=previous+result[1];pos=nextPartRe.lastIndex;// continue if not a symlink
if(knownHard[base]||cache&&cache[base]===base){continue;}var resolvedLink;if(cache&&Object.prototype.hasOwnProperty.call(cache,base)){// some known symbolic link.  no need to stat again.
resolvedLink=cache[base];}else{var stat=fs.lstatSync(base);if(!stat.isSymbolicLink()){knownHard[base]=true;if(cache)cache[base]=base;continue;}// read the link if it wasn't read before
// dev/ino always return 0 on windows, so skip the check.
var linkTarget=null;if(!isWindows){var id=stat.dev.toString(32)+':'+stat.ino.toString(32);if(seenLinks.hasOwnProperty(id)){linkTarget=seenLinks[id];}}if(linkTarget===null){fs.statSync(base);linkTarget=fs.readlinkSync(base);}resolvedLink=pathModule.resolve(previous,linkTarget);// track this, if given a cache.
if(cache)cache[base]=resolvedLink;if(!isWindows)seenLinks[id]=linkTarget;}// resolve the link, then start over
p=pathModule.resolve(resolvedLink,p.slice(pos));start();}if(cache)cache[original]=p;return p;};old.realpath=function realpath(p,cache,cb){if(typeof cb!=='function'){cb=maybeCallback(cache);cache=null;}// make p is absolute
p=pathModule.resolve(p);if(cache&&Object.prototype.hasOwnProperty.call(cache,p)){return process.nextTick(cb.bind(null,null,cache[p]));}var original=p,seenLinks={},knownHard={};// current character position in p
var pos;// the partial path so far, including a trailing slash if any
var current;// the partial path without a trailing slash (except when pointing at a root)
var base;// the partial path scanned in the previous round, with slash
var previous;start();function start(){// Skip over roots
var m=splitRootRe.exec(p);pos=m[0].length;current=m[0];base=m[0];previous='';// On windows, check that the root exists. On unix there is no need.
if(isWindows&&!knownHard[base]){fs.lstat(base,function(err){if(err)return cb(err);knownHard[base]=true;LOOP();});}else{process.nextTick(LOOP);}}// walk down the path, swapping out linked pathparts for their real
// values
function LOOP(){// stop if scanned past end of path
if(pos>=p.length){if(cache)cache[original]=p;return cb(null,p);}// find the next part
nextPartRe.lastIndex=pos;var result=nextPartRe.exec(p);previous=current;current+=result[0];base=previous+result[1];pos=nextPartRe.lastIndex;// continue if not a symlink
if(knownHard[base]||cache&&cache[base]===base){return process.nextTick(LOOP);}if(cache&&Object.prototype.hasOwnProperty.call(cache,base)){// known symbolic link.  no need to stat again.
return gotResolvedLink(cache[base]);}return fs.lstat(base,gotStat);}function gotStat(err,stat){if(err)return cb(err);// if not a symlink, skip to the next path part
if(!stat.isSymbolicLink()){knownHard[base]=true;if(cache)cache[base]=base;return process.nextTick(LOOP);}// stat & read the link if not read before
// call gotTarget as soon as the link target is known
// dev/ino always return 0 on windows, so skip the check.
if(!isWindows){var id=stat.dev.toString(32)+':'+stat.ino.toString(32);if(seenLinks.hasOwnProperty(id)){return gotTarget(null,seenLinks[id],base);}}fs.stat(base,function(err){if(err)return cb(err);fs.readlink(base,function(err,target){if(!isWindows)seenLinks[id]=target;gotTarget(err,target);});});}function gotTarget(err,target,base){if(err)return cb(err);var resolvedLink=pathModule.resolve(previous,target);if(cache)cache[base]=resolvedLink;gotResolvedLink(resolvedLink);}function gotResolvedLink(resolvedLink){// resolve the link, then start over
p=pathModule.resolve(resolvedLink,p.slice(pos));start();}};return old;}var fs_realpath;var hasRequiredFs_realpath;function requireFs_realpath(){if(hasRequiredFs_realpath)return fs_realpath;hasRequiredFs_realpath=1;fs_realpath=realpath;realpath.realpath=realpath;realpath.sync=realpathSync;realpath.realpathSync=realpathSync;realpath.monkeypatch=monkeypatch;realpath.unmonkeypatch=unmonkeypatch;var fs=require$$0__default.default;var origRealpath=fs.realpath;var origRealpathSync=fs.realpathSync;var version=process.version;var ok=/^v[0-5]\./.test(version);var old=requireOld();function newError(er){return er&&er.syscall==='realpath'&&(er.code==='ELOOP'||er.code==='ENOMEM'||er.code==='ENAMETOOLONG');}function realpath(p,cache,cb){if(ok){return origRealpath(p,cache,cb);}if(typeof cache==='function'){cb=cache;cache=null;}origRealpath(p,cache,function(er,result){if(newError(er)){old.realpath(p,cache,cb);}else{cb(er,result);}});}function realpathSync(p,cache){if(ok){return origRealpathSync(p,cache);}try{return origRealpathSync(p,cache);}catch(er){if(newError(er)){return old.realpathSync(p,cache);}else{throw er;}}}function monkeypatch(){fs.realpath=realpath;fs.realpathSync=realpathSync;}function unmonkeypatch(){fs.realpath=origRealpath;fs.realpathSync=origRealpathSync;}return fs_realpath;}const isWindows$2=typeof process==='object'&&process&&process.platform==='win32';var path$i=isWindows$2?{sep:'\\'}:{sep:'/'};var balanced=balancedMatch;var braceExpansion=expandTop;var escSlash='\0SLASH'+Math.random()+'\0';var escOpen='\0OPEN'+Math.random()+'\0';var escClose='\0CLOSE'+Math.random()+'\0';var escComma='\0COMMA'+Math.random()+'\0';var escPeriod='\0PERIOD'+Math.random()+'\0';function numeric(str){return parseInt(str,10)==str?parseInt(str,10):str.charCodeAt(0);}function escapeBraces(str){return str.split('\\\\').join(escSlash).split('\\{').join(escOpen).split('\\}').join(escClose).split('\\,').join(escComma).split('\\.').join(escPeriod);}function unescapeBraces(str){return str.split(escSlash).join('\\').split(escOpen).join('{').split(escClose).join('}').split(escComma).join(',').split(escPeriod).join('.');}// Basically just str.split(","), but handling cases
// where we have nested braced sections, which should be
// treated as individual members, like {a,{b,c},d}
function parseCommaParts(str){if(!str)return[''];var parts=[];var m=balanced('{','}',str);if(!m)return str.split(',');var pre=m.pre;var body=m.body;var post=m.post;var p=pre.split(',');p[p.length-1]+='{'+body+'}';var postParts=parseCommaParts(post);if(post.length){p[p.length-1]+=postParts.shift();p.push.apply(p,postParts);}parts.push.apply(parts,p);return parts;}function expandTop(str){if(!str)return[];// I don't know why Bash 4.3 does this, but it does.
// Anything starting with {} will have the first two bytes preserved
// but *only* at the top level, so {},a}b will not expand to anything,
// but a{},b}c will be expanded to [a}c,abc].
// One could argue that this is a bug in Bash, but since the goal of
// this module is to match Bash's rules, we escape a leading {}
if(str.substr(0,2)==='{}'){str='\\{\\}'+str.substr(2);}return expand$5(escapeBraces(str),true).map(unescapeBraces);}function embrace(str){return'{'+str+'}';}function isPadded(el){return /^-?0\d/.test(el);}function lte(i,y){return i<=y;}function gte(i,y){return i>=y;}function expand$5(str,isTop){var expansions=[];var m=balanced('{','}',str);if(!m)return[str];// no need to expand pre, since it is guaranteed to be free of brace-sets
var pre=m.pre;var post=m.post.length?expand$5(m.post,false):[''];if(/\$$/.test(m.pre)){for(var k=0;k<post.length;k++){var expansion=pre+'{'+m.body+'}'+post[k];expansions.push(expansion);}}else{var isNumericSequence=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);var isAlphaSequence=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);var isSequence=isNumericSequence||isAlphaSequence;var isOptions=m.body.indexOf(',')>=0;if(!isSequence&&!isOptions){// {a},b}
if(m.post.match(/,.*\}/)){str=m.pre+'{'+m.body+escClose+m.post;return expand$5(str);}return[str];}var n;if(isSequence){n=m.body.split(/\.\./);}else{n=parseCommaParts(m.body);if(n.length===1){// x{{a,b}}y ==> x{a}y x{b}y
n=expand$5(n[0],false).map(embrace);if(n.length===1){return post.map(function(p){return m.pre+n[0]+p;});}}}// at this point, n is the parts, and we know it's not a comma set
// with a single entry.
var N;if(isSequence){var x=numeric(n[0]);var y=numeric(n[1]);var width=Math.max(n[0].length,n[1].length);var incr=n.length==3?Math.abs(numeric(n[2])):1;var test=lte;var reverse=y<x;if(reverse){incr*=-1;test=gte;}var pad=n.some(isPadded);N=[];for(var i=x;test(i,y);i+=incr){var c;if(isAlphaSequence){c=String.fromCharCode(i);if(c==='\\')c='';}else{c=String(i);if(pad){var need=width-c.length;if(need>0){var z=new Array(need+1).join('0');if(i<0)c='-'+z+c.slice(1);else c=z+c;}}}N.push(c);}}else{N=[];for(var j=0;j<n.length;j++){N.push.apply(N,expand$5(n[j],false));}}for(var j=0;j<N.length;j++){for(var k=0;k<post.length;k++){var expansion=pre+N[j]+post[k];if(!isTop||isSequence||expansion)expansions.push(expansion);}}}return expansions;}const minimatch$1=minimatch_1=function(p,pattern){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};assertValidPattern(pattern);// shortcut: comments match nothing.
if(!options.nocomment&&pattern.charAt(0)==='#'){return false;}return new Minimatch$1(pattern,options).match(p);};var minimatch_1=minimatch$1;const path$h=path$i;minimatch$1.sep=path$h.sep;const GLOBSTAR=Symbol('globstar **');minimatch$1.GLOBSTAR=GLOBSTAR;const expand$4=braceExpansion;const plTypes={'!':{open:'(?:(?!(?:',close:'))[^/]*?)'},'?':{open:'(?:',close:')?'},'+':{open:'(?:',close:')+'},'*':{open:'(?:',close:')*'},'@':{open:'(?:',close:')'}};// any single thing other than /
// don't need to escape / when using new RegExp()
const qmark='[^/]';// * => any number of characters
const star$1=qmark+'*?';// ** when dots are allowed.  Anything goes, except .. and .
// not (^ or / followed by one or two dots followed by $ or /),
// followed by anything, any number of times.
const twoStarDot='(?:(?!(?:\\\/|^)(?:\\.{1,2})($|\\\/)).)*?';// not a ^ or / followed by a dot,
// followed by anything, any number of times.
const twoStarNoDot='(?:(?!(?:\\\/|^)\\.).)*?';// "abc" -> { a:true, b:true, c:true }
const charSet=s=>s.split('').reduce((set,c)=>{set[c]=true;return set;},{});// characters that need to be escaped in RegExp.
const reSpecials=charSet('().*{}+?[]^$\\!');// characters that indicate we have to add the pattern start
const addPatternStartSet=charSet('[.(');// normalizes slashes.
const slashSplit=/\/+/;minimatch$1.filter=function(pattern){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return(p,i,list)=>minimatch$1(p,pattern,options);};const ext=function(a){let b=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const t={};Object.keys(a).forEach(k=>t[k]=a[k]);Object.keys(b).forEach(k=>t[k]=b[k]);return t;};minimatch$1.defaults=def=>{if(!def||typeof def!=='object'||!Object.keys(def).length){return minimatch$1;}const orig=minimatch$1;const m=(p,pattern,options)=>orig(p,pattern,ext(def,options));m.Minimatch=class Minimatch extends orig.Minimatch{constructor(pattern,options){super(pattern,ext(def,options));}};m.Minimatch.defaults=options=>orig.defaults(ext(def,options)).Minimatch;m.filter=(pattern,options)=>orig.filter(pattern,ext(def,options));m.defaults=options=>orig.defaults(ext(def,options));m.makeRe=(pattern,options)=>orig.makeRe(pattern,ext(def,options));m.braceExpand=(pattern,options)=>orig.braceExpand(pattern,ext(def,options));m.match=(list,pattern,options)=>orig.match(list,pattern,ext(def,options));return m;};// Brace expansion:
// a{b,c}d -> abd acd
// a{b,}c -> abc ac
// a{0..3}d -> a0d a1d a2d a3d
// a{b,c{d,e}f}g -> abg acdfg acefg
// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg
//
// Invalid sets are not expanded.
// a{2..}b -> a{2..}b
// a{b}c -> a{b}c
minimatch$1.braceExpand=(pattern,options)=>braceExpand(pattern,options);const braceExpand=function(pattern){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};assertValidPattern(pattern);// Thanks to Yeting Li <https://github.com/yetingli> for
// improving this regexp to avoid a ReDOS vulnerability.
if(options.nobrace||!/\{(?:(?!\{).)*\}/.test(pattern)){// shortcut. no need to expand.
return[pattern];}return expand$4(pattern);};const MAX_PATTERN_LENGTH=1024*64;const assertValidPattern=pattern=>{if(typeof pattern!=='string'){throw new TypeError('invalid pattern');}if(pattern.length>MAX_PATTERN_LENGTH){throw new TypeError('pattern is too long');}};// parse a component of the expanded set.
// At this point, no pattern may contain "/" in it
// so we're going to return a 2d array, where each entry is the full
// pattern, split on '/', and then turned into a regular expression.
// A regexp is made at the end which joins each array with an
// escaped /, and another full one which joins each regexp with |.
//
// Following the lead of Bash 4.1, note that "**" only has special meaning
// when it is the *only* thing in a path portion.  Otherwise, any series
// of * is equivalent to a single *.  Globstar behavior is enabled by
// default, and can be disabled by setting options.noglobstar.
const SUBPARSE=Symbol('subparse');minimatch$1.makeRe=(pattern,options)=>new Minimatch$1(pattern,options||{}).makeRe();minimatch$1.match=function(list,pattern){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const mm=new Minimatch$1(pattern,options);list=list.filter(f=>mm.match(f));if(mm.options.nonull&&!list.length){list.push(pattern);}return list;};// replace stuff like \* with *
const globUnescape=s=>s.replace(/\\(.)/g,'$1');const charUnescape=s=>s.replace(/\\([^-\]])/g,'$1');const regExpEscape=s=>s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,'\\$&');const braExpEscape=s=>s.replace(/[[\]\\]/g,'\\$&');let Minimatch$1=class Minimatch{constructor(pattern,options){assertValidPattern(pattern);if(!options)options={};this.options=options;this.set=[];this.pattern=pattern;this.windowsPathsNoEscape=!!options.windowsPathsNoEscape||options.allowWindowsEscape===false;if(this.windowsPathsNoEscape){this.pattern=this.pattern.replace(/\\/g,'/');}this.regexp=null;this.negate=false;this.comment=false;this.empty=false;this.partial=!!options.partial;// make the set of regexps etc.
this.make();}debug(){}make(){const pattern=this.pattern;const options=this.options;// empty patterns and comments match nothing.
if(!options.nocomment&&pattern.charAt(0)==='#'){this.comment=true;return;}if(!pattern){this.empty=true;return;}// step 1: figure out negation, etc.
this.parseNegate();// step 2: expand braces
let set=this.globSet=this.braceExpand();if(options.debug)this.debug=function(){return console.error(...arguments);};this.debug(this.pattern,set);// step 3: now we have a set, so turn each one into a series of path-portion
// matching patterns.
// These will be regexps, except in the case of "**", which is
// set to the GLOBSTAR object for globstar behavior,
// and will not contain any / characters
set=this.globParts=set.map(s=>s.split(slashSplit));this.debug(this.pattern,set);// glob --> regexps
set=set.map((s,si,set)=>s.map(this.parse,this));this.debug(this.pattern,set);// filter out everything that didn't compile properly.
set=set.filter(s=>s.indexOf(false)===-1);this.debug(this.pattern,set);this.set=set;}parseNegate(){if(this.options.nonegate)return;const pattern=this.pattern;let negate=false;let negateOffset=0;for(let i=0;i<pattern.length&&pattern.charAt(i)==='!';i++){negate=!negate;negateOffset++;}if(negateOffset)this.pattern=pattern.slice(negateOffset);this.negate=negate;}// set partial to true to test if, for example,
// "/a/b" matches the start of "/*/b/*/d"
// Partial means, if you run out of file before you run
// out of pattern, then that's fine, as long as all
// the parts match.
matchOne(file,pattern,partial){var options=this.options;this.debug('matchOne',{'this':this,file:file,pattern:pattern});this.debug('matchOne',file.length,pattern.length);for(var fi=0,pi=0,fl=file.length,pl=pattern.length;fi<fl&&pi<pl;fi++,pi++){this.debug('matchOne loop');var p=pattern[pi];var f=file[fi];this.debug(pattern,p,f);// should be impossible.
// some invalid regexp stuff in the set.
/* istanbul ignore if */if(p===false)return false;if(p===GLOBSTAR){this.debug('GLOBSTAR',[pattern,p,f]);// "**"
// a/**/b/**/c would match the following:
// a/b/x/y/z/c
// a/x/y/z/b/c
// a/b/x/b/x/c
// a/b/c
// To do this, take the rest of the pattern after
// the **, and see if it would match the file remainder.
// If so, return success.
// If not, the ** "swallows" a segment, and try again.
// This is recursively awful.
//
// a/**/b/**/c matching a/b/x/y/z/c
// - a matches a
// - doublestar
//   - matchOne(b/x/y/z/c, b/**/c)
//     - b matches b
//     - doublestar
//       - matchOne(x/y/z/c, c) -> no
//       - matchOne(y/z/c, c) -> no
//       - matchOne(z/c, c) -> no
//       - matchOne(c, c) yes, hit
var fr=fi;var pr=pi+1;if(pr===pl){this.debug('** at the end');// a ** at the end will just swallow the rest.
// We have found a match.
// however, it will not swallow /.x, unless
// options.dot is set.
// . and .. are *never* matched by **, for explosively
// exponential reasons.
for(;fi<fl;fi++){if(file[fi]==='.'||file[fi]==='..'||!options.dot&&file[fi].charAt(0)==='.')return false;}return true;}// ok, let's see if we can swallow whatever we can.
while(fr<fl){var swallowee=file[fr];this.debug('\nglobstar while',file,fr,pattern,pr,swallowee);// XXX remove this slice.  Just pass the start index.
if(this.matchOne(file.slice(fr),pattern.slice(pr),partial)){this.debug('globstar found match!',fr,fl,swallowee);// found a match.
return true;}else{// can't swallow "." or ".." ever.
// can only swallow ".foo" when explicitly asked.
if(swallowee==='.'||swallowee==='..'||!options.dot&&swallowee.charAt(0)==='.'){this.debug('dot detected!',file,fr,pattern,pr);break;}// ** swallows a segment, and continue.
this.debug('globstar swallow a segment, and continue');fr++;}}// no match was found.
// However, in partial mode, we can't say this is necessarily over.
// If there's more *pattern* left, then
/* istanbul ignore if */if(partial){// ran out of file
this.debug('\n>>> no match, partial?',file,fr,pattern,pr);if(fr===fl)return true;}return false;}// something other than **
// non-magic patterns just have to match exactly
// patterns with magic have been turned into regexps.
var hit;if(typeof p==='string'){hit=f===p;this.debug('string match',p,f,hit);}else{hit=f.match(p);this.debug('pattern match',p,f,hit);}if(!hit)return false;}// Note: ending in / means that we'll get a final ""
// at the end of the pattern.  This can only match a
// corresponding "" at the end of the file.
// If the file ends in /, then it can only match a
// a pattern that ends in /, unless the pattern just
// doesn't have any more for it. But, a/b/ should *not*
// match "a/b/*", even though "" matches against the
// [^/]*? pattern, except in partial mode, where it might
// simply not be reached yet.
// However, a/b/ should still satisfy a/*
// now either we fell off the end of the pattern, or we're done.
if(fi===fl&&pi===pl){// ran out of pattern and filename at the same time.
// an exact hit!
return true;}else if(fi===fl){// ran out of file, but still had pattern left.
// this is ok if we're doing the match as part of
// a glob fs traversal.
return partial;}else/* istanbul ignore else */if(pi===pl){// ran out of pattern, still have file left.
// this is only acceptable if we're on the very last
// empty segment of a file with a trailing slash.
// a/* should match a/b/
return fi===fl-1&&file[fi]==='';}// should be unreachable.
/* istanbul ignore next */throw new Error('wtf?');}braceExpand(){return braceExpand(this.pattern,this.options);}parse(pattern,isSub){assertValidPattern(pattern);const options=this.options;// shortcuts
if(pattern==='**'){if(!options.noglobstar)return GLOBSTAR;else pattern='*';}if(pattern==='')return'';let re='';let hasMagic=false;let escaping=false;// ? => one single character
const patternListStack=[];const negativeLists=[];let stateChar;let inClass=false;let reClassStart=-1;let classStart=-1;let cs;let pl;let sp;// . and .. never match anything that doesn't start with .,
// even when options.dot is set.  However, if the pattern
// starts with ., then traversal patterns can match.
let dotTravAllowed=pattern.charAt(0)==='.';let dotFileAllowed=options.dot||dotTravAllowed;const patternStart=()=>dotTravAllowed?'':dotFileAllowed?'(?!(?:^|\\/)\\.{1,2}(?:$|\\/))':'(?!\\.)';const subPatternStart=p=>p.charAt(0)==='.'?'':options.dot?'(?!(?:^|\\/)\\.{1,2}(?:$|\\/))':'(?!\\.)';const clearStateChar=()=>{if(stateChar){// we had some state-tracking character
// that wasn't consumed by this pass.
switch(stateChar){case'*':re+=star$1;hasMagic=true;break;case'?':re+=qmark;hasMagic=true;break;default:re+='\\'+stateChar;break;}this.debug('clearStateChar %j %j',stateChar,re);stateChar=false;}};for(let i=0,c;i<pattern.length&&(c=pattern.charAt(i));i++){this.debug('%s\t%s %s %j',pattern,i,re,c);// skip over any that are escaped.
if(escaping){/* istanbul ignore next - completely not allowed, even escaped. */if(c==='/'){return false;}if(reSpecials[c]){re+='\\';}re+=c;escaping=false;continue;}switch(c){/* istanbul ignore next */case'/':{// Should already be path-split by now.
return false;}case'\\':if(inClass&&pattern.charAt(i+1)==='-'){re+=c;continue;}clearStateChar();escaping=true;continue;// the various stateChar values
// for the "extglob" stuff.
case'?':case'*':case'+':case'@':case'!':this.debug('%s\t%s %s %j <-- stateChar',pattern,i,re,c);// all of those are literals inside a class, except that
// the glob [!a] means [^a] in regexp
if(inClass){this.debug('  in class');if(c==='!'&&i===classStart+1)c='^';re+=c;continue;}// if we already have a stateChar, then it means
// that there was something like ** or +? in there.
// Handle the stateChar, then proceed with this one.
this.debug('call clearStateChar %j',stateChar);clearStateChar();stateChar=c;// if extglob is disabled, then +(asdf|foo) isn't a thing.
// just clear the statechar *now*, rather than even diving into
// the patternList stuff.
if(options.noext)clearStateChar();continue;case'(':{if(inClass){re+='(';continue;}if(!stateChar){re+='\\(';continue;}const plEntry={type:stateChar,start:i-1,reStart:re.length,open:plTypes[stateChar].open,close:plTypes[stateChar].close};this.debug(this.pattern,'\t',plEntry);patternListStack.push(plEntry);// negation is (?:(?!(?:js)(?:<rest>))[^/]*)
re+=plEntry.open;// next entry starts with a dot maybe?
if(plEntry.start===0&&plEntry.type!=='!'){dotTravAllowed=true;re+=subPatternStart(pattern.slice(i+1));}this.debug('plType %j %j',stateChar,re);stateChar=false;continue;}case')':{const plEntry=patternListStack[patternListStack.length-1];if(inClass||!plEntry){re+='\\)';continue;}patternListStack.pop();// closing an extglob
clearStateChar();hasMagic=true;pl=plEntry;// negation is (?:(?!js)[^/]*)
// The others are (?:<pattern>)<type>
re+=pl.close;if(pl.type==='!'){negativeLists.push(Object.assign(pl,{reEnd:re.length}));}continue;}case'|':{const plEntry=patternListStack[patternListStack.length-1];if(inClass||!plEntry){re+='\\|';continue;}clearStateChar();re+='|';// next subpattern can start with a dot?
if(plEntry.start===0&&plEntry.type!=='!'){dotTravAllowed=true;re+=subPatternStart(pattern.slice(i+1));}continue;}// these are mostly the same in regexp and glob
case'[':// swallow any state-tracking char before the [
clearStateChar();if(inClass){re+='\\'+c;continue;}inClass=true;classStart=i;reClassStart=re.length;re+=c;continue;case']'://  a right bracket shall lose its special
//  meaning and represent itself in
//  a bracket expression if it occurs
//  first in the list.  -- POSIX.2 2.8.3.2
if(i===classStart+1||!inClass){re+='\\'+c;continue;}// split where the last [ was, make sure we don't have
// an invalid re. if so, re-walk the contents of the
// would-be class to re-translate any characters that
// were passed through as-is
// TODO: It would probably be faster to determine this
// without a try/catch and a new RegExp, but it's tricky
// to do safely.  For now, this is safe and works.
cs=pattern.substring(classStart+1,i);try{RegExp('['+braExpEscape(charUnescape(cs))+']');// looks good, finish up the class.
re+=c;}catch(er){// out of order ranges in JS are errors, but in glob syntax,
// they're just a range that matches nothing.
re=re.substring(0,reClassStart)+'(?:$.)';// match nothing ever
}hasMagic=true;inClass=false;continue;default:// swallow any state char that wasn't consumed
clearStateChar();if(reSpecials[c]&&!(c==='^'&&inClass)){re+='\\';}re+=c;break;}// switch
}// for
// handle the case where we left a class open.
// "[abc" is valid, equivalent to "\[abc"
if(inClass){// split where the last [ was, and escape it
// this is a huge pita.  We now have to re-walk
// the contents of the would-be class to re-translate
// any characters that were passed through as-is
cs=pattern.slice(classStart+1);sp=this.parse(cs,SUBPARSE);re=re.substring(0,reClassStart)+'\\['+sp[0];hasMagic=hasMagic||sp[1];}// handle the case where we had a +( thing at the *end*
// of the pattern.
// each pattern list stack adds 3 chars, and we need to go through
// and escape any | chars that were passed through as-is for the regexp.
// Go through and escape them, taking care not to double-escape any
// | chars that were already escaped.
for(pl=patternListStack.pop();pl;pl=patternListStack.pop()){let tail;tail=re.slice(pl.reStart+pl.open.length);this.debug('setting tail',re,pl);// maybe some even number of \, then maybe 1 \, followed by a |
tail=tail.replace(/((?:\\{2}){0,64})(\\?)\|/g,(_,$1,$2)=>{/* istanbul ignore else - should already be done */if(!$2){// the | isn't already escaped, so escape it.
$2='\\';}// need to escape all those slashes *again*, without escaping the
// one that we need for escaping the | character.  As it works out,
// escaping an even number of slashes can be done by simply repeating
// it exactly after itself.  That's why this trick works.
//
// I am sorry that you have to see this.
return $1+$1+$2+'|';});this.debug('tail=%j\n   %s',tail,tail,pl,re);const t=pl.type==='*'?star$1:pl.type==='?'?qmark:'\\'+pl.type;hasMagic=true;re=re.slice(0,pl.reStart)+t+'\\('+tail;}// handle trailing things that only matter at the very end.
clearStateChar();if(escaping){// trailing \\
re+='\\\\';}// only need to apply the nodot start if the re starts with
// something that could conceivably capture a dot
const addPatternStart=addPatternStartSet[re.charAt(0)];// Hack to work around lack of negative lookbehind in JS
// A pattern like: *.!(x).!(y|z) needs to ensure that a name
// like 'a.xyz.yz' doesn't match.  So, the first negative
// lookahead, has to look ALL the way ahead, to the end of
// the pattern.
for(let n=negativeLists.length-1;n>-1;n--){const nl=negativeLists[n];const nlBefore=re.slice(0,nl.reStart);const nlFirst=re.slice(nl.reStart,nl.reEnd-8);let nlAfter=re.slice(nl.reEnd);const nlLast=re.slice(nl.reEnd-8,nl.reEnd)+nlAfter;// Handle nested stuff like *(*.js|!(*.json)), where open parens
// mean that we should *not* include the ) in the bit that is considered
// "after" the negated section.
const closeParensBefore=nlBefore.split(')').length;const openParensBefore=nlBefore.split('(').length-closeParensBefore;let cleanAfter=nlAfter;for(let i=0;i<openParensBefore;i++){cleanAfter=cleanAfter.replace(/\)[+*?]?/,'');}nlAfter=cleanAfter;const dollar=nlAfter===''&&isSub!==SUBPARSE?'(?:$|\\/)':'';re=nlBefore+nlFirst+nlAfter+dollar+nlLast;}// if the re is not "" at this point, then we need to make sure
// it doesn't match against an empty path part.
// Otherwise a/* will match a/, which it should not.
if(re!==''&&hasMagic){re='(?=.)'+re;}if(addPatternStart){re=patternStart()+re;}// parsing just a piece of a larger pattern.
if(isSub===SUBPARSE){return[re,hasMagic];}// if it's nocase, and the lcase/uppercase don't match, it's magic
if(options.nocase&&!hasMagic){hasMagic=pattern.toUpperCase()!==pattern.toLowerCase();}// skip the regexp for non-magical patterns
// unescape anything in it, though, so that it'll be
// an exact match against a file etc.
if(!hasMagic){return globUnescape(pattern);}const flags=options.nocase?'i':'';try{return Object.assign(new RegExp('^'+re+'$',flags),{_glob:pattern,_src:re});}catch(er)/* istanbul ignore next - should be impossible */{// If it was an invalid regular expression, then it can't match
// anything.  This trick looks for a character after the end of
// the string, which is of course impossible, except in multi-line
// mode, but it's not a /m regex.
return new RegExp('$.');}}makeRe(){if(this.regexp||this.regexp===false)return this.regexp;// at this point, this.set is a 2d array of partial
// pattern strings, or "**".
//
// It's better to use .match().  This function shouldn't
// be used, really, but it's pretty convenient sometimes,
// when you just want to work with a regex.
const set=this.set;if(!set.length){this.regexp=false;return this.regexp;}const options=this.options;const twoStar=options.noglobstar?star$1:options.dot?twoStarDot:twoStarNoDot;const flags=options.nocase?'i':'';// coalesce globstars and regexpify non-globstar patterns
// if it's the only item, then we just do one twoStar
// if it's the first, and there are more, prepend (\/|twoStar\/)? to next
// if it's the last, append (\/twoStar|) to previous
// if it's in the middle, append (\/|\/twoStar\/) to previous
// then filter out GLOBSTAR symbols
let re=set.map(pattern=>{pattern=pattern.map(p=>typeof p==='string'?regExpEscape(p):p===GLOBSTAR?GLOBSTAR:p._src).reduce((set,p)=>{if(!(set[set.length-1]===GLOBSTAR&&p===GLOBSTAR)){set.push(p);}return set;},[]);pattern.forEach((p,i)=>{if(p!==GLOBSTAR||pattern[i-1]===GLOBSTAR){return;}if(i===0){if(pattern.length>1){pattern[i+1]='(?:\\\/|'+twoStar+'\\\/)?'+pattern[i+1];}else{pattern[i]=twoStar;}}else if(i===pattern.length-1){pattern[i-1]+='(?:\\\/|'+twoStar+')?';}else{pattern[i-1]+='(?:\\\/|\\\/'+twoStar+'\\\/)'+pattern[i+1];pattern[i+1]=GLOBSTAR;}});return pattern.filter(p=>p!==GLOBSTAR).join('/');}).join('|');// must match entire pattern
// ending in a * or ** will make it less strict.
re='^(?:'+re+')$';// can match anything, as long as it's not this.
if(this.negate)re='^(?!'+re+').*$';try{this.regexp=new RegExp(re,flags);}catch(ex)/* istanbul ignore next - should be impossible */{this.regexp=false;}return this.regexp;}match(f){let partial=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.partial;this.debug('match',f,this.pattern);// short-circuit in the case of busted things.
// comments, etc.
if(this.comment)return false;if(this.empty)return f==='';if(f==='/'&&partial)return true;const options=this.options;// windows: need to use /, not \
if(path$h.sep!=='/'){f=f.split(path$h.sep).join('/');}// treat the test path as a set of pathparts.
f=f.split(slashSplit);this.debug(this.pattern,'split',f);// just ONE of the pattern sets in this.set needs to match
// in order for it to be valid.  If negating, then just one
// match means that we have failed.
// Either way, return on the first hit.
const set=this.set;this.debug(this.pattern,'set',set);// Find the basename of the path by looking for the last non-empty segment
let filename;for(let i=f.length-1;i>=0;i--){filename=f[i];if(filename)break;}for(let i=0;i<set.length;i++){const pattern=set[i];let file=f;if(options.matchBase&&pattern.length===1){file=[filename];}const hit=this.matchOne(file,pattern,partial);if(hit){if(options.flipNegate)return true;return!this.negate;}}// didn't get any hits.  this is success if it's a negative
// pattern, failure otherwise.
if(options.flipNegate)return false;return this.negate;}static defaults(def){return minimatch$1.defaults(def).Minimatch;}};minimatch$1.Minimatch=Minimatch$1;var inherits$1={exports:{}};var inherits_browser={exports:{}};var hasRequiredInherits_browser;function requireInherits_browser(){if(hasRequiredInherits_browser)return inherits_browser.exports;hasRequiredInherits_browser=1;if(typeof Object.create==='function'){// implementation from standard node.js 'util' module
inherits_browser.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}});}};}else{// old school shim for old browsers
inherits_browser.exports=function inherits(ctor,superCtor){if(superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;}};}return inherits_browser.exports;}try{var util$6=require('util');/* istanbul ignore next */if(typeof util$6.inherits!=='function')throw'';inherits$1.exports=util$6.inherits;}catch(e){/* istanbul ignore next */inherits$1.exports=requireInherits_browser();}var inheritsExports=inherits$1.exports;var common$8={};common$8.setopts=setopts;common$8.ownProp=ownProp;common$8.makeAbs=makeAbs;common$8.finish=finish;common$8.mark=mark$1;common$8.isIgnored=isIgnored;common$8.childrenIgnored=childrenIgnored;function ownProp(obj,field){return Object.prototype.hasOwnProperty.call(obj,field);}var fs$a=require$$0__default.default;var path$g=path__default.default;var minimatch=minimatch_1;var isAbsolute=path__default.default.isAbsolute;var Minimatch=minimatch.Minimatch;function alphasort(a,b){return a.localeCompare(b,'en');}function setupIgnores(self,options){self.ignore=options.ignore||[];if(!Array.isArray(self.ignore))self.ignore=[self.ignore];if(self.ignore.length){self.ignore=self.ignore.map(ignoreMap);}}// ignore patterns are always in dot:true mode.
function ignoreMap(pattern){var gmatcher=null;if(pattern.slice(-3)==='/**'){var gpattern=pattern.replace(/(\/\*\*)+$/,'');gmatcher=new Minimatch(gpattern,{dot:true});}return{matcher:new Minimatch(pattern,{dot:true}),gmatcher:gmatcher};}function setopts(self,pattern,options){if(!options)options={};// base-matching: just use globstar for that.
if(options.matchBase&&-1===pattern.indexOf("/")){if(options.noglobstar){throw new Error("base matching requires globstar");}pattern="**/"+pattern;}self.silent=!!options.silent;self.pattern=pattern;self.strict=options.strict!==false;self.realpath=!!options.realpath;self.realpathCache=options.realpathCache||Object.create(null);self.follow=!!options.follow;self.dot=!!options.dot;self.mark=!!options.mark;self.nodir=!!options.nodir;if(self.nodir)self.mark=true;self.sync=!!options.sync;self.nounique=!!options.nounique;self.nonull=!!options.nonull;self.nosort=!!options.nosort;self.nocase=!!options.nocase;self.stat=!!options.stat;self.noprocess=!!options.noprocess;self.absolute=!!options.absolute;self.fs=options.fs||fs$a;self.maxLength=options.maxLength||Infinity;self.cache=options.cache||Object.create(null);self.statCache=options.statCache||Object.create(null);self.symlinks=options.symlinks||Object.create(null);setupIgnores(self,options);self.changedCwd=false;var cwd=process.cwd();if(!ownProp(options,"cwd"))self.cwd=path$g.resolve(cwd);else{self.cwd=path$g.resolve(options.cwd);self.changedCwd=self.cwd!==cwd;}self.root=options.root||path$g.resolve(self.cwd,"/");self.root=path$g.resolve(self.root);// TODO: is an absolute `cwd` supposed to be resolved against `root`?
// e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')
self.cwdAbs=isAbsolute(self.cwd)?self.cwd:makeAbs(self,self.cwd);self.nomount=!!options.nomount;if(process.platform==="win32"){self.root=self.root.replace(/\\/g,"/");self.cwd=self.cwd.replace(/\\/g,"/");self.cwdAbs=self.cwdAbs.replace(/\\/g,"/");}// disable comments and negation in Minimatch.
// Note that they are not supported in Glob itself anyway.
options.nonegate=true;options.nocomment=true;// always treat \ in patterns as escapes, not path separators
options.allowWindowsEscape=true;self.minimatch=new Minimatch(pattern,options);self.options=self.minimatch.options;}function finish(self){var nou=self.nounique;var all=nou?[]:Object.create(null);for(var i=0,l=self.matches.length;i<l;i++){var matches=self.matches[i];if(!matches||Object.keys(matches).length===0){if(self.nonull){// do like the shell, and spit out the literal glob
var literal=self.minimatch.globSet[i];if(nou)all.push(literal);else all[literal]=true;}}else{// had matches
var m=Object.keys(matches);if(nou)all.push.apply(all,m);else m.forEach(function(m){all[m]=true;});}}if(!nou)all=Object.keys(all);if(!self.nosort)all=all.sort(alphasort);// at *some* point we statted all of these
if(self.mark){for(var i=0;i<all.length;i++){all[i]=self._mark(all[i]);}if(self.nodir){all=all.filter(function(e){var notDir=!/\/$/.test(e);var c=self.cache[e]||self.cache[makeAbs(self,e)];if(notDir&&c)notDir=c!=='DIR'&&!Array.isArray(c);return notDir;});}}if(self.ignore.length)all=all.filter(function(m){return!isIgnored(self,m);});self.found=all;}function mark$1(self,p){var abs=makeAbs(self,p);var c=self.cache[abs];var m=p;if(c){var isDir=c==='DIR'||Array.isArray(c);var slash=p.slice(-1)==='/';if(isDir&&!slash)m+='/';else if(!isDir&&slash)m=m.slice(0,-1);if(m!==p){var mabs=makeAbs(self,m);self.statCache[mabs]=self.statCache[abs];self.cache[mabs]=self.cache[abs];}}return m;}// lotta situps...
function makeAbs(self,f){var abs=f;if(f.charAt(0)==='/'){abs=path$g.join(self.root,f);}else if(isAbsolute(f)||f===''){abs=f;}else if(self.changedCwd){abs=path$g.resolve(self.cwd,f);}else{abs=path$g.resolve(f);}if(process.platform==='win32')abs=abs.replace(/\\/g,'/');return abs;}// Return true, if pattern ends with globstar '**', for the accompanying parent directory.
// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents
function isIgnored(self,path){if(!self.ignore.length)return false;return self.ignore.some(function(item){return item.matcher.match(path)||!!(item.gmatcher&&item.gmatcher.match(path));});}function childrenIgnored(self,path){if(!self.ignore.length)return false;return self.ignore.some(function(item){return!!(item.gmatcher&&item.gmatcher.match(path));});}var sync$2;var hasRequiredSync$1;function requireSync$1(){if(hasRequiredSync$1)return sync$2;hasRequiredSync$1=1;sync$2=globSync;globSync.GlobSync=GlobSync;var rp=requireFs_realpath();var minimatch=minimatch_1;requireGlob$1().Glob;var path=path__default.default;var assert=require$$1__default$1.default;var isAbsolute=path__default.default.isAbsolute;var common=common$8;var setopts=common.setopts;var ownProp=common.ownProp;var childrenIgnored=common.childrenIgnored;var isIgnored=common.isIgnored;function globSync(pattern,options){if(typeof options==='function'||arguments.length===3)throw new TypeError('callback provided to sync glob\n'+'See: https://github.com/isaacs/node-glob/issues/167');return new GlobSync(pattern,options).found;}function GlobSync(pattern,options){if(!pattern)throw new Error('must provide pattern');if(typeof options==='function'||arguments.length===3)throw new TypeError('callback provided to sync glob\n'+'See: https://github.com/isaacs/node-glob/issues/167');if(!(this instanceof GlobSync))return new GlobSync(pattern,options);setopts(this,pattern,options);if(this.noprocess)return this;var n=this.minimatch.set.length;this.matches=new Array(n);for(var i=0;i<n;i++){this._process(this.minimatch.set[i],i,false);}this._finish();}GlobSync.prototype._finish=function(){assert.ok(this instanceof GlobSync);if(this.realpath){var self=this;this.matches.forEach(function(matchset,index){var set=self.matches[index]=Object.create(null);for(var p in matchset){try{p=self._makeAbs(p);var real=rp.realpathSync(p,self.realpathCache);set[real]=true;}catch(er){if(er.syscall==='stat')set[self._makeAbs(p)]=true;else throw er;}}});}common.finish(this);};GlobSync.prototype._process=function(pattern,index,inGlobStar){assert.ok(this instanceof GlobSync);// Get the first [n] parts of pattern that are all strings.
var n=0;while(typeof pattern[n]==='string'){n++;}// now n is the index of the first one that is *not* a string.
// See if there's anything else
var prefix;switch(n){// if not, then this is rather simple
case pattern.length:this._processSimple(pattern.join('/'),index);return;case 0:// pattern *starts* with some non-trivial item.
// going to readdir(cwd), but not include the prefix in matches.
prefix=null;break;default:// pattern has some string bits in the front.
// whatever it starts with, whether that's 'absolute' like /foo/bar,
// or 'relative' like '../baz'
prefix=pattern.slice(0,n).join('/');break;}var remain=pattern.slice(n);// get the list of entries.
var read;if(prefix===null)read='.';else if(isAbsolute(prefix)||isAbsolute(pattern.map(function(p){return typeof p==='string'?p:'[*]';}).join('/'))){if(!prefix||!isAbsolute(prefix))prefix='/'+prefix;read=prefix;}else read=prefix;var abs=this._makeAbs(read);//if ignored, skip processing
if(childrenIgnored(this,read))return;var isGlobStar=remain[0]===minimatch.GLOBSTAR;if(isGlobStar)this._processGlobStar(prefix,read,abs,remain,index,inGlobStar);else this._processReaddir(prefix,read,abs,remain,index,inGlobStar);};GlobSync.prototype._processReaddir=function(prefix,read,abs,remain,index,inGlobStar){var entries=this._readdir(abs,inGlobStar);// if the abs isn't a dir, then nothing can match!
if(!entries)return;// It will only match dot entries if it starts with a dot, or if
// dot is set.  Stuff like @(.foo|.bar) isn't allowed.
var pn=remain[0];var negate=!!this.minimatch.negate;var rawGlob=pn._glob;var dotOk=this.dot||rawGlob.charAt(0)==='.';var matchedEntries=[];for(var i=0;i<entries.length;i++){var e=entries[i];if(e.charAt(0)!=='.'||dotOk){var m;if(negate&&!prefix){m=!e.match(pn);}else{m=e.match(pn);}if(m)matchedEntries.push(e);}}var len=matchedEntries.length;// If there are no matched entries, then nothing matches.
if(len===0)return;// if this is the last remaining pattern bit, then no need for
// an additional stat *unless* the user has specified mark or
// stat explicitly.  We know they exist, since readdir returned
// them.
if(remain.length===1&&!this.mark&&!this.stat){if(!this.matches[index])this.matches[index]=Object.create(null);for(var i=0;i<len;i++){var e=matchedEntries[i];if(prefix){if(prefix.slice(-1)!=='/')e=prefix+'/'+e;else e=prefix+e;}if(e.charAt(0)==='/'&&!this.nomount){e=path.join(this.root,e);}this._emitMatch(index,e);}// This was the last one, and no stats were needed
return;}// now test all matched entries as stand-ins for that part
// of the pattern.
remain.shift();for(var i=0;i<len;i++){var e=matchedEntries[i];var newPattern;if(prefix)newPattern=[prefix,e];else newPattern=[e];this._process(newPattern.concat(remain),index,inGlobStar);}};GlobSync.prototype._emitMatch=function(index,e){if(isIgnored(this,e))return;var abs=this._makeAbs(e);if(this.mark)e=this._mark(e);if(this.absolute){e=abs;}if(this.matches[index][e])return;if(this.nodir){var c=this.cache[abs];if(c==='DIR'||Array.isArray(c))return;}this.matches[index][e]=true;if(this.stat)this._stat(e);};GlobSync.prototype._readdirInGlobStar=function(abs){// follow all symlinked directories forever
// just proceed as if this is a non-globstar situation
if(this.follow)return this._readdir(abs,false);var entries;var lstat;try{lstat=this.fs.lstatSync(abs);}catch(er){if(er.code==='ENOENT'){// lstat failed, doesn't exist
return null;}}var isSym=lstat&&lstat.isSymbolicLink();this.symlinks[abs]=isSym;// If it's not a symlink or a dir, then it's definitely a regular file.
// don't bother doing a readdir in that case.
if(!isSym&&lstat&&!lstat.isDirectory())this.cache[abs]='FILE';else entries=this._readdir(abs,false);return entries;};GlobSync.prototype._readdir=function(abs,inGlobStar){if(inGlobStar&&!ownProp(this.symlinks,abs))return this._readdirInGlobStar(abs);if(ownProp(this.cache,abs)){var c=this.cache[abs];if(!c||c==='FILE')return null;if(Array.isArray(c))return c;}try{return this._readdirEntries(abs,this.fs.readdirSync(abs));}catch(er){this._readdirError(abs,er);return null;}};GlobSync.prototype._readdirEntries=function(abs,entries){// if we haven't asked to stat everything, then just
// assume that everything in there exists, so we can avoid
// having to stat it a second time.
if(!this.mark&&!this.stat){for(var i=0;i<entries.length;i++){var e=entries[i];if(abs==='/')e=abs+e;else e=abs+'/'+e;this.cache[e]=true;}}this.cache[abs]=entries;// mark and cache dir-ness
return entries;};GlobSync.prototype._readdirError=function(f,er){// handle errors, and cache the information
switch(er.code){case'ENOTSUP':// https://github.com/isaacs/node-glob/issues/205
case'ENOTDIR':// totally normal. means it *does* exist.
var abs=this._makeAbs(f);this.cache[abs]='FILE';if(abs===this.cwdAbs){var error=new Error(er.code+' invalid cwd '+this.cwd);error.path=this.cwd;error.code=er.code;throw error;}break;case'ENOENT':// not terribly unusual
case'ELOOP':case'ENAMETOOLONG':case'UNKNOWN':this.cache[this._makeAbs(f)]=false;break;default:// some unusual error.  Treat as failure.
this.cache[this._makeAbs(f)]=false;if(this.strict)throw er;if(!this.silent)console.error('glob error',er);break;}};GlobSync.prototype._processGlobStar=function(prefix,read,abs,remain,index,inGlobStar){var entries=this._readdir(abs,inGlobStar);// no entries means not a dir, so it can never have matches
// foo.txt/** doesn't match foo.txt
if(!entries)return;// test without the globstar, and with every child both below
// and replacing the globstar.
var remainWithoutGlobStar=remain.slice(1);var gspref=prefix?[prefix]:[];var noGlobStar=gspref.concat(remainWithoutGlobStar);// the noGlobStar pattern exits the inGlobStar state
this._process(noGlobStar,index,false);var len=entries.length;var isSym=this.symlinks[abs];// If it's a symlink, and we're in a globstar, then stop
if(isSym&&inGlobStar)return;for(var i=0;i<len;i++){var e=entries[i];if(e.charAt(0)==='.'&&!this.dot)continue;// these two cases enter the inGlobStar state
var instead=gspref.concat(entries[i],remainWithoutGlobStar);this._process(instead,index,true);var below=gspref.concat(entries[i],remain);this._process(below,index,true);}};GlobSync.prototype._processSimple=function(prefix,index){// XXX review this.  Shouldn't it be doing the mounting etc
// before doing stat?  kinda weird?
var exists=this._stat(prefix);if(!this.matches[index])this.matches[index]=Object.create(null);// If it doesn't exist, then just mark the lack of results
if(!exists)return;if(prefix&&isAbsolute(prefix)&&!this.nomount){var trail=/[\/\\]$/.test(prefix);if(prefix.charAt(0)==='/'){prefix=path.join(this.root,prefix);}else{prefix=path.resolve(this.root,prefix);if(trail)prefix+='/';}}if(process.platform==='win32')prefix=prefix.replace(/\\/g,'/');// Mark this as a match
this._emitMatch(index,prefix);};// Returns either 'DIR', 'FILE', or false
GlobSync.prototype._stat=function(f){var abs=this._makeAbs(f);var needDir=f.slice(-1)==='/';if(f.length>this.maxLength)return false;if(!this.stat&&ownProp(this.cache,abs)){var c=this.cache[abs];if(Array.isArray(c))c='DIR';// It exists, but maybe not how we need it
if(!needDir||c==='DIR')return c;if(needDir&&c==='FILE')return false;// otherwise we have to stat, because maybe c=true
// if we know it exists, but not what it is.
}var stat=this.statCache[abs];if(!stat){var lstat;try{lstat=this.fs.lstatSync(abs);}catch(er){if(er&&(er.code==='ENOENT'||er.code==='ENOTDIR')){this.statCache[abs]=false;return false;}}if(lstat&&lstat.isSymbolicLink()){try{stat=this.fs.statSync(abs);}catch(er){stat=lstat;}}else{stat=lstat;}}this.statCache[abs]=stat;var c=true;if(stat)c=stat.isDirectory()?'DIR':'FILE';this.cache[abs]=this.cache[abs]||c;if(needDir&&c==='FILE')return false;return c;};GlobSync.prototype._mark=function(p){return common.mark(this,p);};GlobSync.prototype._makeAbs=function(f){return common.makeAbs(this,f);};return sync$2;}var wrappy_1;var hasRequiredWrappy;function requireWrappy(){if(hasRequiredWrappy)return wrappy_1;hasRequiredWrappy=1;// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
wrappy_1=wrappy;function wrappy(fn,cb){if(fn&&cb)return wrappy(fn)(cb);if(typeof fn!=='function')throw new TypeError('need wrapper function');Object.keys(fn).forEach(function(k){wrapper[k]=fn[k];});return wrapper;function wrapper(){var args=new Array(arguments.length);for(var i=0;i<args.length;i++){args[i]=arguments[i];}var ret=fn.apply(this,args);var cb=args[args.length-1];if(typeof ret==='function'&&ret!==cb){Object.keys(cb).forEach(function(k){ret[k]=cb[k];});}return ret;}}return wrappy_1;}var once$2={exports:{}};var hasRequiredOnce;function requireOnce(){if(hasRequiredOnce)return once$2.exports;hasRequiredOnce=1;var wrappy=requireWrappy();once$2.exports=wrappy(once);once$2.exports.strict=wrappy(onceStrict);once.proto=once(function(){Object.defineProperty(Function.prototype,'once',{value:function(){return once(this);},configurable:true});Object.defineProperty(Function.prototype,'onceStrict',{value:function(){return onceStrict(this);},configurable:true});});function once(fn){var f=function(){if(f.called)return f.value;f.called=true;return f.value=fn.apply(this,arguments);};f.called=false;return f;}function onceStrict(fn){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=fn.apply(this,arguments);};var name=fn.name||'Function wrapped with `once`';f.onceError=name+" shouldn't be called more than once";f.called=false;return f;}return once$2.exports;}var inflight_1;var hasRequiredInflight;function requireInflight(){if(hasRequiredInflight)return inflight_1;hasRequiredInflight=1;var wrappy=requireWrappy();var reqs=Object.create(null);var once=requireOnce();inflight_1=wrappy(inflight);function inflight(key,cb){if(reqs[key]){reqs[key].push(cb);return null;}else{reqs[key]=[cb];return makeres(key);}}function makeres(key){return once(function RES(){var cbs=reqs[key];var len=cbs.length;var args=slice(arguments);// XXX It's somewhat ambiguous whether a new callback added in this
// pass should be queued for later execution if something in the
// list of callbacks throws, or if it should just be discarded.
// However, it's such an edge case that it hardly matters, and either
// choice is likely as surprising as the other.
// As it happens, we do go ahead and schedule it for later execution.
try{for(var i=0;i<len;i++){cbs[i].apply(null,args);}}finally{if(cbs.length>len){// added more in the interim.
// de-zalgo, just in case, but don't call again.
cbs.splice(0,len);process.nextTick(function(){RES.apply(null,args);});}else{delete reqs[key];}}});}function slice(args){var length=args.length;var array=[];for(var i=0;i<length;i++)array[i]=args[i];return array;}return inflight_1;}var glob_1$2;var hasRequiredGlob$1;function requireGlob$1(){if(hasRequiredGlob$1)return glob_1$2;hasRequiredGlob$1=1;// Approach:
//
// 1. Get the minimatch set
// 2. For each pattern in the set, PROCESS(pattern, false)
// 3. Store matches per-set, then uniq them
//
// PROCESS(pattern, inGlobStar)
// Get the first [n] items from pattern that are all strings
// Join these together.  This is PREFIX.
//   If there is no more remaining, then stat(PREFIX) and
//   add to matches if it succeeds.  END.
//
// If inGlobStar and PREFIX is symlink and points to dir
//   set ENTRIES = []
// else readdir(PREFIX) as ENTRIES
//   If fail, END
//
// with ENTRIES
//   If pattern[n] is GLOBSTAR
//     // handle the case where the globstar match is empty
//     // by pruning it out, and testing the resulting pattern
//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)
//     // handle other cases.
//     for ENTRY in ENTRIES (not dotfiles)
//       // attach globstar + tail onto the entry
//       // Mark that this entry is a globstar match
//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)
//
//   else // not globstar
//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)
//       Test ENTRY against pattern[n]
//       If fails, continue
//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])
//
// Caveat:
//   Cache all stats and readdirs results to minimize syscall.  Since all
//   we ever care about is existence and directory-ness, we can just keep
//   `true` for files, and [children,...] for directories, or `false` for
//   things that don't exist.
glob_1$2=glob;var rp=requireFs_realpath();var minimatch=minimatch_1;var inherits=inheritsExports;var EE=require$$3__default.default.EventEmitter;var path=path__default.default;var assert=require$$1__default$1.default;var isAbsolute=path__default.default.isAbsolute;var globSync=requireSync$1();var common=common$8;var setopts=common.setopts;var ownProp=common.ownProp;var inflight=requireInflight();var childrenIgnored=common.childrenIgnored;var isIgnored=common.isIgnored;var once=requireOnce();function glob(pattern,options,cb){if(typeof options==='function')cb=options,options={};if(!options)options={};if(options.sync){if(cb)throw new TypeError('callback provided to sync glob');return globSync(pattern,options);}return new Glob(pattern,options,cb);}glob.sync=globSync;var GlobSync=glob.GlobSync=globSync.GlobSync;// old api surface
glob.glob=glob;function extend(origin,add){if(add===null||typeof add!=='object'){return origin;}var keys=Object.keys(add);var i=keys.length;while(i--){origin[keys[i]]=add[keys[i]];}return origin;}glob.hasMagic=function(pattern,options_){var options=extend({},options_);options.noprocess=true;var g=new Glob(pattern,options);var set=g.minimatch.set;if(!pattern)return false;if(set.length>1)return true;for(var j=0;j<set[0].length;j++){if(typeof set[0][j]!=='string')return true;}return false;};glob.Glob=Glob;inherits(Glob,EE);function Glob(pattern,options,cb){if(typeof options==='function'){cb=options;options=null;}if(options&&options.sync){if(cb)throw new TypeError('callback provided to sync glob');return new GlobSync(pattern,options);}if(!(this instanceof Glob))return new Glob(pattern,options,cb);setopts(this,pattern,options);this._didRealPath=false;// process each pattern in the minimatch set
var n=this.minimatch.set.length;// The matches are stored as {<filename>: true,...} so that
// duplicates are automagically pruned.
// Later, we do an Object.keys() on these.
// Keep them as a list so we can fill in when nonull is set.
this.matches=new Array(n);if(typeof cb==='function'){cb=once(cb);this.on('error',cb);this.on('end',function(matches){cb(null,matches);});}var self=this;this._processing=0;this._emitQueue=[];this._processQueue=[];this.paused=false;if(this.noprocess)return this;if(n===0)return done();var sync=true;for(var i=0;i<n;i++){this._process(this.minimatch.set[i],i,false,done);}sync=false;function done(){--self._processing;if(self._processing<=0){if(sync){process.nextTick(function(){self._finish();});}else{self._finish();}}}}Glob.prototype._finish=function(){assert(this instanceof Glob);if(this.aborted)return;if(this.realpath&&!this._didRealpath)return this._realpath();common.finish(this);this.emit('end',this.found);};Glob.prototype._realpath=function(){if(this._didRealpath)return;this._didRealpath=true;var n=this.matches.length;if(n===0)return this._finish();var self=this;for(var i=0;i<this.matches.length;i++)this._realpathSet(i,next);function next(){if(--n===0)self._finish();}};Glob.prototype._realpathSet=function(index,cb){var matchset=this.matches[index];if(!matchset)return cb();var found=Object.keys(matchset);var self=this;var n=found.length;if(n===0)return cb();var set=this.matches[index]=Object.create(null);found.forEach(function(p,i){// If there's a problem with the stat, then it means that
// one or more of the links in the realpath couldn't be
// resolved.  just return the abs value in that case.
p=self._makeAbs(p);rp.realpath(p,self.realpathCache,function(er,real){if(!er)set[real]=true;else if(er.syscall==='stat')set[p]=true;else self.emit('error',er);// srsly wtf right here
if(--n===0){self.matches[index]=set;cb();}});});};Glob.prototype._mark=function(p){return common.mark(this,p);};Glob.prototype._makeAbs=function(f){return common.makeAbs(this,f);};Glob.prototype.abort=function(){this.aborted=true;this.emit('abort');};Glob.prototype.pause=function(){if(!this.paused){this.paused=true;this.emit('pause');}};Glob.prototype.resume=function(){if(this.paused){this.emit('resume');this.paused=false;if(this._emitQueue.length){var eq=this._emitQueue.slice(0);this._emitQueue.length=0;for(var i=0;i<eq.length;i++){var e=eq[i];this._emitMatch(e[0],e[1]);}}if(this._processQueue.length){var pq=this._processQueue.slice(0);this._processQueue.length=0;for(var i=0;i<pq.length;i++){var p=pq[i];this._processing--;this._process(p[0],p[1],p[2],p[3]);}}}};Glob.prototype._process=function(pattern,index,inGlobStar,cb){assert(this instanceof Glob);assert(typeof cb==='function');if(this.aborted)return;this._processing++;if(this.paused){this._processQueue.push([pattern,index,inGlobStar,cb]);return;}//console.error('PROCESS %d', this._processing, pattern)
// Get the first [n] parts of pattern that are all strings.
var n=0;while(typeof pattern[n]==='string'){n++;}// now n is the index of the first one that is *not* a string.
// see if there's anything else
var prefix;switch(n){// if not, then this is rather simple
case pattern.length:this._processSimple(pattern.join('/'),index,cb);return;case 0:// pattern *starts* with some non-trivial item.
// going to readdir(cwd), but not include the prefix in matches.
prefix=null;break;default:// pattern has some string bits in the front.
// whatever it starts with, whether that's 'absolute' like /foo/bar,
// or 'relative' like '../baz'
prefix=pattern.slice(0,n).join('/');break;}var remain=pattern.slice(n);// get the list of entries.
var read;if(prefix===null)read='.';else if(isAbsolute(prefix)||isAbsolute(pattern.map(function(p){return typeof p==='string'?p:'[*]';}).join('/'))){if(!prefix||!isAbsolute(prefix))prefix='/'+prefix;read=prefix;}else read=prefix;var abs=this._makeAbs(read);//if ignored, skip _processing
if(childrenIgnored(this,read))return cb();var isGlobStar=remain[0]===minimatch.GLOBSTAR;if(isGlobStar)this._processGlobStar(prefix,read,abs,remain,index,inGlobStar,cb);else this._processReaddir(prefix,read,abs,remain,index,inGlobStar,cb);};Glob.prototype._processReaddir=function(prefix,read,abs,remain,index,inGlobStar,cb){var self=this;this._readdir(abs,inGlobStar,function(er,entries){return self._processReaddir2(prefix,read,abs,remain,index,inGlobStar,entries,cb);});};Glob.prototype._processReaddir2=function(prefix,read,abs,remain,index,inGlobStar,entries,cb){// if the abs isn't a dir, then nothing can match!
if(!entries)return cb();// It will only match dot entries if it starts with a dot, or if
// dot is set.  Stuff like @(.foo|.bar) isn't allowed.
var pn=remain[0];var negate=!!this.minimatch.negate;var rawGlob=pn._glob;var dotOk=this.dot||rawGlob.charAt(0)==='.';var matchedEntries=[];for(var i=0;i<entries.length;i++){var e=entries[i];if(e.charAt(0)!=='.'||dotOk){var m;if(negate&&!prefix){m=!e.match(pn);}else{m=e.match(pn);}if(m)matchedEntries.push(e);}}//console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)
var len=matchedEntries.length;// If there are no matched entries, then nothing matches.
if(len===0)return cb();// if this is the last remaining pattern bit, then no need for
// an additional stat *unless* the user has specified mark or
// stat explicitly.  We know they exist, since readdir returned
// them.
if(remain.length===1&&!this.mark&&!this.stat){if(!this.matches[index])this.matches[index]=Object.create(null);for(var i=0;i<len;i++){var e=matchedEntries[i];if(prefix){if(prefix!=='/')e=prefix+'/'+e;else e=prefix+e;}if(e.charAt(0)==='/'&&!this.nomount){e=path.join(this.root,e);}this._emitMatch(index,e);}// This was the last one, and no stats were needed
return cb();}// now test all matched entries as stand-ins for that part
// of the pattern.
remain.shift();for(var i=0;i<len;i++){var e=matchedEntries[i];if(prefix){if(prefix!=='/')e=prefix+'/'+e;else e=prefix+e;}this._process([e].concat(remain),index,inGlobStar,cb);}cb();};Glob.prototype._emitMatch=function(index,e){if(this.aborted)return;if(isIgnored(this,e))return;if(this.paused){this._emitQueue.push([index,e]);return;}var abs=isAbsolute(e)?e:this._makeAbs(e);if(this.mark)e=this._mark(e);if(this.absolute)e=abs;if(this.matches[index][e])return;if(this.nodir){var c=this.cache[abs];if(c==='DIR'||Array.isArray(c))return;}this.matches[index][e]=true;var st=this.statCache[abs];if(st)this.emit('stat',e,st);this.emit('match',e);};Glob.prototype._readdirInGlobStar=function(abs,cb){if(this.aborted)return;// follow all symlinked directories forever
// just proceed as if this is a non-globstar situation
if(this.follow)return this._readdir(abs,false,cb);var lstatkey='lstat\0'+abs;var self=this;var lstatcb=inflight(lstatkey,lstatcb_);if(lstatcb)self.fs.lstat(abs,lstatcb);function lstatcb_(er,lstat){if(er&&er.code==='ENOENT')return cb();var isSym=lstat&&lstat.isSymbolicLink();self.symlinks[abs]=isSym;// If it's not a symlink or a dir, then it's definitely a regular file.
// don't bother doing a readdir in that case.
if(!isSym&&lstat&&!lstat.isDirectory()){self.cache[abs]='FILE';cb();}else self._readdir(abs,false,cb);}};Glob.prototype._readdir=function(abs,inGlobStar,cb){if(this.aborted)return;cb=inflight('readdir\0'+abs+'\0'+inGlobStar,cb);if(!cb)return;//console.error('RD %j %j', +inGlobStar, abs)
if(inGlobStar&&!ownProp(this.symlinks,abs))return this._readdirInGlobStar(abs,cb);if(ownProp(this.cache,abs)){var c=this.cache[abs];if(!c||c==='FILE')return cb();if(Array.isArray(c))return cb(null,c);}var self=this;self.fs.readdir(abs,readdirCb(this,abs,cb));};function readdirCb(self,abs,cb){return function(er,entries){if(er)self._readdirError(abs,er,cb);else self._readdirEntries(abs,entries,cb);};}Glob.prototype._readdirEntries=function(abs,entries,cb){if(this.aborted)return;// if we haven't asked to stat everything, then just
// assume that everything in there exists, so we can avoid
// having to stat it a second time.
if(!this.mark&&!this.stat){for(var i=0;i<entries.length;i++){var e=entries[i];if(abs==='/')e=abs+e;else e=abs+'/'+e;this.cache[e]=true;}}this.cache[abs]=entries;return cb(null,entries);};Glob.prototype._readdirError=function(f,er,cb){if(this.aborted)return;// handle errors, and cache the information
switch(er.code){case'ENOTSUP':// https://github.com/isaacs/node-glob/issues/205
case'ENOTDIR':// totally normal. means it *does* exist.
var abs=this._makeAbs(f);this.cache[abs]='FILE';if(abs===this.cwdAbs){var error=new Error(er.code+' invalid cwd '+this.cwd);error.path=this.cwd;error.code=er.code;this.emit('error',error);this.abort();}break;case'ENOENT':// not terribly unusual
case'ELOOP':case'ENAMETOOLONG':case'UNKNOWN':this.cache[this._makeAbs(f)]=false;break;default:// some unusual error.  Treat as failure.
this.cache[this._makeAbs(f)]=false;if(this.strict){this.emit('error',er);// If the error is handled, then we abort
// if not, we threw out of here
this.abort();}if(!this.silent)console.error('glob error',er);break;}return cb();};Glob.prototype._processGlobStar=function(prefix,read,abs,remain,index,inGlobStar,cb){var self=this;this._readdir(abs,inGlobStar,function(er,entries){self._processGlobStar2(prefix,read,abs,remain,index,inGlobStar,entries,cb);});};Glob.prototype._processGlobStar2=function(prefix,read,abs,remain,index,inGlobStar,entries,cb){//console.error('pgs2', prefix, remain[0], entries)
// no entries means not a dir, so it can never have matches
// foo.txt/** doesn't match foo.txt
if(!entries)return cb();// test without the globstar, and with every child both below
// and replacing the globstar.
var remainWithoutGlobStar=remain.slice(1);var gspref=prefix?[prefix]:[];var noGlobStar=gspref.concat(remainWithoutGlobStar);// the noGlobStar pattern exits the inGlobStar state
this._process(noGlobStar,index,false,cb);var isSym=this.symlinks[abs];var len=entries.length;// If it's a symlink, and we're in a globstar, then stop
if(isSym&&inGlobStar)return cb();for(var i=0;i<len;i++){var e=entries[i];if(e.charAt(0)==='.'&&!this.dot)continue;// these two cases enter the inGlobStar state
var instead=gspref.concat(entries[i],remainWithoutGlobStar);this._process(instead,index,true,cb);var below=gspref.concat(entries[i],remain);this._process(below,index,true,cb);}cb();};Glob.prototype._processSimple=function(prefix,index,cb){// XXX review this.  Shouldn't it be doing the mounting etc
// before doing stat?  kinda weird?
var self=this;this._stat(prefix,function(er,exists){self._processSimple2(prefix,index,er,exists,cb);});};Glob.prototype._processSimple2=function(prefix,index,er,exists,cb){//console.error('ps2', prefix, exists)
if(!this.matches[index])this.matches[index]=Object.create(null);// If it doesn't exist, then just mark the lack of results
if(!exists)return cb();if(prefix&&isAbsolute(prefix)&&!this.nomount){var trail=/[\/\\]$/.test(prefix);if(prefix.charAt(0)==='/'){prefix=path.join(this.root,prefix);}else{prefix=path.resolve(this.root,prefix);if(trail)prefix+='/';}}if(process.platform==='win32')prefix=prefix.replace(/\\/g,'/');// Mark this as a match
this._emitMatch(index,prefix);cb();};// Returns either 'DIR', 'FILE', or false
Glob.prototype._stat=function(f,cb){var abs=this._makeAbs(f);var needDir=f.slice(-1)==='/';if(f.length>this.maxLength)return cb();if(!this.stat&&ownProp(this.cache,abs)){var c=this.cache[abs];if(Array.isArray(c))c='DIR';// It exists, but maybe not how we need it
if(!needDir||c==='DIR')return cb(null,c);if(needDir&&c==='FILE')return cb();// otherwise we have to stat, because maybe c=true
// if we know it exists, but not what it is.
}var stat=this.statCache[abs];if(stat!==undefined){if(stat===false)return cb(null,stat);else{var type=stat.isDirectory()?'DIR':'FILE';if(needDir&&type==='FILE')return cb();else return cb(null,type,stat);}}var self=this;var statcb=inflight('stat\0'+abs,lstatcb_);if(statcb)self.fs.lstat(abs,statcb);function lstatcb_(er,lstat){if(lstat&&lstat.isSymbolicLink()){// If it's a symlink, then treat it as the target, unless
// the target does not exist, then treat it as a file.
return self.fs.stat(abs,function(er,stat){if(er)self._stat2(f,abs,null,lstat,cb);else self._stat2(f,abs,er,stat,cb);});}else{self._stat2(f,abs,er,lstat,cb);}}};Glob.prototype._stat2=function(f,abs,er,stat,cb){if(er&&(er.code==='ENOENT'||er.code==='ENOTDIR')){this.statCache[abs]=false;return cb();}var needDir=f.slice(-1)==='/';this.statCache[abs]=stat;if(abs.slice(-1)==='/'&&stat&&!stat.isDirectory())return cb(null,false,stat);var c=true;if(stat)c=stat.isDirectory()?'DIR':'FILE';this.cache[abs]=this.cache[abs]||c;if(needDir&&c==='FILE')return cb();return cb(null,c,stat);};return glob_1$2;}// This is a generated file. Do not edit.
var Space_Separator=/[\u1680\u2000-\u200A\u202F\u205F\u3000]/;var ID_Start=/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;var ID_Continue=/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/;var unicode$1={Space_Separator:Space_Separator,ID_Start:ID_Start,ID_Continue:ID_Continue};var util$5={isSpaceSeparator(c){return typeof c==='string'&&unicode$1.Space_Separator.test(c);},isIdStartChar(c){return typeof c==='string'&&(c>='a'&&c<='z'||c>='A'&&c<='Z'||c==='$'||c==='_'||unicode$1.ID_Start.test(c));},isIdContinueChar(c){return typeof c==='string'&&(c>='a'&&c<='z'||c>='A'&&c<='Z'||c>='0'&&c<='9'||c==='$'||c==='_'||c==='\u200C'||c==='\u200D'||unicode$1.ID_Continue.test(c));},isDigit(c){return typeof c==='string'&&/[0-9]/.test(c);},isHexDigit(c){return typeof c==='string'&&/[0-9A-Fa-f]/.test(c);}};let source;let parseState;let stack;let pos;let line$1;let column;let token;let key;let root$2;var parse$a=function parse(text,reviver){source=String(text);parseState='start';stack=[];pos=0;line$1=1;column=0;token=undefined;key=undefined;root$2=undefined;do{token=lex();// This code is unreachable.
// if (!parseStates[parseState]) {
//     throw invalidParseState()
// }
parseStates[parseState]();}while(token.type!=='eof');if(typeof reviver==='function'){return internalize({'':root$2},'',reviver);}return root$2;};function internalize(holder,name,reviver){const value=holder[name];if(value!=null&&typeof value==='object'){if(Array.isArray(value)){for(let i=0;i<value.length;i++){const key=String(i);const replacement=internalize(value,key,reviver);if(replacement===undefined){delete value[key];}else{Object.defineProperty(value,key,{value:replacement,writable:true,enumerable:true,configurable:true});}}}else{for(const key in value){const replacement=internalize(value,key,reviver);if(replacement===undefined){delete value[key];}else{Object.defineProperty(value,key,{value:replacement,writable:true,enumerable:true,configurable:true});}}}}return reviver.call(holder,name,value);}let lexState;let buffer$1;let doubleQuote;let sign;let c;function lex(){lexState='default';buffer$1='';doubleQuote=false;sign=1;for(;;){c=peek();// This code is unreachable.
// if (!lexStates[lexState]) {
//     throw invalidLexState(lexState)
// }
const token=lexStates[lexState]();if(token){return token;}}}function peek(){if(source[pos]){return String.fromCodePoint(source.codePointAt(pos));}}function read(){const c=peek();if(c==='\n'){line$1++;column=0;}else if(c){column+=c.length;}else{column++;}if(c){pos+=c.length;}return c;}const lexStates={default(){switch(c){case'\t':case'\v':case'\f':case' ':case'\u00A0':case'\uFEFF':case'\n':case'\r':case'\u2028':case'\u2029':read();return;case'/':read();lexState='comment';return;case undefined:read();return newToken('eof');}if(util$5.isSpaceSeparator(c)){read();return;}// This code is unreachable.
// if (!lexStates[parseState]) {
//     throw invalidLexState(parseState)
// }
return lexStates[parseState]();},comment(){switch(c){case'*':read();lexState='multiLineComment';return;case'/':read();lexState='singleLineComment';return;}throw invalidChar(read());},multiLineComment(){switch(c){case'*':read();lexState='multiLineCommentAsterisk';return;case undefined:throw invalidChar(read());}read();},multiLineCommentAsterisk(){switch(c){case'*':read();return;case'/':read();lexState='default';return;case undefined:throw invalidChar(read());}read();lexState='multiLineComment';},singleLineComment(){switch(c){case'\n':case'\r':case'\u2028':case'\u2029':read();lexState='default';return;case undefined:read();return newToken('eof');}read();},value(){switch(c){case'{':case'[':return newToken('punctuator',read());case'n':read();literal('ull');return newToken('null',null);case't':read();literal('rue');return newToken('boolean',true);case'f':read();literal('alse');return newToken('boolean',false);case'-':case'+':if(read()==='-'){sign=-1;}lexState='sign';return;case'.':buffer$1=read();lexState='decimalPointLeading';return;case'0':buffer$1=read();lexState='zero';return;case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':buffer$1=read();lexState='decimalInteger';return;case'I':read();literal('nfinity');return newToken('numeric',Infinity);case'N':read();literal('aN');return newToken('numeric',NaN);case'"':case"'":doubleQuote=read()==='"';buffer$1='';lexState='string';return;}throw invalidChar(read());},identifierNameStartEscape(){if(c!=='u'){throw invalidChar(read());}read();const u=unicodeEscape();switch(u){case'$':case'_':break;default:if(!util$5.isIdStartChar(u)){throw invalidIdentifier();}break;}buffer$1+=u;lexState='identifierName';},identifierName(){switch(c){case'$':case'_':case'\u200C':case'\u200D':buffer$1+=read();return;case'\\':read();lexState='identifierNameEscape';return;}if(util$5.isIdContinueChar(c)){buffer$1+=read();return;}return newToken('identifier',buffer$1);},identifierNameEscape(){if(c!=='u'){throw invalidChar(read());}read();const u=unicodeEscape();switch(u){case'$':case'_':case'\u200C':case'\u200D':break;default:if(!util$5.isIdContinueChar(u)){throw invalidIdentifier();}break;}buffer$1+=u;lexState='identifierName';},sign(){switch(c){case'.':buffer$1=read();lexState='decimalPointLeading';return;case'0':buffer$1=read();lexState='zero';return;case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':buffer$1=read();lexState='decimalInteger';return;case'I':read();literal('nfinity');return newToken('numeric',sign*Infinity);case'N':read();literal('aN');return newToken('numeric',NaN);}throw invalidChar(read());},zero(){switch(c){case'.':buffer$1+=read();lexState='decimalPoint';return;case'e':case'E':buffer$1+=read();lexState='decimalExponent';return;case'x':case'X':buffer$1+=read();lexState='hexadecimal';return;}return newToken('numeric',sign*0);},decimalInteger(){switch(c){case'.':buffer$1+=read();lexState='decimalPoint';return;case'e':case'E':buffer$1+=read();lexState='decimalExponent';return;}if(util$5.isDigit(c)){buffer$1+=read();return;}return newToken('numeric',sign*Number(buffer$1));},decimalPointLeading(){if(util$5.isDigit(c)){buffer$1+=read();lexState='decimalFraction';return;}throw invalidChar(read());},decimalPoint(){switch(c){case'e':case'E':buffer$1+=read();lexState='decimalExponent';return;}if(util$5.isDigit(c)){buffer$1+=read();lexState='decimalFraction';return;}return newToken('numeric',sign*Number(buffer$1));},decimalFraction(){switch(c){case'e':case'E':buffer$1+=read();lexState='decimalExponent';return;}if(util$5.isDigit(c)){buffer$1+=read();return;}return newToken('numeric',sign*Number(buffer$1));},decimalExponent(){switch(c){case'+':case'-':buffer$1+=read();lexState='decimalExponentSign';return;}if(util$5.isDigit(c)){buffer$1+=read();lexState='decimalExponentInteger';return;}throw invalidChar(read());},decimalExponentSign(){if(util$5.isDigit(c)){buffer$1+=read();lexState='decimalExponentInteger';return;}throw invalidChar(read());},decimalExponentInteger(){if(util$5.isDigit(c)){buffer$1+=read();return;}return newToken('numeric',sign*Number(buffer$1));},hexadecimal(){if(util$5.isHexDigit(c)){buffer$1+=read();lexState='hexadecimalInteger';return;}throw invalidChar(read());},hexadecimalInteger(){if(util$5.isHexDigit(c)){buffer$1+=read();return;}return newToken('numeric',sign*Number(buffer$1));},string(){switch(c){case'\\':read();buffer$1+=escape$1();return;case'"':if(doubleQuote){read();return newToken('string',buffer$1);}buffer$1+=read();return;case"'":if(!doubleQuote){read();return newToken('string',buffer$1);}buffer$1+=read();return;case'\n':case'\r':throw invalidChar(read());case'\u2028':case'\u2029':separatorChar(c);break;case undefined:throw invalidChar(read());}buffer$1+=read();},start(){switch(c){case'{':case'[':return newToken('punctuator',read());// This code is unreachable since the default lexState handles eof.
// case undefined:
//     return newToken('eof')
}lexState='value';},beforePropertyName(){switch(c){case'$':case'_':buffer$1=read();lexState='identifierName';return;case'\\':read();lexState='identifierNameStartEscape';return;case'}':return newToken('punctuator',read());case'"':case"'":doubleQuote=read()==='"';lexState='string';return;}if(util$5.isIdStartChar(c)){buffer$1+=read();lexState='identifierName';return;}throw invalidChar(read());},afterPropertyName(){if(c===':'){return newToken('punctuator',read());}throw invalidChar(read());},beforePropertyValue(){lexState='value';},afterPropertyValue(){switch(c){case',':case'}':return newToken('punctuator',read());}throw invalidChar(read());},beforeArrayValue(){if(c===']'){return newToken('punctuator',read());}lexState='value';},afterArrayValue(){switch(c){case',':case']':return newToken('punctuator',read());}throw invalidChar(read());},end(){// This code is unreachable since it's handled by the default lexState.
// if (c === undefined) {
//     read()
//     return newToken('eof')
// }
throw invalidChar(read());}};function newToken(type,value){return{type,value,line:line$1,column};}function literal(s){for(const c of s){const p=peek();if(p!==c){throw invalidChar(read());}read();}}function escape$1(){const c=peek();switch(c){case'b':read();return'\b';case'f':read();return'\f';case'n':read();return'\n';case'r':read();return'\r';case't':read();return'\t';case'v':read();return'\v';case'0':read();if(util$5.isDigit(peek())){throw invalidChar(read());}return'\0';case'x':read();return hexEscape();case'u':read();return unicodeEscape();case'\n':case'\u2028':case'\u2029':read();return'';case'\r':read();if(peek()==='\n'){read();}return'';case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':throw invalidChar(read());case undefined:throw invalidChar(read());}return read();}function hexEscape(){let buffer='';let c=peek();if(!util$5.isHexDigit(c)){throw invalidChar(read());}buffer+=read();c=peek();if(!util$5.isHexDigit(c)){throw invalidChar(read());}buffer+=read();return String.fromCodePoint(parseInt(buffer,16));}function unicodeEscape(){let buffer='';let count=4;while(count-->0){const c=peek();if(!util$5.isHexDigit(c)){throw invalidChar(read());}buffer+=read();}return String.fromCodePoint(parseInt(buffer,16));}const parseStates={start(){if(token.type==='eof'){throw invalidEOF();}push();},beforePropertyName(){switch(token.type){case'identifier':case'string':key=token.value;parseState='afterPropertyName';return;case'punctuator':// This code is unreachable since it's handled by the lexState.
// if (token.value !== '}') {
//     throw invalidToken()
// }
pop();return;case'eof':throw invalidEOF();}// This code is unreachable since it's handled by the lexState.
// throw invalidToken()
},afterPropertyName(){// This code is unreachable since it's handled by the lexState.
// if (token.type !== 'punctuator' || token.value !== ':') {
//     throw invalidToken()
// }
if(token.type==='eof'){throw invalidEOF();}parseState='beforePropertyValue';},beforePropertyValue(){if(token.type==='eof'){throw invalidEOF();}push();},beforeArrayValue(){if(token.type==='eof'){throw invalidEOF();}if(token.type==='punctuator'&&token.value===']'){pop();return;}push();},afterPropertyValue(){// This code is unreachable since it's handled by the lexState.
// if (token.type !== 'punctuator') {
//     throw invalidToken()
// }
if(token.type==='eof'){throw invalidEOF();}switch(token.value){case',':parseState='beforePropertyName';return;case'}':pop();}// This code is unreachable since it's handled by the lexState.
// throw invalidToken()
},afterArrayValue(){// This code is unreachable since it's handled by the lexState.
// if (token.type !== 'punctuator') {
//     throw invalidToken()
// }
if(token.type==='eof'){throw invalidEOF();}switch(token.value){case',':parseState='beforeArrayValue';return;case']':pop();}// This code is unreachable since it's handled by the lexState.
// throw invalidToken()
},end(){// This code is unreachable since it's handled by the lexState.
// if (token.type !== 'eof') {
//     throw invalidToken()
// }
}};function push(){let value;switch(token.type){case'punctuator':switch(token.value){case'{':value={};break;case'[':value=[];break;}break;case'null':case'boolean':case'numeric':case'string':value=token.value;break;// This code is unreachable.
// default:
//     throw invalidToken()
}if(root$2===undefined){root$2=value;}else{const parent=stack[stack.length-1];if(Array.isArray(parent)){parent.push(value);}else{Object.defineProperty(parent,key,{value,writable:true,enumerable:true,configurable:true});}}if(value!==null&&typeof value==='object'){stack.push(value);if(Array.isArray(value)){parseState='beforeArrayValue';}else{parseState='beforePropertyName';}}else{const current=stack[stack.length-1];if(current==null){parseState='end';}else if(Array.isArray(current)){parseState='afterArrayValue';}else{parseState='afterPropertyValue';}}}function pop(){stack.pop();const current=stack[stack.length-1];if(current==null){parseState='end';}else if(Array.isArray(current)){parseState='afterArrayValue';}else{parseState='afterPropertyValue';}}// This code is unreachable.
// function invalidParseState () {
//     return new Error(`JSON5: invalid parse state '${parseState}'`)
// }
// This code is unreachable.
// function invalidLexState (state) {
//     return new Error(`JSON5: invalid lex state '${state}'`)
// }
function invalidChar(c){if(c===undefined){return syntaxError$1("JSON5: invalid end of input at ".concat(line$1,":").concat(column));}return syntaxError$1("JSON5: invalid character '".concat(formatChar(c),"' at ").concat(line$1,":").concat(column));}function invalidEOF(){return syntaxError$1("JSON5: invalid end of input at ".concat(line$1,":").concat(column));}// This code is unreachable.
// function invalidToken () {
//     if (token.type === 'eof') {
//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)
//     }
//     const c = String.fromCodePoint(token.value.codePointAt(0))
//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)
// }
function invalidIdentifier(){column-=5;return syntaxError$1("JSON5: invalid identifier character at ".concat(line$1,":").concat(column));}function separatorChar(c){console.warn("JSON5: '".concat(formatChar(c),"' in strings is not valid ECMAScript; consider escaping"));}function formatChar(c){const replacements={"'":"\\'",'"':'\\"','\\':'\\\\','\b':'\\b','\f':'\\f','\n':'\\n','\r':'\\r','\t':'\\t','\v':'\\v','\0':'\\0','\u2028':'\\u2028','\u2029':'\\u2029'};if(replacements[c]){return replacements[c];}if(c<' '){const hexString=c.charCodeAt(0).toString(16);return'\\x'+('00'+hexString).substring(hexString.length);}return c;}function syntaxError$1(message){const err=new SyntaxError(message);err.lineNumber=line$1;err.columnNumber=column;return err;}var stringify$5=function stringify(value,replacer,space){const stack=[];let indent='';let propertyList;let replacerFunc;let gap='';let quote;if(replacer!=null&&typeof replacer==='object'&&!Array.isArray(replacer)){space=replacer.space;quote=replacer.quote;replacer=replacer.replacer;}if(typeof replacer==='function'){replacerFunc=replacer;}else if(Array.isArray(replacer)){propertyList=[];for(const v of replacer){let item;if(typeof v==='string'){item=v;}else if(typeof v==='number'||v instanceof String||v instanceof Number){item=String(v);}if(item!==undefined&&propertyList.indexOf(item)<0){propertyList.push(item);}}}if(space instanceof Number){space=Number(space);}else if(space instanceof String){space=String(space);}if(typeof space==='number'){if(space>0){space=Math.min(10,Math.floor(space));gap='          '.substr(0,space);}}else if(typeof space==='string'){gap=space.substr(0,10);}return serializeProperty('',{'':value});function serializeProperty(key,holder){let value=holder[key];if(value!=null){if(typeof value.toJSON5==='function'){value=value.toJSON5(key);}else if(typeof value.toJSON==='function'){value=value.toJSON(key);}}if(replacerFunc){value=replacerFunc.call(holder,key,value);}if(value instanceof Number){value=Number(value);}else if(value instanceof String){value=String(value);}else if(value instanceof Boolean){value=value.valueOf();}switch(value){case null:return'null';case true:return'true';case false:return'false';}if(typeof value==='string'){return quoteString(value);}if(typeof value==='number'){return String(value);}if(typeof value==='object'){return Array.isArray(value)?serializeArray(value):serializeObject(value);}return undefined;}function quoteString(value){const quotes={"'":0.1,'"':0.2};const replacements={"'":"\\'",'"':'\\"','\\':'\\\\','\b':'\\b','\f':'\\f','\n':'\\n','\r':'\\r','\t':'\\t','\v':'\\v','\0':'\\0','\u2028':'\\u2028','\u2029':'\\u2029'};let product='';for(let i=0;i<value.length;i++){const c=value[i];switch(c){case"'":case'"':quotes[c]++;product+=c;continue;case'\0':if(util$5.isDigit(value[i+1])){product+='\\x00';continue;}}if(replacements[c]){product+=replacements[c];continue;}if(c<' '){let hexString=c.charCodeAt(0).toString(16);product+='\\x'+('00'+hexString).substring(hexString.length);continue;}product+=c;}const quoteChar=quote||Object.keys(quotes).reduce((a,b)=>quotes[a]<quotes[b]?a:b);product=product.replace(new RegExp(quoteChar,'g'),replacements[quoteChar]);return quoteChar+product+quoteChar;}function serializeObject(value){if(stack.indexOf(value)>=0){throw TypeError('Converting circular structure to JSON5');}stack.push(value);let stepback=indent;indent=indent+gap;let keys=propertyList||Object.keys(value);let partial=[];for(const key of keys){const propertyString=serializeProperty(key,value);if(propertyString!==undefined){let member=serializeKey(key)+':';if(gap!==''){member+=' ';}member+=propertyString;partial.push(member);}}let final;if(partial.length===0){final='{}';}else{let properties;if(gap===''){properties=partial.join(',');final='{'+properties+'}';}else{let separator=',\n'+indent;properties=partial.join(separator);final='{\n'+indent+properties+',\n'+stepback+'}';}}stack.pop();indent=stepback;return final;}function serializeKey(key){if(key.length===0){return quoteString(key);}const firstChar=String.fromCodePoint(key.codePointAt(0));if(!util$5.isIdStartChar(firstChar)){return quoteString(key);}for(let i=firstChar.length;i<key.length;i++){if(!util$5.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))){return quoteString(key);}}return key;}function serializeArray(value){if(stack.indexOf(value)>=0){throw TypeError('Converting circular structure to JSON5');}stack.push(value);let stepback=indent;indent=indent+gap;let partial=[];for(let i=0;i<value.length;i++){const propertyString=serializeProperty(String(i),value);partial.push(propertyString!==undefined?propertyString:'null');}let final;if(partial.length===0){final='[]';}else{if(gap===''){let properties=partial.join(',');final='['+properties+']';}else{let separator=',\n'+indent;let properties=partial.join(separator);final='[\n'+indent+properties+',\n'+stepback+']';}}stack.pop();indent=stepback;return final;}};const JSON5={parse:parse$a,stringify:stringify$5};var lib$2=JSON5;var dist=/*#__PURE__*/Object.freeze({__proto__:null,default:lib$2});var require$$4$2=/*@__PURE__*/loadEnv.getAugmentedNamespace(dist);var getGlobFs$1={};var __importDefault$3=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(getGlobFs$1,"__esModule",{value:true});getGlobFs$1.getGlobFs=void 0;const fs_1$1=__importDefault$3(require$$0__default.default);function removeWindowsPrefix(path){// on windows, this will return a path like
// D:/c/package.json
// since we abstract the filesystem, we need to remove windows specific info from the path
// and let the FS decide how to process the path
// D:/c/package.json => /c/package.json
return path.replace(/^[a-zA-Z]:/,'');}function getGlobFs(_fs){const readdir=(path,callback)=>{_fs.readdir(removeWindowsPrefix(String(path))).then(stats=>callback(null,stats.map(stat=>stat.name))).catch(err=>callback(err,[]));};const stat=(path,callback)=>{_fs.isFile(removeWindowsPrefix(String(path))).then(isPathAFile=>{callback(null,{ino:0,mode:0,nlink:0,uid:0,gid:0,rdev:0,size:0,blksize:0,blocks:0,atimeMs:0,mtimeMs:0,ctimeMs:0,birthtimeMs:0,atime:new Date(),mtime:new Date(),ctime:new Date(),birthtime:new Date(),dev:0,isBlockDevice:()=>false,isCharacterDevice:()=>false,isDirectory:()=>!isPathAFile,isFIFO:()=>false,isFile:()=>isPathAFile,isSocket:()=>false,isSymbolicLink:()=>false});}).catch(err=>callback(err,null));};return new Proxy(fs_1$1.default,{get(_target,prop){switch(prop){case'readdir':return readdir;case'lstat':case'stat':return stat;default:throw new Error('Not Implemented');}}});}getGlobFs$1.getGlobFs=getGlobFs;var __importDefault$2=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(getWorkspacePackagePaths$1,"__esModule",{value:true});getWorkspacePackagePaths$1.getWorkspacePackagePaths=void 0;const path_1$2=__importDefault$2(path__default.default);const js_yaml_1=__importDefault$2(jsYaml$2);const glob_1$1=__importDefault$2(requireGlob$1());const json5_1$1=__importDefault$2(require$$4$2);const get_glob_fs_1=getGlobFs$1;const posixPath=path_1$2.default.posix;async function getWorkspacePackagePaths(_ref19){let{fs,workspace}=_ref19;const{type,rootPath}=workspace;const workspaceFs=fs.chdir(rootPath);let results=[];switch(type){case'yarn':case'npm':results=await getPackageJsonWorkspacePackagePaths({fs:workspaceFs});break;case'pnpm':results=await getPnpmWorkspacePackagePaths({fs:workspaceFs});break;case'nx':results=await getNxWorkspacePackagePaths({fs:workspaceFs});break;case'rush':results=await getRushWorkspacePackagePaths({fs:workspaceFs});break;default:throw new Error("Unknown workspace implementation: ".concat(type));}return results.map(packagePath=>{return posixPath.join(rootPath,posixPath.dirname(packagePath));});}getWorkspacePackagePaths$1.getWorkspacePackagePaths=getWorkspacePackagePaths;const isWin$2=process.platform==='win32';const normalizePath=p=>isWin$2?p.replace(/\\/g,'/'):p;async function getPackagePaths(packages,fs){return(await Promise.all(packages.map(packageGlob=>new Promise((resolve,reject)=>{(0,glob_1$1.default)(normalizePath(posixPath.join(packageGlob,'package.json')),{cwd:'/',fs:(0,get_glob_fs_1.getGlobFs)(fs)},(err,matches)=>{if(err)reject(err);else resolve(matches);});})))).flat();}async function getPackageJsonWorkspacePackagePaths(_ref20){let{fs}=_ref20;const packageJsonAsBuffer=await fs.readFile('package.json');const{workspaces}=JSON.parse(packageJsonAsBuffer.toString());let packages=[];if(Array.isArray(workspaces)){packages=workspaces;}else{var _workspaces$packages;packages=(_workspaces$packages=workspaces===null||workspaces===void 0?void 0:workspaces.packages)!==null&&_workspaces$packages!==void 0?_workspaces$packages:[];}return getPackagePaths(packages,fs);}async function getNxWorkspacePackagePaths(_ref21){let{fs}=_ref21;const nxWorkspaceJsonAsBuffer=await fs.readFile('workspace.json');const{projects}=JSON.parse(nxWorkspaceJsonAsBuffer.toString());const packages=Object.values(projects);return getPackagePaths(packages,fs);}async function getPnpmWorkspacePackagePaths(_ref22){let{fs}=_ref22;const pnpmWorkspaceAsBuffer=await fs.readFile('pnpm-workspace.yaml');const{packages=[]}=js_yaml_1.default.load(pnpmWorkspaceAsBuffer.toString());return getPackagePaths(packages,fs);}async function getRushWorkspacePackagePaths(_ref23){let{fs}=_ref23;const rushWorkspaceAsBuffer=await fs.readFile('rush.json');const{projects=[]}=json5_1$1.default.parse(rushWorkspaceAsBuffer.toString());if(Array.isArray(projects)){const packages=projects.filter(proj=>proj.projectFolder).map(project=>project.projectFolder);return getPackagePaths(packages,fs);}else{return[];}}var monorepoManagers={};(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.monorepoManagers=void 0;/**
	 * The supported list of monorepo managers.
	 *
	 * This list is designed to work with the @see {@link detectFramework} function.
	 *
	 * @example
	 *   import { monorepoManagers as frameworkList } from '@vercel/fs-detectors'
	 *   import { detectFramework } from '@vercel/fs-detectors'
	 *
	 *   const fs = new GitDetectorFilesystem(...)
	 *   detectFramwork({ fs, frameworkList }) // returns the 'slug' field if detected, otherwise null
	 *
	 */exports.monorepoManagers=[{name:'Turborepo',slug:'turbo',logo:'https://api-frameworks.vercel.sh/monorepo-logos/turborepo.svg',darkModeLogo:'https://api-frameworks.vercel.sh/monorepo-logos/turborepo-dark.svg',detectors:{some:[{path:'turbo.json'},{path:'package.json',matchContent:'"turbo":\\s*{[^}]*.+[^}]*}'}]},settings:{buildCommand:{placeholder:'Turborepo default',value:null},outputDirectory:{value:null},installCommand:{value:null},devCommand:{value:null}}},{name:'Nx',slug:'nx',logo:'https://api-frameworks.vercel.sh/monorepo-logos/nx.svg',detectors:{every:[{path:'nx.json'}]},settings:{buildCommand:{placeholder:'Nx default',value:null},outputDirectory:{value:null},installCommand:{value:null},devCommand:{value:null}}},{name:'Rush',slug:'rush',logo:'https://api-frameworks.vercel.sh/monorepo-logos/rush.svg',detectors:{every:[{path:'rush.json'}]},settings:{buildCommand:{placeholder:'Rush default',value:null},outputDirectory:{value:null},installCommand:{placeholder:'Rush default'},devCommand:{value:null}}}];exports.default=exports.monorepoManagers;})(monorepoManagers);var packageManagers={};Object.defineProperty(packageManagers,"__esModule",{value:true});packageManagers.packageManagers=void 0;packageManagers.packageManagers=[{name:'npm',slug:'npm',logo:'',darkModeLogo:'',detectors:{some:[{path:'package-lock.json'},{path:'package.json',matchContent:'"packageManager":\\s*"npm@.*"'}]}},{name:'pnpm',slug:'pnpm',logo:'',darkModeLogo:'',detectors:{some:[{path:'pnpm-lock.yaml'},{path:'package.json',matchContent:'"packageManager":\\s*"pnpm@.*"'}]}},{name:'yarn',slug:'yarn',logo:'',darkModeLogo:'',detectors:{some:[{path:'yarn.lock'},{path:'package.json',matchContent:'"packageManager":\\s*"yarn@.*"'},{path:'package.json'}]}}];var getMonorepoDefaultSettings$1={};var __importDefault$1=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(getMonorepoDefaultSettings$1,"__esModule",{value:true});getMonorepoDefaultSettings$1.getMonorepoDefaultSettings=getMonorepoDefaultSettings$1.MissingBuildTarget=getMonorepoDefaultSettings$1.MissingBuildPipeline=void 0;const path_1$1=path__default.default;const monorepo_managers_1=monorepoManagers;const package_managers_1=packageManagers;const detect_framework_1=detectFramework$1;const json5_1=__importDefault$1(require$$4$2);const semver_1=__importDefault$1(semver__default.default);class MissingBuildPipeline extends Error{constructor(){super('Missing required `build` pipeline in turbo.json or package.json Turbo configuration.');}}getMonorepoDefaultSettings$1.MissingBuildPipeline=MissingBuildPipeline;class MissingBuildTarget extends Error{constructor(){super('Missing required `build` target in either nx.json, project.json, or package.json Nx configuration.');}}getMonorepoDefaultSettings$1.MissingBuildTarget=MissingBuildTarget;function supportsRootCommand(turboSemVer){if(!turboSemVer){return false;}if(!semver_1.default.validRange(turboSemVer)){return false;}return!semver_1.default.intersects(turboSemVer,'<1.8.0');}async function getMonorepoDefaultSettings(projectName,projectPath,relativeToRoot,detectorFilesystem){const[monorepoManager,packageManager]=await Promise.all([(0,detect_framework_1.detectFramework)({fs:detectorFilesystem,frameworkList:monorepo_managers_1.monorepoManagers}),(0,detect_framework_1.detectFramework)({fs:detectorFilesystem,frameworkList:package_managers_1.packageManagers})]);if(monorepoManager==='turbo'){const[turboJSONBuf,packageJSONBuf]=await Promise.all([detectorFilesystem.readFile('turbo.json').catch(()=>null),detectorFilesystem.readFile('package.json').catch(()=>null)]);let hasBuildPipeline=false;let turboSemVer=null;if(turboJSONBuf!==null){var _turboJSON$pipeline;const turboJSON=json5_1.default.parse(turboJSONBuf.toString('utf-8'));if(turboJSON!==null&&turboJSON!==void 0&&(_turboJSON$pipeline=turboJSON.pipeline)!==null&&_turboJSON$pipeline!==void 0&&_turboJSON$pipeline.build){hasBuildPipeline=true;}}if(packageJSONBuf!==null){var _packageJSON$turbo,_packageJSON$dependen,_packageJSON$devDepen;const packageJSON=JSON.parse(packageJSONBuf.toString('utf-8'));if(packageJSON!==null&&packageJSON!==void 0&&(_packageJSON$turbo=packageJSON.turbo)!==null&&_packageJSON$turbo!==void 0&&(_packageJSON$turbo=_packageJSON$turbo.pipeline)!==null&&_packageJSON$turbo!==void 0&&_packageJSON$turbo.build){hasBuildPipeline=true;}turboSemVer=(packageJSON===null||packageJSON===void 0||(_packageJSON$dependen=packageJSON.dependencies)===null||_packageJSON$dependen===void 0?void 0:_packageJSON$dependen.turbo)||(packageJSON===null||packageJSON===void 0||(_packageJSON$devDepen=packageJSON.devDependencies)===null||_packageJSON$devDepen===void 0?void 0:_packageJSON$devDepen.turbo)||null;}if(!hasBuildPipeline){throw new MissingBuildPipeline();}if(projectPath==='/'){return{monorepoManager:'turbo',buildCommand:'turbo run build',installCommand:packageManager?"".concat(packageManager," install"):null,commandForIgnoringBuildStep:'npx turbo-ignore'};}let buildCommand=null;if(projectPath){if(supportsRootCommand(turboSemVer)){buildCommand="turbo run build";}else{// We don't know for sure if the local `turbo` supports inference.
buildCommand="cd ".concat(relativeToRoot," && turbo run build --filter={").concat(projectPath,"}...");}}return{monorepoManager:'turbo',buildCommand,installCommand:packageManager==='npm'?"".concat(packageManager," install --prefix=").concat(relativeToRoot):packageManager?"".concat(packageManager," install"):null,commandForIgnoringBuildStep:'npx turbo-ignore'};}else if(monorepoManager==='nx'){var _nxJSON$targetDefault;// No ENOENT handling required here since conditional wouldn't be `true` unless `nx.json` was found.
const nxJSONBuf=await detectorFilesystem.readFile('nx.json');const nxJSON=json5_1.default.parse(nxJSONBuf.toString('utf-8'));if(!(nxJSON!==null&&nxJSON!==void 0&&(_nxJSON$targetDefault=nxJSON.targetDefaults)!==null&&_nxJSON$targetDefault!==void 0&&_nxJSON$targetDefault.build)){const[projectJSONBuf,packageJSONBuf]=await Promise.all([detectorFilesystem.readFile((0,path_1$1.join)(projectPath,'project.json')).catch(()=>null),detectorFilesystem.readFile((0,path_1$1.join)(projectPath,'package.json')).catch(()=>null)]);let hasBuildTarget=false;if(projectJSONBuf){var _projectJSON$targets;const projectJSON=json5_1.default.parse(projectJSONBuf.toString('utf-8'));if(projectJSON!==null&&projectJSON!==void 0&&(_projectJSON$targets=projectJSON.targets)!==null&&_projectJSON$targets!==void 0&&_projectJSON$targets.build){hasBuildTarget=true;}}if(packageJSONBuf){const packageJSON=json5_1.default.parse(packageJSONBuf.toString('utf-8'));if(packageJSON!==null&&packageJSON!==void 0&&packageJSON.nx){var _packageJSON$nx$targe;if((_packageJSON$nx$targe=packageJSON.nx.targets)!==null&&_packageJSON$nx$targe!==void 0&&_packageJSON$nx$targe.build){hasBuildTarget=true;}}}if(!hasBuildTarget){throw new MissingBuildTarget();}}if(projectPath==='/'){return{monorepoManager:'nx',buildCommand:'npx nx build',installCommand:packageManager?"".concat(packageManager," install"):null};}return{monorepoManager:'nx',buildCommand:projectName?"cd ".concat(relativeToRoot," && npx nx build ").concat(projectName):null,installCommand:packageManager==='npm'?"".concat(packageManager," install --prefix=").concat(relativeToRoot):packageManager?"".concat(packageManager," install"):null};}// TODO (@Ethan-Arrowood) - Revisit rush support when we can test it better
/* else if (monorepoManager === 'rush') {
      setCommand(
        'buildCommand',
        `node ${relativeToRoot}/common/scripts/install-run-rush.js build --to ${projectName}`
      );
      setCommand(
        'installCommand',
        `node ${relativeToRoot}/common/scripts/install-run-rush.js install`
      );
    } */return null;}getMonorepoDefaultSettings$1.getMonorepoDefaultSettings=getMonorepoDefaultSettings;var hasRequiredDist;function requireDist(){if(hasRequiredDist)return dist$1;hasRequiredDist=1;(function(exports){var __createBinding=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||("get"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __exportStar=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p);};Object.defineProperty(exports,"__esModule",{value:true});exports.packageManagers=exports.isStaticRuntime=exports.isOfficialRuntime=exports.monorepoManagers=exports.getWorkspacePackagePaths=exports.getWorkspaces=exports.workspaceManagers=exports.LocalFileSystemDetector=exports.DetectorFilesystem=exports.getProjectPaths=exports.detectFrameworkVersion=exports.detectFrameworkRecord=exports.detectFrameworks=exports.detectFramework=exports.detectFileSystemAPI=exports.detectApiExtensions=exports.detectApiDirectory=exports.detectOutputDirectory=exports.detectBuilders=void 0;var detect_builders_1=detectBuilders$1;Object.defineProperty(exports,"detectBuilders",{enumerable:true,get:function(){return detect_builders_1.detectBuilders;}});Object.defineProperty(exports,"detectOutputDirectory",{enumerable:true,get:function(){return detect_builders_1.detectOutputDirectory;}});Object.defineProperty(exports,"detectApiDirectory",{enumerable:true,get:function(){return detect_builders_1.detectApiDirectory;}});Object.defineProperty(exports,"detectApiExtensions",{enumerable:true,get:function(){return detect_builders_1.detectApiExtensions;}});var detect_file_system_api_1=requireDetectFileSystemApi();Object.defineProperty(exports,"detectFileSystemAPI",{enumerable:true,get:function(){return detect_file_system_api_1.detectFileSystemAPI;}});var detect_framework_1=detectFramework$1;Object.defineProperty(exports,"detectFramework",{enumerable:true,get:function(){return detect_framework_1.detectFramework;}});Object.defineProperty(exports,"detectFrameworks",{enumerable:true,get:function(){return detect_framework_1.detectFrameworks;}});Object.defineProperty(exports,"detectFrameworkRecord",{enumerable:true,get:function(){return detect_framework_1.detectFrameworkRecord;}});Object.defineProperty(exports,"detectFrameworkVersion",{enumerable:true,get:function(){return detect_framework_1.detectFrameworkVersion;}});var get_project_paths_1=getProjectPaths;Object.defineProperty(exports,"getProjectPaths",{enumerable:true,get:function(){return get_project_paths_1.getProjectPaths;}});var filesystem_1=filesystem;Object.defineProperty(exports,"DetectorFilesystem",{enumerable:true,get:function(){return filesystem_1.DetectorFilesystem;}});var local_file_system_detector_1=localFileSystemDetector;Object.defineProperty(exports,"LocalFileSystemDetector",{enumerable:true,get:function(){return local_file_system_detector_1.LocalFileSystemDetector;}});var workspace_managers_1=workspaceManagers;Object.defineProperty(exports,"workspaceManagers",{enumerable:true,get:function(){return workspace_managers_1.workspaceManagers;}});var get_workspaces_1=getWorkspaces$1;Object.defineProperty(exports,"getWorkspaces",{enumerable:true,get:function(){return get_workspaces_1.getWorkspaces;}});var get_workspace_package_paths_1=getWorkspacePackagePaths$1;Object.defineProperty(exports,"getWorkspacePackagePaths",{enumerable:true,get:function(){return get_workspace_package_paths_1.getWorkspacePackagePaths;}});var monorepo_managers_1=monorepoManagers;Object.defineProperty(exports,"monorepoManagers",{enumerable:true,get:function(){return monorepo_managers_1.monorepoManagers;}});var is_official_runtime_1=isOfficialRuntime;Object.defineProperty(exports,"isOfficialRuntime",{enumerable:true,get:function(){return is_official_runtime_1.isOfficialRuntime;}});Object.defineProperty(exports,"isStaticRuntime",{enumerable:true,get:function(){return is_official_runtime_1.isStaticRuntime;}});var package_managers_1=packageManagers;Object.defineProperty(exports,"packageManagers",{enumerable:true,get:function(){return package_managers_1.packageManagers;}});__exportStar(getMonorepoDefaultSettings$1,exports);})(dist$1);return dist$1;}var distExports=requireDist();const request=require$$1$4.getIt([require$$2$1.promise()]);async function bootstrapFromTemplate(context,url){const{prompt,workDir}=context;const cliVersion=await getCliVersion();let inProjectContext=false;try{const projectManifest=await readJson(path__default.default.join(workDir,"sanity.json"));inProjectContext=Boolean(projectManifest.root);}catch(err){}loadEnv.debug(inProjectContext?"Project context found":"Not in project context");let zip;try{loadEnv.debug("Fetching zip from %s",url);zip=await getZip(url);loadEnv.debug("Zip finished downloading");}catch(err){err.message="Failed to get template: ".concat(err.message);throw err;}loadEnv.debug("Looking up template manifest from zip");const manifest=zip.find(file=>path__default.default.basename(file.path)==="package.json"&&!file.path.includes("node_modules"));if(!manifest){throw new Error("Could not find `package.json` in template");}const baseDir="".concat(path__default.default.dirname(manifest.path),"/template");loadEnv.debug("Manifest path resolved to %s",manifest.path);loadEnv.debug("Base directory resolved to %s",baseDir);const templateFiles=zip.filter(file=>file.type==="file"&&file.path.indexOf(baseDir)===0);loadEnv.debug("%d files found in template",templateFiles.length);const manifestContent=parseJson(manifest.data.toString());const tplVars=(manifestContent===null||manifestContent===void 0?void 0:manifestContent.sanityTemplate)||{};const{minimumBaseVersion,minimumCliVersion}=tplVars;if(minimumBaseVersion){loadEnv.debug("Template requires Sanity version %s",minimumBaseVersion);const installed=getSanityVersion(workDir,cliVersion);loadEnv.debug("Installed Sanity version is %s",installed);if(semver__default.default.lt(installed,minimumBaseVersion)){throw new Error("Template requires Sanity at version ".concat(minimumBaseVersion,", installed is ").concat(installed));}}if(minimumCliVersion){loadEnv.debug("Template requires Sanity CLI version %s",minimumCliVersion);loadEnv.debug("Installed CLI version is %s",cliVersion);if(semver__default.default.lt(cliVersion,minimumCliVersion)){throw new Error("Template requires @sanity/cli at version ".concat(minimumCliVersion,", installed is ").concat(cliVersion));}}const name=await prompt.single({type:"input",message:"Plugin name:",default:tplVars.suggestedName||"",validate:async pkgName=>{const{validForNewPackages}=validateNpmPackageName__default.default(pkgName);if(!validForNewPackages){return"Name must be a valid npm package name (https://docs.npmjs.com/files/package.json#name)";}const outputPath2=path__default.default.join(workDir,"plugins",pkgName);const isEmpty=await fs$p.pathIsEmpty(outputPath2);if(inProjectContext&&!isEmpty){return"Plugin with given name already exists in project";}return true;}});let outputPath=path__default.default.join(workDir,"plugins",name);if(!inProjectContext){const cwdIsEmpty=await fs$p.pathIsEmpty(workDir);outputPath=await prompt.single({type:"input",message:"Output path:",default:cwdIsEmpty?workDir:path__default.default.join(workDir,name),validate:validateEmptyPath$1,filter:fs$p.absolutify});}loadEnv.debug("Output path set to %s",outputPath);let createConfig=tplVars.requiresConfig;if(typeof createConfig==="undefined"){createConfig=await prompt.single({type:"confirm",message:"Does the plugin need a configuration file?",default:false});}loadEnv.debug("Ensuring directory exists: %s",outputPath);await fs__default.default.mkdir(outputPath,{recursive:true});await Promise.all(templateFiles.map(file=>{const filename=file.path.slice(baseDir.length);loadEnv.debug('Writing template file "%s" to "%s"',filename,outputPath);return fs__default.default.writeFile(path__default.default.join(outputPath,filename),file.data);}));return{name,outputPath,inPluginsPath:inProjectContext,dependencies:tplVars.dependencies};}async function validateEmptyPath$1(dir){const isEmpty=await fs$p.pathIsEmpty(dir);return isEmpty?true:"Path is not empty";}function getZip(url){return request({url,rawBody:true}).then(res=>{if(res.statusCode>299){const httpErr=["HTTP",res.statusCode,res.statusMessage].filter(Boolean).join(" ");throw new Error("".concat(httpErr," trying to download ").concat(url));}return decompress__default.default(res.body);});}function parseJson(json){try{return JSON.parse(json);}catch(err){return void 0;}}function getSanityVersion(workDir,fallback){const basePkg=resolveFrom$1.silent(workDir,"@sanity/base/package.json");return basePkg?getCliConfig.dynamicRequire(basePkg).version:fallback;}const pluginTemplates=[{value:"logo",name:"Studio logo",url:"https://github.com/sanity-io/plugin-template-logo/archive/master.zip"},{value:"tool",name:"Basic, empty tool",url:"https://github.com/sanity-io/plugin-template-tool/archive/master.zip"},{value:"toolWithRouting",name:"Tool with basic routing",url:"https://github.com/sanity-io/plugin-template-tool-with-routing/archive/master.zip"},{value:"chessInput",name:"Chess board input component w/ block preview",url:"https://github.com/sanity-io/plugin-template-chess-input/archive/master.zip"},{value:"dashboardWidget",name:"A Dashboard widget with cats",url:"https://github.com/sanity-io/plugin-template-dashboard-widget-cats/archive/master.zip"},{value:"assetSource",name:"Custom asset source plugin",url:"https://github.com/sanity-io/plugin-template-asset-source/archive/master.zip"}];async function initPlugin(args,context){const{output,prompt}=context;const[,specifiedTemplateUrl]=args.argsWithoutOptions;output.print("This utility will walk you through creating a new Sanity plugin.");output.print("Press ^C at any time to quit.\n");const hasTemplateUrl=/^https?:\/\//.test(specifiedTemplateUrl||"");if(hasTemplateUrl){loadEnv.debug("User provided template URL: %s",specifiedTemplateUrl);return bootstrapFromUrl(context,specifiedTemplateUrl);}let specifiedTemplate=null;if(specifiedTemplateUrl){specifiedTemplate=pluginTemplates.find(tpl=>tpl.value===specifiedTemplateUrl);}if(specifiedTemplate){loadEnv.debug('User wanted template "%s", match found at %s',specifiedTemplateUrl,specifiedTemplate.url);return bootstrapFromUrl(context,specifiedTemplate.url);}else if(specifiedTemplateUrl){throw new Error("Cannot find template with name \"".concat(specifiedTemplateUrl,"\""));}const templateChoices=pluginTemplates.map(_ref24=>{let{value,name}=_ref24;return{value,name};});const selected=await prompt.single({message:"Select template to use",type:"list",choices:templateChoices});specifiedTemplate=pluginTemplates.find(tpl=>tpl.value===selected);if(!specifiedTemplate){throw new Error("No template selected");}loadEnv.debug("User selected template URL: %s",specifiedTemplate.url);return bootstrapFromUrl(context,specifiedTemplate.url);}async function bootstrapFromUrl(context,url){const{output,prompt,yarn,workDir}=context;loadEnv.debug("Bootstrapping from URL: %s",url);const{name,outputPath,inPluginsPath,dependencies}=await bootstrapFromTemplate(context,url);if(inPluginsPath){const addIt=await prompt.single({type:"confirm",message:"Enable plugin in current Sanity installation?",default:true});if(addIt){await addPluginToManifest(workDir,name.replace(/^sanity-plugin-/,""));}}if(dependencies){const dependencyString=JSON.stringify(dependencies,null,2).split("\n").slice(1,-1).join("\n").replace(/"/g,"");output.print("\nThe following dependencies are required for this template:");output.print("".concat(dependencyString,"\n"));}if(dependencies&&inPluginsPath){const addDeps=await prompt.single({type:"confirm",message:"Install dependencies in current project?",default:true});if(addDeps){const deps=Object.keys(dependencies).map(dep=>"".concat(dep,"@").concat(dependencies[dep]));await yarn(["add"].concat(deps),{...output,rootDir:workDir});output.print("Dependencies installed.");output.print("Remember to remove them from `package.json` if you no longer need them!");}}output.print("\nSuccess! Plugin initialized at ".concat(outputPath));}async function addPluginToManifest(sanityDir,pluginName){const manifestPath=path__default.default.join(sanityDir,"sanity.json");const manifest=JSON.parse(await fs__default.default.readFile(manifestPath,"utf8"));manifest.plugins=manifest.plugins||[];if(manifest.plugins.indexOf(pluginName)===-1){manifest.plugins.push(pluginName);}await fs__default.default.writeFile(manifestPath,JSON.stringify(manifest,null,2));return manifest;}var execa$2={exports:{}};var crossSpawn$1={exports:{}};var windows;var hasRequiredWindows;function requireWindows(){if(hasRequiredWindows)return windows;hasRequiredWindows=1;windows=isexe;isexe.sync=sync;var fs=require$$0__default.default;function checkPathExt(path,options){var pathext=options.pathExt!==undefined?options.pathExt:process.env.PATHEXT;if(!pathext){return true;}pathext=pathext.split(';');if(pathext.indexOf('')!==-1){return true;}for(var i=0;i<pathext.length;i++){var p=pathext[i].toLowerCase();if(p&&path.substr(-p.length).toLowerCase()===p){return true;}}return false;}function checkStat(stat,path,options){if(!stat.isSymbolicLink()&&!stat.isFile()){return false;}return checkPathExt(path,options);}function isexe(path,options,cb){fs.stat(path,function(er,stat){cb(er,er?false:checkStat(stat,path,options));});}function sync(path,options){return checkStat(fs.statSync(path),path,options);}return windows;}var mode;var hasRequiredMode;function requireMode(){if(hasRequiredMode)return mode;hasRequiredMode=1;mode=isexe;isexe.sync=sync;var fs=require$$0__default.default;function isexe(path,options,cb){fs.stat(path,function(er,stat){cb(er,er?false:checkStat(stat,options));});}function sync(path,options){return checkStat(fs.statSync(path),options);}function checkStat(stat,options){return stat.isFile()&&checkMode(stat,options);}function checkMode(stat,options){var mod=stat.mode;var uid=stat.uid;var gid=stat.gid;var myUid=options.uid!==undefined?options.uid:process.getuid&&process.getuid();var myGid=options.gid!==undefined?options.gid:process.getgid&&process.getgid();var u=parseInt('100',8);var g=parseInt('010',8);var o=parseInt('001',8);var ug=u|g;var ret=mod&o||mod&g&&gid===myGid||mod&u&&uid===myUid||mod&ug&&myUid===0;return ret;}return mode;}var core$4;if(process.platform==='win32'||loadEnv.commonjsGlobal.TESTING_WINDOWS){core$4=requireWindows();}else{core$4=requireMode();}var isexe_1=isexe$1;isexe$1.sync=sync$1;function isexe$1(path,options,cb){if(typeof options==='function'){cb=options;options={};}if(!cb){if(typeof Promise!=='function'){throw new TypeError('callback not provided');}return new Promise(function(resolve,reject){isexe$1(path,options||{},function(er,is){if(er){reject(er);}else{resolve(is);}});});}core$4(path,options||{},function(er,is){// ignore EACCES because that just means we aren't allowed to run it
if(er){if(er.code==='EACCES'||options&&options.ignoreErrors){er=null;is=false;}}cb(er,is);});}function sync$1(path,options){// my kingdom for a filtered catch
try{return core$4.sync(path,options||{});}catch(er){if(options&&options.ignoreErrors||er.code==='EACCES'){return false;}else{throw er;}}}const isWindows$1=process.platform==='win32'||process.env.OSTYPE==='cygwin'||process.env.OSTYPE==='msys';const path$f=path__default.default;const COLON=isWindows$1?';':':';const isexe=isexe_1;const getNotFoundError=cmd=>Object.assign(new Error("not found: ".concat(cmd)),{code:'ENOENT'});const getPathInfo=(cmd,opt)=>{const colon=opt.colon||COLON;// If it has a slash, then we don't bother searching the pathenv.
// just check the file itself, and that's it.
const pathEnv=cmd.match(/\//)||isWindows$1&&cmd.match(/\\/)?['']:[// windows always checks the cwd first
...(isWindows$1?[process.cwd()]:[]),...(opt.path||process.env.PATH||/* istanbul ignore next: very unusual */'').split(colon)];const pathExtExe=isWindows$1?opt.pathExt||process.env.PATHEXT||'.EXE;.CMD;.BAT;.COM':'';const pathExt=isWindows$1?pathExtExe.split(colon):[''];if(isWindows$1){if(cmd.indexOf('.')!==-1&&pathExt[0]!=='')pathExt.unshift('');}return{pathEnv,pathExt,pathExtExe};};const which$1=(cmd,opt,cb)=>{if(typeof opt==='function'){cb=opt;opt={};}if(!opt)opt={};const{pathEnv,pathExt,pathExtExe}=getPathInfo(cmd,opt);const found=[];const step=i=>new Promise((resolve,reject)=>{if(i===pathEnv.length)return opt.all&&found.length?resolve(found):reject(getNotFoundError(cmd));const ppRaw=pathEnv[i];const pathPart=/^".*"$/.test(ppRaw)?ppRaw.slice(1,-1):ppRaw;const pCmd=path$f.join(pathPart,cmd);const p=!pathPart&&/^\.[\\\/]/.test(cmd)?cmd.slice(0,2)+pCmd:pCmd;resolve(subStep(p,i,0));});const subStep=(p,i,ii)=>new Promise((resolve,reject)=>{if(ii===pathExt.length)return resolve(step(i+1));const ext=pathExt[ii];isexe(p+ext,{pathExt:pathExtExe},(er,is)=>{if(!er&&is){if(opt.all)found.push(p+ext);else return resolve(p+ext);}return resolve(subStep(p,i,ii+1));});});return cb?step(0).then(res=>cb(null,res),cb):step(0);};const whichSync=(cmd,opt)=>{opt=opt||{};const{pathEnv,pathExt,pathExtExe}=getPathInfo(cmd,opt);const found=[];for(let i=0;i<pathEnv.length;i++){const ppRaw=pathEnv[i];const pathPart=/^".*"$/.test(ppRaw)?ppRaw.slice(1,-1):ppRaw;const pCmd=path$f.join(pathPart,cmd);const p=!pathPart&&/^\.[\\\/]/.test(cmd)?cmd.slice(0,2)+pCmd:pCmd;for(let j=0;j<pathExt.length;j++){const cur=p+pathExt[j];try{const is=isexe.sync(cur,{pathExt:pathExtExe});if(is){if(opt.all)found.push(cur);else return cur;}}catch(ex){}}}if(opt.all&&found.length)return found;if(opt.nothrow)return null;throw getNotFoundError(cmd);};var which_1=which$1;which$1.sync=whichSync;var which$2=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(which_1);var pathKey$1={exports:{}};const pathKey=function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const environment=options.env||process.env;const platform=options.platform||process.platform;if(platform!=='win32'){return'PATH';}return Object.keys(environment).reverse().find(key=>key.toUpperCase()==='PATH')||'Path';};pathKey$1.exports=pathKey;// TODO: Remove this for the next major release
pathKey$1.exports.default=pathKey;var pathKeyExports=pathKey$1.exports;const path$e=path__default.default;const which=which_1;const getPathKey=pathKeyExports;function resolveCommandAttempt(parsed,withoutPathExt){const env=parsed.options.env||process.env;const cwd=process.cwd();const hasCustomCwd=parsed.options.cwd!=null;// Worker threads do not have process.chdir()
const shouldSwitchCwd=hasCustomCwd&&process.chdir!==undefined&&!process.chdir.disabled;// If a custom `cwd` was specified, we need to change the process cwd
// because `which` will do stat calls but does not support a custom cwd
if(shouldSwitchCwd){try{process.chdir(parsed.options.cwd);}catch(err){/* Empty */}}let resolved;try{resolved=which.sync(parsed.command,{path:env[getPathKey({env})],pathExt:withoutPathExt?path$e.delimiter:undefined});}catch(e){/* Empty */}finally{if(shouldSwitchCwd){process.chdir(cwd);}}// If we successfully resolved, ensure that an absolute path is returned
// Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it
if(resolved){resolved=path$e.resolve(hasCustomCwd?parsed.options.cwd:'',resolved);}return resolved;}function resolveCommand$1(parsed){return resolveCommandAttempt(parsed)||resolveCommandAttempt(parsed,true);}var resolveCommand_1=resolveCommand$1;var _escape={};// See http://www.robvanderwoude.com/escapechars.php
const metaCharsRegExp=/([()\][%!^"`<>&|;, *?])/g;function escapeCommand(arg){// Escape meta chars
arg=arg.replace(metaCharsRegExp,'^$1');return arg;}function escapeArgument(arg,doubleEscapeMetaChars){// Convert to string
arg="".concat(arg);// Algorithm below is based on https://qntm.org/cmd
// Sequence of backslashes followed by a double quote:
// double up all the backslashes and escape the double quote
arg=arg.replace(/(\\*)"/g,'$1$1\\"');// Sequence of backslashes followed by the end of the string
// (which will become a double quote later):
// double up all the backslashes
arg=arg.replace(/(\\*)$/,'$1$1');// All other backslashes occur literally
// Quote the whole thing:
arg="\"".concat(arg,"\"");// Escape meta chars
arg=arg.replace(metaCharsRegExp,'^$1');// Double escape meta chars if necessary
if(doubleEscapeMetaChars){arg=arg.replace(metaCharsRegExp,'^$1');}return arg;}_escape.command=escapeCommand;_escape.argument=escapeArgument;var shebangRegex$1=/^#!(.*)/;const shebangRegex=shebangRegex$1;var shebangCommand$1=function(){let string=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';const match=string.match(shebangRegex);if(!match){return null;}const[path,argument]=match[0].replace(/#! ?/,'').split(' ');const binary=path.split('/').pop();if(binary==='env'){return argument;}return argument?"".concat(binary," ").concat(argument):binary;};const fs$9=require$$0__default.default;const shebangCommand=shebangCommand$1;function readShebang$1(command){// Read the first 150 bytes from the file
const size=150;const buffer=Buffer.alloc(size);let fd;try{fd=fs$9.openSync(command,'r');fs$9.readSync(fd,buffer,0,size,0);fs$9.closeSync(fd);}catch(e){/* Empty */}// Attempt to extract shebang (null is returned if not a shebang)
return shebangCommand(buffer.toString());}var readShebang_1=readShebang$1;const path$d=path__default.default;const resolveCommand=resolveCommand_1;const escape=_escape;const readShebang=readShebang_1;const isWin$1=process.platform==='win32';const isExecutableRegExp=/\.(?:com|exe)$/i;const isCmdShimRegExp=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;function detectShebang(parsed){parsed.file=resolveCommand(parsed);const shebang=parsed.file&&readShebang(parsed.file);if(shebang){parsed.args.unshift(parsed.file);parsed.command=shebang;return resolveCommand(parsed);}return parsed.file;}function parseNonShell(parsed){if(!isWin$1){return parsed;}// Detect & add support for shebangs
const commandFile=detectShebang(parsed);// We don't need a shell if the command filename is an executable
const needsShell=!isExecutableRegExp.test(commandFile);// If a shell is required, use cmd.exe and take care of escaping everything correctly
// Note that `forceShell` is an hidden option used only in tests
if(parsed.options.forceShell||needsShell){// Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`
// The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument
// Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,
// we need to double escape them
const needsDoubleEscapeMetaChars=isCmdShimRegExp.test(commandFile);// Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\bar)
// This is necessary otherwise it will always fail with ENOENT in those cases
parsed.command=path$d.normalize(parsed.command);// Escape command & arguments
parsed.command=escape.command(parsed.command);parsed.args=parsed.args.map(arg=>escape.argument(arg,needsDoubleEscapeMetaChars));const shellCommand=[parsed.command].concat(parsed.args).join(' ');parsed.args=['/d','/s','/c',"\"".concat(shellCommand,"\"")];parsed.command=process.env.comspec||'cmd.exe';parsed.options.windowsVerbatimArguments=true;// Tell node's spawn that the arguments are already escaped
}return parsed;}function parse$9(command,args,options){// Normalize arguments, similar to nodejs
if(args&&!Array.isArray(args)){options=args;args=null;}args=args?args.slice(0):[];// Clone array to avoid changing the original
options=Object.assign({},options);// Clone object to avoid changing the original
// Build our parsed object
const parsed={command,args,options,file:undefined,original:{command,args}};// Delegate further parsing to shell or non-shell
return options.shell?parsed:parseNonShell(parsed);}var parse_1$3=parse$9;const isWin=process.platform==='win32';function notFoundError(original,syscall){return Object.assign(new Error("".concat(syscall," ").concat(original.command," ENOENT")),{code:'ENOENT',errno:'ENOENT',syscall:"".concat(syscall," ").concat(original.command),path:original.command,spawnargs:original.args});}function hookChildProcess(cp,parsed){if(!isWin){return;}const originalEmit=cp.emit;cp.emit=function(name,arg1){// If emitting "exit" event and exit code is 1, we need to check if
// the command exists and emit an "error" instead
// See https://github.com/IndigoUnited/node-cross-spawn/issues/16
if(name==='exit'){const err=verifyENOENT(arg1,parsed);if(err){return originalEmit.call(cp,'error',err);}}return originalEmit.apply(cp,arguments);// eslint-disable-line prefer-rest-params
};}function verifyENOENT(status,parsed){if(isWin&&status===1&&!parsed.file){return notFoundError(parsed.original,'spawn');}return null;}function verifyENOENTSync(status,parsed){if(isWin&&status===1&&!parsed.file){return notFoundError(parsed.original,'spawnSync');}return null;}var enoent$1={hookChildProcess,verifyENOENT,verifyENOENTSync,notFoundError};const cp=require$$0__default$1.default;const parse$8=parse_1$3;const enoent=enoent$1;function spawn(command,args,options){// Parse the arguments
const parsed=parse$8(command,args,options);// Spawn the child process
const spawned=cp.spawn(parsed.command,parsed.args,parsed.options);// Hook into child process "exit" event to emit an error if the command
// does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16
enoent.hookChildProcess(spawned,parsed);return spawned;}function spawnSync(command,args,options){// Parse the arguments
const parsed=parse$8(command,args,options);// Spawn the child process
const result=cp.spawnSync(parsed.command,parsed.args,parsed.options);// Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16
result.error=result.error||enoent.verifyENOENTSync(result.status,parsed);return result;}crossSpawn$1.exports=spawn;crossSpawn$1.exports.spawn=spawn;crossSpawn$1.exports.sync=spawnSync;crossSpawn$1.exports._parse=parse$8;crossSpawn$1.exports._enoent=enoent;var crossSpawnExports=crossSpawn$1.exports;var stripFinalNewline$1=input=>{const LF=typeof input==='string'?'\n':'\n'.charCodeAt();const CR=typeof input==='string'?'\r':'\r'.charCodeAt();if(input[input.length-1]===LF){input=input.slice(0,input.length-1);}if(input[input.length-1]===CR){input=input.slice(0,input.length-1);}return input;};var npmRunPath$1={exports:{}};(function(module){const path=path__default.default;const pathKey=pathKeyExports;const npmRunPath=options=>{options={cwd:process.cwd(),path:process.env[pathKey()],...options};let previous;let cwdPath=path.resolve(options.cwd);const result=[];while(previous!==cwdPath){result.push(path.join(cwdPath,'node_modules/.bin'));previous=cwdPath;cwdPath=path.resolve(cwdPath,'..');}// Ensure the running `node` binary is used
result.push(path.dirname(process.execPath));return result.concat(options.path).join(path.delimiter);};module.exports=npmRunPath;// TODO: Remove this for the next major release
module.exports.default=npmRunPath;module.exports.env=options=>{options={env:process.env,...options};const env={...options.env};const path=pathKey({env});options.path=env[path];env[path]=module.exports(options);return env;};})(npmRunPath$1);var npmRunPathExports=npmRunPath$1.exports;var onetime$4={exports:{}};var mimicFn$3={exports:{}};const mimicFn$2=(to,from)=>{for(const prop of Reflect.ownKeys(from)){Object.defineProperty(to,prop,Object.getOwnPropertyDescriptor(from,prop));}return to;};mimicFn$3.exports=mimicFn$2;// TODO: Remove this for the next major release
mimicFn$3.exports.default=mimicFn$2;var mimicFnExports=mimicFn$3.exports;const mimicFn$1=mimicFnExports;const calledFunctions=new WeakMap();const onetime$3=function(function_){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof function_!=='function'){throw new TypeError('Expected a function');}let returnValue;let callCount=0;const functionName=function_.displayName||function_.name||'<anonymous>';const onetime=function(){calledFunctions.set(onetime,++callCount);if(callCount===1){for(var _len3=arguments.length,arguments_=new Array(_len3),_key3=0;_key3<_len3;_key3++){arguments_[_key3]=arguments[_key3];}returnValue=function_.apply(this,arguments_);function_=null;}else if(options.throw===true){throw new Error("Function `".concat(functionName,"` can only be called once"));}return returnValue;};mimicFn$1(onetime,function_);calledFunctions.set(onetime,callCount);return onetime;};onetime$4.exports=onetime$3;// TODO: Remove this for the next major release
onetime$4.exports.default=onetime$3;onetime$4.exports.callCount=function_=>{if(!calledFunctions.has(function_)){throw new Error("The given function `".concat(function_.name,"` is not wrapped by the `onetime` package"));}return calledFunctions.get(function_);};var onetimeExports=onetime$4.exports;const os$3=require$$0__default$2.default;const util$4=require$$0__default$5.default;const getCode=(error,code)=>{if(error&&error.code){return[error.code,os$3.constants.errno[error.code]];}if(Number.isInteger(code)){return[util$4.getSystemErrorName(-code),code];}return[];};const getErrorPrefix=_ref25=>{let{timedOut,timeout,signal,exitCodeName,exitCode,isCanceled}=_ref25;if(timedOut){return"timed out after ".concat(timeout," milliseconds");}if(isCanceled){return'was canceled';}if(signal){return"was killed with ".concat(signal);}if(exitCode!==undefined){return"failed with exit code ".concat(exitCode," (").concat(exitCodeName,")");}return'failed';};const makeError$1=_ref26=>{let{stdout,stderr,all,error,signal,code,command,timedOut,isCanceled,killed,parsed:{options:{timeout}}}=_ref26;const[exitCodeName,exitCode]=getCode(error,code);const prefix=getErrorPrefix({timedOut,timeout,signal,exitCodeName,exitCode,isCanceled});const message="Command ".concat(prefix,": ").concat(command);if(error instanceof Error){error.originalMessage=error.message;error.message="".concat(message,"\n").concat(error.message);}else{error=new Error(message);}error.command=command;delete error.code;error.exitCode=exitCode;error.exitCodeName=exitCodeName;error.stdout=stdout;error.stderr=stderr;if(all!==undefined){error.all=all;}if('bufferedData'in error){delete error.bufferedData;}error.failed=true;error.timedOut=Boolean(timedOut);error.isCanceled=isCanceled;error.killed=killed&&!timedOut;// `signal` emitted on `spawned.on('exit')` event can be `null`. We normalize
// it to `undefined`
error.signal=signal||undefined;return error;};var error=makeError$1;var stdio={exports:{}};const aliases=['stdin','stdout','stderr'];const hasAlias=opts=>aliases.some(alias=>opts[alias]!==undefined);const normalizeStdio$1=opts=>{if(!opts){return;}const{stdio}=opts;if(stdio===undefined){return aliases.map(alias=>opts[alias]);}if(hasAlias(opts)){throw new Error("It's not possible to provide `stdio` in combination with one of ".concat(aliases.map(alias=>"`".concat(alias,"`")).join(', ')));}if(typeof stdio==='string'){return stdio;}if(!Array.isArray(stdio)){throw new TypeError("Expected `stdio` to be of type `string` or `Array`, got `".concat(typeof stdio,"`"));}const length=Math.max(stdio.length,aliases.length);return Array.from({length},(value,index)=>stdio[index]);};stdio.exports=normalizeStdio$1;// `ipc` is pushed unless it is already present
stdio.exports.node=opts=>{const stdio=normalizeStdio$1(opts);if(stdio==='ipc'){return'ipc';}if(stdio===undefined||typeof stdio==='string'){return[stdio,stdio,stdio,'ipc'];}if(stdio.includes('ipc')){return stdio;}return[...stdio,'ipc'];};var stdioExports=stdio.exports;var pFinally$1=async function(promise){let onFinally=arguments.length>1&&arguments[1]!==undefined?arguments[1]:()=>{};let value;try{value=await promise;}catch(error){await onFinally();throw error;}await onFinally();return value;};const os$2=require$$0__default$2.default;const onExit=signalExitExports;const pFinally=pFinally$1;const DEFAULT_FORCE_KILL_TIMEOUT=1000*5;// Monkey-patches `childProcess.kill()` to add `forceKillAfterTimeout` behavior
const spawnedKill$1=function(kill){let signal=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'SIGTERM';let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const killResult=kill(signal);setKillTimeout(kill,signal,options,killResult);return killResult;};const setKillTimeout=(kill,signal,options,killResult)=>{if(!shouldForceKill(signal,options,killResult)){return;}const timeout=getForceKillAfterTimeout(options);setTimeout(()=>{kill('SIGKILL');},timeout).unref();};const shouldForceKill=(signal,_ref27,killResult)=>{let{forceKillAfterTimeout}=_ref27;return isSigterm(signal)&&forceKillAfterTimeout!==false&&killResult;};const isSigterm=signal=>{return signal===os$2.constants.signals.SIGTERM||typeof signal==='string'&&signal.toUpperCase()==='SIGTERM';};const getForceKillAfterTimeout=_ref28=>{let{forceKillAfterTimeout=true}=_ref28;if(forceKillAfterTimeout===true){return DEFAULT_FORCE_KILL_TIMEOUT;}if(!Number.isInteger(forceKillAfterTimeout)||forceKillAfterTimeout<0){throw new TypeError("Expected the `forceKillAfterTimeout` option to be a non-negative integer, got `".concat(forceKillAfterTimeout,"` (").concat(typeof forceKillAfterTimeout,")"));}return forceKillAfterTimeout;};// `childProcess.cancel()`
const spawnedCancel$1=(spawned,context)=>{const killResult=spawned.kill();if(killResult){context.isCanceled=true;}};const timeoutKill=(spawned,signal,reject)=>{spawned.kill(signal);reject(Object.assign(new Error('Timed out'),{timedOut:true,signal}));};// `timeout` option handling
const setupTimeout$1=(spawned,_ref29,spawnedPromise)=>{let{timeout,killSignal='SIGTERM'}=_ref29;if(timeout===0||timeout===undefined){return spawnedPromise;}if(!Number.isInteger(timeout)||timeout<0){throw new TypeError("Expected the `timeout` option to be a non-negative integer, got `".concat(timeout,"` (").concat(typeof timeout,")"));}let timeoutId;const timeoutPromise=new Promise((resolve,reject)=>{timeoutId=setTimeout(()=>{timeoutKill(spawned,killSignal,reject);},timeout);});const safeSpawnedPromise=pFinally(spawnedPromise,()=>{clearTimeout(timeoutId);});return Promise.race([timeoutPromise,safeSpawnedPromise]);};// `cleanup` option handling
const setExitHandler$1=(spawned,_ref30,timedPromise)=>{let{cleanup,detached}=_ref30;if(!cleanup||detached){return timedPromise;}const removeExitHandler=onExit(()=>{spawned.kill();});// TODO: Use native "finally" syntax when targeting Node.js 10
return pFinally(timedPromise,removeExitHandler);};var kill={spawnedKill:spawnedKill$1,spawnedCancel:spawnedCancel$1,setupTimeout:setupTimeout$1,setExitHandler:setExitHandler$1};const isStream$1=stream=>stream!==null&&typeof stream==='object'&&typeof stream.pipe==='function';isStream$1.writable=stream=>isStream$1(stream)&&stream.writable!==false&&typeof stream._write==='function'&&typeof stream._writableState==='object';isStream$1.readable=stream=>isStream$1(stream)&&stream.readable!==false&&typeof stream._read==='function'&&typeof stream._readableState==='object';isStream$1.duplex=stream=>isStream$1.writable(stream)&&isStream$1.readable(stream);isStream$1.transform=stream=>isStream$1.duplex(stream)&&typeof stream._transform==='function';var isStream_1=isStream$1;var getStream$2={exports:{}};var once$1=requireOnce();var noop$4=function(){};var isRequest$1=function(stream){return stream.setHeader&&typeof stream.abort==='function';};var isChildProcess=function(stream){return stream.stdio&&Array.isArray(stream.stdio)&&stream.stdio.length===3;};var eos$1=function(stream,opts,callback){if(typeof opts==='function')return eos$1(stream,null,opts);if(!opts)opts={};callback=once$1(callback||noop$4);var ws=stream._writableState;var rs=stream._readableState;var readable=opts.readable||opts.readable!==false&&stream.readable;var writable=opts.writable||opts.writable!==false&&stream.writable;var cancelled=false;var onlegacyfinish=function(){if(!stream.writable)onfinish();};var onfinish=function(){writable=false;if(!readable)callback.call(stream);};var onend=function(){readable=false;if(!writable)callback.call(stream);};var onexit=function(exitCode){callback.call(stream,exitCode?new Error('exited with error code: '+exitCode):null);};var onerror=function(err){callback.call(stream,err);};var onclose=function(){process.nextTick(onclosenexttick);};var onclosenexttick=function(){if(cancelled)return;if(readable&&!(rs&&rs.ended&&!rs.destroyed))return callback.call(stream,new Error('premature close'));if(writable&&!(ws&&ws.ended&&!ws.destroyed))return callback.call(stream,new Error('premature close'));};var onrequest=function(){stream.req.on('finish',onfinish);};if(isRequest$1(stream)){stream.on('complete',onfinish);stream.on('abort',onclose);if(stream.req)onrequest();else stream.on('request',onrequest);}else if(writable&&!ws){// legacy streams
stream.on('end',onlegacyfinish);stream.on('close',onlegacyfinish);}if(isChildProcess(stream))stream.on('exit',onexit);stream.on('end',onend);stream.on('finish',onfinish);if(opts.error!==false)stream.on('error',onerror);stream.on('close',onclose);return function(){cancelled=true;stream.removeListener('complete',onfinish);stream.removeListener('abort',onclose);stream.removeListener('request',onrequest);if(stream.req)stream.req.removeListener('finish',onfinish);stream.removeListener('end',onlegacyfinish);stream.removeListener('close',onlegacyfinish);stream.removeListener('finish',onfinish);stream.removeListener('exit',onexit);stream.removeListener('end',onend);stream.removeListener('error',onerror);stream.removeListener('close',onclose);};};var endOfStream$1=eos$1;var once=requireOnce();var eos=endOfStream$1;var fs$8=require$$0__default.default;// we only need fs to get the ReadStream and WriteStream prototypes
var noop$3=function(){};var ancient=/^v?\.0/.test(process.version);var isFn=function(fn){return typeof fn==='function';};var isFS=function(stream){if(!ancient)return false;// newer node version do not need to care about fs is a special way
if(!fs$8)return false;// browser
return(stream instanceof(fs$8.ReadStream||noop$3)||stream instanceof(fs$8.WriteStream||noop$3))&&isFn(stream.close);};var isRequest=function(stream){return stream.setHeader&&isFn(stream.abort);};var destroyer=function(stream,reading,writing,callback){callback=once(callback);var closed=false;stream.on('close',function(){closed=true;});eos(stream,{readable:reading,writable:writing},function(err){if(err)return callback(err);closed=true;callback();});var destroyed=false;return function(err){if(closed)return;if(destroyed)return;destroyed=true;if(isFS(stream))return stream.close(noop$3);// use close for fs streams to avoid fd leaks
if(isRequest(stream))return stream.abort();// request.destroy just do .end - .abort is what we want
if(isFn(stream.destroy))return stream.destroy();callback(err||new Error('stream was destroyed'));};};var call=function(fn){fn();};var pipe$2=function(from,to){return from.pipe(to);};var pump$1=function(){var streams=Array.prototype.slice.call(arguments);var callback=isFn(streams[streams.length-1]||noop$3)&&streams.pop()||noop$3;if(Array.isArray(streams[0]))streams=streams[0];if(streams.length<2)throw new Error('pump requires two streams per minimum');var error;var destroys=streams.map(function(stream,i){var reading=i<streams.length-1;var writing=i>0;return destroyer(stream,reading,writing,function(err){if(!error)error=err;if(err)destroys.forEach(call);if(reading)return;destroys.forEach(call);callback(error);});});return streams.reduce(pipe$2);};var pump_1=pump$1;const{PassThrough:PassThroughStream}=require$$0__default$4.default;var bufferStream$1=options=>{options={...options};const{array}=options;let{encoding}=options;const isBuffer=encoding==='buffer';let objectMode=false;if(array){objectMode=!(encoding||isBuffer);}else{encoding=encoding||'utf8';}if(isBuffer){encoding=null;}const stream=new PassThroughStream({objectMode});if(encoding){stream.setEncoding(encoding);}let length=0;const chunks=[];stream.on('data',chunk=>{chunks.push(chunk);if(objectMode){length=chunks.length;}else{length+=chunk.length;}});stream.getBufferedValue=()=>{if(array){return chunks;}return isBuffer?Buffer.concat(chunks,length):chunks.join('');};stream.getBufferedLength=()=>length;return stream;};const{constants:BufferConstants}=require$$0__default$7.default;const pump=pump_1;const bufferStream=bufferStream$1;class MaxBufferError extends Error{constructor(){super('maxBuffer exceeded');this.name='MaxBufferError';}}async function getStream$1(inputStream,options){if(!inputStream){return Promise.reject(new Error('Expected a stream'));}options={maxBuffer:Infinity,...options};const{maxBuffer}=options;let stream;await new Promise((resolve,reject)=>{const rejectPromise=error=>{// Don't retrieve an oversized buffer.
if(error&&stream.getBufferedLength()<=BufferConstants.MAX_LENGTH){error.bufferedData=stream.getBufferedValue();}reject(error);};stream=pump(inputStream,bufferStream(options),error=>{if(error){rejectPromise(error);return;}resolve();});stream.on('data',()=>{if(stream.getBufferedLength()>maxBuffer){rejectPromise(new MaxBufferError());}});});return stream.getBufferedValue();}getStream$2.exports=getStream$1;// TODO: Remove this for the next major release
getStream$2.exports.default=getStream$1;getStream$2.exports.buffer=(stream,options)=>getStream$1(stream,{...options,encoding:'buffer'});getStream$2.exports.array=(stream,options)=>getStream$1(stream,{...options,array:true});getStream$2.exports.MaxBufferError=MaxBufferError;var getStreamExports=getStream$2.exports;const{PassThrough}=require$$0__default$4.default;var mergeStream$1=function/*streams...*/(){var sources=[];var output=new PassThrough({objectMode:true});output.setMaxListeners(0);output.add=add;output.isEmpty=isEmpty;output.on('unpipe',remove);Array.prototype.slice.call(arguments).forEach(add);return output;function add(source){if(Array.isArray(source)){source.forEach(add);return this;}sources.push(source);source.once('end',remove.bind(null,source));source.once('error',output.emit.bind(output,'error'));source.pipe(output,{end:false});return this;}function isEmpty(){return sources.length==0;}function remove(source){sources=sources.filter(function(it){return it!==source;});if(!sources.length&&output.readable){output.end();}}};const isStream=isStream_1;const getStream=getStreamExports;const mergeStream=mergeStream$1;// `input` option
const handleInput$1=(spawned,input)=>{// Checking for stdin is workaround for https://github.com/nodejs/node/issues/26852
// TODO: Remove `|| spawned.stdin === undefined` once we drop support for Node.js <=12.2.0
if(input===undefined||spawned.stdin===undefined){return;}if(isStream(input)){input.pipe(spawned.stdin);}else{spawned.stdin.end(input);}};// `all` interleaves `stdout` and `stderr`
const makeAllStream$1=spawned=>{if(!spawned.stdout&&!spawned.stderr){return;}const mixed=mergeStream();if(spawned.stdout){mixed.add(spawned.stdout);}if(spawned.stderr){mixed.add(spawned.stderr);}return mixed;};// On failure, `result.stdout|stderr|all` should contain the currently buffered stream
const getBufferedData=async(stream,streamPromise)=>{if(!stream){return;}stream.destroy();try{return await streamPromise;}catch(error){return error.bufferedData;}};const getStreamPromise=(stream,_ref31)=>{let{encoding,buffer,maxBuffer}=_ref31;if(!stream){return;}if(!buffer){// TODO: Use `ret = util.promisify(stream.finished)(stream);` when targeting Node.js 10
return new Promise((resolve,reject)=>{stream.once('end',resolve).once('error',reject);});}if(encoding){return getStream(stream,{encoding,maxBuffer});}return getStream.buffer(stream,{maxBuffer});};// Retrieve result of child process: exit code, signal, error, streams (stdout/stderr/all)
const getSpawnedResult$1=async(_ref32,_ref33,processDone)=>{let{stdout,stderr,all}=_ref32;let{encoding,buffer,maxBuffer}=_ref33;const stdoutPromise=getStreamPromise(stdout,{encoding,buffer,maxBuffer});const stderrPromise=getStreamPromise(stderr,{encoding,buffer,maxBuffer});const allPromise=getStreamPromise(all,{encoding,buffer,maxBuffer:maxBuffer*2});try{return await Promise.all([processDone,stdoutPromise,stderrPromise,allPromise]);}catch(error){return Promise.all([{error,code:error.code,signal:error.signal,timedOut:error.timedOut},getBufferedData(stdout,stdoutPromise),getBufferedData(stderr,stderrPromise),getBufferedData(all,allPromise)]);}};const validateInputSync$1=_ref34=>{let{input}=_ref34;if(isStream(input)){throw new TypeError('The `input` option cannot be a stream in sync mode');}};var stream$1={handleInput:handleInput$1,makeAllStream:makeAllStream$1,getSpawnedResult:getSpawnedResult$1,validateInputSync:validateInputSync$1};const mergePromiseProperty=(spawned,promise,property)=>{// Starting the main `promise` is deferred to avoid consuming streams
const value=typeof promise==='function'?function(){return promise()[property](...arguments);}:promise[property].bind(promise);Object.defineProperty(spawned,property,{value,writable:true,enumerable:false,configurable:true});};// The return value is a mixin of `childProcess` and `Promise`
const mergePromise$1=(spawned,promise)=>{mergePromiseProperty(spawned,promise,'then');mergePromiseProperty(spawned,promise,'catch');// TODO: Remove the `if`-guard when targeting Node.js 10
if(Promise.prototype.finally){mergePromiseProperty(spawned,promise,'finally');}return spawned;};// Use promises instead of `child_process` events
const getSpawnedPromise$1=spawned=>{return new Promise((resolve,reject)=>{spawned.on('exit',(code,signal)=>{resolve({code,signal});});spawned.on('error',error=>{reject(error);});if(spawned.stdin){spawned.stdin.on('error',error=>{reject(error);});}});};var promise={mergePromise:mergePromise$1,getSpawnedPromise:getSpawnedPromise$1};const SPACES_REGEXP=/ +/g;const joinCommand$1=function(file){let args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(!Array.isArray(args)){return file;}return[file,...args].join(' ');};// Allow spaces to be escaped by a backslash if not meant as a delimiter
const handleEscaping=(tokens,token,index)=>{if(index===0){return[token];}const previousToken=tokens[tokens.length-1];if(previousToken.endsWith('\\')){return[...tokens.slice(0,-1),"".concat(previousToken.slice(0,-1)," ").concat(token)];}return[...tokens,token];};// Handle `execa.command()`
const parseCommand$1=command=>{return command.trim().split(SPACES_REGEXP).reduce(handleEscaping,[]);};var command={joinCommand:joinCommand$1,parseCommand:parseCommand$1};const path$c=path__default.default;const childProcess=require$$0__default$1.default;const crossSpawn=crossSpawnExports;const stripFinalNewline=stripFinalNewline$1;const npmRunPath=npmRunPathExports;const onetime$2=onetimeExports;const makeError=error;const normalizeStdio=stdioExports;const{spawnedKill,spawnedCancel,setupTimeout,setExitHandler}=kill;const{handleInput,getSpawnedResult,makeAllStream,validateInputSync}=stream$1;const{mergePromise,getSpawnedPromise}=promise;const{joinCommand,parseCommand}=command;const DEFAULT_MAX_BUFFER=1000*1000*100;const getEnv=_ref35=>{let{env:envOption,extendEnv,preferLocal,localDir}=_ref35;const env=extendEnv?{...process.env,...envOption}:envOption;if(preferLocal){return npmRunPath.env({env,cwd:localDir});}return env;};const handleArgs=function(file,args){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const parsed=crossSpawn._parse(file,args,options);file=parsed.command;args=parsed.args;options=parsed.options;options={maxBuffer:DEFAULT_MAX_BUFFER,buffer:true,stripFinalNewline:true,extendEnv:true,preferLocal:false,localDir:options.cwd||process.cwd(),encoding:'utf8',reject:true,cleanup:true,...options,windowsHide:true};options.env=getEnv(options);options.stdio=normalizeStdio(options);if(process.platform==='win32'&&path$c.basename(file,'.exe')==='cmd'){// #116
args.unshift('/q');}return{file,args,options,parsed};};const handleOutput=(options,value,error)=>{if(typeof value!=='string'&&!Buffer.isBuffer(value)){// When `execa.sync()` errors, we normalize it to '' to mimic `execa()`
return error===undefined?undefined:'';}if(options.stripFinalNewline){return stripFinalNewline(value);}return value;};const execa=(file,args,options)=>{const parsed=handleArgs(file,args,options);const command=joinCommand(file,args);let spawned;try{spawned=childProcess.spawn(parsed.file,parsed.args,parsed.options);}catch(error){// Ensure the returned error is always both a promise and a child process
const dummySpawned=new childProcess.ChildProcess();const errorPromise=Promise.reject(makeError({error,stdout:'',stderr:'',all:'',command,parsed,timedOut:false,isCanceled:false,killed:false}));return mergePromise(dummySpawned,errorPromise);}const spawnedPromise=getSpawnedPromise(spawned);const timedPromise=setupTimeout(spawned,parsed.options,spawnedPromise);const processDone=setExitHandler(spawned,parsed.options,timedPromise);const context={isCanceled:false};spawned.kill=spawnedKill.bind(null,spawned.kill.bind(spawned));spawned.cancel=spawnedCancel.bind(null,spawned,context);const handlePromise=async()=>{const[{error,code,signal,timedOut},stdoutResult,stderrResult,allResult]=await getSpawnedResult(spawned,parsed.options,processDone);const stdout=handleOutput(parsed.options,stdoutResult);const stderr=handleOutput(parsed.options,stderrResult);const all=handleOutput(parsed.options,allResult);if(error||code!==0||signal!==null){const returnedError=makeError({error,code,signal,stdout,stderr,all,command,parsed,timedOut,isCanceled:context.isCanceled,killed:spawned.killed});if(!parsed.options.reject){return returnedError;}throw returnedError;}return{command,exitCode:0,exitCodeName:'SUCCESS',stdout,stderr,all,failed:false,timedOut:false,isCanceled:false,killed:false};};const handlePromiseOnce=onetime$2(handlePromise);crossSpawn._enoent.hookChildProcess(spawned,parsed.parsed);handleInput(spawned,parsed.options.input);spawned.all=makeAllStream(spawned);return mergePromise(spawned,handlePromiseOnce);};execa$2.exports=execa;execa$2.exports.sync=(file,args,options)=>{const parsed=handleArgs(file,args,options);const command=joinCommand(file,args);validateInputSync(parsed.options);let result;try{result=childProcess.spawnSync(parsed.file,parsed.args,parsed.options);}catch(error){throw makeError({error,stdout:'',stderr:'',all:'',command,parsed,timedOut:false,isCanceled:false,killed:false});}result.stdout=handleOutput(parsed.options,result.stdout,result.error);result.stderr=handleOutput(parsed.options,result.stderr,result.error);if(result.error||result.status!==0||result.signal!==null){const error=makeError({...result,code:result.status,command,parsed,timedOut:result.error&&result.error.code==='ETIMEDOUT',isCanceled:false,killed:result.signal!==null});if(!parsed.options.reject){return error;}throw error;}return{command,exitCode:0,exitCodeName:'SUCCESS',stdout:result.stdout,stderr:result.stderr,failed:false,timedOut:false,isCanceled:false,killed:false};};execa$2.exports.command=(command,options)=>{const[file,...args]=parseCommand(command);return execa(file,args,options);};execa$2.exports.commandSync=(command,options)=>{const[file,...args]=parseCommand(command);return execa.sync(file,args,options);};execa$2.exports.node=function(scriptPath,args){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(args&&!Array.isArray(args)&&typeof args==='object'){options=args;args=[];}const stdio=normalizeStdio.node(options);const{nodePath=process.execPath,nodeOptions=process.execArgv}=options;return execa(nodePath,[...nodeOptions,scriptPath,...(Array.isArray(args)?args:[])],{...options,stdin:undefined,stdout:undefined,stderr:undefined,stdio,shell:false});};var execaExports=execa$2.exports;var execa$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(execaExports);/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */function basePropertyOf$1(object){return function(key){return object==null?undefined:object[key];};}var _basePropertyOf=basePropertyOf$1;var basePropertyOf=_basePropertyOf;/** Used to map Latin Unicode letters to basic Latin letters. */var deburredLetters={// Latin-1 Supplement block.
'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A','\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a','\xc7':'C','\xe7':'c','\xd0':'D','\xf0':'d','\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E','\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e','\xcc':'I','\xcd':'I','\xce':'I','\xcf':'I','\xec':'i','\xed':'i','\xee':'i','\xef':'i','\xd1':'N','\xf1':'n','\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O','\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o','\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U','\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u','\xdd':'Y','\xfd':'y','\xff':'y','\xc6':'Ae','\xe6':'ae','\xde':'Th','\xfe':'th','\xdf':'ss',// Latin Extended-A block.
'\u0100':'A','\u0102':'A','\u0104':'A','\u0101':'a','\u0103':'a','\u0105':'a','\u0106':'C','\u0108':'C','\u010a':'C','\u010c':'C','\u0107':'c','\u0109':'c','\u010b':'c','\u010d':'c','\u010e':'D','\u0110':'D','\u010f':'d','\u0111':'d','\u0112':'E','\u0114':'E','\u0116':'E','\u0118':'E','\u011a':'E','\u0113':'e','\u0115':'e','\u0117':'e','\u0119':'e','\u011b':'e','\u011c':'G','\u011e':'G','\u0120':'G','\u0122':'G','\u011d':'g','\u011f':'g','\u0121':'g','\u0123':'g','\u0124':'H','\u0126':'H','\u0125':'h','\u0127':'h','\u0128':'I','\u012a':'I','\u012c':'I','\u012e':'I','\u0130':'I','\u0129':'i','\u012b':'i','\u012d':'i','\u012f':'i','\u0131':'i','\u0134':'J','\u0135':'j','\u0136':'K','\u0137':'k','\u0138':'k','\u0139':'L','\u013b':'L','\u013d':'L','\u013f':'L','\u0141':'L','\u013a':'l','\u013c':'l','\u013e':'l','\u0140':'l','\u0142':'l','\u0143':'N','\u0145':'N','\u0147':'N','\u014a':'N','\u0144':'n','\u0146':'n','\u0148':'n','\u014b':'n','\u014c':'O','\u014e':'O','\u0150':'O','\u014d':'o','\u014f':'o','\u0151':'o','\u0154':'R','\u0156':'R','\u0158':'R','\u0155':'r','\u0157':'r','\u0159':'r','\u015a':'S','\u015c':'S','\u015e':'S','\u0160':'S','\u015b':'s','\u015d':'s','\u015f':'s','\u0161':'s','\u0162':'T','\u0164':'T','\u0166':'T','\u0163':'t','\u0165':'t','\u0167':'t','\u0168':'U','\u016a':'U','\u016c':'U','\u016e':'U','\u0170':'U','\u0172':'U','\u0169':'u','\u016b':'u','\u016d':'u','\u016f':'u','\u0171':'u','\u0173':'u','\u0174':'W','\u0175':'w','\u0176':'Y','\u0177':'y','\u0178':'Y','\u0179':'Z','\u017b':'Z','\u017d':'Z','\u017a':'z','\u017c':'z','\u017e':'z','\u0132':'IJ','\u0133':'ij','\u0152':'Oe','\u0153':'oe','\u0149':"'n",'\u017f':'s'};/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */var deburrLetter$1=basePropertyOf(deburredLetters);var _deburrLetter=deburrLetter$1;/** Detect free variable `global` from Node.js. */var freeGlobal$1=typeof loadEnv.commonjsGlobal=='object'&&loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.Object===Object&&loadEnv.commonjsGlobal;var _freeGlobal=freeGlobal$1;var freeGlobal=_freeGlobal;/** Detect free variable `self`. */var freeSelf=typeof self=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root$1=freeGlobal||freeSelf||Function('return this')();var _root=root$1;var root=_root;/** Built-in value references. */var Symbol$4=root.Symbol;var _Symbol=Symbol$4;/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */function arrayMap$1(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}var _arrayMap=arrayMap$1;/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */var isArray$2=Array.isArray;var isArray_1=isArray$2;var Symbol$3=_Symbol;/** Used for built-in method references. */var objectProto$1=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty$1=objectProto$1.hasOwnProperty;/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */var nativeObjectToString$1=objectProto$1.toString;/** Built-in value references. */var symToStringTag$1=Symbol$3?Symbol$3.toStringTag:undefined;/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */function getRawTag$1(value){var isOwn=hasOwnProperty$1.call(value,symToStringTag$1),tag=value[symToStringTag$1];try{value[symToStringTag$1]=undefined;var unmasked=true;}catch(e){}var result=nativeObjectToString$1.call(value);if(unmasked){if(isOwn){value[symToStringTag$1]=tag;}else{delete value[symToStringTag$1];}}return result;}var _getRawTag=getRawTag$1;/** Used for built-in method references. */var objectProto=Object.prototype;/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */var nativeObjectToString=objectProto.toString;/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */function objectToString$1(value){return nativeObjectToString.call(value);}var _objectToString=objectToString$1;var Symbol$2=_Symbol,getRawTag=_getRawTag,objectToString=_objectToString;/** `Object#toString` result references. */var nullTag='[object Null]',undefinedTag='[object Undefined]';/** Built-in value references. */var symToStringTag=Symbol$2?Symbol$2.toStringTag:undefined;/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */function baseGetTag$1(value){if(value==null){return value===undefined?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}var _baseGetTag=baseGetTag$1;/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */function isObjectLike$1(value){return value!=null&&typeof value=='object';}var isObjectLike_1=isObjectLike$1;var baseGetTag=_baseGetTag,isObjectLike=isObjectLike_1;/** `Object#toString` result references. */var symbolTag='[object Symbol]';/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */function isSymbol$1(value){return typeof value=='symbol'||isObjectLike(value)&&baseGetTag(value)==symbolTag;}var isSymbol_1=isSymbol$1;var Symbol$1=_Symbol,arrayMap=_arrayMap,isArray$1=isArray_1,isSymbol=isSymbol_1;/** Used as references for various `Number` constants. */var INFINITY=1/0;/** Used to convert symbols to primitives and strings. */var symbolProto=Symbol$1?Symbol$1.prototype:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */function baseToString$1(value){// Exit early for strings to avoid a performance hit in some environments.
if(typeof value=='string'){return value;}if(isArray$1(value)){// Recursively convert values (susceptible to call stack limits).
return arrayMap(value,baseToString$1)+'';}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}var _baseToString=baseToString$1;var baseToString=_baseToString;/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */function toString$1(value){return value==null?'':baseToString(value);}var toString_1=toString$1;var deburrLetter=_deburrLetter,toString=toString_1;/** Used to match Latin Unicode letters (excluding mathematical operators). */var reLatin=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;/** Used to compose unicode character classes. */var rsComboMarksRange='\\u0300-\\u036f',reComboHalfMarksRange='\\ufe20-\\ufe2f',rsComboSymbolsRange='\\u20d0-\\u20ff',rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange;/** Used to compose unicode capture groups. */var rsCombo='['+rsComboRange+']';/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */var reComboMark=RegExp(rsCombo,'g');/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */function deburr(string){string=toString(string);return string&&string.replace(reLatin,deburrLetter).replace(reComboMark,'');}var deburr_1=deburr;var deburr$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(deburr_1);/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */function noop$1(){// No operation performed.
}var noop_1=noop$1;var noop$2=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(noop_1);var pFilter$2={exports:{}};var pMap$2={exports:{}};const pMap$1=(iterable,mapper,options)=>new Promise((resolve,reject)=>{options=Object.assign({concurrency:Infinity},options);if(typeof mapper!=='function'){throw new TypeError('Mapper function is required');}const{concurrency}=options;if(!(typeof concurrency==='number'&&concurrency>=1)){throw new TypeError("Expected `concurrency` to be a number from 1 and up, got `".concat(concurrency,"` (").concat(typeof concurrency,")"));}const ret=[];const iterator=iterable[Symbol.iterator]();let isRejected=false;let isIterableDone=false;let resolvingCount=0;let currentIndex=0;const next=()=>{if(isRejected){return;}const nextItem=iterator.next();const i=currentIndex;currentIndex++;if(nextItem.done){isIterableDone=true;if(resolvingCount===0){resolve(ret);}return;}resolvingCount++;Promise.resolve(nextItem.value).then(element=>mapper(element,i)).then(value=>{ret[i]=value;resolvingCount--;next();},error=>{isRejected=true;reject(error);});};for(let i=0;i<concurrency;i++){next();if(isIterableDone){break;}}});pMap$2.exports=pMap$1;// TODO: Remove this for the next major release
pMap$2.exports.default=pMap$1;var pMapExports=pMap$2.exports;const pMap=pMapExports;const pFilter=async(iterable,filterer,options)=>{const values=await pMap(iterable,(element,index)=>Promise.all([filterer(element,index),element]),options);return values.filter(value=>Boolean(value[0])).map(value=>value[1]);};pFilter$2.exports=pFilter;// TODO: Remove this for the next major release
pFilter$2.exports.default=pFilter;var pFilterExports=pFilter$2.exports;var pFilter$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(pFilterExports);const CLIInitStepCompleted=telemetry.defineTrace({name:"CLI Init Step Completed",version:1,description:"User completed a step in the CLI init flow"});var core$3={};var utils$a={};(function(exports){exports.isInteger=num=>{if(typeof num==='number'){return Number.isInteger(num);}if(typeof num==='string'&&num.trim()!==''){return Number.isInteger(Number(num));}return false;};/**
	 * Find a node of the given type
	 */exports.find=(node,type)=>node.nodes.find(node=>node.type===type);/**
	 * Find a node of the given type
	 */exports.exceedsLimit=function(min,max){let step=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let limit=arguments.length>3?arguments[3]:undefined;if(limit===false)return false;if(!exports.isInteger(min)||!exports.isInteger(max))return false;return(Number(max)-Number(min))/Number(step)>=limit;};/**
	 * Escape the given node with '\\' before node.value
	 */exports.escapeNode=function(block){let n=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let type=arguments.length>2?arguments[2]:undefined;let node=block.nodes[n];if(!node)return;if(type&&node.type===type||node.type==='open'||node.type==='close'){if(node.escaped!==true){node.value='\\'+node.value;node.escaped=true;}}};/**
	 * Returns true if the given brace node should be enclosed in literal braces
	 */exports.encloseBrace=node=>{if(node.type!=='brace')return false;if(node.commas>>0+node.ranges>>0===0){node.invalid=true;return true;}return false;};/**
	 * Returns true if a brace node is invalid.
	 */exports.isInvalidBrace=block=>{if(block.type!=='brace')return false;if(block.invalid===true||block.dollar)return true;if(block.commas>>0+block.ranges>>0===0){block.invalid=true;return true;}if(block.open!==true||block.close!==true){block.invalid=true;return true;}return false;};/**
	 * Returns true if a node is an open or close node
	 */exports.isOpenOrClose=node=>{if(node.type==='open'||node.type==='close'){return true;}return node.open===true||node.close===true;};/**
	 * Reduce an array of text nodes.
	 */exports.reduce=nodes=>nodes.reduce((acc,node)=>{if(node.type==='text')acc.push(node.value);if(node.type==='range')node.type='text';return acc;},[]);/**
	 * Flatten an array
	 */exports.flatten=function(){const result=[];const flat=arr=>{for(let i=0;i<arr.length;i++){let ele=arr[i];Array.isArray(ele)?flat(ele):ele!==void 0&&result.push(ele);}return result;};for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}flat(args);return result;};})(utils$a);const utils$9=utils$a;var stringify$4=function(ast){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let stringify=function(node){let parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let invalidBlock=options.escapeInvalid&&utils$9.isInvalidBrace(parent);let invalidNode=node.invalid===true&&options.escapeInvalid===true;let output='';if(node.value){if((invalidBlock||invalidNode)&&utils$9.isOpenOrClose(node)){return'\\'+node.value;}return node.value;}if(node.value){return node.value;}if(node.nodes){for(let child of node.nodes){output+=stringify(child);}}return output;};return stringify(ast);};/*!
 * is-number <https://github.com/jonschlinkert/is-number>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Released under the MIT License.
 */var isNumber$2=function(num){if(typeof num==='number'){return num-num===0;}if(typeof num==='string'&&num.trim()!==''){return Number.isFinite?Number.isFinite(+num):isFinite(+num);}return false;};/*!
 * to-regex-range <https://github.com/micromatch/to-regex-range>
 *
 * Copyright (c) 2015-present, Jon Schlinkert.
 * Released under the MIT License.
 */const isNumber$1=isNumber$2;const toRegexRange$1=(min,max,options)=>{if(isNumber$1(min)===false){throw new TypeError('toRegexRange: expected the first argument to be a number');}if(max===void 0||min===max){return String(min);}if(isNumber$1(max)===false){throw new TypeError('toRegexRange: expected the second argument to be a number.');}let opts={relaxZeros:true,...options};if(typeof opts.strictZeros==='boolean'){opts.relaxZeros=opts.strictZeros===false;}let relax=String(opts.relaxZeros);let shorthand=String(opts.shorthand);let capture=String(opts.capture);let wrap=String(opts.wrap);let cacheKey=min+':'+max+'='+relax+shorthand+capture+wrap;if(toRegexRange$1.cache.hasOwnProperty(cacheKey)){return toRegexRange$1.cache[cacheKey].result;}let a=Math.min(min,max);let b=Math.max(min,max);if(Math.abs(a-b)===1){let result=min+'|'+max;if(opts.capture){return"(".concat(result,")");}if(opts.wrap===false){return result;}return"(?:".concat(result,")");}let isPadded=hasPadding(min)||hasPadding(max);let state={min,max,a,b};let positives=[];let negatives=[];if(isPadded){state.isPadded=isPadded;state.maxLen=String(state.max).length;}if(a<0){let newMin=b<0?Math.abs(b):1;negatives=splitToPatterns(newMin,Math.abs(a),state,opts);a=state.a=0;}if(b>=0){positives=splitToPatterns(a,b,state,opts);}state.negatives=negatives;state.positives=positives;state.result=collatePatterns(negatives,positives);if(opts.capture===true){state.result="(".concat(state.result,")");}else if(opts.wrap!==false&&positives.length+negatives.length>1){state.result="(?:".concat(state.result,")");}toRegexRange$1.cache[cacheKey]=state;return state.result;};function collatePatterns(neg,pos,options){let onlyNegative=filterPatterns(neg,pos,'-',false)||[];let onlyPositive=filterPatterns(pos,neg,'',false)||[];let intersected=filterPatterns(neg,pos,'-?',true)||[];let subpatterns=onlyNegative.concat(intersected).concat(onlyPositive);return subpatterns.join('|');}function splitToRanges(min,max){let nines=1;let zeros=1;let stop=countNines(min,nines);let stops=new Set([max]);while(min<=stop&&stop<=max){stops.add(stop);nines+=1;stop=countNines(min,nines);}stop=countZeros(max+1,zeros)-1;while(min<stop&&stop<=max){stops.add(stop);zeros+=1;stop=countZeros(max+1,zeros)-1;}stops=[...stops];stops.sort(compare);return stops;}/**
 * Convert a range to a regex pattern
 * @param {Number} `start`
 * @param {Number} `stop`
 * @return {String}
 */function rangeToPattern(start,stop,options){if(start===stop){return{pattern:start,count:[],digits:0};}let zipped=zip$2(start,stop);let digits=zipped.length;let pattern='';let count=0;for(let i=0;i<digits;i++){let[startDigit,stopDigit]=zipped[i];if(startDigit===stopDigit){pattern+=startDigit;}else if(startDigit!=='0'||stopDigit!=='9'){pattern+=toCharacterClass(startDigit,stopDigit);}else{count++;}}if(count){pattern+=options.shorthand===true?'\\d':'[0-9]';}return{pattern,count:[count],digits};}function splitToPatterns(min,max,tok,options){let ranges=splitToRanges(min,max);let tokens=[];let start=min;let prev;for(let i=0;i<ranges.length;i++){let max=ranges[i];let obj=rangeToPattern(String(start),String(max),options);let zeros='';if(!tok.isPadded&&prev&&prev.pattern===obj.pattern){if(prev.count.length>1){prev.count.pop();}prev.count.push(obj.count[0]);prev.string=prev.pattern+toQuantifier(prev.count);start=max+1;continue;}if(tok.isPadded){zeros=padZeros(max,tok,options);}obj.string=zeros+obj.pattern+toQuantifier(obj.count);tokens.push(obj);start=max+1;prev=obj;}return tokens;}function filterPatterns(arr,comparison,prefix,intersection,options){let result=[];for(let ele of arr){let{string}=ele;// only push if _both_ are negative...
if(!intersection&&!contains(comparison,'string',string)){result.push(prefix+string);}// or _both_ are positive
if(intersection&&contains(comparison,'string',string)){result.push(prefix+string);}}return result;}/**
 * Zip strings
 */function zip$2(a,b){let arr=[];for(let i=0;i<a.length;i++)arr.push([a[i],b[i]]);return arr;}function compare(a,b){return a>b?1:b>a?-1:0;}function contains(arr,key,val){return arr.some(ele=>ele[key]===val);}function countNines(min,len){return Number(String(min).slice(0,-len)+'9'.repeat(len));}function countZeros(integer,zeros){return integer-integer%Math.pow(10,zeros);}function toQuantifier(digits){let[start=0,stop='']=digits;if(stop||start>1){return"{".concat(start+(stop?','+stop:''),"}");}return'';}function toCharacterClass(a,b,options){return"[".concat(a).concat(b-a===1?'':'-').concat(b,"]");}function hasPadding(str){return /^-?(0+)\d/.test(str);}function padZeros(value,tok,options){if(!tok.isPadded){return value;}let diff=Math.abs(tok.maxLen-String(value).length);let relax=options.relaxZeros!==false;switch(diff){case 0:return'';case 1:return relax?'0?':'0';case 2:return relax?'0{0,2}':'00';default:{return relax?"0{0,".concat(diff,"}"):"0{".concat(diff,"}");}}}/**
 * Cache
 */toRegexRange$1.cache={};toRegexRange$1.clearCache=()=>toRegexRange$1.cache={};/**
 * Expose `toRegexRange`
 */var toRegexRange_1=toRegexRange$1;/*!
 * fill-range <https://github.com/jonschlinkert/fill-range>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Licensed under the MIT License.
 */const util$3=require$$0__default$5.default;const toRegexRange=toRegexRange_1;const isObject$5=val=>val!==null&&typeof val==='object'&&!Array.isArray(val);const transform=toNumber=>{return value=>toNumber===true?Number(value):String(value);};const isValidValue=value=>{return typeof value==='number'||typeof value==='string'&&value!=='';};const isNumber=num=>Number.isInteger(+num);const zeros=input=>{let value="".concat(input);let index=-1;if(value[0]==='-')value=value.slice(1);if(value==='0')return false;while(value[++index]==='0');return index>0;};const stringify$3=(start,end,options)=>{if(typeof start==='string'||typeof end==='string'){return true;}return options.stringify===true;};const pad=(input,maxLength,toNumber)=>{if(maxLength>0){let dash=input[0]==='-'?'-':'';if(dash)input=input.slice(1);input=dash+input.padStart(dash?maxLength-1:maxLength,'0');}if(toNumber===false){return String(input);}return input;};const toMaxLen=(input,maxLength)=>{let negative=input[0]==='-'?'-':'';if(negative){input=input.slice(1);maxLength--;}while(input.length<maxLength)input='0'+input;return negative?'-'+input:input;};const toSequence=(parts,options)=>{parts.negatives.sort((a,b)=>a<b?-1:a>b?1:0);parts.positives.sort((a,b)=>a<b?-1:a>b?1:0);let prefix=options.capture?'':'?:';let positives='';let negatives='';let result;if(parts.positives.length){positives=parts.positives.join('|');}if(parts.negatives.length){negatives="-(".concat(prefix).concat(parts.negatives.join('|'),")");}if(positives&&negatives){result="".concat(positives,"|").concat(negatives);}else{result=positives||negatives;}if(options.wrap){return"(".concat(prefix).concat(result,")");}return result;};const toRange=(a,b,isNumbers,options)=>{if(isNumbers){return toRegexRange(a,b,{wrap:false,...options});}let start=String.fromCharCode(a);if(a===b)return start;let stop=String.fromCharCode(b);return"[".concat(start,"-").concat(stop,"]");};const toRegex=(start,end,options)=>{if(Array.isArray(start)){let wrap=options.wrap===true;let prefix=options.capture?'':'?:';return wrap?"(".concat(prefix).concat(start.join('|'),")"):start.join('|');}return toRegexRange(start,end,options);};const rangeError=function(){return new RangeError('Invalid range arguments: '+util$3.inspect(...arguments));};const invalidRange=(start,end,options)=>{if(options.strictRanges===true)throw rangeError([start,end]);return[];};const invalidStep=(step,options)=>{if(options.strictRanges===true){throw new TypeError("Expected step \"".concat(step,"\" to be a number"));}return[];};const fillNumbers=function(start,end){let step=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};let a=Number(start);let b=Number(end);if(!Number.isInteger(a)||!Number.isInteger(b)){if(options.strictRanges===true)throw rangeError([start,end]);return[];}// fix negative zero
if(a===0)a=0;if(b===0)b=0;let descending=a>b;let startString=String(start);let endString=String(end);let stepString=String(step);step=Math.max(Math.abs(step),1);let padded=zeros(startString)||zeros(endString)||zeros(stepString);let maxLen=padded?Math.max(startString.length,endString.length,stepString.length):0;let toNumber=padded===false&&stringify$3(start,end,options)===false;let format=options.transform||transform(toNumber);if(options.toRegex&&step===1){return toRange(toMaxLen(start,maxLen),toMaxLen(end,maxLen),true,options);}let parts={negatives:[],positives:[]};let push=num=>parts[num<0?'negatives':'positives'].push(Math.abs(num));let range=[];let index=0;while(descending?a>=b:a<=b){if(options.toRegex===true&&step>1){push(a);}else{range.push(pad(format(a,index),maxLen,toNumber));}a=descending?a-step:a+step;index++;}if(options.toRegex===true){return step>1?toSequence(parts,options):toRegex(range,null,{wrap:false,...options});}return range;};const fillLetters=function(start,end){let step=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(!isNumber(start)&&start.length>1||!isNumber(end)&&end.length>1){return invalidRange(start,end,options);}let format=options.transform||(val=>String.fromCharCode(val));let a="".concat(start).charCodeAt(0);let b="".concat(end).charCodeAt(0);let descending=a>b;let min=Math.min(a,b);let max=Math.max(a,b);if(options.toRegex&&step===1){return toRange(min,max,false,options);}let range=[];let index=0;while(descending?a>=b:a<=b){range.push(format(a,index));a=descending?a-step:a+step;index++;}if(options.toRegex===true){return toRegex(range,null,{wrap:false,options});}return range;};const fill$2=function(start,end,step){let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(end==null&&isValidValue(start)){return[start];}if(!isValidValue(start)||!isValidValue(end)){return invalidRange(start,end,options);}if(typeof step==='function'){return fill$2(start,end,1,{transform:step});}if(isObject$5(step)){return fill$2(start,end,0,step);}let opts={...options};if(opts.capture===true)opts.wrap=true;step=step||opts.step||1;if(!isNumber(step)){if(step!=null&&!isObject$5(step))return invalidStep(step,opts);return fill$2(start,end,1,step);}if(isNumber(start)&&isNumber(end)){return fillNumbers(start,end,step,opts);}return fillLetters(start,end,Math.max(Math.abs(step),1),opts);};var fillRange=fill$2;const fill$1=fillRange;const utils$8=utils$a;const compile$1=function(ast){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let walk=function(node){let parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let invalidBlock=utils$8.isInvalidBrace(parent);let invalidNode=node.invalid===true&&options.escapeInvalid===true;let invalid=invalidBlock===true||invalidNode===true;let prefix=options.escapeInvalid===true?'\\':'';let output='';if(node.isOpen===true){return prefix+node.value;}if(node.isClose===true){return prefix+node.value;}if(node.type==='open'){return invalid?prefix+node.value:'(';}if(node.type==='close'){return invalid?prefix+node.value:')';}if(node.type==='comma'){return node.prev.type==='comma'?'':invalid?node.value:'|';}if(node.value){return node.value;}if(node.nodes&&node.ranges>0){let args=utils$8.reduce(node.nodes);let range=fill$1(...args,{...options,wrap:false,toRegex:true});if(range.length!==0){return args.length>1&&range.length>1?"(".concat(range,")"):range;}}if(node.nodes){for(let child of node.nodes){output+=walk(child,node);}}return output;};return walk(ast);};var compile_1=compile$1;const fill=fillRange;const stringify$2=stringify$4;const utils$7=utils$a;const append=function(){let queue=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let stash=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';let enclose=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let result=[];queue=[].concat(queue);stash=[].concat(stash);if(!stash.length)return queue;if(!queue.length){return enclose?utils$7.flatten(stash).map(ele=>"{".concat(ele,"}")):stash;}for(let item of queue){if(Array.isArray(item)){for(let value of item){result.push(append(value,stash,enclose));}}else{for(let ele of stash){if(enclose===true&&typeof ele==='string')ele="{".concat(ele,"}");result.push(Array.isArray(ele)?append(item,ele,enclose):item+ele);}}}return utils$7.flatten(result);};const expand$3=function(ast){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let rangeLimit=options.rangeLimit===void 0?1000:options.rangeLimit;let walk=function(node){let parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};node.queue=[];let p=parent;let q=parent.queue;while(p.type!=='brace'&&p.type!=='root'&&p.parent){p=p.parent;q=p.queue;}if(node.invalid||node.dollar){q.push(append(q.pop(),stringify$2(node,options)));return;}if(node.type==='brace'&&node.invalid!==true&&node.nodes.length===2){q.push(append(q.pop(),['{}']));return;}if(node.nodes&&node.ranges>0){let args=utils$7.reduce(node.nodes);if(utils$7.exceedsLimit(...args,options.step,rangeLimit)){throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');}let range=fill(...args,options);if(range.length===0){range=stringify$2(node,options);}q.push(append(q.pop(),range));node.nodes=[];return;}let enclose=utils$7.encloseBrace(node);let queue=node.queue;let block=node;while(block.type!=='brace'&&block.type!=='root'&&block.parent){block=block.parent;queue=block.queue;}for(let i=0;i<node.nodes.length;i++){let child=node.nodes[i];if(child.type==='comma'&&node.type==='brace'){if(i===1)queue.push('');queue.push('');continue;}if(child.type==='close'){q.push(append(q.pop(),queue,enclose));continue;}if(child.value&&child.type!=='open'){queue.push(append(queue.pop(),child.value));continue;}if(child.nodes){walk(child,node);}}return queue;};return utils$7.flatten(walk(ast));};var expand_1=expand$3;var constants$3={MAX_LENGTH:1024*64,// Digits
CHAR_0:'0',/* 0 */CHAR_9:'9',/* 9 */ // Alphabet chars.
CHAR_UPPERCASE_A:'A',/* A */CHAR_LOWERCASE_A:'a',/* a */CHAR_UPPERCASE_Z:'Z',/* Z */CHAR_LOWERCASE_Z:'z',/* z */CHAR_LEFT_PARENTHESES:'(',/* ( */CHAR_RIGHT_PARENTHESES:')',/* ) */CHAR_ASTERISK:'*',/* * */ // Non-alphabetic chars.
CHAR_AMPERSAND:'&',/* & */CHAR_AT:'@',/* @ */CHAR_BACKSLASH:'\\',/* \ */CHAR_BACKTICK:'`',/* ` */CHAR_CARRIAGE_RETURN:'\r',/* \r */CHAR_CIRCUMFLEX_ACCENT:'^',/* ^ */CHAR_COLON:':',/* : */CHAR_COMMA:',',/* , */CHAR_DOLLAR:'$',/* . */CHAR_DOT:'.',/* . */CHAR_DOUBLE_QUOTE:'"',/* " */CHAR_EQUAL:'=',/* = */CHAR_EXCLAMATION_MARK:'!',/* ! */CHAR_FORM_FEED:'\f',/* \f */CHAR_FORWARD_SLASH:'/',/* / */CHAR_HASH:'#',/* # */CHAR_HYPHEN_MINUS:'-',/* - */CHAR_LEFT_ANGLE_BRACKET:'<',/* < */CHAR_LEFT_CURLY_BRACE:'{',/* { */CHAR_LEFT_SQUARE_BRACKET:'[',/* [ */CHAR_LINE_FEED:'\n',/* \n */CHAR_NO_BREAK_SPACE:'\u00A0',/* \u00A0 */CHAR_PERCENT:'%',/* % */CHAR_PLUS:'+',/* + */CHAR_QUESTION_MARK:'?',/* ? */CHAR_RIGHT_ANGLE_BRACKET:'>',/* > */CHAR_RIGHT_CURLY_BRACE:'}',/* } */CHAR_RIGHT_SQUARE_BRACKET:']',/* ] */CHAR_SEMICOLON:';',/* ; */CHAR_SINGLE_QUOTE:'\'',/* ' */CHAR_SPACE:' ',/*   */CHAR_TAB:'\t',/* \t */CHAR_UNDERSCORE:'_',/* _ */CHAR_VERTICAL_LINE:'|',/* | */CHAR_ZERO_WIDTH_NOBREAK_SPACE:'\uFEFF'/* \uFEFF */};const stringify$1=stringify$4;/**
 * Constants
 */const{MAX_LENGTH:MAX_LENGTH$1,CHAR_BACKSLASH,/* \ */CHAR_BACKTICK,/* ` */CHAR_COMMA:CHAR_COMMA$2,/* , */CHAR_DOT:CHAR_DOT$1,/* . */CHAR_LEFT_PARENTHESES:CHAR_LEFT_PARENTHESES$1,/* ( */CHAR_RIGHT_PARENTHESES:CHAR_RIGHT_PARENTHESES$1,/* ) */CHAR_LEFT_CURLY_BRACE:CHAR_LEFT_CURLY_BRACE$1,/* { */CHAR_RIGHT_CURLY_BRACE:CHAR_RIGHT_CURLY_BRACE$1,/* } */CHAR_LEFT_SQUARE_BRACKET:CHAR_LEFT_SQUARE_BRACKET$2,/* [ */CHAR_RIGHT_SQUARE_BRACKET:CHAR_RIGHT_SQUARE_BRACKET$2,/* ] */CHAR_DOUBLE_QUOTE:CHAR_DOUBLE_QUOTE$1,/* " */CHAR_SINGLE_QUOTE:CHAR_SINGLE_QUOTE$1,/* ' */CHAR_NO_BREAK_SPACE,CHAR_ZERO_WIDTH_NOBREAK_SPACE}=constants$3;/**
 * parse
 */const parse$7=function(input){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof input!=='string'){throw new TypeError('Expected a string');}let opts=options||{};let max=typeof opts.maxLength==='number'?Math.min(MAX_LENGTH$1,opts.maxLength):MAX_LENGTH$1;if(input.length>max){throw new SyntaxError("Input length (".concat(input.length,"), exceeds max characters (").concat(max,")"));}let ast={type:'root',input,nodes:[]};let stack=[ast];let block=ast;let prev=ast;let brackets=0;let length=input.length;let index=0;let depth=0;let value;/**
   * Helpers
   */const advance=()=>input[index++];const push=node=>{if(node.type==='text'&&prev.type==='dot'){prev.type='text';}if(prev&&prev.type==='text'&&node.type==='text'){prev.value+=node.value;return;}block.nodes.push(node);node.parent=block;node.prev=prev;prev=node;return node;};push({type:'bos'});while(index<length){block=stack[stack.length-1];value=advance();/**
     * Invalid chars
     */if(value===CHAR_ZERO_WIDTH_NOBREAK_SPACE||value===CHAR_NO_BREAK_SPACE){continue;}/**
     * Escaped chars
     */if(value===CHAR_BACKSLASH){push({type:'text',value:(options.keepEscaping?value:'')+advance()});continue;}/**
     * Right square bracket (literal): ']'
     */if(value===CHAR_RIGHT_SQUARE_BRACKET$2){push({type:'text',value:'\\'+value});continue;}/**
     * Left square bracket: '['
     */if(value===CHAR_LEFT_SQUARE_BRACKET$2){brackets++;let next;while(index<length&&(next=advance())){value+=next;if(next===CHAR_LEFT_SQUARE_BRACKET$2){brackets++;continue;}if(next===CHAR_BACKSLASH){value+=advance();continue;}if(next===CHAR_RIGHT_SQUARE_BRACKET$2){brackets--;if(brackets===0){break;}}}push({type:'text',value});continue;}/**
     * Parentheses
     */if(value===CHAR_LEFT_PARENTHESES$1){block=push({type:'paren',nodes:[]});stack.push(block);push({type:'text',value});continue;}if(value===CHAR_RIGHT_PARENTHESES$1){if(block.type!=='paren'){push({type:'text',value});continue;}block=stack.pop();push({type:'text',value});block=stack[stack.length-1];continue;}/**
     * Quotes: '|"|`
     */if(value===CHAR_DOUBLE_QUOTE$1||value===CHAR_SINGLE_QUOTE$1||value===CHAR_BACKTICK){let open=value;let next;if(options.keepQuotes!==true){value='';}while(index<length&&(next=advance())){if(next===CHAR_BACKSLASH){value+=next+advance();continue;}if(next===open){if(options.keepQuotes===true)value+=next;break;}value+=next;}push({type:'text',value});continue;}/**
     * Left curly brace: '{'
     */if(value===CHAR_LEFT_CURLY_BRACE$1){depth++;let dollar=prev.value&&prev.value.slice(-1)==='$'||block.dollar===true;let brace={type:'brace',open:true,close:false,dollar,depth,commas:0,ranges:0,nodes:[]};block=push(brace);stack.push(block);push({type:'open',value});continue;}/**
     * Right curly brace: '}'
     */if(value===CHAR_RIGHT_CURLY_BRACE$1){if(block.type!=='brace'){push({type:'text',value});continue;}let type='close';block=stack.pop();block.close=true;push({type,value});depth--;block=stack[stack.length-1];continue;}/**
     * Comma: ','
     */if(value===CHAR_COMMA$2&&depth>0){if(block.ranges>0){block.ranges=0;let open=block.nodes.shift();block.nodes=[open,{type:'text',value:stringify$1(block)}];}push({type:'comma',value});block.commas++;continue;}/**
     * Dot: '.'
     */if(value===CHAR_DOT$1&&depth>0&&block.commas===0){let siblings=block.nodes;if(depth===0||siblings.length===0){push({type:'text',value});continue;}if(prev.type==='dot'){block.range=[];prev.value+=value;prev.type='range';if(block.nodes.length!==3&&block.nodes.length!==5){block.invalid=true;block.ranges=0;prev.type='text';continue;}block.ranges++;block.args=[];continue;}if(prev.type==='range'){siblings.pop();let before=siblings[siblings.length-1];before.value+=prev.value+value;prev=before;block.ranges--;continue;}push({type:'dot',value});continue;}/**
     * Text
     */push({type:'text',value});}// Mark imbalanced braces and brackets as invalid
do{block=stack.pop();if(block.type!=='root'){block.nodes.forEach(node=>{if(!node.nodes){if(node.type==='open')node.isOpen=true;if(node.type==='close')node.isClose=true;if(!node.nodes)node.type='text';node.invalid=true;}});// get the location of the block on parent.nodes (block's siblings)
let parent=stack[stack.length-1];let index=parent.nodes.indexOf(block);// replace the (invalid) block with it's nodes
parent.nodes.splice(index,1,...block.nodes);}}while(stack.length>0);push({type:'eos'});return ast;};var parse_1$2=parse$7;const stringify=stringify$4;const compile=compile_1;const expand$2=expand_1;const parse$6=parse_1$2;/**
 * Expand the given pattern or create a regex-compatible string.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']
 * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']
 * ```
 * @param {String} `str`
 * @param {Object} `options`
 * @return {String}
 * @api public
 */const braces$1=function(input){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let output=[];if(Array.isArray(input)){for(let pattern of input){let result=braces$1.create(pattern,options);if(Array.isArray(result)){output.push(...result);}else{output.push(result);}}}else{output=[].concat(braces$1.create(input,options));}if(options&&options.expand===true&&options.nodupes===true){output=[...new Set(output)];}return output;};/**
 * Parse the given `str` with the given `options`.
 *
 * ```js
 * // braces.parse(pattern, [, options]);
 * const ast = braces.parse('a/{b,c}/d');
 * console.log(ast);
 * ```
 * @param {String} pattern Brace pattern to parse
 * @param {Object} options
 * @return {Object} Returns an AST
 * @api public
 */braces$1.parse=function(input){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return parse$6(input,options);};/**
 * Creates a braces string from an AST, or an AST node.
 *
 * ```js
 * const braces = require('braces');
 * let ast = braces.parse('foo/{a,b}/bar');
 * console.log(stringify(ast.nodes[2])); //=> '{a,b}'
 * ```
 * @param {String} `input` Brace pattern or AST.
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */braces$1.stringify=function(input){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof input==='string'){return stringify(braces$1.parse(input,options),options);}return stringify(input,options);};/**
 * Compiles a brace pattern into a regex-compatible, optimized string.
 * This method is called by the main [braces](#braces) function by default.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.compile('a/{b,c}/d'));
 * //=> ['a/(b|c)/d']
 * ```
 * @param {String} `input` Brace pattern or AST.
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */braces$1.compile=function(input){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof input==='string'){input=braces$1.parse(input,options);}return compile(input,options);};/**
 * Expands a brace pattern into an array. This method is called by the
 * main [braces](#braces) function when `options.expand` is true. Before
 * using this method it's recommended that you read the [performance notes](#performance))
 * and advantages of using [.compile](#compile) instead.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.expand('a/{b,c}/d'));
 * //=> ['a/b/d', 'a/c/d'];
 * ```
 * @param {String} `pattern` Brace pattern
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */braces$1.expand=function(input){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof input==='string'){input=braces$1.parse(input,options);}let result=expand$2(input,options);// filter out empty strings if specified
if(options.noempty===true){result=result.filter(Boolean);}// filter out duplicates if specified
if(options.nodupes===true){result=[...new Set(result)];}return result;};/**
 * Processes a brace pattern and returns either an expanded array
 * (if `options.expand` is true), a highly optimized regex-compatible string.
 * This method is called by the main [braces](#braces) function.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))
 * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'
 * ```
 * @param {String} `pattern` Brace pattern
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */braces$1.create=function(input){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(input===''||input.length<3){return[input];}return options.expand!==true?braces$1.compile(input,options):braces$1.expand(input,options);};/**
 * Expose "braces"
 */var braces_1=braces$1;var utils$6={};const path$b=path__default.default;const WIN_SLASH='\\\\/';const WIN_NO_SLASH="[^".concat(WIN_SLASH,"]");/**
 * Posix glob regex
 */const DOT_LITERAL='\\.';const PLUS_LITERAL='\\+';const QMARK_LITERAL='\\?';const SLASH_LITERAL='\\/';const ONE_CHAR='(?=.)';const QMARK='[^/]';const END_ANCHOR="(?:".concat(SLASH_LITERAL,"|$)");const START_ANCHOR="(?:^|".concat(SLASH_LITERAL,")");const DOTS_SLASH="".concat(DOT_LITERAL,"{1,2}").concat(END_ANCHOR);const NO_DOT="(?!".concat(DOT_LITERAL,")");const NO_DOTS="(?!".concat(START_ANCHOR).concat(DOTS_SLASH,")");const NO_DOT_SLASH="(?!".concat(DOT_LITERAL,"{0,1}").concat(END_ANCHOR,")");const NO_DOTS_SLASH="(?!".concat(DOTS_SLASH,")");const QMARK_NO_DOT="[^.".concat(SLASH_LITERAL,"]");const STAR="".concat(QMARK,"*?");const POSIX_CHARS={DOT_LITERAL,PLUS_LITERAL,QMARK_LITERAL,SLASH_LITERAL,ONE_CHAR,QMARK,END_ANCHOR,DOTS_SLASH,NO_DOT,NO_DOTS,NO_DOT_SLASH,NO_DOTS_SLASH,QMARK_NO_DOT,STAR,START_ANCHOR};/**
 * Windows glob regex
 */const WINDOWS_CHARS={...POSIX_CHARS,SLASH_LITERAL:"[".concat(WIN_SLASH,"]"),QMARK:WIN_NO_SLASH,STAR:"".concat(WIN_NO_SLASH,"*?"),DOTS_SLASH:"".concat(DOT_LITERAL,"{1,2}(?:[").concat(WIN_SLASH,"]|$)"),NO_DOT:"(?!".concat(DOT_LITERAL,")"),NO_DOTS:"(?!(?:^|[".concat(WIN_SLASH,"])").concat(DOT_LITERAL,"{1,2}(?:[").concat(WIN_SLASH,"]|$))"),NO_DOT_SLASH:"(?!".concat(DOT_LITERAL,"{0,1}(?:[").concat(WIN_SLASH,"]|$))"),NO_DOTS_SLASH:"(?!".concat(DOT_LITERAL,"{1,2}(?:[").concat(WIN_SLASH,"]|$))"),QMARK_NO_DOT:"[^.".concat(WIN_SLASH,"]"),START_ANCHOR:"(?:^|[".concat(WIN_SLASH,"])"),END_ANCHOR:"(?:[".concat(WIN_SLASH,"]|$)")};/**
 * POSIX Bracket Regex
 */const POSIX_REGEX_SOURCE$1={alnum:'a-zA-Z0-9',alpha:'a-zA-Z',ascii:'\\x00-\\x7F',blank:' \\t',cntrl:'\\x00-\\x1F\\x7F',digit:'0-9',graph:'\\x21-\\x7E',lower:'a-z',print:'\\x20-\\x7E ',punct:'\\-!"#$%&\'()\\*+,./:;<=>?@[\\]^_`{|}~',space:' \\t\\r\\n\\v\\f',upper:'A-Z',word:'A-Za-z0-9_',xdigit:'A-Fa-f0-9'};var constants$2={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:POSIX_REGEX_SOURCE$1,// regular expressions
REGEX_BACKSLASH:/\\(?![*+?^${}(|)[\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\].,$*+?^{}()|\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\?)((\W)(\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\[.*?[^\\]\]|\\(?=.))/g,// Replace globs with equivalent patterns to reduce parsing time.
REPLACEMENTS:{'***':'*','**/**':'**','**/**/**':'**'},// Digits
CHAR_0:48,/* 0 */CHAR_9:57,/* 9 */ // Alphabet chars.
CHAR_UPPERCASE_A:65,/* A */CHAR_LOWERCASE_A:97,/* a */CHAR_UPPERCASE_Z:90,/* Z */CHAR_LOWERCASE_Z:122,/* z */CHAR_LEFT_PARENTHESES:40,/* ( */CHAR_RIGHT_PARENTHESES:41,/* ) */CHAR_ASTERISK:42,/* * */ // Non-alphabetic chars.
CHAR_AMPERSAND:38,/* & */CHAR_AT:64,/* @ */CHAR_BACKWARD_SLASH:92,/* \ */CHAR_CARRIAGE_RETURN:13,/* \r */CHAR_CIRCUMFLEX_ACCENT:94,/* ^ */CHAR_COLON:58,/* : */CHAR_COMMA:44,/* , */CHAR_DOT:46,/* . */CHAR_DOUBLE_QUOTE:34,/* " */CHAR_EQUAL:61,/* = */CHAR_EXCLAMATION_MARK:33,/* ! */CHAR_FORM_FEED:12,/* \f */CHAR_FORWARD_SLASH:47,/* / */CHAR_GRAVE_ACCENT:96,/* ` */CHAR_HASH:35,/* # */CHAR_HYPHEN_MINUS:45,/* - */CHAR_LEFT_ANGLE_BRACKET:60,/* < */CHAR_LEFT_CURLY_BRACE:123,/* { */CHAR_LEFT_SQUARE_BRACKET:91,/* [ */CHAR_LINE_FEED:10,/* \n */CHAR_NO_BREAK_SPACE:160,/* \u00A0 */CHAR_PERCENT:37,/* % */CHAR_PLUS:43,/* + */CHAR_QUESTION_MARK:63,/* ? */CHAR_RIGHT_ANGLE_BRACKET:62,/* > */CHAR_RIGHT_CURLY_BRACE:125,/* } */CHAR_RIGHT_SQUARE_BRACKET:93,/* ] */CHAR_SEMICOLON:59,/* ; */CHAR_SINGLE_QUOTE:39,/* ' */CHAR_SPACE:32,/*   */CHAR_TAB:9,/* \t */CHAR_UNDERSCORE:95,/* _ */CHAR_VERTICAL_LINE:124,/* | */CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,/* \uFEFF */SEP:path$b.sep,/**
   * Create EXTGLOB_CHARS
   */extglobChars(chars){return{'!':{type:'negate',open:'(?:(?!(?:',close:"))".concat(chars.STAR,")")},'?':{type:'qmark',open:'(?:',close:')?'},'+':{type:'plus',open:'(?:',close:')+'},'*':{type:'star',open:'(?:',close:')*'},'@':{type:'at',open:'(?:',close:')'}};},/**
   * Create GLOB_CHARS
   */globChars(win32){return win32===true?WINDOWS_CHARS:POSIX_CHARS;}};(function(exports){const path=path__default.default;const win32=process.platform==='win32';const{REGEX_BACKSLASH,REGEX_REMOVE_BACKSLASH,REGEX_SPECIAL_CHARS,REGEX_SPECIAL_CHARS_GLOBAL}=constants$2;exports.isObject=val=>val!==null&&typeof val==='object'&&!Array.isArray(val);exports.hasRegexChars=str=>REGEX_SPECIAL_CHARS.test(str);exports.isRegexChar=str=>str.length===1&&exports.hasRegexChars(str);exports.escapeRegex=str=>str.replace(REGEX_SPECIAL_CHARS_GLOBAL,'\\$1');exports.toPosixSlashes=str=>str.replace(REGEX_BACKSLASH,'/');exports.removeBackslashes=str=>{return str.replace(REGEX_REMOVE_BACKSLASH,match=>{return match==='\\'?'':match;});};exports.supportsLookbehinds=()=>{const segs=process.version.slice(1).split('.').map(Number);if(segs.length===3&&segs[0]>=9||segs[0]===8&&segs[1]>=10){return true;}return false;};exports.isWindows=options=>{if(options&&typeof options.windows==='boolean'){return options.windows;}return win32===true||path.sep==='\\';};exports.escapeLast=(input,char,lastIdx)=>{const idx=input.lastIndexOf(char,lastIdx);if(idx===-1)return input;if(input[idx-1]==='\\')return exports.escapeLast(input,char,idx-1);return"".concat(input.slice(0,idx),"\\").concat(input.slice(idx));};exports.removePrefix=function(input){let state=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let output=input;if(output.startsWith('./')){output=output.slice(2);state.prefix='./';}return output;};exports.wrapOutput=function(input){let state=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const prepend=options.contains?'':'^';const append=options.contains?'':'$';let output="".concat(prepend,"(?:").concat(input,")").concat(append);if(state.negated===true){output="(?:^(?!".concat(output,").*$)");}return output;};})(utils$6);const utils$5=utils$6;const{CHAR_ASTERISK:CHAR_ASTERISK$1,/* * */CHAR_AT,/* @ */CHAR_BACKWARD_SLASH,/* \ */CHAR_COMMA:CHAR_COMMA$1,/* , */CHAR_DOT,/* . */CHAR_EXCLAMATION_MARK,/* ! */CHAR_FORWARD_SLASH,/* / */CHAR_LEFT_CURLY_BRACE,/* { */CHAR_LEFT_PARENTHESES,/* ( */CHAR_LEFT_SQUARE_BRACKET:CHAR_LEFT_SQUARE_BRACKET$1,/* [ */CHAR_PLUS,/* + */CHAR_QUESTION_MARK,/* ? */CHAR_RIGHT_CURLY_BRACE,/* } */CHAR_RIGHT_PARENTHESES,/* ) */CHAR_RIGHT_SQUARE_BRACKET:CHAR_RIGHT_SQUARE_BRACKET$1/* ] */}=constants$2;const isPathSeparator=code=>{return code===CHAR_FORWARD_SLASH||code===CHAR_BACKWARD_SLASH;};const depth=token=>{if(token.isPrefix!==true){token.depth=token.isGlobstar?Infinity:1;}};/**
 * Quickly scans a glob pattern and returns an object with a handful of
 * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),
 * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not
 * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).
 *
 * ```js
 * const pm = require('picomatch');
 * console.log(pm.scan('foo/bar/*.js'));
 * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }
 * ```
 * @param {String} `str`
 * @param {Object} `options`
 * @return {Object} Returns an object with tokens and regex source string.
 * @api public
 */const scan$2=(input,options)=>{const opts=options||{};const length=input.length-1;const scanToEnd=opts.parts===true||opts.scanToEnd===true;const slashes=[];const tokens=[];const parts=[];let str=input;let index=-1;let start=0;let lastIndex=0;let isBrace=false;let isBracket=false;let isGlob=false;let isExtglob=false;let isGlobstar=false;let braceEscaped=false;let backslashes=false;let negated=false;let negatedExtglob=false;let finished=false;let braces=0;let prev;let code;let token={value:'',depth:0,isGlob:false};const eos=()=>index>=length;const peek=()=>str.charCodeAt(index+1);const advance=()=>{prev=code;return str.charCodeAt(++index);};while(index<length){code=advance();let next;if(code===CHAR_BACKWARD_SLASH){backslashes=token.backslashes=true;code=advance();if(code===CHAR_LEFT_CURLY_BRACE){braceEscaped=true;}continue;}if(braceEscaped===true||code===CHAR_LEFT_CURLY_BRACE){braces++;while(eos()!==true&&(code=advance())){if(code===CHAR_BACKWARD_SLASH){backslashes=token.backslashes=true;advance();continue;}if(code===CHAR_LEFT_CURLY_BRACE){braces++;continue;}if(braceEscaped!==true&&code===CHAR_DOT&&(code=advance())===CHAR_DOT){isBrace=token.isBrace=true;isGlob=token.isGlob=true;finished=true;if(scanToEnd===true){continue;}break;}if(braceEscaped!==true&&code===CHAR_COMMA$1){isBrace=token.isBrace=true;isGlob=token.isGlob=true;finished=true;if(scanToEnd===true){continue;}break;}if(code===CHAR_RIGHT_CURLY_BRACE){braces--;if(braces===0){braceEscaped=false;isBrace=token.isBrace=true;finished=true;break;}}}if(scanToEnd===true){continue;}break;}if(code===CHAR_FORWARD_SLASH){slashes.push(index);tokens.push(token);token={value:'',depth:0,isGlob:false};if(finished===true)continue;if(prev===CHAR_DOT&&index===start+1){start+=2;continue;}lastIndex=index+1;continue;}if(opts.noext!==true){const isExtglobChar=code===CHAR_PLUS||code===CHAR_AT||code===CHAR_ASTERISK$1||code===CHAR_QUESTION_MARK||code===CHAR_EXCLAMATION_MARK;if(isExtglobChar===true&&peek()===CHAR_LEFT_PARENTHESES){isGlob=token.isGlob=true;isExtglob=token.isExtglob=true;finished=true;if(code===CHAR_EXCLAMATION_MARK&&index===start){negatedExtglob=true;}if(scanToEnd===true){while(eos()!==true&&(code=advance())){if(code===CHAR_BACKWARD_SLASH){backslashes=token.backslashes=true;code=advance();continue;}if(code===CHAR_RIGHT_PARENTHESES){isGlob=token.isGlob=true;finished=true;break;}}continue;}break;}}if(code===CHAR_ASTERISK$1){if(prev===CHAR_ASTERISK$1)isGlobstar=token.isGlobstar=true;isGlob=token.isGlob=true;finished=true;if(scanToEnd===true){continue;}break;}if(code===CHAR_QUESTION_MARK){isGlob=token.isGlob=true;finished=true;if(scanToEnd===true){continue;}break;}if(code===CHAR_LEFT_SQUARE_BRACKET$1){while(eos()!==true&&(next=advance())){if(next===CHAR_BACKWARD_SLASH){backslashes=token.backslashes=true;advance();continue;}if(next===CHAR_RIGHT_SQUARE_BRACKET$1){isBracket=token.isBracket=true;isGlob=token.isGlob=true;finished=true;break;}}if(scanToEnd===true){continue;}break;}if(opts.nonegate!==true&&code===CHAR_EXCLAMATION_MARK&&index===start){negated=token.negated=true;start++;continue;}if(opts.noparen!==true&&code===CHAR_LEFT_PARENTHESES){isGlob=token.isGlob=true;if(scanToEnd===true){while(eos()!==true&&(code=advance())){if(code===CHAR_LEFT_PARENTHESES){backslashes=token.backslashes=true;code=advance();continue;}if(code===CHAR_RIGHT_PARENTHESES){finished=true;break;}}continue;}break;}if(isGlob===true){finished=true;if(scanToEnd===true){continue;}break;}}if(opts.noext===true){isExtglob=false;isGlob=false;}let base=str;let prefix='';let glob='';if(start>0){prefix=str.slice(0,start);str=str.slice(start);lastIndex-=start;}if(base&&isGlob===true&&lastIndex>0){base=str.slice(0,lastIndex);glob=str.slice(lastIndex);}else if(isGlob===true){base='';glob=str;}else{base=str;}if(base&&base!==''&&base!=='/'&&base!==str){if(isPathSeparator(base.charCodeAt(base.length-1))){base=base.slice(0,-1);}}if(opts.unescape===true){if(glob)glob=utils$5.removeBackslashes(glob);if(base&&backslashes===true){base=utils$5.removeBackslashes(base);}}const state={prefix,input,start,base,glob,isBrace,isBracket,isGlob,isExtglob,isGlobstar,negated,negatedExtglob};if(opts.tokens===true){state.maxDepth=0;if(!isPathSeparator(code)){tokens.push(token);}state.tokens=tokens;}if(opts.parts===true||opts.tokens===true){let prevIndex;for(let idx=0;idx<slashes.length;idx++){const n=prevIndex?prevIndex+1:start;const i=slashes[idx];const value=input.slice(n,i);if(opts.tokens){if(idx===0&&start!==0){tokens[idx].isPrefix=true;tokens[idx].value=prefix;}else{tokens[idx].value=value;}depth(tokens[idx]);state.maxDepth+=tokens[idx].depth;}if(idx!==0||value!==''){parts.push(value);}prevIndex=i;}if(prevIndex&&prevIndex+1<input.length){const value=input.slice(prevIndex+1);parts.push(value);if(opts.tokens){tokens[tokens.length-1].value=value;depth(tokens[tokens.length-1]);state.maxDepth+=tokens[tokens.length-1].depth;}}state.slashes=slashes;state.parts=parts;}return state;};var scan_1=scan$2;const constants$1=constants$2;const utils$4=utils$6;/**
 * Constants
 */const{MAX_LENGTH,POSIX_REGEX_SOURCE,REGEX_NON_SPECIAL_CHARS,REGEX_SPECIAL_CHARS_BACKREF,REPLACEMENTS}=constants$1;/**
 * Helpers
 */const expandRange=(args,options)=>{if(typeof options.expandRange==='function'){return options.expandRange(...args,options);}args.sort();const value="[".concat(args.join('-'),"]");try{/* eslint-disable-next-line no-new */new RegExp(value);}catch(ex){return args.map(v=>utils$4.escapeRegex(v)).join('..');}return value;};/**
 * Create the message for a syntax error
 */const syntaxError=(type,char)=>{return"Missing ".concat(type,": \"").concat(char,"\" - use \"\\\\").concat(char,"\" to match literal characters");};/**
 * Parse the given input string.
 * @param {String} input
 * @param {Object} options
 * @return {Object}
 */const parse$5=(input,options)=>{if(typeof input!=='string'){throw new TypeError('Expected a string');}input=REPLACEMENTS[input]||input;const opts={...options};const max=typeof opts.maxLength==='number'?Math.min(MAX_LENGTH,opts.maxLength):MAX_LENGTH;let len=input.length;if(len>max){throw new SyntaxError("Input length: ".concat(len,", exceeds maximum allowed length: ").concat(max));}const bos={type:'bos',value:'',output:opts.prepend||''};const tokens=[bos];const capture=opts.capture?'':'?:';const win32=utils$4.isWindows(options);// create constants based on platform, for windows or posix
const PLATFORM_CHARS=constants$1.globChars(win32);const EXTGLOB_CHARS=constants$1.extglobChars(PLATFORM_CHARS);const{DOT_LITERAL,PLUS_LITERAL,SLASH_LITERAL,ONE_CHAR,DOTS_SLASH,NO_DOT,NO_DOT_SLASH,NO_DOTS_SLASH,QMARK,QMARK_NO_DOT,STAR,START_ANCHOR}=PLATFORM_CHARS;const globstar=opts=>{return"(".concat(capture,"(?:(?!").concat(START_ANCHOR).concat(opts.dot?DOTS_SLASH:DOT_LITERAL,").)*?)");};const nodot=opts.dot?'':NO_DOT;const qmarkNoDot=opts.dot?QMARK:QMARK_NO_DOT;let star=opts.bash===true?globstar(opts):STAR;if(opts.capture){star="(".concat(star,")");}// minimatch options support
if(typeof opts.noext==='boolean'){opts.noextglob=opts.noext;}const state={input,index:-1,start:0,dot:opts.dot===true,consumed:'',output:'',prefix:'',backtrack:false,negated:false,brackets:0,braces:0,parens:0,quotes:0,globstar:false,tokens};input=utils$4.removePrefix(input,state);len=input.length;const extglobs=[];const braces=[];const stack=[];let prev=bos;let value;/**
   * Tokenizing helpers
   */const eos=()=>state.index===len-1;const peek=state.peek=function(){let n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return input[state.index+n];};const advance=state.advance=()=>input[++state.index]||'';const remaining=()=>input.slice(state.index+1);const consume=function(){let value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let num=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;state.consumed+=value;state.index+=num;};const append=token=>{state.output+=token.output!=null?token.output:token.value;consume(token.value);};const negate=()=>{let count=1;while(peek()==='!'&&(peek(2)!=='('||peek(3)==='?')){advance();state.start++;count++;}if(count%2===0){return false;}state.negated=true;state.start++;return true;};const increment=type=>{state[type]++;stack.push(type);};const decrement=type=>{state[type]--;stack.pop();};/**
   * Push tokens onto the tokens array. This helper speeds up
   * tokenizing by 1) helping us avoid backtracking as much as possible,
   * and 2) helping us avoid creating extra tokens when consecutive
   * characters are plain text. This improves performance and simplifies
   * lookbehinds.
   */const push=tok=>{if(prev.type==='globstar'){const isBrace=state.braces>0&&(tok.type==='comma'||tok.type==='brace');const isExtglob=tok.extglob===true||extglobs.length&&(tok.type==='pipe'||tok.type==='paren');if(tok.type!=='slash'&&tok.type!=='paren'&&!isBrace&&!isExtglob){state.output=state.output.slice(0,-prev.output.length);prev.type='star';prev.value='*';prev.output=star;state.output+=prev.output;}}if(extglobs.length&&tok.type!=='paren'){extglobs[extglobs.length-1].inner+=tok.value;}if(tok.value||tok.output)append(tok);if(prev&&prev.type==='text'&&tok.type==='text'){prev.value+=tok.value;prev.output=(prev.output||'')+tok.value;return;}tok.prev=prev;tokens.push(tok);prev=tok;};const extglobOpen=(type,value)=>{const token={...EXTGLOB_CHARS[value],conditions:1,inner:''};token.prev=prev;token.parens=state.parens;token.output=state.output;const output=(opts.capture?'(':'')+token.open;increment('parens');push({type,value,output:state.output?'':ONE_CHAR});push({type:'paren',extglob:true,value:advance(),output});extglobs.push(token);};const extglobClose=token=>{let output=token.close+(opts.capture?')':'');let rest;if(token.type==='negate'){let extglobStar=star;if(token.inner&&token.inner.length>1&&token.inner.includes('/')){extglobStar=globstar(opts);}if(extglobStar!==star||eos()||/^\)+$/.test(remaining())){output=token.close=")$))".concat(extglobStar);}if(token.inner.includes('*')&&(rest=remaining())&&/^\.[^\\/.]+$/.test(rest)){// Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.
// In this case, we need to parse the string and use it in the output of the original pattern.
// Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.
//
// Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.
const expression=parse$5(rest,{...options,fastpaths:false}).output;output=token.close=")".concat(expression,")").concat(extglobStar,")");}if(token.prev.type==='bos'){state.negatedExtglob=true;}}push({type:'paren',extglob:true,value,output});decrement('parens');};/**
   * Fast paths
   */if(opts.fastpaths!==false&&!/(^[*!]|[/()[\]{}"])/.test(input)){let backslashes=false;let output=input.replace(REGEX_SPECIAL_CHARS_BACKREF,(m,esc,chars,first,rest,index)=>{if(first==='\\'){backslashes=true;return m;}if(first==='?'){if(esc){return esc+first+(rest?QMARK.repeat(rest.length):'');}if(index===0){return qmarkNoDot+(rest?QMARK.repeat(rest.length):'');}return QMARK.repeat(chars.length);}if(first==='.'){return DOT_LITERAL.repeat(chars.length);}if(first==='*'){if(esc){return esc+first+(rest?star:'');}return star;}return esc?m:"\\".concat(m);});if(backslashes===true){if(opts.unescape===true){output=output.replace(/\\/g,'');}else{output=output.replace(/\\+/g,m=>{return m.length%2===0?'\\\\':m?'\\':'';});}}if(output===input&&opts.contains===true){state.output=input;return state;}state.output=utils$4.wrapOutput(output,state,options);return state;}/**
   * Tokenize input until we reach end-of-string
   */while(!eos()){value=advance();if(value==='\u0000'){continue;}/**
     * Escaped characters
     */if(value==='\\'){const next=peek();if(next==='/'&&opts.bash!==true){continue;}if(next==='.'||next===';'){continue;}if(!next){value+='\\';push({type:'text',value});continue;}// collapse slashes to reduce potential for exploits
const match=/^\\+/.exec(remaining());let slashes=0;if(match&&match[0].length>2){slashes=match[0].length;state.index+=slashes;if(slashes%2!==0){value+='\\';}}if(opts.unescape===true){value=advance();}else{value+=advance();}if(state.brackets===0){push({type:'text',value});continue;}}/**
     * If we're inside a regex character class, continue
     * until we reach the closing bracket.
     */if(state.brackets>0&&(value!==']'||prev.value==='['||prev.value==='[^')){if(opts.posix!==false&&value===':'){const inner=prev.value.slice(1);if(inner.includes('[')){prev.posix=true;if(inner.includes(':')){const idx=prev.value.lastIndexOf('[');const pre=prev.value.slice(0,idx);const rest=prev.value.slice(idx+2);const posix=POSIX_REGEX_SOURCE[rest];if(posix){prev.value=pre+posix;state.backtrack=true;advance();if(!bos.output&&tokens.indexOf(prev)===1){bos.output=ONE_CHAR;}continue;}}}}if(value==='['&&peek()!==':'||value==='-'&&peek()===']'){value="\\".concat(value);}if(value===']'&&(prev.value==='['||prev.value==='[^')){value="\\".concat(value);}if(opts.posix===true&&value==='!'&&prev.value==='['){value='^';}prev.value+=value;append({value});continue;}/**
     * If we're inside a quoted string, continue
     * until we reach the closing double quote.
     */if(state.quotes===1&&value!=='"'){value=utils$4.escapeRegex(value);prev.value+=value;append({value});continue;}/**
     * Double quotes
     */if(value==='"'){state.quotes=state.quotes===1?0:1;if(opts.keepQuotes===true){push({type:'text',value});}continue;}/**
     * Parentheses
     */if(value==='('){increment('parens');push({type:'paren',value});continue;}if(value===')'){if(state.parens===0&&opts.strictBrackets===true){throw new SyntaxError(syntaxError('opening','('));}const extglob=extglobs[extglobs.length-1];if(extglob&&state.parens===extglob.parens+1){extglobClose(extglobs.pop());continue;}push({type:'paren',value,output:state.parens?')':'\\)'});decrement('parens');continue;}/**
     * Square brackets
     */if(value==='['){if(opts.nobracket===true||!remaining().includes(']')){if(opts.nobracket!==true&&opts.strictBrackets===true){throw new SyntaxError(syntaxError('closing',']'));}value="\\".concat(value);}else{increment('brackets');}push({type:'bracket',value});continue;}if(value===']'){if(opts.nobracket===true||prev&&prev.type==='bracket'&&prev.value.length===1){push({type:'text',value,output:"\\".concat(value)});continue;}if(state.brackets===0){if(opts.strictBrackets===true){throw new SyntaxError(syntaxError('opening','['));}push({type:'text',value,output:"\\".concat(value)});continue;}decrement('brackets');const prevValue=prev.value.slice(1);if(prev.posix!==true&&prevValue[0]==='^'&&!prevValue.includes('/')){value="/".concat(value);}prev.value+=value;append({value});// when literal brackets are explicitly disabled
// assume we should match with a regex character class
if(opts.literalBrackets===false||utils$4.hasRegexChars(prevValue)){continue;}const escaped=utils$4.escapeRegex(prev.value);state.output=state.output.slice(0,-prev.value.length);// when literal brackets are explicitly enabled
// assume we should escape the brackets to match literal characters
if(opts.literalBrackets===true){state.output+=escaped;prev.value=escaped;continue;}// when the user specifies nothing, try to match both
prev.value="(".concat(capture).concat(escaped,"|").concat(prev.value,")");state.output+=prev.value;continue;}/**
     * Braces
     */if(value==='{'&&opts.nobrace!==true){increment('braces');const open={type:'brace',value,output:'(',outputIndex:state.output.length,tokensIndex:state.tokens.length};braces.push(open);push(open);continue;}if(value==='}'){const brace=braces[braces.length-1];if(opts.nobrace===true||!brace){push({type:'text',value,output:value});continue;}let output=')';if(brace.dots===true){const arr=tokens.slice();const range=[];for(let i=arr.length-1;i>=0;i--){tokens.pop();if(arr[i].type==='brace'){break;}if(arr[i].type!=='dots'){range.unshift(arr[i].value);}}output=expandRange(range,opts);state.backtrack=true;}if(brace.comma!==true&&brace.dots!==true){const out=state.output.slice(0,brace.outputIndex);const toks=state.tokens.slice(brace.tokensIndex);brace.value=brace.output='\\{';value=output='\\}';state.output=out;for(const t of toks){state.output+=t.output||t.value;}}push({type:'brace',value,output});decrement('braces');braces.pop();continue;}/**
     * Pipes
     */if(value==='|'){if(extglobs.length>0){extglobs[extglobs.length-1].conditions++;}push({type:'text',value});continue;}/**
     * Commas
     */if(value===','){let output=value;const brace=braces[braces.length-1];if(brace&&stack[stack.length-1]==='braces'){brace.comma=true;output='|';}push({type:'comma',value,output});continue;}/**
     * Slashes
     */if(value==='/'){// if the beginning of the glob is "./", advance the start
// to the current index, and don't add the "./" characters
// to the state. This greatly simplifies lookbehinds when
// checking for BOS characters like "!" and "." (not "./")
if(prev.type==='dot'&&state.index===state.start+1){state.start=state.index+1;state.consumed='';state.output='';tokens.pop();prev=bos;// reset "prev" to the first token
continue;}push({type:'slash',value,output:SLASH_LITERAL});continue;}/**
     * Dots
     */if(value==='.'){if(state.braces>0&&prev.type==='dot'){if(prev.value==='.')prev.output=DOT_LITERAL;const brace=braces[braces.length-1];prev.type='dots';prev.output+=value;prev.value+=value;brace.dots=true;continue;}if(state.braces+state.parens===0&&prev.type!=='bos'&&prev.type!=='slash'){push({type:'text',value,output:DOT_LITERAL});continue;}push({type:'dot',value,output:DOT_LITERAL});continue;}/**
     * Question marks
     */if(value==='?'){const isGroup=prev&&prev.value==='(';if(!isGroup&&opts.noextglob!==true&&peek()==='('&&peek(2)!=='?'){extglobOpen('qmark',value);continue;}if(prev&&prev.type==='paren'){const next=peek();let output=value;if(next==='<'&&!utils$4.supportsLookbehinds()){throw new Error('Node.js v10 or higher is required for regex lookbehinds');}if(prev.value==='('&&!/[!=<:]/.test(next)||next==='<'&&!/<([!=]|\w+>)/.test(remaining())){output="\\".concat(value);}push({type:'text',value,output});continue;}if(opts.dot!==true&&(prev.type==='slash'||prev.type==='bos')){push({type:'qmark',value,output:QMARK_NO_DOT});continue;}push({type:'qmark',value,output:QMARK});continue;}/**
     * Exclamation
     */if(value==='!'){if(opts.noextglob!==true&&peek()==='('){if(peek(2)!=='?'||!/[!=<:]/.test(peek(3))){extglobOpen('negate',value);continue;}}if(opts.nonegate!==true&&state.index===0){negate();continue;}}/**
     * Plus
     */if(value==='+'){if(opts.noextglob!==true&&peek()==='('&&peek(2)!=='?'){extglobOpen('plus',value);continue;}if(prev&&prev.value==='('||opts.regex===false){push({type:'plus',value,output:PLUS_LITERAL});continue;}if(prev&&(prev.type==='bracket'||prev.type==='paren'||prev.type==='brace')||state.parens>0){push({type:'plus',value});continue;}push({type:'plus',value:PLUS_LITERAL});continue;}/**
     * Plain text
     */if(value==='@'){if(opts.noextglob!==true&&peek()==='('&&peek(2)!=='?'){push({type:'at',extglob:true,value,output:''});continue;}push({type:'text',value});continue;}/**
     * Plain text
     */if(value!=='*'){if(value==='$'||value==='^'){value="\\".concat(value);}const match=REGEX_NON_SPECIAL_CHARS.exec(remaining());if(match){value+=match[0];state.index+=match[0].length;}push({type:'text',value});continue;}/**
     * Stars
     */if(prev&&(prev.type==='globstar'||prev.star===true)){prev.type='star';prev.star=true;prev.value+=value;prev.output=star;state.backtrack=true;state.globstar=true;consume(value);continue;}let rest=remaining();if(opts.noextglob!==true&&/^\([^?]/.test(rest)){extglobOpen('star',value);continue;}if(prev.type==='star'){if(opts.noglobstar===true){consume(value);continue;}const prior=prev.prev;const before=prior.prev;const isStart=prior.type==='slash'||prior.type==='bos';const afterStar=before&&(before.type==='star'||before.type==='globstar');if(opts.bash===true&&(!isStart||rest[0]&&rest[0]!=='/')){push({type:'star',value,output:''});continue;}const isBrace=state.braces>0&&(prior.type==='comma'||prior.type==='brace');const isExtglob=extglobs.length&&(prior.type==='pipe'||prior.type==='paren');if(!isStart&&prior.type!=='paren'&&!isBrace&&!isExtglob){push({type:'star',value,output:''});continue;}// strip consecutive `/**/`
while(rest.slice(0,3)==='/**'){const after=input[state.index+4];if(after&&after!=='/'){break;}rest=rest.slice(3);consume('/**',3);}if(prior.type==='bos'&&eos()){prev.type='globstar';prev.value+=value;prev.output=globstar(opts);state.output=prev.output;state.globstar=true;consume(value);continue;}if(prior.type==='slash'&&prior.prev.type!=='bos'&&!afterStar&&eos()){state.output=state.output.slice(0,-(prior.output+prev.output).length);prior.output="(?:".concat(prior.output);prev.type='globstar';prev.output=globstar(opts)+(opts.strictSlashes?')':'|$)');prev.value+=value;state.globstar=true;state.output+=prior.output+prev.output;consume(value);continue;}if(prior.type==='slash'&&prior.prev.type!=='bos'&&rest[0]==='/'){const end=rest[1]!==void 0?'|$':'';state.output=state.output.slice(0,-(prior.output+prev.output).length);prior.output="(?:".concat(prior.output);prev.type='globstar';prev.output="".concat(globstar(opts)).concat(SLASH_LITERAL,"|").concat(SLASH_LITERAL).concat(end,")");prev.value+=value;state.output+=prior.output+prev.output;state.globstar=true;consume(value+advance());push({type:'slash',value:'/',output:''});continue;}if(prior.type==='bos'&&rest[0]==='/'){prev.type='globstar';prev.value+=value;prev.output="(?:^|".concat(SLASH_LITERAL,"|").concat(globstar(opts)).concat(SLASH_LITERAL,")");state.output=prev.output;state.globstar=true;consume(value+advance());push({type:'slash',value:'/',output:''});continue;}// remove single star from output
state.output=state.output.slice(0,-prev.output.length);// reset previous token to globstar
prev.type='globstar';prev.output=globstar(opts);prev.value+=value;// reset output with globstar
state.output+=prev.output;state.globstar=true;consume(value);continue;}const token={type:'star',value,output:star};if(opts.bash===true){token.output='.*?';if(prev.type==='bos'||prev.type==='slash'){token.output=nodot+token.output;}push(token);continue;}if(prev&&(prev.type==='bracket'||prev.type==='paren')&&opts.regex===true){token.output=value;push(token);continue;}if(state.index===state.start||prev.type==='slash'||prev.type==='dot'){if(prev.type==='dot'){state.output+=NO_DOT_SLASH;prev.output+=NO_DOT_SLASH;}else if(opts.dot===true){state.output+=NO_DOTS_SLASH;prev.output+=NO_DOTS_SLASH;}else{state.output+=nodot;prev.output+=nodot;}if(peek()!=='*'){state.output+=ONE_CHAR;prev.output+=ONE_CHAR;}}push(token);}while(state.brackets>0){if(opts.strictBrackets===true)throw new SyntaxError(syntaxError('closing',']'));state.output=utils$4.escapeLast(state.output,'[');decrement('brackets');}while(state.parens>0){if(opts.strictBrackets===true)throw new SyntaxError(syntaxError('closing',')'));state.output=utils$4.escapeLast(state.output,'(');decrement('parens');}while(state.braces>0){if(opts.strictBrackets===true)throw new SyntaxError(syntaxError('closing','}'));state.output=utils$4.escapeLast(state.output,'{');decrement('braces');}if(opts.strictSlashes!==true&&(prev.type==='star'||prev.type==='bracket')){push({type:'maybe_slash',value:'',output:"".concat(SLASH_LITERAL,"?")});}// rebuild the output if we had to backtrack at any point
if(state.backtrack===true){state.output='';for(const token of state.tokens){state.output+=token.output!=null?token.output:token.value;if(token.suffix){state.output+=token.suffix;}}}return state;};/**
 * Fast paths for creating regular expressions for common glob patterns.
 * This can significantly speed up processing and has very little downside
 * impact when none of the fast paths match.
 */parse$5.fastpaths=(input,options)=>{const opts={...options};const max=typeof opts.maxLength==='number'?Math.min(MAX_LENGTH,opts.maxLength):MAX_LENGTH;const len=input.length;if(len>max){throw new SyntaxError("Input length: ".concat(len,", exceeds maximum allowed length: ").concat(max));}input=REPLACEMENTS[input]||input;const win32=utils$4.isWindows(options);// create constants based on platform, for windows or posix
const{DOT_LITERAL,SLASH_LITERAL,ONE_CHAR,DOTS_SLASH,NO_DOT,NO_DOTS,NO_DOTS_SLASH,STAR,START_ANCHOR}=constants$1.globChars(win32);const nodot=opts.dot?NO_DOTS:NO_DOT;const slashDot=opts.dot?NO_DOTS_SLASH:NO_DOT;const capture=opts.capture?'':'?:';const state={negated:false,prefix:''};let star=opts.bash===true?'.*?':STAR;if(opts.capture){star="(".concat(star,")");}const globstar=opts=>{if(opts.noglobstar===true)return star;return"(".concat(capture,"(?:(?!").concat(START_ANCHOR).concat(opts.dot?DOTS_SLASH:DOT_LITERAL,").)*?)");};const create=str=>{switch(str){case'*':return"".concat(nodot).concat(ONE_CHAR).concat(star);case'.*':return"".concat(DOT_LITERAL).concat(ONE_CHAR).concat(star);case'*.*':return"".concat(nodot).concat(star).concat(DOT_LITERAL).concat(ONE_CHAR).concat(star);case'*/*':return"".concat(nodot).concat(star).concat(SLASH_LITERAL).concat(ONE_CHAR).concat(slashDot).concat(star);case'**':return nodot+globstar(opts);case'**/*':return"(?:".concat(nodot).concat(globstar(opts)).concat(SLASH_LITERAL,")?").concat(slashDot).concat(ONE_CHAR).concat(star);case'**/*.*':return"(?:".concat(nodot).concat(globstar(opts)).concat(SLASH_LITERAL,")?").concat(slashDot).concat(star).concat(DOT_LITERAL).concat(ONE_CHAR).concat(star);case'**/.*':return"(?:".concat(nodot).concat(globstar(opts)).concat(SLASH_LITERAL,")?").concat(DOT_LITERAL).concat(ONE_CHAR).concat(star);default:{const match=/^(.*?)\.(\w+)$/.exec(str);if(!match)return;const source=create(match[1]);if(!source)return;return source+DOT_LITERAL+match[2];}}};const output=utils$4.removePrefix(input,state);let source=create(output);if(source&&opts.strictSlashes!==true){source+="".concat(SLASH_LITERAL,"?");}return source;};var parse_1$1=parse$5;const path$a=path__default.default;const scan$1=scan_1;const parse$4=parse_1$1;const utils$3=utils$6;const constants=constants$2;const isObject$4=val=>val&&typeof val==='object'&&!Array.isArray(val);/**
 * Creates a matcher function from one or more glob patterns. The
 * returned function takes a string to match as its first argument,
 * and returns true if the string is a match. The returned matcher
 * function also takes a boolean as the second argument that, when true,
 * returns an object with additional information.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch(glob[, options]);
 *
 * const isMatch = picomatch('*.!(*a)');
 * console.log(isMatch('a.a')); //=> false
 * console.log(isMatch('a.b')); //=> true
 * ```
 * @name picomatch
 * @param {String|Array} `globs` One or more glob patterns.
 * @param {Object=} `options`
 * @return {Function=} Returns a matcher function.
 * @api public
 */const picomatch$2=function(glob,options){let returnState=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(Array.isArray(glob)){const fns=glob.map(input=>picomatch$2(input,options,returnState));const arrayMatcher=str=>{for(const isMatch of fns){const state=isMatch(str);if(state)return state;}return false;};return arrayMatcher;}const isState=isObject$4(glob)&&glob.tokens&&glob.input;if(glob===''||typeof glob!=='string'&&!isState){throw new TypeError('Expected pattern to be a non-empty string');}const opts=options||{};const posix=utils$3.isWindows(options);const regex=isState?picomatch$2.compileRe(glob,options):picomatch$2.makeRe(glob,options,false,true);const state=regex.state;delete regex.state;let isIgnored=()=>false;if(opts.ignore){const ignoreOpts={...options,ignore:null,onMatch:null,onResult:null};isIgnored=picomatch$2(opts.ignore,ignoreOpts,returnState);}const matcher=function(input){let returnObject=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const{isMatch,match,output}=picomatch$2.test(input,regex,options,{glob,posix});const result={glob,state,regex,posix,input,output,match,isMatch};if(typeof opts.onResult==='function'){opts.onResult(result);}if(isMatch===false){result.isMatch=false;return returnObject?result:false;}if(isIgnored(input)){if(typeof opts.onIgnore==='function'){opts.onIgnore(result);}result.isMatch=false;return returnObject?result:false;}if(typeof opts.onMatch==='function'){opts.onMatch(result);}return returnObject?result:true;};if(returnState){matcher.state=state;}return matcher;};/**
 * Test `input` with the given `regex`. This is used by the main
 * `picomatch()` function to test the input string.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.test(input, regex[, options]);
 *
 * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\/([^/]*?))$/));
 * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }
 * ```
 * @param {String} `input` String to test.
 * @param {RegExp} `regex`
 * @return {Object} Returns an object with matching info.
 * @api public
 */picomatch$2.test=function(input,regex,options){let{glob,posix}=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(typeof input!=='string'){throw new TypeError('Expected input to be a string');}if(input===''){return{isMatch:false,output:''};}const opts=options||{};const format=opts.format||(posix?utils$3.toPosixSlashes:null);let match=input===glob;let output=match&&format?format(input):input;if(match===false){output=format?format(input):input;match=output===glob;}if(match===false||opts.capture===true){if(opts.matchBase===true||opts.basename===true){match=picomatch$2.matchBase(input,regex,options,posix);}else{match=regex.exec(output);}}return{isMatch:Boolean(match),match,output};};/**
 * Match the basename of a filepath.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.matchBase(input, glob[, options]);
 * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true
 * ```
 * @param {String} `input` String to test.
 * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).
 * @return {Boolean}
 * @api public
 */picomatch$2.matchBase=function(input,glob,options){let posix=arguments.length>3&&arguments[3]!==undefined?arguments[3]:utils$3.isWindows(options);const regex=glob instanceof RegExp?glob:picomatch$2.makeRe(glob,options);return regex.test(path$a.basename(input));};/**
 * Returns true if **any** of the given glob `patterns` match the specified `string`.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.isMatch(string, patterns[, options]);
 *
 * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true
 * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false
 * ```
 * @param {String|Array} str The string to test.
 * @param {String|Array} patterns One or more glob patterns to use for matching.
 * @param {Object} [options] See available [options](#options).
 * @return {Boolean} Returns true if any patterns match `str`
 * @api public
 */picomatch$2.isMatch=(str,patterns,options)=>picomatch$2(patterns,options)(str);/**
 * Parse a glob pattern to create the source string for a regular
 * expression.
 *
 * ```js
 * const picomatch = require('picomatch');
 * const result = picomatch.parse(pattern[, options]);
 * ```
 * @param {String} `pattern`
 * @param {Object} `options`
 * @return {Object} Returns an object with useful properties and output to be used as a regex source string.
 * @api public
 */picomatch$2.parse=(pattern,options)=>{if(Array.isArray(pattern))return pattern.map(p=>picomatch$2.parse(p,options));return parse$4(pattern,{...options,fastpaths:false});};/**
 * Scan a glob pattern to separate the pattern into segments.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.scan(input[, options]);
 *
 * const result = picomatch.scan('!./foo/*.js');
 * console.log(result);
 * { prefix: '!./',
 *   input: '!./foo/*.js',
 *   start: 3,
 *   base: 'foo',
 *   glob: '*.js',
 *   isBrace: false,
 *   isBracket: false,
 *   isGlob: true,
 *   isExtglob: false,
 *   isGlobstar: false,
 *   negated: true }
 * ```
 * @param {String} `input` Glob pattern to scan.
 * @param {Object} `options`
 * @return {Object} Returns an object with
 * @api public
 */picomatch$2.scan=(input,options)=>scan$1(input,options);/**
 * Compile a regular expression from the `state` object returned by the
 * [parse()](#parse) method.
 *
 * @param {Object} `state`
 * @param {Object} `options`
 * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.
 * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.
 * @return {RegExp}
 * @api public
 */picomatch$2.compileRe=function(state,options){let returnOutput=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let returnState=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;if(returnOutput===true){return state.output;}const opts=options||{};const prepend=opts.contains?'':'^';const append=opts.contains?'':'$';let source="".concat(prepend,"(?:").concat(state.output,")").concat(append);if(state&&state.negated===true){source="^(?!".concat(source,").*$");}const regex=picomatch$2.toRegex(source,options);if(returnState===true){regex.state=state;}return regex;};/**
 * Create a regular expression from a parsed glob pattern.
 *
 * ```js
 * const picomatch = require('picomatch');
 * const state = picomatch.parse('*.js');
 * // picomatch.compileRe(state[, options]);
 *
 * console.log(picomatch.compileRe(state));
 * //=> /^(?:(?!\.)(?=.)[^/]*?\.js)$/
 * ```
 * @param {String} `state` The object returned from the `.parse` method.
 * @param {Object} `options`
 * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.
 * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.
 * @return {RegExp} Returns a regex created from the given pattern.
 * @api public
 */picomatch$2.makeRe=function(input){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let returnOutput=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let returnState=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;if(!input||typeof input!=='string'){throw new TypeError('Expected a non-empty string');}let parsed={negated:false,fastpaths:true};if(options.fastpaths!==false&&(input[0]==='.'||input[0]==='*')){parsed.output=parse$4.fastpaths(input,options);}if(!parsed.output){parsed=parse$4(input,options);}return picomatch$2.compileRe(parsed,options,returnOutput,returnState);};/**
 * Create a regular expression from the given regex source string.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.toRegex(source[, options]);
 *
 * const { output } = picomatch.parse('*.js');
 * console.log(picomatch.toRegex(output));
 * //=> /^(?:(?!\.)(?=.)[^/]*?\.js)$/
 * ```
 * @param {String} `source` Regular expression source string.
 * @param {Object} `options`
 * @return {RegExp}
 * @api public
 */picomatch$2.toRegex=(source,options)=>{try{const opts=options||{};return new RegExp(source,opts.flags||(opts.nocase?'i':''));}catch(err){if(options&&options.debug===true)throw err;return /$^/;}};/**
 * Picomatch constants.
 * @return {Object}
 */picomatch$2.constants=constants;/**
 * Expose "picomatch"
 */var picomatch_1=picomatch$2;var picomatch$1=picomatch_1;const util$2=require$$0__default$5.default;const braces=braces_1;const picomatch=picomatch$1;const utils$2=utils$6;const isEmptyString=val=>val===''||val==='./';/**
 * Returns an array of strings that match one or more glob patterns.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm(list, patterns[, options]);
 *
 * console.log(mm(['a.js', 'a.txt'], ['*.js']));
 * //=> [ 'a.js' ]
 * ```
 * @param {String|Array<string>} `list` List of strings to match.
 * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options)
 * @return {Array} Returns an array of matches
 * @summary false
 * @api public
 */const micromatch=(list,patterns,options)=>{patterns=[].concat(patterns);list=[].concat(list);let omit=new Set();let keep=new Set();let items=new Set();let negatives=0;let onResult=state=>{items.add(state.output);if(options&&options.onResult){options.onResult(state);}};for(let i=0;i<patterns.length;i++){let isMatch=picomatch(String(patterns[i]),{...options,onResult},true);let negated=isMatch.state.negated||isMatch.state.negatedExtglob;if(negated)negatives++;for(let item of list){let matched=isMatch(item,true);let match=negated?!matched.isMatch:matched.isMatch;if(!match)continue;if(negated){omit.add(matched.output);}else{omit.delete(matched.output);keep.add(matched.output);}}}let result=negatives===patterns.length?[...items]:[...keep];let matches=result.filter(item=>!omit.has(item));if(options&&matches.length===0){if(options.failglob===true){throw new Error("No matches found for \"".concat(patterns.join(', '),"\""));}if(options.nonull===true||options.nullglob===true){return options.unescape?patterns.map(p=>p.replace(/\\/g,'')):patterns;}}return matches;};/**
 * Backwards compatibility
 */micromatch.match=micromatch;/**
 * Returns a matcher function from the given glob `pattern` and `options`.
 * The returned function takes a string to match as its only argument and returns
 * true if the string is a match.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.matcher(pattern[, options]);
 *
 * const isMatch = mm.matcher('*.!(*a)');
 * console.log(isMatch('a.a')); //=> false
 * console.log(isMatch('a.b')); //=> true
 * ```
 * @param {String} `pattern` Glob pattern
 * @param {Object} `options`
 * @return {Function} Returns a matcher function.
 * @api public
 */micromatch.matcher=(pattern,options)=>picomatch(pattern,options);/**
 * Returns true if **any** of the given glob `patterns` match the specified `string`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.isMatch(string, patterns[, options]);
 *
 * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true
 * console.log(mm.isMatch('a.a', 'b.*')); //=> false
 * ```
 * @param {String} `str` The string to test.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `[options]` See available [options](#options).
 * @return {Boolean} Returns true if any patterns match `str`
 * @api public
 */micromatch.isMatch=(str,patterns,options)=>picomatch(patterns,options)(str);/**
 * Backwards compatibility
 */micromatch.any=micromatch.isMatch;/**
 * Returns a list of strings that _**do not match any**_ of the given `patterns`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.not(list, patterns[, options]);
 *
 * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));
 * //=> ['b.b', 'c.c']
 * ```
 * @param {Array} `list` Array of strings to match.
 * @param {String|Array} `patterns` One or more glob pattern to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Array} Returns an array of strings that **do not match** the given patterns.
 * @api public
 */micromatch.not=function(list,patterns){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};patterns=[].concat(patterns).map(String);let result=new Set();let items=[];let onResult=state=>{if(options.onResult)options.onResult(state);items.push(state.output);};let matches=new Set(micromatch(list,patterns,{...options,onResult}));for(let item of items){if(!matches.has(item)){result.add(item);}}return[...result];};/**
 * Returns true if the given `string` contains the given pattern. Similar
 * to [.isMatch](#isMatch) but the pattern can match any part of the string.
 *
 * ```js
 * var mm = require('micromatch');
 * // mm.contains(string, pattern[, options]);
 *
 * console.log(mm.contains('aa/bb/cc', '*b'));
 * //=> true
 * console.log(mm.contains('aa/bb/cc', '*d'));
 * //=> false
 * ```
 * @param {String} `str` The string to match.
 * @param {String|Array} `patterns` Glob pattern to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Boolean} Returns true if any of the patterns matches any part of `str`.
 * @api public
 */micromatch.contains=(str,pattern,options)=>{if(typeof str!=='string'){throw new TypeError("Expected a string: \"".concat(util$2.inspect(str),"\""));}if(Array.isArray(pattern)){return pattern.some(p=>micromatch.contains(str,p,options));}if(typeof pattern==='string'){if(isEmptyString(str)||isEmptyString(pattern)){return false;}if(str.includes(pattern)||str.startsWith('./')&&str.slice(2).includes(pattern)){return true;}}return micromatch.isMatch(str,pattern,{...options,contains:true});};/**
 * Filter the keys of the given object with the given `glob` pattern
 * and `options`. Does not attempt to match nested keys. If you need this feature,
 * use [glob-object][] instead.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.matchKeys(object, patterns[, options]);
 *
 * const obj = { aa: 'a', ab: 'b', ac: 'c' };
 * console.log(mm.matchKeys(obj, '*b'));
 * //=> { ab: 'b' }
 * ```
 * @param {Object} `object` The object with keys to filter.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Object} Returns an object with only keys that match the given patterns.
 * @api public
 */micromatch.matchKeys=(obj,patterns,options)=>{if(!utils$2.isObject(obj)){throw new TypeError('Expected the first argument to be an object');}let keys=micromatch(Object.keys(obj),patterns,options);let res={};for(let key of keys)res[key]=obj[key];return res;};/**
 * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.some(list, patterns[, options]);
 *
 * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));
 * // true
 * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));
 * // false
 * ```
 * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`
 * @api public
 */micromatch.some=(list,patterns,options)=>{let items=[].concat(list);for(let pattern of[].concat(patterns)){let isMatch=picomatch(String(pattern),options);if(items.some(item=>isMatch(item))){return true;}}return false;};/**
 * Returns true if every string in the given `list` matches
 * any of the given glob `patterns`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.every(list, patterns[, options]);
 *
 * console.log(mm.every('foo.js', ['foo.js']));
 * // true
 * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));
 * // true
 * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));
 * // false
 * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));
 * // false
 * ```
 * @param {String|Array} `list` The string or array of strings to test.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`
 * @api public
 */micromatch.every=(list,patterns,options)=>{let items=[].concat(list);for(let pattern of[].concat(patterns)){let isMatch=picomatch(String(pattern),options);if(!items.every(item=>isMatch(item))){return false;}}return true;};/**
 * Returns true if **all** of the given `patterns` match
 * the specified string.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.all(string, patterns[, options]);
 *
 * console.log(mm.all('foo.js', ['foo.js']));
 * // true
 *
 * console.log(mm.all('foo.js', ['*.js', '!foo.js']));
 * // false
 *
 * console.log(mm.all('foo.js', ['*.js', 'foo.js']));
 * // true
 *
 * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));
 * // true
 * ```
 * @param {String|Array} `str` The string to test.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Boolean} Returns true if any patterns match `str`
 * @api public
 */micromatch.all=(str,patterns,options)=>{if(typeof str!=='string'){throw new TypeError("Expected a string: \"".concat(util$2.inspect(str),"\""));}return[].concat(patterns).every(p=>picomatch(p,options)(str));};/**
 * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.capture(pattern, string[, options]);
 *
 * console.log(mm.capture('test/*.js', 'test/foo.js'));
 * //=> ['foo']
 * console.log(mm.capture('test/*.js', 'foo/bar.css'));
 * //=> null
 * ```
 * @param {String} `glob` Glob pattern to use for matching.
 * @param {String} `input` String to match
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.
 * @api public
 */micromatch.capture=(glob,input,options)=>{let posix=utils$2.isWindows(options);let regex=picomatch.makeRe(String(glob),{...options,capture:true});let match=regex.exec(posix?utils$2.toPosixSlashes(input):input);if(match){return match.slice(1).map(v=>v===void 0?'':v);}};/**
 * Create a regular expression from the given glob `pattern`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.makeRe(pattern[, options]);
 *
 * console.log(mm.makeRe('*.js'));
 * //=> /^(?:(\.[\\\/])?(?!\.)(?=.)[^\/]*?\.js)$/
 * ```
 * @param {String} `pattern` A glob pattern to convert to regex.
 * @param {Object} `options`
 * @return {RegExp} Returns a regex created from the given pattern.
 * @api public
 */micromatch.makeRe=function(){return picomatch.makeRe(...arguments);};/**
 * Scan a glob pattern to separate the pattern into segments. Used
 * by the [split](#split) method.
 *
 * ```js
 * const mm = require('micromatch');
 * const state = mm.scan(pattern[, options]);
 * ```
 * @param {String} `pattern`
 * @param {Object} `options`
 * @return {Object} Returns an object with
 * @api public
 */micromatch.scan=function(){return picomatch.scan(...arguments);};/**
 * Parse a glob pattern to create the source string for a regular
 * expression.
 *
 * ```js
 * const mm = require('micromatch');
 * const state = mm.parse(pattern[, options]);
 * ```
 * @param {String} `glob`
 * @param {Object} `options`
 * @return {Object} Returns an object with useful properties and output to be used as regex source string.
 * @api public
 */micromatch.parse=(patterns,options)=>{let res=[];for(let pattern of[].concat(patterns||[])){for(let str of braces(String(pattern),options)){res.push(picomatch.parse(str,options));}}return res;};/**
 * Process the given brace `pattern`.
 *
 * ```js
 * const { braces } = require('micromatch');
 * console.log(braces('foo/{a,b,c}/bar'));
 * //=> [ 'foo/(a|b|c)/bar' ]
 *
 * console.log(braces('foo/{a,b,c}/bar', { expand: true }));
 * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]
 * ```
 * @param {String} `pattern` String with brace pattern to process.
 * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.
 * @return {Array}
 * @api public
 */micromatch.braces=(pattern,options)=>{if(typeof pattern!=='string')throw new TypeError('Expected a string');if(options&&options.nobrace===true||!/\{.*\}/.test(pattern)){return[pattern];}return braces(pattern,options);};/**
 * Expand braces
 */micromatch.braceExpand=(pattern,options)=>{if(typeof pattern!=='string')throw new TypeError('Expected a string');return micromatch.braces(pattern,{...options,expand:true});};/**
 * Expose micromatch
 */var micromatch_1$1=micromatch;var __importDefault=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod};};Object.defineProperty(core$3,"__esModule",{value:true});core$3.readPackageJSON=core$3.extractWorkspaces=core$3.isMatchWorkspaces=core$3.checkWorkspaces=core$3.findWorkspaceRoot=void 0;const path_1=__importDefault(path__default.default);const pkg_dir_1=__importDefault(pkgDir__default.default);const fs_1=require$$0__default.default;const micromatch_1=__importDefault(micromatch_1$1);/**
 * Adapted from:
 * https://github.com/yarnpkg/yarn/blob/ddf2f9ade211195372236c2f39a75b00fa18d4de/src/config.js#L612
 * @param {string} [initial]
 * @return {string|null}
 */function findWorkspaceRoot(initial){if(!initial){initial=process.cwd();}let _pkg=pkg_dir_1.default.sync(initial);if(!_pkg){return null;}initial=path_1.default.normalize(_pkg);let previous=null;let current=initial;do{const manifest=readPackageJSON(current);extractWorkspaces(manifest);let{done,found}=checkWorkspaces(current,initial);if(done){return found;}previous=current;current=path_1.default.dirname(current);}while(current!==previous);return null;}core$3.findWorkspaceRoot=findWorkspaceRoot;function checkWorkspaces(current,initial){const manifest=readPackageJSON(current);const workspaces=extractWorkspaces(manifest);let done=false;let found;let relativePath;if(workspaces){done=true;relativePath=path_1.default.relative(current,initial);if(relativePath===''||isMatchWorkspaces(relativePath,workspaces)){found=current;}else{found=null;}}return{done,found,relativePath};}core$3.checkWorkspaces=checkWorkspaces;function isMatchWorkspaces(relativePath,workspaces){let ls=micromatch_1.default([relativePath],workspaces);return ls.length>0;}core$3.isMatchWorkspaces=isMatchWorkspaces;function extractWorkspaces(manifest){const workspaces=(manifest||{}).workspaces;return workspaces&&workspaces.packages||(Array.isArray(workspaces)?workspaces:null);}core$3.extractWorkspaces=extractWorkspaces;function readPackageJSON(dir){const file=path_1.default.join(dir,'package.json');if(fs_1.existsSync(file)){return JSON.parse(fs_1.readFileSync(file,'utf8'));}return null;}core$3.readPackageJSON=readPackageJSON;findWorkspaceRoot.findWorkspaceRoot=findWorkspaceRoot;findWorkspaceRoot.readPackageJSON=readPackageJSON;findWorkspaceRoot.extractWorkspaces=extractWorkspaces;findWorkspaceRoot.isMatchWorkspaces=isMatchWorkspaces;findWorkspaceRoot.default=findWorkspaceRoot;core$3.default=findWorkspaceRoot;const core_1=core$3;var findYarnWorkspaceRoot2=core_1.findWorkspaceRoot;var findUp$1={exports:{}};var locatePath={exports:{}};class Node{/// value;
/// next;
constructor(value){this.value=value;// TODO: Remove this when targeting Node.js 12.
this.next=undefined;}}let Queue$1=class Queue{// TODO: Use private class fields when targeting Node.js 12.
// #_head;
// #_tail;
// #_size;
constructor(){this.clear();}enqueue(value){const node=new Node(value);if(this._head){this._tail.next=node;this._tail=node;}else{this._head=node;this._tail=node;}this._size++;}dequeue(){const current=this._head;if(!current){return;}this._head=this._head.next;this._size--;return current.value;}clear(){this._head=undefined;this._tail=undefined;this._size=0;}get size(){return this._size;}*[Symbol.iterator](){let current=this._head;while(current){yield current.value;current=current.next;}}};var yoctoQueue=Queue$1;const Queue=yoctoQueue;const pLimit$1=concurrency=>{if(!((Number.isInteger(concurrency)||concurrency===Infinity)&&concurrency>0)){throw new TypeError('Expected `concurrency` to be a number from 1 and up');}const queue=new Queue();let activeCount=0;const next=()=>{activeCount--;if(queue.size>0){queue.dequeue()();}};const run=async function(fn,resolve){for(var _len5=arguments.length,args=new Array(_len5>2?_len5-2:0),_key5=2;_key5<_len5;_key5++){args[_key5-2]=arguments[_key5];}activeCount++;const result=(async()=>fn(...args))();resolve(result);try{await result;}catch{}next();};const enqueue=function(fn,resolve){for(var _len6=arguments.length,args=new Array(_len6>2?_len6-2:0),_key6=2;_key6<_len6;_key6++){args[_key6-2]=arguments[_key6];}queue.enqueue(run.bind(null,fn,resolve,...args));(async()=>{// This function needs to wait until the next microtask before comparing
// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously
// when the run function is dequeued and called. The comparison in the if-statement
// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.
await Promise.resolve();if(activeCount<concurrency&&queue.size>0){queue.dequeue()();}})();};const generator=function(fn){for(var _len7=arguments.length,args=new Array(_len7>1?_len7-1:0),_key7=1;_key7<_len7;_key7++){args[_key7-1]=arguments[_key7];}return new Promise(resolve=>{enqueue(fn,resolve,...args);});};Object.defineProperties(generator,{activeCount:{get:()=>activeCount},pendingCount:{get:()=>queue.size},clearQueue:{value:()=>{queue.clear();}}});return generator;};var pLimit_1=pLimit$1;const pLimit=pLimit_1;class EndError extends Error{constructor(value){super();this.value=value;}}// The input can also be a promise, so we await it
const testElement=async(element,tester)=>tester(await element);// The input can also be a promise, so we `Promise.all()` them both
const finder=async element=>{const values=await Promise.all(element);if(values[1]===true){throw new EndError(values[0]);}return false;};const pLocate$1=async(iterable,tester,options)=>{options={concurrency:Infinity,preserveOrder:true,...options};const limit=pLimit(options.concurrency);// Start all the promises concurrently with optional limit
const items=[...iterable].map(element=>[element,limit(testElement,element,tester)]);// Check the promises either serially or concurrently
const checkLimit=pLimit(options.preserveOrder?1:Infinity);try{await Promise.all(items.map(element=>checkLimit(finder,element)));}catch(error){if(error instanceof EndError){return error.value;}throw error;}};var pLocate_1=pLocate$1;const path$9=path__default.default;const fs$7=require$$0__default.default;const{promisify:promisify$1}=require$$0__default$5.default;const pLocate=pLocate_1;const fsStat=promisify$1(fs$7.stat);const fsLStat=promisify$1(fs$7.lstat);const typeMappings={directory:'isDirectory',file:'isFile'};function checkType(_ref36){let{type}=_ref36;if(type in typeMappings){return;}throw new Error("Invalid type specified: ".concat(type));}const matchType=(type,stat)=>type===undefined||stat[typeMappings[type]]();locatePath.exports=async(paths,options)=>{options={cwd:process.cwd(),type:'file',allowSymlinks:true,...options};checkType(options);const statFn=options.allowSymlinks?fsStat:fsLStat;return pLocate(paths,async path_=>{try{const stat=await statFn(path$9.resolve(options.cwd,path_));return matchType(options.type,stat);}catch{return false;}},options);};locatePath.exports.sync=(paths,options)=>{options={cwd:process.cwd(),allowSymlinks:true,type:'file',...options};checkType(options);const statFn=options.allowSymlinks?fs$7.statSync:fs$7.lstatSync;for(const path_ of paths){try{const stat=statFn(path$9.resolve(options.cwd,path_));if(matchType(options.type,stat)){return path_;}}catch{}}};var locatePathExports=locatePath.exports;var pathExists$4={exports:{}};const fs$6=require$$0__default.default;const{promisify}=require$$0__default$5.default;const pAccess=promisify(fs$6.access);pathExists$4.exports=async path=>{try{await pAccess(path);return true;}catch(_){return false;}};pathExists$4.exports.sync=path=>{try{fs$6.accessSync(path);return true;}catch(_){return false;}};var pathExistsExports=pathExists$4.exports;(function(module){const path=path__default.default;const locatePath=locatePathExports;const pathExists=pathExistsExports;const stop=Symbol('findUp.stop');module.exports=async function(name){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let directory=path.resolve(options.cwd||'');const{root}=path.parse(directory);const paths=[].concat(name);const runMatcher=async locateOptions=>{if(typeof name!=='function'){return locatePath(paths,locateOptions);}const foundPath=await name(locateOptions.cwd);if(typeof foundPath==='string'){return locatePath([foundPath],locateOptions);}return foundPath;};// eslint-disable-next-line no-constant-condition
while(true){// eslint-disable-next-line no-await-in-loop
const foundPath=await runMatcher({...options,cwd:directory});if(foundPath===stop){return;}if(foundPath){return path.resolve(directory,foundPath);}if(directory===root){return;}directory=path.dirname(directory);}};module.exports.sync=function(name){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let directory=path.resolve(options.cwd||'');const{root}=path.parse(directory);const paths=[].concat(name);const runMatcher=locateOptions=>{if(typeof name!=='function'){return locatePath.sync(paths,locateOptions);}const foundPath=name(locateOptions.cwd);if(typeof foundPath==='string'){return locatePath.sync([foundPath],locateOptions);}return foundPath;};// eslint-disable-next-line no-constant-condition
while(true){const foundPath=runMatcher({...options,cwd:directory});if(foundPath===stop){return;}if(foundPath){return path.resolve(directory,foundPath);}if(directory===root){return;}directory=path.dirname(directory);}};module.exports.exists=pathExists;module.exports.sync.exists=pathExists.sync;module.exports.stop=stop;})(findUp$1);var findUpExports=findUp$1.exports;var loadYamlFile$1={exports:{}};const processFn=(fn,options)=>function(){for(var _len8=arguments.length,args=new Array(_len8),_key8=0;_key8<_len8;_key8++){args[_key8]=arguments[_key8];}const P=options.promiseModule;return new P((resolve,reject)=>{if(options.multiArgs){args.push(function(){for(var _len9=arguments.length,result=new Array(_len9),_key9=0;_key9<_len9;_key9++){result[_key9]=arguments[_key9];}if(options.errorFirst){if(result[0]){reject(result);}else{result.shift();resolve(result);}}else{resolve(result);}});}else if(options.errorFirst){args.push((error,result)=>{if(error){reject(error);}else{resolve(result);}});}else{args.push(resolve);}fn.apply(this,args);});};var pify$1=(input,options)=>{options=Object.assign({exclude:[/.+(Sync|Stream)$/],errorFirst:true,promiseModule:Promise},options);const objType=typeof input;if(!(input!==null&&(objType==='object'||objType==='function'))){throw new TypeError("Expected `input` to be a `Function` or `Object`, got `".concat(input===null?'null':objType,"`"));}const filter=key=>{const match=pattern=>typeof pattern==='string'?key===pattern:pattern.test(key);return options.include?options.include.some(match):!options.exclude.some(match);};let ret;if(objType==='function'){ret=function(){for(var _len10=arguments.length,args=new Array(_len10),_key10=0;_key10<_len10;_key10++){args[_key10]=arguments[_key10];}return options.excludeMain?input(...args):processFn(input,options).apply(this,args);};}else{ret=Object.create(Object.getPrototypeOf(input));}for(const key in input){// eslint-disable-line guard-for-in
const property=input[key];ret[key]=typeof property==='function'&&filter(key)?processFn(property,options):property;}return ret;};var stripBom$1=x=>{if(typeof x!=='string'){throw new TypeError('Expected a string, got '+typeof x);}// Catches EFBBBF (UTF-8 BOM) because the buffer-to-string
// conversion translates it to FEFF (UTF-16 BOM)
if(x.charCodeAt(0)===0xFEFF){return x.slice(1);}return x;};var jsYaml$1={};var loader$1={};var common$7={};function isNothing(subject){return typeof subject==='undefined'||subject===null;}function isObject$3(subject){return typeof subject==='object'&&subject!==null;}function toArray$1(sequence){if(Array.isArray(sequence))return sequence;else if(isNothing(sequence))return[];return[sequence];}function extend$2(target,source){var index,length,key,sourceKeys;if(source){sourceKeys=Object.keys(source);for(index=0,length=sourceKeys.length;index<length;index+=1){key=sourceKeys[index];target[key]=source[key];}}return target;}function repeat$1(string,count){var result='',cycle;for(cycle=0;cycle<count;cycle+=1){result+=string;}return result;}function isNegativeZero(number){return number===0&&Number.NEGATIVE_INFINITY===1/number;}common$7.isNothing=isNothing;common$7.isObject=isObject$3;common$7.toArray=toArray$1;common$7.repeat=repeat$1;common$7.isNegativeZero=isNegativeZero;common$7.extend=extend$2;function YAMLException$4(reason,mark){// Super constructor
Error.call(this);this.name='YAMLException';this.reason=reason;this.mark=mark;this.message=(this.reason||'(unknown reason)')+(this.mark?' '+this.mark.toString():'');// Include stack trace in error object
if(Error.captureStackTrace){// Chrome and NodeJS
Error.captureStackTrace(this,this.constructor);}else{// FF, IE 10+ and Safari 6+. Fallback for others
this.stack=new Error().stack||'';}}// Inherit from Error
YAMLException$4.prototype=Object.create(Error.prototype);YAMLException$4.prototype.constructor=YAMLException$4;YAMLException$4.prototype.toString=function toString(compact){var result=this.name+': ';result+=this.reason||'(unknown reason)';if(!compact&&this.mark){result+=' '+this.mark.toString();}return result;};var exception=YAMLException$4;var common$6=common$7;function Mark$1(name,buffer,position,line,column){this.name=name;this.buffer=buffer;this.position=position;this.line=line;this.column=column;}Mark$1.prototype.getSnippet=function getSnippet(indent,maxLength){var head,start,tail,end,snippet;if(!this.buffer)return null;indent=indent||4;maxLength=maxLength||75;head='';start=this.position;while(start>0&&'\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(start-1))===-1){start-=1;if(this.position-start>maxLength/2-1){head=' ... ';start+=5;break;}}tail='';end=this.position;while(end<this.buffer.length&&'\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(end))===-1){end+=1;if(end-this.position>maxLength/2-1){tail=' ... ';end-=5;break;}}snippet=this.buffer.slice(start,end);return common$6.repeat(' ',indent)+head+snippet+tail+'\n'+common$6.repeat(' ',indent+this.position-start+head.length)+'^';};Mark$1.prototype.toString=function toString(compact){var snippet,where='';if(this.name){where+='in "'+this.name+'" ';}where+='at line '+(this.line+1)+', column '+(this.column+1);if(!compact){snippet=this.getSnippet();if(snippet){where+=':\n'+snippet;}}return where;};var mark=Mark$1;var YAMLException$3=exception;var TYPE_CONSTRUCTOR_OPTIONS=['kind','resolve','construct','instanceOf','predicate','represent','defaultStyle','styleAliases'];var YAML_NODE_KINDS=['scalar','sequence','mapping'];function compileStyleAliases(map){var result={};if(map!==null){Object.keys(map).forEach(function(style){map[style].forEach(function(alias){result[String(alias)]=style;});});}return result;}function Type$h(tag,options){options=options||{};Object.keys(options).forEach(function(name){if(TYPE_CONSTRUCTOR_OPTIONS.indexOf(name)===-1){throw new YAMLException$3('Unknown option "'+name+'" is met in definition of "'+tag+'" YAML type.');}});// TODO: Add tag format check.
this.tag=tag;this.kind=options['kind']||null;this.resolve=options['resolve']||function(){return true;};this.construct=options['construct']||function(data){return data;};this.instanceOf=options['instanceOf']||null;this.predicate=options['predicate']||null;this.represent=options['represent']||null;this.defaultStyle=options['defaultStyle']||null;this.styleAliases=compileStyleAliases(options['styleAliases']||null);if(YAML_NODE_KINDS.indexOf(this.kind)===-1){throw new YAMLException$3('Unknown kind "'+this.kind+'" is specified for "'+tag+'" YAML type.');}}var type=Type$h;/*eslint-disable max-len*/var common$5=common$7;var YAMLException$2=exception;var Type$g=type;function compileList(schema,name,result){var exclude=[];schema.include.forEach(function(includedSchema){result=compileList(includedSchema,name,result);});schema[name].forEach(function(currentType){result.forEach(function(previousType,previousIndex){if(previousType.tag===currentType.tag&&previousType.kind===currentType.kind){exclude.push(previousIndex);}});result.push(currentType);});return result.filter(function(type,index){return exclude.indexOf(index)===-1;});}function compileMap(/* lists... */){var result={scalar:{},sequence:{},mapping:{},fallback:{}},index,length;function collectType(type){result[type.kind][type.tag]=result['fallback'][type.tag]=type;}for(index=0,length=arguments.length;index<length;index+=1){arguments[index].forEach(collectType);}return result;}function Schema$5(definition){this.include=definition.include||[];this.implicit=definition.implicit||[];this.explicit=definition.explicit||[];this.implicit.forEach(function(type){if(type.loadKind&&type.loadKind!=='scalar'){throw new YAMLException$2('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');}});this.compiledImplicit=compileList(this,'implicit',[]);this.compiledExplicit=compileList(this,'explicit',[]);this.compiledTypeMap=compileMap(this.compiledImplicit,this.compiledExplicit);}Schema$5.DEFAULT=null;Schema$5.create=function createSchema(){var schemas,types;switch(arguments.length){case 1:schemas=Schema$5.DEFAULT;types=arguments[0];break;case 2:schemas=arguments[0];types=arguments[1];break;default:throw new YAMLException$2('Wrong number of arguments for Schema.create function');}schemas=common$5.toArray(schemas);types=common$5.toArray(types);if(!schemas.every(function(schema){return schema instanceof Schema$5;})){throw new YAMLException$2('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');}if(!types.every(function(type){return type instanceof Type$g;})){throw new YAMLException$2('Specified list of YAML types (or a single Type object) contains a non-Type object.');}return new Schema$5({include:schemas,explicit:types});};var schema=Schema$5;var Type$f=type;var str=new Type$f('tag:yaml.org,2002:str',{kind:'scalar',construct:function(data){return data!==null?data:'';}});var Type$e=type;var seq=new Type$e('tag:yaml.org,2002:seq',{kind:'sequence',construct:function(data){return data!==null?data:[];}});var Type$d=type;var map$1=new Type$d('tag:yaml.org,2002:map',{kind:'mapping',construct:function(data){return data!==null?data:{};}});var Schema$4=schema;var failsafe=new Schema$4({explicit:[str,seq,map$1]});var Type$c=type;function resolveYamlNull(data){if(data===null)return true;var max=data.length;return max===1&&data==='~'||max===4&&(data==='null'||data==='Null'||data==='NULL');}function constructYamlNull(){return null;}function isNull(object){return object===null;}var _null=new Type$c('tag:yaml.org,2002:null',{kind:'scalar',resolve:resolveYamlNull,construct:constructYamlNull,predicate:isNull,represent:{canonical:function(){return'~';},lowercase:function(){return'null';},uppercase:function(){return'NULL';},camelcase:function(){return'Null';}},defaultStyle:'lowercase'});var Type$b=type;function resolveYamlBoolean(data){if(data===null)return false;var max=data.length;return max===4&&(data==='true'||data==='True'||data==='TRUE')||max===5&&(data==='false'||data==='False'||data==='FALSE');}function constructYamlBoolean(data){return data==='true'||data==='True'||data==='TRUE';}function isBoolean(object){return Object.prototype.toString.call(object)==='[object Boolean]';}var bool=new Type$b('tag:yaml.org,2002:bool',{kind:'scalar',resolve:resolveYamlBoolean,construct:constructYamlBoolean,predicate:isBoolean,represent:{lowercase:function(object){return object?'true':'false';},uppercase:function(object){return object?'TRUE':'FALSE';},camelcase:function(object){return object?'True':'False';}},defaultStyle:'lowercase'});var common$4=common$7;var Type$a=type;function isHexCode(c){return 0x30/* 0 */<=c&&c<=0x39/* 9 */||0x41/* A */<=c&&c<=0x46/* F */||0x61/* a */<=c&&c<=0x66/* f */;}function isOctCode(c){return 0x30/* 0 */<=c&&c<=0x37/* 7 */;}function isDecCode(c){return 0x30/* 0 */<=c&&c<=0x39/* 9 */;}function resolveYamlInteger(data){if(data===null)return false;var max=data.length,index=0,hasDigits=false,ch;if(!max)return false;ch=data[index];// sign
if(ch==='-'||ch==='+'){ch=data[++index];}if(ch==='0'){// 0
if(index+1===max)return true;ch=data[++index];// base 2, base 8, base 16
if(ch==='b'){// base 2
index++;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(ch!=='0'&&ch!=='1')return false;hasDigits=true;}return hasDigits&&ch!=='_';}if(ch==='x'){// base 16
index++;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(!isHexCode(data.charCodeAt(index)))return false;hasDigits=true;}return hasDigits&&ch!=='_';}// base 8
for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(!isOctCode(data.charCodeAt(index)))return false;hasDigits=true;}return hasDigits&&ch!=='_';}// base 10 (except 0) or base 60
// value should not start with `_`;
if(ch==='_')return false;for(;index<max;index++){ch=data[index];if(ch==='_')continue;if(ch===':')break;if(!isDecCode(data.charCodeAt(index))){return false;}hasDigits=true;}// Should have digits and should not end with `_`
if(!hasDigits||ch==='_')return false;// if !base60 - done;
if(ch!==':')return true;// base60 almost not used, no needs to optimize
return /^(:[0-5]?[0-9])+$/.test(data.slice(index));}function constructYamlInteger(data){var value=data,sign=1,ch,base,digits=[];if(value.indexOf('_')!==-1){value=value.replace(/_/g,'');}ch=value[0];if(ch==='-'||ch==='+'){if(ch==='-')sign=-1;value=value.slice(1);ch=value[0];}if(value==='0')return 0;if(ch==='0'){if(value[1]==='b')return sign*parseInt(value.slice(2),2);if(value[1]==='x')return sign*parseInt(value,16);return sign*parseInt(value,8);}if(value.indexOf(':')!==-1){value.split(':').forEach(function(v){digits.unshift(parseInt(v,10));});value=0;base=1;digits.forEach(function(d){value+=d*base;base*=60;});return sign*value;}return sign*parseInt(value,10);}function isInteger(object){return Object.prototype.toString.call(object)==='[object Number]'&&object%1===0&&!common$4.isNegativeZero(object);}var int=new Type$a('tag:yaml.org,2002:int',{kind:'scalar',resolve:resolveYamlInteger,construct:constructYamlInteger,predicate:isInteger,represent:{binary:function(obj){return obj>=0?'0b'+obj.toString(2):'-0b'+obj.toString(2).slice(1);},octal:function(obj){return obj>=0?'0'+obj.toString(8):'-0'+obj.toString(8).slice(1);},decimal:function(obj){return obj.toString(10);},/* eslint-disable max-len */hexadecimal:function(obj){return obj>=0?'0x'+obj.toString(16).toUpperCase():'-0x'+obj.toString(16).toUpperCase().slice(1);}},defaultStyle:'decimal',styleAliases:{binary:[2,'bin'],octal:[8,'oct'],decimal:[10,'dec'],hexadecimal:[16,'hex']}});var common$3=common$7;var Type$9=type;var YAML_FLOAT_PATTERN=new RegExp(// 2.5e4, 2.5 and integers
'^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?'+// .2e4, .2
// special case, seems not from spec
'|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?'+// 20:59
'|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*'+// .inf
'|[-+]?\\.(?:inf|Inf|INF)'+// .nan
'|\\.(?:nan|NaN|NAN))$');function resolveYamlFloat(data){if(data===null)return false;if(!YAML_FLOAT_PATTERN.test(data)||// Quick hack to not allow integers end with `_`
// Probably should update regexp & check speed
data[data.length-1]==='_'){return false;}return true;}function constructYamlFloat(data){var value,sign,base,digits;value=data.replace(/_/g,'').toLowerCase();sign=value[0]==='-'?-1:1;digits=[];if('+-'.indexOf(value[0])>=0){value=value.slice(1);}if(value==='.inf'){return sign===1?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;}else if(value==='.nan'){return NaN;}else if(value.indexOf(':')>=0){value.split(':').forEach(function(v){digits.unshift(parseFloat(v,10));});value=0.0;base=1;digits.forEach(function(d){value+=d*base;base*=60;});return sign*value;}return sign*parseFloat(value,10);}var SCIENTIFIC_WITHOUT_DOT=/^[-+]?[0-9]+e/;function representYamlFloat(object,style){var res;if(isNaN(object)){switch(style){case'lowercase':return'.nan';case'uppercase':return'.NAN';case'camelcase':return'.NaN';}}else if(Number.POSITIVE_INFINITY===object){switch(style){case'lowercase':return'.inf';case'uppercase':return'.INF';case'camelcase':return'.Inf';}}else if(Number.NEGATIVE_INFINITY===object){switch(style){case'lowercase':return'-.inf';case'uppercase':return'-.INF';case'camelcase':return'-.Inf';}}else if(common$3.isNegativeZero(object)){return'-0.0';}res=object.toString(10);// JS stringifier can build scientific format without dots: 5e-100,
// while YAML requres dot: 5.e-100. Fix it with simple hack
return SCIENTIFIC_WITHOUT_DOT.test(res)?res.replace('e','.e'):res;}function isFloat(object){return Object.prototype.toString.call(object)==='[object Number]'&&(object%1!==0||common$3.isNegativeZero(object));}var float=new Type$9('tag:yaml.org,2002:float',{kind:'scalar',resolve:resolveYamlFloat,construct:constructYamlFloat,predicate:isFloat,represent:representYamlFloat,defaultStyle:'lowercase'});var Schema$3=schema;var json=new Schema$3({include:[failsafe],implicit:[_null,bool,int,float]});var Schema$2=schema;var core$2=new Schema$2({include:[json]});var Type$8=type;var YAML_DATE_REGEXP=new RegExp('^([0-9][0-9][0-9][0-9])'+// [1] year
'-([0-9][0-9])'+// [2] month
'-([0-9][0-9])$');// [3] day
var YAML_TIMESTAMP_REGEXP=new RegExp('^([0-9][0-9][0-9][0-9])'+// [1] year
'-([0-9][0-9]?)'+// [2] month
'-([0-9][0-9]?)'+// [3] day
'(?:[Tt]|[ \\t]+)'+// ...
'([0-9][0-9]?)'+// [4] hour
':([0-9][0-9])'+// [5] minute
':([0-9][0-9])'+// [6] second
'(?:\\.([0-9]*))?'+// [7] fraction
'(?:[ \\t]*(Z|([-+])([0-9][0-9]?)'+// [8] tz [9] tz_sign [10] tz_hour
'(?::([0-9][0-9]))?))?$');// [11] tz_minute
function resolveYamlTimestamp(data){if(data===null)return false;if(YAML_DATE_REGEXP.exec(data)!==null)return true;if(YAML_TIMESTAMP_REGEXP.exec(data)!==null)return true;return false;}function constructYamlTimestamp(data){var match,year,month,day,hour,minute,second,fraction=0,delta=null,tz_hour,tz_minute,date;match=YAML_DATE_REGEXP.exec(data);if(match===null)match=YAML_TIMESTAMP_REGEXP.exec(data);if(match===null)throw new Error('Date resolve error');// match: [1] year [2] month [3] day
year=+match[1];month=+match[2]-1;// JS month starts with 0
day=+match[3];if(!match[4]){// no hour
return new Date(Date.UTC(year,month,day));}// match: [4] hour [5] minute [6] second [7] fraction
hour=+match[4];minute=+match[5];second=+match[6];if(match[7]){fraction=match[7].slice(0,3);while(fraction.length<3){// milli-seconds
fraction+='0';}fraction=+fraction;}// match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute
if(match[9]){tz_hour=+match[10];tz_minute=+(match[11]||0);delta=(tz_hour*60+tz_minute)*60000;// delta in mili-seconds
if(match[9]==='-')delta=-delta;}date=new Date(Date.UTC(year,month,day,hour,minute,second,fraction));if(delta)date.setTime(date.getTime()-delta);return date;}function representYamlTimestamp(object/*, style*/){return object.toISOString();}var timestamp$1=new Type$8('tag:yaml.org,2002:timestamp',{kind:'scalar',resolve:resolveYamlTimestamp,construct:constructYamlTimestamp,instanceOf:Date,represent:representYamlTimestamp});var Type$7=type;function resolveYamlMerge(data){return data==='<<'||data===null;}var merge$2=new Type$7('tag:yaml.org,2002:merge',{kind:'scalar',resolve:resolveYamlMerge});/*eslint-disable no-bitwise*/var NodeBuffer;try{// A trick for browserified version, to not include `Buffer` shim
var _require$1=commonjsRequire;NodeBuffer=_require$1('buffer').Buffer;}catch(__){}var Type$6=type;// [ 64, 65, 66 ] -> [ padding, CR, LF ]
var BASE64_MAP='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';function resolveYamlBinary(data){if(data===null)return false;var code,idx,bitlen=0,max=data.length,map=BASE64_MAP;// Convert one by one.
for(idx=0;idx<max;idx++){code=map.indexOf(data.charAt(idx));// Skip CR/LF
if(code>64)continue;// Fail on illegal characters
if(code<0)return false;bitlen+=6;}// If there are any bits left, source was corrupted
return bitlen%8===0;}function constructYamlBinary(data){var idx,tailbits,input=data.replace(/[\r\n=]/g,''),// remove CR/LF & padding to simplify scan
max=input.length,map=BASE64_MAP,bits=0,result=[];// Collect by 6*4 bits (3 bytes)
for(idx=0;idx<max;idx++){if(idx%4===0&&idx){result.push(bits>>16&0xFF);result.push(bits>>8&0xFF);result.push(bits&0xFF);}bits=bits<<6|map.indexOf(input.charAt(idx));}// Dump tail
tailbits=max%4*6;if(tailbits===0){result.push(bits>>16&0xFF);result.push(bits>>8&0xFF);result.push(bits&0xFF);}else if(tailbits===18){result.push(bits>>10&0xFF);result.push(bits>>2&0xFF);}else if(tailbits===12){result.push(bits>>4&0xFF);}// Wrap into Buffer for NodeJS and leave Array for browser
if(NodeBuffer){// Support node 6.+ Buffer API when available
return NodeBuffer.from?NodeBuffer.from(result):new NodeBuffer(result);}return result;}function representYamlBinary(object/*, style*/){var result='',bits=0,idx,tail,max=object.length,map=BASE64_MAP;// Convert every three bytes to 4 ASCII characters.
for(idx=0;idx<max;idx++){if(idx%3===0&&idx){result+=map[bits>>18&0x3F];result+=map[bits>>12&0x3F];result+=map[bits>>6&0x3F];result+=map[bits&0x3F];}bits=(bits<<8)+object[idx];}// Dump tail
tail=max%3;if(tail===0){result+=map[bits>>18&0x3F];result+=map[bits>>12&0x3F];result+=map[bits>>6&0x3F];result+=map[bits&0x3F];}else if(tail===2){result+=map[bits>>10&0x3F];result+=map[bits>>4&0x3F];result+=map[bits<<2&0x3F];result+=map[64];}else if(tail===1){result+=map[bits>>2&0x3F];result+=map[bits<<4&0x3F];result+=map[64];result+=map[64];}return result;}function isBinary(object){return NodeBuffer&&NodeBuffer.isBuffer(object);}var binary$1=new Type$6('tag:yaml.org,2002:binary',{kind:'scalar',resolve:resolveYamlBinary,construct:constructYamlBinary,predicate:isBinary,represent:representYamlBinary});var Type$5=type;var _hasOwnProperty$3=Object.prototype.hasOwnProperty;var _toString$2=Object.prototype.toString;function resolveYamlOmap(data){if(data===null)return true;var objectKeys=[],index,length,pair,pairKey,pairHasKey,object=data;for(index=0,length=object.length;index<length;index+=1){pair=object[index];pairHasKey=false;if(_toString$2.call(pair)!=='[object Object]')return false;for(pairKey in pair){if(_hasOwnProperty$3.call(pair,pairKey)){if(!pairHasKey)pairHasKey=true;else return false;}}if(!pairHasKey)return false;if(objectKeys.indexOf(pairKey)===-1)objectKeys.push(pairKey);else return false;}return true;}function constructYamlOmap(data){return data!==null?data:[];}var omap=new Type$5('tag:yaml.org,2002:omap',{kind:'sequence',resolve:resolveYamlOmap,construct:constructYamlOmap});var Type$4=type;var _toString$1=Object.prototype.toString;function resolveYamlPairs(data){if(data===null)return true;var index,length,pair,keys,result,object=data;result=new Array(object.length);for(index=0,length=object.length;index<length;index+=1){pair=object[index];if(_toString$1.call(pair)!=='[object Object]')return false;keys=Object.keys(pair);if(keys.length!==1)return false;result[index]=[keys[0],pair[keys[0]]];}return true;}function constructYamlPairs(data){if(data===null)return[];var index,length,pair,keys,result,object=data;result=new Array(object.length);for(index=0,length=object.length;index<length;index+=1){pair=object[index];keys=Object.keys(pair);result[index]=[keys[0],pair[keys[0]]];}return result;}var pairs$1=new Type$4('tag:yaml.org,2002:pairs',{kind:'sequence',resolve:resolveYamlPairs,construct:constructYamlPairs});var Type$3=type;var _hasOwnProperty$2=Object.prototype.hasOwnProperty;function resolveYamlSet(data){if(data===null)return true;var key,object=data;for(key in object){if(_hasOwnProperty$2.call(object,key)){if(object[key]!==null)return false;}}return true;}function constructYamlSet(data){return data!==null?data:{};}var set=new Type$3('tag:yaml.org,2002:set',{kind:'mapping',resolve:resolveYamlSet,construct:constructYamlSet});var Schema$1=schema;var default_safe=new Schema$1({include:[core$2],implicit:[timestamp$1,merge$2],explicit:[binary$1,omap,pairs$1,set]});var Type$2=type;function resolveJavascriptUndefined(){return true;}function constructJavascriptUndefined(){/*eslint-disable no-undefined*/return undefined;}function representJavascriptUndefined(){return'';}function isUndefined(object){return typeof object==='undefined';}var _undefined=new Type$2('tag:yaml.org,2002:js/undefined',{kind:'scalar',resolve:resolveJavascriptUndefined,construct:constructJavascriptUndefined,predicate:isUndefined,represent:representJavascriptUndefined});var Type$1=type;function resolveJavascriptRegExp(data){if(data===null)return false;if(data.length===0)return false;var regexp=data,tail=/\/([gim]*)$/.exec(data),modifiers='';// if regexp starts with '/' it can have modifiers and must be properly closed
// `/foo/gim` - modifiers tail can be maximum 3 chars
if(regexp[0]==='/'){if(tail)modifiers=tail[1];if(modifiers.length>3)return false;// if expression starts with /, is should be properly terminated
if(regexp[regexp.length-modifiers.length-1]!=='/')return false;}return true;}function constructJavascriptRegExp(data){var regexp=data,tail=/\/([gim]*)$/.exec(data),modifiers='';// `/foo/gim` - tail can be maximum 4 chars
if(regexp[0]==='/'){if(tail)modifiers=tail[1];regexp=regexp.slice(1,regexp.length-modifiers.length-1);}return new RegExp(regexp,modifiers);}function representJavascriptRegExp(object/*, style*/){var result='/'+object.source+'/';if(object.global)result+='g';if(object.multiline)result+='m';if(object.ignoreCase)result+='i';return result;}function isRegExp(object){return Object.prototype.toString.call(object)==='[object RegExp]';}var regexp=new Type$1('tag:yaml.org,2002:js/regexp',{kind:'scalar',resolve:resolveJavascriptRegExp,construct:constructJavascriptRegExp,predicate:isRegExp,represent:representJavascriptRegExp});var esprima$3;// Browserified version does not have esprima
//
// 1. For node.js just require module as deps
// 2. For browser try to require mudule via external AMD system.
//    If not found - try to fallback to window.esprima. If not
//    found too - then fail to parse.
//
try{// workaround to exclude package from browserify list.
var _require=commonjsRequire;esprima$3=_require('esprima');}catch(_){/* eslint-disable no-redeclare */ /* global window */if(typeof window!=='undefined')esprima$3=window.esprima;}var Type=type;function resolveJavascriptFunction(data){if(data===null)return false;try{var source='('+data+')',ast=esprima$3.parse(source,{range:true});if(ast.type!=='Program'||ast.body.length!==1||ast.body[0].type!=='ExpressionStatement'||ast.body[0].expression.type!=='ArrowFunctionExpression'&&ast.body[0].expression.type!=='FunctionExpression'){return false;}return true;}catch(err){return false;}}function constructJavascriptFunction(data){/*jslint evil:true*/var source='('+data+')',ast=esprima$3.parse(source,{range:true}),params=[],body;if(ast.type!=='Program'||ast.body.length!==1||ast.body[0].type!=='ExpressionStatement'||ast.body[0].expression.type!=='ArrowFunctionExpression'&&ast.body[0].expression.type!=='FunctionExpression'){throw new Error('Failed to resolve function');}ast.body[0].expression.params.forEach(function(param){params.push(param.name);});body=ast.body[0].expression.body.range;// Esprima's ranges include the first '{' and the last '}' characters on
// function expressions. So cut them out.
if(ast.body[0].expression.body.type==='BlockStatement'){/*eslint-disable no-new-func*/return new Function(params,source.slice(body[0]+1,body[1]-1));}// ES6 arrow functions can omit the BlockStatement. In that case, just return
// the body.
/*eslint-disable no-new-func*/return new Function(params,'return '+source.slice(body[0],body[1]));}function representJavascriptFunction(object/*, style*/){return object.toString();}function isFunction$1(object){return Object.prototype.toString.call(object)==='[object Function]';}var _function=new Type('tag:yaml.org,2002:js/function',{kind:'scalar',resolve:resolveJavascriptFunction,construct:constructJavascriptFunction,predicate:isFunction$1,represent:representJavascriptFunction});var Schema=schema;var default_full=Schema.DEFAULT=new Schema({include:[default_safe],explicit:[_undefined,regexp,_function]});/*eslint-disable max-len,no-use-before-define*/var common$2=common$7;var YAMLException$1=exception;var Mark=mark;var DEFAULT_SAFE_SCHEMA$1=default_safe;var DEFAULT_FULL_SCHEMA$1=default_full;var _hasOwnProperty$1=Object.prototype.hasOwnProperty;var CONTEXT_FLOW_IN=1;var CONTEXT_FLOW_OUT=2;var CONTEXT_BLOCK_IN=3;var CONTEXT_BLOCK_OUT=4;var CHOMPING_CLIP=1;var CHOMPING_STRIP=2;var CHOMPING_KEEP=3;var PATTERN_NON_PRINTABLE=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;var PATTERN_NON_ASCII_LINE_BREAKS=/[\x85\u2028\u2029]/;var PATTERN_FLOW_INDICATORS=/[,\[\]\{\}]/;var PATTERN_TAG_HANDLE=/^(?:!|!!|![a-z\-]+!)$/i;var PATTERN_TAG_URI=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function _class(obj){return Object.prototype.toString.call(obj);}function is_EOL(c){return c===0x0A/* LF */||c===0x0D/* CR */;}function is_WHITE_SPACE(c){return c===0x09/* Tab */||c===0x20/* Space */;}function is_WS_OR_EOL(c){return c===0x09/* Tab */||c===0x20/* Space */||c===0x0A/* LF */||c===0x0D/* CR */;}function is_FLOW_INDICATOR(c){return c===0x2C/* , */||c===0x5B/* [ */||c===0x5D/* ] */||c===0x7B/* { */||c===0x7D/* } */;}function fromHexCode(c){var lc;if(0x30/* 0 */<=c&&c<=0x39/* 9 */){return c-0x30;}/*eslint-disable no-bitwise*/lc=c|0x20;if(0x61/* a */<=lc&&lc<=0x66/* f */){return lc-0x61+10;}return-1;}function escapedHexLen(c){if(c===0x78/* x */){return 2;}if(c===0x75/* u */){return 4;}if(c===0x55/* U */){return 8;}return 0;}function fromDecimalCode(c){if(0x30/* 0 */<=c&&c<=0x39/* 9 */){return c-0x30;}return-1;}function simpleEscapeSequence(c){/* eslint-disable indent */return c===0x30/* 0 */?'\x00':c===0x61/* a */?'\x07':c===0x62/* b */?'\x08':c===0x74/* t */?'\x09':c===0x09/* Tab */?'\x09':c===0x6E/* n */?'\x0A':c===0x76/* v */?'\x0B':c===0x66/* f */?'\x0C':c===0x72/* r */?'\x0D':c===0x65/* e */?'\x1B':c===0x20/* Space */?' ':c===0x22/* " */?'\x22':c===0x2F/* / */?'/':c===0x5C/* \ */?'\x5C':c===0x4E/* N */?'\x85':c===0x5F/* _ */?'\xA0':c===0x4C/* L */?'\u2028':c===0x50/* P */?'\u2029':'';}function charFromCodepoint(c){if(c<=0xFFFF){return String.fromCharCode(c);}// Encode UTF-16 surrogate pair
// https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
return String.fromCharCode((c-0x010000>>10)+0xD800,(c-0x010000&0x03FF)+0xDC00);}var simpleEscapeCheck=new Array(256);// integer, for fast access
var simpleEscapeMap=new Array(256);for(var i=0;i<256;i++){simpleEscapeCheck[i]=simpleEscapeSequence(i)?1:0;simpleEscapeMap[i]=simpleEscapeSequence(i);}function State$1(input,options){this.input=input;this.filename=options['filename']||null;this.schema=options['schema']||DEFAULT_FULL_SCHEMA$1;this.onWarning=options['onWarning']||null;this.legacy=options['legacy']||false;this.json=options['json']||false;this.listener=options['listener']||null;this.implicitTypes=this.schema.compiledImplicit;this.typeMap=this.schema.compiledTypeMap;this.length=input.length;this.position=0;this.line=0;this.lineStart=0;this.lineIndent=0;this.documents=[];/*
  this.version;
  this.checkLineBreaks;
  this.tagMap;
  this.anchorMap;
  this.tag;
  this.anchor;
  this.kind;
  this.result;*/}function generateError(state,message){return new YAMLException$1(message,new Mark(state.filename,state.input,state.position,state.line,state.position-state.lineStart));}function throwError$1(state,message){throw generateError(state,message);}function throwWarning(state,message){if(state.onWarning){state.onWarning.call(null,generateError(state,message));}}var directiveHandlers={YAML:function handleYamlDirective(state,name,args){var match,major,minor;if(state.version!==null){throwError$1(state,'duplication of %YAML directive');}if(args.length!==1){throwError$1(state,'YAML directive accepts exactly one argument');}match=/^([0-9]+)\.([0-9]+)$/.exec(args[0]);if(match===null){throwError$1(state,'ill-formed argument of the YAML directive');}major=parseInt(match[1],10);minor=parseInt(match[2],10);if(major!==1){throwError$1(state,'unacceptable YAML version of the document');}state.version=args[0];state.checkLineBreaks=minor<2;if(minor!==1&&minor!==2){throwWarning(state,'unsupported YAML version of the document');}},TAG:function handleTagDirective(state,name,args){var handle,prefix;if(args.length!==2){throwError$1(state,'TAG directive accepts exactly two arguments');}handle=args[0];prefix=args[1];if(!PATTERN_TAG_HANDLE.test(handle)){throwError$1(state,'ill-formed tag handle (first argument) of the TAG directive');}if(_hasOwnProperty$1.call(state.tagMap,handle)){throwError$1(state,'there is a previously declared suffix for "'+handle+'" tag handle');}if(!PATTERN_TAG_URI.test(prefix)){throwError$1(state,'ill-formed tag prefix (second argument) of the TAG directive');}state.tagMap[handle]=prefix;}};function captureSegment(state,start,end,checkJson){var _position,_length,_character,_result;if(start<end){_result=state.input.slice(start,end);if(checkJson){for(_position=0,_length=_result.length;_position<_length;_position+=1){_character=_result.charCodeAt(_position);if(!(_character===0x09||0x20<=_character&&_character<=0x10FFFF)){throwError$1(state,'expected valid JSON character');}}}else if(PATTERN_NON_PRINTABLE.test(_result)){throwError$1(state,'the stream contains non-printable characters');}state.result+=_result;}}function mergeMappings(state,destination,source,overridableKeys){var sourceKeys,key,index,quantity;if(!common$2.isObject(source)){throwError$1(state,'cannot merge mappings; the provided source object is unacceptable');}sourceKeys=Object.keys(source);for(index=0,quantity=sourceKeys.length;index<quantity;index+=1){key=sourceKeys[index];if(!_hasOwnProperty$1.call(destination,key)){destination[key]=source[key];overridableKeys[key]=true;}}}function storeMappingPair(state,_result,overridableKeys,keyTag,keyNode,valueNode,startLine,startPos){var index,quantity;// The output is a plain object here, so keys can only be strings.
// We need to convert keyNode to a string, but doing so can hang the process
// (deeply nested arrays that explode exponentially using aliases).
if(Array.isArray(keyNode)){keyNode=Array.prototype.slice.call(keyNode);for(index=0,quantity=keyNode.length;index<quantity;index+=1){if(Array.isArray(keyNode[index])){throwError$1(state,'nested arrays are not supported inside keys');}if(typeof keyNode==='object'&&_class(keyNode[index])==='[object Object]'){keyNode[index]='[object Object]';}}}// Avoid code execution in load() via toString property
// (still use its own toString for arrays, timestamps,
// and whatever user schema extensions happen to have @@toStringTag)
if(typeof keyNode==='object'&&_class(keyNode)==='[object Object]'){keyNode='[object Object]';}keyNode=String(keyNode);if(_result===null){_result={};}if(keyTag==='tag:yaml.org,2002:merge'){if(Array.isArray(valueNode)){for(index=0,quantity=valueNode.length;index<quantity;index+=1){mergeMappings(state,_result,valueNode[index],overridableKeys);}}else{mergeMappings(state,_result,valueNode,overridableKeys);}}else{if(!state.json&&!_hasOwnProperty$1.call(overridableKeys,keyNode)&&_hasOwnProperty$1.call(_result,keyNode)){state.line=startLine||state.line;state.position=startPos||state.position;throwError$1(state,'duplicated mapping key');}_result[keyNode]=valueNode;delete overridableKeys[keyNode];}return _result;}function readLineBreak(state){var ch;ch=state.input.charCodeAt(state.position);if(ch===0x0A/* LF */){state.position++;}else if(ch===0x0D/* CR */){state.position++;if(state.input.charCodeAt(state.position)===0x0A/* LF */){state.position++;}}else{throwError$1(state,'a line break is expected');}state.line+=1;state.lineStart=state.position;}function skipSeparationSpace(state,allowComments,checkIndent){var lineBreaks=0,ch=state.input.charCodeAt(state.position);while(ch!==0){while(is_WHITE_SPACE(ch)){ch=state.input.charCodeAt(++state.position);}if(allowComments&&ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0x0A/* LF */&&ch!==0x0D/* CR */&&ch!==0);}if(is_EOL(ch)){readLineBreak(state);ch=state.input.charCodeAt(state.position);lineBreaks++;state.lineIndent=0;while(ch===0x20/* Space */){state.lineIndent++;ch=state.input.charCodeAt(++state.position);}}else{break;}}if(checkIndent!==-1&&lineBreaks!==0&&state.lineIndent<checkIndent){throwWarning(state,'deficient indentation');}return lineBreaks;}function testDocumentSeparator(state){var _position=state.position,ch;ch=state.input.charCodeAt(_position);// Condition state.position === state.lineStart is tested
// in parent on each call, for efficiency. No needs to test here again.
if((ch===0x2D/* - */||ch===0x2E/* . */)&&ch===state.input.charCodeAt(_position+1)&&ch===state.input.charCodeAt(_position+2)){_position+=3;ch=state.input.charCodeAt(_position);if(ch===0||is_WS_OR_EOL(ch)){return true;}}return false;}function writeFoldedLines(state,count){if(count===1){state.result+=' ';}else if(count>1){state.result+=common$2.repeat('\n',count-1);}}function readPlainScalar(state,nodeIndent,withinFlowCollection){var preceding,following,captureStart,captureEnd,hasPendingContent,_line,_lineStart,_lineIndent,_kind=state.kind,_result=state.result,ch;ch=state.input.charCodeAt(state.position);if(is_WS_OR_EOL(ch)||is_FLOW_INDICATOR(ch)||ch===0x23/* # */||ch===0x26/* & */||ch===0x2A/* * */||ch===0x21/* ! */||ch===0x7C/* | */||ch===0x3E/* > */||ch===0x27/* ' */||ch===0x22/* " */||ch===0x25/* % */||ch===0x40/* @ */||ch===0x60/* ` */){return false;}if(ch===0x3F/* ? */||ch===0x2D/* - */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL(following)||withinFlowCollection&&is_FLOW_INDICATOR(following)){return false;}}state.kind='scalar';state.result='';captureStart=captureEnd=state.position;hasPendingContent=false;while(ch!==0){if(ch===0x3A/* : */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL(following)||withinFlowCollection&&is_FLOW_INDICATOR(following)){break;}}else if(ch===0x23/* # */){preceding=state.input.charCodeAt(state.position-1);if(is_WS_OR_EOL(preceding)){break;}}else if(state.position===state.lineStart&&testDocumentSeparator(state)||withinFlowCollection&&is_FLOW_INDICATOR(ch)){break;}else if(is_EOL(ch)){_line=state.line;_lineStart=state.lineStart;_lineIndent=state.lineIndent;skipSeparationSpace(state,false,-1);if(state.lineIndent>=nodeIndent){hasPendingContent=true;ch=state.input.charCodeAt(state.position);continue;}else{state.position=captureEnd;state.line=_line;state.lineStart=_lineStart;state.lineIndent=_lineIndent;break;}}if(hasPendingContent){captureSegment(state,captureStart,captureEnd,false);writeFoldedLines(state,state.line-_line);captureStart=captureEnd=state.position;hasPendingContent=false;}if(!is_WHITE_SPACE(ch)){captureEnd=state.position+1;}ch=state.input.charCodeAt(++state.position);}captureSegment(state,captureStart,captureEnd,false);if(state.result){return true;}state.kind=_kind;state.result=_result;return false;}function readSingleQuotedScalar(state,nodeIndent){var ch,captureStart,captureEnd;ch=state.input.charCodeAt(state.position);if(ch!==0x27/* ' */){return false;}state.kind='scalar';state.result='';state.position++;captureStart=captureEnd=state.position;while((ch=state.input.charCodeAt(state.position))!==0){if(ch===0x27/* ' */){captureSegment(state,captureStart,state.position,true);ch=state.input.charCodeAt(++state.position);if(ch===0x27/* ' */){captureStart=state.position;state.position++;captureEnd=state.position;}else{return true;}}else if(is_EOL(ch)){captureSegment(state,captureStart,captureEnd,true);writeFoldedLines(state,skipSeparationSpace(state,false,nodeIndent));captureStart=captureEnd=state.position;}else if(state.position===state.lineStart&&testDocumentSeparator(state)){throwError$1(state,'unexpected end of the document within a single quoted scalar');}else{state.position++;captureEnd=state.position;}}throwError$1(state,'unexpected end of the stream within a single quoted scalar');}function readDoubleQuotedScalar(state,nodeIndent){var captureStart,captureEnd,hexLength,hexResult,tmp,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x22/* " */){return false;}state.kind='scalar';state.result='';state.position++;captureStart=captureEnd=state.position;while((ch=state.input.charCodeAt(state.position))!==0){if(ch===0x22/* " */){captureSegment(state,captureStart,state.position,true);state.position++;return true;}else if(ch===0x5C/* \ */){captureSegment(state,captureStart,state.position,true);ch=state.input.charCodeAt(++state.position);if(is_EOL(ch)){skipSeparationSpace(state,false,nodeIndent);// TODO: rework to inline fn with no type cast?
}else if(ch<256&&simpleEscapeCheck[ch]){state.result+=simpleEscapeMap[ch];state.position++;}else if((tmp=escapedHexLen(ch))>0){hexLength=tmp;hexResult=0;for(;hexLength>0;hexLength--){ch=state.input.charCodeAt(++state.position);if((tmp=fromHexCode(ch))>=0){hexResult=(hexResult<<4)+tmp;}else{throwError$1(state,'expected hexadecimal character');}}state.result+=charFromCodepoint(hexResult);state.position++;}else{throwError$1(state,'unknown escape sequence');}captureStart=captureEnd=state.position;}else if(is_EOL(ch)){captureSegment(state,captureStart,captureEnd,true);writeFoldedLines(state,skipSeparationSpace(state,false,nodeIndent));captureStart=captureEnd=state.position;}else if(state.position===state.lineStart&&testDocumentSeparator(state)){throwError$1(state,'unexpected end of the document within a double quoted scalar');}else{state.position++;captureEnd=state.position;}}throwError$1(state,'unexpected end of the stream within a double quoted scalar');}function readFlowCollection(state,nodeIndent){var readNext=true,_line,_tag=state.tag,_result,_anchor=state.anchor,following,terminator,isPair,isExplicitPair,isMapping,overridableKeys={},keyNode,keyTag,valueNode,ch;ch=state.input.charCodeAt(state.position);if(ch===0x5B/* [ */){terminator=0x5D;/* ] */isMapping=false;_result=[];}else if(ch===0x7B/* { */){terminator=0x7D;/* } */isMapping=true;_result={};}else{return false;}if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(++state.position);while(ch!==0){skipSeparationSpace(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if(ch===terminator){state.position++;state.tag=_tag;state.anchor=_anchor;state.kind=isMapping?'mapping':'sequence';state.result=_result;return true;}else if(!readNext){throwError$1(state,'missed comma between flow collection entries');}keyTag=keyNode=valueNode=null;isPair=isExplicitPair=false;if(ch===0x3F/* ? */){following=state.input.charCodeAt(state.position+1);if(is_WS_OR_EOL(following)){isPair=isExplicitPair=true;state.position++;skipSeparationSpace(state,true,nodeIndent);}}_line=state.line;composeNode(state,nodeIndent,CONTEXT_FLOW_IN,false,true);keyTag=state.tag;keyNode=state.result;skipSeparationSpace(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if((isExplicitPair||state.line===_line)&&ch===0x3A/* : */){isPair=true;ch=state.input.charCodeAt(++state.position);skipSeparationSpace(state,true,nodeIndent);composeNode(state,nodeIndent,CONTEXT_FLOW_IN,false,true);valueNode=state.result;}if(isMapping){storeMappingPair(state,_result,overridableKeys,keyTag,keyNode,valueNode);}else if(isPair){_result.push(storeMappingPair(state,null,overridableKeys,keyTag,keyNode,valueNode));}else{_result.push(keyNode);}skipSeparationSpace(state,true,nodeIndent);ch=state.input.charCodeAt(state.position);if(ch===0x2C/* , */){readNext=true;ch=state.input.charCodeAt(++state.position);}else{readNext=false;}}throwError$1(state,'unexpected end of the stream within a flow collection');}function readBlockScalar(state,nodeIndent){var captureStart,folding,chomping=CHOMPING_CLIP,didReadContent=false,detectedIndent=false,textIndent=nodeIndent,emptyLines=0,atMoreIndented=false,tmp,ch;ch=state.input.charCodeAt(state.position);if(ch===0x7C/* | */){folding=false;}else if(ch===0x3E/* > */){folding=true;}else{return false;}state.kind='scalar';state.result='';while(ch!==0){ch=state.input.charCodeAt(++state.position);if(ch===0x2B/* + */||ch===0x2D/* - */){if(CHOMPING_CLIP===chomping){chomping=ch===0x2B/* + */?CHOMPING_KEEP:CHOMPING_STRIP;}else{throwError$1(state,'repeat of a chomping mode identifier');}}else if((tmp=fromDecimalCode(ch))>=0){if(tmp===0){throwError$1(state,'bad explicit indentation width of a block scalar; it cannot be less than one');}else if(!detectedIndent){textIndent=nodeIndent+tmp-1;detectedIndent=true;}else{throwError$1(state,'repeat of an indentation width identifier');}}else{break;}}if(is_WHITE_SPACE(ch)){do{ch=state.input.charCodeAt(++state.position);}while(is_WHITE_SPACE(ch));if(ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(!is_EOL(ch)&&ch!==0);}}while(ch!==0){readLineBreak(state);state.lineIndent=0;ch=state.input.charCodeAt(state.position);while((!detectedIndent||state.lineIndent<textIndent)&&ch===0x20/* Space */){state.lineIndent++;ch=state.input.charCodeAt(++state.position);}if(!detectedIndent&&state.lineIndent>textIndent){textIndent=state.lineIndent;}if(is_EOL(ch)){emptyLines++;continue;}// End of the scalar.
if(state.lineIndent<textIndent){// Perform the chomping.
if(chomping===CHOMPING_KEEP){state.result+=common$2.repeat('\n',didReadContent?1+emptyLines:emptyLines);}else if(chomping===CHOMPING_CLIP){if(didReadContent){// i.e. only if the scalar is not empty.
state.result+='\n';}}// Break this `while` cycle and go to the funciton's epilogue.
break;}// Folded style: use fancy rules to handle line breaks.
if(folding){// Lines starting with white space characters (more-indented lines) are not folded.
if(is_WHITE_SPACE(ch)){atMoreIndented=true;// except for the first content line (cf. Example 8.1)
state.result+=common$2.repeat('\n',didReadContent?1+emptyLines:emptyLines);// End of more-indented block.
}else if(atMoreIndented){atMoreIndented=false;state.result+=common$2.repeat('\n',emptyLines+1);// Just one line break - perceive as the same line.
}else if(emptyLines===0){if(didReadContent){// i.e. only if we have already read some scalar content.
state.result+=' ';}// Several line breaks - perceive as different lines.
}else{state.result+=common$2.repeat('\n',emptyLines);}// Literal style: just add exact number of line breaks between content lines.
}else{// Keep all line breaks except the header line break.
state.result+=common$2.repeat('\n',didReadContent?1+emptyLines:emptyLines);}didReadContent=true;detectedIndent=true;emptyLines=0;captureStart=state.position;while(!is_EOL(ch)&&ch!==0){ch=state.input.charCodeAt(++state.position);}captureSegment(state,captureStart,state.position,false);}return true;}function readBlockSequence(state,nodeIndent){var _line,_tag=state.tag,_anchor=state.anchor,_result=[],following,detected=false,ch;if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(state.position);while(ch!==0){if(ch!==0x2D/* - */){break;}following=state.input.charCodeAt(state.position+1);if(!is_WS_OR_EOL(following)){break;}detected=true;state.position++;if(skipSeparationSpace(state,true,-1)){if(state.lineIndent<=nodeIndent){_result.push(null);ch=state.input.charCodeAt(state.position);continue;}}_line=state.line;composeNode(state,nodeIndent,CONTEXT_BLOCK_IN,false,true);_result.push(state.result);skipSeparationSpace(state,true,-1);ch=state.input.charCodeAt(state.position);if((state.line===_line||state.lineIndent>nodeIndent)&&ch!==0){throwError$1(state,'bad indentation of a sequence entry');}else if(state.lineIndent<nodeIndent){break;}}if(detected){state.tag=_tag;state.anchor=_anchor;state.kind='sequence';state.result=_result;return true;}return false;}function readBlockMapping(state,nodeIndent,flowIndent){var following,allowCompact,_line,_pos,_tag=state.tag,_anchor=state.anchor,_result={},overridableKeys={},keyTag=null,keyNode=null,valueNode=null,atExplicitKey=false,detected=false,ch;if(state.anchor!==null){state.anchorMap[state.anchor]=_result;}ch=state.input.charCodeAt(state.position);while(ch!==0){following=state.input.charCodeAt(state.position+1);_line=state.line;// Save the current line.
_pos=state.position;//
// Explicit notation case. There are two separate blocks:
// first for the key (denoted by "?") and second for the value (denoted by ":")
//
if((ch===0x3F/* ? */||ch===0x3A/* : */)&&is_WS_OR_EOL(following)){if(ch===0x3F/* ? */){if(atExplicitKey){storeMappingPair(state,_result,overridableKeys,keyTag,keyNode,null);keyTag=keyNode=valueNode=null;}detected=true;atExplicitKey=true;allowCompact=true;}else if(atExplicitKey){// i.e. 0x3A/* : */ === character after the explicit key.
atExplicitKey=false;allowCompact=true;}else{throwError$1(state,'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');}state.position+=1;ch=following;//
// Implicit notation case. Flow-style node as the key first, then ":", and the value.
//
}else if(composeNode(state,flowIndent,CONTEXT_FLOW_OUT,false,true)){if(state.line===_line){ch=state.input.charCodeAt(state.position);while(is_WHITE_SPACE(ch)){ch=state.input.charCodeAt(++state.position);}if(ch===0x3A/* : */){ch=state.input.charCodeAt(++state.position);if(!is_WS_OR_EOL(ch)){throwError$1(state,'a whitespace character is expected after the key-value separator within a block mapping');}if(atExplicitKey){storeMappingPair(state,_result,overridableKeys,keyTag,keyNode,null);keyTag=keyNode=valueNode=null;}detected=true;atExplicitKey=false;allowCompact=false;keyTag=state.tag;keyNode=state.result;}else if(detected){throwError$1(state,'can not read an implicit mapping pair; a colon is missed');}else{state.tag=_tag;state.anchor=_anchor;return true;// Keep the result of `composeNode`.
}}else if(detected){throwError$1(state,'can not read a block mapping entry; a multiline key may not be an implicit key');}else{state.tag=_tag;state.anchor=_anchor;return true;// Keep the result of `composeNode`.
}}else{break;// Reading is done. Go to the epilogue.
}//
// Common reading code for both explicit and implicit notations.
//
if(state.line===_line||state.lineIndent>nodeIndent){if(composeNode(state,nodeIndent,CONTEXT_BLOCK_OUT,true,allowCompact)){if(atExplicitKey){keyNode=state.result;}else{valueNode=state.result;}}if(!atExplicitKey){storeMappingPair(state,_result,overridableKeys,keyTag,keyNode,valueNode,_line,_pos);keyTag=keyNode=valueNode=null;}skipSeparationSpace(state,true,-1);ch=state.input.charCodeAt(state.position);}if(state.lineIndent>nodeIndent&&ch!==0){throwError$1(state,'bad indentation of a mapping entry');}else if(state.lineIndent<nodeIndent){break;}}//
// Epilogue.
//
// Special case: last mapping's node contains only the key in explicit notation.
if(atExplicitKey){storeMappingPair(state,_result,overridableKeys,keyTag,keyNode,null);}// Expose the resulting mapping.
if(detected){state.tag=_tag;state.anchor=_anchor;state.kind='mapping';state.result=_result;}return detected;}function readTagProperty(state){var _position,isVerbatim=false,isNamed=false,tagHandle,tagName,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x21/* ! */)return false;if(state.tag!==null){throwError$1(state,'duplication of a tag property');}ch=state.input.charCodeAt(++state.position);if(ch===0x3C/* < */){isVerbatim=true;ch=state.input.charCodeAt(++state.position);}else if(ch===0x21/* ! */){isNamed=true;tagHandle='!!';ch=state.input.charCodeAt(++state.position);}else{tagHandle='!';}_position=state.position;if(isVerbatim){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0&&ch!==0x3E/* > */);if(state.position<state.length){tagName=state.input.slice(_position,state.position);ch=state.input.charCodeAt(++state.position);}else{throwError$1(state,'unexpected end of the stream within a verbatim tag');}}else{while(ch!==0&&!is_WS_OR_EOL(ch)){if(ch===0x21/* ! */){if(!isNamed){tagHandle=state.input.slice(_position-1,state.position+1);if(!PATTERN_TAG_HANDLE.test(tagHandle)){throwError$1(state,'named tag handle cannot contain such characters');}isNamed=true;_position=state.position+1;}else{throwError$1(state,'tag suffix cannot contain exclamation marks');}}ch=state.input.charCodeAt(++state.position);}tagName=state.input.slice(_position,state.position);if(PATTERN_FLOW_INDICATORS.test(tagName)){throwError$1(state,'tag suffix cannot contain flow indicator characters');}}if(tagName&&!PATTERN_TAG_URI.test(tagName)){throwError$1(state,'tag name cannot contain such characters: '+tagName);}if(isVerbatim){state.tag=tagName;}else if(_hasOwnProperty$1.call(state.tagMap,tagHandle)){state.tag=state.tagMap[tagHandle]+tagName;}else if(tagHandle==='!'){state.tag='!'+tagName;}else if(tagHandle==='!!'){state.tag='tag:yaml.org,2002:'+tagName;}else{throwError$1(state,'undeclared tag handle "'+tagHandle+'"');}return true;}function readAnchorProperty(state){var _position,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x26/* & */)return false;if(state.anchor!==null){throwError$1(state,'duplication of an anchor property');}ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL(ch)&&!is_FLOW_INDICATOR(ch)){ch=state.input.charCodeAt(++state.position);}if(state.position===_position){throwError$1(state,'name of an anchor node must contain at least one character');}state.anchor=state.input.slice(_position,state.position);return true;}function readAlias(state){var _position,alias,ch;ch=state.input.charCodeAt(state.position);if(ch!==0x2A/* * */)return false;ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL(ch)&&!is_FLOW_INDICATOR(ch)){ch=state.input.charCodeAt(++state.position);}if(state.position===_position){throwError$1(state,'name of an alias node must contain at least one character');}alias=state.input.slice(_position,state.position);if(!_hasOwnProperty$1.call(state.anchorMap,alias)){throwError$1(state,'unidentified alias "'+alias+'"');}state.result=state.anchorMap[alias];skipSeparationSpace(state,true,-1);return true;}function composeNode(state,parentIndent,nodeContext,allowToSeek,allowCompact){var allowBlockStyles,allowBlockScalars,allowBlockCollections,indentStatus=1,// 1: this>parent, 0: this=parent, -1: this<parent
atNewLine=false,hasContent=false,typeIndex,typeQuantity,type,flowIndent,blockIndent;if(state.listener!==null){state.listener('open',state);}state.tag=null;state.anchor=null;state.kind=null;state.result=null;allowBlockStyles=allowBlockScalars=allowBlockCollections=CONTEXT_BLOCK_OUT===nodeContext||CONTEXT_BLOCK_IN===nodeContext;if(allowToSeek){if(skipSeparationSpace(state,true,-1)){atNewLine=true;if(state.lineIndent>parentIndent){indentStatus=1;}else if(state.lineIndent===parentIndent){indentStatus=0;}else if(state.lineIndent<parentIndent){indentStatus=-1;}}}if(indentStatus===1){while(readTagProperty(state)||readAnchorProperty(state)){if(skipSeparationSpace(state,true,-1)){atNewLine=true;allowBlockCollections=allowBlockStyles;if(state.lineIndent>parentIndent){indentStatus=1;}else if(state.lineIndent===parentIndent){indentStatus=0;}else if(state.lineIndent<parentIndent){indentStatus=-1;}}else{allowBlockCollections=false;}}}if(allowBlockCollections){allowBlockCollections=atNewLine||allowCompact;}if(indentStatus===1||CONTEXT_BLOCK_OUT===nodeContext){if(CONTEXT_FLOW_IN===nodeContext||CONTEXT_FLOW_OUT===nodeContext){flowIndent=parentIndent;}else{flowIndent=parentIndent+1;}blockIndent=state.position-state.lineStart;if(indentStatus===1){if(allowBlockCollections&&(readBlockSequence(state,blockIndent)||readBlockMapping(state,blockIndent,flowIndent))||readFlowCollection(state,flowIndent)){hasContent=true;}else{if(allowBlockScalars&&readBlockScalar(state,flowIndent)||readSingleQuotedScalar(state,flowIndent)||readDoubleQuotedScalar(state,flowIndent)){hasContent=true;}else if(readAlias(state)){hasContent=true;if(state.tag!==null||state.anchor!==null){throwError$1(state,'alias node should not have any properties');}}else if(readPlainScalar(state,flowIndent,CONTEXT_FLOW_IN===nodeContext)){hasContent=true;if(state.tag===null){state.tag='?';}}if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}}}else if(indentStatus===0){// Special case: block sequences are allowed to have same indentation level as the parent.
// http://www.yaml.org/spec/1.2/spec.html#id2799784
hasContent=allowBlockCollections&&readBlockSequence(state,blockIndent);}}if(state.tag!==null&&state.tag!=='!'){if(state.tag==='?'){// Implicit resolving is not allowed for non-scalar types, and '?'
// non-specific tag is only automatically assigned to plain scalars.
//
// We only need to check kind conformity in case user explicitly assigns '?'
// tag, for example like this: "!<?> [0]"
//
if(state.result!==null&&state.kind!=='scalar'){throwError$1(state,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+state.kind+'"');}for(typeIndex=0,typeQuantity=state.implicitTypes.length;typeIndex<typeQuantity;typeIndex+=1){type=state.implicitTypes[typeIndex];if(type.resolve(state.result)){// `state.result` updated in resolver if matched
state.result=type.construct(state.result);state.tag=type.tag;if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}break;}}}else if(_hasOwnProperty$1.call(state.typeMap[state.kind||'fallback'],state.tag)){type=state.typeMap[state.kind||'fallback'][state.tag];if(state.result!==null&&type.kind!==state.kind){throwError$1(state,'unacceptable node kind for !<'+state.tag+'> tag; it should be "'+type.kind+'", not "'+state.kind+'"');}if(!type.resolve(state.result)){// `state.result` updated in resolver if matched
throwError$1(state,'cannot resolve a node with !<'+state.tag+'> explicit tag');}else{state.result=type.construct(state.result);if(state.anchor!==null){state.anchorMap[state.anchor]=state.result;}}}else{throwError$1(state,'unknown tag !<'+state.tag+'>');}}if(state.listener!==null){state.listener('close',state);}return state.tag!==null||state.anchor!==null||hasContent;}function readDocument(state){var documentStart=state.position,_position,directiveName,directiveArgs,hasDirectives=false,ch;state.version=null;state.checkLineBreaks=state.legacy;state.tagMap={};state.anchorMap={};while((ch=state.input.charCodeAt(state.position))!==0){skipSeparationSpace(state,true,-1);ch=state.input.charCodeAt(state.position);if(state.lineIndent>0||ch!==0x25/* % */){break;}hasDirectives=true;ch=state.input.charCodeAt(++state.position);_position=state.position;while(ch!==0&&!is_WS_OR_EOL(ch)){ch=state.input.charCodeAt(++state.position);}directiveName=state.input.slice(_position,state.position);directiveArgs=[];if(directiveName.length<1){throwError$1(state,'directive name must not be less than one character in length');}while(ch!==0){while(is_WHITE_SPACE(ch)){ch=state.input.charCodeAt(++state.position);}if(ch===0x23/* # */){do{ch=state.input.charCodeAt(++state.position);}while(ch!==0&&!is_EOL(ch));break;}if(is_EOL(ch))break;_position=state.position;while(ch!==0&&!is_WS_OR_EOL(ch)){ch=state.input.charCodeAt(++state.position);}directiveArgs.push(state.input.slice(_position,state.position));}if(ch!==0)readLineBreak(state);if(_hasOwnProperty$1.call(directiveHandlers,directiveName)){directiveHandlers[directiveName](state,directiveName,directiveArgs);}else{throwWarning(state,'unknown document directive "'+directiveName+'"');}}skipSeparationSpace(state,true,-1);if(state.lineIndent===0&&state.input.charCodeAt(state.position)===0x2D/* - */&&state.input.charCodeAt(state.position+1)===0x2D/* - */&&state.input.charCodeAt(state.position+2)===0x2D/* - */){state.position+=3;skipSeparationSpace(state,true,-1);}else if(hasDirectives){throwError$1(state,'directives end mark is expected');}composeNode(state,state.lineIndent-1,CONTEXT_BLOCK_OUT,false,true);skipSeparationSpace(state,true,-1);if(state.checkLineBreaks&&PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart,state.position))){throwWarning(state,'non-ASCII line breaks are interpreted as content');}state.documents.push(state.result);if(state.position===state.lineStart&&testDocumentSeparator(state)){if(state.input.charCodeAt(state.position)===0x2E/* . */){state.position+=3;skipSeparationSpace(state,true,-1);}return;}if(state.position<state.length-1){throwError$1(state,'end of the stream or a document separator is expected');}else{return;}}function loadDocuments(input,options){input=String(input);options=options||{};if(input.length!==0){// Add tailing `\n` if not exists
if(input.charCodeAt(input.length-1)!==0x0A/* LF */&&input.charCodeAt(input.length-1)!==0x0D/* CR */){input+='\n';}// Strip BOM
if(input.charCodeAt(0)===0xFEFF){input=input.slice(1);}}var state=new State$1(input,options);var nullpos=input.indexOf('\0');if(nullpos!==-1){state.position=nullpos;throwError$1(state,'null byte is not allowed in input');}// Use 0 as string terminator. That significantly simplifies bounds check.
state.input+='\0';while(state.input.charCodeAt(state.position)===0x20/* Space */){state.lineIndent+=1;state.position+=1;}while(state.position<state.length-1){readDocument(state);}return state.documents;}function loadAll(input,iterator,options){if(iterator!==null&&typeof iterator==='object'&&typeof options==='undefined'){options=iterator;iterator=null;}var documents=loadDocuments(input,options);if(typeof iterator!=='function'){return documents;}for(var index=0,length=documents.length;index<length;index+=1){iterator(documents[index]);}}function load(input,options){var documents=loadDocuments(input,options);if(documents.length===0){/*eslint-disable no-undefined*/return undefined;}else if(documents.length===1){return documents[0];}throw new YAMLException$1('expected a single document in the stream, but found more');}function safeLoadAll(input,iterator,options){if(typeof iterator==='object'&&iterator!==null&&typeof options==='undefined'){options=iterator;iterator=null;}return loadAll(input,iterator,common$2.extend({schema:DEFAULT_SAFE_SCHEMA$1},options));}function safeLoad(input,options){return load(input,common$2.extend({schema:DEFAULT_SAFE_SCHEMA$1},options));}loader$1.loadAll=loadAll;loader$1.load=load;loader$1.safeLoadAll=safeLoadAll;loader$1.safeLoad=safeLoad;var dumper$1={};/*eslint-disable no-use-before-define*/var common$1=common$7;var YAMLException=exception;var DEFAULT_FULL_SCHEMA=default_full;var DEFAULT_SAFE_SCHEMA=default_safe;var _toString=Object.prototype.toString;var _hasOwnProperty=Object.prototype.hasOwnProperty;var CHAR_TAB=0x09;/* Tab */var CHAR_LINE_FEED=0x0A;/* LF */var CHAR_CARRIAGE_RETURN=0x0D;/* CR */var CHAR_SPACE=0x20;/* Space */var CHAR_EXCLAMATION=0x21;/* ! */var CHAR_DOUBLE_QUOTE=0x22;/* " */var CHAR_SHARP=0x23;/* # */var CHAR_PERCENT=0x25;/* % */var CHAR_AMPERSAND=0x26;/* & */var CHAR_SINGLE_QUOTE=0x27;/* ' */var CHAR_ASTERISK=0x2A;/* * */var CHAR_COMMA=0x2C;/* , */var CHAR_MINUS=0x2D;/* - */var CHAR_COLON=0x3A;/* : */var CHAR_EQUALS=0x3D;/* = */var CHAR_GREATER_THAN=0x3E;/* > */var CHAR_QUESTION=0x3F;/* ? */var CHAR_COMMERCIAL_AT=0x40;/* @ */var CHAR_LEFT_SQUARE_BRACKET=0x5B;/* [ */var CHAR_RIGHT_SQUARE_BRACKET=0x5D;/* ] */var CHAR_GRAVE_ACCENT=0x60;/* ` */var CHAR_LEFT_CURLY_BRACKET=0x7B;/* { */var CHAR_VERTICAL_LINE=0x7C;/* | */var CHAR_RIGHT_CURLY_BRACKET=0x7D;/* } */var ESCAPE_SEQUENCES={};ESCAPE_SEQUENCES[0x00]='\\0';ESCAPE_SEQUENCES[0x07]='\\a';ESCAPE_SEQUENCES[0x08]='\\b';ESCAPE_SEQUENCES[0x09]='\\t';ESCAPE_SEQUENCES[0x0A]='\\n';ESCAPE_SEQUENCES[0x0B]='\\v';ESCAPE_SEQUENCES[0x0C]='\\f';ESCAPE_SEQUENCES[0x0D]='\\r';ESCAPE_SEQUENCES[0x1B]='\\e';ESCAPE_SEQUENCES[0x22]='\\"';ESCAPE_SEQUENCES[0x5C]='\\\\';ESCAPE_SEQUENCES[0x85]='\\N';ESCAPE_SEQUENCES[0xA0]='\\_';ESCAPE_SEQUENCES[0x2028]='\\L';ESCAPE_SEQUENCES[0x2029]='\\P';var DEPRECATED_BOOLEANS_SYNTAX=['y','Y','yes','Yes','YES','on','On','ON','n','N','no','No','NO','off','Off','OFF'];function compileStyleMap(schema,map){var result,keys,index,length,tag,style,type;if(map===null)return{};result={};keys=Object.keys(map);for(index=0,length=keys.length;index<length;index+=1){tag=keys[index];style=String(map[tag]);if(tag.slice(0,2)==='!!'){tag='tag:yaml.org,2002:'+tag.slice(2);}type=schema.compiledTypeMap['fallback'][tag];if(type&&_hasOwnProperty.call(type.styleAliases,style)){style=type.styleAliases[style];}result[tag]=style;}return result;}function encodeHex(character){var string,handle,length;string=character.toString(16).toUpperCase();if(character<=0xFF){handle='x';length=2;}else if(character<=0xFFFF){handle='u';length=4;}else if(character<=0xFFFFFFFF){handle='U';length=8;}else{throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');}return'\\'+handle+common$1.repeat('0',length-string.length)+string;}function State(options){this.schema=options['schema']||DEFAULT_FULL_SCHEMA;this.indent=Math.max(1,options['indent']||2);this.noArrayIndent=options['noArrayIndent']||false;this.skipInvalid=options['skipInvalid']||false;this.flowLevel=common$1.isNothing(options['flowLevel'])?-1:options['flowLevel'];this.styleMap=compileStyleMap(this.schema,options['styles']||null);this.sortKeys=options['sortKeys']||false;this.lineWidth=options['lineWidth']||80;this.noRefs=options['noRefs']||false;this.noCompatMode=options['noCompatMode']||false;this.condenseFlow=options['condenseFlow']||false;this.implicitTypes=this.schema.compiledImplicit;this.explicitTypes=this.schema.compiledExplicit;this.tag=null;this.result='';this.duplicates=[];this.usedDuplicates=null;}// Indents every line in a string. Empty lines (\n only) are not indented.
function indentString(string,spaces){var ind=common$1.repeat(' ',spaces),position=0,next=-1,result='',line,length=string.length;while(position<length){next=string.indexOf('\n',position);if(next===-1){line=string.slice(position);position=length;}else{line=string.slice(position,next+1);position=next+1;}if(line.length&&line!=='\n')result+=ind;result+=line;}return result;}function generateNextLine(state,level){return'\n'+common$1.repeat(' ',state.indent*level);}function testImplicitResolving(state,str){var index,length,type;for(index=0,length=state.implicitTypes.length;index<length;index+=1){type=state.implicitTypes[index];if(type.resolve(str)){return true;}}return false;}// [33] s-white ::= s-space | s-tab
function isWhitespace(c){return c===CHAR_SPACE||c===CHAR_TAB;}// Returns true if the character can be printed without escaping.
// From YAML 1.2: "any allowed characters known to be non-printable
// should also be escaped. [However,] This isn’t mandatory"
// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
function isPrintable(c){return 0x00020<=c&&c<=0x00007E||0x000A1<=c&&c<=0x00D7FF&&c!==0x2028&&c!==0x2029||0x0E000<=c&&c<=0x00FFFD&&c!==0xFEFF/* BOM */||0x10000<=c&&c<=0x10FFFF;}// [34] ns-char ::= nb-char - s-white
// [27] nb-char ::= c-printable - b-char - c-byte-order-mark
// [26] b-char  ::= b-line-feed | b-carriage-return
// [24] b-line-feed       ::=     #xA    /* LF */
// [25] b-carriage-return ::=     #xD    /* CR */
// [3]  c-byte-order-mark ::=     #xFEFF
function isNsChar(c){return isPrintable(c)&&!isWhitespace(c)// byte-order-mark
&&c!==0xFEFF// b-char
&&c!==CHAR_CARRIAGE_RETURN&&c!==CHAR_LINE_FEED;}// Simplified test for values allowed after the first character in plain style.
function isPlainSafe(c,prev){// Uses a subset of nb-char - c-flow-indicator - ":" - "#"
// where nb-char ::= c-printable - b-char - c-byte-order-mark.
return isPrintable(c)&&c!==0xFEFF// - c-flow-indicator
&&c!==CHAR_COMMA&&c!==CHAR_LEFT_SQUARE_BRACKET&&c!==CHAR_RIGHT_SQUARE_BRACKET&&c!==CHAR_LEFT_CURLY_BRACKET&&c!==CHAR_RIGHT_CURLY_BRACKET// - ":" - "#"
// /* An ns-char preceding */ "#"
&&c!==CHAR_COLON&&(c!==CHAR_SHARP||prev&&isNsChar(prev));}// Simplified test for values allowed as the first character in plain style.
function isPlainSafeFirst(c){// Uses a subset of ns-char - c-indicator
// where ns-char = nb-char - s-white.
return isPrintable(c)&&c!==0xFEFF&&!isWhitespace(c)// - s-white
// - (c-indicator ::=
// “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
&&c!==CHAR_MINUS&&c!==CHAR_QUESTION&&c!==CHAR_COLON&&c!==CHAR_COMMA&&c!==CHAR_LEFT_SQUARE_BRACKET&&c!==CHAR_RIGHT_SQUARE_BRACKET&&c!==CHAR_LEFT_CURLY_BRACKET&&c!==CHAR_RIGHT_CURLY_BRACKET// | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “"”
&&c!==CHAR_SHARP&&c!==CHAR_AMPERSAND&&c!==CHAR_ASTERISK&&c!==CHAR_EXCLAMATION&&c!==CHAR_VERTICAL_LINE&&c!==CHAR_EQUALS&&c!==CHAR_GREATER_THAN&&c!==CHAR_SINGLE_QUOTE&&c!==CHAR_DOUBLE_QUOTE// | “%” | “@” | “`”)
&&c!==CHAR_PERCENT&&c!==CHAR_COMMERCIAL_AT&&c!==CHAR_GRAVE_ACCENT;}// Determines whether block indentation indicator is required.
function needIndentIndicator(string){var leadingSpaceRe=/^\n* /;return leadingSpaceRe.test(string);}var STYLE_PLAIN=1,STYLE_SINGLE=2,STYLE_LITERAL=3,STYLE_FOLDED=4,STYLE_DOUBLE=5;// Determines which scalar styles are possible and returns the preferred style.
// lineWidth = -1 => no limit.
// Pre-conditions: str.length > 0.
// Post-conditions:
//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
function chooseScalarStyle(string,singleLineOnly,indentPerLevel,lineWidth,testAmbiguousType){var i;var char,prev_char;var hasLineBreak=false;var hasFoldableLine=false;// only checked if shouldTrackWidth
var shouldTrackWidth=lineWidth!==-1;var previousLineBreak=-1;// count the first line correctly
var plain=isPlainSafeFirst(string.charCodeAt(0))&&!isWhitespace(string.charCodeAt(string.length-1));if(singleLineOnly){// Case: no block styles.
// Check for disallowed characters to rule out plain and single.
for(i=0;i<string.length;i++){char=string.charCodeAt(i);if(!isPrintable(char)){return STYLE_DOUBLE;}prev_char=i>0?string.charCodeAt(i-1):null;plain=plain&&isPlainSafe(char,prev_char);}}else{// Case: block styles permitted.
for(i=0;i<string.length;i++){char=string.charCodeAt(i);if(char===CHAR_LINE_FEED){hasLineBreak=true;// Check if any line can be folded.
if(shouldTrackWidth){hasFoldableLine=hasFoldableLine||// Foldable line = too long, and not more-indented.
i-previousLineBreak-1>lineWidth&&string[previousLineBreak+1]!==' ';previousLineBreak=i;}}else if(!isPrintable(char)){return STYLE_DOUBLE;}prev_char=i>0?string.charCodeAt(i-1):null;plain=plain&&isPlainSafe(char,prev_char);}// in case the end is missing a \n
hasFoldableLine=hasFoldableLine||shouldTrackWidth&&i-previousLineBreak-1>lineWidth&&string[previousLineBreak+1]!==' ';}// Although every style can represent \n without escaping, prefer block styles
// for multiline, since they're more readable and they don't add empty lines.
// Also prefer folding a super-long line.
if(!hasLineBreak&&!hasFoldableLine){// Strings interpretable as another type have to be quoted;
// e.g. the string 'true' vs. the boolean true.
return plain&&!testAmbiguousType(string)?STYLE_PLAIN:STYLE_SINGLE;}// Edge case: block indentation indicator can only have one digit.
if(indentPerLevel>9&&needIndentIndicator(string)){return STYLE_DOUBLE;}// At this point we know block styles are valid.
// Prefer literal style unless we want to fold.
return hasFoldableLine?STYLE_FOLDED:STYLE_LITERAL;}// Note: line breaking/folding is implemented for only the folded style.
// NB. We drop the last trailing newline (if any) of a returned block scalar
//  since the dumper adds its own newline. This always works:
//    • No ending newline => unaffected; already using strip "-" chomping.
//    • Ending newline    => removed then restored.
//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
function writeScalar(state,string,level,iskey){state.dump=function(){if(string.length===0){return"''";}if(!state.noCompatMode&&DEPRECATED_BOOLEANS_SYNTAX.indexOf(string)!==-1){return"'"+string+"'";}var indent=state.indent*Math.max(1,level);// no 0-indent scalars
// As indentation gets deeper, let the width decrease monotonically
// to the lower bound min(state.lineWidth, 40).
// Note that this implies
//  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
//  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
// This behaves better than a constant minimum width which disallows narrower options,
// or an indent threshold which causes the width to suddenly increase.
var lineWidth=state.lineWidth===-1?-1:Math.max(Math.min(state.lineWidth,40),state.lineWidth-indent);// Without knowing if keys are implicit/explicit, assume implicit for safety.
var singleLineOnly=iskey// No block styles in flow mode.
||state.flowLevel>-1&&level>=state.flowLevel;function testAmbiguity(string){return testImplicitResolving(state,string);}switch(chooseScalarStyle(string,singleLineOnly,state.indent,lineWidth,testAmbiguity)){case STYLE_PLAIN:return string;case STYLE_SINGLE:return"'"+string.replace(/'/g,"''")+"'";case STYLE_LITERAL:return'|'+blockHeader(string,state.indent)+dropEndingNewline(indentString(string,indent));case STYLE_FOLDED:return'>'+blockHeader(string,state.indent)+dropEndingNewline(indentString(foldString(string,lineWidth),indent));case STYLE_DOUBLE:return'"'+escapeString(string)+'"';default:throw new YAMLException('impossible error: invalid scalar style');}}();}// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
function blockHeader(string,indentPerLevel){var indentIndicator=needIndentIndicator(string)?String(indentPerLevel):'';// note the special case: the string '\n' counts as a "trailing" empty line.
var clip=string[string.length-1]==='\n';var keep=clip&&(string[string.length-2]==='\n'||string==='\n');var chomp=keep?'+':clip?'':'-';return indentIndicator+chomp+'\n';}// (See the note for writeScalar.)
function dropEndingNewline(string){return string[string.length-1]==='\n'?string.slice(0,-1):string;}// Note: a long line without a suitable break point will exceed the width limit.
// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
function foldString(string,width){// In folded style, $k$ consecutive newlines output as $k+1$ newlines—
// unless they're before or after a more-indented line, or at the very
// beginning or end, in which case $k$ maps to $k$.
// Therefore, parse each chunk as newline(s) followed by a content line.
var lineRe=/(\n+)([^\n]*)/g;// first line (possibly an empty line)
var result=function(){var nextLF=string.indexOf('\n');nextLF=nextLF!==-1?nextLF:string.length;lineRe.lastIndex=nextLF;return foldLine(string.slice(0,nextLF),width);}();// If we haven't reached the first content line yet, don't add an extra \n.
var prevMoreIndented=string[0]==='\n'||string[0]===' ';var moreIndented;// rest of the lines
var match;while(match=lineRe.exec(string)){var prefix=match[1],line=match[2];moreIndented=line[0]===' ';result+=prefix+(!prevMoreIndented&&!moreIndented&&line!==''?'\n':'')+foldLine(line,width);prevMoreIndented=moreIndented;}return result;}// Greedy line breaking.
// Picks the longest line under the limit each time,
// otherwise settles for the shortest line over the limit.
// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
function foldLine(line,width){if(line===''||line[0]===' ')return line;// Since a more-indented line adds a \n, breaks can't be followed by a space.
var breakRe=/ [^ ]/g;// note: the match index will always be <= length-2.
var match;// start is an inclusive index. end, curr, and next are exclusive.
var start=0,end,curr=0,next=0;var result='';// Invariants: 0 <= start <= length-1.
//   0 <= curr <= next <= max(0, length-2). curr - start <= width.
// Inside the loop:
//   A match implies length >= 2, so curr and next are <= length-2.
while(match=breakRe.exec(line)){next=match.index;// maintain invariant: curr - start <= width
if(next-start>width){end=curr>start?curr:next;// derive end <= length-2
result+='\n'+line.slice(start,end);// skip the space that was output as \n
start=end+1;// derive start <= length-1
}curr=next;}// By the invariants, start <= length-1, so there is something left over.
// It is either the whole string or a part starting from non-whitespace.
result+='\n';// Insert a break if the remainder is too long and there is a break available.
if(line.length-start>width&&curr>start){result+=line.slice(start,curr)+'\n'+line.slice(curr+1);}else{result+=line.slice(start);}return result.slice(1);// drop extra \n joiner
}// Escapes a double-quoted string.
function escapeString(string){var result='';var char,nextChar;var escapeSeq;for(var i=0;i<string.length;i++){char=string.charCodeAt(i);// Check for surrogate pairs (reference Unicode 3.0 section "3.7 Surrogates").
if(char>=0xD800&&char<=0xDBFF/* high surrogate */){nextChar=string.charCodeAt(i+1);if(nextChar>=0xDC00&&nextChar<=0xDFFF/* low surrogate */){// Combine the surrogate pair and store it escaped.
result+=encodeHex((char-0xD800)*0x400+nextChar-0xDC00+0x10000);// Advance index one extra since we already used that char here.
i++;continue;}}escapeSeq=ESCAPE_SEQUENCES[char];result+=!escapeSeq&&isPrintable(char)?string[i]:escapeSeq||encodeHex(char);}return result;}function writeFlowSequence(state,level,object){var _result='',_tag=state.tag,index,length;for(index=0,length=object.length;index<length;index+=1){// Write only valid elements.
if(writeNode(state,level,object[index],false,false)){if(index!==0)_result+=','+(!state.condenseFlow?' ':'');_result+=state.dump;}}state.tag=_tag;state.dump='['+_result+']';}function writeBlockSequence(state,level,object,compact){var _result='',_tag=state.tag,index,length;for(index=0,length=object.length;index<length;index+=1){// Write only valid elements.
if(writeNode(state,level+1,object[index],true,true)){if(!compact||index!==0){_result+=generateNextLine(state,level);}if(state.dump&&CHAR_LINE_FEED===state.dump.charCodeAt(0)){_result+='-';}else{_result+='- ';}_result+=state.dump;}}state.tag=_tag;state.dump=_result||'[]';// Empty sequence if no valid values.
}function writeFlowMapping(state,level,object){var _result='',_tag=state.tag,objectKeyList=Object.keys(object),index,length,objectKey,objectValue,pairBuffer;for(index=0,length=objectKeyList.length;index<length;index+=1){pairBuffer='';if(index!==0)pairBuffer+=', ';if(state.condenseFlow)pairBuffer+='"';objectKey=objectKeyList[index];objectValue=object[objectKey];if(!writeNode(state,level,objectKey,false,false)){continue;// Skip this pair because of invalid key;
}if(state.dump.length>1024)pairBuffer+='? ';pairBuffer+=state.dump+(state.condenseFlow?'"':'')+':'+(state.condenseFlow?'':' ');if(!writeNode(state,level,objectValue,false,false)){continue;// Skip this pair because of invalid value.
}pairBuffer+=state.dump;// Both key and value are valid.
_result+=pairBuffer;}state.tag=_tag;state.dump='{'+_result+'}';}function writeBlockMapping(state,level,object,compact){var _result='',_tag=state.tag,objectKeyList=Object.keys(object),index,length,objectKey,objectValue,explicitPair,pairBuffer;// Allow sorting keys so that the output file is deterministic
if(state.sortKeys===true){// Default sorting
objectKeyList.sort();}else if(typeof state.sortKeys==='function'){// Custom sort function
objectKeyList.sort(state.sortKeys);}else if(state.sortKeys){// Something is wrong
throw new YAMLException('sortKeys must be a boolean or a function');}for(index=0,length=objectKeyList.length;index<length;index+=1){pairBuffer='';if(!compact||index!==0){pairBuffer+=generateNextLine(state,level);}objectKey=objectKeyList[index];objectValue=object[objectKey];if(!writeNode(state,level+1,objectKey,true,true,true)){continue;// Skip this pair because of invalid key.
}explicitPair=state.tag!==null&&state.tag!=='?'||state.dump&&state.dump.length>1024;if(explicitPair){if(state.dump&&CHAR_LINE_FEED===state.dump.charCodeAt(0)){pairBuffer+='?';}else{pairBuffer+='? ';}}pairBuffer+=state.dump;if(explicitPair){pairBuffer+=generateNextLine(state,level);}if(!writeNode(state,level+1,objectValue,true,explicitPair)){continue;// Skip this pair because of invalid value.
}if(state.dump&&CHAR_LINE_FEED===state.dump.charCodeAt(0)){pairBuffer+=':';}else{pairBuffer+=': ';}pairBuffer+=state.dump;// Both key and value are valid.
_result+=pairBuffer;}state.tag=_tag;state.dump=_result||'{}';// Empty mapping if no valid pairs.
}function detectType(state,object,explicit){var _result,typeList,index,length,type,style;typeList=explicit?state.explicitTypes:state.implicitTypes;for(index=0,length=typeList.length;index<length;index+=1){type=typeList[index];if((type.instanceOf||type.predicate)&&(!type.instanceOf||typeof object==='object'&&object instanceof type.instanceOf)&&(!type.predicate||type.predicate(object))){state.tag=explicit?type.tag:'?';if(type.represent){style=state.styleMap[type.tag]||type.defaultStyle;if(_toString.call(type.represent)==='[object Function]'){_result=type.represent(object,style);}else if(_hasOwnProperty.call(type.represent,style)){_result=type.represent[style](object,style);}else{throw new YAMLException('!<'+type.tag+'> tag resolver accepts not "'+style+'" style');}state.dump=_result;}return true;}}return false;}// Serializes `object` and writes it to global `result`.
// Returns true on success, or false on invalid object.
//
function writeNode(state,level,object,block,compact,iskey){state.tag=null;state.dump=object;if(!detectType(state,object,false)){detectType(state,object,true);}var type=_toString.call(state.dump);if(block){block=state.flowLevel<0||state.flowLevel>level;}var objectOrArray=type==='[object Object]'||type==='[object Array]',duplicateIndex,duplicate;if(objectOrArray){duplicateIndex=state.duplicates.indexOf(object);duplicate=duplicateIndex!==-1;}if(state.tag!==null&&state.tag!=='?'||duplicate||state.indent!==2&&level>0){compact=false;}if(duplicate&&state.usedDuplicates[duplicateIndex]){state.dump='*ref_'+duplicateIndex;}else{if(objectOrArray&&duplicate&&!state.usedDuplicates[duplicateIndex]){state.usedDuplicates[duplicateIndex]=true;}if(type==='[object Object]'){if(block&&Object.keys(state.dump).length!==0){writeBlockMapping(state,level,state.dump,compact);if(duplicate){state.dump='&ref_'+duplicateIndex+state.dump;}}else{writeFlowMapping(state,level,state.dump);if(duplicate){state.dump='&ref_'+duplicateIndex+' '+state.dump;}}}else if(type==='[object Array]'){var arrayLevel=state.noArrayIndent&&level>0?level-1:level;if(block&&state.dump.length!==0){writeBlockSequence(state,arrayLevel,state.dump,compact);if(duplicate){state.dump='&ref_'+duplicateIndex+state.dump;}}else{writeFlowSequence(state,arrayLevel,state.dump);if(duplicate){state.dump='&ref_'+duplicateIndex+' '+state.dump;}}}else if(type==='[object String]'){if(state.tag!=='?'){writeScalar(state,state.dump,level,iskey);}}else{if(state.skipInvalid)return false;throw new YAMLException('unacceptable kind of an object to dump '+type);}if(state.tag!==null&&state.tag!=='?'){state.dump='!<'+state.tag+'> '+state.dump;}}return true;}function getDuplicateReferences(object,state){var objects=[],duplicatesIndexes=[],index,length;inspectNode(object,objects,duplicatesIndexes);for(index=0,length=duplicatesIndexes.length;index<length;index+=1){state.duplicates.push(objects[duplicatesIndexes[index]]);}state.usedDuplicates=new Array(length);}function inspectNode(object,objects,duplicatesIndexes){var objectKeyList,index,length;if(object!==null&&typeof object==='object'){index=objects.indexOf(object);if(index!==-1){if(duplicatesIndexes.indexOf(index)===-1){duplicatesIndexes.push(index);}}else{objects.push(object);if(Array.isArray(object)){for(index=0,length=object.length;index<length;index+=1){inspectNode(object[index],objects,duplicatesIndexes);}}else{objectKeyList=Object.keys(object);for(index=0,length=objectKeyList.length;index<length;index+=1){inspectNode(object[objectKeyList[index]],objects,duplicatesIndexes);}}}}}function dump(input,options){options=options||{};var state=new State(options);if(!state.noRefs)getDuplicateReferences(input,state);if(writeNode(state,0,input,true,true))return state.dump+'\n';return'';}function safeDump(input,options){return dump(input,common$1.extend({schema:DEFAULT_SAFE_SCHEMA},options));}dumper$1.dump=dump;dumper$1.safeDump=safeDump;var loader=loader$1;var dumper=dumper$1;function deprecated(name){return function(){throw new Error('Function '+name+' is deprecated and cannot be used.');};}jsYaml$1.Type=type;jsYaml$1.Schema=schema;jsYaml$1.FAILSAFE_SCHEMA=failsafe;jsYaml$1.JSON_SCHEMA=json;jsYaml$1.CORE_SCHEMA=core$2;jsYaml$1.DEFAULT_SAFE_SCHEMA=default_safe;jsYaml$1.DEFAULT_FULL_SCHEMA=default_full;jsYaml$1.load=loader.load;jsYaml$1.loadAll=loader.loadAll;jsYaml$1.safeLoad=loader.safeLoad;jsYaml$1.safeLoadAll=loader.safeLoadAll;jsYaml$1.dump=dumper.dump;jsYaml$1.safeDump=dumper.safeDump;jsYaml$1.YAMLException=exception;// Deprecated schema names from JS-YAML 2.0.x
jsYaml$1.MINIMAL_SCHEMA=failsafe;jsYaml$1.SAFE_SCHEMA=default_safe;jsYaml$1.DEFAULT_SCHEMA=default_full;// Deprecated functions from JS-YAML 1.x.x
jsYaml$1.scan=deprecated('scan');jsYaml$1.parse=deprecated('parse');jsYaml$1.compose=deprecated('compose');jsYaml$1.addConstructor=deprecated('addConstructor');var yaml$1=jsYaml$1;var jsYaml=yaml$1;const fs$5=gracefulFs;const pify=pify$1;const stripBom=stripBom$1;const yaml=jsYaml;const parse$3=data=>yaml.safeLoad(stripBom(data));loadYamlFile$1.exports=fp=>pify(fs$5.readFile)(fp,'utf8').then(data=>parse$3(data));loadYamlFile$1.exports.sync=fp=>parse$3(fs$5.readFileSync(fp,'utf8'));var loadYamlFileExports=loadYamlFile$1.exports;const path$8=path__default.default;const pathExists$3=pathExistsExports;const loadYamlFile=loadYamlFileExports;var whichPm=async function(pkgPath){const modulesPath=path$8.join(pkgPath,'node_modules');const exists=await pathExists$3(path$8.join(modulesPath,'.yarn-integrity'));if(exists)return{name:'yarn'};try{const modules=await loadYamlFile(path$8.join(modulesPath,'.modules.yaml'));return toNameAndVersion(modules.packageManager);}catch(err){if(err.code!=='ENOENT')throw err;}const modulesExists=await pathExists$3(modulesPath);return modulesExists?{name:'npm'}:null;};function toNameAndVersion(pkgSpec){if(pkgSpec[0]==='@'){const woPrefix=pkgSpec.substr(1);const parts=woPrefix.split('@');return{name:"@".concat(parts[0]),version:parts[1]};}const parts=pkgSpec.split('@');return{name:parts[0],version:parts[1]};}const findYarnWorkspaceRoot=findYarnWorkspaceRoot2;const findUp=findUpExports;const path$7=path__default.default;const pathExists$2=pathExistsExports;const whichPM=whichPm;var preferredPm=async function preferredPM(pkgPath){if(typeof pkgPath!=='string'){throw new TypeError("pkgPath should be a string, got ".concat(typeof pkgPath));}if(await pathExists$2(path$7.join(pkgPath,'package-lock.json'))){return{name:'npm',version:'>=5'};}if(await pathExists$2(path$7.join(pkgPath,'yarn.lock'))){return{name:'yarn',version:'*'};}if(await pathExists$2(path$7.join(pkgPath,'pnpm-lock.yaml'))){return{name:'pnpm',version:'>=3'};}if(await pathExists$2(path$7.join(pkgPath,'shrinkwrap.yaml'))){return{name:'pnpm',version:'1 || 2'};}if(await pathExists$2(path$7.join(pkgPath,'bun.lockb'))){return{name:'bun',version:'*'};}if(await findUp('pnpm-lock.yaml',{cwd:pkgPath})){return{name:'pnpm',version:'>=3'};}try{if(typeof findYarnWorkspaceRoot(pkgPath)==='string'){return{name:'yarn',version:'*'};}}catch(err){}const pm=await whichPM(pkgPath);return pm&&{name:pm.name,version:pm.version||'*'};};var preferredPM=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(preferredPm);const isInteractive$2=process.stdout.isTTY&&process.env.TERM!=="dumb"&&!("CI"in process.env);const EXPERIMENTAL=["bun"];async function getPackageManagerChoice(workDir,options){var _await$preferredPM;const rootDir=workDir||process.cwd();const preferred=(_await$preferredPM=await preferredPM(rootDir))===null||_await$preferredPM===void 0?void 0:_await$preferredPM.name;if(preferred&&(await hasCommand(preferred,rootDir))){return{chosen:preferred,mostOptimal:preferred};}const mostLikelyPM=await getMostLikelyInstalledPackageManager(rootDir);const interactive=typeof options.interactive==="boolean"?options.interactive:isInteractive$2;if(!interactive){return{chosen:mostLikelyPM||(await getFallback(rootDir)),mostOptimal:preferred};}if(!("prompt"in options)){throw new Error("Must pass `prompt` when in interactive mode");}const messageSuffix=preferred?" (preferred is ".concat(preferred,", but is not installed)"):"";const installed=await getAvailablePackageManagers(rootDir);const chosen=await options.prompt.single({type:"list",choices:installed.map(pm=>({value:pm,name:EXPERIMENTAL.includes(pm)?"".concat(pm," (experimental)"):pm})),default:preferred||mostLikelyPM,message:"Package manager to use for installing dependencies?".concat(messageSuffix)});return{chosen,mostOptimal:preferred};}async function getFallback(cwd){if(await hasNpmInstalled(cwd)){return"npm";}if(await hasYarnInstalled(cwd)){return"yarn";}if(await hasPnpmInstalled(cwd)){return"pnpm";}if(await hasBunInstalled(cwd)){return"bun";}return"manual";}async function getAvailablePackageManagers(cwd){const[npm,yarn,pnpm,bun]=await Promise.all([hasNpmInstalled(cwd),hasYarnInstalled(cwd),hasPnpmInstalled(cwd),hasBunInstalled(cwd)]);const choices=[npm&&"npm",yarn&&"yarn",pnpm&&"pnpm",bun&&"bun","manual"];return choices.filter(pm=>pm!==false);}function hasNpmInstalled(cwd){return hasCommand("npm",cwd);}function hasYarnInstalled(cwd){return hasCommand("yarn",cwd);}function hasPnpmInstalled(cwd){return hasCommand("pnpm",cwd);}function hasBunInstalled(cwd){return hasCommand("bun",cwd);}function getNpmRunPath(cwd){let previous;let cwdPath=path__default.default.resolve(cwd);const result=[];while(previous!==cwdPath){result.push(path__default.default.join(cwdPath,"node_modules",".bin"));previous=cwdPath;cwdPath=path__default.default.resolve(cwdPath,"..");}result.push(path__default.default.resolve(cwd,process.execPath,".."));const pathEnv=process.env[getPathEnvVarKey()];return[...result,pathEnv].join(path__default.default.delimiter);}function getPartialEnvWithNpmPath(cwd){const key=getPathEnvVarKey();return{[key]:getNpmRunPath(cwd)};}function getPathEnvVarKey(){if(process.platform!=="win32"){return"PATH";}return Object.keys(process.env).reverse().find(key=>key.toUpperCase()==="PATH")||"Path";}function getCommandPath(cmd,cwd){const options=cwd?{path:getNpmRunPath(cwd)}:{};return which$2(cmd,options).catch(()=>null);}function hasCommand(cmd,cwd){return getCommandPath(cmd,cwd).then(cmdPath=>cmdPath!==null);}async function getMostLikelyInstalledPackageManager(rootDir){const installed=await getAvailablePackageManagers(rootDir);const running=getRunningPackageManager();return running&&installed.includes(running)?running:void 0;}function getRunningPackageManager(){const agent=process.env.npm_config_user_agent||"";if(agent.includes("yarn")){return"yarn";}if(agent.includes("pnpm")){return"pnpm";}if(agent.includes("bun")){return"bun";}if(/^npm\/\d/.test(agent)){return"npm";}return void 0;}async function getInstallCommand(options){const{workDir,depType="prod",pkgNames}=options;const{chosen}=await getPackageManagerChoice(workDir,{interactive:false});if(!pkgNames||pkgNames.length===0){return"".concat(chosen," install");}const pkgNameString=pkgNames.join(" ");if(chosen==="yarn"){const flag=depType==="dev"||depType==="peer"?" --".concat(depType):"";return"yarn add ".concat(pkgNameString).concat(flag);}else if(chosen==="pnpm"){return"pnpm add ".concat(pkgNameString," --save-").concat(depType);}return"npm install ".concat(pkgNameString," --save-").concat(depType);}var globalDirs$1={};const{hasOwnProperty}=Object.prototype;const eol=typeof process!=='undefined'&&process.platform==='win32'?'\r\n':'\n';const encode=(obj,opt)=>{const children=[];let out='';if(typeof opt==='string'){opt={section:opt,whitespace:false};}else{opt=opt||Object.create(null);opt.whitespace=opt.whitespace===true;}const separator=opt.whitespace?' = ':'=';for(const k of Object.keys(obj)){const val=obj[k];if(val&&Array.isArray(val)){for(const item of val)out+=safe(k+'[]')+separator+safe(item)+'\n';}else if(val&&typeof val==='object')children.push(k);else out+=safe(k)+separator+safe(val)+eol;}if(opt.section&&out.length)out='['+safe(opt.section)+']'+eol+out;for(const k of children){const nk=dotSplit(k).join('\\.');const section=(opt.section?opt.section+'.':'')+nk;const{whitespace}=opt;const child=encode(obj[k],{section,whitespace});if(out.length&&child.length)out+=eol;out+=child;}return out;};const dotSplit=str=>str.replace(/\1/g,'\u0002LITERAL\\1LITERAL\u0002').replace(/\\\./g,'\u0001').split(/\./).map(part=>part.replace(/\1/g,'\\.').replace(/\2LITERAL\\1LITERAL\2/g,'\u0001'));const decode=str=>{const out=Object.create(null);let p=out;let section=null;//          section     |key      = value
const re=/^\[([^\]]*)\]$|^([^=]+)(=(.*))?$/i;const lines=str.split(/[\r\n]+/g);for(const line of lines){if(!line||line.match(/^\s*[;#]/))continue;const match=line.match(re);if(!match)continue;if(match[1]!==undefined){section=unsafe(match[1]);if(section==='__proto__'){// not allowed
// keep parsing the section, but don't attach it.
p=Object.create(null);continue;}p=out[section]=out[section]||Object.create(null);continue;}const keyRaw=unsafe(match[2]);const isArray=keyRaw.length>2&&keyRaw.slice(-2)==='[]';const key=isArray?keyRaw.slice(0,-2):keyRaw;if(key==='__proto__')continue;const valueRaw=match[3]?unsafe(match[4]):true;const value=valueRaw==='true'||valueRaw==='false'||valueRaw==='null'?JSON.parse(valueRaw):valueRaw;// Convert keys with '[]' suffix to an array
if(isArray){if(!hasOwnProperty.call(p,key))p[key]=[];else if(!Array.isArray(p[key]))p[key]=[p[key]];}// safeguard against resetting a previously defined
// array by accidentally forgetting the brackets
if(Array.isArray(p[key]))p[key].push(value);else p[key]=value;}// {a:{y:1},"a.b":{x:2}} --> {a:{y:1,b:{x:2}}}
// use a filter to return the keys that have to be deleted.
const remove=[];for(const k of Object.keys(out)){if(!hasOwnProperty.call(out,k)||typeof out[k]!=='object'||Array.isArray(out[k]))continue;// see if the parent section is also an object.
// if so, add it to that, and mark this one for deletion
const parts=dotSplit(k);let p=out;const l=parts.pop();const nl=l.replace(/\\\./g,'.');for(const part of parts){if(part==='__proto__')continue;if(!hasOwnProperty.call(p,part)||typeof p[part]!=='object')p[part]=Object.create(null);p=p[part];}if(p===out&&nl===l)continue;p[nl]=out[k];remove.push(k);}for(const del of remove)delete out[del];return out;};const isQuoted=val=>val.charAt(0)==='"'&&val.slice(-1)==='"'||val.charAt(0)==="'"&&val.slice(-1)==="'";const safe=val=>typeof val!=='string'||val.match(/[=\r\n]/)||val.match(/^\[/)||val.length>1&&isQuoted(val)||val!==val.trim()?JSON.stringify(val):val.replace(/;/g,'\\;').replace(/#/g,'\\#');const unsafe=(val,doUnesc)=>{val=(val||'').trim();if(isQuoted(val)){// remove the single quotes before calling JSON.parse
if(val.charAt(0)==="'")val=val.substr(1,val.length-2);try{val=JSON.parse(val);}catch(_){}}else{// walk the val to find the first not-escaped ; character
let esc=false;let unesc='';for(let i=0,l=val.length;i<l;i++){const c=val.charAt(i);if(esc){if('\\;#'.indexOf(c)!==-1)unesc+=c;else unesc+='\\'+c;esc=false;}else if(';#'.indexOf(c)!==-1)break;else if(c==='\\')esc=true;else unesc+=c;}if(esc)unesc+='\\';return unesc.trim();}return val;};var ini$2={parse:decode,decode,stringify:encode,encode,safe,unsafe};(function(exports){const path=path__default.default;const os=require$$0__default$2.default;const fs=require$$0__default.default;const ini=ini$2;const isWindows=process.platform==='win32';const readRc=filePath=>{try{return ini.parse(fs.readFileSync(filePath,'utf8')).prefix;}catch{}};const getEnvNpmPrefix=()=>{// TODO: Remove the `.reduce` call.
// eslint-disable-next-line unicorn/no-array-reduce
return Object.keys(process.env).reduce((prefix,name)=>{return /^npm_config_prefix$/i.test(name)?process.env[name]:prefix;},undefined);};const getGlobalNpmrc=()=>{if(isWindows&&process.env.APPDATA){// Hardcoded contents of `c:\Program Files\nodejs\node_modules\npm\npmrc`
return path.join(process.env.APPDATA,'/npm/etc/npmrc');}// Homebrew special case: `$(brew --prefix)/lib/node_modules/npm/npmrc`
if(process.execPath.includes('/Cellar/node')){const homebrewPrefix=process.execPath.slice(0,process.execPath.indexOf('/Cellar/node'));return path.join(homebrewPrefix,'/lib/node_modules/npm/npmrc');}if(process.execPath.endsWith('/bin/node')){const installDir=path.dirname(path.dirname(process.execPath));return path.join(installDir,'/etc/npmrc');}};const getDefaultNpmPrefix=()=>{if(isWindows){const{APPDATA}=process.env;// `c:\node\node.exe` → `prefix=c:\node\`
return APPDATA?path.join(APPDATA,'npm'):path.dirname(process.execPath);}// `/usr/local/bin/node` → `prefix=/usr/local`
return path.dirname(path.dirname(process.execPath));};const getNpmPrefix=()=>{const envPrefix=getEnvNpmPrefix();if(envPrefix){return envPrefix;}const homePrefix=readRc(path.join(os.homedir(),'.npmrc'));if(homePrefix){return homePrefix;}if(process.env.PREFIX){return process.env.PREFIX;}const globalPrefix=readRc(getGlobalNpmrc());if(globalPrefix){return globalPrefix;}return getDefaultNpmPrefix();};const npmPrefix=path.resolve(getNpmPrefix());const getYarnWindowsDirectory=()=>{if(isWindows&&process.env.LOCALAPPDATA){const dir=path.join(process.env.LOCALAPPDATA,'Yarn');if(fs.existsSync(dir)){return dir;}}return false;};const getYarnPrefix=()=>{if(process.env.PREFIX){return process.env.PREFIX;}const windowsPrefix=getYarnWindowsDirectory();if(windowsPrefix){return windowsPrefix;}const configPrefix=path.join(os.homedir(),'.config/yarn');if(fs.existsSync(configPrefix)){return configPrefix;}const homePrefix=path.join(os.homedir(),'.yarn-config');if(fs.existsSync(homePrefix)){return homePrefix;}// Yarn supports the npm conventions but the inverse is not true
return npmPrefix;};exports.npm={};exports.npm.prefix=npmPrefix;exports.npm.packages=path.join(npmPrefix,isWindows?'node_modules':'lib/node_modules');exports.npm.binaries=isWindows?npmPrefix:path.join(npmPrefix,'bin');const yarnPrefix=path.resolve(getYarnPrefix());exports.yarn={};exports.yarn.prefix=yarnPrefix;exports.yarn.packages=path.join(yarnPrefix,getYarnWindowsDirectory()?'Data/global/node_modules':'global/node_modules');exports.yarn.binaries=path.join(exports.yarn.packages,'.bin');})(globalDirs$1);const path$6=path__default.default;var isPathInside$1=(childPath,parentPath)=>{const relation=path$6.relative(parentPath,childPath);return Boolean(relation&&relation!=='..'&&!relation.startsWith("..".concat(path$6.sep))&&relation!==path$6.resolve(childPath));};const fs$4=require$$0__default.default;const globalDirs=globalDirs$1;const isPathInside=isPathInside$1;var isInstalledGlobally=(()=>{try{return isPathInside(__dirname,globalDirs.yarn.packages)||isPathInside(__dirname,fs$4.realpathSync(globalDirs.npm.packages));}catch{return false;}})();var isInstalledGlobally$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(isInstalledGlobally);const cliPkgName="@sanity/cli";async function getCliUpgradeCommand(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let{cwd,workDir}=options;cwd=path__default.default.resolve(cwd||process.cwd());workDir=path__default.default.resolve(workDir||cwd);if(isInstalledGlobally$1&&isInstalledUsingYarn()){loadEnv.debug("CLI is installed globally with yarn");return"yarn global add ".concat(cliPkgName);}if(isInstalledGlobally$1){loadEnv.debug("CLI is installed globally with npm");return"npm install -g ".concat(cliPkgName);}const cmds=cwd===workDir?[]:["cd ".concat(path__default.default.relative(cwd,workDir))];const{chosen}=await getPackageManagerChoice(workDir,{interactive:false});if(chosen==="yarn"){cmds.push("yarn upgrade ".concat(cliPkgName));}else if(chosen==="pnpm"){cmds.push("pnpm update ".concat(cliPkgName));}else{cmds.push("npm update ".concat(cliPkgName));}return cmds.join(" && ");}function isInstalledUsingYarn(){const isWindows=process.platform==="win32";const yarnPath=isWindows?path__default.default.join("Yarn","config","global"):path__default.default.join(".config","yarn","global");return __dirname.includes(yarnPath);}async function installDeclaredPackages(cwd,packageManager,context){var _result2,_result3;const{output}=context;const execOptions={encoding:"utf8",env:getPartialEnvWithNpmPath(cwd),cwd,stdio:"inherit"};const npmArgs=["install","--legacy-peer-deps"];let result;if(packageManager==="npm"){output.print("Running 'npm ".concat(npmArgs.join(" "),"'"));result=await execa$1("npm",npmArgs,execOptions);}else if(packageManager==="yarn"){const yarnArgs=["install"];output.print("Running 'yarn ".concat(yarnArgs.join(" "),"'"));result=await execa$1("yarn",yarnArgs,execOptions);}else if(packageManager==="pnpm"){const pnpmArgs=["install"];output.print("Running 'pnpm ".concat(pnpmArgs.join(" "),"'"));result=await execa$1("pnpm",pnpmArgs,execOptions);}else if(packageManager==="bun"){const bunArgs=["install"];output.print("Running 'bun ".concat(bunArgs.join(" "),"'"));result=await execa$1("bun",bunArgs,execOptions);}else if(packageManager==="manual"){output.print("Manual installation selected - run 'npm ".concat(npmArgs.join(" "),"' or similar"));}if((_result2=result)!==null&&_result2!==void 0&&_result2.exitCode||(_result3=result)!==null&&_result3!==void 0&&_result3.failed){throw new Error("Dependency installation failed");}}async function installNewPackages(options,context){var _result4,_result5;const{packageManager,packages}=options;const{output,workDir}=context;const execOptions={encoding:"utf8",env:getPartialEnvWithNpmPath(workDir),cwd:workDir,stdio:"inherit"};const npmArgs=["install","--legacy-peer-deps","--save",...packages];let result;if(packageManager==="npm"){output.print("Running 'npm ".concat(npmArgs.join(" "),"'"));result=await execa$1("npm",npmArgs,execOptions);}else if(packageManager==="yarn"){const yarnArgs=["add",...packages];output.print("Running 'yarn ".concat(yarnArgs.join(" "),"'"));result=await execa$1("yarn",yarnArgs,execOptions);}else if(packageManager==="pnpm"){const pnpmArgs=["add","--save-prod",...packages];output.print("Running 'pnpm ".concat(pnpmArgs.join(" "),"'"));result=await execa$1("pnpm",pnpmArgs,execOptions);}else if(packageManager==="bun"){const bunArgs=["add",...packages];output.print("Running 'bun ".concat(bunArgs.join(" "),"'"));result=await execa$1("bun",bunArgs,execOptions);}else if(packageManager==="manual"){output.print("Manual installation selected - run 'npm ".concat(npmArgs.join(" "),"' or equivalent"));}if((_result4=result)!==null&&_result4!==void 0&&_result4.exitCode||(_result5=result)!==null&&_result5!==void 0&&_result5.failed){throw new Error("Package installation failed");}}async function uninstallPackages(options,context){var _result6,_result7;const{packageManager,packages}=options;const{output,workDir}=context;const execOptions={encoding:"utf8",env:getPartialEnvWithNpmPath(workDir),cwd:workDir,stdio:"inherit"};const npmArgs=["uninstall",...packages];let result;if(packageManager==="npm"){output.print("Running 'npm ".concat(npmArgs.join(" "),"'"));result=await execa$1("npm",npmArgs,execOptions);}else if(packageManager==="yarn"){const yarnArgs=["remove",...packages];output.print("Running 'yarn ".concat(yarnArgs.join(" "),"'"));result=await execa$1("yarn",yarnArgs,execOptions);}else if(packageManager==="pnpm"){const pnpmArgs=["remove",...packages];output.print("Running 'pnpm ".concat(pnpmArgs.join(" "),"'"));result=await execa$1("pnpm",pnpmArgs,execOptions);}else if(packageManager==="manual"){output.print("Manual installation selected - run 'npm ".concat(npmArgs.join(" "),"' or equivalent"));}if((_result6=result)!==null&&_result6!==void 0&&_result6.exitCode||(_result7=result)!==null&&_result7!==void 0&&_result7.failed){throw new Error("Package installation failed");}}function getYarnStub(context){return async function yarnStub(args,options){const workDir=(options===null||options===void 0?void 0:options.rootDir)||context.workDir;const yarnContext={workDir,output:context.output};const{chosen}=await getPackageManagerChoice(workDir,{interactive:false});const[command,...packages]=args;if(command==="add"){await installNewPackages({packageManager:chosen,packages},yarnContext);}else if(command==="remove"){await uninstallPackages({packageManager:chosen,packages},yarnContext);}else if(command==="install"){await installDeclaredPackages(workDir,chosen,yarnContext);}else{throw new Error("Unsupported package manager command \"".concat(command,"\""));}};}const cliPackageManager={getInstallCommand,getPackageManagerChoice,installNewPackages};//@ts-check
const fs$3=require$$0__default.default.promises;const ini$1=ini$5;const path$5=path__default.default;var gitconfiglocal=async function gitConfigLocal(dir){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const config=await findGit(dir,options);if(!config)throw new Error('no gitconfig to be found at '+dir);const data=await fs$3.readFile(config);return format(ini$1.parse(data.toString()));};function format(data){const out={};Object.keys(data).forEach(function(k){if(k.indexOf('"')>-1){const parts=k.split('"');const parentKey=parts.shift().trim();const childKey=parts.shift().trim();if(!out[parentKey])out[parentKey]={};out[parentKey][childKey]=data[k];}else{out[k]={...out[k],...data[k]};}});return out;}async function findGit(dir,options){const folder=path$5.resolve(dir,options.gitDir||process.env.GIT_DIR||'.git','config');const exists=await pathExists$1(folder);if(exists)return folder;if(dir===path$5.resolve(dir,'..'))return false;return findGit(path$5.resolve(dir,'..'),options);}function pathExists$1(filePath){return fs$3.access(filePath).then(()=>true,()=>false);}var getGitConfig=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(gitconfiglocal);/*!
 * fs-exists-sync (https://github.com/jonschlinkert/fs-exists-sync)
 *
 * Copyright (c) 2016, Jon Schlinkert.
 * Licensed under the MIT License.
 */var fs$2=require$$0__default.default;var fsExistsSync=function(filepath){try{(fs$2.accessSync||fs$2.statSync)(filepath);return true;}catch(err){}return false;};/*!
 * is-extendable <https://github.com/jonschlinkert/is-extendable>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */var isExtendable=function isExtendable(val){return typeof val!=='undefined'&&val!==null&&(typeof val==='object'||typeof val==='function');};var isObject$2=isExtendable;var extendShallow=function extend(o/*, objects*/){if(!isObject$2(o)){o={};}var len=arguments.length;for(var i=1;i<len;i++){var obj=arguments[i];if(isObject$2(obj)){assign(o,obj);}}return o;};function assign(a,b){for(var key in b){if(hasOwn(b,key)){a[key]=b[key];}}}/**
 * Returns true if the given `key` is an own property of `obj`.
 */function hasOwn(obj,key){return Object.prototype.hasOwnProperty.call(obj,key);}var homedirPolyfill={exports:{}};var parsePasswd;var hasRequiredParsePasswd;function requireParsePasswd(){if(hasRequiredParsePasswd)return parsePasswd;hasRequiredParsePasswd=1;/**
	 * Parse the content of a passwd file into a list of user objects.
	 * This function ignores blank lines and comments.
	 *
	 * ```js
	 * // assuming '/etc/passwd' contains:
	 * // doowb:*:123:123:Brian Woodward:/Users/doowb:/bin/bash
	 * console.log(parse(fs.readFileSync('/etc/passwd', 'utf8')));
	 *
	 * //=> [
	 * //=>   {
	 * //=>     username: 'doowb',
	 * //=>     password: '*',
	 * //=>     uid: '123',
	 * //=>     gid: '123',
	 * //=>     gecos: 'Brian Woodward',
	 * //=>     homedir: '/Users/doowb',
	 * //=>     shell: '/bin/bash'
	 * //=>   }
	 * //=> ]
	 * ```
	 * @param  {String} `content` Content of a passwd file to parse.
	 * @return {Array} Array of user objects parsed from the content.
	 * @api public
	 */parsePasswd=function(content){if(typeof content!=='string'){throw new Error('expected a string');}return content.split('\n').map(user).filter(Boolean);};function user(line,i){if(!line||!line.length||line.charAt(0)==='#'){return null;}// see https://en.wikipedia.org/wiki/Passwd for field descriptions
var fields=line.split(':');return{username:fields[0],password:fields[1],uid:fields[2],gid:fields[3],// see https://en.wikipedia.org/wiki/Gecos_field for GECOS field descriptions
gecos:fields[4],homedir:fields[5],shell:fields[6]};}return parsePasswd;}var polyfill;var hasRequiredPolyfill;function requirePolyfill(){if(hasRequiredPolyfill)return polyfill;hasRequiredPolyfill=1;var fs=require$$0__default.default;var parse=requireParsePasswd();function homedir(){// The following logic is from looking at logic used in the different platform
// versions of the uv_os_homedir function found in https://github.com/libuv/libuv
// This is the function used in modern versions of node.js
if(process.platform==='win32'){// check the USERPROFILE first
if(process.env.USERPROFILE){return process.env.USERPROFILE;}// check HOMEDRIVE and HOMEPATH
if(process.env.HOMEDRIVE&&process.env.HOMEPATH){return process.env.HOMEDRIVE+process.env.HOMEPATH;}// fallback to HOME
if(process.env.HOME){return process.env.HOME;}return null;}// check HOME environment variable first
if(process.env.HOME){return process.env.HOME;}// on linux platforms (including OSX) find the current user and get their homedir from the /etc/passwd file
var passwd=tryReadFileSync('/etc/passwd');var home=find(parse(passwd),getuid());if(home){return home;}// fallback to using user environment variables
var user=process.env.LOGNAME||process.env.USER||process.env.LNAME||process.env.USERNAME;if(!user){return null;}if(process.platform==='darwin'){return'/Users/'+user;}return'/home/'+user;}function find(arr,uid){var len=arr.length;for(var i=0;i<len;i++){if(+arr[i].uid===uid){return arr[i].homedir;}}}function getuid(){if(typeof process.geteuid==='function'){return process.geteuid();}return process.getuid();}function tryReadFileSync(fp){try{return fs.readFileSync(fp,'utf8');}catch(err){return'';}}polyfill=homedir;return polyfill;}var os$1=require$$0__default$2.default;if(typeof os$1.homedir!=='undefined'){homedirPolyfill.exports=os$1.homedir;}else{homedirPolyfill.exports=requirePolyfill();}var homedirPolyfillExports=homedirPolyfill.exports;/*!
 * git-config-path <https://github.com/jonschlinkert/git-config-path>
 *
 * Copyright (c) 2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */var path$4=path__default.default;var exists$1=fsExistsSync;var extend$1=extendShallow;var homedir=homedirPolyfillExports;var gitConfigPath=function(type,options){if(typeof type!=='string'){options=type;type=null;}var opts=extend$1({cwd:process.cwd()},options);type=type||opts.type;var configPath=path$4.resolve(opts.cwd,'.git/config');if(type==='global'){configPath=path$4.join(homedir(),'.gitconfig');}if(!exists$1(configPath)){if(typeof type==='string'){return null;}configPath=path$4.join(homedir(),'.config/git/config');}return exists$1(configPath)?configPath:null;};/*!
 * parse-git-config <https://github.com/jonschlinkert/parse-git-config>
 *
 * Copyright (c) 2015 Jon Schlinkert.
 * Licensed under the MIT license.
 */var fs$1=require$$0__default.default;var path$3=path__default.default;var exists=fsExistsSync;var extend=extendShallow;var configPath=gitConfigPath;var ini=ini$5;/**
 * Asynchronously parse a `.git/config` file. If only the callback is passed,
 * the `.git/config` file relative to `process.cwd()` is used.
 *
 * ```js
 * parse(function(err, config) {
 *   if (err) throw err;
 *   // do stuff with config
 * });
 * ```
 * @param {Object|String|Function} `options` Options with `cwd` or `path`, the cwd to use, or the callback function.
 * @param {Function} `cb` callback function if the first argument is options or cwd.
 * @return {Object}
 * @api public
 */function parse$2(options,cb){if(typeof options==='function'){cb=options;options={};}if(typeof cb!=='function'){throw new TypeError('parse-git-config async expects a callback function.');}options=options||{};var filepath=parse$2.resolve(options);fs$1.stat(filepath,function(err,stat){if(err)return cb(err);fs$1.readFile(filepath,'utf8',function(err,str){if(err)return cb(err);var parsed=ini.parse(str);cb(null,parsed);});});}/**
 * Synchronously parse a `.git/config` file. If no arguments are passed,
 * the `.git/config` file relative to `process.cwd()` is used.
 *
 * ```js
 * var config = parse.sync();
 * ```
 *
 * @name .sync
 * @param {Object|String} `options` Options with `cwd` or `path`, or the cwd to use.
 * @return {Object}
 * @api public
 */parse$2.sync=function parseSync(options){options=options||{};var filepath=parse$2.resolve(options);if(filepath&&exists(filepath)){var str=fs$1.readFileSync(filepath,'utf8');return ini.parse(str);}return{};};/**
 * Resolve the git config path
 */parse$2.resolve=function resolve(options){if(typeof options==='string'){options={type:options};}var opts=extend({cwd:process.cwd()},options);var fp=opts.path||configPath(opts.type);return fp?path$3.resolve(opts.cwd,fp):null;};/**
 * Returns an object with only the properties that had ini-style keys
 * converted to objects (example below).
 *
 * ```js
 * var config = parse.sync();
 * var obj = parse.keys(config);
 * ```
 * @name .keys
 * @param {Object} `config` The parsed git config object.
 * @return {Object}
 * @api public
 */parse$2.keys=function parseKeys(config){var res={};for(var key in config){var m=/(\S+) "(.*)"/.exec(key);if(!m)continue;var prop=m[1];res[prop]=res[prop]||{};res[prop][m[2]]=config[key];}return res;};/**
 * Expose `parse`
 */var parseGitConfig=parse$2;const gitconfig=gitConfigPath;const parse$1=parseGitConfig;async function getGitUserInfo(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const opts={cwd:'/',path:gitconfig(),...options};const user=await getUserFromConfig(opts);if(user||options.path){return user;}// If the user didn't explicitly define a path, try the global git config as well
return getUserFromConfig({...opts,path:gitconfig('global')});}function getUserFromConfig(options){return new Promise((resolve,reject)=>{if(typeof options.path!=='string'){return resolve(null);}parse$1(options,(err,config)=>{if(err){reject(err);return;}resolve(config&&config.user?config.user:null);});});}var gitUserInfo={getGitUserInfo};function getProjectDefaults(workDir,_ref37){let{isPlugin,context}=_ref37;const cwd=process.cwd();const isSanityRoot=workDir===cwd;return promiseProps$1({license:"UNLICENSED",author:getUserInfo(context),// Don't try to use git remote from main Sanity project for plugins
gitRemote:isPlugin&&isSanityRoot?"":resolveGitRemote(cwd),// Don't try to guess plugin name if we're initing from Sanity root
projectName:isPlugin&&isSanityRoot?"":path__default.default.basename(cwd),// If we're initing a plugin, don't use description from Sanity readme
description:getProjectDescription({isSanityRoot,isPlugin,outputDir:cwd})});}async function resolveGitRemote(cwd){try{await fs__default.default.stat(path__default.default.join(cwd,".git"));const cfg=await getGitConfig(cwd);return cfg.remote&&cfg.remote.origin&&cfg.remote.origin.url;}catch{return void 0;}}async function getUserInfo(context){const user=await gitUserInfo.getGitUserInfo();if(!user){return getSanityUserInfo(context);}if(user.name&&user.email){return"".concat(user.name," <").concat(user.email,">");}return void 0;}async function getSanityUserInfo(context){const hasToken=Boolean(getCliToken());if(!hasToken){return void 0;}const client=context.apiClient({requireUser:true,requireProject:false});try{const user=await client.users.getById("me");return user?"".concat(user.name," <").concat(user.email,">"):void 0;}catch{return void 0;}}async function getProjectDescription(_ref38){let{isSanityRoot,isPlugin,outputDir}=_ref38;const tryResolve=isSanityRoot&&!isPlugin;if(!tryResolve){return Promise.resolve("");}try{const readmePath=path__default.default.join(outputDir,"README.md");const readme=await fs__default.default.readFile(readmePath,{encoding:"utf8"});const match=readme.match(/^# .*?\n+(\w.*?)(?:$|\n)/);return(match&&match[1]||"").replace(/\.$/,"")||"";}catch(err){return"";}}function canLaunchBrowser(){const isWindowsOrMac=["win32","darwin"].includes(require$$0__default$2.default.platform());if(isWindowsOrMac){return true;}const hasWM=Boolean(process.env.XDG_CURRENT_DESKTOP||process.env.GDMSESSION);return hasWM;}function createExpiringConfig(_ref39){let{key,ttl,store,fetchValue,onRevalidate=()=>null,onFetch=()=>null,onCacheHit=()=>null}=_ref39;let currentFetch=null;return{async get(){var _store$get;const{value,updatedAt}=(_store$get=store.get(key))!==null&&_store$get!==void 0?_store$get:{};if(value&&updatedAt){const hasExpired=Date.now()-updatedAt>ttl;if(!hasExpired){onCacheHit();return value;}onRevalidate();}if(currentFetch){return currentFetch;}onFetch();currentFetch=Promise.resolve(fetchValue());const nextValue=await currentFetch;currentFetch=null;store.set(key,{value:nextValue,updatedAt:Date.now()});return nextValue;},delete(){store.delete(key);}};}function isTrueish(value){if(value===void 0)return false;if(value.toLowerCase()==="true")return true;if(value.toLowerCase()==="false")return false;const number=parseInt(value,10);if(isNaN(number))return false;return number>0;}const isCi=isTrueish(process.env.CI)||// Travis CI, CircleCI, Gitlab CI, Appveyor, CodeShip
isTrueish(process.env.CONTINUOUS_INTEGRATION)||// Travis CI
process.env.BUILD_NUMBER;const debug$1=loadEnv.debug.extend("telemetry");const FIVE_MINUTES=1e3*60*5;const LOG_FILE_NAME="telemetry-events.ndjson";const TELEMETRY_CONSENT_CONFIG_KEY="telemetryConsent";const VALID_API_STATUSES=["granted","denied","unset"];function isValidApiConsentStatus(status){return VALID_API_STATUSES.includes(status);}function parseApiConsentStatus(value){if(typeof value==="string"&&isValidApiConsentStatus(value)){return value;}throw new Error("Invalid consent status. Must be one of: ".concat(VALID_API_STATUSES.join(", ")));}function createTelemetryClient(token){const getClient=getClientWrapper(null,"sanity.cli.js");return getClient({requireUser:false,requireProject:false}).config({apiVersion:"2023-12-18",token,useCdn:false,useProjectHostname:false});}let _client=null;function getCachedClient(token){if(!_client){_client=createTelemetryClient(token);}return _client;}function resolveConsent(_ref40){let{env}=_ref40;debug$1("Resolving consent\u2026");if(isCi){debug$1("CI environment detected, treating telemetry consent as denied");return Promise.resolve({status:"denied"});}if(isTrueish(env.DO_NOT_TRACK)){debug$1("DO_NOT_TRACK is set, consent is denied");return Promise.resolve({status:"denied",reason:"localOverride"});}const token=getCliToken();if(!token){debug$1("User is not logged in, consent is undetermined");return Promise.resolve({status:"undetermined",reason:"unauthenticated"});}const client=getCachedClient(token);function fetchConsent(){const telemetryConsentConfig=createExpiringConfig({store:getUserConfig(),key:TELEMETRY_CONSENT_CONFIG_KEY,ttl:FIVE_MINUTES,fetchValue:()=>client.request({uri:"/intake/telemetry-status"}),onRevalidate(){debug$1("Revalidating cached telemetry consent status...");},onFetch(){debug$1("Fetching telemetry consent status...");},onCacheHit(){debug$1("Retrieved telemetry consent status from cache");}});return telemetryConsentConfig.get();}return fetchConsent().then(response=>{debug$1("User consent status is %s",response.status);return{status:parseApiConsentStatus(response.status)};}).catch(err=>{debug$1('Failed to fetch user consent status, treating it as "undetermined": %s',err.stack);return{status:"undetermined",reason:"fetchError"};});}function createTelemetryStore(_ref41){let{env,projectId}=_ref41;debug$1("Initializing telemetry");async function sendEvents(batch){const token=getCliToken();if(!token){debug$1("No user token found. Something is not quite right");return Promise.reject(new Error("User is not logged in"));}const inspectEvents=isTrueish(env.SANITY_TELEMETRY_INSPECT);if(inspectEvents){console.info("SANITY_TELEMETRY_INSPECT is set, appending events to \"".concat(LOG_FILE_NAME,"\""));await fs$o.appendFile(LOG_FILE_NAME,"".concat(batch.map(entry=>JSON.stringify(entry)).join("\n"),"\n"));}const client=getCachedClient(token);debug$1("Submitting %s telemetry events",batch.length);try{return await client.request({uri:"/intake/batch",method:"POST",json:true,body:{projectId,batch}});}catch(err){const statusCode=err.response&&err.response.statusCode;debug$1("Failed to send telemetry events%s: %s",statusCode?" (HTTP ".concat(statusCode,")"):"",err.stack);throw err;}}const sessionId=telemetry.createSessionId();debug$1("session id: %s",sessionId);const store=telemetry.createBatchedStore(sessionId,{resolveConsent:()=>resolveConsent({env}),sendEvents});process.once("SIGINT",()=>store.flush().finally(()=>process.exit(0)));process.once("beforeExit",()=>store.flush());process.once("unhandledRejection",()=>store.flush());process.once("uncaughtException",()=>store.flush());return store;}const LoginTrace=telemetry.defineTrace({name:"CLI Login Step Completed",version:1,description:"User completed a step in the CLI login flow"});const callbackEndpoint="/callback";const debug=loadEnv.debug.extend("auth");const callbackPorts=[4321,4e3,3003,1234,8080,13333];const platformNames={aix:"AIX",android:"Android",darwin:"MacOS",freebsd:"FreeBSD",linux:"Linux",openbsd:"OpenBSD",sunos:"SunOS",win32:"Windows"};async function login(args,context){const{prompt,output,apiClient,telemetry}=context;const{sso,experimental,open:openFlag,provider:specifiedProvider}=args.extOptions;const previousToken=getCliToken();const hasExistingToken=Boolean(previousToken);const trace=telemetry.trace(LoginTrace);trace.start();const client=apiClient({requireUser:false,requireProject:false}).clone().config({token:void 0});const provider=await getProvider({client,sso,experimental,output,prompt,specifiedProvider});trace.log({step:"selectProvider",provider:provider===null||provider===void 0?void 0:provider.name});if(provider===void 0){throw new Error("No authentication providers found");}const apiHost=client.config().apiHost||"https://api.sanity.io";const{server,token:tokenPromise}=await startServerForTokenCallback({apiHost,apiClient});trace.log({step:"waitForToken"});const serverUrl=server.address();if(!serverUrl||typeof serverUrl==="string"){throw new Error("Failed to start auth callback server");}const loginUrl=new URL(provider.url);const platformName=require$$0__default$2.default.platform();const platform=platformName in platformNames?platformNames[platformName]:platformName;const hostname=require$$0__default$2.default.hostname().replace(/\.(local|lan)$/g,"");loginUrl.searchParams.set("type","token");loginUrl.searchParams.set("label","".concat(hostname," / ").concat(platform));loginUrl.searchParams.set("origin","http://localhost:".concat(serverUrl.port).concat(callbackEndpoint));const shouldLaunchBrowser=canLaunchBrowser()&&openFlag!==false;const actionText=shouldLaunchBrowser?"Opening browser at":"Please open a browser at";output.print("\n".concat(actionText," ").concat(loginUrl.href,"\n"));const spin=output.spinner("Waiting for browser login to complete... Press Ctrl + C to cancel").start();if(shouldLaunchBrowser){open$1(loginUrl.href);}let authToken;try{authToken=(await tokenPromise).token;spin.stop();}catch(err){spin.stop();trace.error(err);err.message="Login failed: ".concat(err.message);throw err;}finally{server.close();server.unref();}getUserConfig().set({authToken,authType:"normal"});getUserConfig().delete(TELEMETRY_CONSENT_CONFIG_KEY);if(hasExistingToken){await apiClient({requireUser:true,requireProject:false}).clone().config({token:previousToken}).request({uri:"/auth/logout",method:"POST"}).catch(err=>{const statusCode=err&&err.response&&err.response.statusCode;if(statusCode!==401){output.warn("[warn] Failed to log out existing session");}});}output.print(chalk__default.default.green("Login successful"));trace.complete();}function startServerForTokenCallback(options){const{apiHost,apiClient}=options;const domain=apiHost.includes(".sanity.work")?"www.sanity.work":"www.sanity.io";const attemptPorts=callbackPorts.slice();let callbackPort=attemptPorts.shift();let resolveToken;let rejectToken;const tokenPromise=new Promise((resolve,reject)=>{resolveToken=resolve;rejectToken=reject;});return new Promise((resolve,reject)=>{const server=require$$6__default.default.createServer(async function onCallbackServerRequest(req,res){function failLoginRequest(){let code=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"";res.writeHead(303,"See Other",{Location:"https://".concat(domain,"/login/error").concat(code?"?error=".concat(code):"")});res.end();server.close();}const url=new URL(req.url||"/","http://localhost:".concat(callbackPort));if(url.pathname!==callbackEndpoint){res.writeHead(404,"Not Found",{"Content-Type":"text/plain"});res.write("404 Not Found");res.end();return;}const absoluteTokenUrl=url.searchParams.get("url");if(!absoluteTokenUrl){failLoginRequest();return;}const tokenUrl=new URL(absoluteTokenUrl);if(!tokenUrl.searchParams.has("sid")){failLoginRequest("NO_SESSION_ID");return;}let token;try{token=await apiClient({requireUser:false,requireProject:false}).clone().request({uri:"/auth/fetch".concat(tokenUrl.search)});}catch(err){failLoginRequest("UNRESOLVED_SESSION");rejectToken(err);return;}res.writeHead(303,"See Other",{Location:"https://".concat(domain,"/login/success")});res.end();server.close();resolveToken(token);});server.on("listening",function onCallbackListen(){resolve({token:tokenPromise,server});});server.on("error",function onCallbackServerError(err){if("code"in err&&err.code==="EADDRINUSE"){callbackPort=attemptPorts.shift();if(!callbackPort){reject(new Error("Failed to find port number to bind auth callback server to"));return;}debug("Port busy, trying %d",callbackPort);server.listen(callbackPort);}else{reject(err);}});debug("Starting callback server on port %d",callbackPort);server.listen(callbackPort);});}async function getProvider(_ref42){let{output,client,sso,experimental,prompt,specifiedProvider}=_ref42;if(sso){return getSSOProvider({client,prompt,slug:sso});}const spin=output.spinner("Fetching providers...").start();let{providers}=await client.request({uri:"/auth/providers"});if(experimental){providers=[...providers,{name:"sso",title:"SSO",url:"_not_used_"}];}spin.stop();const providerNames=providers.map(prov=>prov.name);if(specifiedProvider&&providerNames.includes(specifiedProvider)){const provider2=providers.find(prov=>prov.name===specifiedProvider);if(!provider2){throw new Error("Cannot find login provider with name \"".concat(specifiedProvider,"\""));}return provider2;}const provider=await promptProviders(prompt,providers);if(provider.name==="sso"){const slug=await prompt.single({type:"input",message:"Organization slug:"});return getSSOProvider({client,prompt,slug});}return provider;}async function getSSOProvider(_ref43){let{client,prompt,slug}=_ref43;const providers=await client.withConfig({apiVersion:"2021-10-01"}).request({uri:"/auth/organizations/by-slug/".concat(slug,"/providers")});const enabledProviders=providers.filter(candidate=>!candidate.disabled);if(enabledProviders.length===0){return void 0;}if(enabledProviders.length===1){return samlProviderToLoginProvider(enabledProviders[0]);}const choice=await prompt.single({type:"list",message:"Select SSO provider",choices:enabledProviders.map(provider=>provider.name)});const foundProvider=enabledProviders.find(provider=>provider.name===choice);return foundProvider?samlProviderToLoginProvider(foundProvider):void 0;}async function promptProviders(prompt,providers){if(providers.length===1){return providers[0];}const provider=await prompt.single({type:"list",message:"Login type",choices:providers.map(choice=>choice.title)});return providers.find(prov=>prov.title===provider)||providers[0];}function samlProviderToLoginProvider(saml){return{name:saml.name,title:saml.name,url:saml.loginUrl};}function createProject(apiClient,options){return apiClient({requireUser:true,requireProject:false}).request({method:"POST",uri:"/projects",body:options}).then(response=>({projectId:response.projectId||response.id,displayName:options.displayName||""}));}const studioDependencies={// Dependencies for a default Sanity installation
dependencies:{// Official studio dependencies
sanity:"latest",// Official studio plugin dependencies
"@sanity/vision":"latest",// Non-Sanity dependencies
react:"^18.2.0","react-dom":"^18.2.0","react-is":"^18.2.0",// Peer dependency of styled-components
"styled-components":"^6.0.7"},devDependencies:{// Linting/tooling
"@sanity/eslint-config-studio":"latest",// When using typescript, we'll want the these types too, so might as well install them
"@types/react":"^18.0.25",eslint:"^8.6.0",prettier:"^3.0.2",typescript:"^5.1.6"// Peer dependency of eslint-config-studio (implicitly)
}};async function readdirRecursive(dir){let content=[];const currentPath=path__default.default.resolve(dir);const dirContent=(await fs__default.default.readdir(currentPath)).map(item=>path__default.default.join(currentPath,item));for(const subPath of dirContent){const stat=await fs__default.default.stat(subPath);const isDir=stat.isDirectory();content.push({path:subPath,isDir});if(isDir){content=content.concat(await readdirRecursive(subPath));}}return content;}async function copy(srcPath,dstPath,options){const rename=options===null||options===void 0?void 0:options.rename;const content=(await fs__default.default.stat(srcPath)).isDirectory()?await readdirRecursive(srcPath):[{path:srcPath,isDir:false}];const directories=content.filter(entry=>entry.isDir).sort((a,b)=>b.path.length-a.path.length).sort((a,b)=>a.path.localeCompare(b.path)).map(entry=>entry.path);for(const subDir of directories){const relativePath=path__default.default.relative(srcPath,subDir);const fullDstPath=path__default.default.join(dstPath,relativePath);await fs__default.default.mkdir(fullDstPath,{recursive:true});}const files=content.filter(entry=>!entry.isDir).sort((a,b)=>b.path.length-a.path.length).sort((a,b)=>a.path.localeCompare(b.path)).map(entry=>{const relativePath=path__default.default.relative(srcPath,entry.path);const baseName=path__default.default.basename(relativePath);const dirName=path__default.default.dirname(relativePath);const dstName=rename?rename(baseName):baseName;const fullDstPath=path__default.default.join(dstPath,dirName,dstName);return{from:entry.path,to:fullDstPath};});for(const file of files){await fs__default.default.copyFile(file.from,file.to);}return files.length;}function resolveLatestVersions(pkgs){const lookups={};for(const[packageName,range]of Object.entries(pkgs)){lookups[packageName]=range==="latest"?latestVersion(packageName,{range}).then(caretify):range;}return promiseProps$1(lookups);}function caretify(version){return version?"^".concat(version):"latest";}var main$4={};var require$$0$3=/*@__PURE__*/loadEnv.getAugmentedNamespace(loadEnv.tslib_es6);var main$3={};var fork={exports:{}};var types={};var hasRequiredTypes;function requireTypes(){if(hasRequiredTypes)return types;hasRequiredTypes=1;Object.defineProperty(types,"__esModule",{value:true});types.Def=void 0;var tslib_1=require$$0$3;var Op=Object.prototype;var objToStr=Op.toString;var hasOwn=Op.hasOwnProperty;var BaseType=/** @class */function(){function BaseType(){}BaseType.prototype.assert=function(value,deep){if(!this.check(value,deep)){var str=shallowStringify(value);throw new Error(str+" does not match type "+this);}return true;};BaseType.prototype.arrayOf=function(){var elemType=this;return new ArrayType(elemType);};return BaseType;}();var ArrayType=/** @class */function(_super){(0,tslib_1.__extends)(ArrayType,_super);function ArrayType(elemType){var _this=_super.call(this)||this;_this.elemType=elemType;_this.kind="ArrayType";return _this;}ArrayType.prototype.toString=function(){return"["+this.elemType+"]";};ArrayType.prototype.check=function(value,deep){var _this=this;return Array.isArray(value)&&value.every(function(elem){return _this.elemType.check(elem,deep);});};return ArrayType;}(BaseType);var IdentityType=/** @class */function(_super){(0,tslib_1.__extends)(IdentityType,_super);function IdentityType(value){var _this=_super.call(this)||this;_this.value=value;_this.kind="IdentityType";return _this;}IdentityType.prototype.toString=function(){return String(this.value);};IdentityType.prototype.check=function(value,deep){var result=value===this.value;if(!result&&typeof deep==="function"){deep(this,value);}return result;};return IdentityType;}(BaseType);var ObjectType=/** @class */function(_super){(0,tslib_1.__extends)(ObjectType,_super);function ObjectType(fields){var _this=_super.call(this)||this;_this.fields=fields;_this.kind="ObjectType";return _this;}ObjectType.prototype.toString=function(){return"{ "+this.fields.join(", ")+" }";};ObjectType.prototype.check=function(value,deep){return objToStr.call(value)===objToStr.call({})&&this.fields.every(function(field){return field.type.check(value[field.name],deep);});};return ObjectType;}(BaseType);var OrType=/** @class */function(_super){(0,tslib_1.__extends)(OrType,_super);function OrType(types){var _this=_super.call(this)||this;_this.types=types;_this.kind="OrType";return _this;}OrType.prototype.toString=function(){return this.types.join(" | ");};OrType.prototype.check=function(value,deep){return this.types.some(function(type){return type.check(value,deep);});};return OrType;}(BaseType);var PredicateType=/** @class */function(_super){(0,tslib_1.__extends)(PredicateType,_super);function PredicateType(name,predicate){var _this=_super.call(this)||this;_this.name=name;_this.predicate=predicate;_this.kind="PredicateType";return _this;}PredicateType.prototype.toString=function(){return this.name;};PredicateType.prototype.check=function(value,deep){var result=this.predicate(value,deep);if(!result&&typeof deep==="function"){deep(this,value);}return result;};return PredicateType;}(BaseType);var Def=/** @class */function(){function Def(type,typeName){this.type=type;this.typeName=typeName;this.baseNames=[];this.ownFields=Object.create(null);// Includes own typeName. Populated during finalization.
this.allSupertypes=Object.create(null);// Linear inheritance hierarchy. Populated during finalization.
this.supertypeList=[];// Includes inherited fields.
this.allFields=Object.create(null);// Non-hidden keys of allFields.
this.fieldNames=[];// This property will be overridden as true by individual Def instances
// when they are finalized.
this.finalized=false;// False by default until .build(...) is called on an instance.
this.buildable=false;this.buildParams=[];}Def.prototype.isSupertypeOf=function(that){if(that instanceof Def){if(this.finalized!==true||that.finalized!==true){throw new Error("");}return hasOwn.call(that.allSupertypes,this.typeName);}else{throw new Error(that+" is not a Def");}};Def.prototype.checkAllFields=function(value,deep){var allFields=this.allFields;if(this.finalized!==true){throw new Error(""+this.typeName);}function checkFieldByName(name){var field=allFields[name];var type=field.type;var child=field.getValue(value);return type.check(child,deep);}return value!==null&&typeof value==="object"&&Object.keys(allFields).every(checkFieldByName);};Def.prototype.bases=function(){var supertypeNames=[];for(var _i=0;_i<arguments.length;_i++){supertypeNames[_i]=arguments[_i];}var bases=this.baseNames;if(this.finalized){if(supertypeNames.length!==bases.length){throw new Error("");}for(var i=0;i<supertypeNames.length;i++){if(supertypeNames[i]!==bases[i]){throw new Error("");}}return this;}supertypeNames.forEach(function(baseName){// This indexOf lookup may be O(n), but the typical number of base
// names is very small, and indexOf is a native Array method.
if(bases.indexOf(baseName)<0){bases.push(baseName);}});return this;// For chaining.
};return Def;}();types.Def=Def;var Field=/** @class */function(){function Field(name,type,defaultFn,hidden){this.name=name;this.type=type;this.defaultFn=defaultFn;this.hidden=!!hidden;}Field.prototype.toString=function(){return JSON.stringify(this.name)+": "+this.type;};Field.prototype.getValue=function(obj){var value=obj[this.name];if(typeof value!=="undefined"){return value;}if(typeof this.defaultFn==="function"){value=this.defaultFn.call(obj);}return value;};return Field;}();function shallowStringify(value){if(Array.isArray(value)){return"["+value.map(shallowStringify).join(", ")+"]";}if(value&&typeof value==="object"){return"{ "+Object.keys(value).map(function(key){return key+": "+value[key];}).join(", ")+" }";}return JSON.stringify(value);}function typesPlugin(_fork){var Type={or:function(){var types=[];for(var _i=0;_i<arguments.length;_i++){types[_i]=arguments[_i];}return new OrType(types.map(function(type){return Type.from(type);}));},from:function(value,name){if(value instanceof ArrayType||value instanceof IdentityType||value instanceof ObjectType||value instanceof OrType||value instanceof PredicateType){return value;}// The Def type is used as a helper for constructing compound
// interface types for AST nodes.
if(value instanceof Def){return value.type;}// Support [ElemType] syntax.
if(isArray.check(value)){if(value.length!==1){throw new Error("only one element type is permitted for typed arrays");}return new ArrayType(Type.from(value[0]));}// Support { someField: FieldType, ... } syntax.
if(isObject.check(value)){return new ObjectType(Object.keys(value).map(function(name){return new Field(name,Type.from(value[name],name));}));}if(typeof value==="function"){var bicfIndex=builtInCtorFns.indexOf(value);if(bicfIndex>=0){return builtInCtorTypes[bicfIndex];}if(typeof name!=="string"){throw new Error("missing name");}return new PredicateType(name,value);}// As a last resort, toType returns a type that matches any value that
// is === from. This is primarily useful for literal values like
// toType(null), but it has the additional advantage of allowing
// toType to be a total function.
return new IdentityType(value);},// Define a type whose name is registered in a namespace (the defCache) so
// that future definitions will return the same type given the same name.
// In particular, this system allows for circular and forward definitions.
// The Def object d returned from Type.def may be used to configure the
// type d.type by calling methods such as d.bases, d.build, and d.field.
def:function(typeName){return hasOwn.call(defCache,typeName)?defCache[typeName]:defCache[typeName]=new DefImpl(typeName);},hasDef:function(typeName){return hasOwn.call(defCache,typeName);}};var builtInCtorFns=[];var builtInCtorTypes=[];function defBuiltInType(name,example){var objStr=objToStr.call(example);var type=new PredicateType(name,function(value){return objToStr.call(value)===objStr;});if(example&&typeof example.constructor==="function"){builtInCtorFns.push(example.constructor);builtInCtorTypes.push(type);}return type;}// These types check the underlying [[Class]] attribute of the given
// value, rather than using the problematic typeof operator. Note however
// that no subtyping is considered; so, for instance, isObject.check
// returns false for [], /./, new Date, and null.
var isString=defBuiltInType("string","truthy");var isFunction=defBuiltInType("function",function(){});var isArray=defBuiltInType("array",[]);var isObject=defBuiltInType("object",{});var isRegExp=defBuiltInType("RegExp",/./);var isDate=defBuiltInType("Date",new Date());var isNumber=defBuiltInType("number",3);var isBoolean=defBuiltInType("boolean",true);var isNull=defBuiltInType("null",null);var isUndefined=defBuiltInType("undefined",undefined);var isBigInt=typeof BigInt==="function"?defBuiltInType("BigInt",BigInt(1234)):new PredicateType("BigInt",function(){return false;});var builtInTypes={string:isString,function:isFunction,array:isArray,object:isObject,RegExp:isRegExp,Date:isDate,number:isNumber,boolean:isBoolean,null:isNull,undefined:isUndefined,BigInt:isBigInt};// In order to return the same Def instance every time Type.def is called
// with a particular name, those instances need to be stored in a cache.
var defCache=Object.create(null);function defFromValue(value){if(value&&typeof value==="object"){var type=value.type;if(typeof type==="string"&&hasOwn.call(defCache,type)){var d=defCache[type];if(d.finalized){return d;}}}return null;}var DefImpl=/** @class */function(_super){(0,tslib_1.__extends)(DefImpl,_super);function DefImpl(typeName){var _this=_super.call(this,new PredicateType(typeName,function(value,deep){return _this.check(value,deep);}),typeName)||this;return _this;}DefImpl.prototype.check=function(value,deep){if(this.finalized!==true){throw new Error("prematurely checking unfinalized type "+this.typeName);}// A Def type can only match an object value.
if(value===null||typeof value!=="object"){return false;}var vDef=defFromValue(value);if(!vDef){// If we couldn't infer the Def associated with the given value,
// and we expected it to be a SourceLocation or a Position, it was
// probably just missing a "type" field (because Esprima does not
// assign a type property to such nodes). Be optimistic and let
// this.checkAllFields make the final decision.
if(this.typeName==="SourceLocation"||this.typeName==="Position"){return this.checkAllFields(value,deep);}// Calling this.checkAllFields for any other type of node is both
// bad for performance and way too forgiving.
return false;}// If checking deeply and vDef === this, then we only need to call
// checkAllFields once. Calling checkAllFields is too strict when deep
// is false, because then we only care about this.isSupertypeOf(vDef).
if(deep&&vDef===this){return this.checkAllFields(value,deep);}// In most cases we rely exclusively on isSupertypeOf to make O(1)
// subtyping determinations. This suffices in most situations outside
// of unit tests, since interface conformance is checked whenever new
// instances are created using builder functions.
if(!this.isSupertypeOf(vDef)){return false;}// The exception is when deep is true; then, we recursively check all
// fields.
if(!deep){return true;}// Use the more specific Def (vDef) to perform the deep check, but
// shallow-check fields defined by the less specific Def (this).
return vDef.checkAllFields(value,deep)&&this.checkAllFields(value,false);};DefImpl.prototype.build=function(){var _this=this;var buildParams=[];for(var _i=0;_i<arguments.length;_i++){buildParams[_i]=arguments[_i];}// Calling Def.prototype.build multiple times has the effect of merely
// redefining this property.
this.buildParams=buildParams;if(this.buildable){// If this Def is already buildable, update self.buildParams and
// continue using the old builder function.
return this;}// Every buildable type will have its "type" field filled in
// automatically. This includes types that are not subtypes of Node,
// like SourceLocation, but that seems harmless (TODO?).
this.field("type",String,function(){return _this.typeName;});// Override Dp.buildable for this Def instance.
this.buildable=true;var addParam=function(built,param,arg,isArgAvailable){if(hasOwn.call(built,param))return;var all=_this.allFields;if(!hasOwn.call(all,param)){throw new Error(""+param);}var field=all[param];var type=field.type;var value;if(isArgAvailable){value=arg;}else if(field.defaultFn){// Expose the partially-built object to the default
// function as its `this` object.
value=field.defaultFn.call(built);}else{var message="no value or default function given for field "+JSON.stringify(param)+" of "+_this.typeName+"("+_this.buildParams.map(function(name){return all[name];}).join(", ")+")";throw new Error(message);}if(!type.check(value)){throw new Error(shallowStringify(value)+" does not match field "+field+" of type "+_this.typeName);}built[param]=value;};// Calling the builder function will construct an instance of the Def,
// with positional arguments mapped to the fields original passed to .build.
// If not enough arguments are provided, the default value for the remaining fields
// will be used.
var builder=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var argc=args.length;if(!_this.finalized){throw new Error("attempting to instantiate unfinalized type "+_this.typeName);}var built=Object.create(nodePrototype);_this.buildParams.forEach(function(param,i){if(i<argc){addParam(built,param,args[i],true);}else{addParam(built,param,null,false);}});Object.keys(_this.allFields).forEach(function(param){// Use the default value.
addParam(built,param,null,false);});// Make sure that the "type" field was filled automatically.
if(built.type!==_this.typeName){throw new Error("");}return built;};// Calling .from on the builder function will construct an instance of the Def,
// using field values from the passed object. For fields missing from the passed object,
// their default value will be used.
builder.from=function(obj){if(!_this.finalized){throw new Error("attempting to instantiate unfinalized type "+_this.typeName);}var built=Object.create(nodePrototype);Object.keys(_this.allFields).forEach(function(param){if(hasOwn.call(obj,param)){addParam(built,param,obj[param],true);}else{addParam(built,param,null,false);}});// Make sure that the "type" field was filled automatically.
if(built.type!==_this.typeName){throw new Error("");}return built;};Object.defineProperty(builders,getBuilderName(this.typeName),{enumerable:true,value:builder});return this;};// The reason fields are specified using .field(...) instead of an object
// literal syntax is somewhat subtle: the object literal syntax would
// support only one key and one value, but with .field(...) we can pass
// any number of arguments to specify the field.
DefImpl.prototype.field=function(name,type,defaultFn,hidden){if(this.finalized){console.error("Ignoring attempt to redefine field "+JSON.stringify(name)+" of finalized type "+JSON.stringify(this.typeName));return this;}this.ownFields[name]=new Field(name,Type.from(type),defaultFn,hidden);return this;// For chaining.
};DefImpl.prototype.finalize=function(){var _this=this;// It's not an error to finalize a type more than once, but only the
// first call to .finalize does anything.
if(!this.finalized){var allFields=this.allFields;var allSupertypes=this.allSupertypes;this.baseNames.forEach(function(name){var def=defCache[name];if(def instanceof Def){def.finalize();extend(allFields,def.allFields);extend(allSupertypes,def.allSupertypes);}else{var message="unknown supertype name "+JSON.stringify(name)+" for subtype "+JSON.stringify(_this.typeName);throw new Error(message);}});// TODO Warn if fields are overridden with incompatible types.
extend(allFields,this.ownFields);allSupertypes[this.typeName]=this;this.fieldNames.length=0;for(var fieldName in allFields){if(hasOwn.call(allFields,fieldName)&&!allFields[fieldName].hidden){this.fieldNames.push(fieldName);}}// Types are exported only once they have been finalized.
Object.defineProperty(namedTypes,this.typeName,{enumerable:true,value:this.type});this.finalized=true;// A linearization of the inheritance hierarchy.
populateSupertypeList(this.typeName,this.supertypeList);if(this.buildable&&this.supertypeList.lastIndexOf("Expression")>=0){wrapExpressionBuilderWithStatement(this.typeName);}}};return DefImpl;}(Def);// Note that the list returned by this function is a copy of the internal
// supertypeList, *without* the typeName itself as the first element.
function getSupertypeNames(typeName){if(!hasOwn.call(defCache,typeName)){throw new Error("");}var d=defCache[typeName];if(d.finalized!==true){throw new Error("");}return d.supertypeList.slice(1);}// Returns an object mapping from every known type in the defCache to the
// most specific supertype whose name is an own property of the candidates
// object.
function computeSupertypeLookupTable(candidates){var table={};var typeNames=Object.keys(defCache);var typeNameCount=typeNames.length;for(var i=0;i<typeNameCount;++i){var typeName=typeNames[i];var d=defCache[typeName];if(d.finalized!==true){throw new Error(""+typeName);}for(var j=0;j<d.supertypeList.length;++j){var superTypeName=d.supertypeList[j];if(hasOwn.call(candidates,superTypeName)){table[typeName]=superTypeName;break;}}}return table;}var builders=Object.create(null);// This object is used as prototype for any node created by a builder.
var nodePrototype={};// Call this function to define a new method to be shared by all AST
// nodes. The replaced method (if any) is returned for easy wrapping.
function defineMethod(name,func){var old=nodePrototype[name];// Pass undefined as func to delete nodePrototype[name].
if(isUndefined.check(func)){delete nodePrototype[name];}else{isFunction.assert(func);Object.defineProperty(nodePrototype,name,{enumerable:true,configurable:true,value:func});}return old;}function getBuilderName(typeName){return typeName.replace(/^[A-Z]+/,function(upperCasePrefix){var len=upperCasePrefix.length;switch(len){case 0:return"";// If there's only one initial capital letter, just lower-case it.
case 1:return upperCasePrefix.toLowerCase();default:// If there's more than one initial capital letter, lower-case
// all but the last one, so that XMLDefaultDeclaration (for
// example) becomes xmlDefaultDeclaration.
return upperCasePrefix.slice(0,len-1).toLowerCase()+upperCasePrefix.charAt(len-1);}});}function getStatementBuilderName(typeName){typeName=getBuilderName(typeName);return typeName.replace(/(Expression)?$/,"Statement");}var namedTypes={};// Like Object.keys, but aware of what fields each AST type should have.
function getFieldNames(object){var d=defFromValue(object);if(d){return d.fieldNames.slice(0);}if("type"in object){throw new Error("did not recognize object of type "+JSON.stringify(object.type));}return Object.keys(object);}// Get the value of an object property, taking object.type and default
// functions into account.
function getFieldValue(object,fieldName){var d=defFromValue(object);if(d){var field=d.allFields[fieldName];if(field){return field.getValue(object);}}return object&&object[fieldName];}// Iterate over all defined fields of an object, including those missing
// or undefined, passing each field name and effective value (as returned
// by getFieldValue) to the callback. If the object has no corresponding
// Def, the callback will never be called.
function eachField(object,callback,context){getFieldNames(object).forEach(function(name){callback.call(this,name,getFieldValue(object,name));},context);}// Similar to eachField, except that iteration stops as soon as the
// callback returns a truthy value. Like Array.prototype.some, the final
// result is either true or false to indicates whether the callback
// returned true for any element or not.
function someField(object,callback,context){return getFieldNames(object).some(function(name){return callback.call(this,name,getFieldValue(object,name));},context);}// Adds an additional builder for Expression subtypes
// that wraps the built Expression in an ExpressionStatements.
function wrapExpressionBuilderWithStatement(typeName){var wrapperName=getStatementBuilderName(typeName);// skip if the builder already exists
if(builders[wrapperName])return;// the builder function to wrap with builders.ExpressionStatement
var wrapped=builders[getBuilderName(typeName)];// skip if there is nothing to wrap
if(!wrapped)return;var builder=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return builders.expressionStatement(wrapped.apply(builders,args));};builder.from=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return builders.expressionStatement(wrapped.from.apply(builders,args));};builders[wrapperName]=builder;}function populateSupertypeList(typeName,list){list.length=0;list.push(typeName);var lastSeen=Object.create(null);for(var pos=0;pos<list.length;++pos){typeName=list[pos];var d=defCache[typeName];if(d.finalized!==true){throw new Error("");}// If we saw typeName earlier in the breadth-first traversal,
// delete the last-seen occurrence.
if(hasOwn.call(lastSeen,typeName)){delete list[lastSeen[typeName]];}// Record the new index of the last-seen occurrence of typeName.
lastSeen[typeName]=pos;// Enqueue the base names of this type.
list.push.apply(list,d.baseNames);}// Compaction loop to remove array holes.
for(var to=0,from=to,len=list.length;from<len;++from){if(hasOwn.call(list,from)){list[to++]=list[from];}}list.length=to;}function extend(into,from){Object.keys(from).forEach(function(name){into[name]=from[name];});return into;}function finalize(){Object.keys(defCache).forEach(function(name){defCache[name].finalize();});}return{Type:Type,builtInTypes:builtInTypes,getSupertypeNames:getSupertypeNames,computeSupertypeLookupTable:computeSupertypeLookupTable,builders:builders,defineMethod:defineMethod,getBuilderName:getBuilderName,getStatementBuilderName:getStatementBuilderName,namedTypes:namedTypes,getFieldNames:getFieldNames,getFieldValue:getFieldValue,eachField:eachField,someField:someField,finalize:finalize};}types.default=typesPlugin;return types;}var pathVisitor={exports:{}};var nodePath={exports:{}};var path$2={exports:{}};var hasRequiredPath;function requirePath(){if(hasRequiredPath)return path$2.exports;hasRequiredPath=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());var Op=Object.prototype;var hasOwn=Op.hasOwnProperty;function pathPlugin(fork){var types=fork.use(types_1.default);var isArray=types.builtInTypes.array;var isNumber=types.builtInTypes.number;var Path=function Path(value,parentPath,name){if(!(this instanceof Path)){throw new Error("Path constructor cannot be invoked without 'new'");}if(parentPath){if(!(parentPath instanceof Path)){throw new Error("");}}else{parentPath=null;name=null;}// The value encapsulated by this Path, generally equal to
// parentPath.value[name] if we have a parentPath.
this.value=value;// The immediate parent Path of this Path.
this.parentPath=parentPath;// The name of the property of parentPath.value through which this
// Path's value was reached.
this.name=name;// Calling path.get("child") multiple times always returns the same
// child Path object, for both performance and consistency reasons.
this.__childCache=null;};var Pp=Path.prototype;function getChildCache(path){// Lazily create the child cache. This also cheapens cache
// invalidation, since you can just reset path.__childCache to null.
return path.__childCache||(path.__childCache=Object.create(null));}function getChildPath(path,name){var cache=getChildCache(path);var actualChildValue=path.getValueProperty(name);var childPath=cache[name];if(!hasOwn.call(cache,name)||// Ensure consistency between cache and reality.
childPath.value!==actualChildValue){childPath=cache[name]=new path.constructor(actualChildValue,path,name);}return childPath;}// This method is designed to be overridden by subclasses that need to
// handle missing properties, etc.
Pp.getValueProperty=function getValueProperty(name){return this.value[name];};Pp.get=function get(){var names=[];for(var _i=0;_i<arguments.length;_i++){names[_i]=arguments[_i];}var path=this;var count=names.length;for(var i=0;i<count;++i){path=getChildPath(path,names[i]);}return path;};Pp.each=function each(callback,context){var childPaths=[];var len=this.value.length;var i=0;// Collect all the original child paths before invoking the callback.
for(var i=0;i<len;++i){if(hasOwn.call(this.value,i)){childPaths[i]=this.get(i);}}// Invoke the callback on just the original child paths, regardless of
// any modifications made to the array by the callback. I chose these
// semantics over cleverly invoking the callback on new elements because
// this way is much easier to reason about.
context=context||this;for(i=0;i<len;++i){if(hasOwn.call(childPaths,i)){callback.call(context,childPaths[i]);}}};Pp.map=function map(callback,context){var result=[];this.each(function(childPath){result.push(callback.call(this,childPath));},context);return result;};Pp.filter=function filter(callback,context){var result=[];this.each(function(childPath){if(callback.call(this,childPath)){result.push(childPath);}},context);return result;};function emptyMoves(){}function getMoves(path,offset,start,end){isArray.assert(path.value);if(offset===0){return emptyMoves;}var length=path.value.length;if(length<1){return emptyMoves;}var argc=arguments.length;if(argc===2){start=0;end=length;}else if(argc===3){start=Math.max(start,0);end=length;}else{start=Math.max(start,0);end=Math.min(end,length);}isNumber.assert(start);isNumber.assert(end);var moves=Object.create(null);var cache=getChildCache(path);for(var i=start;i<end;++i){if(hasOwn.call(path.value,i)){var childPath=path.get(i);if(childPath.name!==i){throw new Error("");}var newIndex=i+offset;childPath.name=newIndex;moves[newIndex]=childPath;delete cache[i];}}delete cache.length;return function(){for(var newIndex in moves){var childPath=moves[newIndex];if(childPath.name!==+newIndex){throw new Error("");}cache[newIndex]=childPath;path.value[newIndex]=childPath.value;}};}Pp.shift=function shift(){var move=getMoves(this,-1);var result=this.value.shift();move();return result;};Pp.unshift=function unshift(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var move=getMoves(this,args.length);var result=this.value.unshift.apply(this.value,args);move();return result;};Pp.push=function push(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}isArray.assert(this.value);delete getChildCache(this).length;return this.value.push.apply(this.value,args);};Pp.pop=function pop(){isArray.assert(this.value);var cache=getChildCache(this);delete cache[this.value.length-1];delete cache.length;return this.value.pop();};Pp.insertAt=function insertAt(index){var argc=arguments.length;var move=getMoves(this,argc-1,index);if(move===emptyMoves&&argc<=1){return this;}index=Math.max(index,0);for(var i=1;i<argc;++i){this.value[index+i-1]=arguments[i];}move();return this;};Pp.insertBefore=function insertBefore(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var pp=this.parentPath;var argc=args.length;var insertAtArgs=[this.name];for(var i=0;i<argc;++i){insertAtArgs.push(args[i]);}return pp.insertAt.apply(pp,insertAtArgs);};Pp.insertAfter=function insertAfter(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var pp=this.parentPath;var argc=args.length;var insertAtArgs=[this.name+1];for(var i=0;i<argc;++i){insertAtArgs.push(args[i]);}return pp.insertAt.apply(pp,insertAtArgs);};function repairRelationshipWithParent(path){if(!(path instanceof Path)){throw new Error("");}var pp=path.parentPath;if(!pp){// Orphan paths have no relationship to repair.
return path;}var parentValue=pp.value;var parentCache=getChildCache(pp);// Make sure parentCache[path.name] is populated.
if(parentValue[path.name]===path.value){parentCache[path.name]=path;}else if(isArray.check(parentValue)){// Something caused path.name to become out of date, so attempt to
// recover by searching for path.value in parentValue.
var i=parentValue.indexOf(path.value);if(i>=0){parentCache[path.name=i]=path;}}else{// If path.value disagrees with parentValue[path.name], and
// path.name is not an array index, let path.value become the new
// parentValue[path.name] and update parentCache accordingly.
parentValue[path.name]=path.value;parentCache[path.name]=path;}if(parentValue[path.name]!==path.value){throw new Error("");}if(path.parentPath.get(path.name)!==path){throw new Error("");}return path;}Pp.replace=function replace(replacement){var results=[];var parentValue=this.parentPath.value;var parentCache=getChildCache(this.parentPath);var count=arguments.length;repairRelationshipWithParent(this);if(isArray.check(parentValue)){var originalLength=parentValue.length;var move=getMoves(this.parentPath,count-1,this.name+1);var spliceArgs=[this.name,1];for(var i=0;i<count;++i){spliceArgs.push(arguments[i]);}var splicedOut=parentValue.splice.apply(parentValue,spliceArgs);if(splicedOut[0]!==this.value){throw new Error("");}if(parentValue.length!==originalLength-1+count){throw new Error("");}move();if(count===0){delete this.value;delete parentCache[this.name];this.__childCache=null;}else{if(parentValue[this.name]!==replacement){throw new Error("");}if(this.value!==replacement){this.value=replacement;this.__childCache=null;}for(i=0;i<count;++i){results.push(this.parentPath.get(this.name+i));}if(results[0]!==this){throw new Error("");}}}else if(count===1){if(this.value!==replacement){this.__childCache=null;}this.value=parentValue[this.name]=replacement;results.push(this);}else if(count===0){delete parentValue[this.name];delete this.value;this.__childCache=null;// Leave this path cached as parentCache[this.name], even though
// it no longer has a value defined.
}else{throw new Error("Could not replace path");}return results;};return Path;}exports.default=pathPlugin;module.exports=exports["default"];})(path$2,path$2.exports);return path$2.exports;}var scope={exports:{}};var hasRequiredScope;function requireScope(){if(hasRequiredScope)return scope.exports;hasRequiredScope=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());var hasOwn=Object.prototype.hasOwnProperty;function scopePlugin(fork){var types=fork.use(types_1.default);var Type=types.Type;var namedTypes=types.namedTypes;var Node=namedTypes.Node;var Expression=namedTypes.Expression;var isArray=types.builtInTypes.array;var b=types.builders;var Scope=function Scope(path,parentScope){if(!(this instanceof Scope)){throw new Error("Scope constructor cannot be invoked without 'new'");}if(!TypeParameterScopeType.check(path.value)){ScopeType.assert(path.value);}var depth;if(parentScope){if(!(parentScope instanceof Scope)){throw new Error("");}depth=parentScope.depth+1;}else{parentScope=null;depth=0;}Object.defineProperties(this,{path:{value:path},node:{value:path.value},isGlobal:{value:!parentScope,enumerable:true},depth:{value:depth},parent:{value:parentScope},bindings:{value:{}},types:{value:{}}});};var ScopeType=Type.or(// Program nodes introduce global scopes.
namedTypes.Program,// Function is the supertype of FunctionExpression,
// FunctionDeclaration, ArrowExpression, etc.
namedTypes.Function,// In case you didn't know, the caught parameter shadows any variable
// of the same name in an outer scope.
namedTypes.CatchClause);// These types introduce scopes that are restricted to type parameters in
// Flow (this doesn't apply to ECMAScript).
var TypeParameterScopeType=Type.or(namedTypes.Function,namedTypes.ClassDeclaration,namedTypes.ClassExpression,namedTypes.InterfaceDeclaration,namedTypes.TSInterfaceDeclaration,namedTypes.TypeAlias,namedTypes.TSTypeAliasDeclaration);var FlowOrTSTypeParameterType=Type.or(namedTypes.TypeParameter,namedTypes.TSTypeParameter);Scope.isEstablishedBy=function(node){return ScopeType.check(node)||TypeParameterScopeType.check(node);};var Sp=Scope.prototype;// Will be overridden after an instance lazily calls scanScope.
Sp.didScan=false;Sp.declares=function(name){this.scan();return hasOwn.call(this.bindings,name);};Sp.declaresType=function(name){this.scan();return hasOwn.call(this.types,name);};Sp.declareTemporary=function(prefix){if(prefix){if(!/^[a-z$_]/i.test(prefix)){throw new Error("");}}else{prefix="t$";}// Include this.depth in the name to make sure the name does not
// collide with any variables in nested/enclosing scopes.
prefix+=this.depth.toString(36)+"$";this.scan();var index=0;while(this.declares(prefix+index)){++index;}var name=prefix+index;return this.bindings[name]=types.builders.identifier(name);};Sp.injectTemporary=function(identifier,init){identifier||(identifier=this.declareTemporary());var bodyPath=this.path.get("body");if(namedTypes.BlockStatement.check(bodyPath.value)){bodyPath=bodyPath.get("body");}bodyPath.unshift(b.variableDeclaration("var",[b.variableDeclarator(identifier,init||null)]));return identifier;};Sp.scan=function(force){if(force||!this.didScan){for(var name in this.bindings){// Empty out this.bindings, just in cases.
delete this.bindings[name];}for(var name in this.types){// Empty out this.types, just in cases.
delete this.types[name];}scanScope(this.path,this.bindings,this.types);this.didScan=true;}};Sp.getBindings=function(){this.scan();return this.bindings;};Sp.getTypes=function(){this.scan();return this.types;};function scanScope(path,bindings,scopeTypes){var node=path.value;if(TypeParameterScopeType.check(node)){var params=path.get('typeParameters','params');if(isArray.check(params.value)){params.each(function(childPath){addTypeParameter(childPath,scopeTypes);});}}if(ScopeType.check(node)){if(namedTypes.CatchClause.check(node)){// A catch clause establishes a new scope but the only variable
// bound in that scope is the catch parameter. Any other
// declarations create bindings in the outer scope.
addPattern(path.get("param"),bindings);}else{recursiveScanScope(path,bindings,scopeTypes);}}}function recursiveScanScope(path,bindings,scopeTypes){var node=path.value;if(path.parent&&namedTypes.FunctionExpression.check(path.parent.node)&&path.parent.node.id){addPattern(path.parent.get("id"),bindings);}if(!node);else if(isArray.check(node)){path.each(function(childPath){recursiveScanChild(childPath,bindings,scopeTypes);});}else if(namedTypes.Function.check(node)){path.get("params").each(function(paramPath){addPattern(paramPath,bindings);});recursiveScanChild(path.get("body"),bindings,scopeTypes);recursiveScanScope(path.get("typeParameters"),bindings,scopeTypes);}else if(namedTypes.TypeAlias&&namedTypes.TypeAlias.check(node)||namedTypes.InterfaceDeclaration&&namedTypes.InterfaceDeclaration.check(node)||namedTypes.TSTypeAliasDeclaration&&namedTypes.TSTypeAliasDeclaration.check(node)||namedTypes.TSInterfaceDeclaration&&namedTypes.TSInterfaceDeclaration.check(node)){addTypePattern(path.get("id"),scopeTypes);}else if(namedTypes.VariableDeclarator.check(node)){addPattern(path.get("id"),bindings);recursiveScanChild(path.get("init"),bindings,scopeTypes);}else if(node.type==="ImportSpecifier"||node.type==="ImportNamespaceSpecifier"||node.type==="ImportDefaultSpecifier"){addPattern(// Esprima used to use the .name field to refer to the local
// binding identifier for ImportSpecifier nodes, but .id for
// ImportNamespaceSpecifier and ImportDefaultSpecifier nodes.
// ESTree/Acorn/ESpree use .local for all three node types.
path.get(node.local?"local":node.name?"name":"id"),bindings);}else if(Node.check(node)&&!Expression.check(node)){types.eachField(node,function(name,child){var childPath=path.get(name);if(!pathHasValue(childPath,child)){throw new Error("");}recursiveScanChild(childPath,bindings,scopeTypes);});}}function pathHasValue(path,value){if(path.value===value){return true;}// Empty arrays are probably produced by defaults.emptyArray, in which
// case is makes sense to regard them as equivalent, if not ===.
if(Array.isArray(path.value)&&path.value.length===0&&Array.isArray(value)&&value.length===0){return true;}return false;}function recursiveScanChild(path,bindings,scopeTypes){var node=path.value;if(!node||Expression.check(node));else if(namedTypes.FunctionDeclaration.check(node)&&node.id!==null){addPattern(path.get("id"),bindings);}else if(namedTypes.ClassDeclaration&&namedTypes.ClassDeclaration.check(node)&&node.id!==null){addPattern(path.get("id"),bindings);recursiveScanScope(path.get("typeParameters"),bindings,scopeTypes);}else if(namedTypes.InterfaceDeclaration&&namedTypes.InterfaceDeclaration.check(node)||namedTypes.TSInterfaceDeclaration&&namedTypes.TSInterfaceDeclaration.check(node)){addTypePattern(path.get("id"),scopeTypes);}else if(ScopeType.check(node)){if(namedTypes.CatchClause.check(node)&&// TODO Broaden this to accept any pattern.
namedTypes.Identifier.check(node.param)){var catchParamName=node.param.name;var hadBinding=hasOwn.call(bindings,catchParamName);// Any declarations that occur inside the catch body that do
// not have the same name as the catch parameter should count
// as bindings in the outer scope.
recursiveScanScope(path.get("body"),bindings,scopeTypes);// If a new binding matching the catch parameter name was
// created while scanning the catch body, ignore it because it
// actually refers to the catch parameter and not the outer
// scope that we're currently scanning.
if(!hadBinding){delete bindings[catchParamName];}}}else{recursiveScanScope(path,bindings,scopeTypes);}}function addPattern(patternPath,bindings){var pattern=patternPath.value;namedTypes.Pattern.assert(pattern);if(namedTypes.Identifier.check(pattern)){if(hasOwn.call(bindings,pattern.name)){bindings[pattern.name].push(patternPath);}else{bindings[pattern.name]=[patternPath];}}else if(namedTypes.AssignmentPattern&&namedTypes.AssignmentPattern.check(pattern)){addPattern(patternPath.get('left'),bindings);}else if(namedTypes.ObjectPattern&&namedTypes.ObjectPattern.check(pattern)){patternPath.get('properties').each(function(propertyPath){var property=propertyPath.value;if(namedTypes.Pattern.check(property)){addPattern(propertyPath,bindings);}else if(namedTypes.Property.check(property)||namedTypes.ObjectProperty&&namedTypes.ObjectProperty.check(property)){addPattern(propertyPath.get('value'),bindings);}else if(namedTypes.SpreadProperty&&namedTypes.SpreadProperty.check(property)){addPattern(propertyPath.get('argument'),bindings);}});}else if(namedTypes.ArrayPattern&&namedTypes.ArrayPattern.check(pattern)){patternPath.get('elements').each(function(elementPath){var element=elementPath.value;if(namedTypes.Pattern.check(element)){addPattern(elementPath,bindings);}else if(namedTypes.SpreadElement&&namedTypes.SpreadElement.check(element)){addPattern(elementPath.get("argument"),bindings);}});}else if(namedTypes.PropertyPattern&&namedTypes.PropertyPattern.check(pattern)){addPattern(patternPath.get('pattern'),bindings);}else if(namedTypes.SpreadElementPattern&&namedTypes.SpreadElementPattern.check(pattern)||namedTypes.RestElement&&namedTypes.RestElement.check(pattern)||namedTypes.SpreadPropertyPattern&&namedTypes.SpreadPropertyPattern.check(pattern)){addPattern(patternPath.get('argument'),bindings);}}function addTypePattern(patternPath,types){var pattern=patternPath.value;namedTypes.Pattern.assert(pattern);if(namedTypes.Identifier.check(pattern)){if(hasOwn.call(types,pattern.name)){types[pattern.name].push(patternPath);}else{types[pattern.name]=[patternPath];}}}function addTypeParameter(parameterPath,types){var parameter=parameterPath.value;FlowOrTSTypeParameterType.assert(parameter);if(hasOwn.call(types,parameter.name)){types[parameter.name].push(parameterPath);}else{types[parameter.name]=[parameterPath];}}Sp.lookup=function(name){for(var scope=this;scope;scope=scope.parent)if(scope.declares(name))break;return scope;};Sp.lookupType=function(name){for(var scope=this;scope;scope=scope.parent)if(scope.declaresType(name))break;return scope;};Sp.getGlobalScope=function(){var scope=this;while(!scope.isGlobal)scope=scope.parent;return scope;};return Scope;}exports.default=scopePlugin;module.exports=exports["default"];})(scope,scope.exports);return scope.exports;}var hasRequiredNodePath;function requireNodePath(){if(hasRequiredNodePath)return nodePath.exports;hasRequiredNodePath=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());var path_1=(0,tslib_1.__importDefault)(requirePath());var scope_1=(0,tslib_1.__importDefault)(requireScope());function nodePathPlugin(fork){var types=fork.use(types_1.default);var n=types.namedTypes;var b=types.builders;var isNumber=types.builtInTypes.number;var isArray=types.builtInTypes.array;var Path=fork.use(path_1.default);var Scope=fork.use(scope_1.default);var NodePath=function NodePath(value,parentPath,name){if(!(this instanceof NodePath)){throw new Error("NodePath constructor cannot be invoked without 'new'");}Path.call(this,value,parentPath,name);};var NPp=NodePath.prototype=Object.create(Path.prototype,{constructor:{value:NodePath,enumerable:false,writable:true,configurable:true}});Object.defineProperties(NPp,{node:{get:function(){Object.defineProperty(this,"node",{configurable:true,value:this._computeNode()});return this.node;}},parent:{get:function(){Object.defineProperty(this,"parent",{configurable:true,value:this._computeParent()});return this.parent;}},scope:{get:function(){Object.defineProperty(this,"scope",{configurable:true,value:this._computeScope()});return this.scope;}}});NPp.replace=function(){delete this.node;delete this.parent;delete this.scope;return Path.prototype.replace.apply(this,arguments);};NPp.prune=function(){var remainingNodePath=this.parent;this.replace();return cleanUpNodesAfterPrune(remainingNodePath);};// The value of the first ancestor Path whose value is a Node.
NPp._computeNode=function(){var value=this.value;if(n.Node.check(value)){return value;}var pp=this.parentPath;return pp&&pp.node||null;};// The first ancestor Path whose value is a Node distinct from this.node.
NPp._computeParent=function(){var value=this.value;var pp=this.parentPath;if(!n.Node.check(value)){while(pp&&!n.Node.check(pp.value)){pp=pp.parentPath;}if(pp){pp=pp.parentPath;}}while(pp&&!n.Node.check(pp.value)){pp=pp.parentPath;}return pp||null;};// The closest enclosing scope that governs this node.
NPp._computeScope=function(){var value=this.value;var pp=this.parentPath;var scope=pp&&pp.scope;if(n.Node.check(value)&&Scope.isEstablishedBy(value)){scope=new Scope(this,scope);}return scope||null;};NPp.getValueProperty=function(name){return types.getFieldValue(this.value,name);};/**
		     * Determine whether this.node needs to be wrapped in parentheses in order
		     * for a parser to reproduce the same local AST structure.
		     *
		     * For instance, in the expression `(1 + 2) * 3`, the BinaryExpression
		     * whose operator is "+" needs parentheses, because `1 + 2 * 3` would
		     * parse differently.
		     *
		     * If assumeExpressionContext === true, we don't worry about edge cases
		     * like an anonymous FunctionExpression appearing lexically first in its
		     * enclosing statement and thus needing parentheses to avoid being parsed
		     * as a FunctionDeclaration with a missing name.
		     */NPp.needsParens=function(assumeExpressionContext){var pp=this.parentPath;if(!pp){return false;}var node=this.value;// Only expressions need parentheses.
if(!n.Expression.check(node)){return false;}// Identifiers never need parentheses.
if(node.type==="Identifier"){return false;}while(!n.Node.check(pp.value)){pp=pp.parentPath;if(!pp){return false;}}var parent=pp.value;switch(node.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return parent.type==="MemberExpression"&&this.name==="object"&&parent.object===node;case"BinaryExpression":case"LogicalExpression":switch(parent.type){case"CallExpression":return this.name==="callee"&&parent.callee===node;case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return true;case"MemberExpression":return this.name==="object"&&parent.object===node;case"BinaryExpression":case"LogicalExpression":{var n_1=node;var po=parent.operator;var pp_1=PRECEDENCE[po];var no=n_1.operator;var np=PRECEDENCE[no];if(pp_1>np){return true;}if(pp_1===np&&this.name==="right"){if(parent.right!==n_1){throw new Error("Nodes must be equal");}return true;}}default:return false;}case"SequenceExpression":switch(parent.type){case"ForStatement":// Although parentheses wouldn't hurt around sequence
// expressions in the head of for loops, traditional style
// dictates that e.g. i++, j++ should not be wrapped with
// parentheses.
return false;case"ExpressionStatement":return this.name!=="expression";default:// Otherwise err on the side of overparenthesization, adding
// explicit exceptions above if this proves overzealous.
return true;}case"YieldExpression":switch(parent.type){case"BinaryExpression":case"LogicalExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"CallExpression":case"MemberExpression":case"NewExpression":case"ConditionalExpression":case"YieldExpression":return true;default:return false;}case"Literal":return parent.type==="MemberExpression"&&isNumber.check(node.value)&&this.name==="object"&&parent.object===node;case"AssignmentExpression":case"ConditionalExpression":switch(parent.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":return true;case"CallExpression":return this.name==="callee"&&parent.callee===node;case"ConditionalExpression":return this.name==="test"&&parent.test===node;case"MemberExpression":return this.name==="object"&&parent.object===node;default:return false;}default:if(parent.type==="NewExpression"&&this.name==="callee"&&parent.callee===node){return containsCallExpression(node);}}if(assumeExpressionContext!==true&&!this.canBeFirstInStatement()&&this.firstInStatement())return true;return false;};function isBinary(node){return n.BinaryExpression.check(node)||n.LogicalExpression.check(node);}var PRECEDENCE={};[["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"]].forEach(function(tier,i){tier.forEach(function(op){PRECEDENCE[op]=i;});});function containsCallExpression(node){if(n.CallExpression.check(node)){return true;}if(isArray.check(node)){return node.some(containsCallExpression);}if(n.Node.check(node)){return types.someField(node,function(_name,child){return containsCallExpression(child);});}return false;}NPp.canBeFirstInStatement=function(){var node=this.node;return!n.FunctionExpression.check(node)&&!n.ObjectExpression.check(node);};NPp.firstInStatement=function(){return firstInStatement(this);};function firstInStatement(path){for(var node,parent;path.parent;path=path.parent){node=path.node;parent=path.parent.node;if(n.BlockStatement.check(parent)&&path.parent.name==="body"&&path.name===0){if(parent.body[0]!==node){throw new Error("Nodes must be equal");}return true;}if(n.ExpressionStatement.check(parent)&&path.name==="expression"){if(parent.expression!==node){throw new Error("Nodes must be equal");}return true;}if(n.SequenceExpression.check(parent)&&path.parent.name==="expressions"&&path.name===0){if(parent.expressions[0]!==node){throw new Error("Nodes must be equal");}continue;}if(n.CallExpression.check(parent)&&path.name==="callee"){if(parent.callee!==node){throw new Error("Nodes must be equal");}continue;}if(n.MemberExpression.check(parent)&&path.name==="object"){if(parent.object!==node){throw new Error("Nodes must be equal");}continue;}if(n.ConditionalExpression.check(parent)&&path.name==="test"){if(parent.test!==node){throw new Error("Nodes must be equal");}continue;}if(isBinary(parent)&&path.name==="left"){if(parent.left!==node){throw new Error("Nodes must be equal");}continue;}if(n.UnaryExpression.check(parent)&&!parent.prefix&&path.name==="argument"){if(parent.argument!==node){throw new Error("Nodes must be equal");}continue;}return false;}return true;}/**
		     * Pruning certain nodes will result in empty or incomplete nodes, here we clean those nodes up.
		     */function cleanUpNodesAfterPrune(remainingNodePath){if(n.VariableDeclaration.check(remainingNodePath.node)){var declarations=remainingNodePath.get('declarations').value;if(!declarations||declarations.length===0){return remainingNodePath.prune();}}else if(n.ExpressionStatement.check(remainingNodePath.node)){if(!remainingNodePath.get('expression').value){return remainingNodePath.prune();}}else if(n.IfStatement.check(remainingNodePath.node)){cleanUpIfStatementAfterPrune(remainingNodePath);}return remainingNodePath;}function cleanUpIfStatementAfterPrune(ifStatement){var testExpression=ifStatement.get('test').value;var alternate=ifStatement.get('alternate').value;var consequent=ifStatement.get('consequent').value;if(!consequent&&!alternate){var testExpressionStatement=b.expressionStatement(testExpression);ifStatement.replace(testExpressionStatement);}else if(!consequent&&alternate){var negatedTestExpression=b.unaryExpression('!',testExpression,true);if(n.UnaryExpression.check(testExpression)&&testExpression.operator==='!'){negatedTestExpression=testExpression.argument;}ifStatement.get("test").replace(negatedTestExpression);ifStatement.get("consequent").replace(alternate);ifStatement.get("alternate").replace();}}return NodePath;}exports.default=nodePathPlugin;module.exports=exports["default"];})(nodePath,nodePath.exports);return nodePath.exports;}var hasRequiredPathVisitor;function requirePathVisitor(){if(hasRequiredPathVisitor)return pathVisitor.exports;hasRequiredPathVisitor=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());var node_path_1=(0,tslib_1.__importDefault)(requireNodePath());var hasOwn=Object.prototype.hasOwnProperty;function pathVisitorPlugin(fork){var types=fork.use(types_1.default);var NodePath=fork.use(node_path_1.default);var isArray=types.builtInTypes.array;var isObject=types.builtInTypes.object;var isFunction=types.builtInTypes.function;var undefined$1;var PathVisitor=function PathVisitor(){if(!(this instanceof PathVisitor)){throw new Error("PathVisitor constructor cannot be invoked without 'new'");}// Permanent state.
this._reusableContextStack=[];this._methodNameTable=computeMethodNameTable(this);this._shouldVisitComments=hasOwn.call(this._methodNameTable,"Block")||hasOwn.call(this._methodNameTable,"Line");this.Context=makeContextConstructor(this);// State reset every time PathVisitor.prototype.visit is called.
this._visiting=false;this._changeReported=false;};function computeMethodNameTable(visitor){var typeNames=Object.create(null);for(var methodName in visitor){if(/^visit[A-Z]/.test(methodName)){typeNames[methodName.slice("visit".length)]=true;}}var supertypeTable=types.computeSupertypeLookupTable(typeNames);var methodNameTable=Object.create(null);var typeNameKeys=Object.keys(supertypeTable);var typeNameCount=typeNameKeys.length;for(var i=0;i<typeNameCount;++i){var typeName=typeNameKeys[i];methodName="visit"+supertypeTable[typeName];if(isFunction.check(visitor[methodName])){methodNameTable[typeName]=methodName;}}return methodNameTable;}PathVisitor.fromMethodsObject=function fromMethodsObject(methods){if(methods instanceof PathVisitor){return methods;}if(!isObject.check(methods)){// An empty visitor?
return new PathVisitor();}var Visitor=function Visitor(){if(!(this instanceof Visitor)){throw new Error("Visitor constructor cannot be invoked without 'new'");}PathVisitor.call(this);};var Vp=Visitor.prototype=Object.create(PVp);Vp.constructor=Visitor;extend(Vp,methods);extend(Visitor,PathVisitor);isFunction.assert(Visitor.fromMethodsObject);isFunction.assert(Visitor.visit);return new Visitor();};function extend(target,source){for(var property in source){if(hasOwn.call(source,property)){target[property]=source[property];}}return target;}PathVisitor.visit=function visit(node,methods){return PathVisitor.fromMethodsObject(methods).visit(node);};var PVp=PathVisitor.prototype;PVp.visit=function(){if(this._visiting){throw new Error("Recursively calling visitor.visit(path) resets visitor state. "+"Try this.visit(path) or this.traverse(path) instead.");}// Private state that needs to be reset before every traversal.
this._visiting=true;this._changeReported=false;this._abortRequested=false;var argc=arguments.length;var args=new Array(argc);for(var i=0;i<argc;++i){args[i]=arguments[i];}if(!(args[0]instanceof NodePath)){args[0]=new NodePath({root:args[0]}).get("root");}// Called with the same arguments as .visit.
this.reset.apply(this,args);var didNotThrow;try{var root=this.visitWithoutReset(args[0]);didNotThrow=true;}finally{this._visiting=false;if(!didNotThrow&&this._abortRequested){// If this.visitWithoutReset threw an exception and
// this._abortRequested was set to true, return the root of
// the AST instead of letting the exception propagate, so that
// client code does not have to provide a try-catch block to
// intercept the AbortRequest exception.  Other kinds of
// exceptions will propagate without being intercepted and
// rethrown by a catch block, so their stacks will accurately
// reflect the original throwing context.
return args[0].value;}}return root;};PVp.AbortRequest=function AbortRequest(){};PVp.abort=function(){var visitor=this;visitor._abortRequested=true;var request=new visitor.AbortRequest();// If you decide to catch this exception and stop it from propagating,
// make sure to call its cancel method to avoid silencing other
// exceptions that might be thrown later in the traversal.
request.cancel=function(){visitor._abortRequested=false;};throw request;};PVp.reset=function(_path/*, additional arguments */){// Empty stub; may be reassigned or overridden by subclasses.
};PVp.visitWithoutReset=function(path){if(this instanceof this.Context){// Since this.Context.prototype === this, there's a chance we
// might accidentally call context.visitWithoutReset. If that
// happens, re-invoke the method against context.visitor.
return this.visitor.visitWithoutReset(path);}if(!(path instanceof NodePath)){throw new Error("");}var value=path.value;var methodName=value&&typeof value==="object"&&typeof value.type==="string"&&this._methodNameTable[value.type];if(methodName){var context=this.acquireContext(path);try{return context.invokeVisitorMethod(methodName);}finally{this.releaseContext(context);}}else{// If there was no visitor method to call, visit the children of
// this node generically.
return visitChildren(path,this);}};function visitChildren(path,visitor){if(!(path instanceof NodePath)){throw new Error("");}if(!(visitor instanceof PathVisitor)){throw new Error("");}var value=path.value;if(isArray.check(value)){path.each(visitor.visitWithoutReset,visitor);}else if(!isObject.check(value));else{var childNames=types.getFieldNames(value);// The .comments field of the Node type is hidden, so we only
// visit it if the visitor defines visitBlock or visitLine, and
// value.comments is defined.
if(visitor._shouldVisitComments&&value.comments&&childNames.indexOf("comments")<0){childNames.push("comments");}var childCount=childNames.length;var childPaths=[];for(var i=0;i<childCount;++i){var childName=childNames[i];if(!hasOwn.call(value,childName)){value[childName]=types.getFieldValue(value,childName);}childPaths.push(path.get(childName));}for(var i=0;i<childCount;++i){visitor.visitWithoutReset(childPaths[i]);}}return path.value;}PVp.acquireContext=function(path){if(this._reusableContextStack.length===0){return new this.Context(path);}return this._reusableContextStack.pop().reset(path);};PVp.releaseContext=function(context){if(!(context instanceof this.Context)){throw new Error("");}this._reusableContextStack.push(context);context.currentPath=null;};PVp.reportChanged=function(){this._changeReported=true;};PVp.wasChangeReported=function(){return this._changeReported;};function makeContextConstructor(visitor){function Context(path){if(!(this instanceof Context)){throw new Error("");}if(!(this instanceof PathVisitor)){throw new Error("");}if(!(path instanceof NodePath)){throw new Error("");}Object.defineProperty(this,"visitor",{value:visitor,writable:false,enumerable:true,configurable:false});this.currentPath=path;this.needToCallTraverse=true;Object.seal(this);}if(!(visitor instanceof PathVisitor)){throw new Error("");}// Note that the visitor object is the prototype of Context.prototype,
// so all visitor methods are inherited by context objects.
var Cp=Context.prototype=Object.create(visitor);Cp.constructor=Context;extend(Cp,sharedContextProtoMethods);return Context;}// Every PathVisitor has a different this.Context constructor and
// this.Context.prototype object, but those prototypes can all use the
// same reset, invokeVisitorMethod, and traverse function objects.
var sharedContextProtoMethods=Object.create(null);sharedContextProtoMethods.reset=function reset(path){if(!(this instanceof this.Context)){throw new Error("");}if(!(path instanceof NodePath)){throw new Error("");}this.currentPath=path;this.needToCallTraverse=true;return this;};sharedContextProtoMethods.invokeVisitorMethod=function invokeVisitorMethod(methodName){if(!(this instanceof this.Context)){throw new Error("");}if(!(this.currentPath instanceof NodePath)){throw new Error("");}var result=this.visitor[methodName].call(this,this.currentPath);if(result===false){// Visitor methods return false to indicate that they have handled
// their own traversal needs, and we should not complain if
// this.needToCallTraverse is still true.
this.needToCallTraverse=false;}else if(result!==undefined$1){// Any other non-undefined value returned from the visitor method
// is interpreted as a replacement value.
this.currentPath=this.currentPath.replace(result)[0];if(this.needToCallTraverse){// If this.traverse still hasn't been called, visit the
// children of the replacement node.
this.traverse(this.currentPath);}}if(this.needToCallTraverse!==false){throw new Error("Must either call this.traverse or return false in "+methodName);}var path=this.currentPath;return path&&path.value;};sharedContextProtoMethods.traverse=function traverse(path,newVisitor){if(!(this instanceof this.Context)){throw new Error("");}if(!(path instanceof NodePath)){throw new Error("");}if(!(this.currentPath instanceof NodePath)){throw new Error("");}this.needToCallTraverse=false;return visitChildren(path,PathVisitor.fromMethodsObject(newVisitor||this.visitor));};sharedContextProtoMethods.visit=function visit(path,newVisitor){if(!(this instanceof this.Context)){throw new Error("");}if(!(path instanceof NodePath)){throw new Error("");}if(!(this.currentPath instanceof NodePath)){throw new Error("");}this.needToCallTraverse=false;return PathVisitor.fromMethodsObject(newVisitor||this.visitor).visitWithoutReset(path);};sharedContextProtoMethods.reportChanged=function reportChanged(){this.visitor.reportChanged();};sharedContextProtoMethods.abort=function abort(){this.needToCallTraverse=false;this.visitor.abort();};return PathVisitor;}exports.default=pathVisitorPlugin;module.exports=exports["default"];})(pathVisitor,pathVisitor.exports);return pathVisitor.exports;}var equiv={exports:{}};var hasRequiredEquiv;function requireEquiv(){if(hasRequiredEquiv)return equiv.exports;hasRequiredEquiv=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());function default_1(fork){var types=fork.use(types_1.default);var getFieldNames=types.getFieldNames;var getFieldValue=types.getFieldValue;var isArray=types.builtInTypes.array;var isObject=types.builtInTypes.object;var isDate=types.builtInTypes.Date;var isRegExp=types.builtInTypes.RegExp;var hasOwn=Object.prototype.hasOwnProperty;function astNodesAreEquivalent(a,b,problemPath){if(isArray.check(problemPath)){problemPath.length=0;}else{problemPath=null;}return areEquivalent(a,b,problemPath);}astNodesAreEquivalent.assert=function(a,b){var problemPath=[];if(!astNodesAreEquivalent(a,b,problemPath)){if(problemPath.length===0){if(a!==b){throw new Error("Nodes must be equal");}}else{throw new Error("Nodes differ in the following path: "+problemPath.map(subscriptForProperty).join(""));}}};function subscriptForProperty(property){if(/[_$a-z][_$a-z0-9]*/i.test(property)){return"."+property;}return"["+JSON.stringify(property)+"]";}function areEquivalent(a,b,problemPath){if(a===b){return true;}if(isArray.check(a)){return arraysAreEquivalent(a,b,problemPath);}if(isObject.check(a)){return objectsAreEquivalent(a,b,problemPath);}if(isDate.check(a)){return isDate.check(b)&&+a===+b;}if(isRegExp.check(a)){return isRegExp.check(b)&&a.source===b.source&&a.global===b.global&&a.multiline===b.multiline&&a.ignoreCase===b.ignoreCase;}return a==b;}function arraysAreEquivalent(a,b,problemPath){isArray.assert(a);var aLength=a.length;if(!isArray.check(b)||b.length!==aLength){if(problemPath){problemPath.push("length");}return false;}for(var i=0;i<aLength;++i){if(problemPath){problemPath.push(i);}if(i in a!==i in b){return false;}if(!areEquivalent(a[i],b[i],problemPath)){return false;}if(problemPath){var problemPathTail=problemPath.pop();if(problemPathTail!==i){throw new Error(""+problemPathTail);}}}return true;}function objectsAreEquivalent(a,b,problemPath){isObject.assert(a);if(!isObject.check(b)){return false;}// Fast path for a common property of AST nodes.
if(a.type!==b.type){if(problemPath){problemPath.push("type");}return false;}var aNames=getFieldNames(a);var aNameCount=aNames.length;var bNames=getFieldNames(b);var bNameCount=bNames.length;if(aNameCount===bNameCount){for(var i=0;i<aNameCount;++i){var name=aNames[i];var aChild=getFieldValue(a,name);var bChild=getFieldValue(b,name);if(problemPath){problemPath.push(name);}if(!areEquivalent(aChild,bChild,problemPath)){return false;}if(problemPath){var problemPathTail=problemPath.pop();if(problemPathTail!==name){throw new Error(""+problemPathTail);}}}return true;}if(!problemPath){return false;}// Since aNameCount !== bNameCount, we need to find some name that's
// missing in aNames but present in bNames, or vice-versa.
var seenNames=Object.create(null);for(i=0;i<aNameCount;++i){seenNames[aNames[i]]=true;}for(i=0;i<bNameCount;++i){name=bNames[i];if(!hasOwn.call(seenNames,name)){problemPath.push(name);return false;}delete seenNames[name];}for(name in seenNames){problemPath.push(name);break;}return false;}return astNodesAreEquivalent;}exports.default=default_1;module.exports=exports["default"];})(equiv,equiv.exports);return equiv.exports;}var hasRequiredFork;function requireFork(){if(hasRequiredFork)return fork.exports;hasRequiredFork=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());var path_visitor_1=(0,tslib_1.__importDefault)(requirePathVisitor());var equiv_1=(0,tslib_1.__importDefault)(requireEquiv());var path_1=(0,tslib_1.__importDefault)(requirePath());var node_path_1=(0,tslib_1.__importDefault)(requireNodePath());function default_1(plugins){var fork=createFork();var types=fork.use(types_1.default);plugins.forEach(fork.use);types.finalize();var PathVisitor=fork.use(path_visitor_1.default);return{Type:types.Type,builtInTypes:types.builtInTypes,namedTypes:types.namedTypes,builders:types.builders,defineMethod:types.defineMethod,getFieldNames:types.getFieldNames,getFieldValue:types.getFieldValue,eachField:types.eachField,someField:types.someField,getSupertypeNames:types.getSupertypeNames,getBuilderName:types.getBuilderName,astNodesAreEquivalent:fork.use(equiv_1.default),finalize:types.finalize,Path:fork.use(path_1.default),NodePath:fork.use(node_path_1.default),PathVisitor:PathVisitor,use:fork.use,visit:PathVisitor.visit};}exports.default=default_1;function createFork(){var used=[];var usedResult=[];function use(plugin){var idx=used.indexOf(plugin);if(idx===-1){idx=used.length;used.push(plugin);usedResult[idx]=plugin(fork);}return usedResult[idx];}var fork={use:use};return fork;}module.exports=exports["default"];})(fork,fork.exports);return fork.exports;}var esProposals={exports:{}};var shared={exports:{}};var hasRequiredShared;function requireShared(){if(hasRequiredShared)return shared.exports;hasRequiredShared=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());function default_1(fork){var types=fork.use(types_1.default);var Type=types.Type;var builtin=types.builtInTypes;var isNumber=builtin.number;// An example of constructing a new type with arbitrary constraints from
// an existing type.
function geq(than){return Type.from(function(value){return isNumber.check(value)&&value>=than;},isNumber+" >= "+than);}// Default value-returning functions that may optionally be passed as a
// third argument to Def.prototype.field.
var defaults={// Functions were used because (among other reasons) that's the most
// elegant way to allow for the emptyArray one always to give a new
// array instance.
"null":function(){return null;},"emptyArray":function(){return[];},"false":function(){return false;},"true":function(){return true;},"undefined":function(){},"use strict":function(){return"use strict";}};var naiveIsPrimitive=Type.or(builtin.string,builtin.number,builtin.boolean,builtin.null,builtin.undefined);var isPrimitive=Type.from(function(value){if(value===null)return true;var type=typeof value;if(type==="object"||type==="function"){return false;}return true;},naiveIsPrimitive.toString());return{geq:geq,defaults:defaults,isPrimitive:isPrimitive};}exports.default=default_1;module.exports=exports["default"];})(shared,shared.exports);return shared.exports;}var es2022={exports:{}};var es2021$1={exports:{}};var es2021={exports:{}};var es2020$1={exports:{}};var es2016$1={exports:{}};var core$1={exports:{}};var hasRequiredCore$1;function requireCore$1(){if(hasRequiredCore$1)return core$1.exports;hasRequiredCore$1=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});function default_1(){return{BinaryOperators:["==","!=","===","!==","<","<=",">",">=","<<",">>",">>>","+","-","*","/","%","&","|","^","in","instanceof"],AssignmentOperators:["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","^=","&="],LogicalOperators:["||","&&"]};}exports.default=default_1;module.exports=exports["default"];})(core$1,core$1.exports);return core$1.exports;}var hasRequiredEs2016$1;function requireEs2016$1(){if(hasRequiredEs2016$1)return es2016$1.exports;hasRequiredEs2016$1=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var core_1=(0,tslib_1.__importDefault)(requireCore$1());function default_1(fork){var result=fork.use(core_1.default);// Exponentiation operators. Must run before BinaryOperators or
// AssignmentOperators are used (hence before fork.use(es6Def)).
// https://github.com/tc39/proposal-exponentiation-operator
if(result.BinaryOperators.indexOf("**")<0){result.BinaryOperators.push("**");}if(result.AssignmentOperators.indexOf("**=")<0){result.AssignmentOperators.push("**=");}return result;}exports.default=default_1;module.exports=exports["default"];})(es2016$1,es2016$1.exports);return es2016$1.exports;}var hasRequiredEs2020$1;function requireEs2020$1(){if(hasRequiredEs2020$1)return es2020$1.exports;hasRequiredEs2020$1=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2016_1=(0,tslib_1.__importDefault)(requireEs2016$1());function default_1(fork){var result=fork.use(es2016_1.default);// Nullish coalescing. Must run before LogicalOperators is used.
// https://github.com/tc39/proposal-nullish-coalescing
if(result.LogicalOperators.indexOf("??")<0){result.LogicalOperators.push("??");}return result;}exports.default=default_1;module.exports=exports["default"];})(es2020$1,es2020$1.exports);return es2020$1.exports;}var hasRequiredEs2021$1;function requireEs2021$1(){if(hasRequiredEs2021$1)return es2021.exports;hasRequiredEs2021$1=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2020_1=(0,tslib_1.__importDefault)(requireEs2020$1());function default_1(fork){var result=fork.use(es2020_1.default);// Logical assignment operators. Must run before AssignmentOperators is used.
// https://github.com/tc39/proposal-logical-assignment
result.LogicalOperators.forEach(function(op){var assignOp=op+"=";if(result.AssignmentOperators.indexOf(assignOp)<0){result.AssignmentOperators.push(assignOp);}});return result;}exports.default=default_1;module.exports=exports["default"];})(es2021,es2021.exports);return es2021.exports;}var es2020={exports:{}};var es2019={exports:{}};var es2018={exports:{}};var es2017={exports:{}};var es2016={exports:{}};var es6={exports:{}};var core={exports:{}};var hasRequiredCore;function requireCore(){if(hasRequiredCore)return core.exports;hasRequiredCore=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var core_1=(0,tslib_1.__importDefault)(requireCore$1());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){var types=fork.use(types_1.default);var Type=types.Type;var def=Type.def;var or=Type.or;var shared=fork.use(shared_1.default);var defaults=shared.defaults;var geq=shared.geq;var _a=fork.use(core_1.default),BinaryOperators=_a.BinaryOperators,AssignmentOperators=_a.AssignmentOperators,LogicalOperators=_a.LogicalOperators;// Abstract supertype of all syntactic entities that are allowed to have a
// .loc field.
def("Printable").field("loc",or(def("SourceLocation"),null),defaults["null"],true);def("Node").bases("Printable").field("type",String).field("comments",or([def("Comment")],null),defaults["null"],true);def("SourceLocation").field("start",def("Position")).field("end",def("Position")).field("source",or(String,null),defaults["null"]);def("Position").field("line",geq(1)).field("column",geq(0));def("File").bases("Node").build("program","name").field("program",def("Program")).field("name",or(String,null),defaults["null"]);def("Program").bases("Node").build("body").field("body",[def("Statement")]);def("Function").bases("Node").field("id",or(def("Identifier"),null),defaults["null"]).field("params",[def("Pattern")]).field("body",def("BlockStatement")).field("generator",Boolean,defaults["false"]).field("async",Boolean,defaults["false"]);def("Statement").bases("Node");// The empty .build() here means that an EmptyStatement can be constructed
// (i.e. it's not abstract) but that it needs no arguments.
def("EmptyStatement").bases("Statement").build();def("BlockStatement").bases("Statement").build("body").field("body",[def("Statement")]);// TODO Figure out how to silently coerce Expressions to
// ExpressionStatements where a Statement was expected.
def("ExpressionStatement").bases("Statement").build("expression").field("expression",def("Expression"));def("IfStatement").bases("Statement").build("test","consequent","alternate").field("test",def("Expression")).field("consequent",def("Statement")).field("alternate",or(def("Statement"),null),defaults["null"]);def("LabeledStatement").bases("Statement").build("label","body").field("label",def("Identifier")).field("body",def("Statement"));def("BreakStatement").bases("Statement").build("label").field("label",or(def("Identifier"),null),defaults["null"]);def("ContinueStatement").bases("Statement").build("label").field("label",or(def("Identifier"),null),defaults["null"]);def("WithStatement").bases("Statement").build("object","body").field("object",def("Expression")).field("body",def("Statement"));def("SwitchStatement").bases("Statement").build("discriminant","cases","lexical").field("discriminant",def("Expression")).field("cases",[def("SwitchCase")]).field("lexical",Boolean,defaults["false"]);def("ReturnStatement").bases("Statement").build("argument").field("argument",or(def("Expression"),null));def("ThrowStatement").bases("Statement").build("argument").field("argument",def("Expression"));def("TryStatement").bases("Statement").build("block","handler","finalizer").field("block",def("BlockStatement")).field("handler",or(def("CatchClause"),null),function(){return this.handlers&&this.handlers[0]||null;}).field("handlers",[def("CatchClause")],function(){return this.handler?[this.handler]:[];},true)// Indicates this field is hidden from eachField iteration.
.field("guardedHandlers",[def("CatchClause")],defaults.emptyArray).field("finalizer",or(def("BlockStatement"),null),defaults["null"]);def("CatchClause").bases("Node").build("param","guard","body").field("param",def("Pattern")).field("guard",or(def("Expression"),null),defaults["null"]).field("body",def("BlockStatement"));def("WhileStatement").bases("Statement").build("test","body").field("test",def("Expression")).field("body",def("Statement"));def("DoWhileStatement").bases("Statement").build("body","test").field("body",def("Statement")).field("test",def("Expression"));def("ForStatement").bases("Statement").build("init","test","update","body").field("init",or(def("VariableDeclaration"),def("Expression"),null)).field("test",or(def("Expression"),null)).field("update",or(def("Expression"),null)).field("body",def("Statement"));def("ForInStatement").bases("Statement").build("left","right","body").field("left",or(def("VariableDeclaration"),def("Expression"))).field("right",def("Expression")).field("body",def("Statement"));def("DebuggerStatement").bases("Statement").build();def("Declaration").bases("Statement");def("FunctionDeclaration").bases("Function","Declaration").build("id","params","body").field("id",def("Identifier"));def("FunctionExpression").bases("Function","Expression").build("id","params","body");def("VariableDeclaration").bases("Declaration").build("kind","declarations").field("kind",or("var","let","const")).field("declarations",[def("VariableDeclarator")]);def("VariableDeclarator").bases("Node").build("id","init").field("id",def("Pattern")).field("init",or(def("Expression"),null),defaults["null"]);def("Expression").bases("Node");def("ThisExpression").bases("Expression").build();def("ArrayExpression").bases("Expression").build("elements").field("elements",[or(def("Expression"),null)]);def("ObjectExpression").bases("Expression").build("properties").field("properties",[def("Property")]);// TODO Not in the Mozilla Parser API, but used by Esprima.
def("Property").bases("Node")// Want to be able to visit Property Nodes.
.build("kind","key","value").field("kind",or("init","get","set")).field("key",or(def("Literal"),def("Identifier"))).field("value",def("Expression"));def("SequenceExpression").bases("Expression").build("expressions").field("expressions",[def("Expression")]);var UnaryOperator=or("-","+","!","~","typeof","void","delete");def("UnaryExpression").bases("Expression").build("operator","argument","prefix").field("operator",UnaryOperator).field("argument",def("Expression"))// Esprima doesn't bother with this field, presumably because it's
// always true for unary operators.
.field("prefix",Boolean,defaults["true"]);var BinaryOperator=or.apply(void 0,BinaryOperators);def("BinaryExpression").bases("Expression").build("operator","left","right").field("operator",BinaryOperator).field("left",def("Expression")).field("right",def("Expression"));var AssignmentOperator=or.apply(void 0,AssignmentOperators);def("AssignmentExpression").bases("Expression").build("operator","left","right").field("operator",AssignmentOperator).field("left",or(def("Pattern"),def("MemberExpression"))).field("right",def("Expression"));var UpdateOperator=or("++","--");def("UpdateExpression").bases("Expression").build("operator","argument","prefix").field("operator",UpdateOperator).field("argument",def("Expression")).field("prefix",Boolean);var LogicalOperator=or.apply(void 0,LogicalOperators);def("LogicalExpression").bases("Expression").build("operator","left","right").field("operator",LogicalOperator).field("left",def("Expression")).field("right",def("Expression"));def("ConditionalExpression").bases("Expression").build("test","consequent","alternate").field("test",def("Expression")).field("consequent",def("Expression")).field("alternate",def("Expression"));def("NewExpression").bases("Expression").build("callee","arguments").field("callee",def("Expression"))// The Mozilla Parser API gives this type as [or(def("Expression"),
// null)], but null values don't really make sense at the call site.
// TODO Report this nonsense.
.field("arguments",[def("Expression")]);def("CallExpression").bases("Expression").build("callee","arguments").field("callee",def("Expression"))// See comment for NewExpression above.
.field("arguments",[def("Expression")]);def("MemberExpression").bases("Expression").build("object","property","computed").field("object",def("Expression")).field("property",or(def("Identifier"),def("Expression"))).field("computed",Boolean,function(){var type=this.property.type;if(type==='Literal'||type==='MemberExpression'||type==='BinaryExpression'){return true;}return false;});def("Pattern").bases("Node");def("SwitchCase").bases("Node").build("test","consequent").field("test",or(def("Expression"),null)).field("consequent",[def("Statement")]);def("Identifier").bases("Expression","Pattern").build("name").field("name",String).field("optional",Boolean,defaults["false"]);def("Literal").bases("Expression").build("value").field("value",or(String,Boolean,null,Number,RegExp,BigInt));// Abstract (non-buildable) comment supertype. Not a Node.
def("Comment").bases("Printable").field("value",String)// A .leading comment comes before the node, whereas a .trailing
// comment comes after it. These two fields should not both be true,
// but they might both be false when the comment falls inside a node
// and the node has no children for the comment to lead or trail,
// e.g. { /*dangling*/ }.
.field("leading",Boolean,defaults["true"]).field("trailing",Boolean,defaults["false"]);}exports.default=default_1;module.exports=exports["default"];})(core,core.exports);return core.exports;}var hasRequiredEs6;function requireEs6(){if(hasRequiredEs6)return es6.exports;hasRequiredEs6=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var core_1=(0,tslib_1.__importDefault)(requireCore());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){fork.use(core_1.default);var types=fork.use(types_1.default);var def=types.Type.def;var or=types.Type.or;var defaults=fork.use(shared_1.default).defaults;def("Function").field("generator",Boolean,defaults["false"]).field("expression",Boolean,defaults["false"]).field("defaults",[or(def("Expression"),null)],defaults.emptyArray)// Legacy
.field("rest",or(def("Identifier"),null),defaults["null"]);// The ESTree way of representing a ...rest parameter.
def("RestElement").bases("Pattern").build("argument").field("argument",def("Pattern")).field("typeAnnotation",// for Babylon. Flow parser puts it on the identifier
or(def("TypeAnnotation"),def("TSTypeAnnotation"),null),defaults["null"]);def("SpreadElementPattern").bases("Pattern").build("argument").field("argument",def("Pattern"));def("FunctionDeclaration").build("id","params","body","generator","expression")// May be `null` in the context of `export default function () {}`
.field("id",or(def("Identifier"),null));def("FunctionExpression").build("id","params","body","generator","expression");def("ArrowFunctionExpression").bases("Function","Expression").build("params","body","expression")// The forced null value here is compatible with the overridden
// definition of the "id" field in the Function interface.
.field("id",null,defaults["null"])// Arrow function bodies are allowed to be expressions.
.field("body",or(def("BlockStatement"),def("Expression")))// The current spec forbids arrow generators, so I have taken the
// liberty of enforcing that. TODO Report this.
.field("generator",false,defaults["false"]);def("ForOfStatement").bases("Statement").build("left","right","body").field("left",or(def("VariableDeclaration"),def("Pattern"))).field("right",def("Expression")).field("body",def("Statement"));def("YieldExpression").bases("Expression").build("argument","delegate").field("argument",or(def("Expression"),null)).field("delegate",Boolean,defaults["false"]);def("GeneratorExpression").bases("Expression").build("body","blocks","filter").field("body",def("Expression")).field("blocks",[def("ComprehensionBlock")]).field("filter",or(def("Expression"),null));def("ComprehensionExpression").bases("Expression").build("body","blocks","filter").field("body",def("Expression")).field("blocks",[def("ComprehensionBlock")]).field("filter",or(def("Expression"),null));def("ComprehensionBlock").bases("Node").build("left","right","each").field("left",def("Pattern")).field("right",def("Expression")).field("each",Boolean);def("Property").field("key",or(def("Literal"),def("Identifier"),def("Expression"))).field("value",or(def("Expression"),def("Pattern"))).field("method",Boolean,defaults["false"]).field("shorthand",Boolean,defaults["false"]).field("computed",Boolean,defaults["false"]);def("ObjectProperty").field("shorthand",Boolean,defaults["false"]);def("PropertyPattern").bases("Pattern").build("key","pattern").field("key",or(def("Literal"),def("Identifier"),def("Expression"))).field("pattern",def("Pattern")).field("computed",Boolean,defaults["false"]);def("ObjectPattern").bases("Pattern").build("properties").field("properties",[or(def("PropertyPattern"),def("Property"))]);def("ArrayPattern").bases("Pattern").build("elements").field("elements",[or(def("Pattern"),null)]);def("SpreadElement").bases("Node").build("argument").field("argument",def("Expression"));def("ArrayExpression").field("elements",[or(def("Expression"),def("SpreadElement"),def("RestElement"),null)]);def("NewExpression").field("arguments",[or(def("Expression"),def("SpreadElement"))]);def("CallExpression").field("arguments",[or(def("Expression"),def("SpreadElement"))]);// Note: this node type is *not* an AssignmentExpression with a Pattern on
// the left-hand side! The existing AssignmentExpression type already
// supports destructuring assignments. AssignmentPattern nodes may appear
// wherever a Pattern is allowed, and the right-hand side represents a
// default value to be destructured against the left-hand side, if no
// value is otherwise provided. For example: default parameter values.
def("AssignmentPattern").bases("Pattern").build("left","right").field("left",def("Pattern")).field("right",def("Expression"));def("MethodDefinition").bases("Declaration").build("kind","key","value","static").field("kind",or("constructor","method","get","set")).field("key",def("Expression")).field("value",def("Function")).field("computed",Boolean,defaults["false"]).field("static",Boolean,defaults["false"]);var ClassBodyElement=or(def("MethodDefinition"),def("VariableDeclarator"),def("ClassPropertyDefinition"),def("ClassProperty"));def("ClassProperty").bases("Declaration").build("key").field("key",or(def("Literal"),def("Identifier"),def("Expression"))).field("computed",Boolean,defaults["false"]);def("ClassPropertyDefinition")// static property
.bases("Declaration").build("definition")// Yes, Virginia, circular definitions are permitted.
.field("definition",ClassBodyElement);def("ClassBody").bases("Declaration").build("body").field("body",[ClassBodyElement]);def("ClassDeclaration").bases("Declaration").build("id","body","superClass").field("id",or(def("Identifier"),null)).field("body",def("ClassBody")).field("superClass",or(def("Expression"),null),defaults["null"]);def("ClassExpression").bases("Expression").build("id","body","superClass").field("id",or(def("Identifier"),null),defaults["null"]).field("body",def("ClassBody")).field("superClass",or(def("Expression"),null),defaults["null"]);def("Super").bases("Expression").build();// Specifier and ModuleSpecifier are abstract non-standard types
// introduced for definitional convenience.
def("Specifier").bases("Node");// This supertype is shared/abused by both def/babel.js and
// def/esprima.js. In the future, it will be possible to load only one set
// of definitions appropriate for a given parser, but until then we must
// rely on default functions to reconcile the conflicting AST formats.
def("ModuleSpecifier").bases("Specifier")// This local field is used by Babel/Acorn. It should not technically
// be optional in the Babel/Acorn AST format, but it must be optional
// in the Esprima AST format.
.field("local",or(def("Identifier"),null),defaults["null"])// The id and name fields are used by Esprima. The id field should not
// technically be optional in the Esprima AST format, but it must be
// optional in the Babel/Acorn AST format.
.field("id",or(def("Identifier"),null),defaults["null"]).field("name",or(def("Identifier"),null),defaults["null"]);// import {<id [as name]>} from ...;
def("ImportSpecifier").bases("ModuleSpecifier").build("imported","local").field("imported",def("Identifier"));// import <id> from ...;
def("ImportDefaultSpecifier").bases("ModuleSpecifier").build("local");// import <* as id> from ...;
def("ImportNamespaceSpecifier").bases("ModuleSpecifier").build("local");def("ImportDeclaration").bases("Declaration").build("specifiers","source","importKind").field("specifiers",[or(def("ImportSpecifier"),def("ImportNamespaceSpecifier"),def("ImportDefaultSpecifier"))],defaults.emptyArray).field("source",def("Literal")).field("importKind",or("value","type"),function(){return"value";});def("ExportNamedDeclaration").bases("Declaration").build("declaration","specifiers","source").field("declaration",or(def("Declaration"),null)).field("specifiers",[def("ExportSpecifier")],defaults.emptyArray).field("source",or(def("Literal"),null),defaults["null"]);def("ExportSpecifier").bases("ModuleSpecifier").build("local","exported").field("exported",def("Identifier"));def("ExportDefaultDeclaration").bases("Declaration").build("declaration").field("declaration",or(def("Declaration"),def("Expression")));def("ExportAllDeclaration").bases("Declaration").build("source").field("source",def("Literal"));def("TaggedTemplateExpression").bases("Expression").build("tag","quasi").field("tag",def("Expression")).field("quasi",def("TemplateLiteral"));def("TemplateLiteral").bases("Expression").build("quasis","expressions").field("quasis",[def("TemplateElement")]).field("expressions",[def("Expression")]);def("TemplateElement").bases("Node").build("value","tail").field("value",{"cooked":String,"raw":String}).field("tail",Boolean);def("MetaProperty").bases("Expression").build("meta","property").field("meta",def("Identifier")).field("property",def("Identifier"));}exports.default=default_1;module.exports=exports["default"];})(es6,es6.exports);return es6.exports;}var hasRequiredEs2016;function requireEs2016(){if(hasRequiredEs2016)return es2016.exports;hasRequiredEs2016=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2016_1=(0,tslib_1.__importDefault)(requireEs2016$1());var es6_1=(0,tslib_1.__importDefault)(requireEs6());function default_1(fork){// The es2016OpsDef plugin comes before es6Def so BinaryOperators and
// AssignmentOperators will be appropriately augmented before they are first
// used in the core definitions for this fork.
fork.use(es2016_1.default);fork.use(es6_1.default);}exports.default=default_1;module.exports=exports["default"];})(es2016,es2016.exports);return es2016.exports;}var hasRequiredEs2017;function requireEs2017(){if(hasRequiredEs2017)return es2017.exports;hasRequiredEs2017=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2016_1=(0,tslib_1.__importDefault)(requireEs2016());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){fork.use(es2016_1.default);var types=fork.use(types_1.default);var def=types.Type.def;var defaults=fork.use(shared_1.default).defaults;def("Function").field("async",Boolean,defaults["false"]);def("AwaitExpression").bases("Expression").build("argument").field("argument",def("Expression"));}exports.default=default_1;module.exports=exports["default"];})(es2017,es2017.exports);return es2017.exports;}var hasRequiredEs2018;function requireEs2018(){if(hasRequiredEs2018)return es2018.exports;hasRequiredEs2018=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2017_1=(0,tslib_1.__importDefault)(requireEs2017());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){fork.use(es2017_1.default);var types=fork.use(types_1.default);var def=types.Type.def;var or=types.Type.or;var defaults=fork.use(shared_1.default).defaults;def("ForOfStatement").field("await",Boolean,defaults["false"]);// Legacy
def("SpreadProperty").bases("Node").build("argument").field("argument",def("Expression"));def("ObjectExpression").field("properties",[or(def("Property"),def("SpreadProperty"),// Legacy
def("SpreadElement"))]);def("TemplateElement").field("value",{"cooked":or(String,null),"raw":String});// Legacy
def("SpreadPropertyPattern").bases("Pattern").build("argument").field("argument",def("Pattern"));def("ObjectPattern").field("properties",[or(def("PropertyPattern"),def("Property"),def("RestElement"),def("SpreadPropertyPattern"))]);}exports.default=default_1;module.exports=exports["default"];})(es2018,es2018.exports);return es2018.exports;}var hasRequiredEs2019;function requireEs2019(){if(hasRequiredEs2019)return es2019.exports;hasRequiredEs2019=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2018_1=(0,tslib_1.__importDefault)(requireEs2018());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){fork.use(es2018_1.default);var types=fork.use(types_1.default);var def=types.Type.def;var or=types.Type.or;var defaults=fork.use(shared_1.default).defaults;def("CatchClause").field("param",or(def("Pattern"),null),defaults["null"]);}exports.default=default_1;module.exports=exports["default"];})(es2019,es2019.exports);return es2019.exports;}var hasRequiredEs2020;function requireEs2020(){if(hasRequiredEs2020)return es2020.exports;hasRequiredEs2020=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2020_1=(0,tslib_1.__importDefault)(requireEs2020$1());var es2019_1=(0,tslib_1.__importDefault)(requireEs2019());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){// The es2020OpsDef plugin comes before es2019Def so LogicalOperators will be
// appropriately augmented before first used.
fork.use(es2020_1.default);fork.use(es2019_1.default);var types=fork.use(types_1.default);var def=types.Type.def;var or=types.Type.or;var shared=fork.use(shared_1.default);var defaults=shared.defaults;def("ImportExpression").bases("Expression").build("source").field("source",def("Expression"));def("ExportAllDeclaration").build("source","exported").field("source",def("Literal")).field("exported",or(def("Identifier"),null));// Optional chaining
def("ChainElement").bases("Node").field("optional",Boolean,defaults["false"]);def("CallExpression").bases("Expression","ChainElement");def("MemberExpression").bases("Expression","ChainElement");def("ChainExpression").bases("Expression").build("expression").field("expression",def("ChainElement"));def("OptionalCallExpression").bases("CallExpression").build("callee","arguments","optional").field("optional",Boolean,defaults["true"]);// Deprecated optional chaining type, doesn't work with babelParser@7.11.0 or newer
def("OptionalMemberExpression").bases("MemberExpression").build("object","property","computed","optional").field("optional",Boolean,defaults["true"]);}exports.default=default_1;module.exports=exports["default"];})(es2020,es2020.exports);return es2020.exports;}var hasRequiredEs2021;function requireEs2021(){if(hasRequiredEs2021)return es2021$1.exports;hasRequiredEs2021=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2021_1=(0,tslib_1.__importDefault)(requireEs2021$1());var es2020_1=(0,tslib_1.__importDefault)(requireEs2020());function default_1(fork){// The es2021OpsDef plugin comes before es2020Def so AssignmentOperators will
// be appropriately augmented before first used.
fork.use(es2021_1.default);fork.use(es2020_1.default);}exports.default=default_1;module.exports=exports["default"];})(es2021$1,es2021$1.exports);return es2021$1.exports;}var hasRequiredEs2022;function requireEs2022(){if(hasRequiredEs2022)return es2022.exports;hasRequiredEs2022=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es2021_1=(0,tslib_1.__importDefault)(requireEs2021());var types_1=(0,tslib_1.__importDefault)(requireTypes());function default_1(fork){fork.use(es2021_1.default);var types=fork.use(types_1.default);var def=types.Type.def;def("StaticBlock").bases("Declaration").build("body").field("body",[def("Statement")]);}exports.default=default_1;module.exports=exports["default"];})(es2022,es2022.exports);return es2022.exports;}var hasRequiredEsProposals;function requireEsProposals(){if(hasRequiredEsProposals)return esProposals.exports;hasRequiredEsProposals=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());var es2022_1=(0,tslib_1.__importDefault)(requireEs2022());function default_1(fork){fork.use(es2022_1.default);var types=fork.use(types_1.default);var Type=types.Type;var def=types.Type.def;var or=Type.or;var shared=fork.use(shared_1.default);var defaults=shared.defaults;def("AwaitExpression").build("argument","all").field("argument",or(def("Expression"),null)).field("all",Boolean,defaults["false"]);// Decorators
def("Decorator").bases("Node").build("expression").field("expression",def("Expression"));def("Property").field("decorators",or([def("Decorator")],null),defaults["null"]);def("MethodDefinition").field("decorators",or([def("Decorator")],null),defaults["null"]);// Private names
def("PrivateName").bases("Expression","Pattern").build("id").field("id",def("Identifier"));def("ClassPrivateProperty").bases("ClassProperty").build("key","value").field("key",def("PrivateName")).field("value",or(def("Expression"),null),defaults["null"]);// https://github.com/tc39/proposal-import-assertions
def("ImportAttribute").bases("Node").build("key","value").field("key",or(def("Identifier"),def("Literal"))).field("value",def("Expression"));["ImportDeclaration","ExportAllDeclaration","ExportNamedDeclaration"].forEach(function(decl){def(decl).field("assertions",[def("ImportAttribute")],defaults.emptyArray);});// https://github.com/tc39/proposal-record-tuple
// https://github.com/babel/babel/pull/10865
def("RecordExpression").bases("Expression").build("properties").field("properties",[or(def("ObjectProperty"),def("ObjectMethod"),def("SpreadElement"))]);def("TupleExpression").bases("Expression").build("elements").field("elements",[or(def("Expression"),def("SpreadElement"),null)]);// https://github.com/tc39/proposal-js-module-blocks
// https://github.com/babel/babel/pull/12469
def("ModuleExpression").bases("Node").build("body").field("body",def("Program"));}exports.default=default_1;module.exports=exports["default"];})(esProposals,esProposals.exports);return esProposals.exports;}var jsx={exports:{}};var hasRequiredJsx;function requireJsx(){if(hasRequiredJsx)return jsx.exports;hasRequiredJsx=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es_proposals_1=(0,tslib_1.__importDefault)(requireEsProposals());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){fork.use(es_proposals_1.default);var types=fork.use(types_1.default);var def=types.Type.def;var or=types.Type.or;var defaults=fork.use(shared_1.default).defaults;def("JSXAttribute").bases("Node").build("name","value").field("name",or(def("JSXIdentifier"),def("JSXNamespacedName"))).field("value",or(def("Literal"),// attr="value"
def("JSXExpressionContainer"),// attr={value}
def("JSXElement"),// attr=<div />
def("JSXFragment"),// attr=<></>
null// attr= or just attr
),defaults["null"]);def("JSXIdentifier").bases("Identifier").build("name").field("name",String);def("JSXNamespacedName").bases("Node").build("namespace","name").field("namespace",def("JSXIdentifier")).field("name",def("JSXIdentifier"));def("JSXMemberExpression").bases("MemberExpression").build("object","property").field("object",or(def("JSXIdentifier"),def("JSXMemberExpression"))).field("property",def("JSXIdentifier")).field("computed",Boolean,defaults.false);var JSXElementName=or(def("JSXIdentifier"),def("JSXNamespacedName"),def("JSXMemberExpression"));def("JSXSpreadAttribute").bases("Node").build("argument").field("argument",def("Expression"));var JSXAttributes=[or(def("JSXAttribute"),def("JSXSpreadAttribute"))];def("JSXExpressionContainer").bases("Expression").build("expression").field("expression",or(def("Expression"),def("JSXEmptyExpression")));var JSXChildren=[or(def("JSXText"),def("JSXExpressionContainer"),def("JSXSpreadChild"),def("JSXElement"),def("JSXFragment"),def("Literal")// Legacy: Esprima should return JSXText instead.
)];def("JSXElement").bases("Expression").build("openingElement","closingElement","children").field("openingElement",def("JSXOpeningElement")).field("closingElement",or(def("JSXClosingElement"),null),defaults["null"]).field("children",JSXChildren,defaults.emptyArray).field("name",JSXElementName,function(){// Little-known fact: the `this` object inside a default function
// is none other than the partially-built object itself, and any
// fields initialized directly from builder function arguments
// (like openingElement, closingElement, and children) are
// guaranteed to be available.
return this.openingElement.name;},true)// hidden from traversal
.field("selfClosing",Boolean,function(){return this.openingElement.selfClosing;},true)// hidden from traversal
.field("attributes",JSXAttributes,function(){return this.openingElement.attributes;},true);// hidden from traversal
def("JSXOpeningElement").bases("Node").build("name","attributes","selfClosing").field("name",JSXElementName).field("attributes",JSXAttributes,defaults.emptyArray).field("selfClosing",Boolean,defaults["false"]);def("JSXClosingElement").bases("Node").build("name").field("name",JSXElementName);def("JSXFragment").bases("Expression").build("openingFragment","closingFragment","children").field("openingFragment",def("JSXOpeningFragment")).field("closingFragment",def("JSXClosingFragment")).field("children",JSXChildren,defaults.emptyArray);def("JSXOpeningFragment").bases("Node").build();def("JSXClosingFragment").bases("Node").build();def("JSXText").bases("Literal").build("value","raw").field("value",String).field("raw",String,function(){return this.value;});def("JSXEmptyExpression").bases("Node").build();def("JSXSpreadChild").bases("Node").build("expression").field("expression",def("Expression"));}exports.default=default_1;module.exports=exports["default"];})(jsx,jsx.exports);return jsx.exports;}var flow={exports:{}};var typeAnnotations={exports:{}};var hasRequiredTypeAnnotations;function requireTypeAnnotations(){if(hasRequiredTypeAnnotations)return typeAnnotations.exports;hasRequiredTypeAnnotations=1;(function(module,exports){/**
		 * Type annotation defs shared between Flow and TypeScript.
		 * These defs could not be defined in ./flow.ts or ./typescript.ts directly
		 * because they use the same name.
		 */Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){var types=fork.use(types_1.default);var def=types.Type.def;var or=types.Type.or;var defaults=fork.use(shared_1.default).defaults;var TypeAnnotation=or(def("TypeAnnotation"),def("TSTypeAnnotation"),null);var TypeParamDecl=or(def("TypeParameterDeclaration"),def("TSTypeParameterDeclaration"),null);def("Identifier").field("typeAnnotation",TypeAnnotation,defaults["null"]);def("ObjectPattern").field("typeAnnotation",TypeAnnotation,defaults["null"]);def("Function").field("returnType",TypeAnnotation,defaults["null"]).field("typeParameters",TypeParamDecl,defaults["null"]);def("ClassProperty").build("key","value","typeAnnotation","static").field("value",or(def("Expression"),null)).field("static",Boolean,defaults["false"]).field("typeAnnotation",TypeAnnotation,defaults["null"]);["ClassDeclaration","ClassExpression"].forEach(function(typeName){def(typeName).field("typeParameters",TypeParamDecl,defaults["null"]).field("superTypeParameters",or(def("TypeParameterInstantiation"),def("TSTypeParameterInstantiation"),null),defaults["null"]).field("implements",or([def("ClassImplements")],[def("TSExpressionWithTypeArguments")]),defaults.emptyArray);});}exports.default=default_1;module.exports=exports["default"];})(typeAnnotations,typeAnnotations.exports);return typeAnnotations.exports;}var hasRequiredFlow;function requireFlow(){if(hasRequiredFlow)return flow.exports;hasRequiredFlow=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es_proposals_1=(0,tslib_1.__importDefault)(requireEsProposals());var type_annotations_1=(0,tslib_1.__importDefault)(requireTypeAnnotations());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){fork.use(es_proposals_1.default);fork.use(type_annotations_1.default);var types=fork.use(types_1.default);var def=types.Type.def;var or=types.Type.or;var defaults=fork.use(shared_1.default).defaults;// Base types
def("Flow").bases("Node");def("FlowType").bases("Flow");// Type annotations
def("AnyTypeAnnotation").bases("FlowType").build();def("EmptyTypeAnnotation").bases("FlowType").build();def("MixedTypeAnnotation").bases("FlowType").build();def("VoidTypeAnnotation").bases("FlowType").build();def("SymbolTypeAnnotation").bases("FlowType").build();def("NumberTypeAnnotation").bases("FlowType").build();def("BigIntTypeAnnotation").bases("FlowType").build();def("NumberLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Number).field("raw",String);// Babylon 6 differs in AST from Flow
// same as NumberLiteralTypeAnnotation
def("NumericLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Number).field("raw",String);def("BigIntLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",null).field("raw",String);def("StringTypeAnnotation").bases("FlowType").build();def("StringLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",String).field("raw",String);def("BooleanTypeAnnotation").bases("FlowType").build();def("BooleanLiteralTypeAnnotation").bases("FlowType").build("value","raw").field("value",Boolean).field("raw",String);def("TypeAnnotation").bases("Node").build("typeAnnotation").field("typeAnnotation",def("FlowType"));def("NullableTypeAnnotation").bases("FlowType").build("typeAnnotation").field("typeAnnotation",def("FlowType"));def("NullLiteralTypeAnnotation").bases("FlowType").build();def("NullTypeAnnotation").bases("FlowType").build();def("ThisTypeAnnotation").bases("FlowType").build();def("ExistsTypeAnnotation").bases("FlowType").build();def("ExistentialTypeParam").bases("FlowType").build();def("FunctionTypeAnnotation").bases("FlowType").build("params","returnType","rest","typeParameters").field("params",[def("FunctionTypeParam")]).field("returnType",def("FlowType")).field("rest",or(def("FunctionTypeParam"),null)).field("typeParameters",or(def("TypeParameterDeclaration"),null));def("FunctionTypeParam").bases("Node").build("name","typeAnnotation","optional").field("name",or(def("Identifier"),null)).field("typeAnnotation",def("FlowType")).field("optional",Boolean);def("ArrayTypeAnnotation").bases("FlowType").build("elementType").field("elementType",def("FlowType"));def("ObjectTypeAnnotation").bases("FlowType").build("properties","indexers","callProperties").field("properties",[or(def("ObjectTypeProperty"),def("ObjectTypeSpreadProperty"))]).field("indexers",[def("ObjectTypeIndexer")],defaults.emptyArray).field("callProperties",[def("ObjectTypeCallProperty")],defaults.emptyArray).field("inexact",or(Boolean,void 0),defaults["undefined"]).field("exact",Boolean,defaults["false"]).field("internalSlots",[def("ObjectTypeInternalSlot")],defaults.emptyArray);def("Variance").bases("Node").build("kind").field("kind",or("plus","minus"));var LegacyVariance=or(def("Variance"),"plus","minus",null);def("ObjectTypeProperty").bases("Node").build("key","value","optional").field("key",or(def("Literal"),def("Identifier"))).field("value",def("FlowType")).field("optional",Boolean).field("variance",LegacyVariance,defaults["null"]);def("ObjectTypeIndexer").bases("Node").build("id","key","value").field("id",def("Identifier")).field("key",def("FlowType")).field("value",def("FlowType")).field("variance",LegacyVariance,defaults["null"]).field("static",Boolean,defaults["false"]);def("ObjectTypeCallProperty").bases("Node").build("value").field("value",def("FunctionTypeAnnotation")).field("static",Boolean,defaults["false"]);def("QualifiedTypeIdentifier").bases("Node").build("qualification","id").field("qualification",or(def("Identifier"),def("QualifiedTypeIdentifier"))).field("id",def("Identifier"));def("GenericTypeAnnotation").bases("FlowType").build("id","typeParameters").field("id",or(def("Identifier"),def("QualifiedTypeIdentifier"))).field("typeParameters",or(def("TypeParameterInstantiation"),null));def("MemberTypeAnnotation").bases("FlowType").build("object","property").field("object",def("Identifier")).field("property",or(def("MemberTypeAnnotation"),def("GenericTypeAnnotation")));def("IndexedAccessType").bases("FlowType").build("objectType","indexType").field("objectType",def("FlowType")).field("indexType",def("FlowType"));def("OptionalIndexedAccessType").bases("FlowType").build("objectType","indexType","optional").field("objectType",def("FlowType")).field("indexType",def("FlowType")).field('optional',Boolean);def("UnionTypeAnnotation").bases("FlowType").build("types").field("types",[def("FlowType")]);def("IntersectionTypeAnnotation").bases("FlowType").build("types").field("types",[def("FlowType")]);def("TypeofTypeAnnotation").bases("FlowType").build("argument").field("argument",def("FlowType"));def("ObjectTypeSpreadProperty").bases("Node").build("argument").field("argument",def("FlowType"));def("ObjectTypeInternalSlot").bases("Node").build("id","value","optional","static","method").field("id",def("Identifier")).field("value",def("FlowType")).field("optional",Boolean).field("static",Boolean).field("method",Boolean);def("TypeParameterDeclaration").bases("Node").build("params").field("params",[def("TypeParameter")]);def("TypeParameterInstantiation").bases("Node").build("params").field("params",[def("FlowType")]);def("TypeParameter").bases("FlowType").build("name","variance","bound","default").field("name",String).field("variance",LegacyVariance,defaults["null"]).field("bound",or(def("TypeAnnotation"),null),defaults["null"]).field("default",or(def("FlowType"),null),defaults["null"]);def("ClassProperty").field("variance",LegacyVariance,defaults["null"]);def("ClassImplements").bases("Node").build("id").field("id",def("Identifier")).field("superClass",or(def("Expression"),null),defaults["null"]).field("typeParameters",or(def("TypeParameterInstantiation"),null),defaults["null"]);def("InterfaceTypeAnnotation").bases("FlowType").build("body","extends").field("body",def("ObjectTypeAnnotation")).field("extends",or([def("InterfaceExtends")],null),defaults["null"]);def("InterfaceDeclaration").bases("Declaration").build("id","body","extends").field("id",def("Identifier")).field("typeParameters",or(def("TypeParameterDeclaration"),null),defaults["null"]).field("body",def("ObjectTypeAnnotation")).field("extends",[def("InterfaceExtends")]);def("DeclareInterface").bases("InterfaceDeclaration").build("id","body","extends");def("InterfaceExtends").bases("Node").build("id").field("id",def("Identifier")).field("typeParameters",or(def("TypeParameterInstantiation"),null),defaults["null"]);def("TypeAlias").bases("Declaration").build("id","typeParameters","right").field("id",def("Identifier")).field("typeParameters",or(def("TypeParameterDeclaration"),null)).field("right",def("FlowType"));def("DeclareTypeAlias").bases("TypeAlias").build("id","typeParameters","right");def("OpaqueType").bases("Declaration").build("id","typeParameters","impltype","supertype").field("id",def("Identifier")).field("typeParameters",or(def("TypeParameterDeclaration"),null)).field("impltype",def("FlowType")).field("supertype",or(def("FlowType"),null));def("DeclareOpaqueType").bases("OpaqueType").build("id","typeParameters","supertype").field("impltype",or(def("FlowType"),null));def("TypeCastExpression").bases("Expression").build("expression","typeAnnotation").field("expression",def("Expression")).field("typeAnnotation",def("TypeAnnotation"));def("TupleTypeAnnotation").bases("FlowType").build("types").field("types",[def("FlowType")]);def("DeclareVariable").bases("Statement").build("id").field("id",def("Identifier"));def("DeclareFunction").bases("Statement").build("id").field("id",def("Identifier")).field("predicate",or(def("FlowPredicate"),null),defaults["null"]);def("DeclareClass").bases("InterfaceDeclaration").build("id");def("DeclareModule").bases("Statement").build("id","body").field("id",or(def("Identifier"),def("Literal"))).field("body",def("BlockStatement"));def("DeclareModuleExports").bases("Statement").build("typeAnnotation").field("typeAnnotation",def("TypeAnnotation"));def("DeclareExportDeclaration").bases("Declaration").build("default","declaration","specifiers","source").field("default",Boolean).field("declaration",or(def("DeclareVariable"),def("DeclareFunction"),def("DeclareClass"),def("FlowType"),// Implies default.
def("TypeAlias"),// Implies named type
def("DeclareOpaqueType"),// Implies named opaque type
def("InterfaceDeclaration"),null)).field("specifiers",[or(def("ExportSpecifier"),def("ExportBatchSpecifier"))],defaults.emptyArray).field("source",or(def("Literal"),null),defaults["null"]);def("DeclareExportAllDeclaration").bases("Declaration").build("source").field("source",or(def("Literal"),null),defaults["null"]);def("ImportDeclaration").field("importKind",or("value","type","typeof"),function(){return"value";});def("FlowPredicate").bases("Flow");def("InferredPredicate").bases("FlowPredicate").build();def("DeclaredPredicate").bases("FlowPredicate").build("value").field("value",def("Expression"));def("Function").field("predicate",or(def("FlowPredicate"),null),defaults["null"]);def("CallExpression").field("typeArguments",or(null,def("TypeParameterInstantiation")),defaults["null"]);def("NewExpression").field("typeArguments",or(null,def("TypeParameterInstantiation")),defaults["null"]);// Enums
def("EnumDeclaration").bases("Declaration").build("id","body").field("id",def("Identifier")).field("body",or(def("EnumBooleanBody"),def("EnumNumberBody"),def("EnumStringBody"),def("EnumSymbolBody")));def("EnumBooleanBody").build("members","explicitType").field("members",[def("EnumBooleanMember")]).field("explicitType",Boolean);def("EnumNumberBody").build("members","explicitType").field("members",[def("EnumNumberMember")]).field("explicitType",Boolean);def("EnumStringBody").build("members","explicitType").field("members",or([def("EnumStringMember")],[def("EnumDefaultedMember")])).field("explicitType",Boolean);def("EnumSymbolBody").build("members").field("members",[def("EnumDefaultedMember")]);def("EnumBooleanMember").build("id","init").field("id",def("Identifier")).field("init",or(def("Literal"),Boolean));def("EnumNumberMember").build("id","init").field("id",def("Identifier")).field("init",def("Literal"));def("EnumStringMember").build("id","init").field("id",def("Identifier")).field("init",def("Literal"));def("EnumDefaultedMember").build("id").field("id",def("Identifier"));}exports.default=default_1;module.exports=exports["default"];})(flow,flow.exports);return flow.exports;}var esprima$2={exports:{}};var hasRequiredEsprima$2;function requireEsprima$2(){if(hasRequiredEsprima$2)return esprima$2.exports;hasRequiredEsprima$2=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es_proposals_1=(0,tslib_1.__importDefault)(requireEsProposals());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){fork.use(es_proposals_1.default);var types=fork.use(types_1.default);var defaults=fork.use(shared_1.default).defaults;var def=types.Type.def;var or=types.Type.or;def("VariableDeclaration").field("declarations",[or(def("VariableDeclarator"),def("Identifier")// Esprima deviation.
)]);def("Property").field("value",or(def("Expression"),def("Pattern")// Esprima deviation.
));def("ArrayPattern").field("elements",[or(def("Pattern"),def("SpreadElement"),null)]);def("ObjectPattern").field("properties",[or(def("Property"),def("PropertyPattern"),def("SpreadPropertyPattern"),def("SpreadProperty")// Used by Esprima.
)]);// Like ModuleSpecifier, except type:"ExportSpecifier" and buildable.
// export {<id [as name]>} [from ...];
def("ExportSpecifier").bases("ModuleSpecifier").build("id","name");// export <*> from ...;
def("ExportBatchSpecifier").bases("Specifier").build();def("ExportDeclaration").bases("Declaration").build("default","declaration","specifiers","source").field("default",Boolean).field("declaration",or(def("Declaration"),def("Expression"),// Implies default.
null)).field("specifiers",[or(def("ExportSpecifier"),def("ExportBatchSpecifier"))],defaults.emptyArray).field("source",or(def("Literal"),null),defaults["null"]);def("Block").bases("Comment").build("value",/*optional:*/"leading","trailing");def("Line").bases("Comment").build("value",/*optional:*/"leading","trailing");}exports.default=default_1;module.exports=exports["default"];})(esprima$2,esprima$2.exports);return esprima$2.exports;}var babel$1={exports:{}};var babelCore={exports:{}};var hasRequiredBabelCore;function requireBabelCore(){if(hasRequiredBabelCore)return babelCore.exports;hasRequiredBabelCore=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var es_proposals_1=(0,tslib_1.__importDefault)(requireEsProposals());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){var _a,_b,_c,_d,_e;fork.use(es_proposals_1.default);var types=fork.use(types_1.default);var defaults=fork.use(shared_1.default).defaults;var def=types.Type.def;var or=types.Type.or;var isUndefined=types.builtInTypes.undefined;def("Noop").bases("Statement").build();def("DoExpression").bases("Expression").build("body").field("body",[def("Statement")]);def("BindExpression").bases("Expression").build("object","callee").field("object",or(def("Expression"),null)).field("callee",def("Expression"));def("ParenthesizedExpression").bases("Expression").build("expression").field("expression",def("Expression"));def("ExportNamespaceSpecifier").bases("Specifier").build("exported").field("exported",def("Identifier"));def("ExportDefaultSpecifier").bases("Specifier").build("exported").field("exported",def("Identifier"));def("CommentBlock").bases("Comment").build("value",/*optional:*/"leading","trailing");def("CommentLine").bases("Comment").build("value",/*optional:*/"leading","trailing");def("Directive").bases("Node").build("value").field("value",def("DirectiveLiteral"));def("DirectiveLiteral").bases("Node","Expression").build("value").field("value",String,defaults["use strict"]);def("InterpreterDirective").bases("Node").build("value").field("value",String);def("BlockStatement").bases("Statement").build("body").field("body",[def("Statement")]).field("directives",[def("Directive")],defaults.emptyArray);def("Program").bases("Node").build("body").field("body",[def("Statement")]).field("directives",[def("Directive")],defaults.emptyArray).field("interpreter",or(def("InterpreterDirective"),null),defaults["null"]);function makeLiteralExtra(rawValueType,toRaw){if(rawValueType===void 0){rawValueType=String;}return["extra",{rawValue:rawValueType,raw:String},function getDefault(){var value=types.getFieldValue(this,"value");return{rawValue:value,raw:toRaw?toRaw(value):String(value)};}];}// Split Literal
(_a=def("StringLiteral").bases("Literal").build("value").field("value",String)).field.apply(_a,makeLiteralExtra(String,function(val){return JSON.stringify(val);}));(_b=def("NumericLiteral").bases("Literal").build("value").field("value",Number).field("raw",or(String,null),defaults["null"])).field.apply(_b,makeLiteralExtra(Number));(_c=def("BigIntLiteral").bases("Literal").build("value")// Only String really seems appropriate here, since BigInt values
// often exceed the limits of JS numbers.
.field("value",or(String,Number))).field.apply(_c,makeLiteralExtra(String,function(val){return val+"n";}));// https://github.com/tc39/proposal-decimal
// https://github.com/babel/babel/pull/11640
(_d=def("DecimalLiteral").bases("Literal").build("value").field("value",String)).field.apply(_d,makeLiteralExtra(String,function(val){return val+"m";}));def("NullLiteral").bases("Literal").build().field("value",null,defaults["null"]);def("BooleanLiteral").bases("Literal").build("value").field("value",Boolean);(_e=def("RegExpLiteral").bases("Literal").build("pattern","flags").field("pattern",String).field("flags",String).field("value",RegExp,function(){return new RegExp(this.pattern,this.flags);})).field.apply(_e,makeLiteralExtra(or(RegExp,isUndefined),function(exp){return"/".concat(exp.pattern,"/").concat(exp.flags||"");})).field("regex",{pattern:String,flags:String},function(){return{pattern:this.pattern,flags:this.flags};});var ObjectExpressionProperty=or(def("Property"),def("ObjectMethod"),def("ObjectProperty"),def("SpreadProperty"),def("SpreadElement"));// Split Property -> ObjectProperty and ObjectMethod
def("ObjectExpression").bases("Expression").build("properties").field("properties",[ObjectExpressionProperty]);// ObjectMethod hoist .value properties to own properties
def("ObjectMethod").bases("Node","Function").build("kind","key","params","body","computed").field("kind",or("method","get","set")).field("key",or(def("Literal"),def("Identifier"),def("Expression"))).field("params",[def("Pattern")]).field("body",def("BlockStatement")).field("computed",Boolean,defaults["false"]).field("generator",Boolean,defaults["false"]).field("async",Boolean,defaults["false"]).field("accessibility",// TypeScript
or(def("Literal"),null),defaults["null"]).field("decorators",or([def("Decorator")],null),defaults["null"]);def("ObjectProperty").bases("Node").build("key","value").field("key",or(def("Literal"),def("Identifier"),def("Expression"))).field("value",or(def("Expression"),def("Pattern"))).field("accessibility",// TypeScript
or(def("Literal"),null),defaults["null"]).field("computed",Boolean,defaults["false"]);var ClassBodyElement=or(def("MethodDefinition"),def("VariableDeclarator"),def("ClassPropertyDefinition"),def("ClassProperty"),def("ClassPrivateProperty"),def("ClassMethod"),def("ClassPrivateMethod"));// MethodDefinition -> ClassMethod
def("ClassBody").bases("Declaration").build("body").field("body",[ClassBodyElement]);def("ClassMethod").bases("Declaration","Function").build("kind","key","params","body","computed","static").field("key",or(def("Literal"),def("Identifier"),def("Expression")));def("ClassPrivateMethod").bases("Declaration","Function").build("key","params","body","kind","computed","static").field("key",def("PrivateName"));["ClassMethod","ClassPrivateMethod"].forEach(function(typeName){def(typeName).field("kind",or("get","set","method","constructor"),function(){return"method";}).field("body",def("BlockStatement")).field("computed",Boolean,defaults["false"]).field("static",or(Boolean,null),defaults["null"]).field("abstract",or(Boolean,null),defaults["null"]).field("access",or("public","private","protected",null),defaults["null"]).field("accessibility",or("public","private","protected",null),defaults["null"]).field("decorators",or([def("Decorator")],null),defaults["null"]).field("optional",or(Boolean,null),defaults["null"]);});var ObjectPatternProperty=or(def("Property"),def("PropertyPattern"),def("SpreadPropertyPattern"),def("SpreadProperty"),// Used by Esprima
def("ObjectProperty"),// Babel 6
def("RestProperty")// Babel 6
);// Split into RestProperty and SpreadProperty
def("ObjectPattern").bases("Pattern").build("properties").field("properties",[ObjectPatternProperty]).field("decorators",or([def("Decorator")],null),defaults["null"]);def("SpreadProperty").bases("Node").build("argument").field("argument",def("Expression"));def("RestProperty").bases("Node").build("argument").field("argument",def("Expression"));def("ForAwaitStatement").bases("Statement").build("left","right","body").field("left",or(def("VariableDeclaration"),def("Expression"))).field("right",def("Expression")).field("body",def("Statement"));// The callee node of a dynamic import(...) expression.
def("Import").bases("Expression").build();}exports.default=default_1;module.exports=exports["default"];})(babelCore,babelCore.exports);return babelCore.exports;}var hasRequiredBabel;function requireBabel(){if(hasRequiredBabel)return babel$1.exports;hasRequiredBabel=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var types_1=(0,tslib_1.__importDefault)(requireTypes());var babel_core_1=(0,tslib_1.__importDefault)(requireBabelCore());var flow_1=(0,tslib_1.__importDefault)(requireFlow());function default_1(fork){var types=fork.use(types_1.default);var def=types.Type.def;fork.use(babel_core_1.default);fork.use(flow_1.default);// https://github.com/babel/babel/pull/10148
def("V8IntrinsicIdentifier").bases("Expression").build("name").field("name",String);// https://github.com/babel/babel/pull/13191
// https://github.com/babel/website/pull/2541
def("TopicReference").bases("Expression").build();}exports.default=default_1;module.exports=exports["default"];})(babel$1,babel$1.exports);return babel$1.exports;}var typescript$1={exports:{}};var hasRequiredTypescript;function requireTypescript(){if(hasRequiredTypescript)return typescript$1.exports;hasRequiredTypescript=1;(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require$$0$3;var babel_core_1=(0,tslib_1.__importDefault)(requireBabelCore());var type_annotations_1=(0,tslib_1.__importDefault)(requireTypeAnnotations());var types_1=(0,tslib_1.__importDefault)(requireTypes());var shared_1=(0,tslib_1.__importDefault)(requireShared());function default_1(fork){// Since TypeScript is parsed by Babylon, include the core Babylon types
// but omit the Flow-related types.
fork.use(babel_core_1.default);fork.use(type_annotations_1.default);var types=fork.use(types_1.default);var n=types.namedTypes;var def=types.Type.def;var or=types.Type.or;var defaults=fork.use(shared_1.default).defaults;var StringLiteral=types.Type.from(function(value,deep){if(n.StringLiteral&&n.StringLiteral.check(value,deep)){return true;}if(n.Literal&&n.Literal.check(value,deep)&&typeof value.value==="string"){return true;}return false;},"StringLiteral");def("TSType").bases("Node");var TSEntityName=or(def("Identifier"),def("TSQualifiedName"));def("TSTypeReference").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("typeName","typeParameters").field("typeName",TSEntityName);// An abstract (non-buildable) base type that provide a commonly-needed
// optional .typeParameters field.
def("TSHasOptionalTypeParameterInstantiation").field("typeParameters",or(def("TSTypeParameterInstantiation"),null),defaults["null"]);// An abstract (non-buildable) base type that provide a commonly-needed
// optional .typeParameters field.
def("TSHasOptionalTypeParameters").field("typeParameters",or(def("TSTypeParameterDeclaration"),null,void 0),defaults["null"]);// An abstract (non-buildable) base type that provide a commonly-needed
// optional .typeAnnotation field.
def("TSHasOptionalTypeAnnotation").field("typeAnnotation",or(def("TSTypeAnnotation"),null),defaults["null"]);def("TSQualifiedName").bases("Node").build("left","right").field("left",TSEntityName).field("right",TSEntityName);def("TSAsExpression").bases("Expression","Pattern").build("expression","typeAnnotation").field("expression",def("Expression")).field("typeAnnotation",def("TSType")).field("extra",or({parenthesized:Boolean},null),defaults["null"]);def("TSNonNullExpression").bases("Expression","Pattern").build("expression").field("expression",def("Expression"));["TSAnyKeyword","TSBigIntKeyword","TSBooleanKeyword","TSNeverKeyword","TSNullKeyword","TSNumberKeyword","TSObjectKeyword","TSStringKeyword","TSSymbolKeyword","TSUndefinedKeyword","TSUnknownKeyword","TSVoidKeyword","TSIntrinsicKeyword","TSThisType"].forEach(function(keywordType){def(keywordType).bases("TSType").build();});def("TSArrayType").bases("TSType").build("elementType").field("elementType",def("TSType"));def("TSLiteralType").bases("TSType").build("literal").field("literal",or(def("NumericLiteral"),def("StringLiteral"),def("BooleanLiteral"),def("TemplateLiteral"),def("UnaryExpression")));def("TemplateLiteral")// The TemplateLiteral type appears to be reused for TypeScript template
// literal types (instead of introducing a new TSTemplateLiteralType type),
// so we allow the templateLiteral.expressions array to be either all
// expressions or all TypeScript types.
.field("expressions",or([def("Expression")],[def("TSType")]));["TSUnionType","TSIntersectionType"].forEach(function(typeName){def(typeName).bases("TSType").build("types").field("types",[def("TSType")]);});def("TSConditionalType").bases("TSType").build("checkType","extendsType","trueType","falseType").field("checkType",def("TSType")).field("extendsType",def("TSType")).field("trueType",def("TSType")).field("falseType",def("TSType"));def("TSInferType").bases("TSType").build("typeParameter").field("typeParameter",def("TSTypeParameter"));def("TSParenthesizedType").bases("TSType").build("typeAnnotation").field("typeAnnotation",def("TSType"));var ParametersType=[or(def("Identifier"),def("RestElement"),def("ArrayPattern"),def("ObjectPattern"))];["TSFunctionType","TSConstructorType"].forEach(function(typeName){def(typeName).bases("TSType","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("parameters").field("parameters",ParametersType);});def("TSDeclareFunction").bases("Declaration","TSHasOptionalTypeParameters").build("id","params","returnType").field("declare",Boolean,defaults["false"]).field("async",Boolean,defaults["false"]).field("generator",Boolean,defaults["false"]).field("id",or(def("Identifier"),null),defaults["null"]).field("params",[def("Pattern")])// tSFunctionTypeAnnotationCommon
.field("returnType",or(def("TSTypeAnnotation"),def("Noop"),// Still used?
null),defaults["null"]);def("TSDeclareMethod").bases("Declaration","TSHasOptionalTypeParameters").build("key","params","returnType").field("async",Boolean,defaults["false"]).field("generator",Boolean,defaults["false"]).field("params",[def("Pattern")])// classMethodOrPropertyCommon
.field("abstract",Boolean,defaults["false"]).field("accessibility",or("public","private","protected",void 0),defaults["undefined"]).field("static",Boolean,defaults["false"]).field("computed",Boolean,defaults["false"]).field("optional",Boolean,defaults["false"]).field("key",or(def("Identifier"),def("StringLiteral"),def("NumericLiteral"),// Only allowed if .computed is true.
def("Expression")))// classMethodOrDeclareMethodCommon
.field("kind",or("get","set","method","constructor"),function getDefault(){return"method";}).field("access",// Not "accessibility"?
or("public","private","protected",void 0),defaults["undefined"]).field("decorators",or([def("Decorator")],null),defaults["null"])// tSFunctionTypeAnnotationCommon
.field("returnType",or(def("TSTypeAnnotation"),def("Noop"),// Still used?
null),defaults["null"]);def("TSMappedType").bases("TSType").build("typeParameter","typeAnnotation").field("readonly",or(Boolean,"+","-"),defaults["false"]).field("typeParameter",def("TSTypeParameter")).field("optional",or(Boolean,"+","-"),defaults["false"]).field("typeAnnotation",or(def("TSType"),null),defaults["null"]);def("TSTupleType").bases("TSType").build("elementTypes").field("elementTypes",[or(def("TSType"),def("TSNamedTupleMember"))]);def("TSNamedTupleMember").bases("TSType").build("label","elementType","optional").field("label",def("Identifier")).field("optional",Boolean,defaults["false"]).field("elementType",def("TSType"));def("TSRestType").bases("TSType").build("typeAnnotation").field("typeAnnotation",def("TSType"));def("TSOptionalType").bases("TSType").build("typeAnnotation").field("typeAnnotation",def("TSType"));def("TSIndexedAccessType").bases("TSType").build("objectType","indexType").field("objectType",def("TSType")).field("indexType",def("TSType"));def("TSTypeOperator").bases("TSType").build("operator").field("operator",String).field("typeAnnotation",def("TSType"));def("TSTypeAnnotation").bases("Node").build("typeAnnotation").field("typeAnnotation",or(def("TSType"),def("TSTypeAnnotation")));def("TSIndexSignature").bases("Declaration","TSHasOptionalTypeAnnotation").build("parameters","typeAnnotation").field("parameters",[def("Identifier")])// Length === 1
.field("readonly",Boolean,defaults["false"]);def("TSPropertySignature").bases("Declaration","TSHasOptionalTypeAnnotation").build("key","typeAnnotation","optional").field("key",def("Expression")).field("computed",Boolean,defaults["false"]).field("readonly",Boolean,defaults["false"]).field("optional",Boolean,defaults["false"]).field("initializer",or(def("Expression"),null),defaults["null"]);def("TSMethodSignature").bases("Declaration","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("key","parameters","typeAnnotation").field("key",def("Expression")).field("computed",Boolean,defaults["false"]).field("optional",Boolean,defaults["false"]).field("parameters",ParametersType);def("TSTypePredicate").bases("TSTypeAnnotation","TSType").build("parameterName","typeAnnotation","asserts").field("parameterName",or(def("Identifier"),def("TSThisType"))).field("typeAnnotation",or(def("TSTypeAnnotation"),null),defaults["null"]).field("asserts",Boolean,defaults["false"]);["TSCallSignatureDeclaration","TSConstructSignatureDeclaration"].forEach(function(typeName){def(typeName).bases("Declaration","TSHasOptionalTypeParameters","TSHasOptionalTypeAnnotation").build("parameters","typeAnnotation").field("parameters",ParametersType);});def("TSEnumMember").bases("Node").build("id","initializer").field("id",or(def("Identifier"),StringLiteral)).field("initializer",or(def("Expression"),null),defaults["null"]);def("TSTypeQuery").bases("TSType").build("exprName").field("exprName",or(TSEntityName,def("TSImportType")));// Inferred from Babylon's tsParseTypeMember method.
var TSTypeMember=or(def("TSCallSignatureDeclaration"),def("TSConstructSignatureDeclaration"),def("TSIndexSignature"),def("TSMethodSignature"),def("TSPropertySignature"));def("TSTypeLiteral").bases("TSType").build("members").field("members",[TSTypeMember]);def("TSTypeParameter").bases("Identifier").build("name","constraint","default").field("name",String).field("constraint",or(def("TSType"),void 0),defaults["undefined"]).field("default",or(def("TSType"),void 0),defaults["undefined"]);def("TSTypeAssertion").bases("Expression","Pattern").build("typeAnnotation","expression").field("typeAnnotation",def("TSType")).field("expression",def("Expression")).field("extra",or({parenthesized:Boolean},null),defaults["null"]);def("TSTypeParameterDeclaration").bases("Declaration").build("params").field("params",[def("TSTypeParameter")]);def("TSTypeParameterInstantiation").bases("Node").build("params").field("params",[def("TSType")]);def("TSEnumDeclaration").bases("Declaration").build("id","members").field("id",def("Identifier")).field("const",Boolean,defaults["false"]).field("declare",Boolean,defaults["false"]).field("members",[def("TSEnumMember")]).field("initializer",or(def("Expression"),null),defaults["null"]);def("TSTypeAliasDeclaration").bases("Declaration","TSHasOptionalTypeParameters").build("id","typeAnnotation").field("id",def("Identifier")).field("declare",Boolean,defaults["false"]).field("typeAnnotation",def("TSType"));def("TSModuleBlock").bases("Node").build("body").field("body",[def("Statement")]);def("TSModuleDeclaration").bases("Declaration").build("id","body").field("id",or(StringLiteral,TSEntityName)).field("declare",Boolean,defaults["false"]).field("global",Boolean,defaults["false"]).field("body",or(def("TSModuleBlock"),def("TSModuleDeclaration"),null),defaults["null"]);def("TSImportType").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("argument","qualifier","typeParameters").field("argument",StringLiteral).field("qualifier",or(TSEntityName,void 0),defaults["undefined"]);def("TSImportEqualsDeclaration").bases("Declaration").build("id","moduleReference").field("id",def("Identifier")).field("isExport",Boolean,defaults["false"]).field("moduleReference",or(TSEntityName,def("TSExternalModuleReference")));def("TSExternalModuleReference").bases("Declaration").build("expression").field("expression",StringLiteral);def("TSExportAssignment").bases("Statement").build("expression").field("expression",def("Expression"));def("TSNamespaceExportDeclaration").bases("Declaration").build("id").field("id",def("Identifier"));def("TSInterfaceBody").bases("Node").build("body").field("body",[TSTypeMember]);def("TSExpressionWithTypeArguments").bases("TSType","TSHasOptionalTypeParameterInstantiation").build("expression","typeParameters").field("expression",TSEntityName);def("TSInterfaceDeclaration").bases("Declaration","TSHasOptionalTypeParameters").build("id","body").field("id",TSEntityName).field("declare",Boolean,defaults["false"]).field("extends",or([def("TSExpressionWithTypeArguments")],null),defaults["null"]).field("body",def("TSInterfaceBody"));def("TSParameterProperty").bases("Pattern").build("parameter").field("accessibility",or("public","private","protected",void 0),defaults["undefined"]).field("readonly",Boolean,defaults["false"]).field("parameter",or(def("Identifier"),def("AssignmentPattern")));def("ClassProperty").field("access",// Not "accessibility"?
or("public","private","protected",void 0),defaults["undefined"]);// Defined already in es6 and babel-core.
def("ClassBody").field("body",[or(def("MethodDefinition"),def("VariableDeclarator"),def("ClassPropertyDefinition"),def("ClassProperty"),def("ClassPrivateProperty"),def("ClassMethod"),def("ClassPrivateMethod"),// Just need to add these types:
def("TSDeclareMethod"),TSTypeMember)]);}exports.default=default_1;module.exports=exports["default"];})(typescript$1,typescript$1.exports);return typescript$1.exports;}var namedTypes={};var hasRequiredNamedTypes;function requireNamedTypes(){if(hasRequiredNamedTypes)return namedTypes;hasRequiredNamedTypes=1;(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.namedTypes=void 0;(function(namedTypes){})(exports.namedTypes||(exports.namedTypes={}));})(namedTypes);return namedTypes;}var hasRequiredMain$1;function requireMain$1(){if(hasRequiredMain$1)return main$3;hasRequiredMain$1=1;(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.visit=exports.use=exports.Type=exports.someField=exports.PathVisitor=exports.Path=exports.NodePath=exports.namedTypes=exports.getSupertypeNames=exports.getFieldValue=exports.getFieldNames=exports.getBuilderName=exports.finalize=exports.eachField=exports.defineMethod=exports.builtInTypes=exports.builders=exports.astNodesAreEquivalent=void 0;var tslib_1=require$$0$3;var fork_1=(0,tslib_1.__importDefault)(requireFork());var es_proposals_1=(0,tslib_1.__importDefault)(requireEsProposals());var jsx_1=(0,tslib_1.__importDefault)(requireJsx());var flow_1=(0,tslib_1.__importDefault)(requireFlow());var esprima_1=(0,tslib_1.__importDefault)(requireEsprima$2());var babel_1=(0,tslib_1.__importDefault)(requireBabel());var typescript_1=(0,tslib_1.__importDefault)(requireTypescript());var namedTypes_1=requireNamedTypes();Object.defineProperty(exports,"namedTypes",{enumerable:true,get:function(){return namedTypes_1.namedTypes;}});var _a=(0,fork_1.default)([// Feel free to add to or remove from this list of extension modules to
// configure the precise type hierarchy that you need.
es_proposals_1.default,jsx_1.default,flow_1.default,esprima_1.default,babel_1.default,typescript_1.default]),astNodesAreEquivalent=_a.astNodesAreEquivalent,builders=_a.builders,builtInTypes=_a.builtInTypes,defineMethod=_a.defineMethod,eachField=_a.eachField,finalize=_a.finalize,getBuilderName=_a.getBuilderName,getFieldNames=_a.getFieldNames,getFieldValue=_a.getFieldValue,getSupertypeNames=_a.getSupertypeNames,n=_a.namedTypes,NodePath=_a.NodePath,Path=_a.Path,PathVisitor=_a.PathVisitor,someField=_a.someField,Type=_a.Type,use=_a.use,visit=_a.visit;exports.astNodesAreEquivalent=astNodesAreEquivalent;exports.builders=builders;exports.builtInTypes=builtInTypes;exports.defineMethod=defineMethod;exports.eachField=eachField;exports.finalize=finalize;exports.getBuilderName=getBuilderName;exports.getFieldNames=getFieldNames;exports.getFieldValue=getFieldValue;exports.getSupertypeNames=getSupertypeNames;exports.NodePath=NodePath;exports.Path=Path;exports.PathVisitor=PathVisitor;exports.someField=someField;exports.Type=Type;exports.use=use;exports.visit=visit;// Populate the exported fields of the namedTypes namespace, while still
// retaining its member types.
Object.assign(namedTypes_1.namedTypes,n);})(main$3);return main$3;}var parser$1={};var options$1={};var util$1={};var sourceMap={};var sourceMapGenerator={};var base64Vlq={};var base64={};/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredBase64;function requireBase64(){if(hasRequiredBase64)return base64;hasRequiredBase64=1;/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */var intToCharMap='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');/**
	 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
	 */base64.encode=function(number){if(0<=number&&number<intToCharMap.length){return intToCharMap[number];}throw new TypeError("Must be between 0 and 63: "+number);};/**
	 * Decode a single base 64 character code digit to an integer. Returns -1 on
	 * failure.
	 */base64.decode=function(charCode){var bigA=65;// 'A'
var bigZ=90;// 'Z'
var littleA=97;// 'a'
var littleZ=122;// 'z'
var zero=48;// '0'
var nine=57;// '9'
var plus=43;// '+'
var slash=47;// '/'
var littleOffset=26;var numberOffset=52;// 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
if(bigA<=charCode&&charCode<=bigZ){return charCode-bigA;}// 26 - 51: abcdefghijklmnopqrstuvwxyz
if(littleA<=charCode&&charCode<=littleZ){return charCode-littleA+littleOffset;}// 52 - 61: 0123456789
if(zero<=charCode&&charCode<=nine){return charCode-zero+numberOffset;}// 62: +
if(charCode==plus){return 62;}// 63: /
if(charCode==slash){return 63;}// Invalid base64 digit.
return-1;};return base64;}/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredBase64Vlq;function requireBase64Vlq(){if(hasRequiredBase64Vlq)return base64Vlq;hasRequiredBase64Vlq=1;/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 *
	 * Based on the Base 64 VLQ implementation in Closure Compiler:
	 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
	 *
	 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are
	 * met:
	 *
	 *  * Redistributions of source code must retain the above copyright
	 *    notice, this list of conditions and the following disclaimer.
	 *  * Redistributions in binary form must reproduce the above
	 *    copyright notice, this list of conditions and the following
	 *    disclaimer in the documentation and/or other materials provided
	 *    with the distribution.
	 *  * Neither the name of Google Inc. nor the names of its
	 *    contributors may be used to endorse or promote products derived
	 *    from this software without specific prior written permission.
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
	 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
	 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
	 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
	 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
	 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
	 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
	 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
	 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
	 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */var base64=requireBase64();// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011
var VLQ_BASE_SHIFT=5;// binary: 100000
var VLQ_BASE=1<<VLQ_BASE_SHIFT;// binary: 011111
var VLQ_BASE_MASK=VLQ_BASE-1;// binary: 100000
var VLQ_CONTINUATION_BIT=VLQ_BASE;/**
	 * Converts from a two-complement value to a value where the sign bit is
	 * placed in the least significant bit.  For example, as decimals:
	 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
	 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
	 */function toVLQSigned(aValue){return aValue<0?(-aValue<<1)+1:(aValue<<1)+0;}/**
	 * Converts to a two-complement value from a value where the sign bit is
	 * placed in the least significant bit.  For example, as decimals:
	 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
	 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
	 */function fromVLQSigned(aValue){var isNegative=(aValue&1)===1;var shifted=aValue>>1;return isNegative?-shifted:shifted;}/**
	 * Returns the base 64 VLQ encoded value.
	 */base64Vlq.encode=function base64VLQ_encode(aValue){var encoded="";var digit;var vlq=toVLQSigned(aValue);do{digit=vlq&VLQ_BASE_MASK;vlq>>>=VLQ_BASE_SHIFT;if(vlq>0){// There are still more digits in this value, so we must make sure the
// continuation bit is marked.
digit|=VLQ_CONTINUATION_BIT;}encoded+=base64.encode(digit);}while(vlq>0);return encoded;};/**
	 * Decodes the next base 64 VLQ value from the given string and returns the
	 * value and the rest of the string via the out parameter.
	 */base64Vlq.decode=function base64VLQ_decode(aStr,aIndex,aOutParam){var strLen=aStr.length;var result=0;var shift=0;var continuation,digit;do{if(aIndex>=strLen){throw new Error("Expected more digits in base 64 VLQ value.");}digit=base64.decode(aStr.charCodeAt(aIndex++));if(digit===-1){throw new Error("Invalid base64 digit: "+aStr.charAt(aIndex-1));}continuation=!!(digit&VLQ_CONTINUATION_BIT);digit&=VLQ_BASE_MASK;result=result+(digit<<shift);shift+=VLQ_BASE_SHIFT;}while(continuation);aOutParam.value=fromVLQSigned(result);aOutParam.rest=aIndex;};return base64Vlq;}var util={};/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredUtil$1;function requireUtil$1(){if(hasRequiredUtil$1)return util;hasRequiredUtil$1=1;(function(exports){/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */ /**
		 * This is a helper function for getting values from parameter/options
		 * objects.
		 *
		 * @param args The object we are extracting values from
		 * @param name The name of the property we are getting.
		 * @param defaultValue An optional value to return if the property is missing
		 * from the object. If this is not specified and the property is missing, an
		 * error will be thrown.
		 */function getArg(aArgs,aName,aDefaultValue){if(aName in aArgs){return aArgs[aName];}else if(arguments.length===3){return aDefaultValue;}else{throw new Error('"'+aName+'" is a required argument.');}}exports.getArg=getArg;var urlRegexp=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;var dataUrlRegexp=/^data:.+\,.+$/;function urlParse(aUrl){var match=aUrl.match(urlRegexp);if(!match){return null;}return{scheme:match[1],auth:match[2],host:match[3],port:match[4],path:match[5]};}exports.urlParse=urlParse;function urlGenerate(aParsedUrl){var url='';if(aParsedUrl.scheme){url+=aParsedUrl.scheme+':';}url+='//';if(aParsedUrl.auth){url+=aParsedUrl.auth+'@';}if(aParsedUrl.host){url+=aParsedUrl.host;}if(aParsedUrl.port){url+=":"+aParsedUrl.port;}if(aParsedUrl.path){url+=aParsedUrl.path;}return url;}exports.urlGenerate=urlGenerate;/**
		 * Normalizes a path, or the path portion of a URL:
		 *
		 * - Replaces consecutive slashes with one slash.
		 * - Removes unnecessary '.' parts.
		 * - Removes unnecessary '<dir>/..' parts.
		 *
		 * Based on code in the Node.js 'path' core module.
		 *
		 * @param aPath The path or url to normalize.
		 */function normalize(aPath){var path=aPath;var url=urlParse(aPath);if(url){if(!url.path){return aPath;}path=url.path;}var isAbsolute=exports.isAbsolute(path);var parts=path.split(/\/+/);for(var part,up=0,i=parts.length-1;i>=0;i--){part=parts[i];if(part==='.'){parts.splice(i,1);}else if(part==='..'){up++;}else if(up>0){if(part===''){// The first part is blank if the path is absolute. Trying to go
// above the root is a no-op. Therefore we can remove all '..' parts
// directly after the root.
parts.splice(i+1,up);up=0;}else{parts.splice(i,2);up--;}}}path=parts.join('/');if(path===''){path=isAbsolute?'/':'.';}if(url){url.path=path;return urlGenerate(url);}return path;}exports.normalize=normalize;/**
		 * Joins two paths/URLs.
		 *
		 * @param aRoot The root path or URL.
		 * @param aPath The path or URL to be joined with the root.
		 *
		 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
		 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
		 *   first.
		 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
		 *   is updated with the result and aRoot is returned. Otherwise the result
		 *   is returned.
		 *   - If aPath is absolute, the result is aPath.
		 *   - Otherwise the two paths are joined with a slash.
		 * - Joining for example 'http://' and 'www.example.com' is also supported.
		 */function join(aRoot,aPath){if(aRoot===""){aRoot=".";}if(aPath===""){aPath=".";}var aPathUrl=urlParse(aPath);var aRootUrl=urlParse(aRoot);if(aRootUrl){aRoot=aRootUrl.path||'/';}// `join(foo, '//www.example.org')`
if(aPathUrl&&!aPathUrl.scheme){if(aRootUrl){aPathUrl.scheme=aRootUrl.scheme;}return urlGenerate(aPathUrl);}if(aPathUrl||aPath.match(dataUrlRegexp)){return aPath;}// `join('http://', 'www.example.com')`
if(aRootUrl&&!aRootUrl.host&&!aRootUrl.path){aRootUrl.host=aPath;return urlGenerate(aRootUrl);}var joined=aPath.charAt(0)==='/'?aPath:normalize(aRoot.replace(/\/+$/,'')+'/'+aPath);if(aRootUrl){aRootUrl.path=joined;return urlGenerate(aRootUrl);}return joined;}exports.join=join;exports.isAbsolute=function(aPath){return aPath.charAt(0)==='/'||urlRegexp.test(aPath);};/**
		 * Make a path relative to a URL or another path.
		 *
		 * @param aRoot The root path or URL.
		 * @param aPath The path or URL to be made relative to aRoot.
		 */function relative(aRoot,aPath){if(aRoot===""){aRoot=".";}aRoot=aRoot.replace(/\/$/,'');// It is possible for the path to be above the root. In this case, simply
// checking whether the root is a prefix of the path won't work. Instead, we
// need to remove components from the root one by one, until either we find
// a prefix that fits, or we run out of components to remove.
var level=0;while(aPath.indexOf(aRoot+'/')!==0){var index=aRoot.lastIndexOf("/");if(index<0){return aPath;}// If the only part of the root that is left is the scheme (i.e. http://,
// file:///, etc.), one or more slashes (/), or simply nothing at all, we
// have exhausted all components, so the path is not relative to the root.
aRoot=aRoot.slice(0,index);if(aRoot.match(/^([^\/]+:\/)?\/*$/)){return aPath;}++level;}// Make sure we add a "../" for each component we removed from the root.
return Array(level+1).join("../")+aPath.substr(aRoot.length+1);}exports.relative=relative;var supportsNullProto=function(){var obj=Object.create(null);return!('__proto__'in obj);}();function identity(s){return s;}/**
		 * Because behavior goes wacky when you set `__proto__` on objects, we
		 * have to prefix all the strings in our set with an arbitrary character.
		 *
		 * See https://github.com/mozilla/source-map/pull/31 and
		 * https://github.com/mozilla/source-map/issues/30
		 *
		 * @param String aStr
		 */function toSetString(aStr){if(isProtoString(aStr)){return'$'+aStr;}return aStr;}exports.toSetString=supportsNullProto?identity:toSetString;function fromSetString(aStr){if(isProtoString(aStr)){return aStr.slice(1);}return aStr;}exports.fromSetString=supportsNullProto?identity:fromSetString;function isProtoString(s){if(!s){return false;}var length=s.length;if(length<9/* "__proto__".length */){return false;}if(s.charCodeAt(length-1)!==95/* '_' */||s.charCodeAt(length-2)!==95/* '_' */||s.charCodeAt(length-3)!==111/* 'o' */||s.charCodeAt(length-4)!==116/* 't' */||s.charCodeAt(length-5)!==111/* 'o' */||s.charCodeAt(length-6)!==114/* 'r' */||s.charCodeAt(length-7)!==112/* 'p' */||s.charCodeAt(length-8)!==95/* '_' */||s.charCodeAt(length-9)!==95/* '_' */){return false;}for(var i=length-10;i>=0;i--){if(s.charCodeAt(i)!==36/* '$' */){return false;}}return true;}/**
		 * Comparator between two mappings where the original positions are compared.
		 *
		 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
		 * mappings with the same original source/line/column, but different generated
		 * line and column the same. Useful when searching for a mapping with a
		 * stubbed out mapping.
		 */function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){var cmp=strcmp(mappingA.source,mappingB.source);if(cmp!==0){return cmp;}cmp=mappingA.originalLine-mappingB.originalLine;if(cmp!==0){return cmp;}cmp=mappingA.originalColumn-mappingB.originalColumn;if(cmp!==0||onlyCompareOriginal){return cmp;}cmp=mappingA.generatedColumn-mappingB.generatedColumn;if(cmp!==0){return cmp;}cmp=mappingA.generatedLine-mappingB.generatedLine;if(cmp!==0){return cmp;}return strcmp(mappingA.name,mappingB.name);}exports.compareByOriginalPositions=compareByOriginalPositions;/**
		 * Comparator between two mappings with deflated source and name indices where
		 * the generated positions are compared.
		 *
		 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
		 * mappings with the same generated line and column, but different
		 * source/name/original line and column the same. Useful when searching for a
		 * mapping with a stubbed out mapping.
		 */function compareByGeneratedPositionsDeflated(mappingA,mappingB,onlyCompareGenerated){var cmp=mappingA.generatedLine-mappingB.generatedLine;if(cmp!==0){return cmp;}cmp=mappingA.generatedColumn-mappingB.generatedColumn;if(cmp!==0||onlyCompareGenerated){return cmp;}cmp=strcmp(mappingA.source,mappingB.source);if(cmp!==0){return cmp;}cmp=mappingA.originalLine-mappingB.originalLine;if(cmp!==0){return cmp;}cmp=mappingA.originalColumn-mappingB.originalColumn;if(cmp!==0){return cmp;}return strcmp(mappingA.name,mappingB.name);}exports.compareByGeneratedPositionsDeflated=compareByGeneratedPositionsDeflated;function strcmp(aStr1,aStr2){if(aStr1===aStr2){return 0;}if(aStr1===null){return 1;// aStr2 !== null
}if(aStr2===null){return-1;// aStr1 !== null
}if(aStr1>aStr2){return 1;}return-1;}/**
		 * Comparator between two mappings with inflated source and name strings where
		 * the generated positions are compared.
		 */function compareByGeneratedPositionsInflated(mappingA,mappingB){var cmp=mappingA.generatedLine-mappingB.generatedLine;if(cmp!==0){return cmp;}cmp=mappingA.generatedColumn-mappingB.generatedColumn;if(cmp!==0){return cmp;}cmp=strcmp(mappingA.source,mappingB.source);if(cmp!==0){return cmp;}cmp=mappingA.originalLine-mappingB.originalLine;if(cmp!==0){return cmp;}cmp=mappingA.originalColumn-mappingB.originalColumn;if(cmp!==0){return cmp;}return strcmp(mappingA.name,mappingB.name);}exports.compareByGeneratedPositionsInflated=compareByGeneratedPositionsInflated;/**
		 * Strip any JSON XSSI avoidance prefix from the string (as documented
		 * in the source maps specification), and then parse the string as
		 * JSON.
		 */function parseSourceMapInput(str){return JSON.parse(str.replace(/^\)]}'[^\n]*\n/,''));}exports.parseSourceMapInput=parseSourceMapInput;/**
		 * Compute the URL of a source given the the source root, the source's
		 * URL, and the source map's URL.
		 */function computeSourceURL(sourceRoot,sourceURL,sourceMapURL){sourceURL=sourceURL||'';if(sourceRoot){// This follows what Chrome does.
if(sourceRoot[sourceRoot.length-1]!=='/'&&sourceURL[0]!=='/'){sourceRoot+='/';}// The spec says:
//   Line 4: An optional source root, useful for relocating source
//   files on a server or removing repeated values in the
//   “sources” entry.  This value is prepended to the individual
//   entries in the “source” field.
sourceURL=sourceRoot+sourceURL;}// Historically, SourceMapConsumer did not take the sourceMapURL as
// a parameter.  This mode is still somewhat supported, which is why
// this code block is conditional.  However, it's preferable to pass
// the source map URL to SourceMapConsumer, so that this function
// can implement the source URL resolution algorithm as outlined in
// the spec.  This block is basically the equivalent of:
//    new URL(sourceURL, sourceMapURL).toString()
// ... except it avoids using URL, which wasn't available in the
// older releases of node still supported by this library.
//
// The spec says:
//   If the sources are not absolute URLs after prepending of the
//   “sourceRoot”, the sources are resolved relative to the
//   SourceMap (like resolving script src in a html document).
if(sourceMapURL){var parsed=urlParse(sourceMapURL);if(!parsed){throw new Error("sourceMapURL could not be parsed");}if(parsed.path){// Strip the last path component, but keep the "/".
var index=parsed.path.lastIndexOf('/');if(index>=0){parsed.path=parsed.path.substring(0,index+1);}}sourceURL=join(urlGenerate(parsed),sourceURL);}return normalize(sourceURL);}exports.computeSourceURL=computeSourceURL;})(util);return util;}var arraySet={};/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredArraySet;function requireArraySet(){if(hasRequiredArraySet)return arraySet;hasRequiredArraySet=1;/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */var util=requireUtil$1();var has=Object.prototype.hasOwnProperty;var hasNativeMap=typeof Map!=="undefined";/**
	 * A data structure which is a combination of an array and a set. Adding a new
	 * member is O(1), testing for membership is O(1), and finding the index of an
	 * element is O(1). Removing elements from the set is not supported. Only
	 * strings are supported for membership.
	 */function ArraySet(){this._array=[];this._set=hasNativeMap?new Map():Object.create(null);}/**
	 * Static method for creating ArraySet instances from an existing array.
	 */ArraySet.fromArray=function ArraySet_fromArray(aArray,aAllowDuplicates){var set=new ArraySet();for(var i=0,len=aArray.length;i<len;i++){set.add(aArray[i],aAllowDuplicates);}return set;};/**
	 * Return how many unique items are in this ArraySet. If duplicates have been
	 * added, than those do not count towards the size.
	 *
	 * @returns Number
	 */ArraySet.prototype.size=function ArraySet_size(){return hasNativeMap?this._set.size:Object.getOwnPropertyNames(this._set).length;};/**
	 * Add the given string to this set.
	 *
	 * @param String aStr
	 */ArraySet.prototype.add=function ArraySet_add(aStr,aAllowDuplicates){var sStr=hasNativeMap?aStr:util.toSetString(aStr);var isDuplicate=hasNativeMap?this.has(aStr):has.call(this._set,sStr);var idx=this._array.length;if(!isDuplicate||aAllowDuplicates){this._array.push(aStr);}if(!isDuplicate){if(hasNativeMap){this._set.set(aStr,idx);}else{this._set[sStr]=idx;}}};/**
	 * Is the given string a member of this set?
	 *
	 * @param String aStr
	 */ArraySet.prototype.has=function ArraySet_has(aStr){if(hasNativeMap){return this._set.has(aStr);}else{var sStr=util.toSetString(aStr);return has.call(this._set,sStr);}};/**
	 * What is the index of the given string in the array?
	 *
	 * @param String aStr
	 */ArraySet.prototype.indexOf=function ArraySet_indexOf(aStr){if(hasNativeMap){var idx=this._set.get(aStr);if(idx>=0){return idx;}}else{var sStr=util.toSetString(aStr);if(has.call(this._set,sStr)){return this._set[sStr];}}throw new Error('"'+aStr+'" is not in the set.');};/**
	 * What is the element at the given index?
	 *
	 * @param Number aIdx
	 */ArraySet.prototype.at=function ArraySet_at(aIdx){if(aIdx>=0&&aIdx<this._array.length){return this._array[aIdx];}throw new Error('No element indexed by '+aIdx);};/**
	 * Returns the array representation of this set (which has the proper indices
	 * indicated by indexOf). Note that this is a copy of the internal array used
	 * for storing the members so that no one can mess with internal state.
	 */ArraySet.prototype.toArray=function ArraySet_toArray(){return this._array.slice();};arraySet.ArraySet=ArraySet;return arraySet;}var mappingList={};/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredMappingList;function requireMappingList(){if(hasRequiredMappingList)return mappingList;hasRequiredMappingList=1;/*
	 * Copyright 2014 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */var util=requireUtil$1();/**
	 * Determine whether mappingB is after mappingA with respect to generated
	 * position.
	 */function generatedPositionAfter(mappingA,mappingB){// Optimized for most common case
var lineA=mappingA.generatedLine;var lineB=mappingB.generatedLine;var columnA=mappingA.generatedColumn;var columnB=mappingB.generatedColumn;return lineB>lineA||lineB==lineA&&columnB>=columnA||util.compareByGeneratedPositionsInflated(mappingA,mappingB)<=0;}/**
	 * A data structure to provide a sorted view of accumulated mappings in a
	 * performance conscious manner. It trades a neglibable overhead in general
	 * case for a large speedup in case of mappings being added in order.
	 */function MappingList(){this._array=[];this._sorted=true;// Serves as infimum
this._last={generatedLine:-1,generatedColumn:0};}/**
	 * Iterate through internal items. This method takes the same arguments that
	 * `Array.prototype.forEach` takes.
	 *
	 * NOTE: The order of the mappings is NOT guaranteed.
	 */MappingList.prototype.unsortedForEach=function MappingList_forEach(aCallback,aThisArg){this._array.forEach(aCallback,aThisArg);};/**
	 * Add the given source mapping.
	 *
	 * @param Object aMapping
	 */MappingList.prototype.add=function MappingList_add(aMapping){if(generatedPositionAfter(this._last,aMapping)){this._last=aMapping;this._array.push(aMapping);}else{this._sorted=false;this._array.push(aMapping);}};/**
	 * Returns the flat, sorted array of mappings. The mappings are sorted by
	 * generated position.
	 *
	 * WARNING: This method returns internal data without copying, for
	 * performance. The return value must NOT be mutated, and should be treated as
	 * an immutable borrow. If you want to take ownership, you must make your own
	 * copy.
	 */MappingList.prototype.toArray=function MappingList_toArray(){if(!this._sorted){this._array.sort(util.compareByGeneratedPositionsInflated);this._sorted=true;}return this._array;};mappingList.MappingList=MappingList;return mappingList;}/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredSourceMapGenerator;function requireSourceMapGenerator(){if(hasRequiredSourceMapGenerator)return sourceMapGenerator;hasRequiredSourceMapGenerator=1;/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */var base64VLQ=requireBase64Vlq();var util=requireUtil$1();var ArraySet=requireArraySet().ArraySet;var MappingList=requireMappingList().MappingList;/**
	 * An instance of the SourceMapGenerator represents a source map which is
	 * being built incrementally. You may pass an object with the following
	 * properties:
	 *
	 *   - file: The filename of the generated source.
	 *   - sourceRoot: A root for all relative URLs in this source map.
	 */function SourceMapGenerator(aArgs){if(!aArgs){aArgs={};}this._file=util.getArg(aArgs,'file',null);this._sourceRoot=util.getArg(aArgs,'sourceRoot',null);this._skipValidation=util.getArg(aArgs,'skipValidation',false);this._sources=new ArraySet();this._names=new ArraySet();this._mappings=new MappingList();this._sourcesContents=null;}SourceMapGenerator.prototype._version=3;/**
	 * Creates a new SourceMapGenerator based on a SourceMapConsumer
	 *
	 * @param aSourceMapConsumer The SourceMap.
	 */SourceMapGenerator.fromSourceMap=function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){var sourceRoot=aSourceMapConsumer.sourceRoot;var generator=new SourceMapGenerator({file:aSourceMapConsumer.file,sourceRoot:sourceRoot});aSourceMapConsumer.eachMapping(function(mapping){var newMapping={generated:{line:mapping.generatedLine,column:mapping.generatedColumn}};if(mapping.source!=null){newMapping.source=mapping.source;if(sourceRoot!=null){newMapping.source=util.relative(sourceRoot,newMapping.source);}newMapping.original={line:mapping.originalLine,column:mapping.originalColumn};if(mapping.name!=null){newMapping.name=mapping.name;}}generator.addMapping(newMapping);});aSourceMapConsumer.sources.forEach(function(sourceFile){var sourceRelative=sourceFile;if(sourceRoot!==null){sourceRelative=util.relative(sourceRoot,sourceFile);}if(!generator._sources.has(sourceRelative)){generator._sources.add(sourceRelative);}var content=aSourceMapConsumer.sourceContentFor(sourceFile);if(content!=null){generator.setSourceContent(sourceFile,content);}});return generator;};/**
	 * Add a single mapping from original source line and column to the generated
	 * source's line and column for this source map being created. The mapping
	 * object should have the following properties:
	 *
	 *   - generated: An object with the generated line and column positions.
	 *   - original: An object with the original line and column positions.
	 *   - source: The original source file (relative to the sourceRoot).
	 *   - name: An optional original token name for this mapping.
	 */SourceMapGenerator.prototype.addMapping=function SourceMapGenerator_addMapping(aArgs){var generated=util.getArg(aArgs,'generated');var original=util.getArg(aArgs,'original',null);var source=util.getArg(aArgs,'source',null);var name=util.getArg(aArgs,'name',null);if(!this._skipValidation){this._validateMapping(generated,original,source,name);}if(source!=null){source=String(source);if(!this._sources.has(source)){this._sources.add(source);}}if(name!=null){name=String(name);if(!this._names.has(name)){this._names.add(name);}}this._mappings.add({generatedLine:generated.line,generatedColumn:generated.column,originalLine:original!=null&&original.line,originalColumn:original!=null&&original.column,source:source,name:name});};/**
	 * Set the source content for a source file.
	 */SourceMapGenerator.prototype.setSourceContent=function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){var source=aSourceFile;if(this._sourceRoot!=null){source=util.relative(this._sourceRoot,source);}if(aSourceContent!=null){// Add the source content to the _sourcesContents map.
// Create a new _sourcesContents map if the property is null.
if(!this._sourcesContents){this._sourcesContents=Object.create(null);}this._sourcesContents[util.toSetString(source)]=aSourceContent;}else if(this._sourcesContents){// Remove the source file from the _sourcesContents map.
// If the _sourcesContents map is empty, set the property to null.
delete this._sourcesContents[util.toSetString(source)];if(Object.keys(this._sourcesContents).length===0){this._sourcesContents=null;}}};/**
	 * Applies the mappings of a sub-source-map for a specific source file to the
	 * source map being generated. Each mapping to the supplied source file is
	 * rewritten using the supplied source map. Note: The resolution for the
	 * resulting mappings is the minimium of this map and the supplied map.
	 *
	 * @param aSourceMapConsumer The source map to be applied.
	 * @param aSourceFile Optional. The filename of the source file.
	 *        If omitted, SourceMapConsumer's file property will be used.
	 * @param aSourceMapPath Optional. The dirname of the path to the source map
	 *        to be applied. If relative, it is relative to the SourceMapConsumer.
	 *        This parameter is needed when the two source maps aren't in the same
	 *        directory, and the source map to be applied contains relative source
	 *        paths. If so, those relative source paths need to be rewritten
	 *        relative to the SourceMapGenerator.
	 */SourceMapGenerator.prototype.applySourceMap=function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile,aSourceMapPath){var sourceFile=aSourceFile;// If aSourceFile is omitted, we will use the file property of the SourceMap
if(aSourceFile==null){if(aSourceMapConsumer.file==null){throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, '+'or the source map\'s "file" property. Both were omitted.');}sourceFile=aSourceMapConsumer.file;}var sourceRoot=this._sourceRoot;// Make "sourceFile" relative if an absolute Url is passed.
if(sourceRoot!=null){sourceFile=util.relative(sourceRoot,sourceFile);}// Applying the SourceMap can add and remove items from the sources and
// the names array.
var newSources=new ArraySet();var newNames=new ArraySet();// Find mappings for the "sourceFile"
this._mappings.unsortedForEach(function(mapping){if(mapping.source===sourceFile&&mapping.originalLine!=null){// Check if it can be mapped by the source map, then update the mapping.
var original=aSourceMapConsumer.originalPositionFor({line:mapping.originalLine,column:mapping.originalColumn});if(original.source!=null){// Copy mapping
mapping.source=original.source;if(aSourceMapPath!=null){mapping.source=util.join(aSourceMapPath,mapping.source);}if(sourceRoot!=null){mapping.source=util.relative(sourceRoot,mapping.source);}mapping.originalLine=original.line;mapping.originalColumn=original.column;if(original.name!=null){mapping.name=original.name;}}}var source=mapping.source;if(source!=null&&!newSources.has(source)){newSources.add(source);}var name=mapping.name;if(name!=null&&!newNames.has(name)){newNames.add(name);}},this);this._sources=newSources;this._names=newNames;// Copy sourcesContents of applied map.
aSourceMapConsumer.sources.forEach(function(sourceFile){var content=aSourceMapConsumer.sourceContentFor(sourceFile);if(content!=null){if(aSourceMapPath!=null){sourceFile=util.join(aSourceMapPath,sourceFile);}if(sourceRoot!=null){sourceFile=util.relative(sourceRoot,sourceFile);}this.setSourceContent(sourceFile,content);}},this);};/**
	 * A mapping can have one of the three levels of data:
	 *
	 *   1. Just the generated position.
	 *   2. The Generated position, original position, and original source.
	 *   3. Generated and original position, original source, as well as a name
	 *      token.
	 *
	 * To maintain consistency, we validate that any new mapping being added falls
	 * in to one of these categories.
	 */SourceMapGenerator.prototype._validateMapping=function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,aName){// When aOriginal is truthy but has empty values for .line and .column,
// it is most likely a programmer error. In this case we throw a very
// specific error message to try to guide them the right way.
// For example: https://github.com/Polymer/polymer-bundler/pull/519
if(aOriginal&&typeof aOriginal.line!=='number'&&typeof aOriginal.column!=='number'){throw new Error('original.line and original.column are not numbers -- you probably meant to omit '+'the original mapping entirely and only map the generated position. If so, pass '+'null for the original mapping instead of an object with empty or null values.');}if(aGenerated&&'line'in aGenerated&&'column'in aGenerated&&aGenerated.line>0&&aGenerated.column>=0&&!aOriginal&&!aSource&&!aName){// Case 1.
return;}else if(aGenerated&&'line'in aGenerated&&'column'in aGenerated&&aOriginal&&'line'in aOriginal&&'column'in aOriginal&&aGenerated.line>0&&aGenerated.column>=0&&aOriginal.line>0&&aOriginal.column>=0&&aSource){// Cases 2 and 3.
return;}else{throw new Error('Invalid mapping: '+JSON.stringify({generated:aGenerated,source:aSource,original:aOriginal,name:aName}));}};/**
	 * Serialize the accumulated mappings in to the stream of base 64 VLQs
	 * specified by the source map format.
	 */SourceMapGenerator.prototype._serializeMappings=function SourceMapGenerator_serializeMappings(){var previousGeneratedColumn=0;var previousGeneratedLine=1;var previousOriginalColumn=0;var previousOriginalLine=0;var previousName=0;var previousSource=0;var result='';var next;var mapping;var nameIdx;var sourceIdx;var mappings=this._mappings.toArray();for(var i=0,len=mappings.length;i<len;i++){mapping=mappings[i];next='';if(mapping.generatedLine!==previousGeneratedLine){previousGeneratedColumn=0;while(mapping.generatedLine!==previousGeneratedLine){next+=';';previousGeneratedLine++;}}else{if(i>0){if(!util.compareByGeneratedPositionsInflated(mapping,mappings[i-1])){continue;}next+=',';}}next+=base64VLQ.encode(mapping.generatedColumn-previousGeneratedColumn);previousGeneratedColumn=mapping.generatedColumn;if(mapping.source!=null){sourceIdx=this._sources.indexOf(mapping.source);next+=base64VLQ.encode(sourceIdx-previousSource);previousSource=sourceIdx;// lines are stored 0-based in SourceMap spec version 3
next+=base64VLQ.encode(mapping.originalLine-1-previousOriginalLine);previousOriginalLine=mapping.originalLine-1;next+=base64VLQ.encode(mapping.originalColumn-previousOriginalColumn);previousOriginalColumn=mapping.originalColumn;if(mapping.name!=null){nameIdx=this._names.indexOf(mapping.name);next+=base64VLQ.encode(nameIdx-previousName);previousName=nameIdx;}}result+=next;}return result;};SourceMapGenerator.prototype._generateSourcesContent=function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){return aSources.map(function(source){if(!this._sourcesContents){return null;}if(aSourceRoot!=null){source=util.relative(aSourceRoot,source);}var key=util.toSetString(source);return Object.prototype.hasOwnProperty.call(this._sourcesContents,key)?this._sourcesContents[key]:null;},this);};/**
	 * Externalize the source map.
	 */SourceMapGenerator.prototype.toJSON=function SourceMapGenerator_toJSON(){var map={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};if(this._file!=null){map.file=this._file;}if(this._sourceRoot!=null){map.sourceRoot=this._sourceRoot;}if(this._sourcesContents){map.sourcesContent=this._generateSourcesContent(map.sources,map.sourceRoot);}return map;};/**
	 * Render the source map being generated to a string.
	 */SourceMapGenerator.prototype.toString=function SourceMapGenerator_toString(){return JSON.stringify(this.toJSON());};sourceMapGenerator.SourceMapGenerator=SourceMapGenerator;return sourceMapGenerator;}var sourceMapConsumer={};var binarySearch={};/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredBinarySearch;function requireBinarySearch(){if(hasRequiredBinarySearch)return binarySearch;hasRequiredBinarySearch=1;(function(exports){/*
		 * Copyright 2011 Mozilla Foundation and contributors
		 * Licensed under the New BSD license. See LICENSE or:
		 * http://opensource.org/licenses/BSD-3-Clause
		 */exports.GREATEST_LOWER_BOUND=1;exports.LEAST_UPPER_BOUND=2;/**
		 * Recursive implementation of binary search.
		 *
		 * @param aLow Indices here and lower do not contain the needle.
		 * @param aHigh Indices here and higher do not contain the needle.
		 * @param aNeedle The element being searched for.
		 * @param aHaystack The non-empty array being searched.
		 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
		 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
		 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
		 *     closest element that is smaller than or greater than the one we are
		 *     searching for, respectively, if the exact element cannot be found.
		 */function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare,aBias){// This function terminates when one of the following is true:
//
//   1. We find the exact element we are looking for.
//
//   2. We did not find the exact element, but we can return the index of
//      the next-closest element.
//
//   3. We did not find the exact element, and there is no next-closest
//      element than the one we are searching for, so we return -1.
var mid=Math.floor((aHigh-aLow)/2)+aLow;var cmp=aCompare(aNeedle,aHaystack[mid],true);if(cmp===0){// Found the element we are looking for.
return mid;}else if(cmp>0){// Our needle is greater than aHaystack[mid].
if(aHigh-mid>1){// The element is in the upper half.
return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare,aBias);}// The exact needle element was not found in this haystack. Determine if
// we are in termination case (3) or (2) and return the appropriate thing.
if(aBias==exports.LEAST_UPPER_BOUND){return aHigh<aHaystack.length?aHigh:-1;}else{return mid;}}else{// Our needle is less than aHaystack[mid].
if(mid-aLow>1){// The element is in the lower half.
return recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare,aBias);}// we are in termination case (3) or (2) and return the appropriate thing.
if(aBias==exports.LEAST_UPPER_BOUND){return mid;}else{return aLow<0?-1:aLow;}}}/**
		 * This is an implementation of binary search which will always try and return
		 * the index of the closest element if there is no exact hit. This is because
		 * mappings between original and generated line/col pairs are single points,
		 * and there is an implicit region between each of them, so a miss just means
		 * that you aren't on the very start of a region.
		 *
		 * @param aNeedle The element you are looking for.
		 * @param aHaystack The array that is being searched.
		 * @param aCompare A function which takes the needle and an element in the
		 *     array and returns -1, 0, or 1 depending on whether the needle is less
		 *     than, equal to, or greater than the element, respectively.
		 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
		 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
		 *     closest element that is smaller than or greater than the one we are
		 *     searching for, respectively, if the exact element cannot be found.
		 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
		 */exports.search=function search(aNeedle,aHaystack,aCompare,aBias){if(aHaystack.length===0){return-1;}var index=recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare,aBias||exports.GREATEST_LOWER_BOUND);if(index<0){return-1;}// We have found either the exact element, or the next-closest element than
// the one we are searching for. However, there may be more than one such
// element. Make sure we always return the smallest of these.
while(index-1>=0){if(aCompare(aHaystack[index],aHaystack[index-1],true)!==0){break;}--index;}return index;};})(binarySearch);return binarySearch;}var quickSort={};/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredQuickSort;function requireQuickSort(){if(hasRequiredQuickSort)return quickSort;hasRequiredQuickSort=1;/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */ // It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.
/**
	 * Swap the elements indexed by `x` and `y` in the array `ary`.
	 *
	 * @param {Array} ary
	 *        The array.
	 * @param {Number} x
	 *        The index of the first item.
	 * @param {Number} y
	 *        The index of the second item.
	 */function swap(ary,x,y){var temp=ary[x];ary[x]=ary[y];ary[y]=temp;}/**
	 * Returns a random integer within the range `low .. high` inclusive.
	 *
	 * @param {Number} low
	 *        The lower bound on the range.
	 * @param {Number} high
	 *        The upper bound on the range.
	 */function randomIntInRange(low,high){return Math.round(low+Math.random()*(high-low));}/**
	 * The Quick Sort algorithm.
	 *
	 * @param {Array} ary
	 *        An array to sort.
	 * @param {function} comparator
	 *        Function to use to compare two items.
	 * @param {Number} p
	 *        Start index of the array
	 * @param {Number} r
	 *        End index of the array
	 */function doQuickSort(ary,comparator,p,r){// If our lower bound is less than our upper bound, we (1) partition the
// array into two pieces and (2) recurse on each half. If it is not, this is
// the empty array and our base case.
if(p<r){// (1) Partitioning.
//
// The partitioning chooses a pivot between `p` and `r` and moves all
// elements that are less than or equal to the pivot to the before it, and
// all the elements that are greater than it after it. The effect is that
// once partition is done, the pivot is in the exact place it will be when
// the array is put in sorted order, and it will not need to be moved
// again. This runs in O(n) time.
// Always choose a random pivot so that an input array which is reverse
// sorted does not cause O(n^2) running time.
var pivotIndex=randomIntInRange(p,r);var i=p-1;swap(ary,pivotIndex,r);var pivot=ary[r];// Immediately after `j` is incremented in this loop, the following hold
// true:
//
//   * Every element in `ary[p .. i]` is less than or equal to the pivot.
//
//   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
for(var j=p;j<r;j++){if(comparator(ary[j],pivot)<=0){i+=1;swap(ary,i,j);}}swap(ary,i+1,j);var q=i+1;// (2) Recurse on each half.
doQuickSort(ary,comparator,p,q-1);doQuickSort(ary,comparator,q+1,r);}}/**
	 * Sort the given array in-place with the given comparator function.
	 *
	 * @param {Array} ary
	 *        An array to sort.
	 * @param {function} comparator
	 *        Function to use to compare two items.
	 */quickSort.quickSort=function(ary,comparator){doQuickSort(ary,comparator,0,ary.length-1);};return quickSort;}/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredSourceMapConsumer;function requireSourceMapConsumer(){if(hasRequiredSourceMapConsumer)return sourceMapConsumer;hasRequiredSourceMapConsumer=1;/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */var util=requireUtil$1();var binarySearch=requireBinarySearch();var ArraySet=requireArraySet().ArraySet;var base64VLQ=requireBase64Vlq();var quickSort=requireQuickSort().quickSort;function SourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;if(typeof aSourceMap==='string'){sourceMap=util.parseSourceMapInput(aSourceMap);}return sourceMap.sections!=null?new IndexedSourceMapConsumer(sourceMap,aSourceMapURL):new BasicSourceMapConsumer(sourceMap,aSourceMapURL);}SourceMapConsumer.fromSourceMap=function(aSourceMap,aSourceMapURL){return BasicSourceMapConsumer.fromSourceMap(aSourceMap,aSourceMapURL);};/**
	 * The version of the source mapping spec that we are consuming.
	 */SourceMapConsumer.prototype._version=3;// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.
SourceMapConsumer.prototype.__generatedMappings=null;Object.defineProperty(SourceMapConsumer.prototype,'_generatedMappings',{configurable:true,enumerable:true,get:function(){if(!this.__generatedMappings){this._parseMappings(this._mappings,this.sourceRoot);}return this.__generatedMappings;}});SourceMapConsumer.prototype.__originalMappings=null;Object.defineProperty(SourceMapConsumer.prototype,'_originalMappings',{configurable:true,enumerable:true,get:function(){if(!this.__originalMappings){this._parseMappings(this._mappings,this.sourceRoot);}return this.__originalMappings;}});SourceMapConsumer.prototype._charIsMappingSeparator=function SourceMapConsumer_charIsMappingSeparator(aStr,index){var c=aStr.charAt(index);return c===";"||c===",";};/**
	 * Parse the mappings in a string in to a data structure which we can easily
	 * query (the ordered arrays in the `this.__generatedMappings` and
	 * `this.__originalMappings` properties).
	 */SourceMapConsumer.prototype._parseMappings=function SourceMapConsumer_parseMappings(aStr,aSourceRoot){throw new Error("Subclasses must implement _parseMappings");};SourceMapConsumer.GENERATED_ORDER=1;SourceMapConsumer.ORIGINAL_ORDER=2;SourceMapConsumer.GREATEST_LOWER_BOUND=1;SourceMapConsumer.LEAST_UPPER_BOUND=2;/**
	 * Iterate over each mapping between an original source/line/column and a
	 * generated line/column in this source map.
	 *
	 * @param Function aCallback
	 *        The function that is called with each mapping.
	 * @param Object aContext
	 *        Optional. If specified, this object will be the value of `this` every
	 *        time that `aCallback` is called.
	 * @param aOrder
	 *        Either `SourceMapConsumer.GENERATED_ORDER` or
	 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
	 *        iterate over the mappings sorted by the generated file's line/column
	 *        order or the original's source/line/column order, respectively. Defaults to
	 *        `SourceMapConsumer.GENERATED_ORDER`.
	 */SourceMapConsumer.prototype.eachMapping=function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){var context=aContext||null;var order=aOrder||SourceMapConsumer.GENERATED_ORDER;var mappings;switch(order){case SourceMapConsumer.GENERATED_ORDER:mappings=this._generatedMappings;break;case SourceMapConsumer.ORIGINAL_ORDER:mappings=this._originalMappings;break;default:throw new Error("Unknown order of iteration.");}var sourceRoot=this.sourceRoot;mappings.map(function(mapping){var source=mapping.source===null?null:this._sources.at(mapping.source);source=util.computeSourceURL(sourceRoot,source,this._sourceMapURL);return{source:source,generatedLine:mapping.generatedLine,generatedColumn:mapping.generatedColumn,originalLine:mapping.originalLine,originalColumn:mapping.originalColumn,name:mapping.name===null?null:this._names.at(mapping.name)};},this).forEach(aCallback,context);};/**
	 * Returns all generated line and column information for the original source,
	 * line, and column provided. If no column is provided, returns all mappings
	 * corresponding to a either the line we are searching for or the next
	 * closest line that has any mappings. Otherwise, returns all mappings
	 * corresponding to the given line and either the column we are searching for
	 * or the next closest column that has any offsets.
	 *
	 * The only argument is an object with the following properties:
	 *
	 *   - source: The filename of the original source.
	 *   - line: The line number in the original source.  The line number is 1-based.
	 *   - column: Optional. the column number in the original source.
	 *    The column number is 0-based.
	 *
	 * and an array of objects is returned, each with the following properties:
	 *
	 *   - line: The line number in the generated source, or null.  The
	 *    line number is 1-based.
	 *   - column: The column number in the generated source, or null.
	 *    The column number is 0-based.
	 */SourceMapConsumer.prototype.allGeneratedPositionsFor=function SourceMapConsumer_allGeneratedPositionsFor(aArgs){var line=util.getArg(aArgs,'line');// When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
// returns the index of the closest mapping less than the needle. By
// setting needle.originalColumn to 0, we thus find the last mapping for
// the given line, provided such a mapping exists.
var needle={source:util.getArg(aArgs,'source'),originalLine:line,originalColumn:util.getArg(aArgs,'column',0)};needle.source=this._findSourceIndex(needle.source);if(needle.source<0){return[];}var mappings=[];var index=this._findMapping(needle,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,binarySearch.LEAST_UPPER_BOUND);if(index>=0){var mapping=this._originalMappings[index];if(aArgs.column===undefined){var originalLine=mapping.originalLine;// Iterate until either we run out of mappings, or we run into
// a mapping for a different line than the one we found. Since
// mappings are sorted, this is guaranteed to find all mappings for
// the line we found.
while(mapping&&mapping.originalLine===originalLine){mappings.push({line:util.getArg(mapping,'generatedLine',null),column:util.getArg(mapping,'generatedColumn',null),lastColumn:util.getArg(mapping,'lastGeneratedColumn',null)});mapping=this._originalMappings[++index];}}else{var originalColumn=mapping.originalColumn;// Iterate until either we run out of mappings, or we run into
// a mapping for a different line than the one we were searching for.
// Since mappings are sorted, this is guaranteed to find all mappings for
// the line we are searching for.
while(mapping&&mapping.originalLine===line&&mapping.originalColumn==originalColumn){mappings.push({line:util.getArg(mapping,'generatedLine',null),column:util.getArg(mapping,'generatedColumn',null),lastColumn:util.getArg(mapping,'lastGeneratedColumn',null)});mapping=this._originalMappings[++index];}}}return mappings;};sourceMapConsumer.SourceMapConsumer=SourceMapConsumer;/**
	 * A BasicSourceMapConsumer instance represents a parsed source map which we can
	 * query for information about the original file positions by giving it a file
	 * position in the generated source.
	 *
	 * The first parameter is the raw source map (either as a JSON string, or
	 * already parsed to an object). According to the spec, source maps have the
	 * following attributes:
	 *
	 *   - version: Which version of the source map spec this map is following.
	 *   - sources: An array of URLs to the original source files.
	 *   - names: An array of identifiers which can be referrenced by individual mappings.
	 *   - sourceRoot: Optional. The URL root from which all sources are relative.
	 *   - sourcesContent: Optional. An array of contents of the original source files.
	 *   - mappings: A string of base64 VLQs which contain the actual mappings.
	 *   - file: Optional. The generated file this source map is associated with.
	 *
	 * Here is an example source map, taken from the source map spec[0]:
	 *
	 *     {
	 *       version : 3,
	 *       file: "out.js",
	 *       sourceRoot : "",
	 *       sources: ["foo.js", "bar.js"],
	 *       names: ["src", "maps", "are", "fun"],
	 *       mappings: "AA,AB;;ABCDE;"
	 *     }
	 *
	 * The second parameter, if given, is a string whose value is the URL
	 * at which the source map was found.  This URL is used to compute the
	 * sources array.
	 *
	 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
	 */function BasicSourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;if(typeof aSourceMap==='string'){sourceMap=util.parseSourceMapInput(aSourceMap);}var version=util.getArg(sourceMap,'version');var sources=util.getArg(sourceMap,'sources');// Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
// requires the array) to play nice here.
var names=util.getArg(sourceMap,'names',[]);var sourceRoot=util.getArg(sourceMap,'sourceRoot',null);var sourcesContent=util.getArg(sourceMap,'sourcesContent',null);var mappings=util.getArg(sourceMap,'mappings');var file=util.getArg(sourceMap,'file',null);// Once again, Sass deviates from the spec and supplies the version as a
// string rather than a number, so we use loose equality checking here.
if(version!=this._version){throw new Error('Unsupported version: '+version);}if(sourceRoot){sourceRoot=util.normalize(sourceRoot);}sources=sources.map(String)// Some source maps produce relative source paths like "./foo.js" instead of
// "foo.js".  Normalize these first so that future comparisons will succeed.
// See bugzil.la/1090768.
.map(util.normalize)// Always ensure that absolute sources are internally stored relative to
// the source root, if the source root is absolute. Not doing this would
// be particularly problematic when the source root is a prefix of the
// source (valid, but why??). See github issue #199 and bugzil.la/1188982.
.map(function(source){return sourceRoot&&util.isAbsolute(sourceRoot)&&util.isAbsolute(source)?util.relative(sourceRoot,source):source;});// Pass `true` below to allow duplicate names and sources. While source maps
// are intended to be compressed and deduplicated, the TypeScript compiler
// sometimes generates source maps with duplicates in them. See Github issue
// #72 and bugzil.la/889492.
this._names=ArraySet.fromArray(names.map(String),true);this._sources=ArraySet.fromArray(sources,true);this._absoluteSources=this._sources.toArray().map(function(s){return util.computeSourceURL(sourceRoot,s,aSourceMapURL);});this.sourceRoot=sourceRoot;this.sourcesContent=sourcesContent;this._mappings=mappings;this._sourceMapURL=aSourceMapURL;this.file=file;}BasicSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype);BasicSourceMapConsumer.prototype.consumer=SourceMapConsumer;/**
	 * Utility function to find the index of a source.  Returns -1 if not
	 * found.
	 */BasicSourceMapConsumer.prototype._findSourceIndex=function(aSource){var relativeSource=aSource;if(this.sourceRoot!=null){relativeSource=util.relative(this.sourceRoot,relativeSource);}if(this._sources.has(relativeSource)){return this._sources.indexOf(relativeSource);}// Maybe aSource is an absolute URL as returned by |sources|.  In
// this case we can't simply undo the transform.
var i;for(i=0;i<this._absoluteSources.length;++i){if(this._absoluteSources[i]==aSource){return i;}}return-1;};/**
	 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
	 *
	 * @param SourceMapGenerator aSourceMap
	 *        The source map that will be consumed.
	 * @param String aSourceMapURL
	 *        The URL at which the source map can be found (optional)
	 * @returns BasicSourceMapConsumer
	 */BasicSourceMapConsumer.fromSourceMap=function SourceMapConsumer_fromSourceMap(aSourceMap,aSourceMapURL){var smc=Object.create(BasicSourceMapConsumer.prototype);var names=smc._names=ArraySet.fromArray(aSourceMap._names.toArray(),true);var sources=smc._sources=ArraySet.fromArray(aSourceMap._sources.toArray(),true);smc.sourceRoot=aSourceMap._sourceRoot;smc.sourcesContent=aSourceMap._generateSourcesContent(smc._sources.toArray(),smc.sourceRoot);smc.file=aSourceMap._file;smc._sourceMapURL=aSourceMapURL;smc._absoluteSources=smc._sources.toArray().map(function(s){return util.computeSourceURL(smc.sourceRoot,s,aSourceMapURL);});// Because we are modifying the entries (by converting string sources and
// names to indices into the sources and names ArraySets), we have to make
// a copy of the entry or else bad things happen. Shared mutable state
// strikes again! See github issue #191.
var generatedMappings=aSourceMap._mappings.toArray().slice();var destGeneratedMappings=smc.__generatedMappings=[];var destOriginalMappings=smc.__originalMappings=[];for(var i=0,length=generatedMappings.length;i<length;i++){var srcMapping=generatedMappings[i];var destMapping=new Mapping();destMapping.generatedLine=srcMapping.generatedLine;destMapping.generatedColumn=srcMapping.generatedColumn;if(srcMapping.source){destMapping.source=sources.indexOf(srcMapping.source);destMapping.originalLine=srcMapping.originalLine;destMapping.originalColumn=srcMapping.originalColumn;if(srcMapping.name){destMapping.name=names.indexOf(srcMapping.name);}destOriginalMappings.push(destMapping);}destGeneratedMappings.push(destMapping);}quickSort(smc.__originalMappings,util.compareByOriginalPositions);return smc;};/**
	 * The version of the source mapping spec that we are consuming.
	 */BasicSourceMapConsumer.prototype._version=3;/**
	 * The list of original sources.
	 */Object.defineProperty(BasicSourceMapConsumer.prototype,'sources',{get:function(){return this._absoluteSources.slice();}});/**
	 * Provide the JIT with a nice shape / hidden class.
	 */function Mapping(){this.generatedLine=0;this.generatedColumn=0;this.source=null;this.originalLine=null;this.originalColumn=null;this.name=null;}/**
	 * Parse the mappings in a string in to a data structure which we can easily
	 * query (the ordered arrays in the `this.__generatedMappings` and
	 * `this.__originalMappings` properties).
	 */BasicSourceMapConsumer.prototype._parseMappings=function SourceMapConsumer_parseMappings(aStr,aSourceRoot){var generatedLine=1;var previousGeneratedColumn=0;var previousOriginalLine=0;var previousOriginalColumn=0;var previousSource=0;var previousName=0;var length=aStr.length;var index=0;var cachedSegments={};var temp={};var originalMappings=[];var generatedMappings=[];var mapping,str,segment,end,value;while(index<length){if(aStr.charAt(index)===';'){generatedLine++;index++;previousGeneratedColumn=0;}else if(aStr.charAt(index)===','){index++;}else{mapping=new Mapping();mapping.generatedLine=generatedLine;// Because each offset is encoded relative to the previous one,
// many segments often have the same encoding. We can exploit this
// fact by caching the parsed variable length fields of each segment,
// allowing us to avoid a second parse if we encounter the same
// segment again.
for(end=index;end<length;end++){if(this._charIsMappingSeparator(aStr,end)){break;}}str=aStr.slice(index,end);segment=cachedSegments[str];if(segment){index+=str.length;}else{segment=[];while(index<end){base64VLQ.decode(aStr,index,temp);value=temp.value;index=temp.rest;segment.push(value);}if(segment.length===2){throw new Error('Found a source, but no line and column');}if(segment.length===3){throw new Error('Found a source and line, but no column');}cachedSegments[str]=segment;}// Generated column.
mapping.generatedColumn=previousGeneratedColumn+segment[0];previousGeneratedColumn=mapping.generatedColumn;if(segment.length>1){// Original source.
mapping.source=previousSource+segment[1];previousSource+=segment[1];// Original line.
mapping.originalLine=previousOriginalLine+segment[2];previousOriginalLine=mapping.originalLine;// Lines are stored 0-based
mapping.originalLine+=1;// Original column.
mapping.originalColumn=previousOriginalColumn+segment[3];previousOriginalColumn=mapping.originalColumn;if(segment.length>4){// Original name.
mapping.name=previousName+segment[4];previousName+=segment[4];}}generatedMappings.push(mapping);if(typeof mapping.originalLine==='number'){originalMappings.push(mapping);}}}quickSort(generatedMappings,util.compareByGeneratedPositionsDeflated);this.__generatedMappings=generatedMappings;quickSort(originalMappings,util.compareByOriginalPositions);this.__originalMappings=originalMappings;};/**
	 * Find the mapping that best matches the hypothetical "needle" mapping that
	 * we are searching for in the given "haystack" of mappings.
	 */BasicSourceMapConsumer.prototype._findMapping=function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,aColumnName,aComparator,aBias){// To return the position we are searching for, we must first find the
// mapping for the given position and then return the opposite position it
// points to. Because the mappings are sorted, we can use binary search to
// find the best mapping.
if(aNeedle[aLineName]<=0){throw new TypeError('Line must be greater than or equal to 1, got '+aNeedle[aLineName]);}if(aNeedle[aColumnName]<0){throw new TypeError('Column must be greater than or equal to 0, got '+aNeedle[aColumnName]);}return binarySearch.search(aNeedle,aMappings,aComparator,aBias);};/**
	 * Compute the last column for each generated mapping. The last column is
	 * inclusive.
	 */BasicSourceMapConsumer.prototype.computeColumnSpans=function SourceMapConsumer_computeColumnSpans(){for(var index=0;index<this._generatedMappings.length;++index){var mapping=this._generatedMappings[index];// Mappings do not contain a field for the last generated columnt. We
// can come up with an optimistic estimate, however, by assuming that
// mappings are contiguous (i.e. given two consecutive mappings, the
// first mapping ends where the second one starts).
if(index+1<this._generatedMappings.length){var nextMapping=this._generatedMappings[index+1];if(mapping.generatedLine===nextMapping.generatedLine){mapping.lastGeneratedColumn=nextMapping.generatedColumn-1;continue;}}// The last mapping for each line spans the entire line.
mapping.lastGeneratedColumn=Infinity;}};/**
	 * Returns the original source, line, and column information for the generated
	 * source's line and column positions provided. The only argument is an object
	 * with the following properties:
	 *
	 *   - line: The line number in the generated source.  The line number
	 *     is 1-based.
	 *   - column: The column number in the generated source.  The column
	 *     number is 0-based.
	 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
	 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
	 *     closest element that is smaller than or greater than the one we are
	 *     searching for, respectively, if the exact element cannot be found.
	 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
	 *
	 * and an object is returned with the following properties:
	 *
	 *   - source: The original source file, or null.
	 *   - line: The line number in the original source, or null.  The
	 *     line number is 1-based.
	 *   - column: The column number in the original source, or null.  The
	 *     column number is 0-based.
	 *   - name: The original identifier, or null.
	 */BasicSourceMapConsumer.prototype.originalPositionFor=function SourceMapConsumer_originalPositionFor(aArgs){var needle={generatedLine:util.getArg(aArgs,'line'),generatedColumn:util.getArg(aArgs,'column')};var index=this._findMapping(needle,this._generatedMappings,"generatedLine","generatedColumn",util.compareByGeneratedPositionsDeflated,util.getArg(aArgs,'bias',SourceMapConsumer.GREATEST_LOWER_BOUND));if(index>=0){var mapping=this._generatedMappings[index];if(mapping.generatedLine===needle.generatedLine){var source=util.getArg(mapping,'source',null);if(source!==null){source=this._sources.at(source);source=util.computeSourceURL(this.sourceRoot,source,this._sourceMapURL);}var name=util.getArg(mapping,'name',null);if(name!==null){name=this._names.at(name);}return{source:source,line:util.getArg(mapping,'originalLine',null),column:util.getArg(mapping,'originalColumn',null),name:name};}}return{source:null,line:null,column:null,name:null};};/**
	 * Return true if we have the source content for every source in the source
	 * map, false otherwise.
	 */BasicSourceMapConsumer.prototype.hasContentsOfAllSources=function BasicSourceMapConsumer_hasContentsOfAllSources(){if(!this.sourcesContent){return false;}return this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some(function(sc){return sc==null;});};/**
	 * Returns the original source content. The only argument is the url of the
	 * original source file. Returns null if no original source content is
	 * available.
	 */BasicSourceMapConsumer.prototype.sourceContentFor=function SourceMapConsumer_sourceContentFor(aSource,nullOnMissing){if(!this.sourcesContent){return null;}var index=this._findSourceIndex(aSource);if(index>=0){return this.sourcesContent[index];}var relativeSource=aSource;if(this.sourceRoot!=null){relativeSource=util.relative(this.sourceRoot,relativeSource);}var url;if(this.sourceRoot!=null&&(url=util.urlParse(this.sourceRoot))){// XXX: file:// URIs and absolute paths lead to unexpected behavior for
// many users. We can help them out when they expect file:// URIs to
// behave like it would if they were running a local HTTP server. See
// https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
var fileUriAbsPath=relativeSource.replace(/^file:\/\//,"");if(url.scheme=="file"&&this._sources.has(fileUriAbsPath)){return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}if((!url.path||url.path=="/")&&this._sources.has("/"+relativeSource)){return this.sourcesContent[this._sources.indexOf("/"+relativeSource)];}}// This function is used recursively from
// IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
// don't want to throw if we can't find the source - we just want to
// return null, so we provide a flag to exit gracefully.
if(nullOnMissing){return null;}else{throw new Error('"'+relativeSource+'" is not in the SourceMap.');}};/**
	 * Returns the generated line and column information for the original source,
	 * line, and column positions provided. The only argument is an object with
	 * the following properties:
	 *
	 *   - source: The filename of the original source.
	 *   - line: The line number in the original source.  The line number
	 *     is 1-based.
	 *   - column: The column number in the original source.  The column
	 *     number is 0-based.
	 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
	 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
	 *     closest element that is smaller than or greater than the one we are
	 *     searching for, respectively, if the exact element cannot be found.
	 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
	 *
	 * and an object is returned with the following properties:
	 *
	 *   - line: The line number in the generated source, or null.  The
	 *     line number is 1-based.
	 *   - column: The column number in the generated source, or null.
	 *     The column number is 0-based.
	 */BasicSourceMapConsumer.prototype.generatedPositionFor=function SourceMapConsumer_generatedPositionFor(aArgs){var source=util.getArg(aArgs,'source');source=this._findSourceIndex(source);if(source<0){return{line:null,column:null,lastColumn:null};}var needle={source:source,originalLine:util.getArg(aArgs,'line'),originalColumn:util.getArg(aArgs,'column')};var index=this._findMapping(needle,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,util.getArg(aArgs,'bias',SourceMapConsumer.GREATEST_LOWER_BOUND));if(index>=0){var mapping=this._originalMappings[index];if(mapping.source===needle.source){return{line:util.getArg(mapping,'generatedLine',null),column:util.getArg(mapping,'generatedColumn',null),lastColumn:util.getArg(mapping,'lastGeneratedColumn',null)};}}return{line:null,column:null,lastColumn:null};};sourceMapConsumer.BasicSourceMapConsumer=BasicSourceMapConsumer;/**
	 * An IndexedSourceMapConsumer instance represents a parsed source map which
	 * we can query for information. It differs from BasicSourceMapConsumer in
	 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
	 * input.
	 *
	 * The first parameter is a raw source map (either as a JSON string, or already
	 * parsed to an object). According to the spec for indexed source maps, they
	 * have the following attributes:
	 *
	 *   - version: Which version of the source map spec this map is following.
	 *   - file: Optional. The generated file this source map is associated with.
	 *   - sections: A list of section definitions.
	 *
	 * Each value under the "sections" field has two fields:
	 *   - offset: The offset into the original specified at which this section
	 *       begins to apply, defined as an object with a "line" and "column"
	 *       field.
	 *   - map: A source map definition. This source map could also be indexed,
	 *       but doesn't have to be.
	 *
	 * Instead of the "map" field, it's also possible to have a "url" field
	 * specifying a URL to retrieve a source map from, but that's currently
	 * unsupported.
	 *
	 * Here's an example source map, taken from the source map spec[0], but
	 * modified to omit a section which uses the "url" field.
	 *
	 *  {
	 *    version : 3,
	 *    file: "app.js",
	 *    sections: [{
	 *      offset: {line:100, column:10},
	 *      map: {
	 *        version : 3,
	 *        file: "section.js",
	 *        sources: ["foo.js", "bar.js"],
	 *        names: ["src", "maps", "are", "fun"],
	 *        mappings: "AAAA,E;;ABCDE;"
	 *      }
	 *    }],
	 *  }
	 *
	 * The second parameter, if given, is a string whose value is the URL
	 * at which the source map was found.  This URL is used to compute the
	 * sources array.
	 *
	 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
	 */function IndexedSourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;if(typeof aSourceMap==='string'){sourceMap=util.parseSourceMapInput(aSourceMap);}var version=util.getArg(sourceMap,'version');var sections=util.getArg(sourceMap,'sections');if(version!=this._version){throw new Error('Unsupported version: '+version);}this._sources=new ArraySet();this._names=new ArraySet();var lastOffset={line:-1,column:0};this._sections=sections.map(function(s){if(s.url){// The url field will require support for asynchronicity.
// See https://github.com/mozilla/source-map/issues/16
throw new Error('Support for url field in sections not implemented.');}var offset=util.getArg(s,'offset');var offsetLine=util.getArg(offset,'line');var offsetColumn=util.getArg(offset,'column');if(offsetLine<lastOffset.line||offsetLine===lastOffset.line&&offsetColumn<lastOffset.column){throw new Error('Section offsets must be ordered and non-overlapping.');}lastOffset=offset;return{generatedOffset:{// The offset fields are 0-based, but we use 1-based indices when
// encoding/decoding from VLQ.
generatedLine:offsetLine+1,generatedColumn:offsetColumn+1},consumer:new SourceMapConsumer(util.getArg(s,'map'),aSourceMapURL)};});}IndexedSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype);IndexedSourceMapConsumer.prototype.constructor=SourceMapConsumer;/**
	 * The version of the source mapping spec that we are consuming.
	 */IndexedSourceMapConsumer.prototype._version=3;/**
	 * The list of original sources.
	 */Object.defineProperty(IndexedSourceMapConsumer.prototype,'sources',{get:function(){var sources=[];for(var i=0;i<this._sections.length;i++){for(var j=0;j<this._sections[i].consumer.sources.length;j++){sources.push(this._sections[i].consumer.sources[j]);}}return sources;}});/**
	 * Returns the original source, line, and column information for the generated
	 * source's line and column positions provided. The only argument is an object
	 * with the following properties:
	 *
	 *   - line: The line number in the generated source.  The line number
	 *     is 1-based.
	 *   - column: The column number in the generated source.  The column
	 *     number is 0-based.
	 *
	 * and an object is returned with the following properties:
	 *
	 *   - source: The original source file, or null.
	 *   - line: The line number in the original source, or null.  The
	 *     line number is 1-based.
	 *   - column: The column number in the original source, or null.  The
	 *     column number is 0-based.
	 *   - name: The original identifier, or null.
	 */IndexedSourceMapConsumer.prototype.originalPositionFor=function IndexedSourceMapConsumer_originalPositionFor(aArgs){var needle={generatedLine:util.getArg(aArgs,'line'),generatedColumn:util.getArg(aArgs,'column')};// Find the section containing the generated position we're trying to map
// to an original position.
var sectionIndex=binarySearch.search(needle,this._sections,function(needle,section){var cmp=needle.generatedLine-section.generatedOffset.generatedLine;if(cmp){return cmp;}return needle.generatedColumn-section.generatedOffset.generatedColumn;});var section=this._sections[sectionIndex];if(!section){return{source:null,line:null,column:null,name:null};}return section.consumer.originalPositionFor({line:needle.generatedLine-(section.generatedOffset.generatedLine-1),column:needle.generatedColumn-(section.generatedOffset.generatedLine===needle.generatedLine?section.generatedOffset.generatedColumn-1:0),bias:aArgs.bias});};/**
	 * Return true if we have the source content for every source in the source
	 * map, false otherwise.
	 */IndexedSourceMapConsumer.prototype.hasContentsOfAllSources=function IndexedSourceMapConsumer_hasContentsOfAllSources(){return this._sections.every(function(s){return s.consumer.hasContentsOfAllSources();});};/**
	 * Returns the original source content. The only argument is the url of the
	 * original source file. Returns null if no original source content is
	 * available.
	 */IndexedSourceMapConsumer.prototype.sourceContentFor=function IndexedSourceMapConsumer_sourceContentFor(aSource,nullOnMissing){for(var i=0;i<this._sections.length;i++){var section=this._sections[i];var content=section.consumer.sourceContentFor(aSource,true);if(content){return content;}}if(nullOnMissing){return null;}else{throw new Error('"'+aSource+'" is not in the SourceMap.');}};/**
	 * Returns the generated line and column information for the original source,
	 * line, and column positions provided. The only argument is an object with
	 * the following properties:
	 *
	 *   - source: The filename of the original source.
	 *   - line: The line number in the original source.  The line number
	 *     is 1-based.
	 *   - column: The column number in the original source.  The column
	 *     number is 0-based.
	 *
	 * and an object is returned with the following properties:
	 *
	 *   - line: The line number in the generated source, or null.  The
	 *     line number is 1-based. 
	 *   - column: The column number in the generated source, or null.
	 *     The column number is 0-based.
	 */IndexedSourceMapConsumer.prototype.generatedPositionFor=function IndexedSourceMapConsumer_generatedPositionFor(aArgs){for(var i=0;i<this._sections.length;i++){var section=this._sections[i];// Only consider this section if the requested source is in the list of
// sources of the consumer.
if(section.consumer._findSourceIndex(util.getArg(aArgs,'source'))===-1){continue;}var generatedPosition=section.consumer.generatedPositionFor(aArgs);if(generatedPosition){var ret={line:generatedPosition.line+(section.generatedOffset.generatedLine-1),column:generatedPosition.column+(section.generatedOffset.generatedLine===generatedPosition.line?section.generatedOffset.generatedColumn-1:0)};return ret;}}return{line:null,column:null};};/**
	 * Parse the mappings in a string in to a data structure which we can easily
	 * query (the ordered arrays in the `this.__generatedMappings` and
	 * `this.__originalMappings` properties).
	 */IndexedSourceMapConsumer.prototype._parseMappings=function IndexedSourceMapConsumer_parseMappings(aStr,aSourceRoot){this.__generatedMappings=[];this.__originalMappings=[];for(var i=0;i<this._sections.length;i++){var section=this._sections[i];var sectionMappings=section.consumer._generatedMappings;for(var j=0;j<sectionMappings.length;j++){var mapping=sectionMappings[j];var source=section.consumer._sources.at(mapping.source);source=util.computeSourceURL(section.consumer.sourceRoot,source,this._sourceMapURL);this._sources.add(source);source=this._sources.indexOf(source);var name=null;if(mapping.name){name=section.consumer._names.at(mapping.name);this._names.add(name);name=this._names.indexOf(name);}// The mappings coming from the consumer for the section have
// generated positions relative to the start of the section, so we
// need to offset them to be relative to the start of the concatenated
// generated file.
var adjustedMapping={source:source,generatedLine:mapping.generatedLine+(section.generatedOffset.generatedLine-1),generatedColumn:mapping.generatedColumn+(section.generatedOffset.generatedLine===mapping.generatedLine?section.generatedOffset.generatedColumn-1:0),originalLine:mapping.originalLine,originalColumn:mapping.originalColumn,name:name};this.__generatedMappings.push(adjustedMapping);if(typeof adjustedMapping.originalLine==='number'){this.__originalMappings.push(adjustedMapping);}}}quickSort(this.__generatedMappings,util.compareByGeneratedPositionsDeflated);quickSort(this.__originalMappings,util.compareByOriginalPositions);};sourceMapConsumer.IndexedSourceMapConsumer=IndexedSourceMapConsumer;return sourceMapConsumer;}var sourceNode={};/* -*- Mode: js; js-indent-level: 2; -*- */var hasRequiredSourceNode;function requireSourceNode(){if(hasRequiredSourceNode)return sourceNode;hasRequiredSourceNode=1;/*
	 * Copyright 2011 Mozilla Foundation and contributors
	 * Licensed under the New BSD license. See LICENSE or:
	 * http://opensource.org/licenses/BSD-3-Clause
	 */var SourceMapGenerator=requireSourceMapGenerator().SourceMapGenerator;var util=requireUtil$1();// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE=/(\r?\n)/;// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE=10;// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode="$$$isSourceNode$$$";/**
	 * SourceNodes provide a way to abstract over interpolating/concatenating
	 * snippets of generated JavaScript source code while maintaining the line and
	 * column information associated with the original source code.
	 *
	 * @param aLine The original line number.
	 * @param aColumn The original column number.
	 * @param aSource The original source's filename.
	 * @param aChunks Optional. An array of strings which are snippets of
	 *        generated JS, or other SourceNodes.
	 * @param aName The original identifier.
	 */function SourceNode(aLine,aColumn,aSource,aChunks,aName){this.children=[];this.sourceContents={};this.line=aLine==null?null:aLine;this.column=aColumn==null?null:aColumn;this.source=aSource==null?null:aSource;this.name=aName==null?null:aName;this[isSourceNode]=true;if(aChunks!=null)this.add(aChunks);}/**
	 * Creates a SourceNode from generated code and a SourceMapConsumer.
	 *
	 * @param aGeneratedCode The generated code
	 * @param aSourceMapConsumer The SourceMap for the generated code
	 * @param aRelativePath Optional. The path that relative sources in the
	 *        SourceMapConsumer should be relative to.
	 */SourceNode.fromStringWithSourceMap=function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer,aRelativePath){// The SourceNode we want to fill with the generated code
// and the SourceMap
var node=new SourceNode();// All even indices of this array are one line of the generated code,
// while all odd indices are the newlines between two adjacent lines
// (since `REGEX_NEWLINE` captures its match).
// Processed fragments are accessed by calling `shiftNextLine`.
var remainingLines=aGeneratedCode.split(REGEX_NEWLINE);var remainingLinesIndex=0;var shiftNextLine=function(){var lineContents=getNextLine();// The last line of a file might not have a newline.
var newLine=getNextLine()||"";return lineContents+newLine;function getNextLine(){return remainingLinesIndex<remainingLines.length?remainingLines[remainingLinesIndex++]:undefined;}};// We need to remember the position of "remainingLines"
var lastGeneratedLine=1,lastGeneratedColumn=0;// The generate SourceNodes we need a code range.
// To extract it current and last mapping is used.
// Here we store the last mapping.
var lastMapping=null;aSourceMapConsumer.eachMapping(function(mapping){if(lastMapping!==null){// We add the code from "lastMapping" to "mapping":
// First check if there is a new line in between.
if(lastGeneratedLine<mapping.generatedLine){// Associate first line with "lastMapping"
addMappingWithCode(lastMapping,shiftNextLine());lastGeneratedLine++;lastGeneratedColumn=0;// The remaining code is added without mapping
}else{// There is no new line in between.
// Associate the code between "lastGeneratedColumn" and
// "mapping.generatedColumn" with "lastMapping"
var nextLine=remainingLines[remainingLinesIndex]||'';var code=nextLine.substr(0,mapping.generatedColumn-lastGeneratedColumn);remainingLines[remainingLinesIndex]=nextLine.substr(mapping.generatedColumn-lastGeneratedColumn);lastGeneratedColumn=mapping.generatedColumn;addMappingWithCode(lastMapping,code);// No more remaining code, continue
lastMapping=mapping;return;}}// We add the generated code until the first mapping
// to the SourceNode without any mapping.
// Each line is added as separate string.
while(lastGeneratedLine<mapping.generatedLine){node.add(shiftNextLine());lastGeneratedLine++;}if(lastGeneratedColumn<mapping.generatedColumn){var nextLine=remainingLines[remainingLinesIndex]||'';node.add(nextLine.substr(0,mapping.generatedColumn));remainingLines[remainingLinesIndex]=nextLine.substr(mapping.generatedColumn);lastGeneratedColumn=mapping.generatedColumn;}lastMapping=mapping;},this);// We have processed all mappings.
if(remainingLinesIndex<remainingLines.length){if(lastMapping){// Associate the remaining code in the current line with "lastMapping"
addMappingWithCode(lastMapping,shiftNextLine());}// and add the remaining lines without any mapping
node.add(remainingLines.splice(remainingLinesIndex).join(""));}// Copy sourcesContent into SourceNode
aSourceMapConsumer.sources.forEach(function(sourceFile){var content=aSourceMapConsumer.sourceContentFor(sourceFile);if(content!=null){if(aRelativePath!=null){sourceFile=util.join(aRelativePath,sourceFile);}node.setSourceContent(sourceFile,content);}});return node;function addMappingWithCode(mapping,code){if(mapping===null||mapping.source===undefined){node.add(code);}else{var source=aRelativePath?util.join(aRelativePath,mapping.source):mapping.source;node.add(new SourceNode(mapping.originalLine,mapping.originalColumn,source,code,mapping.name));}}};/**
	 * Add a chunk of generated JS to this source node.
	 *
	 * @param aChunk A string snippet of generated JS code, another instance of
	 *        SourceNode, or an array where each member is one of those things.
	 */SourceNode.prototype.add=function SourceNode_add(aChunk){if(Array.isArray(aChunk)){aChunk.forEach(function(chunk){this.add(chunk);},this);}else if(aChunk[isSourceNode]||typeof aChunk==="string"){if(aChunk){this.children.push(aChunk);}}else{throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);}return this;};/**
	 * Add a chunk of generated JS to the beginning of this source node.
	 *
	 * @param aChunk A string snippet of generated JS code, another instance of
	 *        SourceNode, or an array where each member is one of those things.
	 */SourceNode.prototype.prepend=function SourceNode_prepend(aChunk){if(Array.isArray(aChunk)){for(var i=aChunk.length-1;i>=0;i--){this.prepend(aChunk[i]);}}else if(aChunk[isSourceNode]||typeof aChunk==="string"){this.children.unshift(aChunk);}else{throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);}return this;};/**
	 * Walk over the tree of JS snippets in this node and its children. The
	 * walking function is called once for each snippet of JS and is passed that
	 * snippet and the its original associated source's line/column location.
	 *
	 * @param aFn The traversal function.
	 */SourceNode.prototype.walk=function SourceNode_walk(aFn){var chunk;for(var i=0,len=this.children.length;i<len;i++){chunk=this.children[i];if(chunk[isSourceNode]){chunk.walk(aFn);}else{if(chunk!==''){aFn(chunk,{source:this.source,line:this.line,column:this.column,name:this.name});}}}};/**
	 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
	 * each of `this.children`.
	 *
	 * @param aSep The separator.
	 */SourceNode.prototype.join=function SourceNode_join(aSep){var newChildren;var i;var len=this.children.length;if(len>0){newChildren=[];for(i=0;i<len-1;i++){newChildren.push(this.children[i]);newChildren.push(aSep);}newChildren.push(this.children[i]);this.children=newChildren;}return this;};/**
	 * Call String.prototype.replace on the very right-most source snippet. Useful
	 * for trimming whitespace from the end of a source node, etc.
	 *
	 * @param aPattern The pattern to replace.
	 * @param aReplacement The thing to replace the pattern with.
	 */SourceNode.prototype.replaceRight=function SourceNode_replaceRight(aPattern,aReplacement){var lastChild=this.children[this.children.length-1];if(lastChild[isSourceNode]){lastChild.replaceRight(aPattern,aReplacement);}else if(typeof lastChild==='string'){this.children[this.children.length-1]=lastChild.replace(aPattern,aReplacement);}else{this.children.push(''.replace(aPattern,aReplacement));}return this;};/**
	 * Set the source content for a source file. This will be added to the SourceMapGenerator
	 * in the sourcesContent field.
	 *
	 * @param aSourceFile The filename of the source file
	 * @param aSourceContent The content of the source file
	 */SourceNode.prototype.setSourceContent=function SourceNode_setSourceContent(aSourceFile,aSourceContent){this.sourceContents[util.toSetString(aSourceFile)]=aSourceContent;};/**
	 * Walk over the tree of SourceNodes. The walking function is called for each
	 * source file content and is passed the filename and source content.
	 *
	 * @param aFn The traversal function.
	 */SourceNode.prototype.walkSourceContents=function SourceNode_walkSourceContents(aFn){for(var i=0,len=this.children.length;i<len;i++){if(this.children[i][isSourceNode]){this.children[i].walkSourceContents(aFn);}}var sources=Object.keys(this.sourceContents);for(var i=0,len=sources.length;i<len;i++){aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);}};/**
	 * Return the string representation of this source node. Walks over the tree
	 * and concatenates all the various snippets together to one string.
	 */SourceNode.prototype.toString=function SourceNode_toString(){var str="";this.walk(function(chunk){str+=chunk;});return str;};/**
	 * Returns the string representation of this source node along with a source
	 * map.
	 */SourceNode.prototype.toStringWithSourceMap=function SourceNode_toStringWithSourceMap(aArgs){var generated={code:"",line:1,column:0};var map=new SourceMapGenerator(aArgs);var sourceMappingActive=false;var lastOriginalSource=null;var lastOriginalLine=null;var lastOriginalColumn=null;var lastOriginalName=null;this.walk(function(chunk,original){generated.code+=chunk;if(original.source!==null&&original.line!==null&&original.column!==null){if(lastOriginalSource!==original.source||lastOriginalLine!==original.line||lastOriginalColumn!==original.column||lastOriginalName!==original.name){map.addMapping({source:original.source,original:{line:original.line,column:original.column},generated:{line:generated.line,column:generated.column},name:original.name});}lastOriginalSource=original.source;lastOriginalLine=original.line;lastOriginalColumn=original.column;lastOriginalName=original.name;sourceMappingActive=true;}else if(sourceMappingActive){map.addMapping({generated:{line:generated.line,column:generated.column}});lastOriginalSource=null;sourceMappingActive=false;}for(var idx=0,length=chunk.length;idx<length;idx++){if(chunk.charCodeAt(idx)===NEWLINE_CODE){generated.line++;generated.column=0;// Mappings end at eol
if(idx+1===length){lastOriginalSource=null;sourceMappingActive=false;}else if(sourceMappingActive){map.addMapping({source:original.source,original:{line:original.line,column:original.column},generated:{line:generated.line,column:generated.column},name:original.name});}}else{generated.column++;}}});this.walkSourceContents(function(sourceFile,sourceContent){map.setSourceContent(sourceFile,sourceContent);});return{code:generated.code,map:map};};sourceNode.SourceNode=SourceNode;return sourceNode;}/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */var hasRequiredSourceMap;function requireSourceMap(){if(hasRequiredSourceMap)return sourceMap;hasRequiredSourceMap=1;sourceMap.SourceMapGenerator=requireSourceMapGenerator().SourceMapGenerator;sourceMap.SourceMapConsumer=requireSourceMapConsumer().SourceMapConsumer;sourceMap.SourceNode=requireSourceNode().SourceNode;return sourceMap;}var hasRequiredUtil;function requireUtil(){if(hasRequiredUtil)return util$1;hasRequiredUtil=1;Object.defineProperty(util$1,"__esModule",{value:true});util$1.isTrailingCommaEnabled=util$1.getParentExportDeclaration=util$1.isExportDeclaration=util$1.fixFaultyLocations=util$1.getTrueLoc=util$1.composeSourceMaps=util$1.copyPos=util$1.comparePos=util$1.getUnionOfKeys=util$1.getOption=util$1.isBrowser=util$1.getLineTerminator=void 0;var tslib_1=require$$0$3;var assert_1=tslib_1.__importDefault(require$$1__default$1.default);var types=tslib_1.__importStar(requireMain$1());var n=types.namedTypes;var source_map_1=tslib_1.__importDefault(requireSourceMap());var SourceMapConsumer=source_map_1.default.SourceMapConsumer;var SourceMapGenerator=source_map_1.default.SourceMapGenerator;var hasOwn=Object.prototype.hasOwnProperty;function getLineTerminator(){return isBrowser()?"\n":require$$0__default$2.default.EOL||"\n";}util$1.getLineTerminator=getLineTerminator;function isBrowser(){return typeof window!=="undefined"&&typeof window.document!=="undefined";}util$1.isBrowser=isBrowser;function getOption(options,key,defaultValue){if(options&&hasOwn.call(options,key)){return options[key];}return defaultValue;}util$1.getOption=getOption;function getUnionOfKeys(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var result={};var argc=args.length;for(var i=0;i<argc;++i){var keys=Object.keys(args[i]);var keyCount=keys.length;for(var j=0;j<keyCount;++j){result[keys[j]]=true;}}return result;}util$1.getUnionOfKeys=getUnionOfKeys;function comparePos(pos1,pos2){return pos1.line-pos2.line||pos1.column-pos2.column;}util$1.comparePos=comparePos;function copyPos(pos){return{line:pos.line,column:pos.column};}util$1.copyPos=copyPos;function composeSourceMaps(formerMap,latterMap){if(formerMap){if(!latterMap){return formerMap;}}else{return latterMap||null;}var smcFormer=new SourceMapConsumer(formerMap);var smcLatter=new SourceMapConsumer(latterMap);var smg=new SourceMapGenerator({file:latterMap.file,sourceRoot:latterMap.sourceRoot});var sourcesToContents={};smcLatter.eachMapping(function(mapping){var origPos=smcFormer.originalPositionFor({line:mapping.originalLine,column:mapping.originalColumn});var sourceName=origPos.source;if(sourceName===null){return;}smg.addMapping({source:sourceName,original:copyPos(origPos),generated:{line:mapping.generatedLine,column:mapping.generatedColumn},name:mapping.name});var sourceContent=smcFormer.sourceContentFor(sourceName);if(sourceContent&&!hasOwn.call(sourcesToContents,sourceName)){sourcesToContents[sourceName]=sourceContent;smg.setSourceContent(sourceName,sourceContent);}});return smg.toJSON();}util$1.composeSourceMaps=composeSourceMaps;function getTrueLoc(node,lines){// It's possible that node is newly-created (not parsed by Esprima),
// in which case it probably won't have a .loc property (or an
// .original property for that matter). That's fine; we'll just
// pretty-print it as usual.
if(!node.loc){return null;}var result={start:node.loc.start,end:node.loc.end};function include(node){expandLoc(result,node.loc);}// If the node is an export declaration and its .declaration has any
// decorators, their locations might contribute to the true start/end
// positions of the export declaration node.
if(node.declaration&&node.declaration.decorators&&isExportDeclaration(node)){node.declaration.decorators.forEach(include);}if(comparePos(result.start,result.end)<0){// Trim leading whitespace.
result.start=copyPos(result.start);lines.skipSpaces(result.start,false,true);if(comparePos(result.start,result.end)<0){// Trim trailing whitespace, if the end location is not already the
// same as the start location.
result.end=copyPos(result.end);lines.skipSpaces(result.end,true,true);}}// If the node has any comments, their locations might contribute to
// the true start/end positions of the node.
if(node.comments){node.comments.forEach(include);}return result;}util$1.getTrueLoc=getTrueLoc;function expandLoc(parentLoc,childLoc){if(parentLoc&&childLoc){if(comparePos(childLoc.start,parentLoc.start)<0){parentLoc.start=childLoc.start;}if(comparePos(parentLoc.end,childLoc.end)<0){parentLoc.end=childLoc.end;}}}function fixFaultyLocations(node,lines){var loc=node.loc;if(loc){if(loc.start.line<1){loc.start.line=1;}if(loc.end.line<1){loc.end.line=1;}}if(node.type==="File"){// Babylon returns File nodes whose .loc.{start,end} do not include
// leading or trailing whitespace.
loc.start=lines.firstPos();loc.end=lines.lastPos();}fixForLoopHead(node,lines);fixTemplateLiteral(node,lines);if(loc&&node.decorators){// Expand the .loc of the node responsible for printing the decorators
// (here, the decorated node) so that it includes node.decorators.
node.decorators.forEach(function(decorator){expandLoc(loc,decorator.loc);});}else if(node.declaration&&isExportDeclaration(node)){// Nullify .loc information for the child declaration so that we never
// try to reprint it without also reprinting the export declaration.
node.declaration.loc=null;// Expand the .loc of the node responsible for printing the decorators
// (here, the export declaration) so that it includes node.decorators.
var decorators=node.declaration.decorators;if(decorators){decorators.forEach(function(decorator){expandLoc(loc,decorator.loc);});}}else if(n.MethodDefinition&&n.MethodDefinition.check(node)||n.Property.check(node)&&(node.method||node.shorthand)){// If the node is a MethodDefinition or a .method or .shorthand
// Property, then the location information stored in
// node.value.loc is very likely untrustworthy (just the {body}
// part of a method, or nothing in the case of shorthand
// properties), so we null out that information to prevent
// accidental reuse of bogus source code during reprinting.
node.value.loc=null;if(n.FunctionExpression.check(node.value)){// FunctionExpression method values should be anonymous,
// because their .id fields are ignored anyway.
node.value.id=null;}}else if(node.type==="ObjectTypeProperty"){var loc_1=node.loc;var end=loc_1&&loc_1.end;if(end){end=copyPos(end);if(lines.prevPos(end)&&lines.charAt(end)===","){// Some parsers accidentally include trailing commas in the
// .loc.end information for ObjectTypeProperty nodes.
if(end=lines.skipSpaces(end,true,true)){loc_1.end=end;}}}}}util$1.fixFaultyLocations=fixFaultyLocations;function fixForLoopHead(node,lines){if(node.type!=="ForStatement"){return;}function fix(child){var loc=child&&child.loc;var start=loc&&loc.start;var end=loc&&copyPos(loc.end);while(start&&end&&comparePos(start,end)<0){lines.prevPos(end);if(lines.charAt(end)===";"){// Update child.loc.end to *exclude* the ';' character.
loc.end.line=end.line;loc.end.column=end.column;}else{break;}}}fix(node.init);fix(node.test);fix(node.update);}function fixTemplateLiteral(node,lines){if(node.type!=="TemplateLiteral"){return;}if(node.quasis.length===0){// If there are no quasi elements, then there is nothing to fix.
return;}// node.loc is not present when using export default with a template literal
if(node.loc){// First we need to exclude the opening ` from the .loc of the first
// quasi element, in case the parser accidentally decided to include it.
var afterLeftBackTickPos=copyPos(node.loc.start);assert_1.default.strictEqual(lines.charAt(afterLeftBackTickPos),"`");assert_1.default.ok(lines.nextPos(afterLeftBackTickPos));var firstQuasi=node.quasis[0];if(comparePos(firstQuasi.loc.start,afterLeftBackTickPos)<0){firstQuasi.loc.start=afterLeftBackTickPos;}// Next we need to exclude the closing ` from the .loc of the last quasi
// element, in case the parser accidentally decided to include it.
var rightBackTickPos=copyPos(node.loc.end);assert_1.default.ok(lines.prevPos(rightBackTickPos));assert_1.default.strictEqual(lines.charAt(rightBackTickPos),"`");var lastQuasi=node.quasis[node.quasis.length-1];if(comparePos(rightBackTickPos,lastQuasi.loc.end)<0){lastQuasi.loc.end=rightBackTickPos;}}// Now we need to exclude ${ and } characters from the .loc's of all
// quasi elements, since some parsers accidentally include them.
node.expressions.forEach(function(expr,i){// Rewind from expr.loc.start over any whitespace and the ${ that
// precedes the expression. The position of the $ should be the same
// as the .loc.end of the preceding quasi element, but some parsers
// accidentally include the ${ in the .loc of the quasi element.
var dollarCurlyPos=lines.skipSpaces(expr.loc.start,true,false);if(lines.prevPos(dollarCurlyPos)&&lines.charAt(dollarCurlyPos)==="{"&&lines.prevPos(dollarCurlyPos)&&lines.charAt(dollarCurlyPos)==="$"){var quasiBefore=node.quasis[i];if(comparePos(dollarCurlyPos,quasiBefore.loc.end)<0){quasiBefore.loc.end=dollarCurlyPos;}}// Likewise, some parsers accidentally include the } that follows
// the expression in the .loc of the following quasi element.
var rightCurlyPos=lines.skipSpaces(expr.loc.end,false,false);if(lines.charAt(rightCurlyPos)==="}"){assert_1.default.ok(lines.nextPos(rightCurlyPos));// Now rightCurlyPos is technically the position just after the }.
var quasiAfter=node.quasis[i+1];if(comparePos(quasiAfter.loc.start,rightCurlyPos)<0){quasiAfter.loc.start=rightCurlyPos;}}});}function isExportDeclaration(node){if(node)switch(node.type){case"ExportDeclaration":case"ExportDefaultDeclaration":case"ExportDefaultSpecifier":case"DeclareExportDeclaration":case"ExportNamedDeclaration":case"ExportAllDeclaration":return true;}return false;}util$1.isExportDeclaration=isExportDeclaration;function getParentExportDeclaration(path){var parentNode=path.getParentNode();if(path.getName()==="declaration"&&isExportDeclaration(parentNode)){return parentNode;}return null;}util$1.getParentExportDeclaration=getParentExportDeclaration;function isTrailingCommaEnabled(options,context){var trailingComma=options.trailingComma;if(typeof trailingComma==="object"){return!!trailingComma[context];}return!!trailingComma;}util$1.isTrailingCommaEnabled=isTrailingCommaEnabled;return util$1;}var esprima$1={};var esprima={exports:{}};var hasRequiredEsprima$1;function requireEsprima$1(){if(hasRequiredEsprima$1)return esprima.exports;hasRequiredEsprima$1=1;(function(module,exports){(function webpackUniversalModuleDefinition(root,factory){/* istanbul ignore next */module.exports=factory();})(loadEnv.commonjsGlobal,function(){return/******/function(modules){// webpackBootstrap
/******/ // The module cache
/******/var installedModules={};/******/ // The require function
/******/function __webpack_require__(moduleId){/******/ // Check if module is in cache
/* istanbul ignore if */ /******/if(installedModules[moduleId])/******/return installedModules[moduleId].exports;/******/ // Create a new module (and put it into the cache)
/******/var module=installedModules[moduleId]={/******/exports:{},/******/id:moduleId,/******/loaded:false/******/};/******/ // Execute the module function
/******/modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);/******/ // Flag the module as loaded
/******/module.loaded=true;/******/ // Return the exports of the module
/******/return module.exports;/******/}/******/ // expose the modules object (__webpack_modules__)
/******/__webpack_require__.m=modules;/******/ // expose the module cache
/******/__webpack_require__.c=installedModules;/******/ // __webpack_public_path__
/******/__webpack_require__.p="";/******/ // Load entry module and return exports
/******/return __webpack_require__(0);/******/}/************************************************************************/ /******/([/* 0 */ /***/function(module,exports,__webpack_require__){/*
			  Copyright JS Foundation and other contributors, https://js.foundation/

			  Redistribution and use in source and binary forms, with or without
			  modification, are permitted provided that the following conditions are met:

			    * Redistributions of source code must retain the above copyright
			      notice, this list of conditions and the following disclaimer.
			    * Redistributions in binary form must reproduce the above copyright
			      notice, this list of conditions and the following disclaimer in the
			      documentation and/or other materials provided with the distribution.

			  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
			  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
			  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
			  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
			  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
			  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
			  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
			  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
			  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
			  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/Object.defineProperty(exports,"__esModule",{value:true});var comment_handler_1=__webpack_require__(1);var jsx_parser_1=__webpack_require__(3);var parser_1=__webpack_require__(8);var tokenizer_1=__webpack_require__(15);function parse(code,options,delegate){var commentHandler=null;var proxyDelegate=function(node,metadata){if(delegate){delegate(node,metadata);}if(commentHandler){commentHandler.visit(node,metadata);}};var parserDelegate=typeof delegate==='function'?proxyDelegate:null;var collectComment=false;if(options){collectComment=typeof options.comment==='boolean'&&options.comment;var attachComment=typeof options.attachComment==='boolean'&&options.attachComment;if(collectComment||attachComment){commentHandler=new comment_handler_1.CommentHandler();commentHandler.attach=attachComment;options.comment=true;parserDelegate=proxyDelegate;}}var isModule=false;if(options&&typeof options.sourceType==='string'){isModule=options.sourceType==='module';}var parser;if(options&&typeof options.jsx==='boolean'&&options.jsx){parser=new jsx_parser_1.JSXParser(code,options,parserDelegate);}else{parser=new parser_1.Parser(code,options,parserDelegate);}var program=isModule?parser.parseModule():parser.parseScript();var ast=program;if(collectComment&&commentHandler){ast.comments=commentHandler.comments;}if(parser.config.tokens){ast.tokens=parser.tokens;}if(parser.config.tolerant){ast.errors=parser.errorHandler.errors;}return ast;}exports.parse=parse;function parseModule(code,options,delegate){var parsingOptions=options||{};parsingOptions.sourceType='module';return parse(code,parsingOptions,delegate);}exports.parseModule=parseModule;function parseScript(code,options,delegate){var parsingOptions=options||{};parsingOptions.sourceType='script';return parse(code,parsingOptions,delegate);}exports.parseScript=parseScript;function tokenize(code,options,delegate){var tokenizer=new tokenizer_1.Tokenizer(code,options);var tokens;tokens=[];try{while(true){var token=tokenizer.getNextToken();if(!token){break;}if(delegate){token=delegate(token);}tokens.push(token);}}catch(e){tokenizer.errorHandler.tolerate(e);}if(tokenizer.errorHandler.tolerant){tokens.errors=tokenizer.errors();}return tokens;}exports.tokenize=tokenize;var syntax_1=__webpack_require__(2);exports.Syntax=syntax_1.Syntax;// Sync with *.json manifests.
exports.version='4.0.1';/***/},/* 1 */ /***/function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var syntax_1=__webpack_require__(2);var CommentHandler=function(){function CommentHandler(){this.attach=false;this.comments=[];this.stack=[];this.leading=[];this.trailing=[];}CommentHandler.prototype.insertInnerComments=function(node,metadata){//  innnerComments for properties empty block
//  `function a() {/** comments **\/}`
if(node.type===syntax_1.Syntax.BlockStatement&&node.body.length===0){var innerComments=[];for(var i=this.leading.length-1;i>=0;--i){var entry=this.leading[i];if(metadata.end.offset>=entry.start){innerComments.unshift(entry.comment);this.leading.splice(i,1);this.trailing.splice(i,1);}}if(innerComments.length){node.innerComments=innerComments;}}};CommentHandler.prototype.findTrailingComments=function(metadata){var trailingComments=[];if(this.trailing.length>0){for(var i=this.trailing.length-1;i>=0;--i){var entry_1=this.trailing[i];if(entry_1.start>=metadata.end.offset){trailingComments.unshift(entry_1.comment);}}this.trailing.length=0;return trailingComments;}var entry=this.stack[this.stack.length-1];if(entry&&entry.node.trailingComments){var firstComment=entry.node.trailingComments[0];if(firstComment&&firstComment.range[0]>=metadata.end.offset){trailingComments=entry.node.trailingComments;delete entry.node.trailingComments;}}return trailingComments;};CommentHandler.prototype.findLeadingComments=function(metadata){var leadingComments=[];var target;while(this.stack.length>0){var entry=this.stack[this.stack.length-1];if(entry&&entry.start>=metadata.start.offset){target=entry.node;this.stack.pop();}else{break;}}if(target){var count=target.leadingComments?target.leadingComments.length:0;for(var i=count-1;i>=0;--i){var comment=target.leadingComments[i];if(comment.range[1]<=metadata.start.offset){leadingComments.unshift(comment);target.leadingComments.splice(i,1);}}if(target.leadingComments&&target.leadingComments.length===0){delete target.leadingComments;}return leadingComments;}for(var i=this.leading.length-1;i>=0;--i){var entry=this.leading[i];if(entry.start<=metadata.start.offset){leadingComments.unshift(entry.comment);this.leading.splice(i,1);}}return leadingComments;};CommentHandler.prototype.visitNode=function(node,metadata){if(node.type===syntax_1.Syntax.Program&&node.body.length>0){return;}this.insertInnerComments(node,metadata);var trailingComments=this.findTrailingComments(metadata);var leadingComments=this.findLeadingComments(metadata);if(leadingComments.length>0){node.leadingComments=leadingComments;}if(trailingComments.length>0){node.trailingComments=trailingComments;}this.stack.push({node:node,start:metadata.start.offset});};CommentHandler.prototype.visitComment=function(node,metadata){var type=node.type[0]==='L'?'Line':'Block';var comment={type:type,value:node.value};if(node.range){comment.range=node.range;}if(node.loc){comment.loc=node.loc;}this.comments.push(comment);if(this.attach){var entry={comment:{type:type,value:node.value,range:[metadata.start.offset,metadata.end.offset]},start:metadata.start.offset};if(node.loc){entry.comment.loc=node.loc;}node.type=type;this.leading.push(entry);this.trailing.push(entry);}};CommentHandler.prototype.visit=function(node,metadata){if(node.type==='LineComment'){this.visitComment(node,metadata);}else if(node.type==='BlockComment'){this.visitComment(node,metadata);}else if(this.attach){this.visitNode(node,metadata);}};return CommentHandler;}();exports.CommentHandler=CommentHandler;/***/},/* 2 */ /***/function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.Syntax={AssignmentExpression:'AssignmentExpression',AssignmentPattern:'AssignmentPattern',ArrayExpression:'ArrayExpression',ArrayPattern:'ArrayPattern',ArrowFunctionExpression:'ArrowFunctionExpression',AwaitExpression:'AwaitExpression',BlockStatement:'BlockStatement',BinaryExpression:'BinaryExpression',BreakStatement:'BreakStatement',CallExpression:'CallExpression',CatchClause:'CatchClause',ClassBody:'ClassBody',ClassDeclaration:'ClassDeclaration',ClassExpression:'ClassExpression',ConditionalExpression:'ConditionalExpression',ContinueStatement:'ContinueStatement',DoWhileStatement:'DoWhileStatement',DebuggerStatement:'DebuggerStatement',EmptyStatement:'EmptyStatement',ExportAllDeclaration:'ExportAllDeclaration',ExportDefaultDeclaration:'ExportDefaultDeclaration',ExportNamedDeclaration:'ExportNamedDeclaration',ExportSpecifier:'ExportSpecifier',ExpressionStatement:'ExpressionStatement',ForStatement:'ForStatement',ForOfStatement:'ForOfStatement',ForInStatement:'ForInStatement',FunctionDeclaration:'FunctionDeclaration',FunctionExpression:'FunctionExpression',Identifier:'Identifier',IfStatement:'IfStatement',ImportDeclaration:'ImportDeclaration',ImportDefaultSpecifier:'ImportDefaultSpecifier',ImportNamespaceSpecifier:'ImportNamespaceSpecifier',ImportSpecifier:'ImportSpecifier',Literal:'Literal',LabeledStatement:'LabeledStatement',LogicalExpression:'LogicalExpression',MemberExpression:'MemberExpression',MetaProperty:'MetaProperty',MethodDefinition:'MethodDefinition',NewExpression:'NewExpression',ObjectExpression:'ObjectExpression',ObjectPattern:'ObjectPattern',Program:'Program',Property:'Property',RestElement:'RestElement',ReturnStatement:'ReturnStatement',SequenceExpression:'SequenceExpression',SpreadElement:'SpreadElement',Super:'Super',SwitchCase:'SwitchCase',SwitchStatement:'SwitchStatement',TaggedTemplateExpression:'TaggedTemplateExpression',TemplateElement:'TemplateElement',TemplateLiteral:'TemplateLiteral',ThisExpression:'ThisExpression',ThrowStatement:'ThrowStatement',TryStatement:'TryStatement',UnaryExpression:'UnaryExpression',UpdateExpression:'UpdateExpression',VariableDeclaration:'VariableDeclaration',VariableDeclarator:'VariableDeclarator',WhileStatement:'WhileStatement',WithStatement:'WithStatement',YieldExpression:'YieldExpression'};/***/},/* 3 */ /***/function(module,exports,__webpack_require__){/* istanbul ignore next */var __extends=this&&this.__extends||function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var character_1=__webpack_require__(4);var JSXNode=__webpack_require__(5);var jsx_syntax_1=__webpack_require__(6);var Node=__webpack_require__(7);var parser_1=__webpack_require__(8);var token_1=__webpack_require__(13);var xhtml_entities_1=__webpack_require__(14);token_1.TokenName[100/* Identifier */]='JSXIdentifier';token_1.TokenName[101/* Text */]='JSXText';// Fully qualified element name, e.g. <svg:path> returns "svg:path"
function getQualifiedElementName(elementName){var qualifiedName;switch(elementName.type){case jsx_syntax_1.JSXSyntax.JSXIdentifier:var id=elementName;qualifiedName=id.name;break;case jsx_syntax_1.JSXSyntax.JSXNamespacedName:var ns=elementName;qualifiedName=getQualifiedElementName(ns.namespace)+':'+getQualifiedElementName(ns.name);break;case jsx_syntax_1.JSXSyntax.JSXMemberExpression:var expr=elementName;qualifiedName=getQualifiedElementName(expr.object)+'.'+getQualifiedElementName(expr.property);break;}return qualifiedName;}var JSXParser=function(_super){__extends(JSXParser,_super);function JSXParser(code,options,delegate){return _super.call(this,code,options,delegate)||this;}JSXParser.prototype.parsePrimaryExpression=function(){return this.match('<')?this.parseJSXRoot():_super.prototype.parsePrimaryExpression.call(this);};JSXParser.prototype.startJSX=function(){// Unwind the scanner before the lookahead token.
this.scanner.index=this.startMarker.index;this.scanner.lineNumber=this.startMarker.line;this.scanner.lineStart=this.startMarker.index-this.startMarker.column;};JSXParser.prototype.finishJSX=function(){// Prime the next lookahead.
this.nextToken();};JSXParser.prototype.reenterJSX=function(){this.startJSX();this.expectJSX('}');// Pop the closing '}' added from the lookahead.
if(this.config.tokens){this.tokens.pop();}};JSXParser.prototype.createJSXNode=function(){this.collectComments();return{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart};};JSXParser.prototype.createJSXChildNode=function(){return{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart};};JSXParser.prototype.scanXHTMLEntity=function(quote){var result='&';var valid=true;var terminated=false;var numeric=false;var hex=false;while(!this.scanner.eof()&&valid&&!terminated){var ch=this.scanner.source[this.scanner.index];if(ch===quote){break;}terminated=ch===';';result+=ch;++this.scanner.index;if(!terminated){switch(result.length){case 2:// e.g. '&#123;'
numeric=ch==='#';break;case 3:if(numeric){// e.g. '&#x41;'
hex=ch==='x';valid=hex||character_1.Character.isDecimalDigit(ch.charCodeAt(0));numeric=numeric&&!hex;}break;default:valid=valid&&!(numeric&&!character_1.Character.isDecimalDigit(ch.charCodeAt(0)));valid=valid&&!(hex&&!character_1.Character.isHexDigit(ch.charCodeAt(0)));break;}}}if(valid&&terminated&&result.length>2){// e.g. '&#x41;' becomes just '#x41'
var str=result.substr(1,result.length-2);if(numeric&&str.length>1){result=String.fromCharCode(parseInt(str.substr(1),10));}else if(hex&&str.length>2){result=String.fromCharCode(parseInt('0'+str.substr(1),16));}else if(!numeric&&!hex&&xhtml_entities_1.XHTMLEntities[str]){result=xhtml_entities_1.XHTMLEntities[str];}}return result;};// Scan the next JSX token. This replaces Scanner#lex when in JSX mode.
JSXParser.prototype.lexJSX=function(){var cp=this.scanner.source.charCodeAt(this.scanner.index);// < > / : = { }
if(cp===60||cp===62||cp===47||cp===58||cp===61||cp===123||cp===125){var value=this.scanner.source[this.scanner.index++];return{type:7/* Punctuator */,value:value,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index-1,end:this.scanner.index};}// " '
if(cp===34||cp===39){var start=this.scanner.index;var quote=this.scanner.source[this.scanner.index++];var str='';while(!this.scanner.eof()){var ch=this.scanner.source[this.scanner.index++];if(ch===quote){break;}else if(ch==='&'){str+=this.scanXHTMLEntity(quote);}else{str+=ch;}}return{type:8/* StringLiteral */,value:str,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:start,end:this.scanner.index};}// ... or .
if(cp===46){var n1=this.scanner.source.charCodeAt(this.scanner.index+1);var n2=this.scanner.source.charCodeAt(this.scanner.index+2);var value=n1===46&&n2===46?'...':'.';var start=this.scanner.index;this.scanner.index+=value.length;return{type:7/* Punctuator */,value:value,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:start,end:this.scanner.index};}// `
if(cp===96){// Only placeholder, since it will be rescanned as a real assignment expression.
return{type:10/* Template */,value:'',lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index,end:this.scanner.index};}// Identifer can not contain backslash (char code 92).
if(character_1.Character.isIdentifierStart(cp)&&cp!==92){var start=this.scanner.index;++this.scanner.index;while(!this.scanner.eof()){var ch=this.scanner.source.charCodeAt(this.scanner.index);if(character_1.Character.isIdentifierPart(ch)&&ch!==92){++this.scanner.index;}else if(ch===45){// Hyphen (char code 45) can be part of an identifier.
++this.scanner.index;}else{break;}}var id=this.scanner.source.slice(start,this.scanner.index);return{type:100/* Identifier */,value:id,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:start,end:this.scanner.index};}return this.scanner.lex();};JSXParser.prototype.nextJSXToken=function(){this.collectComments();this.startMarker.index=this.scanner.index;this.startMarker.line=this.scanner.lineNumber;this.startMarker.column=this.scanner.index-this.scanner.lineStart;var token=this.lexJSX();this.lastMarker.index=this.scanner.index;this.lastMarker.line=this.scanner.lineNumber;this.lastMarker.column=this.scanner.index-this.scanner.lineStart;if(this.config.tokens){this.tokens.push(this.convertToken(token));}return token;};JSXParser.prototype.nextJSXText=function(){this.startMarker.index=this.scanner.index;this.startMarker.line=this.scanner.lineNumber;this.startMarker.column=this.scanner.index-this.scanner.lineStart;var start=this.scanner.index;var text='';while(!this.scanner.eof()){var ch=this.scanner.source[this.scanner.index];if(ch==='{'||ch==='<'){break;}++this.scanner.index;text+=ch;if(character_1.Character.isLineTerminator(ch.charCodeAt(0))){++this.scanner.lineNumber;if(ch==='\r'&&this.scanner.source[this.scanner.index]==='\n'){++this.scanner.index;}this.scanner.lineStart=this.scanner.index;}}this.lastMarker.index=this.scanner.index;this.lastMarker.line=this.scanner.lineNumber;this.lastMarker.column=this.scanner.index-this.scanner.lineStart;var token={type:101/* Text */,value:text,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:start,end:this.scanner.index};if(text.length>0&&this.config.tokens){this.tokens.push(this.convertToken(token));}return token;};JSXParser.prototype.peekJSXToken=function(){var state=this.scanner.saveState();this.scanner.scanComments();var next=this.lexJSX();this.scanner.restoreState(state);return next;};// Expect the next JSX token to match the specified punctuator.
// If not, an exception will be thrown.
JSXParser.prototype.expectJSX=function(value){var token=this.nextJSXToken();if(token.type!==7/* Punctuator */||token.value!==value){this.throwUnexpectedToken(token);}};// Return true if the next JSX token matches the specified punctuator.
JSXParser.prototype.matchJSX=function(value){var next=this.peekJSXToken();return next.type===7/* Punctuator */&&next.value===value;};JSXParser.prototype.parseJSXIdentifier=function(){var node=this.createJSXNode();var token=this.nextJSXToken();if(token.type!==100/* Identifier */){this.throwUnexpectedToken(token);}return this.finalize(node,new JSXNode.JSXIdentifier(token.value));};JSXParser.prototype.parseJSXElementName=function(){var node=this.createJSXNode();var elementName=this.parseJSXIdentifier();if(this.matchJSX(':')){var namespace=elementName;this.expectJSX(':');var name_1=this.parseJSXIdentifier();elementName=this.finalize(node,new JSXNode.JSXNamespacedName(namespace,name_1));}else if(this.matchJSX('.')){while(this.matchJSX('.')){var object=elementName;this.expectJSX('.');var property=this.parseJSXIdentifier();elementName=this.finalize(node,new JSXNode.JSXMemberExpression(object,property));}}return elementName;};JSXParser.prototype.parseJSXAttributeName=function(){var node=this.createJSXNode();var attributeName;var identifier=this.parseJSXIdentifier();if(this.matchJSX(':')){var namespace=identifier;this.expectJSX(':');var name_2=this.parseJSXIdentifier();attributeName=this.finalize(node,new JSXNode.JSXNamespacedName(namespace,name_2));}else{attributeName=identifier;}return attributeName;};JSXParser.prototype.parseJSXStringLiteralAttribute=function(){var node=this.createJSXNode();var token=this.nextJSXToken();if(token.type!==8/* StringLiteral */){this.throwUnexpectedToken(token);}var raw=this.getTokenRaw(token);return this.finalize(node,new Node.Literal(token.value,raw));};JSXParser.prototype.parseJSXExpressionAttribute=function(){var node=this.createJSXNode();this.expectJSX('{');this.finishJSX();if(this.match('}')){this.tolerateError('JSX attributes must only be assigned a non-empty expression');}var expression=this.parseAssignmentExpression();this.reenterJSX();return this.finalize(node,new JSXNode.JSXExpressionContainer(expression));};JSXParser.prototype.parseJSXAttributeValue=function(){return this.matchJSX('{')?this.parseJSXExpressionAttribute():this.matchJSX('<')?this.parseJSXElement():this.parseJSXStringLiteralAttribute();};JSXParser.prototype.parseJSXNameValueAttribute=function(){var node=this.createJSXNode();var name=this.parseJSXAttributeName();var value=null;if(this.matchJSX('=')){this.expectJSX('=');value=this.parseJSXAttributeValue();}return this.finalize(node,new JSXNode.JSXAttribute(name,value));};JSXParser.prototype.parseJSXSpreadAttribute=function(){var node=this.createJSXNode();this.expectJSX('{');this.expectJSX('...');this.finishJSX();var argument=this.parseAssignmentExpression();this.reenterJSX();return this.finalize(node,new JSXNode.JSXSpreadAttribute(argument));};JSXParser.prototype.parseJSXAttributes=function(){var attributes=[];while(!this.matchJSX('/')&&!this.matchJSX('>')){var attribute=this.matchJSX('{')?this.parseJSXSpreadAttribute():this.parseJSXNameValueAttribute();attributes.push(attribute);}return attributes;};JSXParser.prototype.parseJSXOpeningElement=function(){var node=this.createJSXNode();this.expectJSX('<');var name=this.parseJSXElementName();var attributes=this.parseJSXAttributes();var selfClosing=this.matchJSX('/');if(selfClosing){this.expectJSX('/');}this.expectJSX('>');return this.finalize(node,new JSXNode.JSXOpeningElement(name,selfClosing,attributes));};JSXParser.prototype.parseJSXBoundaryElement=function(){var node=this.createJSXNode();this.expectJSX('<');if(this.matchJSX('/')){this.expectJSX('/');var name_3=this.parseJSXElementName();this.expectJSX('>');return this.finalize(node,new JSXNode.JSXClosingElement(name_3));}var name=this.parseJSXElementName();var attributes=this.parseJSXAttributes();var selfClosing=this.matchJSX('/');if(selfClosing){this.expectJSX('/');}this.expectJSX('>');return this.finalize(node,new JSXNode.JSXOpeningElement(name,selfClosing,attributes));};JSXParser.prototype.parseJSXEmptyExpression=function(){var node=this.createJSXChildNode();this.collectComments();this.lastMarker.index=this.scanner.index;this.lastMarker.line=this.scanner.lineNumber;this.lastMarker.column=this.scanner.index-this.scanner.lineStart;return this.finalize(node,new JSXNode.JSXEmptyExpression());};JSXParser.prototype.parseJSXExpressionContainer=function(){var node=this.createJSXNode();this.expectJSX('{');var expression;if(this.matchJSX('}')){expression=this.parseJSXEmptyExpression();this.expectJSX('}');}else{this.finishJSX();expression=this.parseAssignmentExpression();this.reenterJSX();}return this.finalize(node,new JSXNode.JSXExpressionContainer(expression));};JSXParser.prototype.parseJSXChildren=function(){var children=[];while(!this.scanner.eof()){var node=this.createJSXChildNode();var token=this.nextJSXText();if(token.start<token.end){var raw=this.getTokenRaw(token);var child=this.finalize(node,new JSXNode.JSXText(token.value,raw));children.push(child);}if(this.scanner.source[this.scanner.index]==='{'){var container=this.parseJSXExpressionContainer();children.push(container);}else{break;}}return children;};JSXParser.prototype.parseComplexJSXElement=function(el){var stack=[];while(!this.scanner.eof()){el.children=el.children.concat(this.parseJSXChildren());var node=this.createJSXChildNode();var element=this.parseJSXBoundaryElement();if(element.type===jsx_syntax_1.JSXSyntax.JSXOpeningElement){var opening=element;if(opening.selfClosing){var child=this.finalize(node,new JSXNode.JSXElement(opening,[],null));el.children.push(child);}else{stack.push(el);el={node:node,opening:opening,closing:null,children:[]};}}if(element.type===jsx_syntax_1.JSXSyntax.JSXClosingElement){el.closing=element;var open_1=getQualifiedElementName(el.opening.name);var close_1=getQualifiedElementName(el.closing.name);if(open_1!==close_1){this.tolerateError('Expected corresponding JSX closing tag for %0',open_1);}if(stack.length>0){var child=this.finalize(el.node,new JSXNode.JSXElement(el.opening,el.children,el.closing));el=stack[stack.length-1];el.children.push(child);stack.pop();}else{break;}}}return el;};JSXParser.prototype.parseJSXElement=function(){var node=this.createJSXNode();var opening=this.parseJSXOpeningElement();var children=[];var closing=null;if(!opening.selfClosing){var el=this.parseComplexJSXElement({node:node,opening:opening,closing:closing,children:children});children=el.children;closing=el.closing;}return this.finalize(node,new JSXNode.JSXElement(opening,children,closing));};JSXParser.prototype.parseJSXRoot=function(){// Pop the opening '<' added from the lookahead.
if(this.config.tokens){this.tokens.pop();}this.startJSX();var element=this.parseJSXElement();this.finishJSX();return element;};JSXParser.prototype.isStartOfExpression=function(){return _super.prototype.isStartOfExpression.call(this)||this.match('<');};return JSXParser;}(parser_1.Parser);exports.JSXParser=JSXParser;/***/},/* 4 */ /***/function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});// See also tools/generate-unicode-regex.js.
var Regex={// Unicode v8.0.0 NonAsciiIdentifierStart:
NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,// Unicode v8.0.0 NonAsciiIdentifierPart:
NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};exports.Character={/* tslint:disable:no-bitwise */fromCodePoint:function(cp){return cp<0x10000?String.fromCharCode(cp):String.fromCharCode(0xD800+(cp-0x10000>>10))+String.fromCharCode(0xDC00+(cp-0x10000&1023));},// https://tc39.github.io/ecma262/#sec-white-space
isWhiteSpace:function(cp){return cp===0x20||cp===0x09||cp===0x0B||cp===0x0C||cp===0xA0||cp>=0x1680&&[0x1680,0x2000,0x2001,0x2002,0x2003,0x2004,0x2005,0x2006,0x2007,0x2008,0x2009,0x200A,0x202F,0x205F,0x3000,0xFEFF].indexOf(cp)>=0;},// https://tc39.github.io/ecma262/#sec-line-terminators
isLineTerminator:function(cp){return cp===0x0A||cp===0x0D||cp===0x2028||cp===0x2029;},// https://tc39.github.io/ecma262/#sec-names-and-keywords
isIdentifierStart:function(cp){return cp===0x24||cp===0x5F||cp>=0x41&&cp<=0x5A||cp>=0x61&&cp<=0x7A||cp===0x5C||cp>=0x80&&Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp));},isIdentifierPart:function(cp){return cp===0x24||cp===0x5F||cp>=0x41&&cp<=0x5A||cp>=0x61&&cp<=0x7A||cp>=0x30&&cp<=0x39||cp===0x5C||cp>=0x80&&Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp));},// https://tc39.github.io/ecma262/#sec-literals-numeric-literals
isDecimalDigit:function(cp){return cp>=0x30&&cp<=0x39;// 0..9
},isHexDigit:function(cp){return cp>=0x30&&cp<=0x39||cp>=0x41&&cp<=0x46||cp>=0x61&&cp<=0x66;// a..f
},isOctalDigit:function(cp){return cp>=0x30&&cp<=0x37;// 0..7
}};/***/},/* 5 */ /***/function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var jsx_syntax_1=__webpack_require__(6);/* tslint:disable:max-classes-per-file */var JSXClosingElement=function(){function JSXClosingElement(name){this.type=jsx_syntax_1.JSXSyntax.JSXClosingElement;this.name=name;}return JSXClosingElement;}();exports.JSXClosingElement=JSXClosingElement;var JSXElement=function(){function JSXElement(openingElement,children,closingElement){this.type=jsx_syntax_1.JSXSyntax.JSXElement;this.openingElement=openingElement;this.children=children;this.closingElement=closingElement;}return JSXElement;}();exports.JSXElement=JSXElement;var JSXEmptyExpression=function(){function JSXEmptyExpression(){this.type=jsx_syntax_1.JSXSyntax.JSXEmptyExpression;}return JSXEmptyExpression;}();exports.JSXEmptyExpression=JSXEmptyExpression;var JSXExpressionContainer=function(){function JSXExpressionContainer(expression){this.type=jsx_syntax_1.JSXSyntax.JSXExpressionContainer;this.expression=expression;}return JSXExpressionContainer;}();exports.JSXExpressionContainer=JSXExpressionContainer;var JSXIdentifier=function(){function JSXIdentifier(name){this.type=jsx_syntax_1.JSXSyntax.JSXIdentifier;this.name=name;}return JSXIdentifier;}();exports.JSXIdentifier=JSXIdentifier;var JSXMemberExpression=function(){function JSXMemberExpression(object,property){this.type=jsx_syntax_1.JSXSyntax.JSXMemberExpression;this.object=object;this.property=property;}return JSXMemberExpression;}();exports.JSXMemberExpression=JSXMemberExpression;var JSXAttribute=function(){function JSXAttribute(name,value){this.type=jsx_syntax_1.JSXSyntax.JSXAttribute;this.name=name;this.value=value;}return JSXAttribute;}();exports.JSXAttribute=JSXAttribute;var JSXNamespacedName=function(){function JSXNamespacedName(namespace,name){this.type=jsx_syntax_1.JSXSyntax.JSXNamespacedName;this.namespace=namespace;this.name=name;}return JSXNamespacedName;}();exports.JSXNamespacedName=JSXNamespacedName;var JSXOpeningElement=function(){function JSXOpeningElement(name,selfClosing,attributes){this.type=jsx_syntax_1.JSXSyntax.JSXOpeningElement;this.name=name;this.selfClosing=selfClosing;this.attributes=attributes;}return JSXOpeningElement;}();exports.JSXOpeningElement=JSXOpeningElement;var JSXSpreadAttribute=function(){function JSXSpreadAttribute(argument){this.type=jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;this.argument=argument;}return JSXSpreadAttribute;}();exports.JSXSpreadAttribute=JSXSpreadAttribute;var JSXText=function(){function JSXText(value,raw){this.type=jsx_syntax_1.JSXSyntax.JSXText;this.value=value;this.raw=raw;}return JSXText;}();exports.JSXText=JSXText;/***/},/* 6 */ /***/function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.JSXSyntax={JSXAttribute:'JSXAttribute',JSXClosingElement:'JSXClosingElement',JSXElement:'JSXElement',JSXEmptyExpression:'JSXEmptyExpression',JSXExpressionContainer:'JSXExpressionContainer',JSXIdentifier:'JSXIdentifier',JSXMemberExpression:'JSXMemberExpression',JSXNamespacedName:'JSXNamespacedName',JSXOpeningElement:'JSXOpeningElement',JSXSpreadAttribute:'JSXSpreadAttribute',JSXText:'JSXText'};/***/},/* 7 */ /***/function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var syntax_1=__webpack_require__(2);/* tslint:disable:max-classes-per-file */var ArrayExpression=function(){function ArrayExpression(elements){this.type=syntax_1.Syntax.ArrayExpression;this.elements=elements;}return ArrayExpression;}();exports.ArrayExpression=ArrayExpression;var ArrayPattern=function(){function ArrayPattern(elements){this.type=syntax_1.Syntax.ArrayPattern;this.elements=elements;}return ArrayPattern;}();exports.ArrayPattern=ArrayPattern;var ArrowFunctionExpression=function(){function ArrowFunctionExpression(params,body,expression){this.type=syntax_1.Syntax.ArrowFunctionExpression;this.id=null;this.params=params;this.body=body;this.generator=false;this.expression=expression;this.async=false;}return ArrowFunctionExpression;}();exports.ArrowFunctionExpression=ArrowFunctionExpression;var AssignmentExpression=function(){function AssignmentExpression(operator,left,right){this.type=syntax_1.Syntax.AssignmentExpression;this.operator=operator;this.left=left;this.right=right;}return AssignmentExpression;}();exports.AssignmentExpression=AssignmentExpression;var AssignmentPattern=function(){function AssignmentPattern(left,right){this.type=syntax_1.Syntax.AssignmentPattern;this.left=left;this.right=right;}return AssignmentPattern;}();exports.AssignmentPattern=AssignmentPattern;var AsyncArrowFunctionExpression=function(){function AsyncArrowFunctionExpression(params,body,expression){this.type=syntax_1.Syntax.ArrowFunctionExpression;this.id=null;this.params=params;this.body=body;this.generator=false;this.expression=expression;this.async=true;}return AsyncArrowFunctionExpression;}();exports.AsyncArrowFunctionExpression=AsyncArrowFunctionExpression;var AsyncFunctionDeclaration=function(){function AsyncFunctionDeclaration(id,params,body){this.type=syntax_1.Syntax.FunctionDeclaration;this.id=id;this.params=params;this.body=body;this.generator=false;this.expression=false;this.async=true;}return AsyncFunctionDeclaration;}();exports.AsyncFunctionDeclaration=AsyncFunctionDeclaration;var AsyncFunctionExpression=function(){function AsyncFunctionExpression(id,params,body){this.type=syntax_1.Syntax.FunctionExpression;this.id=id;this.params=params;this.body=body;this.generator=false;this.expression=false;this.async=true;}return AsyncFunctionExpression;}();exports.AsyncFunctionExpression=AsyncFunctionExpression;var AwaitExpression=function(){function AwaitExpression(argument){this.type=syntax_1.Syntax.AwaitExpression;this.argument=argument;}return AwaitExpression;}();exports.AwaitExpression=AwaitExpression;var BinaryExpression=function(){function BinaryExpression(operator,left,right){var logical=operator==='||'||operator==='&&';this.type=logical?syntax_1.Syntax.LogicalExpression:syntax_1.Syntax.BinaryExpression;this.operator=operator;this.left=left;this.right=right;}return BinaryExpression;}();exports.BinaryExpression=BinaryExpression;var BlockStatement=function(){function BlockStatement(body){this.type=syntax_1.Syntax.BlockStatement;this.body=body;}return BlockStatement;}();exports.BlockStatement=BlockStatement;var BreakStatement=function(){function BreakStatement(label){this.type=syntax_1.Syntax.BreakStatement;this.label=label;}return BreakStatement;}();exports.BreakStatement=BreakStatement;var CallExpression=function(){function CallExpression(callee,args){this.type=syntax_1.Syntax.CallExpression;this.callee=callee;this.arguments=args;}return CallExpression;}();exports.CallExpression=CallExpression;var CatchClause=function(){function CatchClause(param,body){this.type=syntax_1.Syntax.CatchClause;this.param=param;this.body=body;}return CatchClause;}();exports.CatchClause=CatchClause;var ClassBody=function(){function ClassBody(body){this.type=syntax_1.Syntax.ClassBody;this.body=body;}return ClassBody;}();exports.ClassBody=ClassBody;var ClassDeclaration=function(){function ClassDeclaration(id,superClass,body){this.type=syntax_1.Syntax.ClassDeclaration;this.id=id;this.superClass=superClass;this.body=body;}return ClassDeclaration;}();exports.ClassDeclaration=ClassDeclaration;var ClassExpression=function(){function ClassExpression(id,superClass,body){this.type=syntax_1.Syntax.ClassExpression;this.id=id;this.superClass=superClass;this.body=body;}return ClassExpression;}();exports.ClassExpression=ClassExpression;var ComputedMemberExpression=function(){function ComputedMemberExpression(object,property){this.type=syntax_1.Syntax.MemberExpression;this.computed=true;this.object=object;this.property=property;}return ComputedMemberExpression;}();exports.ComputedMemberExpression=ComputedMemberExpression;var ConditionalExpression=function(){function ConditionalExpression(test,consequent,alternate){this.type=syntax_1.Syntax.ConditionalExpression;this.test=test;this.consequent=consequent;this.alternate=alternate;}return ConditionalExpression;}();exports.ConditionalExpression=ConditionalExpression;var ContinueStatement=function(){function ContinueStatement(label){this.type=syntax_1.Syntax.ContinueStatement;this.label=label;}return ContinueStatement;}();exports.ContinueStatement=ContinueStatement;var DebuggerStatement=function(){function DebuggerStatement(){this.type=syntax_1.Syntax.DebuggerStatement;}return DebuggerStatement;}();exports.DebuggerStatement=DebuggerStatement;var Directive=function(){function Directive(expression,directive){this.type=syntax_1.Syntax.ExpressionStatement;this.expression=expression;this.directive=directive;}return Directive;}();exports.Directive=Directive;var DoWhileStatement=function(){function DoWhileStatement(body,test){this.type=syntax_1.Syntax.DoWhileStatement;this.body=body;this.test=test;}return DoWhileStatement;}();exports.DoWhileStatement=DoWhileStatement;var EmptyStatement=function(){function EmptyStatement(){this.type=syntax_1.Syntax.EmptyStatement;}return EmptyStatement;}();exports.EmptyStatement=EmptyStatement;var ExportAllDeclaration=function(){function ExportAllDeclaration(source){this.type=syntax_1.Syntax.ExportAllDeclaration;this.source=source;}return ExportAllDeclaration;}();exports.ExportAllDeclaration=ExportAllDeclaration;var ExportDefaultDeclaration=function(){function ExportDefaultDeclaration(declaration){this.type=syntax_1.Syntax.ExportDefaultDeclaration;this.declaration=declaration;}return ExportDefaultDeclaration;}();exports.ExportDefaultDeclaration=ExportDefaultDeclaration;var ExportNamedDeclaration=function(){function ExportNamedDeclaration(declaration,specifiers,source){this.type=syntax_1.Syntax.ExportNamedDeclaration;this.declaration=declaration;this.specifiers=specifiers;this.source=source;}return ExportNamedDeclaration;}();exports.ExportNamedDeclaration=ExportNamedDeclaration;var ExportSpecifier=function(){function ExportSpecifier(local,exported){this.type=syntax_1.Syntax.ExportSpecifier;this.exported=exported;this.local=local;}return ExportSpecifier;}();exports.ExportSpecifier=ExportSpecifier;var ExpressionStatement=function(){function ExpressionStatement(expression){this.type=syntax_1.Syntax.ExpressionStatement;this.expression=expression;}return ExpressionStatement;}();exports.ExpressionStatement=ExpressionStatement;var ForInStatement=function(){function ForInStatement(left,right,body){this.type=syntax_1.Syntax.ForInStatement;this.left=left;this.right=right;this.body=body;this.each=false;}return ForInStatement;}();exports.ForInStatement=ForInStatement;var ForOfStatement=function(){function ForOfStatement(left,right,body){this.type=syntax_1.Syntax.ForOfStatement;this.left=left;this.right=right;this.body=body;}return ForOfStatement;}();exports.ForOfStatement=ForOfStatement;var ForStatement=function(){function ForStatement(init,test,update,body){this.type=syntax_1.Syntax.ForStatement;this.init=init;this.test=test;this.update=update;this.body=body;}return ForStatement;}();exports.ForStatement=ForStatement;var FunctionDeclaration=function(){function FunctionDeclaration(id,params,body,generator){this.type=syntax_1.Syntax.FunctionDeclaration;this.id=id;this.params=params;this.body=body;this.generator=generator;this.expression=false;this.async=false;}return FunctionDeclaration;}();exports.FunctionDeclaration=FunctionDeclaration;var FunctionExpression=function(){function FunctionExpression(id,params,body,generator){this.type=syntax_1.Syntax.FunctionExpression;this.id=id;this.params=params;this.body=body;this.generator=generator;this.expression=false;this.async=false;}return FunctionExpression;}();exports.FunctionExpression=FunctionExpression;var Identifier=function(){function Identifier(name){this.type=syntax_1.Syntax.Identifier;this.name=name;}return Identifier;}();exports.Identifier=Identifier;var IfStatement=function(){function IfStatement(test,consequent,alternate){this.type=syntax_1.Syntax.IfStatement;this.test=test;this.consequent=consequent;this.alternate=alternate;}return IfStatement;}();exports.IfStatement=IfStatement;var ImportDeclaration=function(){function ImportDeclaration(specifiers,source){this.type=syntax_1.Syntax.ImportDeclaration;this.specifiers=specifiers;this.source=source;}return ImportDeclaration;}();exports.ImportDeclaration=ImportDeclaration;var ImportDefaultSpecifier=function(){function ImportDefaultSpecifier(local){this.type=syntax_1.Syntax.ImportDefaultSpecifier;this.local=local;}return ImportDefaultSpecifier;}();exports.ImportDefaultSpecifier=ImportDefaultSpecifier;var ImportNamespaceSpecifier=function(){function ImportNamespaceSpecifier(local){this.type=syntax_1.Syntax.ImportNamespaceSpecifier;this.local=local;}return ImportNamespaceSpecifier;}();exports.ImportNamespaceSpecifier=ImportNamespaceSpecifier;var ImportSpecifier=function(){function ImportSpecifier(local,imported){this.type=syntax_1.Syntax.ImportSpecifier;this.local=local;this.imported=imported;}return ImportSpecifier;}();exports.ImportSpecifier=ImportSpecifier;var LabeledStatement=function(){function LabeledStatement(label,body){this.type=syntax_1.Syntax.LabeledStatement;this.label=label;this.body=body;}return LabeledStatement;}();exports.LabeledStatement=LabeledStatement;var Literal=function(){function Literal(value,raw){this.type=syntax_1.Syntax.Literal;this.value=value;this.raw=raw;}return Literal;}();exports.Literal=Literal;var MetaProperty=function(){function MetaProperty(meta,property){this.type=syntax_1.Syntax.MetaProperty;this.meta=meta;this.property=property;}return MetaProperty;}();exports.MetaProperty=MetaProperty;var MethodDefinition=function(){function MethodDefinition(key,computed,value,kind,isStatic){this.type=syntax_1.Syntax.MethodDefinition;this.key=key;this.computed=computed;this.value=value;this.kind=kind;this.static=isStatic;}return MethodDefinition;}();exports.MethodDefinition=MethodDefinition;var Module=function(){function Module(body){this.type=syntax_1.Syntax.Program;this.body=body;this.sourceType='module';}return Module;}();exports.Module=Module;var NewExpression=function(){function NewExpression(callee,args){this.type=syntax_1.Syntax.NewExpression;this.callee=callee;this.arguments=args;}return NewExpression;}();exports.NewExpression=NewExpression;var ObjectExpression=function(){function ObjectExpression(properties){this.type=syntax_1.Syntax.ObjectExpression;this.properties=properties;}return ObjectExpression;}();exports.ObjectExpression=ObjectExpression;var ObjectPattern=function(){function ObjectPattern(properties){this.type=syntax_1.Syntax.ObjectPattern;this.properties=properties;}return ObjectPattern;}();exports.ObjectPattern=ObjectPattern;var Property=function(){function Property(kind,key,computed,value,method,shorthand){this.type=syntax_1.Syntax.Property;this.key=key;this.computed=computed;this.value=value;this.kind=kind;this.method=method;this.shorthand=shorthand;}return Property;}();exports.Property=Property;var RegexLiteral=function(){function RegexLiteral(value,raw,pattern,flags){this.type=syntax_1.Syntax.Literal;this.value=value;this.raw=raw;this.regex={pattern:pattern,flags:flags};}return RegexLiteral;}();exports.RegexLiteral=RegexLiteral;var RestElement=function(){function RestElement(argument){this.type=syntax_1.Syntax.RestElement;this.argument=argument;}return RestElement;}();exports.RestElement=RestElement;var ReturnStatement=function(){function ReturnStatement(argument){this.type=syntax_1.Syntax.ReturnStatement;this.argument=argument;}return ReturnStatement;}();exports.ReturnStatement=ReturnStatement;var Script=function(){function Script(body){this.type=syntax_1.Syntax.Program;this.body=body;this.sourceType='script';}return Script;}();exports.Script=Script;var SequenceExpression=function(){function SequenceExpression(expressions){this.type=syntax_1.Syntax.SequenceExpression;this.expressions=expressions;}return SequenceExpression;}();exports.SequenceExpression=SequenceExpression;var SpreadElement=function(){function SpreadElement(argument){this.type=syntax_1.Syntax.SpreadElement;this.argument=argument;}return SpreadElement;}();exports.SpreadElement=SpreadElement;var StaticMemberExpression=function(){function StaticMemberExpression(object,property){this.type=syntax_1.Syntax.MemberExpression;this.computed=false;this.object=object;this.property=property;}return StaticMemberExpression;}();exports.StaticMemberExpression=StaticMemberExpression;var Super=function(){function Super(){this.type=syntax_1.Syntax.Super;}return Super;}();exports.Super=Super;var SwitchCase=function(){function SwitchCase(test,consequent){this.type=syntax_1.Syntax.SwitchCase;this.test=test;this.consequent=consequent;}return SwitchCase;}();exports.SwitchCase=SwitchCase;var SwitchStatement=function(){function SwitchStatement(discriminant,cases){this.type=syntax_1.Syntax.SwitchStatement;this.discriminant=discriminant;this.cases=cases;}return SwitchStatement;}();exports.SwitchStatement=SwitchStatement;var TaggedTemplateExpression=function(){function TaggedTemplateExpression(tag,quasi){this.type=syntax_1.Syntax.TaggedTemplateExpression;this.tag=tag;this.quasi=quasi;}return TaggedTemplateExpression;}();exports.TaggedTemplateExpression=TaggedTemplateExpression;var TemplateElement=function(){function TemplateElement(value,tail){this.type=syntax_1.Syntax.TemplateElement;this.value=value;this.tail=tail;}return TemplateElement;}();exports.TemplateElement=TemplateElement;var TemplateLiteral=function(){function TemplateLiteral(quasis,expressions){this.type=syntax_1.Syntax.TemplateLiteral;this.quasis=quasis;this.expressions=expressions;}return TemplateLiteral;}();exports.TemplateLiteral=TemplateLiteral;var ThisExpression=function(){function ThisExpression(){this.type=syntax_1.Syntax.ThisExpression;}return ThisExpression;}();exports.ThisExpression=ThisExpression;var ThrowStatement=function(){function ThrowStatement(argument){this.type=syntax_1.Syntax.ThrowStatement;this.argument=argument;}return ThrowStatement;}();exports.ThrowStatement=ThrowStatement;var TryStatement=function(){function TryStatement(block,handler,finalizer){this.type=syntax_1.Syntax.TryStatement;this.block=block;this.handler=handler;this.finalizer=finalizer;}return TryStatement;}();exports.TryStatement=TryStatement;var UnaryExpression=function(){function UnaryExpression(operator,argument){this.type=syntax_1.Syntax.UnaryExpression;this.operator=operator;this.argument=argument;this.prefix=true;}return UnaryExpression;}();exports.UnaryExpression=UnaryExpression;var UpdateExpression=function(){function UpdateExpression(operator,argument,prefix){this.type=syntax_1.Syntax.UpdateExpression;this.operator=operator;this.argument=argument;this.prefix=prefix;}return UpdateExpression;}();exports.UpdateExpression=UpdateExpression;var VariableDeclaration=function(){function VariableDeclaration(declarations,kind){this.type=syntax_1.Syntax.VariableDeclaration;this.declarations=declarations;this.kind=kind;}return VariableDeclaration;}();exports.VariableDeclaration=VariableDeclaration;var VariableDeclarator=function(){function VariableDeclarator(id,init){this.type=syntax_1.Syntax.VariableDeclarator;this.id=id;this.init=init;}return VariableDeclarator;}();exports.VariableDeclarator=VariableDeclarator;var WhileStatement=function(){function WhileStatement(test,body){this.type=syntax_1.Syntax.WhileStatement;this.test=test;this.body=body;}return WhileStatement;}();exports.WhileStatement=WhileStatement;var WithStatement=function(){function WithStatement(object,body){this.type=syntax_1.Syntax.WithStatement;this.object=object;this.body=body;}return WithStatement;}();exports.WithStatement=WithStatement;var YieldExpression=function(){function YieldExpression(argument,delegate){this.type=syntax_1.Syntax.YieldExpression;this.argument=argument;this.delegate=delegate;}return YieldExpression;}();exports.YieldExpression=YieldExpression;/***/},/* 8 */ /***/function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var assert_1=__webpack_require__(9);var error_handler_1=__webpack_require__(10);var messages_1=__webpack_require__(11);var Node=__webpack_require__(7);var scanner_1=__webpack_require__(12);var syntax_1=__webpack_require__(2);var token_1=__webpack_require__(13);var ArrowParameterPlaceHolder='ArrowParameterPlaceHolder';var Parser=function(){function Parser(code,options,delegate){if(options===void 0){options={};}this.config={range:typeof options.range==='boolean'&&options.range,loc:typeof options.loc==='boolean'&&options.loc,source:null,tokens:typeof options.tokens==='boolean'&&options.tokens,comment:typeof options.comment==='boolean'&&options.comment,tolerant:typeof options.tolerant==='boolean'&&options.tolerant};if(this.config.loc&&options.source&&options.source!==null){this.config.source=String(options.source);}this.delegate=delegate;this.errorHandler=new error_handler_1.ErrorHandler();this.errorHandler.tolerant=this.config.tolerant;this.scanner=new scanner_1.Scanner(code,this.errorHandler);this.scanner.trackComment=this.config.comment;this.operatorPrecedence={')':0,';':0,',':0,'=':0,']':0,'||':1,'&&':2,'|':3,'^':4,'&':5,'==':6,'!=':6,'===':6,'!==':6,'<':7,'>':7,'<=':7,'>=':7,'<<':8,'>>':8,'>>>':8,'+':9,'-':9,'*':11,'/':11,'%':11};this.lookahead={type:2/* EOF */,value:'',lineNumber:this.scanner.lineNumber,lineStart:0,start:0,end:0};this.hasLineTerminator=false;this.context={isModule:false,await:false,allowIn:true,allowStrictDirective:true,allowYield:true,firstCoverInitializedNameError:null,isAssignmentTarget:false,isBindingElement:false,inFunctionBody:false,inIteration:false,inSwitch:false,labelSet:{},strict:false};this.tokens=[];this.startMarker={index:0,line:this.scanner.lineNumber,column:0};this.lastMarker={index:0,line:this.scanner.lineNumber,column:0};this.nextToken();this.lastMarker={index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart};}Parser.prototype.throwError=function(messageFormat){var args=Array.prototype.slice.call(arguments,1);var msg=messageFormat.replace(/%(\d)/g,function(whole,idx){assert_1.assert(idx<args.length,'Message reference must be in range');return args[idx];});var index=this.lastMarker.index;var line=this.lastMarker.line;var column=this.lastMarker.column+1;throw this.errorHandler.createError(index,line,column,msg);};Parser.prototype.tolerateError=function(messageFormat){var args=Array.prototype.slice.call(arguments,1);var msg=messageFormat.replace(/%(\d)/g,function(whole,idx){assert_1.assert(idx<args.length,'Message reference must be in range');return args[idx];});var index=this.lastMarker.index;var line=this.scanner.lineNumber;var column=this.lastMarker.column+1;this.errorHandler.tolerateError(index,line,column,msg);};// Throw an exception because of the token.
Parser.prototype.unexpectedTokenError=function(token,message){var msg=message||messages_1.Messages.UnexpectedToken;var value;if(token){if(!message){msg=token.type===2/* EOF */?messages_1.Messages.UnexpectedEOS:token.type===3/* Identifier */?messages_1.Messages.UnexpectedIdentifier:token.type===6/* NumericLiteral */?messages_1.Messages.UnexpectedNumber:token.type===8/* StringLiteral */?messages_1.Messages.UnexpectedString:token.type===10/* Template */?messages_1.Messages.UnexpectedTemplate:messages_1.Messages.UnexpectedToken;if(token.type===4/* Keyword */){if(this.scanner.isFutureReservedWord(token.value)){msg=messages_1.Messages.UnexpectedReserved;}else if(this.context.strict&&this.scanner.isStrictModeReservedWord(token.value)){msg=messages_1.Messages.StrictReservedWord;}}}value=token.value;}else{value='ILLEGAL';}msg=msg.replace('%0',value);if(token&&typeof token.lineNumber==='number'){var index=token.start;var line=token.lineNumber;var lastMarkerLineStart=this.lastMarker.index-this.lastMarker.column;var column=token.start-lastMarkerLineStart+1;return this.errorHandler.createError(index,line,column,msg);}else{var index=this.lastMarker.index;var line=this.lastMarker.line;var column=this.lastMarker.column+1;return this.errorHandler.createError(index,line,column,msg);}};Parser.prototype.throwUnexpectedToken=function(token,message){throw this.unexpectedTokenError(token,message);};Parser.prototype.tolerateUnexpectedToken=function(token,message){this.errorHandler.tolerate(this.unexpectedTokenError(token,message));};Parser.prototype.collectComments=function(){if(!this.config.comment){this.scanner.scanComments();}else{var comments=this.scanner.scanComments();if(comments.length>0&&this.delegate){for(var i=0;i<comments.length;++i){var e=comments[i];var node=void 0;node={type:e.multiLine?'BlockComment':'LineComment',value:this.scanner.source.slice(e.slice[0],e.slice[1])};if(this.config.range){node.range=e.range;}if(this.config.loc){node.loc=e.loc;}var metadata={start:{line:e.loc.start.line,column:e.loc.start.column,offset:e.range[0]},end:{line:e.loc.end.line,column:e.loc.end.column,offset:e.range[1]}};this.delegate(node,metadata);}}}};// From internal representation to an external structure
Parser.prototype.getTokenRaw=function(token){return this.scanner.source.slice(token.start,token.end);};Parser.prototype.convertToken=function(token){var t={type:token_1.TokenName[token.type],value:this.getTokenRaw(token)};if(this.config.range){t.range=[token.start,token.end];}if(this.config.loc){t.loc={start:{line:this.startMarker.line,column:this.startMarker.column},end:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}};}if(token.type===9/* RegularExpression */){var pattern=token.pattern;var flags=token.flags;t.regex={pattern:pattern,flags:flags};}return t;};Parser.prototype.nextToken=function(){var token=this.lookahead;this.lastMarker.index=this.scanner.index;this.lastMarker.line=this.scanner.lineNumber;this.lastMarker.column=this.scanner.index-this.scanner.lineStart;this.collectComments();if(this.scanner.index!==this.startMarker.index){this.startMarker.index=this.scanner.index;this.startMarker.line=this.scanner.lineNumber;this.startMarker.column=this.scanner.index-this.scanner.lineStart;}var next=this.scanner.lex();this.hasLineTerminator=token.lineNumber!==next.lineNumber;if(next&&this.context.strict&&next.type===3/* Identifier */){if(this.scanner.isStrictModeReservedWord(next.value)){next.type=4/* Keyword */;}}this.lookahead=next;if(this.config.tokens&&next.type!==2/* EOF */){this.tokens.push(this.convertToken(next));}return token;};Parser.prototype.nextRegexToken=function(){this.collectComments();var token=this.scanner.scanRegExp();if(this.config.tokens){// Pop the previous token, '/' or '/='
// This is added from the lookahead token.
this.tokens.pop();this.tokens.push(this.convertToken(token));}// Prime the next lookahead.
this.lookahead=token;this.nextToken();return token;};Parser.prototype.createNode=function(){return{index:this.startMarker.index,line:this.startMarker.line,column:this.startMarker.column};};Parser.prototype.startNode=function(token,lastLineStart){if(lastLineStart===void 0){lastLineStart=0;}var column=token.start-token.lineStart;var line=token.lineNumber;if(column<0){column+=lastLineStart;line--;}return{index:token.start,line:line,column:column};};Parser.prototype.finalize=function(marker,node){if(this.config.range){node.range=[marker.index,this.lastMarker.index];}if(this.config.loc){node.loc={start:{line:marker.line,column:marker.column},end:{line:this.lastMarker.line,column:this.lastMarker.column}};if(this.config.source){node.loc.source=this.config.source;}}if(this.delegate){var metadata={start:{line:marker.line,column:marker.column,offset:marker.index},end:{line:this.lastMarker.line,column:this.lastMarker.column,offset:this.lastMarker.index}};this.delegate(node,metadata);}return node;};// Expect the next token to match the specified punctuator.
// If not, an exception will be thrown.
Parser.prototype.expect=function(value){var token=this.nextToken();if(token.type!==7/* Punctuator */||token.value!==value){this.throwUnexpectedToken(token);}};// Quietly expect a comma when in tolerant mode, otherwise delegates to expect().
Parser.prototype.expectCommaSeparator=function(){if(this.config.tolerant){var token=this.lookahead;if(token.type===7/* Punctuator */&&token.value===','){this.nextToken();}else if(token.type===7/* Punctuator */&&token.value===';'){this.nextToken();this.tolerateUnexpectedToken(token);}else{this.tolerateUnexpectedToken(token,messages_1.Messages.UnexpectedToken);}}else{this.expect(',');}};// Expect the next token to match the specified keyword.
// If not, an exception will be thrown.
Parser.prototype.expectKeyword=function(keyword){var token=this.nextToken();if(token.type!==4/* Keyword */||token.value!==keyword){this.throwUnexpectedToken(token);}};// Return true if the next token matches the specified punctuator.
Parser.prototype.match=function(value){return this.lookahead.type===7/* Punctuator */&&this.lookahead.value===value;};// Return true if the next token matches the specified keyword
Parser.prototype.matchKeyword=function(keyword){return this.lookahead.type===4/* Keyword */&&this.lookahead.value===keyword;};// Return true if the next token matches the specified contextual keyword
// (where an identifier is sometimes a keyword depending on the context)
Parser.prototype.matchContextualKeyword=function(keyword){return this.lookahead.type===3/* Identifier */&&this.lookahead.value===keyword;};// Return true if the next token is an assignment operator
Parser.prototype.matchAssign=function(){if(this.lookahead.type!==7/* Punctuator */){return false;}var op=this.lookahead.value;return op==='='||op==='*='||op==='**='||op==='/='||op==='%='||op==='+='||op==='-='||op==='<<='||op==='>>='||op==='>>>='||op==='&='||op==='^='||op==='|=';};// Cover grammar support.
//
// When an assignment expression position starts with an left parenthesis, the determination of the type
// of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
// or the first comma. This situation also defers the determination of all the expressions nested in the pair.
//
// There are three productions that can be parsed in a parentheses pair that needs to be determined
// after the outermost pair is closed. They are:
//
//   1. AssignmentExpression
//   2. BindingElements
//   3. AssignmentTargets
//
// In order to avoid exponential backtracking, we use two flags to denote if the production can be
// binding element or assignment target.
//
// The three productions have the relationship:
//
//   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression
//
// with a single exception that CoverInitializedName when used directly in an Expression, generates
// an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the
// first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
//
// isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not
// effect the current flags. This means the production the parser parses is only used as an expression. Therefore
// the CoverInitializedName check is conducted.
//
// inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates
// the flags outside of the parser. This means the production the parser parses is used as a part of a potential
// pattern. The CoverInitializedName check is deferred.
Parser.prototype.isolateCoverGrammar=function(parseFunction){var previousIsBindingElement=this.context.isBindingElement;var previousIsAssignmentTarget=this.context.isAssignmentTarget;var previousFirstCoverInitializedNameError=this.context.firstCoverInitializedNameError;this.context.isBindingElement=true;this.context.isAssignmentTarget=true;this.context.firstCoverInitializedNameError=null;var result=parseFunction.call(this);if(this.context.firstCoverInitializedNameError!==null){this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);}this.context.isBindingElement=previousIsBindingElement;this.context.isAssignmentTarget=previousIsAssignmentTarget;this.context.firstCoverInitializedNameError=previousFirstCoverInitializedNameError;return result;};Parser.prototype.inheritCoverGrammar=function(parseFunction){var previousIsBindingElement=this.context.isBindingElement;var previousIsAssignmentTarget=this.context.isAssignmentTarget;var previousFirstCoverInitializedNameError=this.context.firstCoverInitializedNameError;this.context.isBindingElement=true;this.context.isAssignmentTarget=true;this.context.firstCoverInitializedNameError=null;var result=parseFunction.call(this);this.context.isBindingElement=this.context.isBindingElement&&previousIsBindingElement;this.context.isAssignmentTarget=this.context.isAssignmentTarget&&previousIsAssignmentTarget;this.context.firstCoverInitializedNameError=previousFirstCoverInitializedNameError||this.context.firstCoverInitializedNameError;return result;};Parser.prototype.consumeSemicolon=function(){if(this.match(';')){this.nextToken();}else if(!this.hasLineTerminator){if(this.lookahead.type!==2/* EOF */&&!this.match('}')){this.throwUnexpectedToken(this.lookahead);}this.lastMarker.index=this.startMarker.index;this.lastMarker.line=this.startMarker.line;this.lastMarker.column=this.startMarker.column;}};// https://tc39.github.io/ecma262/#sec-primary-expression
Parser.prototype.parsePrimaryExpression=function(){var node=this.createNode();var expr;var token,raw;switch(this.lookahead.type){case 3/* Identifier */:if((this.context.isModule||this.context.await)&&this.lookahead.value==='await'){this.tolerateUnexpectedToken(this.lookahead);}expr=this.matchAsyncFunction()?this.parseFunctionExpression():this.finalize(node,new Node.Identifier(this.nextToken().value));break;case 6/* NumericLiteral */:case 8/* StringLiteral */:if(this.context.strict&&this.lookahead.octal){this.tolerateUnexpectedToken(this.lookahead,messages_1.Messages.StrictOctalLiteral);}this.context.isAssignmentTarget=false;this.context.isBindingElement=false;token=this.nextToken();raw=this.getTokenRaw(token);expr=this.finalize(node,new Node.Literal(token.value,raw));break;case 1/* BooleanLiteral */:this.context.isAssignmentTarget=false;this.context.isBindingElement=false;token=this.nextToken();raw=this.getTokenRaw(token);expr=this.finalize(node,new Node.Literal(token.value==='true',raw));break;case 5/* NullLiteral */:this.context.isAssignmentTarget=false;this.context.isBindingElement=false;token=this.nextToken();raw=this.getTokenRaw(token);expr=this.finalize(node,new Node.Literal(null,raw));break;case 10/* Template */:expr=this.parseTemplateLiteral();break;case 7/* Punctuator */:switch(this.lookahead.value){case'(':this.context.isBindingElement=false;expr=this.inheritCoverGrammar(this.parseGroupExpression);break;case'[':expr=this.inheritCoverGrammar(this.parseArrayInitializer);break;case'{':expr=this.inheritCoverGrammar(this.parseObjectInitializer);break;case'/':case'/=':this.context.isAssignmentTarget=false;this.context.isBindingElement=false;this.scanner.index=this.startMarker.index;token=this.nextRegexToken();raw=this.getTokenRaw(token);expr=this.finalize(node,new Node.RegexLiteral(token.regex,raw,token.pattern,token.flags));break;default:expr=this.throwUnexpectedToken(this.nextToken());}break;case 4/* Keyword */:if(!this.context.strict&&this.context.allowYield&&this.matchKeyword('yield')){expr=this.parseIdentifierName();}else if(!this.context.strict&&this.matchKeyword('let')){expr=this.finalize(node,new Node.Identifier(this.nextToken().value));}else{this.context.isAssignmentTarget=false;this.context.isBindingElement=false;if(this.matchKeyword('function')){expr=this.parseFunctionExpression();}else if(this.matchKeyword('this')){this.nextToken();expr=this.finalize(node,new Node.ThisExpression());}else if(this.matchKeyword('class')){expr=this.parseClassExpression();}else{expr=this.throwUnexpectedToken(this.nextToken());}}break;default:expr=this.throwUnexpectedToken(this.nextToken());}return expr;};// https://tc39.github.io/ecma262/#sec-array-initializer
Parser.prototype.parseSpreadElement=function(){var node=this.createNode();this.expect('...');var arg=this.inheritCoverGrammar(this.parseAssignmentExpression);return this.finalize(node,new Node.SpreadElement(arg));};Parser.prototype.parseArrayInitializer=function(){var node=this.createNode();var elements=[];this.expect('[');while(!this.match(']')){if(this.match(',')){this.nextToken();elements.push(null);}else if(this.match('...')){var element=this.parseSpreadElement();if(!this.match(']')){this.context.isAssignmentTarget=false;this.context.isBindingElement=false;this.expect(',');}elements.push(element);}else{elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));if(!this.match(']')){this.expect(',');}}}this.expect(']');return this.finalize(node,new Node.ArrayExpression(elements));};// https://tc39.github.io/ecma262/#sec-object-initializer
Parser.prototype.parsePropertyMethod=function(params){this.context.isAssignmentTarget=false;this.context.isBindingElement=false;var previousStrict=this.context.strict;var previousAllowStrictDirective=this.context.allowStrictDirective;this.context.allowStrictDirective=params.simple;var body=this.isolateCoverGrammar(this.parseFunctionSourceElements);if(this.context.strict&&params.firstRestricted){this.tolerateUnexpectedToken(params.firstRestricted,params.message);}if(this.context.strict&&params.stricted){this.tolerateUnexpectedToken(params.stricted,params.message);}this.context.strict=previousStrict;this.context.allowStrictDirective=previousAllowStrictDirective;return body;};Parser.prototype.parsePropertyMethodFunction=function(){var isGenerator=false;var node=this.createNode();var previousAllowYield=this.context.allowYield;this.context.allowYield=true;var params=this.parseFormalParameters();var method=this.parsePropertyMethod(params);this.context.allowYield=previousAllowYield;return this.finalize(node,new Node.FunctionExpression(null,params.params,method,isGenerator));};Parser.prototype.parsePropertyMethodAsyncFunction=function(){var node=this.createNode();var previousAllowYield=this.context.allowYield;var previousAwait=this.context.await;this.context.allowYield=false;this.context.await=true;var params=this.parseFormalParameters();var method=this.parsePropertyMethod(params);this.context.allowYield=previousAllowYield;this.context.await=previousAwait;return this.finalize(node,new Node.AsyncFunctionExpression(null,params.params,method));};Parser.prototype.parseObjectPropertyKey=function(){var node=this.createNode();var token=this.nextToken();var key;switch(token.type){case 8/* StringLiteral */:case 6/* NumericLiteral */:if(this.context.strict&&token.octal){this.tolerateUnexpectedToken(token,messages_1.Messages.StrictOctalLiteral);}var raw=this.getTokenRaw(token);key=this.finalize(node,new Node.Literal(token.value,raw));break;case 3/* Identifier */:case 1/* BooleanLiteral */:case 5/* NullLiteral */:case 4/* Keyword */:key=this.finalize(node,new Node.Identifier(token.value));break;case 7/* Punctuator */:if(token.value==='['){key=this.isolateCoverGrammar(this.parseAssignmentExpression);this.expect(']');}else{key=this.throwUnexpectedToken(token);}break;default:key=this.throwUnexpectedToken(token);}return key;};Parser.prototype.isPropertyKey=function(key,value){return key.type===syntax_1.Syntax.Identifier&&key.name===value||key.type===syntax_1.Syntax.Literal&&key.value===value;};Parser.prototype.parseObjectProperty=function(hasProto){var node=this.createNode();var token=this.lookahead;var kind;var key=null;var value=null;var computed=false;var method=false;var shorthand=false;var isAsync=false;if(token.type===3/* Identifier */){var id=token.value;this.nextToken();computed=this.match('[');isAsync=!this.hasLineTerminator&&id==='async'&&!this.match(':')&&!this.match('(')&&!this.match('*')&&!this.match(',');key=isAsync?this.parseObjectPropertyKey():this.finalize(node,new Node.Identifier(id));}else if(this.match('*')){this.nextToken();}else{computed=this.match('[');key=this.parseObjectPropertyKey();}var lookaheadPropertyKey=this.qualifiedPropertyName(this.lookahead);if(token.type===3/* Identifier */&&!isAsync&&token.value==='get'&&lookaheadPropertyKey){kind='get';computed=this.match('[');key=this.parseObjectPropertyKey();this.context.allowYield=false;value=this.parseGetterMethod();}else if(token.type===3/* Identifier */&&!isAsync&&token.value==='set'&&lookaheadPropertyKey){kind='set';computed=this.match('[');key=this.parseObjectPropertyKey();value=this.parseSetterMethod();}else if(token.type===7/* Punctuator */&&token.value==='*'&&lookaheadPropertyKey){kind='init';computed=this.match('[');key=this.parseObjectPropertyKey();value=this.parseGeneratorMethod();method=true;}else{if(!key){this.throwUnexpectedToken(this.lookahead);}kind='init';if(this.match(':')&&!isAsync){if(!computed&&this.isPropertyKey(key,'__proto__')){if(hasProto.value){this.tolerateError(messages_1.Messages.DuplicateProtoProperty);}hasProto.value=true;}this.nextToken();value=this.inheritCoverGrammar(this.parseAssignmentExpression);}else if(this.match('(')){value=isAsync?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction();method=true;}else if(token.type===3/* Identifier */){var id=this.finalize(node,new Node.Identifier(token.value));if(this.match('=')){this.context.firstCoverInitializedNameError=this.lookahead;this.nextToken();shorthand=true;var init=this.isolateCoverGrammar(this.parseAssignmentExpression);value=this.finalize(node,new Node.AssignmentPattern(id,init));}else{shorthand=true;value=id;}}else{this.throwUnexpectedToken(this.nextToken());}}return this.finalize(node,new Node.Property(kind,key,computed,value,method,shorthand));};Parser.prototype.parseObjectInitializer=function(){var node=this.createNode();this.expect('{');var properties=[];var hasProto={value:false};while(!this.match('}')){properties.push(this.parseObjectProperty(hasProto));if(!this.match('}')){this.expectCommaSeparator();}}this.expect('}');return this.finalize(node,new Node.ObjectExpression(properties));};// https://tc39.github.io/ecma262/#sec-template-literals
Parser.prototype.parseTemplateHead=function(){assert_1.assert(this.lookahead.head,'Template literal must start with a template head');var node=this.createNode();var token=this.nextToken();var raw=token.value;var cooked=token.cooked;return this.finalize(node,new Node.TemplateElement({raw:raw,cooked:cooked},token.tail));};Parser.prototype.parseTemplateElement=function(){if(this.lookahead.type!==10/* Template */){this.throwUnexpectedToken();}var node=this.createNode();var token=this.nextToken();var raw=token.value;var cooked=token.cooked;return this.finalize(node,new Node.TemplateElement({raw:raw,cooked:cooked},token.tail));};Parser.prototype.parseTemplateLiteral=function(){var node=this.createNode();var expressions=[];var quasis=[];var quasi=this.parseTemplateHead();quasis.push(quasi);while(!quasi.tail){expressions.push(this.parseExpression());quasi=this.parseTemplateElement();quasis.push(quasi);}return this.finalize(node,new Node.TemplateLiteral(quasis,expressions));};// https://tc39.github.io/ecma262/#sec-grouping-operator
Parser.prototype.reinterpretExpressionAsPattern=function(expr){switch(expr.type){case syntax_1.Syntax.Identifier:case syntax_1.Syntax.MemberExpression:case syntax_1.Syntax.RestElement:case syntax_1.Syntax.AssignmentPattern:break;case syntax_1.Syntax.SpreadElement:expr.type=syntax_1.Syntax.RestElement;this.reinterpretExpressionAsPattern(expr.argument);break;case syntax_1.Syntax.ArrayExpression:expr.type=syntax_1.Syntax.ArrayPattern;for(var i=0;i<expr.elements.length;i++){if(expr.elements[i]!==null){this.reinterpretExpressionAsPattern(expr.elements[i]);}}break;case syntax_1.Syntax.ObjectExpression:expr.type=syntax_1.Syntax.ObjectPattern;for(var i=0;i<expr.properties.length;i++){this.reinterpretExpressionAsPattern(expr.properties[i].value);}break;case syntax_1.Syntax.AssignmentExpression:expr.type=syntax_1.Syntax.AssignmentPattern;delete expr.operator;this.reinterpretExpressionAsPattern(expr.left);break;}};Parser.prototype.parseGroupExpression=function(){var expr;this.expect('(');if(this.match(')')){this.nextToken();if(!this.match('=>')){this.expect('=>');}expr={type:ArrowParameterPlaceHolder,params:[],async:false};}else{var startToken=this.lookahead;var params=[];if(this.match('...')){expr=this.parseRestElement(params);this.expect(')');if(!this.match('=>')){this.expect('=>');}expr={type:ArrowParameterPlaceHolder,params:[expr],async:false};}else{var arrow=false;this.context.isBindingElement=true;expr=this.inheritCoverGrammar(this.parseAssignmentExpression);if(this.match(',')){var expressions=[];this.context.isAssignmentTarget=false;expressions.push(expr);while(this.lookahead.type!==2/* EOF */){if(!this.match(',')){break;}this.nextToken();if(this.match(')')){this.nextToken();for(var i=0;i<expressions.length;i++){this.reinterpretExpressionAsPattern(expressions[i]);}arrow=true;expr={type:ArrowParameterPlaceHolder,params:expressions,async:false};}else if(this.match('...')){if(!this.context.isBindingElement){this.throwUnexpectedToken(this.lookahead);}expressions.push(this.parseRestElement(params));this.expect(')');if(!this.match('=>')){this.expect('=>');}this.context.isBindingElement=false;for(var i=0;i<expressions.length;i++){this.reinterpretExpressionAsPattern(expressions[i]);}arrow=true;expr={type:ArrowParameterPlaceHolder,params:expressions,async:false};}else{expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));}if(arrow){break;}}if(!arrow){expr=this.finalize(this.startNode(startToken),new Node.SequenceExpression(expressions));}}if(!arrow){this.expect(')');if(this.match('=>')){if(expr.type===syntax_1.Syntax.Identifier&&expr.name==='yield'){arrow=true;expr={type:ArrowParameterPlaceHolder,params:[expr],async:false};}if(!arrow){if(!this.context.isBindingElement){this.throwUnexpectedToken(this.lookahead);}if(expr.type===syntax_1.Syntax.SequenceExpression){for(var i=0;i<expr.expressions.length;i++){this.reinterpretExpressionAsPattern(expr.expressions[i]);}}else{this.reinterpretExpressionAsPattern(expr);}var parameters=expr.type===syntax_1.Syntax.SequenceExpression?expr.expressions:[expr];expr={type:ArrowParameterPlaceHolder,params:parameters,async:false};}}this.context.isBindingElement=false;}}}return expr;};// https://tc39.github.io/ecma262/#sec-left-hand-side-expressions
Parser.prototype.parseArguments=function(){this.expect('(');var args=[];if(!this.match(')')){while(true){var expr=this.match('...')?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAssignmentExpression);args.push(expr);if(this.match(')')){break;}this.expectCommaSeparator();if(this.match(')')){break;}}}this.expect(')');return args;};Parser.prototype.isIdentifierName=function(token){return token.type===3/* Identifier */||token.type===4/* Keyword */||token.type===1/* BooleanLiteral */||token.type===5/* NullLiteral */;};Parser.prototype.parseIdentifierName=function(){var node=this.createNode();var token=this.nextToken();if(!this.isIdentifierName(token)){this.throwUnexpectedToken(token);}return this.finalize(node,new Node.Identifier(token.value));};Parser.prototype.parseNewExpression=function(){var node=this.createNode();var id=this.parseIdentifierName();assert_1.assert(id.name==='new','New expression must start with `new`');var expr;if(this.match('.')){this.nextToken();if(this.lookahead.type===3/* Identifier */&&this.context.inFunctionBody&&this.lookahead.value==='target'){var property=this.parseIdentifierName();expr=new Node.MetaProperty(id,property);}else{this.throwUnexpectedToken(this.lookahead);}}else{var callee=this.isolateCoverGrammar(this.parseLeftHandSideExpression);var args=this.match('(')?this.parseArguments():[];expr=new Node.NewExpression(callee,args);this.context.isAssignmentTarget=false;this.context.isBindingElement=false;}return this.finalize(node,expr);};Parser.prototype.parseAsyncArgument=function(){var arg=this.parseAssignmentExpression();this.context.firstCoverInitializedNameError=null;return arg;};Parser.prototype.parseAsyncArguments=function(){this.expect('(');var args=[];if(!this.match(')')){while(true){var expr=this.match('...')?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAsyncArgument);args.push(expr);if(this.match(')')){break;}this.expectCommaSeparator();if(this.match(')')){break;}}}this.expect(')');return args;};Parser.prototype.parseLeftHandSideExpressionAllowCall=function(){var startToken=this.lookahead;var maybeAsync=this.matchContextualKeyword('async');var previousAllowIn=this.context.allowIn;this.context.allowIn=true;var expr;if(this.matchKeyword('super')&&this.context.inFunctionBody){expr=this.createNode();this.nextToken();expr=this.finalize(expr,new Node.Super());if(!this.match('(')&&!this.match('.')&&!this.match('[')){this.throwUnexpectedToken(this.lookahead);}}else{expr=this.inheritCoverGrammar(this.matchKeyword('new')?this.parseNewExpression:this.parsePrimaryExpression);}while(true){if(this.match('.')){this.context.isBindingElement=false;this.context.isAssignmentTarget=true;this.expect('.');var property=this.parseIdentifierName();expr=this.finalize(this.startNode(startToken),new Node.StaticMemberExpression(expr,property));}else if(this.match('(')){var asyncArrow=maybeAsync&&startToken.lineNumber===this.lookahead.lineNumber;this.context.isBindingElement=false;this.context.isAssignmentTarget=false;var args=asyncArrow?this.parseAsyncArguments():this.parseArguments();expr=this.finalize(this.startNode(startToken),new Node.CallExpression(expr,args));if(asyncArrow&&this.match('=>')){for(var i=0;i<args.length;++i){this.reinterpretExpressionAsPattern(args[i]);}expr={type:ArrowParameterPlaceHolder,params:args,async:true};}}else if(this.match('[')){this.context.isBindingElement=false;this.context.isAssignmentTarget=true;this.expect('[');var property=this.isolateCoverGrammar(this.parseExpression);this.expect(']');expr=this.finalize(this.startNode(startToken),new Node.ComputedMemberExpression(expr,property));}else if(this.lookahead.type===10/* Template */&&this.lookahead.head){var quasi=this.parseTemplateLiteral();expr=this.finalize(this.startNode(startToken),new Node.TaggedTemplateExpression(expr,quasi));}else{break;}}this.context.allowIn=previousAllowIn;return expr;};Parser.prototype.parseSuper=function(){var node=this.createNode();this.expectKeyword('super');if(!this.match('[')&&!this.match('.')){this.throwUnexpectedToken(this.lookahead);}return this.finalize(node,new Node.Super());};Parser.prototype.parseLeftHandSideExpression=function(){assert_1.assert(this.context.allowIn,'callee of new expression always allow in keyword.');var node=this.startNode(this.lookahead);var expr=this.matchKeyword('super')&&this.context.inFunctionBody?this.parseSuper():this.inheritCoverGrammar(this.matchKeyword('new')?this.parseNewExpression:this.parsePrimaryExpression);while(true){if(this.match('[')){this.context.isBindingElement=false;this.context.isAssignmentTarget=true;this.expect('[');var property=this.isolateCoverGrammar(this.parseExpression);this.expect(']');expr=this.finalize(node,new Node.ComputedMemberExpression(expr,property));}else if(this.match('.')){this.context.isBindingElement=false;this.context.isAssignmentTarget=true;this.expect('.');var property=this.parseIdentifierName();expr=this.finalize(node,new Node.StaticMemberExpression(expr,property));}else if(this.lookahead.type===10/* Template */&&this.lookahead.head){var quasi=this.parseTemplateLiteral();expr=this.finalize(node,new Node.TaggedTemplateExpression(expr,quasi));}else{break;}}return expr;};// https://tc39.github.io/ecma262/#sec-update-expressions
Parser.prototype.parseUpdateExpression=function(){var expr;var startToken=this.lookahead;if(this.match('++')||this.match('--')){var node=this.startNode(startToken);var token=this.nextToken();expr=this.inheritCoverGrammar(this.parseUnaryExpression);if(this.context.strict&&expr.type===syntax_1.Syntax.Identifier&&this.scanner.isRestrictedWord(expr.name)){this.tolerateError(messages_1.Messages.StrictLHSPrefix);}if(!this.context.isAssignmentTarget){this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);}var prefix=true;expr=this.finalize(node,new Node.UpdateExpression(token.value,expr,prefix));this.context.isAssignmentTarget=false;this.context.isBindingElement=false;}else{expr=this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);if(!this.hasLineTerminator&&this.lookahead.type===7/* Punctuator */){if(this.match('++')||this.match('--')){if(this.context.strict&&expr.type===syntax_1.Syntax.Identifier&&this.scanner.isRestrictedWord(expr.name)){this.tolerateError(messages_1.Messages.StrictLHSPostfix);}if(!this.context.isAssignmentTarget){this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);}this.context.isAssignmentTarget=false;this.context.isBindingElement=false;var operator=this.nextToken().value;var prefix=false;expr=this.finalize(this.startNode(startToken),new Node.UpdateExpression(operator,expr,prefix));}}}return expr;};// https://tc39.github.io/ecma262/#sec-unary-operators
Parser.prototype.parseAwaitExpression=function(){var node=this.createNode();this.nextToken();var argument=this.parseUnaryExpression();return this.finalize(node,new Node.AwaitExpression(argument));};Parser.prototype.parseUnaryExpression=function(){var expr;if(this.match('+')||this.match('-')||this.match('~')||this.match('!')||this.matchKeyword('delete')||this.matchKeyword('void')||this.matchKeyword('typeof')){var node=this.startNode(this.lookahead);var token=this.nextToken();expr=this.inheritCoverGrammar(this.parseUnaryExpression);expr=this.finalize(node,new Node.UnaryExpression(token.value,expr));if(this.context.strict&&expr.operator==='delete'&&expr.argument.type===syntax_1.Syntax.Identifier){this.tolerateError(messages_1.Messages.StrictDelete);}this.context.isAssignmentTarget=false;this.context.isBindingElement=false;}else if(this.context.await&&this.matchContextualKeyword('await')){expr=this.parseAwaitExpression();}else{expr=this.parseUpdateExpression();}return expr;};Parser.prototype.parseExponentiationExpression=function(){var startToken=this.lookahead;var expr=this.inheritCoverGrammar(this.parseUnaryExpression);if(expr.type!==syntax_1.Syntax.UnaryExpression&&this.match('**')){this.nextToken();this.context.isAssignmentTarget=false;this.context.isBindingElement=false;var left=expr;var right=this.isolateCoverGrammar(this.parseExponentiationExpression);expr=this.finalize(this.startNode(startToken),new Node.BinaryExpression('**',left,right));}return expr;};// https://tc39.github.io/ecma262/#sec-exp-operator
// https://tc39.github.io/ecma262/#sec-multiplicative-operators
// https://tc39.github.io/ecma262/#sec-additive-operators
// https://tc39.github.io/ecma262/#sec-bitwise-shift-operators
// https://tc39.github.io/ecma262/#sec-relational-operators
// https://tc39.github.io/ecma262/#sec-equality-operators
// https://tc39.github.io/ecma262/#sec-binary-bitwise-operators
// https://tc39.github.io/ecma262/#sec-binary-logical-operators
Parser.prototype.binaryPrecedence=function(token){var op=token.value;var precedence;if(token.type===7/* Punctuator */){precedence=this.operatorPrecedence[op]||0;}else if(token.type===4/* Keyword */){precedence=op==='instanceof'||this.context.allowIn&&op==='in'?7:0;}else{precedence=0;}return precedence;};Parser.prototype.parseBinaryExpression=function(){var startToken=this.lookahead;var expr=this.inheritCoverGrammar(this.parseExponentiationExpression);var token=this.lookahead;var prec=this.binaryPrecedence(token);if(prec>0){this.nextToken();this.context.isAssignmentTarget=false;this.context.isBindingElement=false;var markers=[startToken,this.lookahead];var left=expr;var right=this.isolateCoverGrammar(this.parseExponentiationExpression);var stack=[left,token.value,right];var precedences=[prec];while(true){prec=this.binaryPrecedence(this.lookahead);if(prec<=0){break;}// Reduce: make a binary expression from the three topmost entries.
while(stack.length>2&&prec<=precedences[precedences.length-1]){right=stack.pop();var operator=stack.pop();precedences.pop();left=stack.pop();markers.pop();var node=this.startNode(markers[markers.length-1]);stack.push(this.finalize(node,new Node.BinaryExpression(operator,left,right)));}// Shift.
stack.push(this.nextToken().value);precedences.push(prec);markers.push(this.lookahead);stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));}// Final reduce to clean-up the stack.
var i=stack.length-1;expr=stack[i];var lastMarker=markers.pop();while(i>1){var marker=markers.pop();var lastLineStart=lastMarker&&lastMarker.lineStart;var node=this.startNode(marker,lastLineStart);var operator=stack[i-1];expr=this.finalize(node,new Node.BinaryExpression(operator,stack[i-2],expr));i-=2;lastMarker=marker;}}return expr;};// https://tc39.github.io/ecma262/#sec-conditional-operator
Parser.prototype.parseConditionalExpression=function(){var startToken=this.lookahead;var expr=this.inheritCoverGrammar(this.parseBinaryExpression);if(this.match('?')){this.nextToken();var previousAllowIn=this.context.allowIn;this.context.allowIn=true;var consequent=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowIn=previousAllowIn;this.expect(':');var alternate=this.isolateCoverGrammar(this.parseAssignmentExpression);expr=this.finalize(this.startNode(startToken),new Node.ConditionalExpression(expr,consequent,alternate));this.context.isAssignmentTarget=false;this.context.isBindingElement=false;}return expr;};// https://tc39.github.io/ecma262/#sec-assignment-operators
Parser.prototype.checkPatternParam=function(options,param){switch(param.type){case syntax_1.Syntax.Identifier:this.validateParam(options,param,param.name);break;case syntax_1.Syntax.RestElement:this.checkPatternParam(options,param.argument);break;case syntax_1.Syntax.AssignmentPattern:this.checkPatternParam(options,param.left);break;case syntax_1.Syntax.ArrayPattern:for(var i=0;i<param.elements.length;i++){if(param.elements[i]!==null){this.checkPatternParam(options,param.elements[i]);}}break;case syntax_1.Syntax.ObjectPattern:for(var i=0;i<param.properties.length;i++){this.checkPatternParam(options,param.properties[i].value);}break;}options.simple=options.simple&&param instanceof Node.Identifier;};Parser.prototype.reinterpretAsCoverFormalsList=function(expr){var params=[expr];var options;var asyncArrow=false;switch(expr.type){case syntax_1.Syntax.Identifier:break;case ArrowParameterPlaceHolder:params=expr.params;asyncArrow=expr.async;break;default:return null;}options={simple:true,paramSet:{}};for(var i=0;i<params.length;++i){var param=params[i];if(param.type===syntax_1.Syntax.AssignmentPattern){if(param.right.type===syntax_1.Syntax.YieldExpression){if(param.right.argument){this.throwUnexpectedToken(this.lookahead);}param.right.type=syntax_1.Syntax.Identifier;param.right.name='yield';delete param.right.argument;delete param.right.delegate;}}else if(asyncArrow&&param.type===syntax_1.Syntax.Identifier&&param.name==='await'){this.throwUnexpectedToken(this.lookahead);}this.checkPatternParam(options,param);params[i]=param;}if(this.context.strict||!this.context.allowYield){for(var i=0;i<params.length;++i){var param=params[i];if(param.type===syntax_1.Syntax.YieldExpression){this.throwUnexpectedToken(this.lookahead);}}}if(options.message===messages_1.Messages.StrictParamDupe){var token=this.context.strict?options.stricted:options.firstRestricted;this.throwUnexpectedToken(token,options.message);}return{simple:options.simple,params:params,stricted:options.stricted,firstRestricted:options.firstRestricted,message:options.message};};Parser.prototype.parseAssignmentExpression=function(){var expr;if(!this.context.allowYield&&this.matchKeyword('yield')){expr=this.parseYieldExpression();}else{var startToken=this.lookahead;var token=startToken;expr=this.parseConditionalExpression();if(token.type===3/* Identifier */&&token.lineNumber===this.lookahead.lineNumber&&token.value==='async'){if(this.lookahead.type===3/* Identifier */||this.matchKeyword('yield')){var arg=this.parsePrimaryExpression();this.reinterpretExpressionAsPattern(arg);expr={type:ArrowParameterPlaceHolder,params:[arg],async:true};}}if(expr.type===ArrowParameterPlaceHolder||this.match('=>')){// https://tc39.github.io/ecma262/#sec-arrow-function-definitions
this.context.isAssignmentTarget=false;this.context.isBindingElement=false;var isAsync=expr.async;var list=this.reinterpretAsCoverFormalsList(expr);if(list){if(this.hasLineTerminator){this.tolerateUnexpectedToken(this.lookahead);}this.context.firstCoverInitializedNameError=null;var previousStrict=this.context.strict;var previousAllowStrictDirective=this.context.allowStrictDirective;this.context.allowStrictDirective=list.simple;var previousAllowYield=this.context.allowYield;var previousAwait=this.context.await;this.context.allowYield=true;this.context.await=isAsync;var node=this.startNode(startToken);this.expect('=>');var body=void 0;if(this.match('{')){var previousAllowIn=this.context.allowIn;this.context.allowIn=true;body=this.parseFunctionSourceElements();this.context.allowIn=previousAllowIn;}else{body=this.isolateCoverGrammar(this.parseAssignmentExpression);}var expression=body.type!==syntax_1.Syntax.BlockStatement;if(this.context.strict&&list.firstRestricted){this.throwUnexpectedToken(list.firstRestricted,list.message);}if(this.context.strict&&list.stricted){this.tolerateUnexpectedToken(list.stricted,list.message);}expr=isAsync?this.finalize(node,new Node.AsyncArrowFunctionExpression(list.params,body,expression)):this.finalize(node,new Node.ArrowFunctionExpression(list.params,body,expression));this.context.strict=previousStrict;this.context.allowStrictDirective=previousAllowStrictDirective;this.context.allowYield=previousAllowYield;this.context.await=previousAwait;}}else{if(this.matchAssign()){if(!this.context.isAssignmentTarget){this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);}if(this.context.strict&&expr.type===syntax_1.Syntax.Identifier){var id=expr;if(this.scanner.isRestrictedWord(id.name)){this.tolerateUnexpectedToken(token,messages_1.Messages.StrictLHSAssignment);}if(this.scanner.isStrictModeReservedWord(id.name)){this.tolerateUnexpectedToken(token,messages_1.Messages.StrictReservedWord);}}if(!this.match('=')){this.context.isAssignmentTarget=false;this.context.isBindingElement=false;}else{this.reinterpretExpressionAsPattern(expr);}token=this.nextToken();var operator=token.value;var right=this.isolateCoverGrammar(this.parseAssignmentExpression);expr=this.finalize(this.startNode(startToken),new Node.AssignmentExpression(operator,expr,right));this.context.firstCoverInitializedNameError=null;}}}return expr;};// https://tc39.github.io/ecma262/#sec-comma-operator
Parser.prototype.parseExpression=function(){var startToken=this.lookahead;var expr=this.isolateCoverGrammar(this.parseAssignmentExpression);if(this.match(',')){var expressions=[];expressions.push(expr);while(this.lookahead.type!==2/* EOF */){if(!this.match(',')){break;}this.nextToken();expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));}expr=this.finalize(this.startNode(startToken),new Node.SequenceExpression(expressions));}return expr;};// https://tc39.github.io/ecma262/#sec-block
Parser.prototype.parseStatementListItem=function(){var statement;this.context.isAssignmentTarget=true;this.context.isBindingElement=true;if(this.lookahead.type===4/* Keyword */){switch(this.lookahead.value){case'export':if(!this.context.isModule){this.tolerateUnexpectedToken(this.lookahead,messages_1.Messages.IllegalExportDeclaration);}statement=this.parseExportDeclaration();break;case'import':if(!this.context.isModule){this.tolerateUnexpectedToken(this.lookahead,messages_1.Messages.IllegalImportDeclaration);}statement=this.parseImportDeclaration();break;case'const':statement=this.parseLexicalDeclaration({inFor:false});break;case'function':statement=this.parseFunctionDeclaration();break;case'class':statement=this.parseClassDeclaration();break;case'let':statement=this.isLexicalDeclaration()?this.parseLexicalDeclaration({inFor:false}):this.parseStatement();break;default:statement=this.parseStatement();break;}}else{statement=this.parseStatement();}return statement;};Parser.prototype.parseBlock=function(){var node=this.createNode();this.expect('{');var block=[];while(true){if(this.match('}')){break;}block.push(this.parseStatementListItem());}this.expect('}');return this.finalize(node,new Node.BlockStatement(block));};// https://tc39.github.io/ecma262/#sec-let-and-const-declarations
Parser.prototype.parseLexicalBinding=function(kind,options){var node=this.createNode();var params=[];var id=this.parsePattern(params,kind);if(this.context.strict&&id.type===syntax_1.Syntax.Identifier){if(this.scanner.isRestrictedWord(id.name)){this.tolerateError(messages_1.Messages.StrictVarName);}}var init=null;if(kind==='const'){if(!this.matchKeyword('in')&&!this.matchContextualKeyword('of')){if(this.match('=')){this.nextToken();init=this.isolateCoverGrammar(this.parseAssignmentExpression);}else{this.throwError(messages_1.Messages.DeclarationMissingInitializer,'const');}}}else if(!options.inFor&&id.type!==syntax_1.Syntax.Identifier||this.match('=')){this.expect('=');init=this.isolateCoverGrammar(this.parseAssignmentExpression);}return this.finalize(node,new Node.VariableDeclarator(id,init));};Parser.prototype.parseBindingList=function(kind,options){var list=[this.parseLexicalBinding(kind,options)];while(this.match(',')){this.nextToken();list.push(this.parseLexicalBinding(kind,options));}return list;};Parser.prototype.isLexicalDeclaration=function(){var state=this.scanner.saveState();this.scanner.scanComments();var next=this.scanner.lex();this.scanner.restoreState(state);return next.type===3/* Identifier */||next.type===7/* Punctuator */&&next.value==='['||next.type===7/* Punctuator */&&next.value==='{'||next.type===4/* Keyword */&&next.value==='let'||next.type===4/* Keyword */&&next.value==='yield';};Parser.prototype.parseLexicalDeclaration=function(options){var node=this.createNode();var kind=this.nextToken().value;assert_1.assert(kind==='let'||kind==='const','Lexical declaration must be either let or const');var declarations=this.parseBindingList(kind,options);this.consumeSemicolon();return this.finalize(node,new Node.VariableDeclaration(declarations,kind));};// https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns
Parser.prototype.parseBindingRestElement=function(params,kind){var node=this.createNode();this.expect('...');var arg=this.parsePattern(params,kind);return this.finalize(node,new Node.RestElement(arg));};Parser.prototype.parseArrayPattern=function(params,kind){var node=this.createNode();this.expect('[');var elements=[];while(!this.match(']')){if(this.match(',')){this.nextToken();elements.push(null);}else{if(this.match('...')){elements.push(this.parseBindingRestElement(params,kind));break;}else{elements.push(this.parsePatternWithDefault(params,kind));}if(!this.match(']')){this.expect(',');}}}this.expect(']');return this.finalize(node,new Node.ArrayPattern(elements));};Parser.prototype.parsePropertyPattern=function(params,kind){var node=this.createNode();var computed=false;var shorthand=false;var method=false;var key;var value;if(this.lookahead.type===3/* Identifier */){var keyToken=this.lookahead;key=this.parseVariableIdentifier();var init=this.finalize(node,new Node.Identifier(keyToken.value));if(this.match('=')){params.push(keyToken);shorthand=true;this.nextToken();var expr=this.parseAssignmentExpression();value=this.finalize(this.startNode(keyToken),new Node.AssignmentPattern(init,expr));}else if(!this.match(':')){params.push(keyToken);shorthand=true;value=init;}else{this.expect(':');value=this.parsePatternWithDefault(params,kind);}}else{computed=this.match('[');key=this.parseObjectPropertyKey();this.expect(':');value=this.parsePatternWithDefault(params,kind);}return this.finalize(node,new Node.Property('init',key,computed,value,method,shorthand));};Parser.prototype.parseObjectPattern=function(params,kind){var node=this.createNode();var properties=[];this.expect('{');while(!this.match('}')){properties.push(this.parsePropertyPattern(params,kind));if(!this.match('}')){this.expect(',');}}this.expect('}');return this.finalize(node,new Node.ObjectPattern(properties));};Parser.prototype.parsePattern=function(params,kind){var pattern;if(this.match('[')){pattern=this.parseArrayPattern(params,kind);}else if(this.match('{')){pattern=this.parseObjectPattern(params,kind);}else{if(this.matchKeyword('let')&&(kind==='const'||kind==='let')){this.tolerateUnexpectedToken(this.lookahead,messages_1.Messages.LetInLexicalBinding);}params.push(this.lookahead);pattern=this.parseVariableIdentifier(kind);}return pattern;};Parser.prototype.parsePatternWithDefault=function(params,kind){var startToken=this.lookahead;var pattern=this.parsePattern(params,kind);if(this.match('=')){this.nextToken();var previousAllowYield=this.context.allowYield;this.context.allowYield=true;var right=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowYield=previousAllowYield;pattern=this.finalize(this.startNode(startToken),new Node.AssignmentPattern(pattern,right));}return pattern;};// https://tc39.github.io/ecma262/#sec-variable-statement
Parser.prototype.parseVariableIdentifier=function(kind){var node=this.createNode();var token=this.nextToken();if(token.type===4/* Keyword */&&token.value==='yield'){if(this.context.strict){this.tolerateUnexpectedToken(token,messages_1.Messages.StrictReservedWord);}else if(!this.context.allowYield){this.throwUnexpectedToken(token);}}else if(token.type!==3/* Identifier */){if(this.context.strict&&token.type===4/* Keyword */&&this.scanner.isStrictModeReservedWord(token.value)){this.tolerateUnexpectedToken(token,messages_1.Messages.StrictReservedWord);}else{if(this.context.strict||token.value!=='let'||kind!=='var'){this.throwUnexpectedToken(token);}}}else if((this.context.isModule||this.context.await)&&token.type===3/* Identifier */&&token.value==='await'){this.tolerateUnexpectedToken(token);}return this.finalize(node,new Node.Identifier(token.value));};Parser.prototype.parseVariableDeclaration=function(options){var node=this.createNode();var params=[];var id=this.parsePattern(params,'var');if(this.context.strict&&id.type===syntax_1.Syntax.Identifier){if(this.scanner.isRestrictedWord(id.name)){this.tolerateError(messages_1.Messages.StrictVarName);}}var init=null;if(this.match('=')){this.nextToken();init=this.isolateCoverGrammar(this.parseAssignmentExpression);}else if(id.type!==syntax_1.Syntax.Identifier&&!options.inFor){this.expect('=');}return this.finalize(node,new Node.VariableDeclarator(id,init));};Parser.prototype.parseVariableDeclarationList=function(options){var opt={inFor:options.inFor};var list=[];list.push(this.parseVariableDeclaration(opt));while(this.match(',')){this.nextToken();list.push(this.parseVariableDeclaration(opt));}return list;};Parser.prototype.parseVariableStatement=function(){var node=this.createNode();this.expectKeyword('var');var declarations=this.parseVariableDeclarationList({inFor:false});this.consumeSemicolon();return this.finalize(node,new Node.VariableDeclaration(declarations,'var'));};// https://tc39.github.io/ecma262/#sec-empty-statement
Parser.prototype.parseEmptyStatement=function(){var node=this.createNode();this.expect(';');return this.finalize(node,new Node.EmptyStatement());};// https://tc39.github.io/ecma262/#sec-expression-statement
Parser.prototype.parseExpressionStatement=function(){var node=this.createNode();var expr=this.parseExpression();this.consumeSemicolon();return this.finalize(node,new Node.ExpressionStatement(expr));};// https://tc39.github.io/ecma262/#sec-if-statement
Parser.prototype.parseIfClause=function(){if(this.context.strict&&this.matchKeyword('function')){this.tolerateError(messages_1.Messages.StrictFunction);}return this.parseStatement();};Parser.prototype.parseIfStatement=function(){var node=this.createNode();var consequent;var alternate=null;this.expectKeyword('if');this.expect('(');var test=this.parseExpression();if(!this.match(')')&&this.config.tolerant){this.tolerateUnexpectedToken(this.nextToken());consequent=this.finalize(this.createNode(),new Node.EmptyStatement());}else{this.expect(')');consequent=this.parseIfClause();if(this.matchKeyword('else')){this.nextToken();alternate=this.parseIfClause();}}return this.finalize(node,new Node.IfStatement(test,consequent,alternate));};// https://tc39.github.io/ecma262/#sec-do-while-statement
Parser.prototype.parseDoWhileStatement=function(){var node=this.createNode();this.expectKeyword('do');var previousInIteration=this.context.inIteration;this.context.inIteration=true;var body=this.parseStatement();this.context.inIteration=previousInIteration;this.expectKeyword('while');this.expect('(');var test=this.parseExpression();if(!this.match(')')&&this.config.tolerant){this.tolerateUnexpectedToken(this.nextToken());}else{this.expect(')');if(this.match(';')){this.nextToken();}}return this.finalize(node,new Node.DoWhileStatement(body,test));};// https://tc39.github.io/ecma262/#sec-while-statement
Parser.prototype.parseWhileStatement=function(){var node=this.createNode();var body;this.expectKeyword('while');this.expect('(');var test=this.parseExpression();if(!this.match(')')&&this.config.tolerant){this.tolerateUnexpectedToken(this.nextToken());body=this.finalize(this.createNode(),new Node.EmptyStatement());}else{this.expect(')');var previousInIteration=this.context.inIteration;this.context.inIteration=true;body=this.parseStatement();this.context.inIteration=previousInIteration;}return this.finalize(node,new Node.WhileStatement(test,body));};// https://tc39.github.io/ecma262/#sec-for-statement
// https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements
Parser.prototype.parseForStatement=function(){var init=null;var test=null;var update=null;var forIn=true;var left,right;var node=this.createNode();this.expectKeyword('for');this.expect('(');if(this.match(';')){this.nextToken();}else{if(this.matchKeyword('var')){init=this.createNode();this.nextToken();var previousAllowIn=this.context.allowIn;this.context.allowIn=false;var declarations=this.parseVariableDeclarationList({inFor:true});this.context.allowIn=previousAllowIn;if(declarations.length===1&&this.matchKeyword('in')){var decl=declarations[0];if(decl.init&&(decl.id.type===syntax_1.Syntax.ArrayPattern||decl.id.type===syntax_1.Syntax.ObjectPattern||this.context.strict)){this.tolerateError(messages_1.Messages.ForInOfLoopInitializer,'for-in');}init=this.finalize(init,new Node.VariableDeclaration(declarations,'var'));this.nextToken();left=init;right=this.parseExpression();init=null;}else if(declarations.length===1&&declarations[0].init===null&&this.matchContextualKeyword('of')){init=this.finalize(init,new Node.VariableDeclaration(declarations,'var'));this.nextToken();left=init;right=this.parseAssignmentExpression();init=null;forIn=false;}else{init=this.finalize(init,new Node.VariableDeclaration(declarations,'var'));this.expect(';');}}else if(this.matchKeyword('const')||this.matchKeyword('let')){init=this.createNode();var kind=this.nextToken().value;if(!this.context.strict&&this.lookahead.value==='in'){init=this.finalize(init,new Node.Identifier(kind));this.nextToken();left=init;right=this.parseExpression();init=null;}else{var previousAllowIn=this.context.allowIn;this.context.allowIn=false;var declarations=this.parseBindingList(kind,{inFor:true});this.context.allowIn=previousAllowIn;if(declarations.length===1&&declarations[0].init===null&&this.matchKeyword('in')){init=this.finalize(init,new Node.VariableDeclaration(declarations,kind));this.nextToken();left=init;right=this.parseExpression();init=null;}else if(declarations.length===1&&declarations[0].init===null&&this.matchContextualKeyword('of')){init=this.finalize(init,new Node.VariableDeclaration(declarations,kind));this.nextToken();left=init;right=this.parseAssignmentExpression();init=null;forIn=false;}else{this.consumeSemicolon();init=this.finalize(init,new Node.VariableDeclaration(declarations,kind));}}}else{var initStartToken=this.lookahead;var previousAllowIn=this.context.allowIn;this.context.allowIn=false;init=this.inheritCoverGrammar(this.parseAssignmentExpression);this.context.allowIn=previousAllowIn;if(this.matchKeyword('in')){if(!this.context.isAssignmentTarget||init.type===syntax_1.Syntax.AssignmentExpression){this.tolerateError(messages_1.Messages.InvalidLHSInForIn);}this.nextToken();this.reinterpretExpressionAsPattern(init);left=init;right=this.parseExpression();init=null;}else if(this.matchContextualKeyword('of')){if(!this.context.isAssignmentTarget||init.type===syntax_1.Syntax.AssignmentExpression){this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);}this.nextToken();this.reinterpretExpressionAsPattern(init);left=init;right=this.parseAssignmentExpression();init=null;forIn=false;}else{if(this.match(',')){var initSeq=[init];while(this.match(',')){this.nextToken();initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));}init=this.finalize(this.startNode(initStartToken),new Node.SequenceExpression(initSeq));}this.expect(';');}}}if(typeof left==='undefined'){if(!this.match(';')){test=this.parseExpression();}this.expect(';');if(!this.match(')')){update=this.parseExpression();}}var body;if(!this.match(')')&&this.config.tolerant){this.tolerateUnexpectedToken(this.nextToken());body=this.finalize(this.createNode(),new Node.EmptyStatement());}else{this.expect(')');var previousInIteration=this.context.inIteration;this.context.inIteration=true;body=this.isolateCoverGrammar(this.parseStatement);this.context.inIteration=previousInIteration;}return typeof left==='undefined'?this.finalize(node,new Node.ForStatement(init,test,update,body)):forIn?this.finalize(node,new Node.ForInStatement(left,right,body)):this.finalize(node,new Node.ForOfStatement(left,right,body));};// https://tc39.github.io/ecma262/#sec-continue-statement
Parser.prototype.parseContinueStatement=function(){var node=this.createNode();this.expectKeyword('continue');var label=null;if(this.lookahead.type===3/* Identifier */&&!this.hasLineTerminator){var id=this.parseVariableIdentifier();label=id;var key='$'+id.name;if(!Object.prototype.hasOwnProperty.call(this.context.labelSet,key)){this.throwError(messages_1.Messages.UnknownLabel,id.name);}}this.consumeSemicolon();if(label===null&&!this.context.inIteration){this.throwError(messages_1.Messages.IllegalContinue);}return this.finalize(node,new Node.ContinueStatement(label));};// https://tc39.github.io/ecma262/#sec-break-statement
Parser.prototype.parseBreakStatement=function(){var node=this.createNode();this.expectKeyword('break');var label=null;if(this.lookahead.type===3/* Identifier */&&!this.hasLineTerminator){var id=this.parseVariableIdentifier();var key='$'+id.name;if(!Object.prototype.hasOwnProperty.call(this.context.labelSet,key)){this.throwError(messages_1.Messages.UnknownLabel,id.name);}label=id;}this.consumeSemicolon();if(label===null&&!this.context.inIteration&&!this.context.inSwitch){this.throwError(messages_1.Messages.IllegalBreak);}return this.finalize(node,new Node.BreakStatement(label));};// https://tc39.github.io/ecma262/#sec-return-statement
Parser.prototype.parseReturnStatement=function(){if(!this.context.inFunctionBody){this.tolerateError(messages_1.Messages.IllegalReturn);}var node=this.createNode();this.expectKeyword('return');var hasArgument=!this.match(';')&&!this.match('}')&&!this.hasLineTerminator&&this.lookahead.type!==2/* EOF */||this.lookahead.type===8/* StringLiteral */||this.lookahead.type===10/* Template */;var argument=hasArgument?this.parseExpression():null;this.consumeSemicolon();return this.finalize(node,new Node.ReturnStatement(argument));};// https://tc39.github.io/ecma262/#sec-with-statement
Parser.prototype.parseWithStatement=function(){if(this.context.strict){this.tolerateError(messages_1.Messages.StrictModeWith);}var node=this.createNode();var body;this.expectKeyword('with');this.expect('(');var object=this.parseExpression();if(!this.match(')')&&this.config.tolerant){this.tolerateUnexpectedToken(this.nextToken());body=this.finalize(this.createNode(),new Node.EmptyStatement());}else{this.expect(')');body=this.parseStatement();}return this.finalize(node,new Node.WithStatement(object,body));};// https://tc39.github.io/ecma262/#sec-switch-statement
Parser.prototype.parseSwitchCase=function(){var node=this.createNode();var test;if(this.matchKeyword('default')){this.nextToken();test=null;}else{this.expectKeyword('case');test=this.parseExpression();}this.expect(':');var consequent=[];while(true){if(this.match('}')||this.matchKeyword('default')||this.matchKeyword('case')){break;}consequent.push(this.parseStatementListItem());}return this.finalize(node,new Node.SwitchCase(test,consequent));};Parser.prototype.parseSwitchStatement=function(){var node=this.createNode();this.expectKeyword('switch');this.expect('(');var discriminant=this.parseExpression();this.expect(')');var previousInSwitch=this.context.inSwitch;this.context.inSwitch=true;var cases=[];var defaultFound=false;this.expect('{');while(true){if(this.match('}')){break;}var clause=this.parseSwitchCase();if(clause.test===null){if(defaultFound){this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);}defaultFound=true;}cases.push(clause);}this.expect('}');this.context.inSwitch=previousInSwitch;return this.finalize(node,new Node.SwitchStatement(discriminant,cases));};// https://tc39.github.io/ecma262/#sec-labelled-statements
Parser.prototype.parseLabelledStatement=function(){var node=this.createNode();var expr=this.parseExpression();var statement;if(expr.type===syntax_1.Syntax.Identifier&&this.match(':')){this.nextToken();var id=expr;var key='$'+id.name;if(Object.prototype.hasOwnProperty.call(this.context.labelSet,key)){this.throwError(messages_1.Messages.Redeclaration,'Label',id.name);}this.context.labelSet[key]=true;var body=void 0;if(this.matchKeyword('class')){this.tolerateUnexpectedToken(this.lookahead);body=this.parseClassDeclaration();}else if(this.matchKeyword('function')){var token=this.lookahead;var declaration=this.parseFunctionDeclaration();if(this.context.strict){this.tolerateUnexpectedToken(token,messages_1.Messages.StrictFunction);}else if(declaration.generator){this.tolerateUnexpectedToken(token,messages_1.Messages.GeneratorInLegacyContext);}body=declaration;}else{body=this.parseStatement();}delete this.context.labelSet[key];statement=new Node.LabeledStatement(id,body);}else{this.consumeSemicolon();statement=new Node.ExpressionStatement(expr);}return this.finalize(node,statement);};// https://tc39.github.io/ecma262/#sec-throw-statement
Parser.prototype.parseThrowStatement=function(){var node=this.createNode();this.expectKeyword('throw');if(this.hasLineTerminator){this.throwError(messages_1.Messages.NewlineAfterThrow);}var argument=this.parseExpression();this.consumeSemicolon();return this.finalize(node,new Node.ThrowStatement(argument));};// https://tc39.github.io/ecma262/#sec-try-statement
Parser.prototype.parseCatchClause=function(){var node=this.createNode();this.expectKeyword('catch');this.expect('(');if(this.match(')')){this.throwUnexpectedToken(this.lookahead);}var params=[];var param=this.parsePattern(params);var paramMap={};for(var i=0;i<params.length;i++){var key='$'+params[i].value;if(Object.prototype.hasOwnProperty.call(paramMap,key)){this.tolerateError(messages_1.Messages.DuplicateBinding,params[i].value);}paramMap[key]=true;}if(this.context.strict&&param.type===syntax_1.Syntax.Identifier){if(this.scanner.isRestrictedWord(param.name)){this.tolerateError(messages_1.Messages.StrictCatchVariable);}}this.expect(')');var body=this.parseBlock();return this.finalize(node,new Node.CatchClause(param,body));};Parser.prototype.parseFinallyClause=function(){this.expectKeyword('finally');return this.parseBlock();};Parser.prototype.parseTryStatement=function(){var node=this.createNode();this.expectKeyword('try');var block=this.parseBlock();var handler=this.matchKeyword('catch')?this.parseCatchClause():null;var finalizer=this.matchKeyword('finally')?this.parseFinallyClause():null;if(!handler&&!finalizer){this.throwError(messages_1.Messages.NoCatchOrFinally);}return this.finalize(node,new Node.TryStatement(block,handler,finalizer));};// https://tc39.github.io/ecma262/#sec-debugger-statement
Parser.prototype.parseDebuggerStatement=function(){var node=this.createNode();this.expectKeyword('debugger');this.consumeSemicolon();return this.finalize(node,new Node.DebuggerStatement());};// https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations
Parser.prototype.parseStatement=function(){var statement;switch(this.lookahead.type){case 1/* BooleanLiteral */:case 5/* NullLiteral */:case 6/* NumericLiteral */:case 8/* StringLiteral */:case 10/* Template */:case 9/* RegularExpression */:statement=this.parseExpressionStatement();break;case 7/* Punctuator */:var value=this.lookahead.value;if(value==='{'){statement=this.parseBlock();}else if(value==='('){statement=this.parseExpressionStatement();}else if(value===';'){statement=this.parseEmptyStatement();}else{statement=this.parseExpressionStatement();}break;case 3/* Identifier */:statement=this.matchAsyncFunction()?this.parseFunctionDeclaration():this.parseLabelledStatement();break;case 4/* Keyword */:switch(this.lookahead.value){case'break':statement=this.parseBreakStatement();break;case'continue':statement=this.parseContinueStatement();break;case'debugger':statement=this.parseDebuggerStatement();break;case'do':statement=this.parseDoWhileStatement();break;case'for':statement=this.parseForStatement();break;case'function':statement=this.parseFunctionDeclaration();break;case'if':statement=this.parseIfStatement();break;case'return':statement=this.parseReturnStatement();break;case'switch':statement=this.parseSwitchStatement();break;case'throw':statement=this.parseThrowStatement();break;case'try':statement=this.parseTryStatement();break;case'var':statement=this.parseVariableStatement();break;case'while':statement=this.parseWhileStatement();break;case'with':statement=this.parseWithStatement();break;default:statement=this.parseExpressionStatement();break;}break;default:statement=this.throwUnexpectedToken(this.lookahead);}return statement;};// https://tc39.github.io/ecma262/#sec-function-definitions
Parser.prototype.parseFunctionSourceElements=function(){var node=this.createNode();this.expect('{');var body=this.parseDirectivePrologues();var previousLabelSet=this.context.labelSet;var previousInIteration=this.context.inIteration;var previousInSwitch=this.context.inSwitch;var previousInFunctionBody=this.context.inFunctionBody;this.context.labelSet={};this.context.inIteration=false;this.context.inSwitch=false;this.context.inFunctionBody=true;while(this.lookahead.type!==2/* EOF */){if(this.match('}')){break;}body.push(this.parseStatementListItem());}this.expect('}');this.context.labelSet=previousLabelSet;this.context.inIteration=previousInIteration;this.context.inSwitch=previousInSwitch;this.context.inFunctionBody=previousInFunctionBody;return this.finalize(node,new Node.BlockStatement(body));};Parser.prototype.validateParam=function(options,param,name){var key='$'+name;if(this.context.strict){if(this.scanner.isRestrictedWord(name)){options.stricted=param;options.message=messages_1.Messages.StrictParamName;}if(Object.prototype.hasOwnProperty.call(options.paramSet,key)){options.stricted=param;options.message=messages_1.Messages.StrictParamDupe;}}else if(!options.firstRestricted){if(this.scanner.isRestrictedWord(name)){options.firstRestricted=param;options.message=messages_1.Messages.StrictParamName;}else if(this.scanner.isStrictModeReservedWord(name)){options.firstRestricted=param;options.message=messages_1.Messages.StrictReservedWord;}else if(Object.prototype.hasOwnProperty.call(options.paramSet,key)){options.stricted=param;options.message=messages_1.Messages.StrictParamDupe;}}/* istanbul ignore next */if(typeof Object.defineProperty==='function'){Object.defineProperty(options.paramSet,key,{value:true,enumerable:true,writable:true,configurable:true});}else{options.paramSet[key]=true;}};Parser.prototype.parseRestElement=function(params){var node=this.createNode();this.expect('...');var arg=this.parsePattern(params);if(this.match('=')){this.throwError(messages_1.Messages.DefaultRestParameter);}if(!this.match(')')){this.throwError(messages_1.Messages.ParameterAfterRestParameter);}return this.finalize(node,new Node.RestElement(arg));};Parser.prototype.parseFormalParameter=function(options){var params=[];var param=this.match('...')?this.parseRestElement(params):this.parsePatternWithDefault(params);for(var i=0;i<params.length;i++){this.validateParam(options,params[i],params[i].value);}options.simple=options.simple&&param instanceof Node.Identifier;options.params.push(param);};Parser.prototype.parseFormalParameters=function(firstRestricted){var options;options={simple:true,params:[],firstRestricted:firstRestricted};this.expect('(');if(!this.match(')')){options.paramSet={};while(this.lookahead.type!==2/* EOF */){this.parseFormalParameter(options);if(this.match(')')){break;}this.expect(',');if(this.match(')')){break;}}}this.expect(')');return{simple:options.simple,params:options.params,stricted:options.stricted,firstRestricted:options.firstRestricted,message:options.message};};Parser.prototype.matchAsyncFunction=function(){var match=this.matchContextualKeyword('async');if(match){var state=this.scanner.saveState();this.scanner.scanComments();var next=this.scanner.lex();this.scanner.restoreState(state);match=state.lineNumber===next.lineNumber&&next.type===4/* Keyword */&&next.value==='function';}return match;};Parser.prototype.parseFunctionDeclaration=function(identifierIsOptional){var node=this.createNode();var isAsync=this.matchContextualKeyword('async');if(isAsync){this.nextToken();}this.expectKeyword('function');var isGenerator=isAsync?false:this.match('*');if(isGenerator){this.nextToken();}var message;var id=null;var firstRestricted=null;if(!identifierIsOptional||!this.match('(')){var token=this.lookahead;id=this.parseVariableIdentifier();if(this.context.strict){if(this.scanner.isRestrictedWord(token.value)){this.tolerateUnexpectedToken(token,messages_1.Messages.StrictFunctionName);}}else{if(this.scanner.isRestrictedWord(token.value)){firstRestricted=token;message=messages_1.Messages.StrictFunctionName;}else if(this.scanner.isStrictModeReservedWord(token.value)){firstRestricted=token;message=messages_1.Messages.StrictReservedWord;}}}var previousAllowAwait=this.context.await;var previousAllowYield=this.context.allowYield;this.context.await=isAsync;this.context.allowYield=!isGenerator;var formalParameters=this.parseFormalParameters(firstRestricted);var params=formalParameters.params;var stricted=formalParameters.stricted;firstRestricted=formalParameters.firstRestricted;if(formalParameters.message){message=formalParameters.message;}var previousStrict=this.context.strict;var previousAllowStrictDirective=this.context.allowStrictDirective;this.context.allowStrictDirective=formalParameters.simple;var body=this.parseFunctionSourceElements();if(this.context.strict&&firstRestricted){this.throwUnexpectedToken(firstRestricted,message);}if(this.context.strict&&stricted){this.tolerateUnexpectedToken(stricted,message);}this.context.strict=previousStrict;this.context.allowStrictDirective=previousAllowStrictDirective;this.context.await=previousAllowAwait;this.context.allowYield=previousAllowYield;return isAsync?this.finalize(node,new Node.AsyncFunctionDeclaration(id,params,body)):this.finalize(node,new Node.FunctionDeclaration(id,params,body,isGenerator));};Parser.prototype.parseFunctionExpression=function(){var node=this.createNode();var isAsync=this.matchContextualKeyword('async');if(isAsync){this.nextToken();}this.expectKeyword('function');var isGenerator=isAsync?false:this.match('*');if(isGenerator){this.nextToken();}var message;var id=null;var firstRestricted;var previousAllowAwait=this.context.await;var previousAllowYield=this.context.allowYield;this.context.await=isAsync;this.context.allowYield=!isGenerator;if(!this.match('(')){var token=this.lookahead;id=!this.context.strict&&!isGenerator&&this.matchKeyword('yield')?this.parseIdentifierName():this.parseVariableIdentifier();if(this.context.strict){if(this.scanner.isRestrictedWord(token.value)){this.tolerateUnexpectedToken(token,messages_1.Messages.StrictFunctionName);}}else{if(this.scanner.isRestrictedWord(token.value)){firstRestricted=token;message=messages_1.Messages.StrictFunctionName;}else if(this.scanner.isStrictModeReservedWord(token.value)){firstRestricted=token;message=messages_1.Messages.StrictReservedWord;}}}var formalParameters=this.parseFormalParameters(firstRestricted);var params=formalParameters.params;var stricted=formalParameters.stricted;firstRestricted=formalParameters.firstRestricted;if(formalParameters.message){message=formalParameters.message;}var previousStrict=this.context.strict;var previousAllowStrictDirective=this.context.allowStrictDirective;this.context.allowStrictDirective=formalParameters.simple;var body=this.parseFunctionSourceElements();if(this.context.strict&&firstRestricted){this.throwUnexpectedToken(firstRestricted,message);}if(this.context.strict&&stricted){this.tolerateUnexpectedToken(stricted,message);}this.context.strict=previousStrict;this.context.allowStrictDirective=previousAllowStrictDirective;this.context.await=previousAllowAwait;this.context.allowYield=previousAllowYield;return isAsync?this.finalize(node,new Node.AsyncFunctionExpression(id,params,body)):this.finalize(node,new Node.FunctionExpression(id,params,body,isGenerator));};// https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive
Parser.prototype.parseDirective=function(){var token=this.lookahead;var node=this.createNode();var expr=this.parseExpression();var directive=expr.type===syntax_1.Syntax.Literal?this.getTokenRaw(token).slice(1,-1):null;this.consumeSemicolon();return this.finalize(node,directive?new Node.Directive(expr,directive):new Node.ExpressionStatement(expr));};Parser.prototype.parseDirectivePrologues=function(){var firstRestricted=null;var body=[];while(true){var token=this.lookahead;if(token.type!==8/* StringLiteral */){break;}var statement=this.parseDirective();body.push(statement);var directive=statement.directive;if(typeof directive!=='string'){break;}if(directive==='use strict'){this.context.strict=true;if(firstRestricted){this.tolerateUnexpectedToken(firstRestricted,messages_1.Messages.StrictOctalLiteral);}if(!this.context.allowStrictDirective){this.tolerateUnexpectedToken(token,messages_1.Messages.IllegalLanguageModeDirective);}}else{if(!firstRestricted&&token.octal){firstRestricted=token;}}}return body;};// https://tc39.github.io/ecma262/#sec-method-definitions
Parser.prototype.qualifiedPropertyName=function(token){switch(token.type){case 3/* Identifier */:case 8/* StringLiteral */:case 1/* BooleanLiteral */:case 5/* NullLiteral */:case 6/* NumericLiteral */:case 4/* Keyword */:return true;case 7/* Punctuator */:return token.value==='[';}return false;};Parser.prototype.parseGetterMethod=function(){var node=this.createNode();var isGenerator=false;var previousAllowYield=this.context.allowYield;this.context.allowYield=!isGenerator;var formalParameters=this.parseFormalParameters();if(formalParameters.params.length>0){this.tolerateError(messages_1.Messages.BadGetterArity);}var method=this.parsePropertyMethod(formalParameters);this.context.allowYield=previousAllowYield;return this.finalize(node,new Node.FunctionExpression(null,formalParameters.params,method,isGenerator));};Parser.prototype.parseSetterMethod=function(){var node=this.createNode();var isGenerator=false;var previousAllowYield=this.context.allowYield;this.context.allowYield=!isGenerator;var formalParameters=this.parseFormalParameters();if(formalParameters.params.length!==1){this.tolerateError(messages_1.Messages.BadSetterArity);}else if(formalParameters.params[0]instanceof Node.RestElement){this.tolerateError(messages_1.Messages.BadSetterRestParameter);}var method=this.parsePropertyMethod(formalParameters);this.context.allowYield=previousAllowYield;return this.finalize(node,new Node.FunctionExpression(null,formalParameters.params,method,isGenerator));};Parser.prototype.parseGeneratorMethod=function(){var node=this.createNode();var isGenerator=true;var previousAllowYield=this.context.allowYield;this.context.allowYield=true;var params=this.parseFormalParameters();this.context.allowYield=false;var method=this.parsePropertyMethod(params);this.context.allowYield=previousAllowYield;return this.finalize(node,new Node.FunctionExpression(null,params.params,method,isGenerator));};// https://tc39.github.io/ecma262/#sec-generator-function-definitions
Parser.prototype.isStartOfExpression=function(){var start=true;var value=this.lookahead.value;switch(this.lookahead.type){case 7/* Punctuator */:start=value==='['||value==='('||value==='{'||value==='+'||value==='-'||value==='!'||value==='~'||value==='++'||value==='--'||value==='/'||value==='/=';// regular expression literal
break;case 4/* Keyword */:start=value==='class'||value==='delete'||value==='function'||value==='let'||value==='new'||value==='super'||value==='this'||value==='typeof'||value==='void'||value==='yield';break;}return start;};Parser.prototype.parseYieldExpression=function(){var node=this.createNode();this.expectKeyword('yield');var argument=null;var delegate=false;if(!this.hasLineTerminator){var previousAllowYield=this.context.allowYield;this.context.allowYield=false;delegate=this.match('*');if(delegate){this.nextToken();argument=this.parseAssignmentExpression();}else if(this.isStartOfExpression()){argument=this.parseAssignmentExpression();}this.context.allowYield=previousAllowYield;}return this.finalize(node,new Node.YieldExpression(argument,delegate));};// https://tc39.github.io/ecma262/#sec-class-definitions
Parser.prototype.parseClassElement=function(hasConstructor){var token=this.lookahead;var node=this.createNode();var kind='';var key=null;var value=null;var computed=false;var method=false;var isStatic=false;var isAsync=false;if(this.match('*')){this.nextToken();}else{computed=this.match('[');key=this.parseObjectPropertyKey();var id=key;if(id.name==='static'&&(this.qualifiedPropertyName(this.lookahead)||this.match('*'))){token=this.lookahead;isStatic=true;computed=this.match('[');if(this.match('*')){this.nextToken();}else{key=this.parseObjectPropertyKey();}}if(token.type===3/* Identifier */&&!this.hasLineTerminator&&token.value==='async'){var punctuator=this.lookahead.value;if(punctuator!==':'&&punctuator!=='('&&punctuator!=='*'){isAsync=true;token=this.lookahead;key=this.parseObjectPropertyKey();if(token.type===3/* Identifier */&&token.value==='constructor'){this.tolerateUnexpectedToken(token,messages_1.Messages.ConstructorIsAsync);}}}}var lookaheadPropertyKey=this.qualifiedPropertyName(this.lookahead);if(token.type===3/* Identifier */){if(token.value==='get'&&lookaheadPropertyKey){kind='get';computed=this.match('[');key=this.parseObjectPropertyKey();this.context.allowYield=false;value=this.parseGetterMethod();}else if(token.value==='set'&&lookaheadPropertyKey){kind='set';computed=this.match('[');key=this.parseObjectPropertyKey();value=this.parseSetterMethod();}}else if(token.type===7/* Punctuator */&&token.value==='*'&&lookaheadPropertyKey){kind='init';computed=this.match('[');key=this.parseObjectPropertyKey();value=this.parseGeneratorMethod();method=true;}if(!kind&&key&&this.match('(')){kind='init';value=isAsync?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction();method=true;}if(!kind){this.throwUnexpectedToken(this.lookahead);}if(kind==='init'){kind='method';}if(!computed){if(isStatic&&this.isPropertyKey(key,'prototype')){this.throwUnexpectedToken(token,messages_1.Messages.StaticPrototype);}if(!isStatic&&this.isPropertyKey(key,'constructor')){if(kind!=='method'||!method||value&&value.generator){this.throwUnexpectedToken(token,messages_1.Messages.ConstructorSpecialMethod);}if(hasConstructor.value){this.throwUnexpectedToken(token,messages_1.Messages.DuplicateConstructor);}else{hasConstructor.value=true;}kind='constructor';}}return this.finalize(node,new Node.MethodDefinition(key,computed,value,kind,isStatic));};Parser.prototype.parseClassElementList=function(){var body=[];var hasConstructor={value:false};this.expect('{');while(!this.match('}')){if(this.match(';')){this.nextToken();}else{body.push(this.parseClassElement(hasConstructor));}}this.expect('}');return body;};Parser.prototype.parseClassBody=function(){var node=this.createNode();var elementList=this.parseClassElementList();return this.finalize(node,new Node.ClassBody(elementList));};Parser.prototype.parseClassDeclaration=function(identifierIsOptional){var node=this.createNode();var previousStrict=this.context.strict;this.context.strict=true;this.expectKeyword('class');var id=identifierIsOptional&&this.lookahead.type!==3/* Identifier */?null:this.parseVariableIdentifier();var superClass=null;if(this.matchKeyword('extends')){this.nextToken();superClass=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);}var classBody=this.parseClassBody();this.context.strict=previousStrict;return this.finalize(node,new Node.ClassDeclaration(id,superClass,classBody));};Parser.prototype.parseClassExpression=function(){var node=this.createNode();var previousStrict=this.context.strict;this.context.strict=true;this.expectKeyword('class');var id=this.lookahead.type===3/* Identifier */?this.parseVariableIdentifier():null;var superClass=null;if(this.matchKeyword('extends')){this.nextToken();superClass=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);}var classBody=this.parseClassBody();this.context.strict=previousStrict;return this.finalize(node,new Node.ClassExpression(id,superClass,classBody));};// https://tc39.github.io/ecma262/#sec-scripts
// https://tc39.github.io/ecma262/#sec-modules
Parser.prototype.parseModule=function(){this.context.strict=true;this.context.isModule=true;this.scanner.isModule=true;var node=this.createNode();var body=this.parseDirectivePrologues();while(this.lookahead.type!==2/* EOF */){body.push(this.parseStatementListItem());}return this.finalize(node,new Node.Module(body));};Parser.prototype.parseScript=function(){var node=this.createNode();var body=this.parseDirectivePrologues();while(this.lookahead.type!==2/* EOF */){body.push(this.parseStatementListItem());}return this.finalize(node,new Node.Script(body));};// https://tc39.github.io/ecma262/#sec-imports
Parser.prototype.parseModuleSpecifier=function(){var node=this.createNode();if(this.lookahead.type!==8/* StringLiteral */){this.throwError(messages_1.Messages.InvalidModuleSpecifier);}var token=this.nextToken();var raw=this.getTokenRaw(token);return this.finalize(node,new Node.Literal(token.value,raw));};// import {<foo as bar>} ...;
Parser.prototype.parseImportSpecifier=function(){var node=this.createNode();var imported;var local;if(this.lookahead.type===3/* Identifier */){imported=this.parseVariableIdentifier();local=imported;if(this.matchContextualKeyword('as')){this.nextToken();local=this.parseVariableIdentifier();}}else{imported=this.parseIdentifierName();local=imported;if(this.matchContextualKeyword('as')){this.nextToken();local=this.parseVariableIdentifier();}else{this.throwUnexpectedToken(this.nextToken());}}return this.finalize(node,new Node.ImportSpecifier(local,imported));};// {foo, bar as bas}
Parser.prototype.parseNamedImports=function(){this.expect('{');var specifiers=[];while(!this.match('}')){specifiers.push(this.parseImportSpecifier());if(!this.match('}')){this.expect(',');}}this.expect('}');return specifiers;};// import <foo> ...;
Parser.prototype.parseImportDefaultSpecifier=function(){var node=this.createNode();var local=this.parseIdentifierName();return this.finalize(node,new Node.ImportDefaultSpecifier(local));};// import <* as foo> ...;
Parser.prototype.parseImportNamespaceSpecifier=function(){var node=this.createNode();this.expect('*');if(!this.matchContextualKeyword('as')){this.throwError(messages_1.Messages.NoAsAfterImportNamespace);}this.nextToken();var local=this.parseIdentifierName();return this.finalize(node,new Node.ImportNamespaceSpecifier(local));};Parser.prototype.parseImportDeclaration=function(){if(this.context.inFunctionBody){this.throwError(messages_1.Messages.IllegalImportDeclaration);}var node=this.createNode();this.expectKeyword('import');var src;var specifiers=[];if(this.lookahead.type===8/* StringLiteral */){// import 'foo';
src=this.parseModuleSpecifier();}else{if(this.match('{')){// import {bar}
specifiers=specifiers.concat(this.parseNamedImports());}else if(this.match('*')){// import * as foo
specifiers.push(this.parseImportNamespaceSpecifier());}else if(this.isIdentifierName(this.lookahead)&&!this.matchKeyword('default')){// import foo
specifiers.push(this.parseImportDefaultSpecifier());if(this.match(',')){this.nextToken();if(this.match('*')){// import foo, * as foo
specifiers.push(this.parseImportNamespaceSpecifier());}else if(this.match('{')){// import foo, {bar}
specifiers=specifiers.concat(this.parseNamedImports());}else{this.throwUnexpectedToken(this.lookahead);}}}else{this.throwUnexpectedToken(this.nextToken());}if(!this.matchContextualKeyword('from')){var message=this.lookahead.value?messages_1.Messages.UnexpectedToken:messages_1.Messages.MissingFromClause;this.throwError(message,this.lookahead.value);}this.nextToken();src=this.parseModuleSpecifier();}this.consumeSemicolon();return this.finalize(node,new Node.ImportDeclaration(specifiers,src));};// https://tc39.github.io/ecma262/#sec-exports
Parser.prototype.parseExportSpecifier=function(){var node=this.createNode();var local=this.parseIdentifierName();var exported=local;if(this.matchContextualKeyword('as')){this.nextToken();exported=this.parseIdentifierName();}return this.finalize(node,new Node.ExportSpecifier(local,exported));};Parser.prototype.parseExportDeclaration=function(){if(this.context.inFunctionBody){this.throwError(messages_1.Messages.IllegalExportDeclaration);}var node=this.createNode();this.expectKeyword('export');var exportDeclaration;if(this.matchKeyword('default')){// export default ...
this.nextToken();if(this.matchKeyword('function')){// export default function foo () {}
// export default function () {}
var declaration=this.parseFunctionDeclaration(true);exportDeclaration=this.finalize(node,new Node.ExportDefaultDeclaration(declaration));}else if(this.matchKeyword('class')){// export default class foo {}
var declaration=this.parseClassDeclaration(true);exportDeclaration=this.finalize(node,new Node.ExportDefaultDeclaration(declaration));}else if(this.matchContextualKeyword('async')){// export default async function f () {}
// export default async function () {}
// export default async x => x
var declaration=this.matchAsyncFunction()?this.parseFunctionDeclaration(true):this.parseAssignmentExpression();exportDeclaration=this.finalize(node,new Node.ExportDefaultDeclaration(declaration));}else{if(this.matchContextualKeyword('from')){this.throwError(messages_1.Messages.UnexpectedToken,this.lookahead.value);}// export default {};
// export default [];
// export default (1 + 2);
var declaration=this.match('{')?this.parseObjectInitializer():this.match('[')?this.parseArrayInitializer():this.parseAssignmentExpression();this.consumeSemicolon();exportDeclaration=this.finalize(node,new Node.ExportDefaultDeclaration(declaration));}}else if(this.match('*')){// export * from 'foo';
this.nextToken();if(!this.matchContextualKeyword('from')){var message=this.lookahead.value?messages_1.Messages.UnexpectedToken:messages_1.Messages.MissingFromClause;this.throwError(message,this.lookahead.value);}this.nextToken();var src=this.parseModuleSpecifier();this.consumeSemicolon();exportDeclaration=this.finalize(node,new Node.ExportAllDeclaration(src));}else if(this.lookahead.type===4/* Keyword */){// export var f = 1;
var declaration=void 0;switch(this.lookahead.value){case'let':case'const':declaration=this.parseLexicalDeclaration({inFor:false});break;case'var':case'class':case'function':declaration=this.parseStatementListItem();break;default:this.throwUnexpectedToken(this.lookahead);}exportDeclaration=this.finalize(node,new Node.ExportNamedDeclaration(declaration,[],null));}else if(this.matchAsyncFunction()){var declaration=this.parseFunctionDeclaration();exportDeclaration=this.finalize(node,new Node.ExportNamedDeclaration(declaration,[],null));}else{var specifiers=[];var source=null;var isExportFromIdentifier=false;this.expect('{');while(!this.match('}')){isExportFromIdentifier=isExportFromIdentifier||this.matchKeyword('default');specifiers.push(this.parseExportSpecifier());if(!this.match('}')){this.expect(',');}}this.expect('}');if(this.matchContextualKeyword('from')){// export {default} from 'foo';
// export {foo} from 'foo';
this.nextToken();source=this.parseModuleSpecifier();this.consumeSemicolon();}else if(isExportFromIdentifier){// export {default}; // missing fromClause
var message=this.lookahead.value?messages_1.Messages.UnexpectedToken:messages_1.Messages.MissingFromClause;this.throwError(message,this.lookahead.value);}else{// export {foo};
this.consumeSemicolon();}exportDeclaration=this.finalize(node,new Node.ExportNamedDeclaration(null,specifiers,source));}return exportDeclaration;};return Parser;}();exports.Parser=Parser;/***/},/* 9 */ /***/function(module,exports){// Ensure the condition is true, otherwise throw an error.
// This is only to have a better contract semantic, i.e. another safety net
// to catch a logic error. The condition shall be fulfilled in normal case.
// Do NOT use this to enforce a certain condition on any user input.
Object.defineProperty(exports,"__esModule",{value:true});function assert(condition,message){/* istanbul ignore if */if(!condition){throw new Error('ASSERT: '+message);}}exports.assert=assert;/***/},/* 10 */ /***/function(module,exports){/* tslint:disable:max-classes-per-file */Object.defineProperty(exports,"__esModule",{value:true});var ErrorHandler=function(){function ErrorHandler(){this.errors=[];this.tolerant=false;}ErrorHandler.prototype.recordError=function(error){this.errors.push(error);};ErrorHandler.prototype.tolerate=function(error){if(this.tolerant){this.recordError(error);}else{throw error;}};ErrorHandler.prototype.constructError=function(msg,column){var error=new Error(msg);try{throw error;}catch(base){/* istanbul ignore else */if(Object.create&&Object.defineProperty){error=Object.create(base);Object.defineProperty(error,'column',{value:column});}}/* istanbul ignore next */return error;};ErrorHandler.prototype.createError=function(index,line,col,description){var msg='Line '+line+': '+description;var error=this.constructError(msg,col);error.index=index;error.lineNumber=line;error.description=description;return error;};ErrorHandler.prototype.throwError=function(index,line,col,description){throw this.createError(index,line,col,description);};ErrorHandler.prototype.tolerateError=function(index,line,col,description){var error=this.createError(index,line,col,description);if(this.tolerant){this.recordError(error);}else{throw error;}};return ErrorHandler;}();exports.ErrorHandler=ErrorHandler;/***/},/* 11 */ /***/function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});// Error messages should be identical to V8.
exports.Messages={BadGetterArity:'Getter must not have any formal parameters',BadSetterArity:'Setter must have exactly one formal parameter',BadSetterRestParameter:'Setter function argument must not be a rest parameter',ConstructorIsAsync:'Class constructor may not be an async method',ConstructorSpecialMethod:'Class constructor may not be an accessor',DeclarationMissingInitializer:'Missing initializer in %0 declaration',DefaultRestParameter:'Unexpected token =',DuplicateBinding:'Duplicate binding %0',DuplicateConstructor:'A class may only have one constructor',DuplicateProtoProperty:'Duplicate __proto__ fields are not allowed in object literals',ForInOfLoopInitializer:'%0 loop variable declaration may not have an initializer',GeneratorInLegacyContext:'Generator declarations are not allowed in legacy contexts',IllegalBreak:'Illegal break statement',IllegalContinue:'Illegal continue statement',IllegalExportDeclaration:'Unexpected token',IllegalImportDeclaration:'Unexpected token',IllegalLanguageModeDirective:'Illegal \'use strict\' directive in function with non-simple parameter list',IllegalReturn:'Illegal return statement',InvalidEscapedReservedWord:'Keyword must not contain escaped characters',InvalidHexEscapeSequence:'Invalid hexadecimal escape sequence',InvalidLHSInAssignment:'Invalid left-hand side in assignment',InvalidLHSInForIn:'Invalid left-hand side in for-in',InvalidLHSInForLoop:'Invalid left-hand side in for-loop',InvalidModuleSpecifier:'Unexpected token',InvalidRegExp:'Invalid regular expression',LetInLexicalBinding:'let is disallowed as a lexically bound name',MissingFromClause:'Unexpected token',MultipleDefaultsInSwitch:'More than one default clause in switch statement',NewlineAfterThrow:'Illegal newline after throw',NoAsAfterImportNamespace:'Unexpected token',NoCatchOrFinally:'Missing catch or finally after try',ParameterAfterRestParameter:'Rest parameter must be last formal parameter',Redeclaration:'%0 \'%1\' has already been declared',StaticPrototype:'Classes may not have static property named prototype',StrictCatchVariable:'Catch variable may not be eval or arguments in strict mode',StrictDelete:'Delete of an unqualified identifier in strict mode.',StrictFunction:'In strict mode code, functions can only be declared at top level or inside a block',StrictFunctionName:'Function name may not be eval or arguments in strict mode',StrictLHSAssignment:'Assignment to eval or arguments is not allowed in strict mode',StrictLHSPostfix:'Postfix increment/decrement may not have eval or arguments operand in strict mode',StrictLHSPrefix:'Prefix increment/decrement may not have eval or arguments operand in strict mode',StrictModeWith:'Strict mode code may not include a with statement',StrictOctalLiteral:'Octal literals are not allowed in strict mode.',StrictParamDupe:'Strict mode function may not have duplicate parameter names',StrictParamName:'Parameter name eval or arguments is not allowed in strict mode',StrictReservedWord:'Use of future reserved word in strict mode',StrictVarName:'Variable name may not be eval or arguments in strict mode',TemplateOctalLiteral:'Octal literals are not allowed in template strings.',UnexpectedEOS:'Unexpected end of input',UnexpectedIdentifier:'Unexpected identifier',UnexpectedNumber:'Unexpected number',UnexpectedReserved:'Unexpected reserved word',UnexpectedString:'Unexpected string',UnexpectedTemplate:'Unexpected quasi %0',UnexpectedToken:'Unexpected token %0',UnexpectedTokenIllegal:'Unexpected token ILLEGAL',UnknownLabel:'Undefined label \'%0\'',UnterminatedRegExp:'Invalid regular expression: missing /'};/***/},/* 12 */ /***/function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var assert_1=__webpack_require__(9);var character_1=__webpack_require__(4);var messages_1=__webpack_require__(11);function hexValue(ch){return'0123456789abcdef'.indexOf(ch.toLowerCase());}function octalValue(ch){return'01234567'.indexOf(ch);}var Scanner=function(){function Scanner(code,handler){this.source=code;this.errorHandler=handler;this.trackComment=false;this.isModule=false;this.length=code.length;this.index=0;this.lineNumber=code.length>0?1:0;this.lineStart=0;this.curlyStack=[];}Scanner.prototype.saveState=function(){return{index:this.index,lineNumber:this.lineNumber,lineStart:this.lineStart};};Scanner.prototype.restoreState=function(state){this.index=state.index;this.lineNumber=state.lineNumber;this.lineStart=state.lineStart;};Scanner.prototype.eof=function(){return this.index>=this.length;};Scanner.prototype.throwUnexpectedToken=function(message){if(message===void 0){message=messages_1.Messages.UnexpectedTokenIllegal;}return this.errorHandler.throwError(this.index,this.lineNumber,this.index-this.lineStart+1,message);};Scanner.prototype.tolerateUnexpectedToken=function(message){if(message===void 0){message=messages_1.Messages.UnexpectedTokenIllegal;}this.errorHandler.tolerateError(this.index,this.lineNumber,this.index-this.lineStart+1,message);};// https://tc39.github.io/ecma262/#sec-comments
Scanner.prototype.skipSingleLineComment=function(offset){var comments=[];var start,loc;if(this.trackComment){comments=[];start=this.index-offset;loc={start:{line:this.lineNumber,column:this.index-this.lineStart-offset},end:{}};}while(!this.eof()){var ch=this.source.charCodeAt(this.index);++this.index;if(character_1.Character.isLineTerminator(ch)){if(this.trackComment){loc.end={line:this.lineNumber,column:this.index-this.lineStart-1};var entry={multiLine:false,slice:[start+offset,this.index-1],range:[start,this.index-1],loc:loc};comments.push(entry);}if(ch===13&&this.source.charCodeAt(this.index)===10){++this.index;}++this.lineNumber;this.lineStart=this.index;return comments;}}if(this.trackComment){loc.end={line:this.lineNumber,column:this.index-this.lineStart};var entry={multiLine:false,slice:[start+offset,this.index],range:[start,this.index],loc:loc};comments.push(entry);}return comments;};Scanner.prototype.skipMultiLineComment=function(){var comments=[];var start,loc;if(this.trackComment){comments=[];start=this.index-2;loc={start:{line:this.lineNumber,column:this.index-this.lineStart-2},end:{}};}while(!this.eof()){var ch=this.source.charCodeAt(this.index);if(character_1.Character.isLineTerminator(ch)){if(ch===0x0D&&this.source.charCodeAt(this.index+1)===0x0A){++this.index;}++this.lineNumber;++this.index;this.lineStart=this.index;}else if(ch===0x2A){// Block comment ends with '*/'.
if(this.source.charCodeAt(this.index+1)===0x2F){this.index+=2;if(this.trackComment){loc.end={line:this.lineNumber,column:this.index-this.lineStart};var entry={multiLine:true,slice:[start+2,this.index-2],range:[start,this.index],loc:loc};comments.push(entry);}return comments;}++this.index;}else{++this.index;}}// Ran off the end of the file - the whole thing is a comment
if(this.trackComment){loc.end={line:this.lineNumber,column:this.index-this.lineStart};var entry={multiLine:true,slice:[start+2,this.index],range:[start,this.index],loc:loc};comments.push(entry);}this.tolerateUnexpectedToken();return comments;};Scanner.prototype.scanComments=function(){var comments;if(this.trackComment){comments=[];}var start=this.index===0;while(!this.eof()){var ch=this.source.charCodeAt(this.index);if(character_1.Character.isWhiteSpace(ch)){++this.index;}else if(character_1.Character.isLineTerminator(ch)){++this.index;if(ch===0x0D&&this.source.charCodeAt(this.index)===0x0A){++this.index;}++this.lineNumber;this.lineStart=this.index;start=true;}else if(ch===0x2F){ch=this.source.charCodeAt(this.index+1);if(ch===0x2F){this.index+=2;var comment=this.skipSingleLineComment(2);if(this.trackComment){comments=comments.concat(comment);}start=true;}else if(ch===0x2A){this.index+=2;var comment=this.skipMultiLineComment();if(this.trackComment){comments=comments.concat(comment);}}else{break;}}else if(start&&ch===0x2D){// U+003E is '>'
if(this.source.charCodeAt(this.index+1)===0x2D&&this.source.charCodeAt(this.index+2)===0x3E){// '-->' is a single-line comment
this.index+=3;var comment=this.skipSingleLineComment(3);if(this.trackComment){comments=comments.concat(comment);}}else{break;}}else if(ch===0x3C&&!this.isModule){if(this.source.slice(this.index+1,this.index+4)==='!--'){this.index+=4;// `<!--`
var comment=this.skipSingleLineComment(4);if(this.trackComment){comments=comments.concat(comment);}}else{break;}}else{break;}}return comments;};// https://tc39.github.io/ecma262/#sec-future-reserved-words
Scanner.prototype.isFutureReservedWord=function(id){switch(id){case'enum':case'export':case'import':case'super':return true;default:return false;}};Scanner.prototype.isStrictModeReservedWord=function(id){switch(id){case'implements':case'interface':case'package':case'private':case'protected':case'public':case'static':case'yield':case'let':return true;default:return false;}};Scanner.prototype.isRestrictedWord=function(id){return id==='eval'||id==='arguments';};// https://tc39.github.io/ecma262/#sec-keywords
Scanner.prototype.isKeyword=function(id){switch(id.length){case 2:return id==='if'||id==='in'||id==='do';case 3:return id==='var'||id==='for'||id==='new'||id==='try'||id==='let';case 4:return id==='this'||id==='else'||id==='case'||id==='void'||id==='with'||id==='enum';case 5:return id==='while'||id==='break'||id==='catch'||id==='throw'||id==='const'||id==='yield'||id==='class'||id==='super';case 6:return id==='return'||id==='typeof'||id==='delete'||id==='switch'||id==='export'||id==='import';case 7:return id==='default'||id==='finally'||id==='extends';case 8:return id==='function'||id==='continue'||id==='debugger';case 10:return id==='instanceof';default:return false;}};Scanner.prototype.codePointAt=function(i){var cp=this.source.charCodeAt(i);if(cp>=0xD800&&cp<=0xDBFF){var second=this.source.charCodeAt(i+1);if(second>=0xDC00&&second<=0xDFFF){var first=cp;cp=(first-0xD800)*0x400+second-0xDC00+0x10000;}}return cp;};Scanner.prototype.scanHexEscape=function(prefix){var len=prefix==='u'?4:2;var code=0;for(var i=0;i<len;++i){if(!this.eof()&&character_1.Character.isHexDigit(this.source.charCodeAt(this.index))){code=code*16+hexValue(this.source[this.index++]);}else{return null;}}return String.fromCharCode(code);};Scanner.prototype.scanUnicodeCodePointEscape=function(){var ch=this.source[this.index];var code=0;// At least, one hex digit is required.
if(ch==='}'){this.throwUnexpectedToken();}while(!this.eof()){ch=this.source[this.index++];if(!character_1.Character.isHexDigit(ch.charCodeAt(0))){break;}code=code*16+hexValue(ch);}if(code>0x10FFFF||ch!=='}'){this.throwUnexpectedToken();}return character_1.Character.fromCodePoint(code);};Scanner.prototype.getIdentifier=function(){var start=this.index++;while(!this.eof()){var ch=this.source.charCodeAt(this.index);if(ch===0x5C){// Blackslash (U+005C) marks Unicode escape sequence.
this.index=start;return this.getComplexIdentifier();}else if(ch>=0xD800&&ch<0xDFFF){// Need to handle surrogate pairs.
this.index=start;return this.getComplexIdentifier();}if(character_1.Character.isIdentifierPart(ch)){++this.index;}else{break;}}return this.source.slice(start,this.index);};Scanner.prototype.getComplexIdentifier=function(){var cp=this.codePointAt(this.index);var id=character_1.Character.fromCodePoint(cp);this.index+=id.length;// '\u' (U+005C, U+0075) denotes an escaped character.
var ch;if(cp===0x5C){if(this.source.charCodeAt(this.index)!==0x75){this.throwUnexpectedToken();}++this.index;if(this.source[this.index]==='{'){++this.index;ch=this.scanUnicodeCodePointEscape();}else{ch=this.scanHexEscape('u');if(ch===null||ch==='\\'||!character_1.Character.isIdentifierStart(ch.charCodeAt(0))){this.throwUnexpectedToken();}}id=ch;}while(!this.eof()){cp=this.codePointAt(this.index);if(!character_1.Character.isIdentifierPart(cp)){break;}ch=character_1.Character.fromCodePoint(cp);id+=ch;this.index+=ch.length;// '\u' (U+005C, U+0075) denotes an escaped character.
if(cp===0x5C){id=id.substr(0,id.length-1);if(this.source.charCodeAt(this.index)!==0x75){this.throwUnexpectedToken();}++this.index;if(this.source[this.index]==='{'){++this.index;ch=this.scanUnicodeCodePointEscape();}else{ch=this.scanHexEscape('u');if(ch===null||ch==='\\'||!character_1.Character.isIdentifierPart(ch.charCodeAt(0))){this.throwUnexpectedToken();}}id+=ch;}}return id;};Scanner.prototype.octalToDecimal=function(ch){// \0 is not octal escape sequence
var octal=ch!=='0';var code=octalValue(ch);if(!this.eof()&&character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))){octal=true;code=code*8+octalValue(this.source[this.index++]);// 3 digits are only allowed when string starts
// with 0, 1, 2, 3
if('0123'.indexOf(ch)>=0&&!this.eof()&&character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))){code=code*8+octalValue(this.source[this.index++]);}}return{code:code,octal:octal};};// https://tc39.github.io/ecma262/#sec-names-and-keywords
Scanner.prototype.scanIdentifier=function(){var type;var start=this.index;// Backslash (U+005C) starts an escaped character.
var id=this.source.charCodeAt(start)===0x5C?this.getComplexIdentifier():this.getIdentifier();// There is no keyword or literal with only one character.
// Thus, it must be an identifier.
if(id.length===1){type=3/* Identifier */;}else if(this.isKeyword(id)){type=4/* Keyword */;}else if(id==='null'){type=5/* NullLiteral */;}else if(id==='true'||id==='false'){type=1/* BooleanLiteral */;}else{type=3/* Identifier */;}if(type!==3/* Identifier */&&start+id.length!==this.index){var restore=this.index;this.index=start;this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);this.index=restore;}return{type:type,value:id,lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};// https://tc39.github.io/ecma262/#sec-punctuators
Scanner.prototype.scanPunctuator=function(){var start=this.index;// Check for most common single-character punctuators.
var str=this.source[this.index];switch(str){case'(':case'{':if(str==='{'){this.curlyStack.push('{');}++this.index;break;case'.':++this.index;if(this.source[this.index]==='.'&&this.source[this.index+1]==='.'){// Spread operator: ...
this.index+=2;str='...';}break;case'}':++this.index;this.curlyStack.pop();break;case')':case';':case',':case'[':case']':case':':case'?':case'~':++this.index;break;default:// 4-character punctuator.
str=this.source.substr(this.index,4);if(str==='>>>='){this.index+=4;}else{// 3-character punctuators.
str=str.substr(0,3);if(str==='==='||str==='!=='||str==='>>>'||str==='<<='||str==='>>='||str==='**='){this.index+=3;}else{// 2-character punctuators.
str=str.substr(0,2);if(str==='&&'||str==='||'||str==='=='||str==='!='||str==='+='||str==='-='||str==='*='||str==='/='||str==='++'||str==='--'||str==='<<'||str==='>>'||str==='&='||str==='|='||str==='^='||str==='%='||str==='<='||str==='>='||str==='=>'||str==='**'){this.index+=2;}else{// 1-character punctuators.
str=this.source[this.index];if('<>=!+-*%&|^/'.indexOf(str)>=0){++this.index;}}}}}if(this.index===start){this.throwUnexpectedToken();}return{type:7/* Punctuator */,value:str,lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};// https://tc39.github.io/ecma262/#sec-literals-numeric-literals
Scanner.prototype.scanHexLiteral=function(start){var num='';while(!this.eof()){if(!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))){break;}num+=this.source[this.index++];}if(num.length===0){this.throwUnexpectedToken();}if(character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))){this.throwUnexpectedToken();}return{type:6/* NumericLiteral */,value:parseInt('0x'+num,16),lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};Scanner.prototype.scanBinaryLiteral=function(start){var num='';var ch;while(!this.eof()){ch=this.source[this.index];if(ch!=='0'&&ch!=='1'){break;}num+=this.source[this.index++];}if(num.length===0){// only 0b or 0B
this.throwUnexpectedToken();}if(!this.eof()){ch=this.source.charCodeAt(this.index);/* istanbul ignore else */if(character_1.Character.isIdentifierStart(ch)||character_1.Character.isDecimalDigit(ch)){this.throwUnexpectedToken();}}return{type:6/* NumericLiteral */,value:parseInt(num,2),lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};Scanner.prototype.scanOctalLiteral=function(prefix,start){var num='';var octal=false;if(character_1.Character.isOctalDigit(prefix.charCodeAt(0))){octal=true;num='0'+this.source[this.index++];}else{++this.index;}while(!this.eof()){if(!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))){break;}num+=this.source[this.index++];}if(!octal&&num.length===0){// only 0o or 0O
this.throwUnexpectedToken();}if(character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))||character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))){this.throwUnexpectedToken();}return{type:6/* NumericLiteral */,value:parseInt(num,8),octal:octal,lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};Scanner.prototype.isImplicitOctalLiteral=function(){// Implicit octal, unless there is a non-octal digit.
// (Annex B.1.1 on Numeric Literals)
for(var i=this.index+1;i<this.length;++i){var ch=this.source[i];if(ch==='8'||ch==='9'){return false;}if(!character_1.Character.isOctalDigit(ch.charCodeAt(0))){return true;}}return true;};Scanner.prototype.scanNumericLiteral=function(){var start=this.index;var ch=this.source[start];assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0))||ch==='.','Numeric literal must start with a decimal digit or a decimal point');var num='';if(ch!=='.'){num=this.source[this.index++];ch=this.source[this.index];// Hex number starts with '0x'.
// Octal number starts with '0'.
// Octal number in ES6 starts with '0o'.
// Binary number in ES6 starts with '0b'.
if(num==='0'){if(ch==='x'||ch==='X'){++this.index;return this.scanHexLiteral(start);}if(ch==='b'||ch==='B'){++this.index;return this.scanBinaryLiteral(start);}if(ch==='o'||ch==='O'){return this.scanOctalLiteral(ch,start);}if(ch&&character_1.Character.isOctalDigit(ch.charCodeAt(0))){if(this.isImplicitOctalLiteral()){return this.scanOctalLiteral(ch,start);}}}while(character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))){num+=this.source[this.index++];}ch=this.source[this.index];}if(ch==='.'){num+=this.source[this.index++];while(character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))){num+=this.source[this.index++];}ch=this.source[this.index];}if(ch==='e'||ch==='E'){num+=this.source[this.index++];ch=this.source[this.index];if(ch==='+'||ch==='-'){num+=this.source[this.index++];}if(character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))){while(character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))){num+=this.source[this.index++];}}else{this.throwUnexpectedToken();}}if(character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))){this.throwUnexpectedToken();}return{type:6/* NumericLiteral */,value:parseFloat(num),lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};// https://tc39.github.io/ecma262/#sec-literals-string-literals
Scanner.prototype.scanStringLiteral=function(){var start=this.index;var quote=this.source[start];assert_1.assert(quote==='\''||quote==='"','String literal must starts with a quote');++this.index;var octal=false;var str='';while(!this.eof()){var ch=this.source[this.index++];if(ch===quote){quote='';break;}else if(ch==='\\'){ch=this.source[this.index++];if(!ch||!character_1.Character.isLineTerminator(ch.charCodeAt(0))){switch(ch){case'u':if(this.source[this.index]==='{'){++this.index;str+=this.scanUnicodeCodePointEscape();}else{var unescaped_1=this.scanHexEscape(ch);if(unescaped_1===null){this.throwUnexpectedToken();}str+=unescaped_1;}break;case'x':var unescaped=this.scanHexEscape(ch);if(unescaped===null){this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);}str+=unescaped;break;case'n':str+='\n';break;case'r':str+='\r';break;case't':str+='\t';break;case'b':str+='\b';break;case'f':str+='\f';break;case'v':str+='\x0B';break;case'8':case'9':str+=ch;this.tolerateUnexpectedToken();break;default:if(ch&&character_1.Character.isOctalDigit(ch.charCodeAt(0))){var octToDec=this.octalToDecimal(ch);octal=octToDec.octal||octal;str+=String.fromCharCode(octToDec.code);}else{str+=ch;}break;}}else{++this.lineNumber;if(ch==='\r'&&this.source[this.index]==='\n'){++this.index;}this.lineStart=this.index;}}else if(character_1.Character.isLineTerminator(ch.charCodeAt(0))){break;}else{str+=ch;}}if(quote!==''){this.index=start;this.throwUnexpectedToken();}return{type:8/* StringLiteral */,value:str,octal:octal,lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};// https://tc39.github.io/ecma262/#sec-template-literal-lexical-components
Scanner.prototype.scanTemplate=function(){var cooked='';var terminated=false;var start=this.index;var head=this.source[start]==='`';var tail=false;var rawOffset=2;++this.index;while(!this.eof()){var ch=this.source[this.index++];if(ch==='`'){rawOffset=1;tail=true;terminated=true;break;}else if(ch==='$'){if(this.source[this.index]==='{'){this.curlyStack.push('${');++this.index;terminated=true;break;}cooked+=ch;}else if(ch==='\\'){ch=this.source[this.index++];if(!character_1.Character.isLineTerminator(ch.charCodeAt(0))){switch(ch){case'n':cooked+='\n';break;case'r':cooked+='\r';break;case't':cooked+='\t';break;case'u':if(this.source[this.index]==='{'){++this.index;cooked+=this.scanUnicodeCodePointEscape();}else{var restore=this.index;var unescaped_2=this.scanHexEscape(ch);if(unescaped_2!==null){cooked+=unescaped_2;}else{this.index=restore;cooked+=ch;}}break;case'x':var unescaped=this.scanHexEscape(ch);if(unescaped===null){this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);}cooked+=unescaped;break;case'b':cooked+='\b';break;case'f':cooked+='\f';break;case'v':cooked+='\v';break;default:if(ch==='0'){if(character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))){// Illegal: \01 \02 and so on
this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);}cooked+='\0';}else if(character_1.Character.isOctalDigit(ch.charCodeAt(0))){// Illegal: \1 \2
this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);}else{cooked+=ch;}break;}}else{++this.lineNumber;if(ch==='\r'&&this.source[this.index]==='\n'){++this.index;}this.lineStart=this.index;}}else if(character_1.Character.isLineTerminator(ch.charCodeAt(0))){++this.lineNumber;if(ch==='\r'&&this.source[this.index]==='\n'){++this.index;}this.lineStart=this.index;cooked+='\n';}else{cooked+=ch;}}if(!terminated){this.throwUnexpectedToken();}if(!head){this.curlyStack.pop();}return{type:10/* Template */,value:this.source.slice(start+1,this.index-rawOffset),cooked:cooked,head:head,tail:tail,lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};// https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
Scanner.prototype.testRegExp=function(pattern,flags){// The BMP character to use as a replacement for astral symbols when
// translating an ES6 "u"-flagged pattern to an ES5-compatible
// approximation.
// Note: replacing with '\uFFFF' enables false positives in unlikely
// scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid
// pattern that would not be detected by this substitution.
var astralSubstitute='\uFFFF';var tmp=pattern;var self=this;if(flags.indexOf('u')>=0){tmp=tmp.replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g,function($0,$1,$2){var codePoint=parseInt($1||$2,16);if(codePoint>0x10FFFF){self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);}if(codePoint<=0xFFFF){return String.fromCharCode(codePoint);}return astralSubstitute;}).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,astralSubstitute);}// First, detect invalid regular expressions.
try{RegExp(tmp);}catch(e){this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);}// Return a regular expression object for this pattern-flag pair, or
// `null` in case the current environment doesn't support the flags it
// uses.
try{return new RegExp(pattern,flags);}catch(exception){/* istanbul ignore next */return null;}};Scanner.prototype.scanRegExpBody=function(){var ch=this.source[this.index];assert_1.assert(ch==='/','Regular expression literal must start with a slash');var str=this.source[this.index++];var classMarker=false;var terminated=false;while(!this.eof()){ch=this.source[this.index++];str+=ch;if(ch==='\\'){ch=this.source[this.index++];// https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
if(character_1.Character.isLineTerminator(ch.charCodeAt(0))){this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);}str+=ch;}else if(character_1.Character.isLineTerminator(ch.charCodeAt(0))){this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);}else if(classMarker){if(ch===']'){classMarker=false;}}else{if(ch==='/'){terminated=true;break;}else if(ch==='['){classMarker=true;}}}if(!terminated){this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);}// Exclude leading and trailing slash.
return str.substr(1,str.length-2);};Scanner.prototype.scanRegExpFlags=function(){var str='';var flags='';while(!this.eof()){var ch=this.source[this.index];if(!character_1.Character.isIdentifierPart(ch.charCodeAt(0))){break;}++this.index;if(ch==='\\'&&!this.eof()){ch=this.source[this.index];if(ch==='u'){++this.index;var restore=this.index;var char=this.scanHexEscape('u');if(char!==null){flags+=char;for(str+='\\u';restore<this.index;++restore){str+=this.source[restore];}}else{this.index=restore;flags+='u';str+='\\u';}this.tolerateUnexpectedToken();}else{str+='\\';this.tolerateUnexpectedToken();}}else{flags+=ch;str+=ch;}}return flags;};Scanner.prototype.scanRegExp=function(){var start=this.index;var pattern=this.scanRegExpBody();var flags=this.scanRegExpFlags();var value=this.testRegExp(pattern,flags);return{type:9/* RegularExpression */,value:'',pattern:pattern,flags:flags,regex:value,lineNumber:this.lineNumber,lineStart:this.lineStart,start:start,end:this.index};};Scanner.prototype.lex=function(){if(this.eof()){return{type:2/* EOF */,value:'',lineNumber:this.lineNumber,lineStart:this.lineStart,start:this.index,end:this.index};}var cp=this.source.charCodeAt(this.index);if(character_1.Character.isIdentifierStart(cp)){return this.scanIdentifier();}// Very common: ( and ) and ;
if(cp===0x28||cp===0x29||cp===0x3B){return this.scanPunctuator();}// String literal starts with single quote (U+0027) or double quote (U+0022).
if(cp===0x27||cp===0x22){return this.scanStringLiteral();}// Dot (.) U+002E can also start a floating-point number, hence the need
// to check the next character.
if(cp===0x2E){if(character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index+1))){return this.scanNumericLiteral();}return this.scanPunctuator();}if(character_1.Character.isDecimalDigit(cp)){return this.scanNumericLiteral();}// Template literals start with ` (U+0060) for template head
// or } (U+007D) for template middle or template tail.
if(cp===0x60||cp===0x7D&&this.curlyStack[this.curlyStack.length-1]==='${'){return this.scanTemplate();}// Possible identifier start in a surrogate pair.
if(cp>=0xD800&&cp<0xDFFF){if(character_1.Character.isIdentifierStart(this.codePointAt(this.index))){return this.scanIdentifier();}}return this.scanPunctuator();};return Scanner;}();exports.Scanner=Scanner;/***/},/* 13 */ /***/function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.TokenName={};exports.TokenName[1/* BooleanLiteral */]='Boolean';exports.TokenName[2/* EOF */]='<end>';exports.TokenName[3/* Identifier */]='Identifier';exports.TokenName[4/* Keyword */]='Keyword';exports.TokenName[5/* NullLiteral */]='Null';exports.TokenName[6/* NumericLiteral */]='Numeric';exports.TokenName[7/* Punctuator */]='Punctuator';exports.TokenName[8/* StringLiteral */]='String';exports.TokenName[9/* RegularExpression */]='RegularExpression';exports.TokenName[10/* Template */]='Template';/***/},/* 14 */ /***/function(module,exports){// Generated by generate-xhtml-entities.js. DO NOT MODIFY!
Object.defineProperty(exports,"__esModule",{value:true});exports.XHTMLEntities={quot:'\u0022',amp:'\u0026',apos:'\u0027',gt:'\u003E',nbsp:'\u00A0',iexcl:'\u00A1',cent:'\u00A2',pound:'\u00A3',curren:'\u00A4',yen:'\u00A5',brvbar:'\u00A6',sect:'\u00A7',uml:'\u00A8',copy:'\u00A9',ordf:'\u00AA',laquo:'\u00AB',not:'\u00AC',shy:'\u00AD',reg:'\u00AE',macr:'\u00AF',deg:'\u00B0',plusmn:'\u00B1',sup2:'\u00B2',sup3:'\u00B3',acute:'\u00B4',micro:'\u00B5',para:'\u00B6',middot:'\u00B7',cedil:'\u00B8',sup1:'\u00B9',ordm:'\u00BA',raquo:'\u00BB',frac14:'\u00BC',frac12:'\u00BD',frac34:'\u00BE',iquest:'\u00BF',Agrave:'\u00C0',Aacute:'\u00C1',Acirc:'\u00C2',Atilde:'\u00C3',Auml:'\u00C4',Aring:'\u00C5',AElig:'\u00C6',Ccedil:'\u00C7',Egrave:'\u00C8',Eacute:'\u00C9',Ecirc:'\u00CA',Euml:'\u00CB',Igrave:'\u00CC',Iacute:'\u00CD',Icirc:'\u00CE',Iuml:'\u00CF',ETH:'\u00D0',Ntilde:'\u00D1',Ograve:'\u00D2',Oacute:'\u00D3',Ocirc:'\u00D4',Otilde:'\u00D5',Ouml:'\u00D6',times:'\u00D7',Oslash:'\u00D8',Ugrave:'\u00D9',Uacute:'\u00DA',Ucirc:'\u00DB',Uuml:'\u00DC',Yacute:'\u00DD',THORN:'\u00DE',szlig:'\u00DF',agrave:'\u00E0',aacute:'\u00E1',acirc:'\u00E2',atilde:'\u00E3',auml:'\u00E4',aring:'\u00E5',aelig:'\u00E6',ccedil:'\u00E7',egrave:'\u00E8',eacute:'\u00E9',ecirc:'\u00EA',euml:'\u00EB',igrave:'\u00EC',iacute:'\u00ED',icirc:'\u00EE',iuml:'\u00EF',eth:'\u00F0',ntilde:'\u00F1',ograve:'\u00F2',oacute:'\u00F3',ocirc:'\u00F4',otilde:'\u00F5',ouml:'\u00F6',divide:'\u00F7',oslash:'\u00F8',ugrave:'\u00F9',uacute:'\u00FA',ucirc:'\u00FB',uuml:'\u00FC',yacute:'\u00FD',thorn:'\u00FE',yuml:'\u00FF',OElig:'\u0152',oelig:'\u0153',Scaron:'\u0160',scaron:'\u0161',Yuml:'\u0178',fnof:'\u0192',circ:'\u02C6',tilde:'\u02DC',Alpha:'\u0391',Beta:'\u0392',Gamma:'\u0393',Delta:'\u0394',Epsilon:'\u0395',Zeta:'\u0396',Eta:'\u0397',Theta:'\u0398',Iota:'\u0399',Kappa:'\u039A',Lambda:'\u039B',Mu:'\u039C',Nu:'\u039D',Xi:'\u039E',Omicron:'\u039F',Pi:'\u03A0',Rho:'\u03A1',Sigma:'\u03A3',Tau:'\u03A4',Upsilon:'\u03A5',Phi:'\u03A6',Chi:'\u03A7',Psi:'\u03A8',Omega:'\u03A9',alpha:'\u03B1',beta:'\u03B2',gamma:'\u03B3',delta:'\u03B4',epsilon:'\u03B5',zeta:'\u03B6',eta:'\u03B7',theta:'\u03B8',iota:'\u03B9',kappa:'\u03BA',lambda:'\u03BB',mu:'\u03BC',nu:'\u03BD',xi:'\u03BE',omicron:'\u03BF',pi:'\u03C0',rho:'\u03C1',sigmaf:'\u03C2',sigma:'\u03C3',tau:'\u03C4',upsilon:'\u03C5',phi:'\u03C6',chi:'\u03C7',psi:'\u03C8',omega:'\u03C9',thetasym:'\u03D1',upsih:'\u03D2',piv:'\u03D6',ensp:'\u2002',emsp:'\u2003',thinsp:'\u2009',zwnj:'\u200C',zwj:'\u200D',lrm:'\u200E',rlm:'\u200F',ndash:'\u2013',mdash:'\u2014',lsquo:'\u2018',rsquo:'\u2019',sbquo:'\u201A',ldquo:'\u201C',rdquo:'\u201D',bdquo:'\u201E',dagger:'\u2020',Dagger:'\u2021',bull:'\u2022',hellip:'\u2026',permil:'\u2030',prime:'\u2032',Prime:'\u2033',lsaquo:'\u2039',rsaquo:'\u203A',oline:'\u203E',frasl:'\u2044',euro:'\u20AC',image:'\u2111',weierp:'\u2118',real:'\u211C',trade:'\u2122',alefsym:'\u2135',larr:'\u2190',uarr:'\u2191',rarr:'\u2192',darr:'\u2193',harr:'\u2194',crarr:'\u21B5',lArr:'\u21D0',uArr:'\u21D1',rArr:'\u21D2',dArr:'\u21D3',hArr:'\u21D4',forall:'\u2200',part:'\u2202',exist:'\u2203',empty:'\u2205',nabla:'\u2207',isin:'\u2208',notin:'\u2209',ni:'\u220B',prod:'\u220F',sum:'\u2211',minus:'\u2212',lowast:'\u2217',radic:'\u221A',prop:'\u221D',infin:'\u221E',ang:'\u2220',and:'\u2227',or:'\u2228',cap:'\u2229',cup:'\u222A',int:'\u222B',there4:'\u2234',sim:'\u223C',cong:'\u2245',asymp:'\u2248',ne:'\u2260',equiv:'\u2261',le:'\u2264',ge:'\u2265',sub:'\u2282',sup:'\u2283',nsub:'\u2284',sube:'\u2286',supe:'\u2287',oplus:'\u2295',otimes:'\u2297',perp:'\u22A5',sdot:'\u22C5',lceil:'\u2308',rceil:'\u2309',lfloor:'\u230A',rfloor:'\u230B',loz:'\u25CA',spades:'\u2660',clubs:'\u2663',hearts:'\u2665',diams:'\u2666',lang:'\u27E8',rang:'\u27E9'};/***/},/* 15 */ /***/function(module,exports,__webpack_require__){Object.defineProperty(exports,"__esModule",{value:true});var error_handler_1=__webpack_require__(10);var scanner_1=__webpack_require__(12);var token_1=__webpack_require__(13);var Reader=function(){function Reader(){this.values=[];this.curly=this.paren=-1;}// A function following one of those tokens is an expression.
Reader.prototype.beforeFunctionExpression=function(t){return['(','{','[','in','typeof','instanceof','new','return','case','delete','throw','void',// assignment operators
'=','+=','-=','*=','**=','/=','%=','<<=','>>=','>>>=','&=','|=','^=',',',// binary/unary operators
'+','-','*','**','/','%','++','--','<<','>>','>>>','&','|','^','!','~','&&','||','?',':','===','==','>=','<=','<','>','!=','!=='].indexOf(t)>=0;};// Determine if forward slash (/) is an operator or part of a regular expression
// https://github.com/mozilla/sweet.js/wiki/design
Reader.prototype.isRegexStart=function(){var previous=this.values[this.values.length-1];var regex=previous!==null;switch(previous){case'this':case']':regex=false;break;case')':var keyword=this.values[this.paren-1];regex=keyword==='if'||keyword==='while'||keyword==='for'||keyword==='with';break;case'}':// Dividing a function by anything makes little sense,
// but we have to check for that.
regex=false;if(this.values[this.curly-3]==='function'){// Anonymous function, e.g. function(){} /42
var check=this.values[this.curly-4];regex=check?!this.beforeFunctionExpression(check):false;}else if(this.values[this.curly-4]==='function'){// Named function, e.g. function f(){} /42/
var check=this.values[this.curly-5];regex=check?!this.beforeFunctionExpression(check):true;}break;}return regex;};Reader.prototype.push=function(token){if(token.type===7/* Punctuator */||token.type===4/* Keyword */){if(token.value==='{'){this.curly=this.values.length;}else if(token.value==='('){this.paren=this.values.length;}this.values.push(token.value);}else{this.values.push(null);}};return Reader;}();var Tokenizer=function(){function Tokenizer(code,config){this.errorHandler=new error_handler_1.ErrorHandler();this.errorHandler.tolerant=config?typeof config.tolerant==='boolean'&&config.tolerant:false;this.scanner=new scanner_1.Scanner(code,this.errorHandler);this.scanner.trackComment=config?typeof config.comment==='boolean'&&config.comment:false;this.trackRange=config?typeof config.range==='boolean'&&config.range:false;this.trackLoc=config?typeof config.loc==='boolean'&&config.loc:false;this.buffer=[];this.reader=new Reader();}Tokenizer.prototype.errors=function(){return this.errorHandler.errors;};Tokenizer.prototype.getNextToken=function(){if(this.buffer.length===0){var comments=this.scanner.scanComments();if(this.scanner.trackComment){for(var i=0;i<comments.length;++i){var e=comments[i];var value=this.scanner.source.slice(e.slice[0],e.slice[1]);var comment={type:e.multiLine?'BlockComment':'LineComment',value:value};if(this.trackRange){comment.range=e.range;}if(this.trackLoc){comment.loc=e.loc;}this.buffer.push(comment);}}if(!this.scanner.eof()){var loc=void 0;if(this.trackLoc){loc={start:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},end:{}};}var startRegex=this.scanner.source[this.scanner.index]==='/'&&this.reader.isRegexStart();var token=startRegex?this.scanner.scanRegExp():this.scanner.lex();this.reader.push(token);var entry={type:token_1.TokenName[token.type],value:this.scanner.source.slice(token.start,token.end)};if(this.trackRange){entry.range=[token.start,token.end];}if(this.trackLoc){loc.end={line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart};entry.loc=loc;}if(token.type===9/* RegularExpression */){var pattern=token.pattern;var flags=token.flags;entry.regex={pattern:pattern,flags:flags};}this.buffer.push(entry);}}return this.buffer.shift();};return Tokenizer;}();exports.Tokenizer=Tokenizer;/***/}/******/]);});})(esprima);return esprima.exports;}var hasRequiredEsprima;function requireEsprima(){if(hasRequiredEsprima)return esprima$1;hasRequiredEsprima=1;Object.defineProperty(esprima$1,"__esModule",{value:true});esprima$1.parse=void 0;// This module is suitable for passing as options.parser when calling
// recast.parse to process ECMAScript code with Esprima:
//
//   const ast = recast.parse(source, {
//     parser: require("recast/parsers/esprima")
//   });
//
var util_1=requireUtil();function parse(source,options){var comments=[];var ast=requireEsprima$1().parse(source,{loc:true,locations:true,comment:true,onComment:comments,range:util_1.getOption(options,"range",false),tolerant:util_1.getOption(options,"tolerant",true),tokens:true,jsx:util_1.getOption(options,"jsx",false),sourceType:util_1.getOption(options,"sourceType","module")});if(!Array.isArray(ast.comments)){ast.comments=comments;}return ast;}esprima$1.parse=parse;return esprima$1;}var hasRequiredOptions;function requireOptions(){if(hasRequiredOptions)return options$1;hasRequiredOptions=1;Object.defineProperty(options$1,"__esModule",{value:true});options$1.normalize=void 0;var util_1=requireUtil();var defaults={parser:requireEsprima(),tabWidth:4,useTabs:false,reuseWhitespace:true,lineTerminator:util_1.getLineTerminator(),wrapColumn:74,sourceFileName:null,sourceMapName:null,sourceRoot:null,inputSourceMap:null,range:false,tolerant:true,quote:null,trailingComma:false,arrayBracketSpacing:false,objectCurlySpacing:true,arrowParensAlways:false,flowObjectCommas:true,tokens:true};var hasOwn=defaults.hasOwnProperty;// Copy options and fill in default values.
function normalize(opts){var options=opts||defaults;function get(key){return hasOwn.call(options,key)?options[key]:defaults[key];}return{tabWidth:+get("tabWidth"),useTabs:!!get("useTabs"),reuseWhitespace:!!get("reuseWhitespace"),lineTerminator:get("lineTerminator"),wrapColumn:Math.max(get("wrapColumn"),0),sourceFileName:get("sourceFileName"),sourceMapName:get("sourceMapName"),sourceRoot:get("sourceRoot"),inputSourceMap:get("inputSourceMap"),parser:get("esprima")||get("parser"),range:get("range"),tolerant:get("tolerant"),quote:get("quote"),trailingComma:get("trailingComma"),arrayBracketSpacing:get("arrayBracketSpacing"),objectCurlySpacing:get("objectCurlySpacing"),arrowParensAlways:get("arrowParensAlways"),flowObjectCommas:get("flowObjectCommas"),tokens:!!get("tokens")};}options$1.normalize=normalize;return options$1;}var lines={};var mapping={};var hasRequiredMapping;function requireMapping(){if(hasRequiredMapping)return mapping;hasRequiredMapping=1;Object.defineProperty(mapping,"__esModule",{value:true});var tslib_1=require$$0$3;var assert_1=tslib_1.__importDefault(require$$1__default$1.default);var util_1=requireUtil();var Mapping=/** @class */function(){function Mapping(sourceLines,sourceLoc,targetLoc){if(targetLoc===void 0){targetLoc=sourceLoc;}this.sourceLines=sourceLines;this.sourceLoc=sourceLoc;this.targetLoc=targetLoc;}Mapping.prototype.slice=function(lines,start,end){if(end===void 0){end=lines.lastPos();}var sourceLines=this.sourceLines;var sourceLoc=this.sourceLoc;var targetLoc=this.targetLoc;function skip(name){var sourceFromPos=sourceLoc[name];var targetFromPos=targetLoc[name];var targetToPos=start;if(name==="end"){targetToPos=end;}else{assert_1.default.strictEqual(name,"start");}return skipChars(sourceLines,sourceFromPos,lines,targetFromPos,targetToPos);}if(util_1.comparePos(start,targetLoc.start)<=0){if(util_1.comparePos(targetLoc.end,end)<=0){targetLoc={start:subtractPos(targetLoc.start,start.line,start.column),end:subtractPos(targetLoc.end,start.line,start.column)};// The sourceLoc can stay the same because the contents of the
// targetLoc have not changed.
}else if(util_1.comparePos(end,targetLoc.start)<=0){return null;}else{sourceLoc={start:sourceLoc.start,end:skip("end")};targetLoc={start:subtractPos(targetLoc.start,start.line,start.column),end:subtractPos(end,start.line,start.column)};}}else{if(util_1.comparePos(targetLoc.end,start)<=0){return null;}if(util_1.comparePos(targetLoc.end,end)<=0){sourceLoc={start:skip("start"),end:sourceLoc.end};targetLoc={// Same as subtractPos(start, start.line, start.column):
start:{line:1,column:0},end:subtractPos(targetLoc.end,start.line,start.column)};}else{sourceLoc={start:skip("start"),end:skip("end")};targetLoc={// Same as subtractPos(start, start.line, start.column):
start:{line:1,column:0},end:subtractPos(end,start.line,start.column)};}}return new Mapping(this.sourceLines,sourceLoc,targetLoc);};Mapping.prototype.add=function(line,column){return new Mapping(this.sourceLines,this.sourceLoc,{start:addPos(this.targetLoc.start,line,column),end:addPos(this.targetLoc.end,line,column)});};Mapping.prototype.subtract=function(line,column){return new Mapping(this.sourceLines,this.sourceLoc,{start:subtractPos(this.targetLoc.start,line,column),end:subtractPos(this.targetLoc.end,line,column)});};Mapping.prototype.indent=function(by,skipFirstLine,noNegativeColumns){if(skipFirstLine===void 0){skipFirstLine=false;}if(noNegativeColumns===void 0){noNegativeColumns=false;}if(by===0){return this;}var targetLoc=this.targetLoc;var startLine=targetLoc.start.line;var endLine=targetLoc.end.line;if(skipFirstLine&&startLine===1&&endLine===1){return this;}targetLoc={start:targetLoc.start,end:targetLoc.end};if(!skipFirstLine||startLine>1){var startColumn=targetLoc.start.column+by;targetLoc.start={line:startLine,column:noNegativeColumns?Math.max(0,startColumn):startColumn};}if(!skipFirstLine||endLine>1){var endColumn=targetLoc.end.column+by;targetLoc.end={line:endLine,column:noNegativeColumns?Math.max(0,endColumn):endColumn};}return new Mapping(this.sourceLines,this.sourceLoc,targetLoc);};return Mapping;}();mapping.default=Mapping;function addPos(toPos,line,column){return{line:toPos.line+line-1,column:toPos.line===1?toPos.column+column:toPos.column};}function subtractPos(fromPos,line,column){return{line:fromPos.line-line+1,column:fromPos.line===line?fromPos.column-column:fromPos.column};}function skipChars(sourceLines,sourceFromPos,targetLines,targetFromPos,targetToPos){var targetComparison=util_1.comparePos(targetFromPos,targetToPos);if(targetComparison===0){// Trivial case: no characters to skip.
return sourceFromPos;}var sourceCursor,targetCursor;if(targetComparison<0){// Skipping forward.
sourceCursor=sourceLines.skipSpaces(sourceFromPos)||sourceLines.lastPos();targetCursor=targetLines.skipSpaces(targetFromPos)||targetLines.lastPos();var lineDiff=targetToPos.line-targetCursor.line;sourceCursor.line+=lineDiff;targetCursor.line+=lineDiff;if(lineDiff>0){// If jumping to later lines, reset columns to the beginnings
// of those lines.
sourceCursor.column=0;targetCursor.column=0;}else{assert_1.default.strictEqual(lineDiff,0);}while(util_1.comparePos(targetCursor,targetToPos)<0&&targetLines.nextPos(targetCursor,true)){assert_1.default.ok(sourceLines.nextPos(sourceCursor,true));assert_1.default.strictEqual(sourceLines.charAt(sourceCursor),targetLines.charAt(targetCursor));}}else{// Skipping backward.
sourceCursor=sourceLines.skipSpaces(sourceFromPos,true)||sourceLines.firstPos();targetCursor=targetLines.skipSpaces(targetFromPos,true)||targetLines.firstPos();var lineDiff=targetToPos.line-targetCursor.line;sourceCursor.line+=lineDiff;targetCursor.line+=lineDiff;if(lineDiff<0){// If jumping to earlier lines, reset columns to the ends of
// those lines.
sourceCursor.column=sourceLines.getLineLength(sourceCursor.line);targetCursor.column=targetLines.getLineLength(targetCursor.line);}else{assert_1.default.strictEqual(lineDiff,0);}while(util_1.comparePos(targetToPos,targetCursor)<0&&targetLines.prevPos(targetCursor,true)){assert_1.default.ok(sourceLines.prevPos(sourceCursor,true));assert_1.default.strictEqual(sourceLines.charAt(sourceCursor),targetLines.charAt(targetCursor));}}return sourceCursor;}return mapping;}var hasRequiredLines;function requireLines(){if(hasRequiredLines)return lines;hasRequiredLines=1;Object.defineProperty(lines,"__esModule",{value:true});lines.concat=lines.fromString=lines.countSpaces=lines.Lines=void 0;var tslib_1=require$$0$3;var assert_1=tslib_1.__importDefault(require$$1__default$1.default);var source_map_1=tslib_1.__importDefault(requireSourceMap());var options_1=requireOptions();var util_1=requireUtil();var mapping_1=tslib_1.__importDefault(requireMapping());var Lines=/** @class */function(){function Lines(infos,sourceFileName){if(sourceFileName===void 0){sourceFileName=null;}this.infos=infos;this.mappings=[];this.cachedSourceMap=null;this.cachedTabWidth=void 0;assert_1.default.ok(infos.length>0);this.length=infos.length;this.name=sourceFileName||null;if(this.name){this.mappings.push(new mapping_1.default(this,{start:this.firstPos(),end:this.lastPos()}));}}Lines.prototype.toString=function(options){return this.sliceString(this.firstPos(),this.lastPos(),options);};Lines.prototype.getSourceMap=function(sourceMapName,sourceRoot){if(!sourceMapName){// Although we could make up a name or generate an anonymous
// source map, instead we assume that any consumer who does not
// provide a name does not actually want a source map.
return null;}var targetLines=this;function updateJSON(json){json=json||{};json.file=sourceMapName;if(sourceRoot){json.sourceRoot=sourceRoot;}return json;}if(targetLines.cachedSourceMap){// Since Lines objects are immutable, we can reuse any source map
// that was previously generated. Nevertheless, we return a new
// JSON object here to protect the cached source map from outside
// modification.
return updateJSON(targetLines.cachedSourceMap.toJSON());}var smg=new source_map_1.default.SourceMapGenerator(updateJSON());var sourcesToContents={};targetLines.mappings.forEach(function(mapping){var sourceCursor=mapping.sourceLines.skipSpaces(mapping.sourceLoc.start)||mapping.sourceLines.lastPos();var targetCursor=targetLines.skipSpaces(mapping.targetLoc.start)||targetLines.lastPos();while(util_1.comparePos(sourceCursor,mapping.sourceLoc.end)<0&&util_1.comparePos(targetCursor,mapping.targetLoc.end)<0){var sourceChar=mapping.sourceLines.charAt(sourceCursor);var targetChar=targetLines.charAt(targetCursor);assert_1.default.strictEqual(sourceChar,targetChar);var sourceName=mapping.sourceLines.name;// Add mappings one character at a time for maximum resolution.
smg.addMapping({source:sourceName,original:{line:sourceCursor.line,column:sourceCursor.column},generated:{line:targetCursor.line,column:targetCursor.column}});if(!hasOwn.call(sourcesToContents,sourceName)){var sourceContent=mapping.sourceLines.toString();smg.setSourceContent(sourceName,sourceContent);sourcesToContents[sourceName]=sourceContent;}targetLines.nextPos(targetCursor,true);mapping.sourceLines.nextPos(sourceCursor,true);}});targetLines.cachedSourceMap=smg;return smg.toJSON();};Lines.prototype.bootstrapCharAt=function(pos){assert_1.default.strictEqual(typeof pos,"object");assert_1.default.strictEqual(typeof pos.line,"number");assert_1.default.strictEqual(typeof pos.column,"number");var line=pos.line,column=pos.column,strings=this.toString().split(lineTerminatorSeqExp),string=strings[line-1];if(typeof string==="undefined")return"";if(column===string.length&&line<strings.length)return"\n";if(column>=string.length)return"";return string.charAt(column);};Lines.prototype.charAt=function(pos){assert_1.default.strictEqual(typeof pos,"object");assert_1.default.strictEqual(typeof pos.line,"number");assert_1.default.strictEqual(typeof pos.column,"number");var line=pos.line,column=pos.column,secret=this,infos=secret.infos,info=infos[line-1],c=column;if(typeof info==="undefined"||c<0)return"";var indent=this.getIndentAt(line);if(c<indent)return" ";c+=info.sliceStart-indent;if(c===info.sliceEnd&&line<this.length)return"\n";if(c>=info.sliceEnd)return"";return info.line.charAt(c);};Lines.prototype.stripMargin=function(width,skipFirstLine){if(width===0)return this;assert_1.default.ok(width>0,"negative margin: "+width);if(skipFirstLine&&this.length===1)return this;var lines=new Lines(this.infos.map(function(info,i){if(info.line&&(i>0||!skipFirstLine)){info=tslib_1.__assign(tslib_1.__assign({},info),{indent:Math.max(0,info.indent-width)});}return info;}));if(this.mappings.length>0){var newMappings_1=lines.mappings;assert_1.default.strictEqual(newMappings_1.length,0);this.mappings.forEach(function(mapping){newMappings_1.push(mapping.indent(width,skipFirstLine,true));});}return lines;};Lines.prototype.indent=function(by){if(by===0){return this;}var lines=new Lines(this.infos.map(function(info){if(info.line&&!info.locked){info=tslib_1.__assign(tslib_1.__assign({},info),{indent:info.indent+by});}return info;}));if(this.mappings.length>0){var newMappings_2=lines.mappings;assert_1.default.strictEqual(newMappings_2.length,0);this.mappings.forEach(function(mapping){newMappings_2.push(mapping.indent(by));});}return lines;};Lines.prototype.indentTail=function(by){if(by===0){return this;}if(this.length<2){return this;}var lines=new Lines(this.infos.map(function(info,i){if(i>0&&info.line&&!info.locked){info=tslib_1.__assign(tslib_1.__assign({},info),{indent:info.indent+by});}return info;}));if(this.mappings.length>0){var newMappings_3=lines.mappings;assert_1.default.strictEqual(newMappings_3.length,0);this.mappings.forEach(function(mapping){newMappings_3.push(mapping.indent(by,true));});}return lines;};Lines.prototype.lockIndentTail=function(){if(this.length<2){return this;}return new Lines(this.infos.map(function(info,i){return tslib_1.__assign(tslib_1.__assign({},info),{locked:i>0});}));};Lines.prototype.getIndentAt=function(line){assert_1.default.ok(line>=1,"no line "+line+" (line numbers start from 1)");return Math.max(this.infos[line-1].indent,0);};Lines.prototype.guessTabWidth=function(){if(typeof this.cachedTabWidth==="number"){return this.cachedTabWidth;}var counts=[];// Sparse array.
var lastIndent=0;for(var line=1,last=this.length;line<=last;++line){var info=this.infos[line-1];var sliced=info.line.slice(info.sliceStart,info.sliceEnd);// Whitespace-only lines don't tell us much about the likely tab
// width of this code.
if(isOnlyWhitespace(sliced)){continue;}var diff=Math.abs(info.indent-lastIndent);counts[diff]=~~counts[diff]+1;lastIndent=info.indent;}var maxCount=-1;var result=2;for(var tabWidth=1;tabWidth<counts.length;tabWidth+=1){if(hasOwn.call(counts,tabWidth)&&counts[tabWidth]>maxCount){maxCount=counts[tabWidth];result=tabWidth;}}return this.cachedTabWidth=result;};// Determine if the list of lines has a first line that starts with a //
// or /* comment. If this is the case, the code may need to be wrapped in
// parens to avoid ASI issues.
Lines.prototype.startsWithComment=function(){if(this.infos.length===0){return false;}var firstLineInfo=this.infos[0],sliceStart=firstLineInfo.sliceStart,sliceEnd=firstLineInfo.sliceEnd,firstLine=firstLineInfo.line.slice(sliceStart,sliceEnd).trim();return firstLine.length===0||firstLine.slice(0,2)==="//"||firstLine.slice(0,2)==="/*";};Lines.prototype.isOnlyWhitespace=function(){return isOnlyWhitespace(this.toString());};Lines.prototype.isPrecededOnlyByWhitespace=function(pos){var info=this.infos[pos.line-1];var indent=Math.max(info.indent,0);var diff=pos.column-indent;if(diff<=0){// If pos.column does not exceed the indentation amount, then
// there must be only whitespace before it.
return true;}var start=info.sliceStart;var end=Math.min(start+diff,info.sliceEnd);var prefix=info.line.slice(start,end);return isOnlyWhitespace(prefix);};Lines.prototype.getLineLength=function(line){var info=this.infos[line-1];return this.getIndentAt(line)+info.sliceEnd-info.sliceStart;};Lines.prototype.nextPos=function(pos,skipSpaces){if(skipSpaces===void 0){skipSpaces=false;}var l=Math.max(pos.line,0),c=Math.max(pos.column,0);if(c<this.getLineLength(l)){pos.column+=1;return skipSpaces?!!this.skipSpaces(pos,false,true):true;}if(l<this.length){pos.line+=1;pos.column=0;return skipSpaces?!!this.skipSpaces(pos,false,true):true;}return false;};Lines.prototype.prevPos=function(pos,skipSpaces){if(skipSpaces===void 0){skipSpaces=false;}var l=pos.line,c=pos.column;if(c<1){l-=1;if(l<1)return false;c=this.getLineLength(l);}else{c=Math.min(c-1,this.getLineLength(l));}pos.line=l;pos.column=c;return skipSpaces?!!this.skipSpaces(pos,true,true):true;};Lines.prototype.firstPos=function(){// Trivial, but provided for completeness.
return{line:1,column:0};};Lines.prototype.lastPos=function(){return{line:this.length,column:this.getLineLength(this.length)};};Lines.prototype.skipSpaces=function(pos,backward,modifyInPlace){if(backward===void 0){backward=false;}if(modifyInPlace===void 0){modifyInPlace=false;}if(pos){pos=modifyInPlace?pos:{line:pos.line,column:pos.column};}else if(backward){pos=this.lastPos();}else{pos=this.firstPos();}if(backward){while(this.prevPos(pos)){if(!isOnlyWhitespace(this.charAt(pos))&&this.nextPos(pos)){return pos;}}return null;}else{while(isOnlyWhitespace(this.charAt(pos))){if(!this.nextPos(pos)){return null;}}return pos;}};Lines.prototype.trimLeft=function(){var pos=this.skipSpaces(this.firstPos(),false,true);return pos?this.slice(pos):emptyLines;};Lines.prototype.trimRight=function(){var pos=this.skipSpaces(this.lastPos(),true,true);return pos?this.slice(this.firstPos(),pos):emptyLines;};Lines.prototype.trim=function(){var start=this.skipSpaces(this.firstPos(),false,true);if(start===null){return emptyLines;}var end=this.skipSpaces(this.lastPos(),true,true);if(end===null){return emptyLines;}return this.slice(start,end);};Lines.prototype.eachPos=function(callback,startPos,skipSpaces){if(startPos===void 0){startPos=this.firstPos();}if(skipSpaces===void 0){skipSpaces=false;}var pos=this.firstPos();if(startPos){pos.line=startPos.line,pos.column=startPos.column;}if(skipSpaces&&!this.skipSpaces(pos,false,true)){return;// Encountered nothing but spaces.
}do callback.call(this,pos);while(this.nextPos(pos,skipSpaces));};Lines.prototype.bootstrapSlice=function(start,end){var strings=this.toString().split(lineTerminatorSeqExp).slice(start.line-1,end.line);if(strings.length>0){strings.push(strings.pop().slice(0,end.column));strings[0]=strings[0].slice(start.column);}return fromString(strings.join("\n"));};Lines.prototype.slice=function(start,end){if(!end){if(!start){// The client seems to want a copy of this Lines object, but
// Lines objects are immutable, so it's perfectly adequate to
// return the same object.
return this;}// Slice to the end if no end position was provided.
end=this.lastPos();}if(!start){throw new Error("cannot slice with end but not start");}var sliced=this.infos.slice(start.line-1,end.line);if(start.line===end.line){sliced[0]=sliceInfo(sliced[0],start.column,end.column);}else{assert_1.default.ok(start.line<end.line);sliced[0]=sliceInfo(sliced[0],start.column);sliced.push(sliceInfo(sliced.pop(),0,end.column));}var lines=new Lines(sliced);if(this.mappings.length>0){var newMappings_4=lines.mappings;assert_1.default.strictEqual(newMappings_4.length,0);this.mappings.forEach(function(mapping){var sliced=mapping.slice(this,start,end);if(sliced){newMappings_4.push(sliced);}},this);}return lines;};Lines.prototype.bootstrapSliceString=function(start,end,options){return this.slice(start,end).toString(options);};Lines.prototype.sliceString=function(start,end,options){if(start===void 0){start=this.firstPos();}if(end===void 0){end=this.lastPos();}var _a=options_1.normalize(options),tabWidth=_a.tabWidth,useTabs=_a.useTabs,reuseWhitespace=_a.reuseWhitespace,lineTerminator=_a.lineTerminator;var parts=[];for(var line=start.line;line<=end.line;++line){var info=this.infos[line-1];if(line===start.line){if(line===end.line){info=sliceInfo(info,start.column,end.column);}else{info=sliceInfo(info,start.column);}}else if(line===end.line){info=sliceInfo(info,0,end.column);}var indent=Math.max(info.indent,0);var before_1=info.line.slice(0,info.sliceStart);if(reuseWhitespace&&isOnlyWhitespace(before_1)&&countSpaces(before_1,tabWidth)===indent){// Reuse original spaces if the indentation is correct.
parts.push(info.line.slice(0,info.sliceEnd));continue;}var tabs=0;var spaces=indent;if(useTabs){tabs=Math.floor(indent/tabWidth);spaces-=tabs*tabWidth;}var result="";if(tabs>0){result+=new Array(tabs+1).join("\t");}if(spaces>0){result+=new Array(spaces+1).join(" ");}result+=info.line.slice(info.sliceStart,info.sliceEnd);parts.push(result);}return parts.join(lineTerminator);};Lines.prototype.isEmpty=function(){return this.length<2&&this.getLineLength(1)<1;};Lines.prototype.join=function(elements){var separator=this;var infos=[];var mappings=[];var prevInfo;function appendLines(linesOrNull){if(linesOrNull===null){return;}if(prevInfo){var info=linesOrNull.infos[0];var indent=new Array(info.indent+1).join(" ");var prevLine_1=infos.length;var prevColumn_1=Math.max(prevInfo.indent,0)+prevInfo.sliceEnd-prevInfo.sliceStart;prevInfo.line=prevInfo.line.slice(0,prevInfo.sliceEnd)+indent+info.line.slice(info.sliceStart,info.sliceEnd);// If any part of a line is indentation-locked, the whole line
// will be indentation-locked.
prevInfo.locked=prevInfo.locked||info.locked;prevInfo.sliceEnd=prevInfo.line.length;if(linesOrNull.mappings.length>0){linesOrNull.mappings.forEach(function(mapping){mappings.push(mapping.add(prevLine_1,prevColumn_1));});}}else if(linesOrNull.mappings.length>0){mappings.push.apply(mappings,linesOrNull.mappings);}linesOrNull.infos.forEach(function(info,i){if(!prevInfo||i>0){prevInfo=tslib_1.__assign({},info);infos.push(prevInfo);}});}function appendWithSeparator(linesOrNull,i){if(i>0)appendLines(separator);appendLines(linesOrNull);}elements.map(function(elem){var lines=fromString(elem);if(lines.isEmpty())return null;return lines;}).forEach(function(linesOrNull,i){if(separator.isEmpty()){appendLines(linesOrNull);}else{appendWithSeparator(linesOrNull,i);}});if(infos.length<1)return emptyLines;var lines=new Lines(infos);lines.mappings=mappings;return lines;};Lines.prototype.concat=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var list=[this];list.push.apply(list,args);assert_1.default.strictEqual(list.length,args.length+1);return emptyLines.join(list);};return Lines;}();lines.Lines=Lines;var fromStringCache={};var hasOwn=fromStringCache.hasOwnProperty;var maxCacheKeyLen=10;function countSpaces(spaces,tabWidth){var count=0;var len=spaces.length;for(var i=0;i<len;++i){switch(spaces.charCodeAt(i)){case 9:{// '\t'
assert_1.default.strictEqual(typeof tabWidth,"number");assert_1.default.ok(tabWidth>0);var next=Math.ceil(count/tabWidth)*tabWidth;if(next===count){count+=tabWidth;}else{count=next;}break;}case 11:// '\v'
case 12:// '\f'
case 13:// '\r'
case 0xfeff:// zero-width non-breaking space
// These characters contribute nothing to indentation.
break;case 32:// ' '
default:// Treat all other whitespace like ' '.
count+=1;break;}}return count;}lines.countSpaces=countSpaces;var leadingSpaceExp=/^\s*/;// As specified here: http://www.ecma-international.org/ecma-262/6.0/#sec-line-terminators
var lineTerminatorSeqExp=/\u000D\u000A|\u000D(?!\u000A)|\u000A|\u2028|\u2029/;/**
	 * @param {Object} options - Options object that configures printing.
	 */function fromString(string,options){if(string instanceof Lines)return string;string+="";var tabWidth=options&&options.tabWidth;var tabless=string.indexOf("\t")<0;var cacheable=!options&&tabless&&string.length<=maxCacheKeyLen;assert_1.default.ok(tabWidth||tabless,"No tab width specified but encountered tabs in string\n"+string);if(cacheable&&hasOwn.call(fromStringCache,string))return fromStringCache[string];var lines=new Lines(string.split(lineTerminatorSeqExp).map(function(line){// TODO: handle null exec result
var spaces=leadingSpaceExp.exec(line)[0];return{line:line,indent:countSpaces(spaces,tabWidth),// Boolean indicating whether this line can be reindented.
locked:false,sliceStart:spaces.length,sliceEnd:line.length};}),options_1.normalize(options).sourceFileName);if(cacheable)fromStringCache[string]=lines;return lines;}lines.fromString=fromString;function isOnlyWhitespace(string){return!/\S/.test(string);}function sliceInfo(info,startCol,endCol){var sliceStart=info.sliceStart;var sliceEnd=info.sliceEnd;var indent=Math.max(info.indent,0);var lineLength=indent+sliceEnd-sliceStart;if(typeof endCol==="undefined"){endCol=lineLength;}startCol=Math.max(startCol,0);endCol=Math.min(endCol,lineLength);endCol=Math.max(endCol,startCol);if(endCol<indent){indent=endCol;sliceEnd=sliceStart;}else{sliceEnd-=lineLength-endCol;}lineLength=endCol;lineLength-=startCol;if(startCol<indent){indent-=startCol;}else{startCol-=indent;indent=0;sliceStart+=startCol;}assert_1.default.ok(indent>=0);assert_1.default.ok(sliceStart<=sliceEnd);assert_1.default.strictEqual(lineLength,indent+sliceEnd-sliceStart);if(info.indent===indent&&info.sliceStart===sliceStart&&info.sliceEnd===sliceEnd){return info;}return{line:info.line,indent:indent,// A destructive slice always unlocks indentation.
locked:false,sliceStart:sliceStart,sliceEnd:sliceEnd};}function concat(elements){return emptyLines.join(elements);}lines.concat=concat;// The emptyLines object needs to be created all the way down here so that
// Lines.prototype will be fully populated.
var emptyLines=fromString("");return lines;}var comments={};var hasRequiredComments;function requireComments(){if(hasRequiredComments)return comments;hasRequiredComments=1;Object.defineProperty(comments,"__esModule",{value:true});comments.printComments=comments.attach=void 0;var tslib_1=require$$0$3;var assert_1=tslib_1.__importDefault(require$$1__default$1.default);var types=tslib_1.__importStar(requireMain$1());var n=types.namedTypes;var isArray=types.builtInTypes.array;var isObject=types.builtInTypes.object;var lines_1=requireLines();var util_1=requireUtil();var childNodesCache=new WeakMap();// TODO Move a non-caching implementation of this function into ast-types,
// and implement a caching wrapper function here.
function getSortedChildNodes(node,lines,resultArray){if(!node){return resultArray;}// The .loc checks below are sensitive to some of the problems that
// are fixed by this utility function. Specifically, if it decides to
// set node.loc to null, indicating that the node's .loc information
// is unreliable, then we don't want to add node to the resultArray.
util_1.fixFaultyLocations(node,lines);if(resultArray){if(n.Node.check(node)&&n.SourceLocation.check(node.loc)){// This reverse insertion sort almost always takes constant
// time because we almost always (maybe always?) append the
// nodes in order anyway.
var i=resultArray.length-1;for(;i>=0;--i){var child=resultArray[i];if(child&&child.loc&&util_1.comparePos(child.loc.end,node.loc.start)<=0){break;}}resultArray.splice(i+1,0,node);return resultArray;}}else{var childNodes=childNodesCache.get(node);if(childNodes){return childNodes;}}var names;if(isArray.check(node)){names=Object.keys(node);}else if(isObject.check(node)){names=types.getFieldNames(node);}else{return resultArray;}if(!resultArray){childNodesCache.set(node,resultArray=[]);}for(var i=0,nameCount=names.length;i<nameCount;++i){getSortedChildNodes(node[names[i]],lines,resultArray);}return resultArray;}// As efficiently as possible, decorate the comment object with
// .precedingNode, .enclosingNode, and/or .followingNode properties, at
// least one of which is guaranteed to be defined.
function decorateComment(node,comment,lines){var childNodes=getSortedChildNodes(node,lines);// Time to dust off the old binary search robes and wizard hat.
var left=0;var right=childNodes&&childNodes.length;var precedingNode;var followingNode;while(typeof right==="number"&&left<right){var middle=left+right>>1;var child=childNodes[middle];if(util_1.comparePos(child.loc.start,comment.loc.start)<=0&&util_1.comparePos(comment.loc.end,child.loc.end)<=0){// The comment is completely contained by this child node.
decorateComment(comment.enclosingNode=child,comment,lines);return;// Abandon the binary search at this level.
}if(util_1.comparePos(child.loc.end,comment.loc.start)<=0){// This child node falls completely before the comment.
// Because we will never consider this node or any nodes
// before it again, this node must be the closest preceding
// node we have encountered so far.
precedingNode=child;left=middle+1;continue;}if(util_1.comparePos(comment.loc.end,child.loc.start)<=0){// This child node falls completely after the comment.
// Because we will never consider this node or any nodes after
// it again, this node must be the closest following node we
// have encountered so far.
followingNode=child;right=middle;continue;}throw new Error("Comment location overlaps with node location");}if(precedingNode){comment.precedingNode=precedingNode;}if(followingNode){comment.followingNode=followingNode;}}function attach(comments,ast,lines){if(!isArray.check(comments)){return;}var tiesToBreak=[];comments.forEach(function(comment){comment.loc.lines=lines;decorateComment(ast,comment,lines);var pn=comment.precedingNode;var en=comment.enclosingNode;var fn=comment.followingNode;if(pn&&fn){var tieCount=tiesToBreak.length;if(tieCount>0){var lastTie=tiesToBreak[tieCount-1];assert_1.default.strictEqual(lastTie.precedingNode===comment.precedingNode,lastTie.followingNode===comment.followingNode);if(lastTie.followingNode!==comment.followingNode){breakTies(tiesToBreak,lines);}}tiesToBreak.push(comment);}else if(pn){// No contest: we have a trailing comment.
breakTies(tiesToBreak,lines);addTrailingComment(pn,comment);}else if(fn){// No contest: we have a leading comment.
breakTies(tiesToBreak,lines);addLeadingComment(fn,comment);}else if(en){// The enclosing node has no child nodes at all, so what we
// have here is a dangling comment, e.g. [/* crickets */].
breakTies(tiesToBreak,lines);addDanglingComment(en,comment);}else{throw new Error("AST contains no nodes at all?");}});breakTies(tiesToBreak,lines);comments.forEach(function(comment){// These node references were useful for breaking ties, but we
// don't need them anymore, and they create cycles in the AST that
// may lead to infinite recursion if we don't delete them here.
delete comment.precedingNode;delete comment.enclosingNode;delete comment.followingNode;});}comments.attach=attach;function breakTies(tiesToBreak,lines){var tieCount=tiesToBreak.length;if(tieCount===0){return;}var pn=tiesToBreak[0].precedingNode;var fn=tiesToBreak[0].followingNode;var gapEndPos=fn.loc.start;// Iterate backwards through tiesToBreak, examining the gaps
// between the tied comments. In order to qualify as leading, a
// comment must be separated from fn by an unbroken series of
// whitespace-only gaps (or other comments).
var indexOfFirstLeadingComment=tieCount;var comment;for(;indexOfFirstLeadingComment>0;--indexOfFirstLeadingComment){comment=tiesToBreak[indexOfFirstLeadingComment-1];assert_1.default.strictEqual(comment.precedingNode,pn);assert_1.default.strictEqual(comment.followingNode,fn);var gap=lines.sliceString(comment.loc.end,gapEndPos);if(/\S/.test(gap)){// The gap string contained something other than whitespace.
break;}gapEndPos=comment.loc.start;}while(indexOfFirstLeadingComment<=tieCount&&(comment=tiesToBreak[indexOfFirstLeadingComment])&&(// If the comment is a //-style comment and indented more
// deeply than the node itself, reconsider it as trailing.
comment.type==="Line"||comment.type==="CommentLine")&&comment.loc.start.column>fn.loc.start.column){++indexOfFirstLeadingComment;}tiesToBreak.forEach(function(comment,i){if(i<indexOfFirstLeadingComment){addTrailingComment(pn,comment);}else{addLeadingComment(fn,comment);}});tiesToBreak.length=0;}function addCommentHelper(node,comment){var comments=node.comments||(node.comments=[]);comments.push(comment);}function addLeadingComment(node,comment){comment.leading=true;comment.trailing=false;addCommentHelper(node,comment);}function addDanglingComment(node,comment){comment.leading=false;comment.trailing=false;addCommentHelper(node,comment);}function addTrailingComment(node,comment){comment.leading=false;comment.trailing=true;addCommentHelper(node,comment);}function printLeadingComment(commentPath,print){var comment=commentPath.getValue();n.Comment.assert(comment);var loc=comment.loc;var lines=loc&&loc.lines;var parts=[print(commentPath)];if(comment.trailing){// When we print trailing comments as leading comments, we don't
// want to bring any trailing spaces along.
parts.push("\n");}else if(lines instanceof lines_1.Lines){var trailingSpace=lines.slice(loc.end,lines.skipSpaces(loc.end)||lines.lastPos());if(trailingSpace.length===1){// If the trailing space contains no newlines, then we want to
// preserve it exactly as we found it.
parts.push(trailingSpace);}else{// If the trailing space contains newlines, then replace it
// with just that many newlines, with all other spaces removed.
parts.push(new Array(trailingSpace.length).join("\n"));}}else{parts.push("\n");}return lines_1.concat(parts);}function printTrailingComment(commentPath,print){var comment=commentPath.getValue(commentPath);n.Comment.assert(comment);var loc=comment.loc;var lines=loc&&loc.lines;var parts=[];if(lines instanceof lines_1.Lines){var fromPos=lines.skipSpaces(loc.start,true)||lines.firstPos();var leadingSpace=lines.slice(fromPos,loc.start);if(leadingSpace.length===1){// If the leading space contains no newlines, then we want to
// preserve it exactly as we found it.
parts.push(leadingSpace);}else{// If the leading space contains newlines, then replace it
// with just that many newlines, sans all other spaces.
parts.push(new Array(leadingSpace.length).join("\n"));}}parts.push(print(commentPath));return lines_1.concat(parts);}function printComments(path,print){var value=path.getValue();var innerLines=print(path);var comments=n.Node.check(value)&&types.getFieldValue(value,"comments");if(!comments||comments.length===0){return innerLines;}var leadingParts=[];var trailingParts=[innerLines];path.each(function(commentPath){var comment=commentPath.getValue();var leading=types.getFieldValue(comment,"leading");var trailing=types.getFieldValue(comment,"trailing");if(leading||trailing&&!(n.Statement.check(value)||comment.type==="Block"||comment.type==="CommentBlock")){leadingParts.push(printLeadingComment(commentPath,print));}else if(trailing){trailingParts.push(printTrailingComment(commentPath,print));}},"comments");leadingParts.push.apply(leadingParts,trailingParts);return lines_1.concat(leadingParts);}comments.printComments=printComments;return comments;}var hasRequiredParser;function requireParser(){if(hasRequiredParser)return parser$1;hasRequiredParser=1;Object.defineProperty(parser$1,"__esModule",{value:true});parser$1.parse=void 0;var tslib_1=require$$0$3;var assert_1=tslib_1.__importDefault(require$$1__default$1.default);var types=tslib_1.__importStar(requireMain$1());var b=types.builders;var isObject=types.builtInTypes.object;var isArray=types.builtInTypes.array;var options_1=requireOptions();var lines_1=requireLines();var comments_1=requireComments();var util=tslib_1.__importStar(requireUtil());function parse(source,options){options=options_1.normalize(options);var lines=lines_1.fromString(source,options);var sourceWithoutTabs=lines.toString({tabWidth:options.tabWidth,reuseWhitespace:false,useTabs:false});var comments=[];var ast=options.parser.parse(sourceWithoutTabs,{jsx:true,loc:true,locations:true,range:options.range,comment:true,onComment:comments,tolerant:util.getOption(options,"tolerant",true),ecmaVersion:6,sourceType:util.getOption(options,"sourceType","module")});// Use ast.tokens if possible, and otherwise fall back to the Esprima
// tokenizer. All the preconfigured ../parsers/* expose ast.tokens
// automatically, but custom parsers might need additional configuration
// to avoid this fallback.
var tokens=Array.isArray(ast.tokens)?ast.tokens:requireEsprima$1().tokenize(sourceWithoutTabs,{loc:true});// We will reattach the tokens array to the file object below.
delete ast.tokens;// Make sure every token has a token.value string.
tokens.forEach(function(token){if(typeof token.value!=="string"){token.value=lines.sliceString(token.loc.start,token.loc.end);}});if(Array.isArray(ast.comments)){comments=ast.comments;delete ast.comments;}if(ast.loc){// If the source was empty, some parsers give loc.{start,end}.line
// values of 0, instead of the minimum of 1.
util.fixFaultyLocations(ast,lines);}else{ast.loc={start:lines.firstPos(),end:lines.lastPos()};}ast.loc.lines=lines;ast.loc.indent=0;var file;var program;if(ast.type==="Program"){program=ast;// In order to ensure we reprint leading and trailing program
// comments, wrap the original Program node with a File node. Only
// ESTree parsers (Acorn and Esprima) return a Program as the root AST
// node. Most other (Babylon-like) parsers return a File.
file=b.file(ast,options.sourceFileName||null);file.loc={start:lines.firstPos(),end:lines.lastPos(),lines:lines,indent:0};}else if(ast.type==="File"){file=ast;program=file.program;}// Expose file.tokens unless the caller passed false for options.tokens.
if(options.tokens){file.tokens=tokens;}// Expand the Program's .loc to include all comments (not just those
// attached to the Program node, as its children may have comments as
// well), since sometimes program.loc.{start,end} will coincide with the
// .loc.{start,end} of the first and last *statements*, mistakenly
// excluding comments that fall outside that region.
var trueProgramLoc=util.getTrueLoc({type:program.type,loc:program.loc,body:[],comments:comments},lines);program.loc.start=trueProgramLoc.start;program.loc.end=trueProgramLoc.end;// Passing file.program here instead of just file means that initial
// comments will be attached to program.body[0] instead of program.
comments_1.attach(comments,program.body.length?file.program:file,lines);// Return a copy of the original AST so that any changes made may be
// compared to the original.
return new TreeCopier(lines,tokens).copy(file);}parser$1.parse=parse;var TreeCopier=function TreeCopier(lines,tokens){assert_1.default.ok(this instanceof TreeCopier);this.lines=lines;this.tokens=tokens;this.startTokenIndex=0;this.endTokenIndex=tokens.length;this.indent=0;this.seen=new Map();};var TCp=TreeCopier.prototype;TCp.copy=function(node){if(this.seen.has(node)){return this.seen.get(node);}if(isArray.check(node)){var copy_1=new Array(node.length);this.seen.set(node,copy_1);node.forEach(function(item,i){copy_1[i]=this.copy(item);},this);return copy_1;}if(!isObject.check(node)){return node;}util.fixFaultyLocations(node,this.lines);var copy=Object.create(Object.getPrototypeOf(node),{original:{// Provide a link from the copy to the original.
value:node,configurable:false,enumerable:false,writable:true}});this.seen.set(node,copy);var loc=node.loc;var oldIndent=this.indent;var newIndent=oldIndent;var oldStartTokenIndex=this.startTokenIndex;var oldEndTokenIndex=this.endTokenIndex;if(loc){// When node is a comment, we set node.loc.indent to
// node.loc.start.column so that, when/if we print the comment by
// itself, we can strip that much whitespace from the left margin of
// the comment. This only really matters for multiline Block comments,
// but it doesn't hurt for Line comments.
if(node.type==="Block"||node.type==="Line"||node.type==="CommentBlock"||node.type==="CommentLine"||this.lines.isPrecededOnlyByWhitespace(loc.start)){newIndent=this.indent=loc.start.column;}// Every node.loc has a reference to the original source lines as well
// as a complete list of source tokens.
loc.lines=this.lines;loc.tokens=this.tokens;loc.indent=newIndent;// Set loc.start.token and loc.end.token such that
// loc.tokens.slice(loc.start.token, loc.end.token) returns a list of
// all the tokens that make up this node.
this.findTokenRange(loc);}var keys=Object.keys(node);var keyCount=keys.length;for(var i=0;i<keyCount;++i){var key=keys[i];if(key==="loc"){copy[key]=node[key];}else if(key==="tokens"&&node.type==="File"){// Preserve file.tokens (uncopied) in case client code cares about
// it, even though Recast ignores it when reprinting.
copy[key]=node[key];}else{copy[key]=this.copy(node[key]);}}this.indent=oldIndent;this.startTokenIndex=oldStartTokenIndex;this.endTokenIndex=oldEndTokenIndex;return copy;};// If we didn't have any idea where in loc.tokens to look for tokens
// contained by this loc, a binary search would be appropriate, but
// because we maintain this.startTokenIndex and this.endTokenIndex as we
// traverse the AST, we only need to make small (linear) adjustments to
// those indexes with each recursive iteration.
TCp.findTokenRange=function(loc){// In the unlikely event that loc.tokens[this.startTokenIndex] starts
// *after* loc.start, we need to rewind this.startTokenIndex first.
while(this.startTokenIndex>0){var token=loc.tokens[this.startTokenIndex];if(util.comparePos(loc.start,token.loc.start)<0){--this.startTokenIndex;}else break;}// In the unlikely event that loc.tokens[this.endTokenIndex - 1] ends
// *before* loc.end, we need to fast-forward this.endTokenIndex first.
while(this.endTokenIndex<loc.tokens.length){var token=loc.tokens[this.endTokenIndex];if(util.comparePos(token.loc.end,loc.end)<0){++this.endTokenIndex;}else break;}// Increment this.startTokenIndex until we've found the first token
// contained by this node.
while(this.startTokenIndex<this.endTokenIndex){var token=loc.tokens[this.startTokenIndex];if(util.comparePos(token.loc.start,loc.start)<0){++this.startTokenIndex;}else break;}// Index into loc.tokens of the first token within this node.
loc.start.token=this.startTokenIndex;// Decrement this.endTokenIndex until we've found the first token after
// this node (not contained by the node).
while(this.endTokenIndex>this.startTokenIndex){var token=loc.tokens[this.endTokenIndex-1];if(util.comparePos(loc.end,token.loc.end)<0){--this.endTokenIndex;}else break;}// Index into loc.tokens of the first token *after* this node.
// If loc.start.token === loc.end.token, the node contains no tokens,
// and the index is that of the next token following this node.
loc.end.token=this.endTokenIndex;};return parser$1;}var printer={};var patcher={};var fastPath={};var hasRequiredFastPath;function requireFastPath(){if(hasRequiredFastPath)return fastPath;hasRequiredFastPath=1;Object.defineProperty(fastPath,"__esModule",{value:true});var tslib_1=require$$0$3;var assert_1=tslib_1.__importDefault(require$$1__default$1.default);var types=tslib_1.__importStar(requireMain$1());var util=tslib_1.__importStar(requireUtil());var n=types.namedTypes;var isArray=types.builtInTypes.array;var isNumber=types.builtInTypes.number;var PRECEDENCE={};[["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].forEach(function(tier,i){tier.forEach(function(op){PRECEDENCE[op]=i;});});var FastPath=function FastPath(value){assert_1.default.ok(this instanceof FastPath);this.stack=[value];};var FPp=FastPath.prototype;// Static convenience function for coercing a value to a FastPath.
FastPath.from=function(obj){if(obj instanceof FastPath){// Return a defensive copy of any existing FastPath instances.
return obj.copy();}if(obj instanceof types.NodePath){// For backwards compatibility, unroll NodePath instances into
// lightweight FastPath [..., name, value] stacks.
var copy=Object.create(FastPath.prototype);var stack=[obj.value];for(var pp=void 0;pp=obj.parentPath;obj=pp)stack.push(obj.name,pp.value);copy.stack=stack.reverse();return copy;}// Otherwise use obj as the value of the new FastPath instance.
return new FastPath(obj);};FPp.copy=function copy(){var copy=Object.create(FastPath.prototype);copy.stack=this.stack.slice(0);return copy;};// The name of the current property is always the penultimate element of
// this.stack, and always a String.
FPp.getName=function getName(){var s=this.stack;var len=s.length;if(len>1){return s[len-2];}// Since the name is always a string, null is a safe sentinel value to
// return if we do not know the name of the (root) value.
return null;};// The value of the current property is always the final element of
// this.stack.
FPp.getValue=function getValue(){var s=this.stack;return s[s.length-1];};FPp.valueIsDuplicate=function(){var s=this.stack;var valueIndex=s.length-1;return s.lastIndexOf(s[valueIndex],valueIndex-1)>=0;};function getNodeHelper(path,count){var s=path.stack;for(var i=s.length-1;i>=0;i-=2){var value=s[i];if(n.Node.check(value)&&--count<0){return value;}}return null;}FPp.getNode=function getNode(count){if(count===void 0){count=0;}return getNodeHelper(this,~~count);};FPp.getParentNode=function getParentNode(count){if(count===void 0){count=0;}return getNodeHelper(this,~~count+1);};// The length of the stack can be either even or odd, depending on whether
// or not we have a name for the root value. The difference between the
// index of the root value and the index of the final value is always
// even, though, which allows us to return the root value in constant time
// (i.e. without iterating backwards through the stack).
FPp.getRootValue=function getRootValue(){var s=this.stack;if(s.length%2===0){return s[1];}return s[0];};// Temporarily push properties named by string arguments given after the
// callback function onto this.stack, then call the callback with a
// reference to this (modified) FastPath object. Note that the stack will
// be restored to its original state after the callback is finished, so it
// is probably a mistake to retain a reference to the path.
FPp.call=function call(callback/*, name1, name2, ... */){var s=this.stack;var origLen=s.length;var value=s[origLen-1];var argc=arguments.length;for(var i=1;i<argc;++i){var name=arguments[i];value=value[name];s.push(name,value);}var result=callback(this);s.length=origLen;return result;};// Similar to FastPath.prototype.call, except that the value obtained by
// accessing this.getValue()[name1][name2]... should be array-like. The
// callback will be called with a reference to this path object for each
// element of the array.
FPp.each=function each(callback/*, name1, name2, ... */){var s=this.stack;var origLen=s.length;var value=s[origLen-1];var argc=arguments.length;for(var i=1;i<argc;++i){var name=arguments[i];value=value[name];s.push(name,value);}for(var i=0;i<value.length;++i){if(i in value){s.push(i,value[i]);// If the callback needs to know the value of i, call
// path.getName(), assuming path is the parameter name.
callback(this);s.length-=2;}}s.length=origLen;};// Similar to FastPath.prototype.each, except that the results of the
// callback function invocations are stored in an array and returned at
// the end of the iteration.
FPp.map=function map(callback/*, name1, name2, ... */){var s=this.stack;var origLen=s.length;var value=s[origLen-1];var argc=arguments.length;for(var i=1;i<argc;++i){var name=arguments[i];value=value[name];s.push(name,value);}var result=new Array(value.length);for(var i=0;i<value.length;++i){if(i in value){s.push(i,value[i]);result[i]=callback(this,i);s.length-=2;}}s.length=origLen;return result;};// Returns true if the node at the tip of the path is wrapped with
// parentheses, OR if the only reason the node needed parentheses was that
// it couldn't be the first expression in the enclosing statement (see
// FastPath#canBeFirstInStatement), and it has an opening `(` character.
// For example, the FunctionExpression in `(function(){}())` appears to
// need parentheses only because it's the first expression in the AST, but
// since it happens to be preceded by a `(` (which is not apparent from
// the AST but can be determined using FastPath#getPrevToken), there is no
// ambiguity about how to parse it, so it counts as having parentheses,
// even though it is not immediately followed by a `)`.
FPp.hasParens=function(){var node=this.getNode();var prevToken=this.getPrevToken(node);if(!prevToken){return false;}var nextToken=this.getNextToken(node);if(!nextToken){return false;}if(prevToken.value==="("){if(nextToken.value===")"){// If the node preceded by a `(` token and followed by a `)` token,
// then of course it has parentheses.
return true;}// If this is one of the few Expression types that can't come first in
// the enclosing statement because of parsing ambiguities (namely,
// FunctionExpression, ObjectExpression, and ClassExpression) and
// this.firstInStatement() returns true, and the node would not need
// parentheses in an expression context because this.needsParens(true)
// returns false, then it just needs an opening parenthesis to resolve
// the parsing ambiguity that made it appear to need parentheses.
var justNeedsOpeningParen=!this.canBeFirstInStatement()&&this.firstInStatement()&&!this.needsParens(true);if(justNeedsOpeningParen){return true;}}return false;};FPp.getPrevToken=function(node){node=node||this.getNode();var loc=node&&node.loc;var tokens=loc&&loc.tokens;if(tokens&&loc.start.token>0){var token=tokens[loc.start.token-1];if(token){// Do not return tokens that fall outside the root subtree.
var rootLoc=this.getRootValue().loc;if(util.comparePos(rootLoc.start,token.loc.start)<=0){return token;}}}return null;};FPp.getNextToken=function(node){node=node||this.getNode();var loc=node&&node.loc;var tokens=loc&&loc.tokens;if(tokens&&loc.end.token<tokens.length){var token=tokens[loc.end.token];if(token){// Do not return tokens that fall outside the root subtree.
var rootLoc=this.getRootValue().loc;if(util.comparePos(token.loc.end,rootLoc.end)<=0){return token;}}}return null;};// Inspired by require("ast-types").NodePath.prototype.needsParens, but
// more efficient because we're iterating backwards through a stack.
FPp.needsParens=function(assumeExpressionContext){var node=this.getNode();// This needs to come before `if (!parent) { return false }` because
// an object destructuring assignment requires parens for
// correctness even when it's the topmost expression.
if(node.type==="AssignmentExpression"&&node.left.type==="ObjectPattern"){return true;}var parent=this.getParentNode();var name=this.getName();// If the value of this path is some child of a Node and not a Node
// itself, then it doesn't need parentheses. Only Node objects (in fact,
// only Expression nodes) need parentheses.
if(this.getValue()!==node){return false;}// Only statements don't need parentheses.
if(n.Statement.check(node)){return false;}// Identifiers never need parentheses.
if(node.type==="Identifier"){return false;}if(parent&&parent.type==="ParenthesizedExpression"){return false;}if(node.extra&&node.extra.parenthesized){return true;}if(!parent)return false;switch(node.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return parent.type==="MemberExpression"&&name==="object"&&parent.object===node;case"BinaryExpression":case"LogicalExpression":switch(parent.type){case"CallExpression":return name==="callee"&&parent.callee===node;case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return true;case"MemberExpression":return name==="object"&&parent.object===node;case"BinaryExpression":case"LogicalExpression":{var po=parent.operator;var pp=PRECEDENCE[po];var no=node.operator;var np=PRECEDENCE[no];if(pp>np){return true;}if(pp===np&&name==="right"){assert_1.default.strictEqual(parent.right,node);return true;}break;}default:return false;}break;case"SequenceExpression":switch(parent.type){case"ReturnStatement":return false;case"ForStatement":// Although parentheses wouldn't hurt around sequence expressions in
// the head of for loops, traditional style dictates that e.g. i++,
// j++ should not be wrapped with parentheses.
return false;case"ExpressionStatement":return name!=="expression";default:// Otherwise err on the side of overparenthesization, adding
// explicit exceptions above if this proves overzealous.
return true;}case"OptionalIndexedAccessType":return node.optional&&parent.type==="IndexedAccessType";case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return parent.type==="NullableTypeAnnotation";case"Literal":return parent.type==="MemberExpression"&&isNumber.check(node.value)&&name==="object"&&parent.object===node;// Babel 6 Literal split
case"NumericLiteral":return parent.type==="MemberExpression"&&name==="object"&&parent.object===node;case"YieldExpression":case"AwaitExpression":case"AssignmentExpression":case"ConditionalExpression":switch(parent.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":return true;case"CallExpression":case"NewExpression":return name==="callee"&&parent.callee===node;case"ConditionalExpression":return name==="test"&&parent.test===node;case"MemberExpression":return name==="object"&&parent.object===node;default:return false;}case"ArrowFunctionExpression":if(n.CallExpression.check(parent)&&name==="callee"&&parent.callee===node){return true;}if(n.MemberExpression.check(parent)&&name==="object"&&parent.object===node){return true;}if(n.TSAsExpression&&n.TSAsExpression.check(parent)&&name==="expression"&&parent.expression===node){return true;}return isBinary(parent);case"ObjectExpression":if(parent.type==="ArrowFunctionExpression"&&name==="body"&&parent.body===node){return true;}break;case"TSAsExpression":if(parent.type==="ArrowFunctionExpression"&&name==="body"&&parent.body===node&&node.expression.type==="ObjectExpression"){return true;}break;case"CallExpression":if(name==="declaration"&&n.ExportDefaultDeclaration.check(parent)&&n.FunctionExpression.check(node.callee)){return true;}}if(parent.type==="NewExpression"&&name==="callee"&&parent.callee===node){return containsCallExpression(node);}if(assumeExpressionContext!==true&&!this.canBeFirstInStatement()&&this.firstInStatement()){return true;}return false;};function isBinary(node){return n.BinaryExpression.check(node)||n.LogicalExpression.check(node);}function containsCallExpression(node){if(n.CallExpression.check(node)){return true;}if(isArray.check(node)){return node.some(containsCallExpression);}if(n.Node.check(node)){return types.someField(node,function(_name,child){return containsCallExpression(child);});}return false;}FPp.canBeFirstInStatement=function(){var node=this.getNode();if(n.FunctionExpression.check(node)){return false;}if(n.ObjectExpression.check(node)){return false;}if(n.ClassExpression.check(node)){return false;}return true;};FPp.firstInStatement=function(){var s=this.stack;var parentName,parent;var childName,child;for(var i=s.length-1;i>=0;i-=2){if(n.Node.check(s[i])){childName=parentName;child=parent;parentName=s[i-1];parent=s[i];}if(!parent||!child){continue;}if(n.BlockStatement.check(parent)&&parentName==="body"&&childName===0){assert_1.default.strictEqual(parent.body[0],child);return true;}if(n.ExpressionStatement.check(parent)&&childName==="expression"){assert_1.default.strictEqual(parent.expression,child);return true;}if(n.AssignmentExpression.check(parent)&&childName==="left"){assert_1.default.strictEqual(parent.left,child);return true;}if(n.ArrowFunctionExpression.check(parent)&&childName==="body"){assert_1.default.strictEqual(parent.body,child);return true;}// s[i + 1] and s[i + 2] represent the array between the parent
// SequenceExpression node and its child nodes
if(n.SequenceExpression.check(parent)&&s[i+1]==="expressions"&&childName===0){assert_1.default.strictEqual(parent.expressions[0],child);continue;}if(n.CallExpression.check(parent)&&childName==="callee"){assert_1.default.strictEqual(parent.callee,child);continue;}if(n.MemberExpression.check(parent)&&childName==="object"){assert_1.default.strictEqual(parent.object,child);continue;}if(n.ConditionalExpression.check(parent)&&childName==="test"){assert_1.default.strictEqual(parent.test,child);continue;}if(isBinary(parent)&&childName==="left"){assert_1.default.strictEqual(parent.left,child);continue;}if(n.UnaryExpression.check(parent)&&!parent.prefix&&childName==="argument"){assert_1.default.strictEqual(parent.argument,child);continue;}return false;}return true;};fastPath.default=FastPath;return fastPath;}var hasRequiredPatcher;function requirePatcher(){if(hasRequiredPatcher)return patcher;hasRequiredPatcher=1;Object.defineProperty(patcher,"__esModule",{value:true});patcher.getReprinter=patcher.Patcher=void 0;var tslib_1=require$$0$3;var assert_1=tslib_1.__importDefault(require$$1__default$1.default);var linesModule=tslib_1.__importStar(requireLines());var types=tslib_1.__importStar(requireMain$1());var Printable=types.namedTypes.Printable;var Expression=types.namedTypes.Expression;var ReturnStatement=types.namedTypes.ReturnStatement;var SourceLocation=types.namedTypes.SourceLocation;var util_1=requireUtil();var fast_path_1=tslib_1.__importDefault(requireFastPath());var isObject=types.builtInTypes.object;var isArray=types.builtInTypes.array;var isString=types.builtInTypes.string;var riskyAdjoiningCharExp=/[0-9a-z_$]/i;var Patcher=function Patcher(lines){assert_1.default.ok(this instanceof Patcher);assert_1.default.ok(lines instanceof linesModule.Lines);var self=this,replacements=[];self.replace=function(loc,lines){if(isString.check(lines))lines=linesModule.fromString(lines);replacements.push({lines:lines,start:loc.start,end:loc.end});};self.get=function(loc){// If no location is provided, return the complete Lines object.
loc=loc||{start:{line:1,column:0},end:{line:lines.length,column:lines.getLineLength(lines.length)}};var sliceFrom=loc.start,toConcat=[];function pushSlice(from,to){assert_1.default.ok(util_1.comparePos(from,to)<=0);toConcat.push(lines.slice(from,to));}replacements.sort(function(a,b){return util_1.comparePos(a.start,b.start);}).forEach(function(rep){if(util_1.comparePos(sliceFrom,rep.start)>0);else{pushSlice(sliceFrom,rep.start);toConcat.push(rep.lines);sliceFrom=rep.end;}});pushSlice(sliceFrom,loc.end);return linesModule.concat(toConcat);};};patcher.Patcher=Patcher;var Pp=Patcher.prototype;Pp.tryToReprintComments=function(newNode,oldNode,print){var patcher=this;if(!newNode.comments&&!oldNode.comments){// We were (vacuously) able to reprint all the comments!
return true;}var newPath=fast_path_1.default.from(newNode);var oldPath=fast_path_1.default.from(oldNode);newPath.stack.push("comments",getSurroundingComments(newNode));oldPath.stack.push("comments",getSurroundingComments(oldNode));var reprints=[];var ableToReprintComments=findArrayReprints(newPath,oldPath,reprints);// No need to pop anything from newPath.stack or oldPath.stack, since
// newPath and oldPath are fresh local variables.
if(ableToReprintComments&&reprints.length>0){reprints.forEach(function(reprint){var oldComment=reprint.oldPath.getValue();assert_1.default.ok(oldComment.leading||oldComment.trailing);patcher.replace(oldComment.loc,// Comments can't have .comments, so it doesn't matter whether we
// print with comments or without.
print(reprint.newPath).indentTail(oldComment.loc.indent));});}return ableToReprintComments;};// Get all comments that are either leading or trailing, ignoring any
// comments that occur inside node.loc. Returns an empty array for nodes
// with no leading or trailing comments.
function getSurroundingComments(node){var result=[];if(node.comments&&node.comments.length>0){node.comments.forEach(function(comment){if(comment.leading||comment.trailing){result.push(comment);}});}return result;}Pp.deleteComments=function(node){if(!node.comments){return;}var patcher=this;node.comments.forEach(function(comment){if(comment.leading){// Delete leading comments along with any trailing whitespace they
// might have.
patcher.replace({start:comment.loc.start,end:node.loc.lines.skipSpaces(comment.loc.end,false,false)},"");}else if(comment.trailing){// Delete trailing comments along with any leading whitespace they
// might have.
patcher.replace({start:node.loc.lines.skipSpaces(comment.loc.start,true,false),end:comment.loc.end},"");}});};function getReprinter(path){assert_1.default.ok(path instanceof fast_path_1.default);// Make sure that this path refers specifically to a Node, rather than
// some non-Node subproperty of a Node.
var node=path.getValue();if(!Printable.check(node))return;var orig=node.original;var origLoc=orig&&orig.loc;var lines=origLoc&&origLoc.lines;var reprints=[];if(!lines||!findReprints(path,reprints))return;return function(print){var patcher=new Patcher(lines);reprints.forEach(function(reprint){var newNode=reprint.newPath.getValue();var oldNode=reprint.oldPath.getValue();SourceLocation.assert(oldNode.loc,true);var needToPrintNewPathWithComments=!patcher.tryToReprintComments(newNode,oldNode,print);if(needToPrintNewPathWithComments){// Since we were not able to preserve all leading/trailing
// comments, we delete oldNode's comments, print newPath with
// comments, and then patch the resulting lines where oldNode used
// to be.
patcher.deleteComments(oldNode);}var newLines=print(reprint.newPath,{includeComments:needToPrintNewPathWithComments,// If the oldNode we're replacing already had parentheses, we may
// not need to print the new node with any extra parentheses,
// because the existing parentheses will suffice. However, if the
// newNode has a different type than the oldNode, let the printer
// decide if reprint.newPath needs parentheses, as usual.
avoidRootParens:oldNode.type===newNode.type&&reprint.oldPath.hasParens()}).indentTail(oldNode.loc.indent);var nls=needsLeadingSpace(lines,oldNode.loc,newLines);var nts=needsTrailingSpace(lines,oldNode.loc,newLines);// If we try to replace the argument of a ReturnStatement like
// return"asdf" with e.g. a literal null expression, we run the risk
// of ending up with returnnull, so we need to add an extra leading
// space in situations where that might happen. Likewise for
// "asdf"in obj. See #170.
if(nls||nts){var newParts=[];nls&&newParts.push(" ");newParts.push(newLines);nts&&newParts.push(" ");newLines=linesModule.concat(newParts);}patcher.replace(oldNode.loc,newLines);});// Recall that origLoc is the .loc of an ancestor node that is
// guaranteed to contain all the reprinted nodes and comments.
var patchedLines=patcher.get(origLoc).indentTail(-orig.loc.indent);if(path.needsParens()){return linesModule.concat(["(",patchedLines,")"]);}return patchedLines;};}patcher.getReprinter=getReprinter;// If the last character before oldLoc and the first character of newLines
// are both identifier characters, they must be separated by a space,
// otherwise they will most likely get fused together into a single token.
function needsLeadingSpace(oldLines,oldLoc,newLines){var posBeforeOldLoc=util_1.copyPos(oldLoc.start);// The character just before the location occupied by oldNode.
var charBeforeOldLoc=oldLines.prevPos(posBeforeOldLoc)&&oldLines.charAt(posBeforeOldLoc);// First character of the reprinted node.
var newFirstChar=newLines.charAt(newLines.firstPos());return charBeforeOldLoc&&riskyAdjoiningCharExp.test(charBeforeOldLoc)&&newFirstChar&&riskyAdjoiningCharExp.test(newFirstChar);}// If the last character of newLines and the first character after oldLoc
// are both identifier characters, they must be separated by a space,
// otherwise they will most likely get fused together into a single token.
function needsTrailingSpace(oldLines,oldLoc,newLines){// The character just after the location occupied by oldNode.
var charAfterOldLoc=oldLines.charAt(oldLoc.end);var newLastPos=newLines.lastPos();// Last character of the reprinted node.
var newLastChar=newLines.prevPos(newLastPos)&&newLines.charAt(newLastPos);return newLastChar&&riskyAdjoiningCharExp.test(newLastChar)&&charAfterOldLoc&&riskyAdjoiningCharExp.test(charAfterOldLoc);}function findReprints(newPath,reprints){var newNode=newPath.getValue();Printable.assert(newNode);var oldNode=newNode.original;Printable.assert(oldNode);assert_1.default.deepEqual(reprints,[]);if(newNode.type!==oldNode.type){return false;}var oldPath=new fast_path_1.default(oldNode);var canReprint=findChildReprints(newPath,oldPath,reprints);if(!canReprint){// Make absolutely sure the calling code does not attempt to reprint
// any nodes.
reprints.length=0;}return canReprint;}function findAnyReprints(newPath,oldPath,reprints){var newNode=newPath.getValue();var oldNode=oldPath.getValue();if(newNode===oldNode)return true;if(isArray.check(newNode))return findArrayReprints(newPath,oldPath,reprints);if(isObject.check(newNode))return findObjectReprints(newPath,oldPath,reprints);return false;}function findArrayReprints(newPath,oldPath,reprints){var newNode=newPath.getValue();var oldNode=oldPath.getValue();if(newNode===oldNode||newPath.valueIsDuplicate()||oldPath.valueIsDuplicate()){return true;}isArray.assert(newNode);var len=newNode.length;if(!(isArray.check(oldNode)&&oldNode.length===len))return false;for(var i=0;i<len;++i){newPath.stack.push(i,newNode[i]);oldPath.stack.push(i,oldNode[i]);var canReprint=findAnyReprints(newPath,oldPath,reprints);newPath.stack.length-=2;oldPath.stack.length-=2;if(!canReprint){return false;}}return true;}function findObjectReprints(newPath,oldPath,reprints){var newNode=newPath.getValue();isObject.assert(newNode);if(newNode.original===null){// If newNode.original node was set to null, reprint the node.
return false;}var oldNode=oldPath.getValue();if(!isObject.check(oldNode))return false;if(newNode===oldNode||newPath.valueIsDuplicate()||oldPath.valueIsDuplicate()){return true;}if(Printable.check(newNode)){if(!Printable.check(oldNode)){return false;}var newParentNode=newPath.getParentNode();var oldParentNode=oldPath.getParentNode();if(oldParentNode!==null&&oldParentNode.type==="FunctionTypeAnnotation"&&newParentNode!==null&&newParentNode.type==="FunctionTypeAnnotation"){var oldNeedsParens=oldParentNode.params.length!==1||!!oldParentNode.params[0].name;var newNeedParens=newParentNode.params.length!==1||!!newParentNode.params[0].name;if(!oldNeedsParens&&newNeedParens){return false;}}// Here we need to decide whether the reprinted code for newNode is
// appropriate for patching into the location of oldNode.
if(newNode.type===oldNode.type){var childReprints=[];if(findChildReprints(newPath,oldPath,childReprints)){reprints.push.apply(reprints,childReprints);}else if(oldNode.loc){// If we have no .loc information for oldNode, then we won't be
// able to reprint it.
reprints.push({oldPath:oldPath.copy(),newPath:newPath.copy()});}else{return false;}return true;}if(Expression.check(newNode)&&Expression.check(oldNode)&&// If we have no .loc information for oldNode, then we won't be
// able to reprint it.
oldNode.loc){// If both nodes are subtypes of Expression, then we should be able
// to fill the location occupied by the old node with code printed
// for the new node with no ill consequences.
reprints.push({oldPath:oldPath.copy(),newPath:newPath.copy()});return true;}// The nodes have different types, and at least one of the types is
// not a subtype of the Expression type, so we cannot safely assume
// the nodes are syntactically interchangeable.
return false;}return findChildReprints(newPath,oldPath,reprints);}function findChildReprints(newPath,oldPath,reprints){var newNode=newPath.getValue();var oldNode=oldPath.getValue();isObject.assert(newNode);isObject.assert(oldNode);if(newNode.original===null){// If newNode.original node was set to null, reprint the node.
return false;}// If this node needs parentheses and will not be wrapped with
// parentheses when reprinted, then return false to skip reprinting and
// let it be printed generically.
if(newPath.needsParens()&&!oldPath.hasParens()){return false;}var keys=util_1.getUnionOfKeys(oldNode,newNode);if(oldNode.type==="File"||newNode.type==="File"){// Don't bother traversing file.tokens, an often very large array
// returned by Babylon, and useless for our purposes.
delete keys.tokens;}// Don't bother traversing .loc objects looking for reprintable nodes.
delete keys.loc;var originalReprintCount=reprints.length;for(var k in keys){if(k.charAt(0)==="_"){// Ignore "private" AST properties added by e.g. Babel plugins and
// parsers like Babylon.
continue;}newPath.stack.push(k,types.getFieldValue(newNode,k));oldPath.stack.push(k,types.getFieldValue(oldNode,k));var canReprint=findAnyReprints(newPath,oldPath,reprints);newPath.stack.length-=2;oldPath.stack.length-=2;if(!canReprint){return false;}}// Return statements might end up running into ASI issues due to
// comments inserted deep within the tree, so reprint them if anything
// changed within them.
if(ReturnStatement.check(newPath.getNode())&&reprints.length>originalReprintCount){return false;}return true;}return patcher;}var hasRequiredPrinter;function requirePrinter(){if(hasRequiredPrinter)return printer;hasRequiredPrinter=1;Object.defineProperty(printer,"__esModule",{value:true});printer.Printer=void 0;var tslib_1=require$$0$3;var assert_1=tslib_1.__importDefault(require$$1__default$1.default);var comments_1=requireComments();var lines_1=requireLines();var options_1=requireOptions();var patcher_1=requirePatcher();var types=tslib_1.__importStar(requireMain$1());var namedTypes=types.namedTypes;var isString=types.builtInTypes.string;var isObject=types.builtInTypes.object;var fast_path_1=tslib_1.__importDefault(requireFastPath());var util=tslib_1.__importStar(requireUtil());var PrintResult=function PrintResult(code,sourceMap){assert_1.default.ok(this instanceof PrintResult);isString.assert(code);this.code=code;if(sourceMap){isObject.assert(sourceMap);this.map=sourceMap;}};var PRp=PrintResult.prototype;var warnedAboutToString=false;PRp.toString=function(){if(!warnedAboutToString){console.warn("Deprecation warning: recast.print now returns an object with "+"a .code property. You appear to be treating the object as a "+"string, which might still work but is strongly discouraged.");warnedAboutToString=true;}return this.code;};var emptyPrintResult=new PrintResult("");var Printer=function Printer(config){assert_1.default.ok(this instanceof Printer);var explicitTabWidth=config&&config.tabWidth;config=options_1.normalize(config);// It's common for client code to pass the same options into both
// recast.parse and recast.print, but the Printer doesn't need (and
// can be confused by) config.sourceFileName, so we null it out.
config.sourceFileName=null;// Non-destructively modifies options with overrides, and returns a
// new print function that uses the modified options.
function makePrintFunctionWith(options,overrides){options=Object.assign({},options,overrides);return function(path){return print(path,options);};}function print(path,options){assert_1.default.ok(path instanceof fast_path_1.default);options=options||{};if(options.includeComments){return comments_1.printComments(path,makePrintFunctionWith(options,{includeComments:false}));}var oldTabWidth=config.tabWidth;if(!explicitTabWidth){var loc=path.getNode().loc;if(loc&&loc.lines&&loc.lines.guessTabWidth){config.tabWidth=loc.lines.guessTabWidth();}}var reprinter=patcher_1.getReprinter(path);var lines=reprinter?// Since the print function that we pass to the reprinter will
// be used to print "new" nodes, it's tempting to think we
// should pass printRootGenerically instead of print, to avoid
// calling maybeReprint again, but that would be a mistake
// because the new nodes might not be entirely new, but merely
// moved from elsewhere in the AST. The print function is the
// right choice because it gives us the opportunity to reprint
// such nodes using their original source.
reprinter(print):genericPrint(path,config,options,makePrintFunctionWith(options,{includeComments:true,avoidRootParens:false}));config.tabWidth=oldTabWidth;return lines;}this.print=function(ast){if(!ast){return emptyPrintResult;}var lines=print(fast_path_1.default.from(ast),{includeComments:true,avoidRootParens:false});return new PrintResult(lines.toString(config),util.composeSourceMaps(config.inputSourceMap,lines.getSourceMap(config.sourceMapName,config.sourceRoot)));};this.printGenerically=function(ast){if(!ast){return emptyPrintResult;}// Print the entire AST generically.
function printGenerically(path){return comments_1.printComments(path,function(path){return genericPrint(path,config,{includeComments:true,avoidRootParens:false},printGenerically);});}var path=fast_path_1.default.from(ast);var oldReuseWhitespace=config.reuseWhitespace;// Do not reuse whitespace (or anything else, for that matter)
// when printing generically.
config.reuseWhitespace=false;// TODO Allow printing of comments?
var pr=new PrintResult(printGenerically(path).toString(config));config.reuseWhitespace=oldReuseWhitespace;return pr;};};printer.Printer=Printer;function genericPrint(path,config,options,printPath){assert_1.default.ok(path instanceof fast_path_1.default);var node=path.getValue();var parts=[];var linesWithoutParens=genericPrintNoParens(path,config,printPath);if(!node||linesWithoutParens.isEmpty()){return linesWithoutParens;}var shouldAddParens=false;var decoratorsLines=printDecorators(path,printPath);if(decoratorsLines.isEmpty()){// Nodes with decorators can't have parentheses, so we can avoid
// computing path.needsParens() except in this case.
if(!options.avoidRootParens){shouldAddParens=path.needsParens();}}else{parts.push(decoratorsLines);}if(shouldAddParens){parts.unshift("(");}parts.push(linesWithoutParens);if(shouldAddParens){parts.push(")");}return lines_1.concat(parts);}// Note that the `options` parameter of this function is what other
// functions in this file call the `config` object (that is, the
// configuration object originally passed into the Printer constructor).
// Its properties are documented in lib/options.js.
function genericPrintNoParens(path,options,print){var n=path.getValue();if(!n){return lines_1.fromString("");}if(typeof n==="string"){return lines_1.fromString(n,options);}namedTypes.Printable.assert(n);var parts=[];switch(n.type){case"File":return path.call(print,"program");case"Program":// Babel 6
if(n.directives){path.each(function(childPath){parts.push(print(childPath),";\n");},"directives");}if(n.interpreter){parts.push(path.call(print,"interpreter"));}parts.push(path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body"));return lines_1.concat(parts);case"Noop":// Babel extension.
case"EmptyStatement":return lines_1.fromString("");case"ExpressionStatement":return lines_1.concat([path.call(print,"expression"),";"]);case"ParenthesizedExpression":// Babel extension.
return lines_1.concat(["(",path.call(print,"expression"),")"]);case"BinaryExpression":case"LogicalExpression":case"AssignmentExpression":return lines_1.fromString(" ").join([path.call(print,"left"),n.operator,path.call(print,"right")]);case"AssignmentPattern":return lines_1.concat([path.call(print,"left")," = ",path.call(print,"right")]);case"MemberExpression":case"OptionalMemberExpression":{parts.push(path.call(print,"object"));var property=path.call(print,"property");// Like n.optional, except with defaults applied, so optional
// defaults to true for OptionalMemberExpression nodes.
var optional=types.getFieldValue(n,"optional");if(n.computed){parts.push(optional?"?.[":"[",property,"]");}else{parts.push(optional?"?.":".",property);}return lines_1.concat(parts);}case"ChainExpression":return path.call(print,"expression");case"MetaProperty":return lines_1.concat([path.call(print,"meta"),".",path.call(print,"property")]);case"BindExpression":if(n.object){parts.push(path.call(print,"object"));}parts.push("::",path.call(print,"callee"));return lines_1.concat(parts);case"Path":return lines_1.fromString(".").join(n.body);case"Identifier":return lines_1.concat([lines_1.fromString(n.name,options),n.optional?"?":"",path.call(print,"typeAnnotation")]);case"SpreadElement":case"SpreadElementPattern":case"RestProperty":// Babel 6 for ObjectPattern
case"SpreadProperty":case"SpreadPropertyPattern":case"ObjectTypeSpreadProperty":case"RestElement":return lines_1.concat(["...",path.call(print,"argument"),path.call(print,"typeAnnotation")]);case"FunctionDeclaration":case"FunctionExpression":case"TSDeclareFunction":if(n.declare){parts.push("declare ");}if(n.async){parts.push("async ");}parts.push("function");if(n.generator)parts.push("*");if(n.id){parts.push(" ",path.call(print,"id"),path.call(print,"typeParameters"));}else{if(n.typeParameters){parts.push(path.call(print,"typeParameters"));}}parts.push("(",printFunctionParams(path,options,print),")",path.call(print,"returnType"));if(n.body){parts.push(" ",path.call(print,"body"));}return lines_1.concat(parts);case"ArrowFunctionExpression":if(n.async){parts.push("async ");}if(n.typeParameters){parts.push(path.call(print,"typeParameters"));}if(!options.arrowParensAlways&&n.params.length===1&&!n.rest&&n.params[0].type==="Identifier"&&!n.params[0].typeAnnotation&&!n.returnType){parts.push(path.call(print,"params",0));}else{parts.push("(",printFunctionParams(path,options,print),")",path.call(print,"returnType"));}parts.push(" => ",path.call(print,"body"));return lines_1.concat(parts);case"MethodDefinition":return printMethod(path,options,print);case"YieldExpression":parts.push("yield");if(n.delegate)parts.push("*");if(n.argument)parts.push(" ",path.call(print,"argument"));return lines_1.concat(parts);case"AwaitExpression":parts.push("await");if(n.all)parts.push("*");if(n.argument)parts.push(" ",path.call(print,"argument"));return lines_1.concat(parts);case"ModuleExpression":return lines_1.concat(["module {\n",path.call(print,"body").indent(options.tabWidth),"\n}"]);case"ModuleDeclaration":parts.push("module",path.call(print,"id"));if(n.source){assert_1.default.ok(!n.body);parts.push("from",path.call(print,"source"));}else{parts.push(path.call(print,"body"));}return lines_1.fromString(" ").join(parts);case"ImportSpecifier":if(n.importKind&&n.importKind!=="value"){parts.push(n.importKind+" ");}if(n.imported){parts.push(path.call(print,"imported"));if(n.local&&n.local.name!==n.imported.name){parts.push(" as ",path.call(print,"local"));}}else if(n.id){parts.push(path.call(print,"id"));if(n.name){parts.push(" as ",path.call(print,"name"));}}return lines_1.concat(parts);case"ExportSpecifier":if(n.local){parts.push(path.call(print,"local"));if(n.exported&&n.exported.name!==n.local.name){parts.push(" as ",path.call(print,"exported"));}}else if(n.id){parts.push(path.call(print,"id"));if(n.name){parts.push(" as ",path.call(print,"name"));}}return lines_1.concat(parts);case"ExportBatchSpecifier":return lines_1.fromString("*");case"ImportNamespaceSpecifier":parts.push("* as ");if(n.local){parts.push(path.call(print,"local"));}else if(n.id){parts.push(path.call(print,"id"));}return lines_1.concat(parts);case"ImportDefaultSpecifier":if(n.local){return path.call(print,"local");}return path.call(print,"id");case"TSExportAssignment":return lines_1.concat(["export = ",path.call(print,"expression")]);case"ExportDeclaration":case"ExportDefaultDeclaration":case"ExportNamedDeclaration":return printExportDeclaration(path,options,print);case"ExportAllDeclaration":parts.push("export *");if(n.exported){parts.push(" as ",path.call(print,"exported"));}parts.push(" from ",path.call(print,"source"),";");return lines_1.concat(parts);case"TSNamespaceExportDeclaration":parts.push("export as namespace ",path.call(print,"id"));return maybeAddSemicolon(lines_1.concat(parts));case"ExportNamespaceSpecifier":return lines_1.concat(["* as ",path.call(print,"exported")]);case"ExportDefaultSpecifier":return path.call(print,"exported");case"Import":return lines_1.fromString("import",options);// Recast and ast-types currently support dynamic import(...) using
// either this dedicated ImportExpression type or a CallExpression
// whose callee has type Import.
// https://github.com/benjamn/ast-types/pull/365#issuecomment-605214486
case"ImportExpression":return lines_1.concat(["import(",path.call(print,"source"),")"]);case"ImportDeclaration":{parts.push("import ");if(n.importKind&&n.importKind!=="value"){parts.push(n.importKind+" ");}if(n.specifiers&&n.specifiers.length>0){var unbracedSpecifiers_1=[];var bracedSpecifiers_1=[];path.each(function(specifierPath){var spec=specifierPath.getValue();if(spec.type==="ImportSpecifier"){bracedSpecifiers_1.push(print(specifierPath));}else if(spec.type==="ImportDefaultSpecifier"||spec.type==="ImportNamespaceSpecifier"){unbracedSpecifiers_1.push(print(specifierPath));}},"specifiers");unbracedSpecifiers_1.forEach(function(lines,i){if(i>0){parts.push(", ");}parts.push(lines);});if(bracedSpecifiers_1.length>0){var lines=lines_1.fromString(", ").join(bracedSpecifiers_1);if(lines.getLineLength(1)>options.wrapColumn){lines=lines_1.concat([lines_1.fromString(",\n").join(bracedSpecifiers_1).indent(options.tabWidth),","]);}if(unbracedSpecifiers_1.length>0){parts.push(", ");}if(lines.length>1){parts.push("{\n",lines,"\n}");}else if(options.objectCurlySpacing){parts.push("{ ",lines," }");}else{parts.push("{",lines,"}");}}parts.push(" from ");}parts.push(path.call(print,"source"),maybePrintImportAssertions(path,options,print),";");return lines_1.concat(parts);}case"ImportAttribute":return lines_1.concat([path.call(print,"key"),": ",path.call(print,"value")]);case"StaticBlock":parts.push("static ");// Intentionally fall through to BlockStatement below.
case"BlockStatement":{var naked_1=path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body");if(naked_1.isEmpty()){if(!n.directives||n.directives.length===0){parts.push("{}");return lines_1.concat(parts);}}parts.push("{\n");// Babel 6
if(n.directives){path.each(function(childPath){parts.push(maybeAddSemicolon(print(childPath).indent(options.tabWidth)),n.directives.length>1||!naked_1.isEmpty()?"\n":"");},"directives");}parts.push(naked_1.indent(options.tabWidth));parts.push("\n}");return lines_1.concat(parts);}case"ReturnStatement":{parts.push("return");if(n.argument){var argLines=path.call(print,"argument");if(argLines.startsWithComment()||argLines.length>1&&namedTypes.JSXElement&&namedTypes.JSXElement.check(n.argument)){parts.push(" (\n",argLines.indent(options.tabWidth),"\n)");}else{parts.push(" ",argLines);}}parts.push(";");return lines_1.concat(parts);}case"CallExpression":case"OptionalCallExpression":parts.push(path.call(print,"callee"));if(n.typeParameters){parts.push(path.call(print,"typeParameters"));}if(n.typeArguments){parts.push(path.call(print,"typeArguments"));}// Like n.optional, but defaults to true for OptionalCallExpression
// nodes that are missing an n.optional property (unusual),
// according to the OptionalCallExpression definition in ast-types.
if(types.getFieldValue(n,"optional")){parts.push("?.");}parts.push(printArgumentsList(path,options,print));return lines_1.concat(parts);case"RecordExpression":parts.push("#");// Intentionally fall through to printing the object literal...
case"ObjectExpression":case"ObjectPattern":case"ObjectTypeAnnotation":{var isTypeAnnotation_1=n.type==="ObjectTypeAnnotation";var separator_1=options.flowObjectCommas?",":isTypeAnnotation_1?";":",";var fields=[];var allowBreak_1=false;if(isTypeAnnotation_1){fields.push("indexers","callProperties");if(n.internalSlots!=null){fields.push("internalSlots");}}fields.push("properties");var len_1=0;fields.forEach(function(field){len_1+=n[field].length;});var oneLine_1=isTypeAnnotation_1&&len_1===1||len_1===0;var leftBrace=n.exact?"{|":"{";var rightBrace=n.exact?"|}":"}";parts.push(oneLine_1?leftBrace:leftBrace+"\n");var leftBraceIndex=parts.length-1;var i_1=0;fields.forEach(function(field){path.each(function(childPath){var lines=print(childPath);if(!oneLine_1){lines=lines.indent(options.tabWidth);}var multiLine=!isTypeAnnotation_1&&lines.length>1;if(multiLine&&allowBreak_1){// Similar to the logic for BlockStatement.
parts.push("\n");}parts.push(lines);if(i_1<len_1-1){// Add an extra line break if the previous object property
// had a multi-line value.
parts.push(separator_1+(multiLine?"\n\n":"\n"));allowBreak_1=!multiLine;}else if(len_1!==1&&isTypeAnnotation_1){parts.push(separator_1);}else if(!oneLine_1&&util.isTrailingCommaEnabled(options,"objects")&&childPath.getValue().type!=="RestElement"){parts.push(separator_1);}i_1++;},field);});if(n.inexact){var line=lines_1.fromString("...",options);if(oneLine_1){if(len_1>0){parts.push(separator_1," ");}parts.push(line);}else{// No trailing separator after ... to maintain parity with prettier.
parts.push("\n",line.indent(options.tabWidth));}}parts.push(oneLine_1?rightBrace:"\n"+rightBrace);if(i_1!==0&&oneLine_1&&options.objectCurlySpacing){parts[leftBraceIndex]=leftBrace+" ";parts[parts.length-1]=" "+rightBrace;}if(n.typeAnnotation){parts.push(path.call(print,"typeAnnotation"));}return lines_1.concat(parts);}case"PropertyPattern":return lines_1.concat([path.call(print,"key"),": ",path.call(print,"pattern")]);case"ObjectProperty":// Babel 6
case"Property":{// Non-standard AST node type.
if(n.method||n.kind==="get"||n.kind==="set"){return printMethod(path,options,print);}if(n.shorthand&&n.value.type==="AssignmentPattern"){return path.call(print,"value");}var key=path.call(print,"key");if(n.computed){parts.push("[",key,"]");}else{parts.push(key);}if(!n.shorthand||n.key.name!==n.value.name){parts.push(": ",path.call(print,"value"));}return lines_1.concat(parts);}case"ClassMethod":// Babel 6
case"ObjectMethod":// Babel 6
case"ClassPrivateMethod":case"TSDeclareMethod":return printMethod(path,options,print);case"PrivateName":return lines_1.concat(["#",path.call(print,"id")]);case"Decorator":return lines_1.concat(["@",path.call(print,"expression")]);case"TupleExpression":parts.push("#");// Intentionally fall through to printing the tuple elements...
case"ArrayExpression":case"ArrayPattern":{var elems=n.elements;var len_2=elems.length;var printed_1=path.map(print,"elements");var joined=lines_1.fromString(", ").join(printed_1);var oneLine_2=joined.getLineLength(1)<=options.wrapColumn;if(oneLine_2){if(options.arrayBracketSpacing){parts.push("[ ");}else{parts.push("[");}}else{parts.push("[\n");}path.each(function(elemPath){var i=elemPath.getName();var elem=elemPath.getValue();if(!elem){// If the array expression ends with a hole, that hole
// will be ignored by the interpreter, but if it ends with
// two (or more) holes, we need to write out two (or more)
// commas so that the resulting code is interpreted with
// both (all) of the holes.
parts.push(",");}else{var lines=printed_1[i];if(oneLine_2){if(i>0)parts.push(" ");}else{lines=lines.indent(options.tabWidth);}parts.push(lines);if(i<len_2-1||!oneLine_2&&util.isTrailingCommaEnabled(options,"arrays"))parts.push(",");if(!oneLine_2)parts.push("\n");}},"elements");if(oneLine_2&&options.arrayBracketSpacing){parts.push(" ]");}else{parts.push("]");}if(n.typeAnnotation){parts.push(path.call(print,"typeAnnotation"));}return lines_1.concat(parts);}case"SequenceExpression":return lines_1.fromString(", ").join(path.map(print,"expressions"));case"ThisExpression":return lines_1.fromString("this");case"Super":return lines_1.fromString("super");case"NullLiteral":// Babel 6 Literal split
return lines_1.fromString("null");case"RegExpLiteral":// Babel 6 Literal split
return lines_1.fromString(getPossibleRaw(n)||"/"+n.pattern+"/"+(n.flags||""),options);case"BigIntLiteral":// Babel 7 Literal split
return lines_1.fromString(getPossibleRaw(n)||n.value+"n",options);case"NumericLiteral":// Babel 6 Literal Split
return lines_1.fromString(getPossibleRaw(n)||n.value,options);case"DecimalLiteral":return lines_1.fromString(getPossibleRaw(n)||n.value+"m",options);case"StringLiteral":return lines_1.fromString(nodeStr(n.value,options));case"BooleanLiteral":// Babel 6 Literal split
case"Literal":return lines_1.fromString(getPossibleRaw(n)||(typeof n.value==="string"?nodeStr(n.value,options):n.value),options);case"Directive":// Babel 6
return path.call(print,"value");case"DirectiveLiteral":// Babel 6
return lines_1.fromString(getPossibleRaw(n)||nodeStr(n.value,options),options);case"InterpreterDirective":return lines_1.fromString("#!"+n.value+"\n",options);case"ModuleSpecifier":if(n.local){throw new Error("The ESTree ModuleSpecifier type should be abstract");}// The Esprima ModuleSpecifier type is just a string-valued
// Literal identifying the imported-from module.
return lines_1.fromString(nodeStr(n.value,options),options);case"UnaryExpression":parts.push(n.operator);if(/[a-z]$/.test(n.operator))parts.push(" ");parts.push(path.call(print,"argument"));return lines_1.concat(parts);case"UpdateExpression":parts.push(path.call(print,"argument"),n.operator);if(n.prefix)parts.reverse();return lines_1.concat(parts);case"ConditionalExpression":return lines_1.concat([path.call(print,"test")," ? ",path.call(print,"consequent")," : ",path.call(print,"alternate")]);case"NewExpression":{parts.push("new ",path.call(print,"callee"));if(n.typeParameters){parts.push(path.call(print,"typeParameters"));}if(n.typeArguments){parts.push(path.call(print,"typeArguments"));}var args=n.arguments;if(args){parts.push(printArgumentsList(path,options,print));}return lines_1.concat(parts);}case"VariableDeclaration":{if(n.declare){parts.push("declare ");}parts.push(n.kind," ");var maxLen_1=0;var printed=path.map(function(childPath){var lines=print(childPath);maxLen_1=Math.max(lines.length,maxLen_1);return lines;},"declarations");if(maxLen_1===1){parts.push(lines_1.fromString(", ").join(printed));}else if(printed.length>1){parts.push(lines_1.fromString(",\n").join(printed).indentTail(n.kind.length+1));}else{parts.push(printed[0]);}// We generally want to terminate all variable declarations with a
// semicolon, except when they are children of for loops.
var parentNode=path.getParentNode();if(!namedTypes.ForStatement.check(parentNode)&&!namedTypes.ForInStatement.check(parentNode)&&!(namedTypes.ForOfStatement&&namedTypes.ForOfStatement.check(parentNode))&&!(namedTypes.ForAwaitStatement&&namedTypes.ForAwaitStatement.check(parentNode))){parts.push(";");}return lines_1.concat(parts);}case"VariableDeclarator":return n.init?lines_1.fromString(" = ").join([path.call(print,"id"),path.call(print,"init")]):path.call(print,"id");case"WithStatement":return lines_1.concat(["with (",path.call(print,"object"),") ",path.call(print,"body")]);case"IfStatement":{var con=adjustClause(path.call(print,"consequent"),options);parts.push("if (",path.call(print,"test"),")",con);if(n.alternate)parts.push(endsWithBrace(con)?" else":"\nelse",adjustClause(path.call(print,"alternate"),options));return lines_1.concat(parts);}case"ForStatement":{// TODO Get the for (;;) case right.
var init=path.call(print,"init");var sep=init.length>1?";\n":"; ";var forParen="for (";var indented=lines_1.fromString(sep).join([init,path.call(print,"test"),path.call(print,"update")]).indentTail(forParen.length);var head=lines_1.concat([forParen,indented,")"]);var clause=adjustClause(path.call(print,"body"),options);parts.push(head);if(head.length>1){parts.push("\n");clause=clause.trimLeft();}parts.push(clause);return lines_1.concat(parts);}case"WhileStatement":return lines_1.concat(["while (",path.call(print,"test"),")",adjustClause(path.call(print,"body"),options)]);case"ForInStatement":// Note: esprima can't actually parse "for each (".
return lines_1.concat([n.each?"for each (":"for (",path.call(print,"left")," in ",path.call(print,"right"),")",adjustClause(path.call(print,"body"),options)]);case"ForOfStatement":case"ForAwaitStatement":parts.push("for ");if(n.await||n.type==="ForAwaitStatement"){parts.push("await ");}parts.push("(",path.call(print,"left")," of ",path.call(print,"right"),")",adjustClause(path.call(print,"body"),options));return lines_1.concat(parts);case"DoWhileStatement":{var doBody=lines_1.concat(["do",adjustClause(path.call(print,"body"),options)]);parts.push(doBody);if(endsWithBrace(doBody))parts.push(" while");else parts.push("\nwhile");parts.push(" (",path.call(print,"test"),");");return lines_1.concat(parts);}case"DoExpression":{var statements=path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body");return lines_1.concat(["do {\n",statements.indent(options.tabWidth),"\n}"]);}case"BreakStatement":parts.push("break");if(n.label)parts.push(" ",path.call(print,"label"));parts.push(";");return lines_1.concat(parts);case"ContinueStatement":parts.push("continue");if(n.label)parts.push(" ",path.call(print,"label"));parts.push(";");return lines_1.concat(parts);case"LabeledStatement":return lines_1.concat([path.call(print,"label"),":\n",path.call(print,"body")]);case"TryStatement":parts.push("try ",path.call(print,"block"));if(n.handler){parts.push(" ",path.call(print,"handler"));}else if(n.handlers){path.each(function(handlerPath){parts.push(" ",print(handlerPath));},"handlers");}if(n.finalizer){parts.push(" finally ",path.call(print,"finalizer"));}return lines_1.concat(parts);case"CatchClause":parts.push("catch ");if(n.param){parts.push("(",path.call(print,"param"));}if(n.guard){// Note: esprima does not recognize conditional catch clauses.
parts.push(" if ",path.call(print,"guard"));}if(n.param){parts.push(") ");}parts.push(path.call(print,"body"));return lines_1.concat(parts);case"ThrowStatement":return lines_1.concat(["throw ",path.call(print,"argument"),";"]);case"SwitchStatement":return lines_1.concat(["switch (",path.call(print,"discriminant"),") {\n",lines_1.fromString("\n").join(path.map(print,"cases")),"\n}"]);// Note: ignoring n.lexical because it has no printing consequences.
case"SwitchCase":if(n.test)parts.push("case ",path.call(print,"test"),":");else parts.push("default:");if(n.consequent.length>0){parts.push("\n",path.call(function(consequentPath){return printStatementSequence(consequentPath,options,print);},"consequent").indent(options.tabWidth));}return lines_1.concat(parts);case"DebuggerStatement":return lines_1.fromString("debugger;");// JSX extensions below.
case"JSXAttribute":parts.push(path.call(print,"name"));if(n.value)parts.push("=",path.call(print,"value"));return lines_1.concat(parts);case"JSXIdentifier":return lines_1.fromString(n.name,options);case"JSXNamespacedName":return lines_1.fromString(":").join([path.call(print,"namespace"),path.call(print,"name")]);case"JSXMemberExpression":return lines_1.fromString(".").join([path.call(print,"object"),path.call(print,"property")]);case"JSXSpreadAttribute":return lines_1.concat(["{...",path.call(print,"argument"),"}"]);case"JSXSpreadChild":return lines_1.concat(["{...",path.call(print,"expression"),"}"]);case"JSXExpressionContainer":return lines_1.concat(["{",path.call(print,"expression"),"}"]);case"JSXElement":case"JSXFragment":{var openingPropName="opening"+(n.type==="JSXElement"?"Element":"Fragment");var closingPropName="closing"+(n.type==="JSXElement"?"Element":"Fragment");var openingLines=path.call(print,openingPropName);if(n[openingPropName].selfClosing){assert_1.default.ok(!n[closingPropName],"unexpected "+closingPropName+" element in self-closing "+n.type);return openingLines;}var childLines=lines_1.concat(path.map(function(childPath){var child=childPath.getValue();if(namedTypes.Literal.check(child)&&typeof child.value==="string"){if(/\S/.test(child.value)){return child.value.replace(/^\s+|\s+$/g,"");}else if(/\n/.test(child.value)){return"\n";}}return print(childPath);},"children")).indentTail(options.tabWidth);var closingLines=path.call(print,closingPropName);return lines_1.concat([openingLines,childLines,closingLines]);}case"JSXOpeningElement":{parts.push("<",path.call(print,"name"));var attrParts_1=[];path.each(function(attrPath){attrParts_1.push(" ",print(attrPath));},"attributes");var attrLines=lines_1.concat(attrParts_1);var needLineWrap=attrLines.length>1||attrLines.getLineLength(1)>options.wrapColumn;if(needLineWrap){attrParts_1.forEach(function(part,i){if(part===" "){assert_1.default.strictEqual(i%2,0);attrParts_1[i]="\n";}});attrLines=lines_1.concat(attrParts_1).indentTail(options.tabWidth);}parts.push(attrLines,n.selfClosing?" />":">");return lines_1.concat(parts);}case"JSXClosingElement":return lines_1.concat(["</",path.call(print,"name"),">"]);case"JSXOpeningFragment":return lines_1.fromString("<>");case"JSXClosingFragment":return lines_1.fromString("</>");case"JSXText":return lines_1.fromString(n.value,options);case"JSXEmptyExpression":return lines_1.fromString("");case"TypeAnnotatedIdentifier":return lines_1.concat([path.call(print,"annotation")," ",path.call(print,"identifier")]);case"ClassBody":if(n.body.length===0){return lines_1.fromString("{}");}return lines_1.concat(["{\n",path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body").indent(options.tabWidth),"\n}"]);case"ClassPropertyDefinition":parts.push("static ",path.call(print,"definition"));if(!namedTypes.MethodDefinition.check(n.definition))parts.push(";");return lines_1.concat(parts);case"ClassProperty":{if(n.declare){parts.push("declare ");}var access=n.accessibility||n.access;if(typeof access==="string"){parts.push(access," ");}if(n.static){parts.push("static ");}if(n.abstract){parts.push("abstract ");}if(n.readonly){parts.push("readonly ");}var key=path.call(print,"key");if(n.computed){key=lines_1.concat(["[",key,"]"]);}if(n.variance){key=lines_1.concat([printVariance(path,print),key]);}parts.push(key);if(n.optional){parts.push("?");}if(n.definite){parts.push("!");}if(n.typeAnnotation){parts.push(path.call(print,"typeAnnotation"));}if(n.value){parts.push(" = ",path.call(print,"value"));}parts.push(";");return lines_1.concat(parts);}case"ClassPrivateProperty":if(n.static){parts.push("static ");}parts.push(path.call(print,"key"));if(n.typeAnnotation){parts.push(path.call(print,"typeAnnotation"));}if(n.value){parts.push(" = ",path.call(print,"value"));}parts.push(";");return lines_1.concat(parts);case"ClassDeclaration":case"ClassExpression":case"DeclareClass":if(n.declare){parts.push("declare ");}if(n.abstract){parts.push("abstract ");}parts.push("class");if(n.id){parts.push(" ",path.call(print,"id"));}if(n.typeParameters){parts.push(path.call(print,"typeParameters"));}if(n.superClass){// ClassDeclaration and ClassExpression only
parts.push(" extends ",path.call(print,"superClass"),path.call(print,"superTypeParameters"));}if(n.extends&&n.extends.length>0){// DeclareClass only
parts.push(" extends ",lines_1.fromString(", ").join(path.map(print,"extends")));}if(n["implements"]&&n["implements"].length>0){parts.push(" implements ",lines_1.fromString(", ").join(path.map(print,"implements")));}parts.push(" ",path.call(print,"body"));if(n.type==="DeclareClass"){return printFlowDeclaration(path,parts);}else{return lines_1.concat(parts);}case"TemplateElement":return lines_1.fromString(n.value.raw,options).lockIndentTail();case"TemplateLiteral":{var expressions_1=path.map(print,"expressions");parts.push("`");path.each(function(childPath){var i=childPath.getName();parts.push(print(childPath));if(i<expressions_1.length){parts.push("${",expressions_1[i],"}");}},"quasis");parts.push("`");return lines_1.concat(parts).lockIndentTail();}case"TaggedTemplateExpression":return lines_1.concat([path.call(print,"tag"),path.call(print,"quasi")]);// These types are unprintable because they serve as abstract
// supertypes for other (printable) types.
case"Node":case"Printable":case"SourceLocation":case"Position":case"Statement":case"Function":case"Pattern":case"Expression":case"Declaration":case"Specifier":case"NamedSpecifier":case"Comment":// Supertype of Block and Line
case"Flow":// Supertype of all Flow AST node types
case"FlowType":// Supertype of all Flow types
case"FlowPredicate":// Supertype of InferredPredicate and DeclaredPredicate
case"MemberTypeAnnotation":// Flow
case"Type":// Flow
case"TSHasOptionalTypeParameterInstantiation":case"TSHasOptionalTypeParameters":case"TSHasOptionalTypeAnnotation":case"ChainElement":// Supertype of MemberExpression and CallExpression
throw new Error("unprintable type: "+JSON.stringify(n.type));case"CommentBlock":// Babel block comment.
case"Block":// Esprima block comment.
return lines_1.concat(["/*",lines_1.fromString(n.value,options),"*/"]);case"CommentLine":// Babel line comment.
case"Line":// Esprima line comment.
return lines_1.concat(["//",lines_1.fromString(n.value,options)]);// Type Annotations for Facebook Flow, typically stripped out or
// transformed away before printing.
case"TypeAnnotation":if(n.typeAnnotation){if(n.typeAnnotation.type!=="FunctionTypeAnnotation"){parts.push(": ");}parts.push(path.call(print,"typeAnnotation"));return lines_1.concat(parts);}return lines_1.fromString("");case"ExistentialTypeParam":case"ExistsTypeAnnotation":return lines_1.fromString("*",options);case"EmptyTypeAnnotation":return lines_1.fromString("empty",options);case"AnyTypeAnnotation":return lines_1.fromString("any",options);case"MixedTypeAnnotation":return lines_1.fromString("mixed",options);case"ArrayTypeAnnotation":return lines_1.concat([path.call(print,"elementType"),"[]"]);case"TupleTypeAnnotation":{var printed_2=path.map(print,"types");var joined=lines_1.fromString(", ").join(printed_2);var oneLine_3=joined.getLineLength(1)<=options.wrapColumn;if(oneLine_3){if(options.arrayBracketSpacing){parts.push("[ ");}else{parts.push("[");}}else{parts.push("[\n");}path.each(function(elemPath){var i=elemPath.getName();var elem=elemPath.getValue();if(!elem){// If the array expression ends with a hole, that hole
// will be ignored by the interpreter, but if it ends with
// two (or more) holes, we need to write out two (or more)
// commas so that the resulting code is interpreted with
// both (all) of the holes.
parts.push(",");}else{var lines=printed_2[i];if(oneLine_3){if(i>0)parts.push(" ");}else{lines=lines.indent(options.tabWidth);}parts.push(lines);if(i<n.types.length-1||!oneLine_3&&util.isTrailingCommaEnabled(options,"arrays"))parts.push(",");if(!oneLine_3)parts.push("\n");}},"types");if(oneLine_3&&options.arrayBracketSpacing){parts.push(" ]");}else{parts.push("]");}return lines_1.concat(parts);}case"BooleanTypeAnnotation":return lines_1.fromString("boolean",options);case"BooleanLiteralTypeAnnotation":assert_1.default.strictEqual(typeof n.value,"boolean");return lines_1.fromString(""+n.value,options);case"InterfaceTypeAnnotation":parts.push("interface");if(n.extends&&n.extends.length>0){parts.push(" extends ",lines_1.fromString(", ").join(path.map(print,"extends")));}parts.push(" ",path.call(print,"body"));return lines_1.concat(parts);case"DeclareFunction":return printFlowDeclaration(path,["function ",path.call(print,"id"),";"]);case"DeclareModule":return printFlowDeclaration(path,["module ",path.call(print,"id")," ",path.call(print,"body")]);case"DeclareModuleExports":return printFlowDeclaration(path,["module.exports",path.call(print,"typeAnnotation")]);case"DeclareVariable":return printFlowDeclaration(path,["var ",path.call(print,"id"),";"]);case"DeclareExportDeclaration":case"DeclareExportAllDeclaration":return lines_1.concat(["declare ",printExportDeclaration(path,options,print)]);case"EnumDeclaration":return lines_1.concat(["enum ",path.call(print,"id"),path.call(print,"body")]);case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":{if(n.type==="EnumSymbolBody"||n.explicitType){parts.push(" of ",// EnumBooleanBody => boolean, etc.
n.type.slice(4,-4).toLowerCase());}parts.push(" {\n",lines_1.fromString("\n").join(path.map(print,"members")).indent(options.tabWidth),"\n}");return lines_1.concat(parts);}case"EnumDefaultedMember":return lines_1.concat([path.call(print,"id"),","]);case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":return lines_1.concat([path.call(print,"id")," = ",path.call(print,"init"),","]);case"InferredPredicate":return lines_1.fromString("%checks",options);case"DeclaredPredicate":return lines_1.concat(["%checks(",path.call(print,"value"),")"]);case"FunctionTypeAnnotation":{// FunctionTypeAnnotation is ambiguous:
// declare function(a: B): void; OR
// const A: (a: B) => void;
var parent=path.getParentNode(0);var isArrowFunctionTypeAnnotation=!(namedTypes.ObjectTypeCallProperty.check(parent)||namedTypes.ObjectTypeInternalSlot.check(parent)&&parent.method||namedTypes.DeclareFunction.check(path.getParentNode(2)));var needsColon=isArrowFunctionTypeAnnotation&&!namedTypes.FunctionTypeParam.check(parent)&&!namedTypes.TypeAlias.check(parent);if(needsColon){parts.push(": ");}var hasTypeParameters=!!n.typeParameters;var needsParens=hasTypeParameters||n.params.length!==1||n.params[0].name;parts.push(hasTypeParameters?path.call(print,"typeParameters"):"",needsParens?"(":"",printFunctionParams(path,options,print),needsParens?")":"");// The returnType is not wrapped in a TypeAnnotation, so the colon
// needs to be added separately.
if(n.returnType){parts.push(isArrowFunctionTypeAnnotation?" => ":": ",path.call(print,"returnType"));}return lines_1.concat(parts);}case"FunctionTypeParam":{var name=path.call(print,"name");parts.push(name);if(n.optional){parts.push("?");}if(name.infos[0].line){parts.push(": ");}parts.push(path.call(print,"typeAnnotation"));return lines_1.concat(parts);}case"GenericTypeAnnotation":return lines_1.concat([path.call(print,"id"),path.call(print,"typeParameters")]);case"DeclareInterface":parts.push("declare ");// Fall through to InterfaceDeclaration...
case"InterfaceDeclaration":case"TSInterfaceDeclaration":if(n.declare){parts.push("declare ");}parts.push("interface ",path.call(print,"id"),path.call(print,"typeParameters")," ");if(n["extends"]&&n["extends"].length>0){parts.push("extends ",lines_1.fromString(", ").join(path.map(print,"extends"))," ");}if(n.body){parts.push(path.call(print,"body"));}return lines_1.concat(parts);case"ClassImplements":case"InterfaceExtends":return lines_1.concat([path.call(print,"id"),path.call(print,"typeParameters")]);case"IntersectionTypeAnnotation":return lines_1.fromString(" & ").join(path.map(print,"types"));case"NullableTypeAnnotation":return lines_1.concat(["?",path.call(print,"typeAnnotation")]);case"NullLiteralTypeAnnotation":return lines_1.fromString("null",options);case"ThisTypeAnnotation":return lines_1.fromString("this",options);case"NumberTypeAnnotation":return lines_1.fromString("number",options);case"ObjectTypeCallProperty":return path.call(print,"value");case"ObjectTypeIndexer":if(n.static){parts.push("static ");}parts.push(printVariance(path,print),"[");if(n.id){parts.push(path.call(print,"id"),": ");}parts.push(path.call(print,"key"),"]: ",path.call(print,"value"));return lines_1.concat(parts);case"ObjectTypeProperty":return lines_1.concat([printVariance(path,print),path.call(print,"key"),n.optional?"?":"",": ",path.call(print,"value")]);case"ObjectTypeInternalSlot":return lines_1.concat([n.static?"static ":"","[[",path.call(print,"id"),"]]",n.optional?"?":"",n.value.type!=="FunctionTypeAnnotation"?": ":"",path.call(print,"value")]);case"QualifiedTypeIdentifier":return lines_1.concat([path.call(print,"qualification"),".",path.call(print,"id")]);case"StringLiteralTypeAnnotation":return lines_1.fromString(nodeStr(n.value,options),options);case"NumberLiteralTypeAnnotation":case"NumericLiteralTypeAnnotation":assert_1.default.strictEqual(typeof n.value,"number");return lines_1.fromString(JSON.stringify(n.value),options);case"BigIntLiteralTypeAnnotation":return lines_1.fromString(n.raw,options);case"StringTypeAnnotation":return lines_1.fromString("string",options);case"DeclareTypeAlias":parts.push("declare ");// Fall through to TypeAlias...
case"TypeAlias":return lines_1.concat(["type ",path.call(print,"id"),path.call(print,"typeParameters")," = ",path.call(print,"right"),";"]);case"DeclareOpaqueType":parts.push("declare ");// Fall through to OpaqueType...
case"OpaqueType":parts.push("opaque type ",path.call(print,"id"),path.call(print,"typeParameters"));if(n["supertype"]){parts.push(": ",path.call(print,"supertype"));}if(n["impltype"]){parts.push(" = ",path.call(print,"impltype"));}parts.push(";");return lines_1.concat(parts);case"TypeCastExpression":return lines_1.concat(["(",path.call(print,"expression"),path.call(print,"typeAnnotation"),")"]);case"TypeParameterDeclaration":case"TypeParameterInstantiation":return lines_1.concat(["<",lines_1.fromString(", ").join(path.map(print,"params")),">"]);case"Variance":if(n.kind==="plus"){return lines_1.fromString("+");}if(n.kind==="minus"){return lines_1.fromString("-");}return lines_1.fromString("");case"TypeParameter":if(n.variance){parts.push(printVariance(path,print));}parts.push(path.call(print,"name"));if(n.bound){parts.push(path.call(print,"bound"));}if(n["default"]){parts.push("=",path.call(print,"default"));}return lines_1.concat(parts);case"TypeofTypeAnnotation":return lines_1.concat([lines_1.fromString("typeof ",options),path.call(print,"argument")]);case"IndexedAccessType":case"OptionalIndexedAccessType":return lines_1.concat([path.call(print,"objectType"),n.optional?"?.":"","[",path.call(print,"indexType"),"]"]);case"UnionTypeAnnotation":return lines_1.fromString(" | ").join(path.map(print,"types"));case"VoidTypeAnnotation":return lines_1.fromString("void",options);case"NullTypeAnnotation":return lines_1.fromString("null",options);case"SymbolTypeAnnotation":return lines_1.fromString("symbol",options);case"BigIntTypeAnnotation":return lines_1.fromString("bigint",options);// Type Annotations for TypeScript (when using Babylon as parser)
case"TSType":throw new Error("unprintable type: "+JSON.stringify(n.type));case"TSNumberKeyword":return lines_1.fromString("number",options);case"TSBigIntKeyword":return lines_1.fromString("bigint",options);case"TSObjectKeyword":return lines_1.fromString("object",options);case"TSBooleanKeyword":return lines_1.fromString("boolean",options);case"TSStringKeyword":return lines_1.fromString("string",options);case"TSSymbolKeyword":return lines_1.fromString("symbol",options);case"TSAnyKeyword":return lines_1.fromString("any",options);case"TSVoidKeyword":return lines_1.fromString("void",options);case"TSIntrinsicKeyword":return lines_1.fromString("intrinsic",options);case"TSThisType":return lines_1.fromString("this",options);case"TSNullKeyword":return lines_1.fromString("null",options);case"TSUndefinedKeyword":return lines_1.fromString("undefined",options);case"TSUnknownKeyword":return lines_1.fromString("unknown",options);case"TSNeverKeyword":return lines_1.fromString("never",options);case"TSArrayType":return lines_1.concat([path.call(print,"elementType"),"[]"]);case"TSLiteralType":return path.call(print,"literal");case"TSUnionType":return lines_1.fromString(" | ").join(path.map(print,"types"));case"TSIntersectionType":return lines_1.fromString(" & ").join(path.map(print,"types"));case"TSConditionalType":parts.push(path.call(print,"checkType")," extends ",path.call(print,"extendsType")," ? ",path.call(print,"trueType")," : ",path.call(print,"falseType"));return lines_1.concat(parts);case"TSInferType":parts.push("infer ",path.call(print,"typeParameter"));return lines_1.concat(parts);case"TSParenthesizedType":return lines_1.concat(["(",path.call(print,"typeAnnotation"),")"]);case"TSFunctionType":return lines_1.concat([path.call(print,"typeParameters"),"(",printFunctionParams(path,options,print),") => ",path.call(print,"typeAnnotation","typeAnnotation")]);case"TSConstructorType":return lines_1.concat(["new ",path.call(print,"typeParameters"),"(",printFunctionParams(path,options,print),") => ",path.call(print,"typeAnnotation","typeAnnotation")]);case"TSMappedType":{parts.push(n.readonly?"readonly ":"","[",path.call(print,"typeParameter"),"]",n.optional?"?":"");if(n.typeAnnotation){parts.push(": ",path.call(print,"typeAnnotation"),";");}return lines_1.concat(["{\n",lines_1.concat(parts).indent(options.tabWidth),"\n}"]);}case"TSTupleType":return lines_1.concat(["[",lines_1.fromString(", ").join(path.map(print,"elementTypes")),"]"]);case"TSNamedTupleMember":parts.push(path.call(print,"label"));if(n.optional){parts.push("?");}parts.push(": ",path.call(print,"elementType"));return lines_1.concat(parts);case"TSRestType":return lines_1.concat(["...",path.call(print,"typeAnnotation")]);case"TSOptionalType":return lines_1.concat([path.call(print,"typeAnnotation"),"?"]);case"TSIndexedAccessType":return lines_1.concat([path.call(print,"objectType"),"[",path.call(print,"indexType"),"]"]);case"TSTypeOperator":return lines_1.concat([path.call(print,"operator")," ",path.call(print,"typeAnnotation")]);case"TSTypeLiteral":{var memberLines=lines_1.fromString("\n").join(path.map(print,"members"));if(memberLines.isEmpty()){return lines_1.fromString("{}",options);}parts.push("{\n",memberLines.indent(options.tabWidth),"\n}");return lines_1.concat(parts);}case"TSEnumMember":parts.push(path.call(print,"id"));if(n.initializer){parts.push(" = ",path.call(print,"initializer"));}return lines_1.concat(parts);case"TSTypeQuery":return lines_1.concat(["typeof ",path.call(print,"exprName")]);case"TSParameterProperty":if(n.accessibility){parts.push(n.accessibility," ");}if(n.export){parts.push("export ");}if(n.static){parts.push("static ");}if(n.readonly){parts.push("readonly ");}parts.push(path.call(print,"parameter"));return lines_1.concat(parts);case"TSTypeReference":return lines_1.concat([path.call(print,"typeName"),path.call(print,"typeParameters")]);case"TSQualifiedName":return lines_1.concat([path.call(print,"left"),".",path.call(print,"right")]);case"TSAsExpression":{var expression=path.call(print,"expression");parts.push(expression,lines_1.fromString(" as "),path.call(print,"typeAnnotation"));return lines_1.concat(parts);}case"TSNonNullExpression":return lines_1.concat([path.call(print,"expression"),"!"]);case"TSTypeAnnotation":return lines_1.concat([": ",path.call(print,"typeAnnotation")]);case"TSIndexSignature":return lines_1.concat([n.readonly?"readonly ":"","[",path.map(print,"parameters"),"]",path.call(print,"typeAnnotation")]);case"TSPropertySignature":parts.push(printVariance(path,print),n.readonly?"readonly ":"");if(n.computed){parts.push("[",path.call(print,"key"),"]");}else{parts.push(path.call(print,"key"));}parts.push(n.optional?"?":"",path.call(print,"typeAnnotation"));return lines_1.concat(parts);case"TSMethodSignature":if(n.computed){parts.push("[",path.call(print,"key"),"]");}else{parts.push(path.call(print,"key"));}if(n.optional){parts.push("?");}parts.push(path.call(print,"typeParameters"),"(",printFunctionParams(path,options,print),")",path.call(print,"typeAnnotation"));return lines_1.concat(parts);case"TSTypePredicate":if(n.asserts){parts.push("asserts ");}parts.push(path.call(print,"parameterName"));if(n.typeAnnotation){parts.push(" is ",path.call(print,"typeAnnotation","typeAnnotation"));}return lines_1.concat(parts);case"TSCallSignatureDeclaration":return lines_1.concat([path.call(print,"typeParameters"),"(",printFunctionParams(path,options,print),")",path.call(print,"typeAnnotation")]);case"TSConstructSignatureDeclaration":if(n.typeParameters){parts.push("new",path.call(print,"typeParameters"));}else{parts.push("new ");}parts.push("(",printFunctionParams(path,options,print),")",path.call(print,"typeAnnotation"));return lines_1.concat(parts);case"TSTypeAliasDeclaration":return lines_1.concat([n.declare?"declare ":"","type ",path.call(print,"id"),path.call(print,"typeParameters")," = ",path.call(print,"typeAnnotation"),";"]);case"TSTypeParameter":{parts.push(path.call(print,"name"));// ambiguous because of TSMappedType
var parent=path.getParentNode(0);var isInMappedType=namedTypes.TSMappedType.check(parent);if(n.constraint){parts.push(isInMappedType?" in ":" extends ",path.call(print,"constraint"));}if(n["default"]){parts.push(" = ",path.call(print,"default"));}return lines_1.concat(parts);}case"TSTypeAssertion":{parts.push("<",path.call(print,"typeAnnotation"),"> ",path.call(print,"expression"));return lines_1.concat(parts);}case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return lines_1.concat(["<",lines_1.fromString(", ").join(path.map(print,"params")),">"]);case"TSEnumDeclaration":{parts.push(n.declare?"declare ":"",n.const?"const ":"","enum ",path.call(print,"id"));var memberLines=lines_1.fromString(",\n").join(path.map(print,"members"));if(memberLines.isEmpty()){parts.push(" {}");}else{parts.push(" {\n",memberLines.indent(options.tabWidth),"\n}");}return lines_1.concat(parts);}case"TSExpressionWithTypeArguments":return lines_1.concat([path.call(print,"expression"),path.call(print,"typeParameters")]);case"TSInterfaceBody":{var lines=lines_1.fromString("\n").join(path.map(print,"body"));if(lines.isEmpty()){return lines_1.fromString("{}",options);}return lines_1.concat(["{\n",lines.indent(options.tabWidth),"\n}"]);}case"TSImportType":parts.push("import(",path.call(print,"argument"),")");if(n.qualifier){parts.push(".",path.call(print,"qualifier"));}if(n.typeParameters){parts.push(path.call(print,"typeParameters"));}return lines_1.concat(parts);case"TSImportEqualsDeclaration":if(n.isExport){parts.push("export ");}parts.push("import ",path.call(print,"id")," = ",path.call(print,"moduleReference"));return maybeAddSemicolon(lines_1.concat(parts));case"TSExternalModuleReference":return lines_1.concat(["require(",path.call(print,"expression"),")"]);case"TSModuleDeclaration":{var parent=path.getParentNode();if(parent.type==="TSModuleDeclaration"){parts.push(".");}else{if(n.declare){parts.push("declare ");}if(!n.global){var isExternal=n.id.type==="StringLiteral"||n.id.type==="Literal"&&typeof n.id.value==="string";if(isExternal){parts.push("module ");}else if(n.loc&&n.loc.lines&&n.id.loc){var prefix=n.loc.lines.sliceString(n.loc.start,n.id.loc.start);// These keywords are fundamentally ambiguous in the
// Babylon parser, and not reflected in the AST, so
// the best we can do is to match the original code,
// when possible.
if(prefix.indexOf("module")>=0){parts.push("module ");}else{parts.push("namespace ");}}else{parts.push("namespace ");}}}parts.push(path.call(print,"id"));if(n.body){parts.push(" ");parts.push(path.call(print,"body"));}return lines_1.concat(parts);}case"TSModuleBlock":{var naked=path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body");if(naked.isEmpty()){parts.push("{}");}else{parts.push("{\n",naked.indent(options.tabWidth),"\n}");}return lines_1.concat(parts);}// https://github.com/babel/babel/pull/10148
case"V8IntrinsicIdentifier":return lines_1.concat(["%",path.call(print,"name")]);// https://github.com/babel/babel/pull/13191
case"TopicReference":return lines_1.fromString("#");// Unhandled types below. If encountered, nodes of these types should
// be either left alone or desugared into AST types that are fully
// supported by the pretty-printer.
case"ClassHeritage":// TODO
case"ComprehensionBlock":// TODO
case"ComprehensionExpression":// TODO
case"Glob":// TODO
case"GeneratorExpression":// TODO
case"LetStatement":// TODO
case"LetExpression":// TODO
case"GraphExpression":// TODO
case"GraphIndexExpression":// TODO
case"XMLDefaultDeclaration":case"XMLAnyName":case"XMLQualifiedIdentifier":case"XMLFunctionQualifiedIdentifier":case"XMLAttributeSelector":case"XMLFilterExpression":case"XML":case"XMLElement":case"XMLList":case"XMLEscape":case"XMLText":case"XMLStartTag":case"XMLEndTag":case"XMLPointTag":case"XMLName":case"XMLAttribute":case"XMLCdata":case"XMLComment":case"XMLProcessingInstruction":default:debugger;throw new Error("unknown type: "+JSON.stringify(n.type));}}function printDecorators(path,printPath){var parts=[];var node=path.getValue();if(node.decorators&&node.decorators.length>0&&// If the parent node is an export declaration, it will be
// responsible for printing node.decorators.
!util.getParentExportDeclaration(path)){path.each(function(decoratorPath){parts.push(printPath(decoratorPath),"\n");},"decorators");}else if(util.isExportDeclaration(node)&&node.declaration&&node.declaration.decorators){// Export declarations are responsible for printing any decorators
// that logically apply to node.declaration.
path.each(function(decoratorPath){parts.push(printPath(decoratorPath),"\n");},"declaration","decorators");}return lines_1.concat(parts);}function printStatementSequence(path,options,print){var filtered=[];var sawComment=false;var sawStatement=false;path.each(function(stmtPath){var stmt=stmtPath.getValue();// Just in case the AST has been modified to contain falsy
// "statements," it's safer simply to skip them.
if(!stmt){return;}// Skip printing EmptyStatement nodes to avoid leaving stray
// semicolons lying around.
if(stmt.type==="EmptyStatement"&&!(stmt.comments&&stmt.comments.length>0)){return;}if(namedTypes.Comment.check(stmt)){// The pretty printer allows a dangling Comment node to act as
// a Statement when the Comment can't be attached to any other
// non-Comment node in the tree.
sawComment=true;}else if(namedTypes.Statement.check(stmt)){sawStatement=true;}else{// When the pretty printer encounters a string instead of an
// AST node, it just prints the string. This behavior can be
// useful for fine-grained formatting decisions like inserting
// blank lines.
isString.assert(stmt);}// We can't hang onto stmtPath outside of this function, because
// it's just a reference to a mutable FastPath object, so we have
// to go ahead and print it here.
filtered.push({node:stmt,printed:print(stmtPath)});});if(sawComment){assert_1.default.strictEqual(sawStatement,false,"Comments may appear as statements in otherwise empty statement "+"lists, but may not coexist with non-Comment nodes.");}var prevTrailingSpace=null;var len=filtered.length;var parts=[];filtered.forEach(function(info,i){var printed=info.printed;var stmt=info.node;var multiLine=printed.length>1;var notFirst=i>0;var notLast=i<len-1;var leadingSpace;var trailingSpace;var lines=stmt&&stmt.loc&&stmt.loc.lines;var trueLoc=lines&&options.reuseWhitespace&&util.getTrueLoc(stmt,lines);if(notFirst){if(trueLoc){var beforeStart=lines.skipSpaces(trueLoc.start,true);var beforeStartLine=beforeStart?beforeStart.line:1;var leadingGap=trueLoc.start.line-beforeStartLine;leadingSpace=Array(leadingGap+1).join("\n");}else{leadingSpace=multiLine?"\n\n":"\n";}}else{leadingSpace="";}if(notLast){if(trueLoc){var afterEnd=lines.skipSpaces(trueLoc.end);var afterEndLine=afterEnd?afterEnd.line:lines.length;var trailingGap=afterEndLine-trueLoc.end.line;trailingSpace=Array(trailingGap+1).join("\n");}else{trailingSpace=multiLine?"\n\n":"\n";}}else{trailingSpace="";}parts.push(maxSpace(prevTrailingSpace,leadingSpace),printed);if(notLast){prevTrailingSpace=trailingSpace;}else if(trailingSpace){parts.push(trailingSpace);}});return lines_1.concat(parts);}function maxSpace(s1,s2){if(!s1&&!s2){return lines_1.fromString("");}if(!s1){return lines_1.fromString(s2);}if(!s2){return lines_1.fromString(s1);}var spaceLines1=lines_1.fromString(s1);var spaceLines2=lines_1.fromString(s2);if(spaceLines2.length>spaceLines1.length){return spaceLines2;}return spaceLines1;}function printMethod(path,options,print){var node=path.getNode();var kind=node.kind;var parts=[];var nodeValue=node.value;if(!namedTypes.FunctionExpression.check(nodeValue)){nodeValue=node;}var access=node.accessibility||node.access;if(typeof access==="string"){parts.push(access," ");}if(node.static){parts.push("static ");}if(node.abstract){parts.push("abstract ");}if(node.override){parts.push("override ");}if(node.readonly){parts.push("readonly ");}if(nodeValue.async){parts.push("async ");}if(nodeValue.generator){parts.push("*");}if(kind==="get"||kind==="set"){parts.push(kind," ");}var key=path.call(print,"key");if(node.computed){key=lines_1.concat(["[",key,"]"]);}parts.push(key);if(node.optional){parts.push("?");}if(node===nodeValue){parts.push(path.call(print,"typeParameters"),"(",printFunctionParams(path,options,print),")",path.call(print,"returnType"));if(node.body){parts.push(" ",path.call(print,"body"));}else{parts.push(";");}}else{parts.push(path.call(print,"value","typeParameters"),"(",path.call(function(valuePath){return printFunctionParams(valuePath,options,print);},"value"),")",path.call(print,"value","returnType"));if(nodeValue.body){parts.push(" ",path.call(print,"value","body"));}else{parts.push(";");}}return lines_1.concat(parts);}function printArgumentsList(path,options,print){var printed=path.map(print,"arguments");var trailingComma=util.isTrailingCommaEnabled(options,"parameters");var joined=lines_1.fromString(", ").join(printed);if(joined.getLineLength(1)>options.wrapColumn){joined=lines_1.fromString(",\n").join(printed);return lines_1.concat(["(\n",joined.indent(options.tabWidth),trailingComma?",\n)":"\n)"]);}return lines_1.concat(["(",joined,")"]);}function printFunctionParams(path,options,print){var fun=path.getValue();var params;var printed=[];if(fun.params){params=fun.params;printed=path.map(print,"params");}else if(fun.parameters){params=fun.parameters;printed=path.map(print,"parameters");}if(fun.defaults){path.each(function(defExprPath){var i=defExprPath.getName();var p=printed[i];if(p&&defExprPath.getValue()){printed[i]=lines_1.concat([p," = ",print(defExprPath)]);}},"defaults");}if(fun.rest){printed.push(lines_1.concat(["...",path.call(print,"rest")]));}var joined=lines_1.fromString(", ").join(printed);if(joined.length>1||joined.getLineLength(1)>options.wrapColumn){joined=lines_1.fromString(",\n").join(printed);if(util.isTrailingCommaEnabled(options,"parameters")&&!fun.rest&&params[params.length-1].type!=="RestElement"){joined=lines_1.concat([joined,",\n"]);}else{joined=lines_1.concat([joined,"\n"]);}return lines_1.concat(["\n",joined.indent(options.tabWidth)]);}return joined;}function maybePrintImportAssertions(path,options,print){var n=path.getValue();if(n.assertions&&n.assertions.length>0){var parts=[" assert {"];var printed=path.map(print,"assertions");var flat=lines_1.fromString(", ").join(printed);if(flat.length>1||flat.getLineLength(1)>options.wrapColumn){parts.push("\n",lines_1.fromString(",\n").join(printed).indent(options.tabWidth),"\n}");}else{parts.push(" ",flat," }");}return lines_1.concat(parts);}return lines_1.fromString("");}function printExportDeclaration(path,options,print){var decl=path.getValue();var parts=["export "];if(decl.exportKind&&decl.exportKind==="type"){if(!decl.declaration){parts.push("type ");}}var shouldPrintSpaces=options.objectCurlySpacing;namedTypes.Declaration.assert(decl);if(decl["default"]||decl.type==="ExportDefaultDeclaration"){parts.push("default ");}if(decl.declaration){parts.push(path.call(print,"declaration"));}else if(decl.specifiers){if(decl.specifiers.length===1&&decl.specifiers[0].type==="ExportBatchSpecifier"){parts.push("*");}else if(decl.specifiers.length===0){parts.push("{}");}else if(decl.specifiers[0].type==="ExportDefaultSpecifier"){var unbracedSpecifiers_2=[];var bracedSpecifiers_2=[];path.each(function(specifierPath){var spec=specifierPath.getValue();if(spec.type==="ExportDefaultSpecifier"){unbracedSpecifiers_2.push(print(specifierPath));}else{bracedSpecifiers_2.push(print(specifierPath));}},"specifiers");unbracedSpecifiers_2.forEach(function(lines,i){if(i>0){parts.push(", ");}parts.push(lines);});if(bracedSpecifiers_2.length>0){var lines_2=lines_1.fromString(", ").join(bracedSpecifiers_2);if(lines_2.getLineLength(1)>options.wrapColumn){lines_2=lines_1.concat([lines_1.fromString(",\n").join(bracedSpecifiers_2).indent(options.tabWidth),","]);}if(unbracedSpecifiers_2.length>0){parts.push(", ");}if(lines_2.length>1){parts.push("{\n",lines_2,"\n}");}else if(options.objectCurlySpacing){parts.push("{ ",lines_2," }");}else{parts.push("{",lines_2,"}");}}}else{parts.push(shouldPrintSpaces?"{ ":"{",lines_1.fromString(", ").join(path.map(print,"specifiers")),shouldPrintSpaces?" }":"}");}if(decl.source){parts.push(" from ",path.call(print,"source"),maybePrintImportAssertions(path,options,print));}}var lines=lines_1.concat(parts);if(lastNonSpaceCharacter(lines)!==";"&&!(decl.declaration&&(decl.declaration.type==="FunctionDeclaration"||decl.declaration.type==="ClassDeclaration"||decl.declaration.type==="TSModuleDeclaration"||decl.declaration.type==="TSInterfaceDeclaration"||decl.declaration.type==="TSEnumDeclaration"))){lines=lines_1.concat([lines,";"]);}return lines;}function printFlowDeclaration(path,parts){var parentExportDecl=util.getParentExportDeclaration(path);if(parentExportDecl){assert_1.default.strictEqual(parentExportDecl.type,"DeclareExportDeclaration");}else{// If the parent node has type DeclareExportDeclaration, then it
// will be responsible for printing the "declare" token. Otherwise
// it needs to be printed with this non-exported declaration node.
parts.unshift("declare ");}return lines_1.concat(parts);}function printVariance(path,print){return path.call(function(variancePath){var value=variancePath.getValue();if(value){if(value==="plus"){return lines_1.fromString("+");}if(value==="minus"){return lines_1.fromString("-");}return print(variancePath);}return lines_1.fromString("");},"variance");}function adjustClause(clause,options){if(clause.length>1)return lines_1.concat([" ",clause]);return lines_1.concat(["\n",maybeAddSemicolon(clause).indent(options.tabWidth)]);}function lastNonSpaceCharacter(lines){var pos=lines.lastPos();do{var ch=lines.charAt(pos);if(/\S/.test(ch))return ch;}while(lines.prevPos(pos));}function endsWithBrace(lines){return lastNonSpaceCharacter(lines)==="}";}function swapQuotes(str){return str.replace(/['"]/g,function(m){return m==='"'?"'":'"';});}function getPossibleRaw(node){var value=types.getFieldValue(node,"value");var extra=types.getFieldValue(node,"extra");if(extra&&typeof extra.raw==="string"&&value==extra.rawValue){return extra.raw;}if(node.type==="Literal"){var raw=node.raw;if(typeof raw==="string"&&value==raw){return raw;}}}function jsSafeStringify(str){return JSON.stringify(str).replace(/[\u2028\u2029]/g,function(m){return"\\u"+m.charCodeAt(0).toString(16);});}function nodeStr(str,options){isString.assert(str);switch(options.quote){case"auto":{var double=jsSafeStringify(str);var single=swapQuotes(jsSafeStringify(swapQuotes(str)));return double.length>single.length?single:double;}case"single":return swapQuotes(jsSafeStringify(swapQuotes(str)));case"double":default:return jsSafeStringify(str);}}function maybeAddSemicolon(lines){var eoc=lastNonSpaceCharacter(lines);if(!eoc||"\n};".indexOf(eoc)<0)return lines_1.concat([lines,";"]);return lines;}return printer;}(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.run=exports.prettyPrint=exports.print=exports.visit=exports.types=exports.parse=void 0;var tslib_1=require$$0$3;var fs_1=tslib_1.__importDefault(require$$0__default.default);var types=tslib_1.__importStar(requireMain$1());exports.types=types;var parser_1=requireParser();Object.defineProperty(exports,"parse",{enumerable:true,get:function(){return parser_1.parse;}});var printer_1=requirePrinter();/**
	 * Traverse and potentially modify an abstract syntax tree using a
	 * convenient visitor syntax:
	 *
	 *   recast.visit(ast, {
	 *     names: [],
	 *     visitIdentifier: function(path) {
	 *       var node = path.value;
	 *       this.visitor.names.push(node.name);
	 *       this.traverse(path);
	 *     }
	 *   });
	 */var ast_types_1=requireMain$1();Object.defineProperty(exports,"visit",{enumerable:true,get:function(){return ast_types_1.visit;}});/**
	 * Reprint a modified syntax tree using as much of the original source
	 * code as possible.
	 */function print(node,options){return new printer_1.Printer(options).print(node);}exports.print=print;/**
	 * Print without attempting to reuse any original source code.
	 */function prettyPrint(node,options){return new printer_1.Printer(options).printGenerically(node);}exports.prettyPrint=prettyPrint;/**
	 * Convenient command-line interface (see e.g. example/add-braces).
	 */function run(transformer,options){return runFile(process.argv[2],transformer,options);}exports.run=run;function runFile(path,transformer,options){fs_1.default.readFile(path,"utf-8",function(err,code){if(err){console.error(err);return;}runString(code,transformer,options);});}function defaultWriteback(output){process.stdout.write(output);}function runString(code,transformer,options){var writeback=options&&options.writeback||defaultWriteback;transformer(parser_1.parse(code,options),function(node){writeback(print(node,options).code);});}})(main$4);var typescript={};var babel={};var _babel_options={};var hasRequired_babel_options;function require_babel_options(){if(hasRequired_babel_options)return _babel_options;hasRequired_babel_options=1;Object.defineProperty(_babel_options,"__esModule",{value:true});var util_1=requireUtil();function getBabelOptions(options){// The goal here is to tolerate as much syntax as possible, since Recast
// is not in the business of forbidding anything. If you want your
// parser to be more restrictive for some reason, you can always pass
// your own parser object to recast.parse.
return{sourceType:util_1.getOption(options,"sourceType","module"),strictMode:util_1.getOption(options,"strictMode",false),allowImportExportEverywhere:true,allowReturnOutsideFunction:true,startLine:1,tokens:true,plugins:["asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","classStaticBlock","decimal","decorators-legacy","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importAssertions","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{proposal:"minimal"}],["recordAndTuple",{syntaxType:"hash"}],"throwExpressions","topLevelAwait","v8intrinsic"]};}_babel_options.default=getBabelOptions;return _babel_options;}var lib$1={};var hasRequiredLib$1;function requireLib$1(){if(hasRequiredLib$1)return lib$1;hasRequiredLib$1=1;Object.defineProperty(lib$1,'__esModule',{value:true});function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}class Position{constructor(line,col,index){this.line=void 0;this.column=void 0;this.index=void 0;this.line=line;this.column=col;this.index=index;}}class SourceLocation{constructor(start,end){this.start=void 0;this.end=void 0;this.filename=void 0;this.identifierName=void 0;this.start=start;this.end=end;}}function createPositionWithColumnOffset(position,columnOffset){const{line,column,index}=position;return new Position(line,column+columnOffset,index+columnOffset);}const code="BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED";var ModuleErrors={ImportMetaOutsideModule:{message:"import.meta may appear only with 'sourceType: \"module\"'",code},ImportOutsideModule:{message:"'import' and 'export' may appear only with 'sourceType: \"module\"'",code}};const NodeDescriptions={ArrayPattern:"array destructuring pattern",AssignmentExpression:"assignment expression",AssignmentPattern:"assignment expression",ArrowFunctionExpression:"arrow function expression",ConditionalExpression:"conditional expression",CatchClause:"catch clause",ForOfStatement:"for-of statement",ForInStatement:"for-in statement",ForStatement:"for-loop",FormalParameters:"function parameter list",Identifier:"identifier",ImportSpecifier:"import specifier",ImportDefaultSpecifier:"import default specifier",ImportNamespaceSpecifier:"import namespace specifier",ObjectPattern:"object destructuring pattern",ParenthesizedExpression:"parenthesized expression",RestElement:"rest element",UpdateExpression:{true:"prefix operation",false:"postfix operation"},VariableDeclarator:"variable declaration",YieldExpression:"yield expression"};const toNodeDescription=_ref44=>{let{type,prefix}=_ref44;return type==="UpdateExpression"?NodeDescriptions.UpdateExpression[String(prefix)]:NodeDescriptions[type];};var StandardErrors={AccessorIsGenerator:_ref45=>{let{kind}=_ref45;return"A ".concat(kind,"ter cannot be a generator.");},ArgumentsInClass:"'arguments' is only allowed in functions and class methods.",AsyncFunctionInSingleStatementContext:"Async functions can only be declared at the top level or inside a block.",AwaitBindingIdentifier:"Can not use 'await' as identifier inside an async function.",AwaitBindingIdentifierInStaticBlock:"Can not use 'await' as identifier inside a static block.",AwaitExpressionFormalParameter:"'await' is not allowed in async function parameters.",AwaitUsingNotInAsyncContext:"'await using' is only allowed within async functions and at the top levels of modules.",AwaitNotInAsyncContext:"'await' is only allowed within async functions and at the top levels of modules.",AwaitNotInAsyncFunction:"'await' is only allowed within async functions.",BadGetterArity:"A 'get' accessor must not have any formal parameters.",BadSetterArity:"A 'set' accessor must have exactly one formal parameter.",BadSetterRestParameter:"A 'set' accessor function argument must not be a rest parameter.",ConstructorClassField:"Classes may not have a field named 'constructor'.",ConstructorClassPrivateField:"Classes may not have a private field named '#constructor'.",ConstructorIsAccessor:"Class constructor may not be an accessor.",ConstructorIsAsync:"Constructor can't be an async function.",ConstructorIsGenerator:"Constructor can't be a generator.",DeclarationMissingInitializer:_ref46=>{let{kind}=_ref46;return"Missing initializer in ".concat(kind," declaration.");},DecoratorArgumentsOutsideParentheses:"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.",DecoratorBeforeExport:"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.",DecoratorsBeforeAfterExport:"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.",DecoratorConstructor:"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?",DecoratorExportClass:"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.",DecoratorSemicolon:"Decorators must not be followed by a semicolon.",DecoratorStaticBlock:"Decorators can't be used with a static block.",DeferImportRequiresNamespace:'Only `import defer * as x from "./module"` is valid.',DeletePrivateField:"Deleting a private field is not allowed.",DestructureNamedImport:"ES2015 named imports do not destructure. Use another statement for destructuring after the import.",DuplicateConstructor:"Duplicate constructor in the same class.",DuplicateDefaultExport:"Only one default export allowed per module.",DuplicateExport:_ref47=>{let{exportName}=_ref47;return"`".concat(exportName,"` has already been exported. Exported identifiers must be unique.");},DuplicateProto:"Redefinition of __proto__ property.",DuplicateRegExpFlags:"Duplicate regular expression flag.",DynamicImportPhaseRequiresImportExpressions:_ref48=>{let{phase}=_ref48;return"'import.".concat(phase,"(...)' can only be parsed when using the 'createImportExpressions' option.");},ElementAfterRest:"Rest element must be last element.",EscapedCharNotAnIdentifier:"Invalid Unicode escape.",ExportBindingIsString:_ref49=>{let{localName,exportName}=_ref49;return"A string literal cannot be used as an exported binding without `from`.\n- Did you mean `export { '".concat(localName,"' as '").concat(exportName,"' } from 'some-module'`?");},ExportDefaultFromAsIdentifier:"'from' is not allowed as an identifier after 'export default'.",ForInOfLoopInitializer:_ref50=>{let{type}=_ref50;return"'".concat(type==="ForInStatement"?"for-in":"for-of","' loop variable declaration may not have an initializer.");},ForInUsing:"For-in loop may not start with 'using' declaration.",ForOfAsync:"The left-hand side of a for-of loop may not be 'async'.",ForOfLet:"The left-hand side of a for-of loop may not start with 'let'.",GeneratorInSingleStatementContext:"Generators can only be declared at the top level or inside a block.",IllegalBreakContinue:_ref51=>{let{type}=_ref51;return"Unsyntactic ".concat(type==="BreakStatement"?"break":"continue",".");},IllegalLanguageModeDirective:"Illegal 'use strict' directive in function with non-simple parameter list.",IllegalReturn:"'return' outside of function.",ImportAttributesUseAssert:"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.",ImportBindingIsString:_ref52=>{let{importName}=_ref52;return"A string literal cannot be used as an imported binding.\n- Did you mean `import { \"".concat(importName,"\" as foo }`?");},ImportCallArgumentTrailingComma:"Trailing comma is disallowed inside import(...) arguments.",ImportCallArity:_ref53=>{let{maxArgumentCount}=_ref53;return"`import()` requires exactly ".concat(maxArgumentCount===1?"one argument":"one or two arguments",".");},ImportCallNotNewExpression:"Cannot use new with import(...).",ImportCallSpreadArgument:"`...` is not allowed in `import()`.",ImportJSONBindingNotDefault:"A JSON module can only be imported with `default`.",ImportReflectionHasAssertion:"`import module x` cannot have assertions.",ImportReflectionNotBinding:'Only `import module x from "./module"` is valid.',IncompatibleRegExpUVFlags:"The 'u' and 'v' regular expression flags cannot be enabled at the same time.",InvalidBigIntLiteral:"Invalid BigIntLiteral.",InvalidCodePoint:"Code point out of bounds.",InvalidCoverInitializedName:"Invalid shorthand property initializer.",InvalidDecimal:"Invalid decimal.",InvalidDigit:_ref54=>{let{radix}=_ref54;return"Expected number in radix ".concat(radix,".");},InvalidEscapeSequence:"Bad character escape sequence.",InvalidEscapeSequenceTemplate:"Invalid escape sequence in template.",InvalidEscapedReservedWord:_ref55=>{let{reservedWord}=_ref55;return"Escape sequence in keyword ".concat(reservedWord,".");},InvalidIdentifier:_ref56=>{let{identifierName}=_ref56;return"Invalid identifier ".concat(identifierName,".");},InvalidLhs:_ref57=>{let{ancestor}=_ref57;return"Invalid left-hand side in ".concat(toNodeDescription(ancestor),".");},InvalidLhsBinding:_ref58=>{let{ancestor}=_ref58;return"Binding invalid left-hand side in ".concat(toNodeDescription(ancestor),".");},InvalidLhsOptionalChaining:_ref59=>{let{ancestor}=_ref59;return"Invalid optional chaining in the left-hand side of ".concat(toNodeDescription(ancestor),".");},InvalidNumber:"Invalid number.",InvalidOrMissingExponent:"Floating-point numbers require a valid exponent after the 'e'.",InvalidOrUnexpectedToken:_ref60=>{let{unexpected}=_ref60;return"Unexpected character '".concat(unexpected,"'.");},InvalidParenthesizedAssignment:"Invalid parenthesized assignment pattern.",InvalidPrivateFieldResolution:_ref61=>{let{identifierName}=_ref61;return"Private name #".concat(identifierName," is not defined.");},InvalidPropertyBindingPattern:"Binding member expression.",InvalidRecordProperty:"Only properties and spread elements are allowed in record definitions.",InvalidRestAssignmentPattern:"Invalid rest operator's argument.",LabelRedeclaration:_ref62=>{let{labelName}=_ref62;return"Label '".concat(labelName,"' is already declared.");},LetInLexicalBinding:"'let' is disallowed as a lexically bound name.",LineTerminatorBeforeArrow:"No line break is allowed before '=>'.",MalformedRegExpFlags:"Invalid regular expression flag.",MissingClassName:"A class name is required.",MissingEqInAssignment:"Only '=' operator can be used for specifying default value.",MissingSemicolon:"Missing semicolon.",MissingPlugin:_ref63=>{let{missingPlugin}=_ref63;return"This experimental syntax requires enabling the parser plugin: ".concat(missingPlugin.map(name=>JSON.stringify(name)).join(", "),".");},MissingOneOfPlugins:_ref64=>{let{missingPlugin}=_ref64;return"This experimental syntax requires enabling one of the following parser plugin(s): ".concat(missingPlugin.map(name=>JSON.stringify(name)).join(", "),".");},MissingUnicodeEscape:"Expecting Unicode escape sequence \\uXXXX.",MixingCoalesceWithLogical:"Nullish coalescing operator(??) requires parens when mixing with logical operators.",ModuleAttributeDifferentFromType:"The only accepted module attribute is `type`.",ModuleAttributeInvalidValue:"Only string literals are allowed as module attribute values.",ModuleAttributesWithDuplicateKeys:_ref65=>{let{key}=_ref65;return"Duplicate key \"".concat(key,"\" is not allowed in module attributes.");},ModuleExportNameHasLoneSurrogate:_ref66=>{let{surrogateCharCode}=_ref66;return"An export name cannot include a lone surrogate, found '\\u".concat(surrogateCharCode.toString(16),"'.");},ModuleExportUndefined:_ref67=>{let{localName}=_ref67;return"Export '".concat(localName,"' is not defined.");},MultipleDefaultsInSwitch:"Multiple default clauses.",NewlineAfterThrow:"Illegal newline after throw.",NoCatchOrFinally:"Missing catch or finally clause.",NumberIdentifier:"Identifier directly after number.",NumericSeparatorInEscapeSequence:"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.",ObsoleteAwaitStar:"'await*' has been removed from the async functions proposal. Use Promise.all() instead.",OptionalChainingNoNew:"Constructors in/after an Optional Chain are not allowed.",OptionalChainingNoTemplate:"Tagged Template Literals are not allowed in optionalChain.",OverrideOnConstructor:"'override' modifier cannot appear on a constructor declaration.",ParamDupe:"Argument name clash.",PatternHasAccessor:"Object pattern can't contain getter or setter.",PatternHasMethod:"Object pattern can't contain methods.",PrivateInExpectedIn:_ref68=>{let{identifierName}=_ref68;return"Private names are only allowed in property accesses (`obj.#".concat(identifierName,"`) or in `in` expressions (`#").concat(identifierName," in obj`).");},PrivateNameRedeclaration:_ref69=>{let{identifierName}=_ref69;return"Duplicate private name #".concat(identifierName,".");},RecordExpressionBarIncorrectEndSyntaxType:"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",RecordExpressionBarIncorrectStartSyntaxType:"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",RecordExpressionHashIncorrectStartSyntaxType:"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",RecordNoProto:"'__proto__' is not allowed in Record expressions.",RestTrailingComma:"Unexpected trailing comma after rest element.",SloppyFunction:"In non-strict mode code, functions can only be declared at top level or inside a block.",SloppyFunctionAnnexB:"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.",SourcePhaseImportRequiresDefault:'Only `import source x from "./module"` is valid.',StaticPrototype:"Classes may not have static property named prototype.",SuperNotAllowed:"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?",SuperPrivateField:"Private fields can't be accessed on super.",TrailingDecorator:"Decorators must be attached to a class element.",TupleExpressionBarIncorrectEndSyntaxType:"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",TupleExpressionBarIncorrectStartSyntaxType:"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",TupleExpressionHashIncorrectStartSyntaxType:"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",UnexpectedArgumentPlaceholder:"Unexpected argument placeholder.",UnexpectedAwaitAfterPipelineBody:'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal.',UnexpectedDigitAfterHash:"Unexpected digit after hash token.",UnexpectedImportExport:"'import' and 'export' may only appear at the top level.",UnexpectedKeyword:_ref70=>{let{keyword}=_ref70;return"Unexpected keyword '".concat(keyword,"'.");},UnexpectedLeadingDecorator:"Leading decorators must be attached to a class declaration.",UnexpectedLexicalDeclaration:"Lexical declaration cannot appear in a single-statement context.",UnexpectedNewTarget:"`new.target` can only be used in functions or class properties.",UnexpectedNumericSeparator:"A numeric separator is only allowed between two digits.",UnexpectedPrivateField:"Unexpected private name.",UnexpectedReservedWord:_ref71=>{let{reservedWord}=_ref71;return"Unexpected reserved word '".concat(reservedWord,"'.");},UnexpectedSuper:"'super' is only allowed in object methods and classes.",UnexpectedToken:_ref72=>{let{expected,unexpected}=_ref72;return"Unexpected token".concat(unexpected?" '".concat(unexpected,"'."):"").concat(expected?", expected \"".concat(expected,"\""):"");},UnexpectedTokenUnaryExponentiation:"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",UnexpectedUsingDeclaration:"Using declaration cannot appear in the top level when source type is `script`.",UnsupportedBind:"Binding should be performed on object property.",UnsupportedDecoratorExport:"A decorated export must export a class declaration.",UnsupportedDefaultExport:"Only expressions, functions or classes are allowed as the `default` export.",UnsupportedImport:"`import` can only be used in `import()` or `import.meta`.",UnsupportedMetaProperty:_ref73=>{let{target,onlyValidPropertyName}=_ref73;return"The only valid meta property for ".concat(target," is ").concat(target,".").concat(onlyValidPropertyName,".");},UnsupportedParameterDecorator:"Decorators cannot be used to decorate parameters.",UnsupportedPropertyDecorator:"Decorators cannot be used to decorate object literal properties.",UnsupportedSuper:"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).",UnterminatedComment:"Unterminated comment.",UnterminatedRegExp:"Unterminated regular expression.",UnterminatedString:"Unterminated string constant.",UnterminatedTemplate:"Unterminated template.",UsingDeclarationHasBindingPattern:"Using declaration cannot have destructuring patterns.",VarRedeclaration:_ref74=>{let{identifierName}=_ref74;return"Identifier '".concat(identifierName,"' has already been declared.");},YieldBindingIdentifier:"Can not use 'yield' as identifier inside a generator.",YieldInParameter:"Yield expression is not allowed in formal parameters.",ZeroDigitNumericSeparator:"Numeric separator can not be used after leading 0."};var StrictModeErrors={StrictDelete:"Deleting local variable in strict mode.",StrictEvalArguments:_ref75=>{let{referenceName}=_ref75;return"Assigning to '".concat(referenceName,"' in strict mode.");},StrictEvalArgumentsBinding:_ref76=>{let{bindingName}=_ref76;return"Binding '".concat(bindingName,"' in strict mode.");},StrictFunction:"In strict mode code, functions can only be declared at top level or inside a block.",StrictNumericEscape:"The only valid numeric escape in strict mode is '\\0'.",StrictOctalLiteral:"Legacy octal literals are not allowed in strict mode.",StrictWith:"'with' in strict mode."};const UnparenthesizedPipeBodyDescriptions=new Set(["ArrowFunctionExpression","AssignmentExpression","ConditionalExpression","YieldExpression"]);var PipelineOperatorErrors={PipeBodyIsTighter:"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.",PipeTopicRequiresHackPipes:'Topic reference is used, but the pipelineOperator plugin was not passed a "proposal": "hack" or "smart" option.',PipeTopicUnbound:"Topic reference is unbound; it must be inside a pipe body.",PipeTopicUnconfiguredToken:_ref77=>{let{token}=_ref77;return"Invalid topic token ".concat(token,". In order to use ").concat(token," as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"").concat(token,"\" }.");},PipeTopicUnused:"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.",PipeUnparenthesizedBody:_ref78=>{let{type}=_ref78;return"Hack-style pipe body cannot be an unparenthesized ".concat(toNodeDescription({type}),"; please wrap it in parentheses.");},PipelineBodyNoArrow:'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized.',PipelineBodySequenceExpression:"Pipeline body may not be a comma-separated sequence expression.",PipelineHeadSequenceExpression:"Pipeline head should not be a comma-separated sequence expression.",PipelineTopicUnused:"Pipeline is in topic style but does not use topic reference.",PrimaryTopicNotAllowed:"Topic reference was used in a lexical context without topic binding.",PrimaryTopicRequiresSmartPipeline:'Topic reference is used, but the pipelineOperator plugin was not passed a "proposal": "hack" or "smart" option.'};const _excluded=["toMessage"],_excluded2=["message"];function defineHidden(obj,key,value){Object.defineProperty(obj,key,{enumerable:false,configurable:true,value});}function toParseErrorConstructor(_ref){let{toMessage}=_ref,properties=_objectWithoutPropertiesLoose(_ref,_excluded);return function constructor(loc,details){const error=new SyntaxError();Object.assign(error,properties,{loc,pos:loc.index});if("missingPlugin"in details){Object.assign(error,{missingPlugin:details.missingPlugin});}defineHidden(error,"clone",function clone(){let overrides=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _overrides$loc;const{line,column,index}=(_overrides$loc=overrides.loc)!=null?_overrides$loc:loc;return constructor(new Position(line,column,index),Object.assign({},details,overrides.details));});defineHidden(error,"details",details);Object.defineProperty(error,"message",{configurable:true,get(){const message="".concat(toMessage(details)," (").concat(loc.line,":").concat(loc.column,")");this.message=message;return message;},set(value){Object.defineProperty(this,"message",{value,writable:true});}});return error;};}function ParseErrorEnum(argument,syntaxPlugin){if(Array.isArray(argument)){return parseErrorTemplates=>ParseErrorEnum(parseErrorTemplates,argument[0]);}const ParseErrorConstructors={};for(const reasonCode of Object.keys(argument)){const template=argument[reasonCode];const _ref2=typeof template==="string"?{message:()=>template}:typeof template==="function"?{message:template}:template,{message}=_ref2,rest=_objectWithoutPropertiesLoose(_ref2,_excluded2);const toMessage=typeof message==="string"?()=>message:message;ParseErrorConstructors[reasonCode]=toParseErrorConstructor(Object.assign({code:"BABEL_PARSER_SYNTAX_ERROR",reasonCode,toMessage},syntaxPlugin?{syntaxPlugin}:{},rest));}return ParseErrorConstructors;}const Errors=Object.assign({},ParseErrorEnum(ModuleErrors),ParseErrorEnum(StandardErrors),ParseErrorEnum(StrictModeErrors),ParseErrorEnum(_templateObject||(_templateObject=_taggedTemplateLiteral(["pipelineOperator"])))(PipelineOperatorErrors));const{defineProperty}=Object;const toUnenumerable=(object,key)=>defineProperty(object,key,{enumerable:false,value:object[key]});function toESTreeLocation(node){node.loc.start&&toUnenumerable(node.loc.start,"index");node.loc.end&&toUnenumerable(node.loc.end,"index");return node;}var estree=superClass=>class ESTreeParserMixin extends superClass{parse(){const file=toESTreeLocation(super.parse());if(this.options.tokens){file.tokens=file.tokens.map(toESTreeLocation);}return file;}parseRegExpLiteral(_ref79){let{pattern,flags}=_ref79;let regex=null;try{regex=new RegExp(pattern,flags);}catch(e){}const node=this.estreeParseLiteral(regex);node.regex={pattern,flags};return node;}parseBigIntLiteral(value){let bigInt;try{bigInt=BigInt(value);}catch(_unused){bigInt=null;}const node=this.estreeParseLiteral(bigInt);node.bigint=String(node.value||value);return node;}parseDecimalLiteral(value){const decimal=null;const node=this.estreeParseLiteral(decimal);node.decimal=String(node.value||value);return node;}estreeParseLiteral(value){return this.parseLiteral(value,"Literal");}parseStringLiteral(value){return this.estreeParseLiteral(value);}parseNumericLiteral(value){return this.estreeParseLiteral(value);}parseNullLiteral(){return this.estreeParseLiteral(null);}parseBooleanLiteral(value){return this.estreeParseLiteral(value);}directiveToStmt(directive){const expression=directive.value;delete directive.value;expression.type="Literal";expression.raw=expression.extra.raw;expression.value=expression.extra.expressionValue;const stmt=directive;stmt.type="ExpressionStatement";stmt.expression=expression;stmt.directive=expression.extra.rawValue;delete expression.extra;return stmt;}initFunction(node,isAsync){super.initFunction(node,isAsync);node.expression=false;}checkDeclaration(node){if(node!=null&&this.isObjectProperty(node)){this.checkDeclaration(node.value);}else{super.checkDeclaration(node);}}getObjectOrClassMethodParams(method){return method.value.params;}isValidDirective(stmt){var _stmt$expression$extr;return stmt.type==="ExpressionStatement"&&stmt.expression.type==="Literal"&&typeof stmt.expression.value==="string"&&!((_stmt$expression$extr=stmt.expression.extra)!=null&&_stmt$expression$extr.parenthesized);}parseBlockBody(node,allowDirectives,topLevel,end,afterBlockParse){super.parseBlockBody(node,allowDirectives,topLevel,end,afterBlockParse);const directiveStatements=node.directives.map(d=>this.directiveToStmt(d));node.body=directiveStatements.concat(node.body);delete node.directives;}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper){this.parseMethod(method,isGenerator,isAsync,isConstructor,allowsDirectSuper,"ClassMethod",true);if(method.typeParameters){method.value.typeParameters=method.typeParameters;delete method.typeParameters;}classBody.body.push(method);}parsePrivateName(){const node=super.parsePrivateName();{if(!this.getPluginOption("estree","classFeatures")){return node;}}return this.convertPrivateNameToPrivateIdentifier(node);}convertPrivateNameToPrivateIdentifier(node){const name=super.getPrivateNameSV(node);node=node;delete node.id;node.name=name;node.type="PrivateIdentifier";return node;}isPrivateName(node){{if(!this.getPluginOption("estree","classFeatures")){return super.isPrivateName(node);}}return node.type==="PrivateIdentifier";}getPrivateNameSV(node){{if(!this.getPluginOption("estree","classFeatures")){return super.getPrivateNameSV(node);}}return node.name;}parseLiteral(value,type){const node=super.parseLiteral(value,type);node.raw=node.extra.raw;delete node.extra;return node;}parseFunctionBody(node,allowExpression){let isMethod=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;super.parseFunctionBody(node,allowExpression,isMethod);node.expression=node.body.type!=="BlockStatement";}parseMethod(node,isGenerator,isAsync,isConstructor,allowDirectSuper,type){let inClassScope=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;let funcNode=this.startNode();funcNode.kind=node.kind;funcNode=super.parseMethod(funcNode,isGenerator,isAsync,isConstructor,allowDirectSuper,type,inClassScope);funcNode.type="FunctionExpression";delete funcNode.kind;node.value=funcNode;if(type==="ClassPrivateMethod"){node.computed=false;}return this.finishNode(node,"MethodDefinition");}parseClassProperty(){const propertyNode=super.parseClassProperty(...arguments);{if(!this.getPluginOption("estree","classFeatures")){return propertyNode;}}propertyNode.type="PropertyDefinition";return propertyNode;}parseClassPrivateProperty(){const propertyNode=super.parseClassPrivateProperty(...arguments);{if(!this.getPluginOption("estree","classFeatures")){return propertyNode;}}propertyNode.type="PropertyDefinition";propertyNode.computed=false;return propertyNode;}parseObjectMethod(prop,isGenerator,isAsync,isPattern,isAccessor){const node=super.parseObjectMethod(prop,isGenerator,isAsync,isPattern,isAccessor);if(node){node.type="Property";if(node.kind==="method"){node.kind="init";}node.shorthand=false;}return node;}parseObjectProperty(prop,startLoc,isPattern,refExpressionErrors){const node=super.parseObjectProperty(prop,startLoc,isPattern,refExpressionErrors);if(node){node.kind="init";node.type="Property";}return node;}isValidLVal(type,isUnparenthesizedInAssign,binding){return type==="Property"?"value":super.isValidLVal(type,isUnparenthesizedInAssign,binding);}isAssignable(node,isBinding){if(node!=null&&this.isObjectProperty(node)){return this.isAssignable(node.value,isBinding);}return super.isAssignable(node,isBinding);}toAssignable(node){let isLHS=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(node!=null&&this.isObjectProperty(node)){const{key,value}=node;if(this.isPrivateName(key)){this.classScope.usePrivateName(this.getPrivateNameSV(key),key.loc.start);}this.toAssignable(value,isLHS);}else{super.toAssignable(node,isLHS);}}toAssignableObjectExpressionProp(prop,isLast,isLHS){if(prop.kind==="get"||prop.kind==="set"){this.raise(Errors.PatternHasAccessor,prop.key);}else if(prop.method){this.raise(Errors.PatternHasMethod,prop.key);}else{super.toAssignableObjectExpressionProp(prop,isLast,isLHS);}}finishCallExpression(unfinished,optional){const node=super.finishCallExpression(unfinished,optional);if(node.callee.type==="Import"){node.type="ImportExpression";node.source=node.arguments[0];if(this.hasPlugin("importAttributes")||this.hasPlugin("importAssertions")){var _node$arguments$,_node$arguments$2;node.options=(_node$arguments$=node.arguments[1])!=null?_node$arguments$:null;node.attributes=(_node$arguments$2=node.arguments[1])!=null?_node$arguments$2:null;}delete node.arguments;delete node.callee;}return node;}toReferencedArguments(node){if(node.type==="ImportExpression"){return;}super.toReferencedArguments(node);}parseExport(unfinished,decorators){const exportStartLoc=this.state.lastTokStartLoc;const node=super.parseExport(unfinished,decorators);switch(node.type){case"ExportAllDeclaration":node.exported=null;break;case"ExportNamedDeclaration":if(node.specifiers.length===1&&node.specifiers[0].type==="ExportNamespaceSpecifier"){node.type="ExportAllDeclaration";node.exported=node.specifiers[0].exported;delete node.specifiers;}case"ExportDefaultDeclaration":{var _declaration$decorato;const{declaration}=node;if((declaration==null?void 0:declaration.type)==="ClassDeclaration"&&((_declaration$decorato=declaration.decorators)==null?void 0:_declaration$decorato.length)>0&&declaration.start===node.start){this.resetStartLocation(node,exportStartLoc);}}break;}return node;}parseSubscript(base,startLoc,noCalls,state){const node=super.parseSubscript(base,startLoc,noCalls,state);if(state.optionalChainMember){if(node.type==="OptionalMemberExpression"||node.type==="OptionalCallExpression"){node.type=node.type.substring(8);}if(state.stop){const chain=this.startNodeAtNode(node);chain.expression=node;return this.finishNode(chain,"ChainExpression");}}else if(node.type==="MemberExpression"||node.type==="CallExpression"){node.optional=false;}return node;}isOptionalMemberExpression(node){if(node.type==="ChainExpression"){return node.expression.type==="MemberExpression";}return super.isOptionalMemberExpression(node);}hasPropertyAsPrivateName(node){if(node.type==="ChainExpression"){node=node.expression;}return super.hasPropertyAsPrivateName(node);}isObjectProperty(node){return node.type==="Property"&&node.kind==="init"&&!node.method;}isObjectMethod(node){return node.method||node.kind==="get"||node.kind==="set";}finishNodeAt(node,type,endLoc){return toESTreeLocation(super.finishNodeAt(node,type,endLoc));}resetStartLocation(node,startLoc){super.resetStartLocation(node,startLoc);toESTreeLocation(node);}resetEndLocation(node){let endLoc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.state.lastTokEndLoc;super.resetEndLocation(node,endLoc);toESTreeLocation(node);}};class TokContext{constructor(token,preserveSpace){this.token=void 0;this.preserveSpace=void 0;this.token=token;this.preserveSpace=!!preserveSpace;}}const types={brace:new TokContext("{"),j_oTag:new TokContext("<tag"),j_cTag:new TokContext("</tag"),j_expr:new TokContext("<tag>...</tag>",true)};{types.template=new TokContext("`",true);}const beforeExpr=true;const startsExpr=true;const isLoop=true;const isAssign=true;const prefix=true;const postfix=true;class ExportedTokenType{constructor(label){let conf=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this.label=void 0;this.keyword=void 0;this.beforeExpr=void 0;this.startsExpr=void 0;this.rightAssociative=void 0;this.isLoop=void 0;this.isAssign=void 0;this.prefix=void 0;this.postfix=void 0;this.binop=void 0;this.label=label;this.keyword=conf.keyword;this.beforeExpr=!!conf.beforeExpr;this.startsExpr=!!conf.startsExpr;this.rightAssociative=!!conf.rightAssociative;this.isLoop=!!conf.isLoop;this.isAssign=!!conf.isAssign;this.prefix=!!conf.prefix;this.postfix=!!conf.postfix;this.binop=conf.binop!=null?conf.binop:null;{this.updateContext=null;}}}const keywords$1=new Map();function createKeyword(name){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};options.keyword=name;const token=createToken(name,options);keywords$1.set(name,token);return token;}function createBinop(name,binop){return createToken(name,{beforeExpr,binop});}let tokenTypeCounter=-1;const tokenTypes=[];const tokenLabels=[];const tokenBinops=[];const tokenBeforeExprs=[];const tokenStartsExprs=[];const tokenPrefixes=[];function createToken(name){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$binop,_options$beforeExpr,_options$startsExpr,_options$prefix;++tokenTypeCounter;tokenLabels.push(name);tokenBinops.push((_options$binop=options.binop)!=null?_options$binop:-1);tokenBeforeExprs.push((_options$beforeExpr=options.beforeExpr)!=null?_options$beforeExpr:false);tokenStartsExprs.push((_options$startsExpr=options.startsExpr)!=null?_options$startsExpr:false);tokenPrefixes.push((_options$prefix=options.prefix)!=null?_options$prefix:false);tokenTypes.push(new ExportedTokenType(name,options));return tokenTypeCounter;}function createKeywordLike(name){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$binop2,_options$beforeExpr2,_options$startsExpr2,_options$prefix2;++tokenTypeCounter;keywords$1.set(name,tokenTypeCounter);tokenLabels.push(name);tokenBinops.push((_options$binop2=options.binop)!=null?_options$binop2:-1);tokenBeforeExprs.push((_options$beforeExpr2=options.beforeExpr)!=null?_options$beforeExpr2:false);tokenStartsExprs.push((_options$startsExpr2=options.startsExpr)!=null?_options$startsExpr2:false);tokenPrefixes.push((_options$prefix2=options.prefix)!=null?_options$prefix2:false);tokenTypes.push(new ExportedTokenType("name",options));return tokenTypeCounter;}const tt={bracketL:createToken("[",{beforeExpr,startsExpr}),bracketHashL:createToken("#[",{beforeExpr,startsExpr}),bracketBarL:createToken("[|",{beforeExpr,startsExpr}),bracketR:createToken("]"),bracketBarR:createToken("|]"),braceL:createToken("{",{beforeExpr,startsExpr}),braceBarL:createToken("{|",{beforeExpr,startsExpr}),braceHashL:createToken("#{",{beforeExpr,startsExpr}),braceR:createToken("}"),braceBarR:createToken("|}"),parenL:createToken("(",{beforeExpr,startsExpr}),parenR:createToken(")"),comma:createToken(",",{beforeExpr}),semi:createToken(";",{beforeExpr}),colon:createToken(":",{beforeExpr}),doubleColon:createToken("::",{beforeExpr}),dot:createToken("."),question:createToken("?",{beforeExpr}),questionDot:createToken("?."),arrow:createToken("=>",{beforeExpr}),template:createToken("template"),ellipsis:createToken("...",{beforeExpr}),backQuote:createToken("`",{startsExpr}),dollarBraceL:createToken("${",{beforeExpr,startsExpr}),templateTail:createToken("...`",{startsExpr}),templateNonTail:createToken("...${",{beforeExpr,startsExpr}),at:createToken("@"),hash:createToken("#",{startsExpr}),interpreterDirective:createToken("#!..."),eq:createToken("=",{beforeExpr,isAssign}),assign:createToken("_=",{beforeExpr,isAssign}),slashAssign:createToken("_=",{beforeExpr,isAssign}),xorAssign:createToken("_=",{beforeExpr,isAssign}),moduloAssign:createToken("_=",{beforeExpr,isAssign}),incDec:createToken("++/--",{prefix,postfix,startsExpr}),bang:createToken("!",{beforeExpr,prefix,startsExpr}),tilde:createToken("~",{beforeExpr,prefix,startsExpr}),doubleCaret:createToken("^^",{startsExpr}),doubleAt:createToken("@@",{startsExpr}),pipeline:createBinop("|>",0),nullishCoalescing:createBinop("??",1),logicalOR:createBinop("||",1),logicalAND:createBinop("&&",2),bitwiseOR:createBinop("|",3),bitwiseXOR:createBinop("^",4),bitwiseAND:createBinop("&",5),equality:createBinop("==/!=/===/!==",6),lt:createBinop("</>/<=/>=",7),gt:createBinop("</>/<=/>=",7),relational:createBinop("</>/<=/>=",7),bitShift:createBinop("<</>>/>>>",8),bitShiftL:createBinop("<</>>/>>>",8),bitShiftR:createBinop("<</>>/>>>",8),plusMin:createToken("+/-",{beforeExpr,binop:9,prefix,startsExpr}),modulo:createToken("%",{binop:10,startsExpr}),star:createToken("*",{binop:10}),slash:createBinop("/",10),exponent:createToken("**",{beforeExpr,binop:11,rightAssociative:true}),_in:createKeyword("in",{beforeExpr,binop:7}),_instanceof:createKeyword("instanceof",{beforeExpr,binop:7}),_break:createKeyword("break"),_case:createKeyword("case",{beforeExpr}),_catch:createKeyword("catch"),_continue:createKeyword("continue"),_debugger:createKeyword("debugger"),_default:createKeyword("default",{beforeExpr}),_else:createKeyword("else",{beforeExpr}),_finally:createKeyword("finally"),_function:createKeyword("function",{startsExpr}),_if:createKeyword("if"),_return:createKeyword("return",{beforeExpr}),_switch:createKeyword("switch"),_throw:createKeyword("throw",{beforeExpr,prefix,startsExpr}),_try:createKeyword("try"),_var:createKeyword("var"),_const:createKeyword("const"),_with:createKeyword("with"),_new:createKeyword("new",{beforeExpr,startsExpr}),_this:createKeyword("this",{startsExpr}),_super:createKeyword("super",{startsExpr}),_class:createKeyword("class",{startsExpr}),_extends:createKeyword("extends",{beforeExpr}),_export:createKeyword("export"),_import:createKeyword("import",{startsExpr}),_null:createKeyword("null",{startsExpr}),_true:createKeyword("true",{startsExpr}),_false:createKeyword("false",{startsExpr}),_typeof:createKeyword("typeof",{beforeExpr,prefix,startsExpr}),_void:createKeyword("void",{beforeExpr,prefix,startsExpr}),_delete:createKeyword("delete",{beforeExpr,prefix,startsExpr}),_do:createKeyword("do",{isLoop,beforeExpr}),_for:createKeyword("for",{isLoop}),_while:createKeyword("while",{isLoop}),_as:createKeywordLike("as",{startsExpr}),_assert:createKeywordLike("assert",{startsExpr}),_async:createKeywordLike("async",{startsExpr}),_await:createKeywordLike("await",{startsExpr}),_defer:createKeywordLike("defer",{startsExpr}),_from:createKeywordLike("from",{startsExpr}),_get:createKeywordLike("get",{startsExpr}),_let:createKeywordLike("let",{startsExpr}),_meta:createKeywordLike("meta",{startsExpr}),_of:createKeywordLike("of",{startsExpr}),_sent:createKeywordLike("sent",{startsExpr}),_set:createKeywordLike("set",{startsExpr}),_source:createKeywordLike("source",{startsExpr}),_static:createKeywordLike("static",{startsExpr}),_using:createKeywordLike("using",{startsExpr}),_yield:createKeywordLike("yield",{startsExpr}),_asserts:createKeywordLike("asserts",{startsExpr}),_checks:createKeywordLike("checks",{startsExpr}),_exports:createKeywordLike("exports",{startsExpr}),_global:createKeywordLike("global",{startsExpr}),_implements:createKeywordLike("implements",{startsExpr}),_intrinsic:createKeywordLike("intrinsic",{startsExpr}),_infer:createKeywordLike("infer",{startsExpr}),_is:createKeywordLike("is",{startsExpr}),_mixins:createKeywordLike("mixins",{startsExpr}),_proto:createKeywordLike("proto",{startsExpr}),_require:createKeywordLike("require",{startsExpr}),_satisfies:createKeywordLike("satisfies",{startsExpr}),_keyof:createKeywordLike("keyof",{startsExpr}),_readonly:createKeywordLike("readonly",{startsExpr}),_unique:createKeywordLike("unique",{startsExpr}),_abstract:createKeywordLike("abstract",{startsExpr}),_declare:createKeywordLike("declare",{startsExpr}),_enum:createKeywordLike("enum",{startsExpr}),_module:createKeywordLike("module",{startsExpr}),_namespace:createKeywordLike("namespace",{startsExpr}),_interface:createKeywordLike("interface",{startsExpr}),_type:createKeywordLike("type",{startsExpr}),_opaque:createKeywordLike("opaque",{startsExpr}),name:createToken("name",{startsExpr}),string:createToken("string",{startsExpr}),num:createToken("num",{startsExpr}),bigint:createToken("bigint",{startsExpr}),decimal:createToken("decimal",{startsExpr}),regexp:createToken("regexp",{startsExpr}),privateName:createToken("#name",{startsExpr}),eof:createToken("eof"),jsxName:createToken("jsxName"),jsxText:createToken("jsxText",{beforeExpr:true}),jsxTagStart:createToken("jsxTagStart",{startsExpr:true}),jsxTagEnd:createToken("jsxTagEnd"),placeholder:createToken("%%",{startsExpr:true})};function tokenIsIdentifier(token){return token>=93&&token<=132;}function tokenKeywordOrIdentifierIsKeyword(token){return token<=92;}function tokenIsKeywordOrIdentifier(token){return token>=58&&token<=132;}function tokenIsLiteralPropertyName(token){return token>=58&&token<=136;}function tokenComesBeforeExpression(token){return tokenBeforeExprs[token];}function tokenCanStartExpression(token){return tokenStartsExprs[token];}function tokenIsAssignment(token){return token>=29&&token<=33;}function tokenIsFlowInterfaceOrTypeOrOpaque(token){return token>=129&&token<=131;}function tokenIsLoop(token){return token>=90&&token<=92;}function tokenIsKeyword(token){return token>=58&&token<=92;}function tokenIsOperator(token){return token>=39&&token<=59;}function tokenIsPostfix(token){return token===34;}function tokenIsPrefix(token){return tokenPrefixes[token];}function tokenIsTSTypeOperator(token){return token>=121&&token<=123;}function tokenIsTSDeclarationStart(token){return token>=124&&token<=130;}function tokenLabelName(token){return tokenLabels[token];}function tokenOperatorPrecedence(token){return tokenBinops[token];}function tokenIsRightAssociative(token){return token===57;}function tokenIsTemplate(token){return token>=24&&token<=25;}function getExportedToken(token){return tokenTypes[token];}{tokenTypes[8].updateContext=context=>{context.pop();};tokenTypes[5].updateContext=tokenTypes[7].updateContext=tokenTypes[23].updateContext=context=>{context.push(types.brace);};tokenTypes[22].updateContext=context=>{if(context[context.length-1]===types.template){context.pop();}else{context.push(types.template);}};tokenTypes[142].updateContext=context=>{context.push(types.j_expr,types.j_oTag);};}let nonASCIIidentifierStartChars="\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u0870-\u0887\u0889-\u088e\u08a0-\u08c9\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c5d\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cdd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u1711\u171f-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4c\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7ca\ua7d0\ua7d1\ua7d3\ua7d5-\ua7d9\ua7f2-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";let nonASCIIidentifierChars="\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u0898-\u089f\u08ca-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3c\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0cf3\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ece\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u180f-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf-\u1ace\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1dff\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\u30fb\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f\uff65";const nonASCIIidentifierStart=new RegExp("["+nonASCIIidentifierStartChars+"]");const nonASCIIidentifier=new RegExp("["+nonASCIIidentifierStartChars+nonASCIIidentifierChars+"]");nonASCIIidentifierStartChars=nonASCIIidentifierChars=null;const astralIdentifierStartCodes=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];const astralIdentifierCodes=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];function isInAstralSet(code,set){let pos=0x10000;for(let i=0,length=set.length;i<length;i+=2){pos+=set[i];if(pos>code)return false;pos+=set[i+1];if(pos>=code)return true;}return false;}function isIdentifierStart(code){if(code<65)return code===36;if(code<=90)return true;if(code<97)return code===95;if(code<=122)return true;if(code<=0xffff){return code>=0xaa&&nonASCIIidentifierStart.test(String.fromCharCode(code));}return isInAstralSet(code,astralIdentifierStartCodes);}function isIdentifierChar(code){if(code<48)return code===36;if(code<58)return true;if(code<65)return false;if(code<=90)return true;if(code<97)return code===95;if(code<=122)return true;if(code<=0xffff){return code>=0xaa&&nonASCIIidentifier.test(String.fromCharCode(code));}return isInAstralSet(code,astralIdentifierStartCodes)||isInAstralSet(code,astralIdentifierCodes);}const reservedWords={keyword:["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"],strict:["implements","interface","let","package","private","protected","public","static","yield"],strictBind:["eval","arguments"]};const keywords=new Set(reservedWords.keyword);const reservedWordsStrictSet=new Set(reservedWords.strict);const reservedWordsStrictBindSet=new Set(reservedWords.strictBind);function isReservedWord(word,inModule){return inModule&&word==="await"||word==="enum";}function isStrictReservedWord(word,inModule){return isReservedWord(word,inModule)||reservedWordsStrictSet.has(word);}function isStrictBindOnlyReservedWord(word){return reservedWordsStrictBindSet.has(word);}function isStrictBindReservedWord(word,inModule){return isStrictReservedWord(word,inModule)||isStrictBindOnlyReservedWord(word);}function isKeyword(word){return keywords.has(word);}function isIteratorStart(current,next,next2){return current===64&&next===64&&isIdentifierStart(next2);}const reservedWordLikeSet=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete","implements","interface","let","package","private","protected","public","static","yield","eval","arguments","enum","await"]);function canBeReservedWord(word){return reservedWordLikeSet.has(word);}class Scope{constructor(flags){this.flags=0;this.names=new Map();this.firstLexicalName="";this.flags=flags;}}class ScopeHandler{constructor(parser,inModule){this.parser=void 0;this.scopeStack=[];this.inModule=void 0;this.undefinedExports=new Map();this.parser=parser;this.inModule=inModule;}get inTopLevel(){return(this.currentScope().flags&1)>0;}get inFunction(){return(this.currentVarScopeFlags()&2)>0;}get allowSuper(){return(this.currentThisScopeFlags()&16)>0;}get allowDirectSuper(){return(this.currentThisScopeFlags()&32)>0;}get inClass(){return(this.currentThisScopeFlags()&64)>0;}get inClassAndNotInNonArrowFunction(){const flags=this.currentThisScopeFlags();return(flags&64)>0&&(flags&2)===0;}get inStaticBlock(){for(let i=this.scopeStack.length-1;;i--){const{flags}=this.scopeStack[i];if(flags&128){return true;}if(flags&(387|64)){return false;}}}get inNonArrowFunction(){return(this.currentThisScopeFlags()&2)>0;}get treatFunctionsAsVar(){return this.treatFunctionsAsVarInScope(this.currentScope());}createScope(flags){return new Scope(flags);}enter(flags){this.scopeStack.push(this.createScope(flags));}exit(){const scope=this.scopeStack.pop();return scope.flags;}treatFunctionsAsVarInScope(scope){return!!(scope.flags&(2|128)||!this.parser.inModule&&scope.flags&1);}declareName(name,bindingType,loc){let scope=this.currentScope();if(bindingType&8||bindingType&16){this.checkRedeclarationInScope(scope,name,bindingType,loc);let type=scope.names.get(name)||0;if(bindingType&16){type=type|4;}else{if(!scope.firstLexicalName){scope.firstLexicalName=name;}type=type|2;}scope.names.set(name,type);if(bindingType&8){this.maybeExportDefined(scope,name);}}else if(bindingType&4){for(let i=this.scopeStack.length-1;i>=0;--i){scope=this.scopeStack[i];this.checkRedeclarationInScope(scope,name,bindingType,loc);scope.names.set(name,(scope.names.get(name)||0)|1);this.maybeExportDefined(scope,name);if(scope.flags&387)break;}}if(this.parser.inModule&&scope.flags&1){this.undefinedExports.delete(name);}}maybeExportDefined(scope,name){if(this.parser.inModule&&scope.flags&1){this.undefinedExports.delete(name);}}checkRedeclarationInScope(scope,name,bindingType,loc){if(this.isRedeclaredInScope(scope,name,bindingType)){this.parser.raise(Errors.VarRedeclaration,loc,{identifierName:name});}}isRedeclaredInScope(scope,name,bindingType){if(!(bindingType&1))return false;if(bindingType&8){return scope.names.has(name);}const type=scope.names.get(name);if(bindingType&16){return(type&2)>0||!this.treatFunctionsAsVarInScope(scope)&&(type&1)>0;}return(type&2)>0&&!(scope.flags&8&&scope.firstLexicalName===name)||!this.treatFunctionsAsVarInScope(scope)&&(type&4)>0;}checkLocalExport(id){const{name}=id;const topLevelScope=this.scopeStack[0];if(!topLevelScope.names.has(name)){this.undefinedExports.set(name,id.loc.start);}}currentScope(){return this.scopeStack[this.scopeStack.length-1];}currentVarScopeFlags(){for(let i=this.scopeStack.length-1;;i--){const{flags}=this.scopeStack[i];if(flags&387){return flags;}}}currentThisScopeFlags(){for(let i=this.scopeStack.length-1;;i--){const{flags}=this.scopeStack[i];if(flags&(387|64)&&!(flags&4)){return flags;}}}}class FlowScope extends Scope{constructor(){super(...arguments);this.declareFunctions=new Set();}}class FlowScopeHandler extends ScopeHandler{createScope(flags){return new FlowScope(flags);}declareName(name,bindingType,loc){const scope=this.currentScope();if(bindingType&2048){this.checkRedeclarationInScope(scope,name,bindingType,loc);this.maybeExportDefined(scope,name);scope.declareFunctions.add(name);return;}super.declareName(name,bindingType,loc);}isRedeclaredInScope(scope,name,bindingType){if(super.isRedeclaredInScope(scope,name,bindingType))return true;if(bindingType&2048&&!scope.declareFunctions.has(name)){const type=scope.names.get(name);return(type&4)>0||(type&2)>0;}return false;}checkLocalExport(id){if(!this.scopeStack[0].declareFunctions.has(id.name)){super.checkLocalExport(id);}}}class BaseParser{constructor(){this.sawUnambiguousESM=false;this.ambiguousScriptDifferentAst=false;}hasPlugin(pluginConfig){if(typeof pluginConfig==="string"){return this.plugins.has(pluginConfig);}else{const[pluginName,pluginOptions]=pluginConfig;if(!this.hasPlugin(pluginName)){return false;}const actualOptions=this.plugins.get(pluginName);for(const key of Object.keys(pluginOptions)){if((actualOptions==null?void 0:actualOptions[key])!==pluginOptions[key]){return false;}}return true;}}getPluginOption(plugin,name){var _this$plugins$get;return(_this$plugins$get=this.plugins.get(plugin))==null?void 0:_this$plugins$get[name];}}function setTrailingComments(node,comments){if(node.trailingComments===undefined){node.trailingComments=comments;}else{node.trailingComments.unshift(...comments);}}function setLeadingComments(node,comments){if(node.leadingComments===undefined){node.leadingComments=comments;}else{node.leadingComments.unshift(...comments);}}function setInnerComments(node,comments){if(node.innerComments===undefined){node.innerComments=comments;}else{node.innerComments.unshift(...comments);}}function adjustInnerComments(node,elements,commentWS){let lastElement=null;let i=elements.length;while(lastElement===null&&i>0){lastElement=elements[--i];}if(lastElement===null||lastElement.start>commentWS.start){setInnerComments(node,commentWS.comments);}else{setTrailingComments(lastElement,commentWS.comments);}}class CommentsParser extends BaseParser{addComment(comment){if(this.filename)comment.loc.filename=this.filename;const{commentsLen}=this.state;if(this.comments.length!=commentsLen)this.comments.length=commentsLen;this.comments.push(comment);this.state.commentsLen++;}processComment(node){const{commentStack}=this.state;const commentStackLength=commentStack.length;if(commentStackLength===0)return;let i=commentStackLength-1;const lastCommentWS=commentStack[i];if(lastCommentWS.start===node.end){lastCommentWS.leadingNode=node;i--;}const{start:nodeStart}=node;for(;i>=0;i--){const commentWS=commentStack[i];const commentEnd=commentWS.end;if(commentEnd>nodeStart){commentWS.containingNode=node;this.finalizeComment(commentWS);commentStack.splice(i,1);}else{if(commentEnd===nodeStart){commentWS.trailingNode=node;}break;}}}finalizeComment(commentWS){const{comments}=commentWS;if(commentWS.leadingNode!==null||commentWS.trailingNode!==null){if(commentWS.leadingNode!==null){setTrailingComments(commentWS.leadingNode,comments);}if(commentWS.trailingNode!==null){setLeadingComments(commentWS.trailingNode,comments);}}else{const{containingNode:node,start:commentStart}=commentWS;if(this.input.charCodeAt(commentStart-1)===44){switch(node.type){case"ObjectExpression":case"ObjectPattern":case"RecordExpression":adjustInnerComments(node,node.properties,commentWS);break;case"CallExpression":case"OptionalCallExpression":adjustInnerComments(node,node.arguments,commentWS);break;case"FunctionDeclaration":case"FunctionExpression":case"ArrowFunctionExpression":case"ObjectMethod":case"ClassMethod":case"ClassPrivateMethod":adjustInnerComments(node,node.params,commentWS);break;case"ArrayExpression":case"ArrayPattern":case"TupleExpression":adjustInnerComments(node,node.elements,commentWS);break;case"ExportNamedDeclaration":case"ImportDeclaration":adjustInnerComments(node,node.specifiers,commentWS);break;default:{setInnerComments(node,comments);}}}else{setInnerComments(node,comments);}}}finalizeRemainingComments(){const{commentStack}=this.state;for(let i=commentStack.length-1;i>=0;i--){this.finalizeComment(commentStack[i]);}this.state.commentStack=[];}resetPreviousNodeTrailingComments(node){const{commentStack}=this.state;const{length}=commentStack;if(length===0)return;const commentWS=commentStack[length-1];if(commentWS.leadingNode===node){commentWS.leadingNode=null;}}resetPreviousIdentifierLeadingComments(node){const{commentStack}=this.state;const{length}=commentStack;if(length===0)return;if(commentStack[length-1].trailingNode===node){commentStack[length-1].trailingNode=null;}else if(length>=2&&commentStack[length-2].trailingNode===node){commentStack[length-2].trailingNode=null;}}takeSurroundingComments(node,start,end){const{commentStack}=this.state;const commentStackLength=commentStack.length;if(commentStackLength===0)return;let i=commentStackLength-1;for(;i>=0;i--){const commentWS=commentStack[i];const commentEnd=commentWS.end;const commentStart=commentWS.start;if(commentStart===end){commentWS.leadingNode=node;}else if(commentEnd===start){commentWS.trailingNode=node;}else if(commentEnd<start){break;}}}}const lineBreak=/\r\n?|[\n\u2028\u2029]/;const lineBreakG=new RegExp(lineBreak.source,"g");function isNewLine(code){switch(code){case 10:case 13:case 8232:case 8233:return true;default:return false;}}const skipWhiteSpace=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;const skipWhiteSpaceInLine=/(?:[^\S\n\r\u2028\u2029]|\/\/.*|\/\*.*?\*\/)*/g;const skipWhiteSpaceToLineBreak=new RegExp("(?=("+skipWhiteSpaceInLine.source+"))\\1"+/(?=[\n\r\u2028\u2029]|\/\*(?!.*?\*\/)|$)/.source,"y");function isWhitespace(code){switch(code){case 0x0009:case 0x000b:case 0x000c:case 32:case 160:case 5760:case 0x2000:case 0x2001:case 0x2002:case 0x2003:case 0x2004:case 0x2005:case 0x2006:case 0x2007:case 0x2008:case 0x2009:case 0x200a:case 0x202f:case 0x205f:case 0x3000:case 0xfeff:return true;default:return false;}}class State{constructor(){this.flags=1024;this.curLine=void 0;this.lineStart=void 0;this.startLoc=void 0;this.endLoc=void 0;this.errors=[];this.potentialArrowAt=-1;this.noArrowAt=[];this.noArrowParamsConversionAt=[];this.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null};this.labels=[];this.commentsLen=0;this.commentStack=[];this.pos=0;this.type=139;this.value=null;this.start=0;this.end=0;this.lastTokEndLoc=null;this.lastTokStartLoc=null;this.context=[types.brace];this.firstInvalidTemplateEscapePos=null;this.strictErrors=new Map();this.tokensLength=0;}get strict(){return(this.flags&1)>0;}set strict(value){if(value){this.flags|=1;}else{this.flags&=~1;}}init(_ref80){let{strictMode,sourceType,startLine,startColumn}=_ref80;this.strict=strictMode===false?false:strictMode===true?true:sourceType==="module";this.curLine=startLine;this.lineStart=-startColumn;this.startLoc=this.endLoc=new Position(startLine,startColumn,0);}get maybeInArrowParameters(){return(this.flags&2)>0;}set maybeInArrowParameters(value){if(value){this.flags|=2;}else{this.flags&=~2;}}get inType(){return(this.flags&4)>0;}set inType(value){if(value){this.flags|=4;}else{this.flags&=~4;}}get noAnonFunctionType(){return(this.flags&8)>0;}set noAnonFunctionType(value){if(value){this.flags|=8;}else{this.flags&=~8;}}get hasFlowComment(){return(this.flags&16)>0;}set hasFlowComment(value){if(value){this.flags|=16;}else{this.flags&=~16;}}get isAmbientContext(){return(this.flags&32)>0;}set isAmbientContext(value){if(value){this.flags|=32;}else{this.flags&=~32;}}get inAbstractClass(){return(this.flags&64)>0;}set inAbstractClass(value){if(value){this.flags|=64;}else{this.flags&=~64;}}get inDisallowConditionalTypesContext(){return(this.flags&128)>0;}set inDisallowConditionalTypesContext(value){if(value){this.flags|=128;}else{this.flags&=~128;}}get soloAwait(){return(this.flags&256)>0;}set soloAwait(value){if(value){this.flags|=256;}else{this.flags&=~256;}}get inFSharpPipelineDirectBody(){return(this.flags&512)>0;}set inFSharpPipelineDirectBody(value){if(value){this.flags|=512;}else{this.flags&=~512;}}get canStartJSXElement(){return(this.flags&1024)>0;}set canStartJSXElement(value){if(value){this.flags|=1024;}else{this.flags&=~1024;}}get containsEsc(){return(this.flags&2048)>0;}set containsEsc(value){if(value){this.flags|=2048;}else{this.flags&=~2048;}}curPosition(){return new Position(this.curLine,this.pos-this.lineStart,this.pos);}clone(){const state=new State();state.flags=this.flags;state.curLine=this.curLine;state.lineStart=this.lineStart;state.startLoc=this.startLoc;state.endLoc=this.endLoc;state.errors=this.errors.slice();state.potentialArrowAt=this.potentialArrowAt;state.noArrowAt=this.noArrowAt.slice();state.noArrowParamsConversionAt=this.noArrowParamsConversionAt.slice();state.topicContext=this.topicContext;state.labels=this.labels.slice();state.commentsLen=this.commentsLen;state.commentStack=this.commentStack.slice();state.pos=this.pos;state.type=this.type;state.value=this.value;state.start=this.start;state.end=this.end;state.lastTokEndLoc=this.lastTokEndLoc;state.lastTokStartLoc=this.lastTokStartLoc;state.context=this.context.slice();state.firstInvalidTemplateEscapePos=this.firstInvalidTemplateEscapePos;state.strictErrors=this.strictErrors;state.tokensLength=this.tokensLength;return state;}}var _isDigit=function isDigit(code){return code>=48&&code<=57;};const forbiddenNumericSeparatorSiblings={decBinOct:new Set([46,66,69,79,95,98,101,111]),hex:new Set([46,88,95,120])};const isAllowedNumericSeparatorSibling={bin:ch=>ch===48||ch===49,oct:ch=>ch>=48&&ch<=55,dec:ch=>ch>=48&&ch<=57,hex:ch=>ch>=48&&ch<=57||ch>=65&&ch<=70||ch>=97&&ch<=102};function readStringContents(type,input,pos,lineStart,curLine,errors){const initialPos=pos;const initialLineStart=lineStart;const initialCurLine=curLine;let out="";let firstInvalidLoc=null;let chunkStart=pos;const{length}=input;for(;;){if(pos>=length){errors.unterminated(initialPos,initialLineStart,initialCurLine);out+=input.slice(chunkStart,pos);break;}const ch=input.charCodeAt(pos);if(isStringEnd(type,ch,input,pos)){out+=input.slice(chunkStart,pos);break;}if(ch===92){out+=input.slice(chunkStart,pos);const res=readEscapedChar(input,pos,lineStart,curLine,type==="template",errors);if(res.ch===null&&!firstInvalidLoc){firstInvalidLoc={pos,lineStart,curLine};}else{out+=res.ch;}({pos,lineStart,curLine}=res);chunkStart=pos;}else if(ch===8232||ch===8233){++pos;++curLine;lineStart=pos;}else if(ch===10||ch===13){if(type==="template"){out+=input.slice(chunkStart,pos)+"\n";++pos;if(ch===13&&input.charCodeAt(pos)===10){++pos;}++curLine;chunkStart=lineStart=pos;}else{errors.unterminated(initialPos,initialLineStart,initialCurLine);}}else{++pos;}}return{pos,str:out,firstInvalidLoc,lineStart,curLine,containsInvalid:!!firstInvalidLoc};}function isStringEnd(type,ch,input,pos){if(type==="template"){return ch===96||ch===36&&input.charCodeAt(pos+1)===123;}return ch===(type==="double"?34:39);}function readEscapedChar(input,pos,lineStart,curLine,inTemplate,errors){const throwOnInvalid=!inTemplate;pos++;const res=ch=>({pos,ch,lineStart,curLine});const ch=input.charCodeAt(pos++);switch(ch){case 110:return res("\n");case 114:return res("\r");case 120:{let code;({code,pos}=readHexChar(input,pos,lineStart,curLine,2,false,throwOnInvalid,errors));return res(code===null?null:String.fromCharCode(code));}case 117:{let code;({code,pos}=readCodePoint(input,pos,lineStart,curLine,throwOnInvalid,errors));return res(code===null?null:String.fromCodePoint(code));}case 116:return res("\t");case 98:return res("\b");case 118:return res("\u000b");case 102:return res("\f");case 13:if(input.charCodeAt(pos)===10){++pos;}case 10:lineStart=pos;++curLine;case 8232:case 8233:return res("");case 56:case 57:if(inTemplate){return res(null);}else{errors.strictNumericEscape(pos-1,lineStart,curLine);}default:if(ch>=48&&ch<=55){const startPos=pos-1;const match=input.slice(startPos,pos+2).match(/^[0-7]+/);let octalStr=match[0];let octal=parseInt(octalStr,8);if(octal>255){octalStr=octalStr.slice(0,-1);octal=parseInt(octalStr,8);}pos+=octalStr.length-1;const next=input.charCodeAt(pos);if(octalStr!=="0"||next===56||next===57){if(inTemplate){return res(null);}else{errors.strictNumericEscape(startPos,lineStart,curLine);}}return res(String.fromCharCode(octal));}return res(String.fromCharCode(ch));}}function readHexChar(input,pos,lineStart,curLine,len,forceLen,throwOnInvalid,errors){const initialPos=pos;let n;({n,pos}=readInt(input,pos,lineStart,curLine,16,len,forceLen,false,errors,!throwOnInvalid));if(n===null){if(throwOnInvalid){errors.invalidEscapeSequence(initialPos,lineStart,curLine);}else{pos=initialPos-1;}}return{code:n,pos};}function readInt(input,pos,lineStart,curLine,radix,len,forceLen,allowNumSeparator,errors,bailOnError){const start=pos;const forbiddenSiblings=radix===16?forbiddenNumericSeparatorSiblings.hex:forbiddenNumericSeparatorSiblings.decBinOct;const isAllowedSibling=radix===16?isAllowedNumericSeparatorSibling.hex:radix===10?isAllowedNumericSeparatorSibling.dec:radix===8?isAllowedNumericSeparatorSibling.oct:isAllowedNumericSeparatorSibling.bin;let invalid=false;let total=0;for(let i=0,e=len==null?Infinity:len;i<e;++i){const code=input.charCodeAt(pos);let val;if(code===95&&allowNumSeparator!=="bail"){const prev=input.charCodeAt(pos-1);const next=input.charCodeAt(pos+1);if(!allowNumSeparator){if(bailOnError)return{n:null,pos};errors.numericSeparatorInEscapeSequence(pos,lineStart,curLine);}else if(Number.isNaN(next)||!isAllowedSibling(next)||forbiddenSiblings.has(prev)||forbiddenSiblings.has(next)){if(bailOnError)return{n:null,pos};errors.unexpectedNumericSeparator(pos,lineStart,curLine);}++pos;continue;}if(code>=97){val=code-97+10;}else if(code>=65){val=code-65+10;}else if(_isDigit(code)){val=code-48;}else{val=Infinity;}if(val>=radix){if(val<=9&&bailOnError){return{n:null,pos};}else if(val<=9&&errors.invalidDigit(pos,lineStart,curLine,radix)){val=0;}else if(forceLen){val=0;invalid=true;}else{break;}}++pos;total=total*radix+val;}if(pos===start||len!=null&&pos-start!==len||invalid){return{n:null,pos};}return{n:total,pos};}function readCodePoint(input,pos,lineStart,curLine,throwOnInvalid,errors){const ch=input.charCodeAt(pos);let code;if(ch===123){++pos;({code,pos}=readHexChar(input,pos,lineStart,curLine,input.indexOf("}",pos)-pos,true,throwOnInvalid,errors));++pos;if(code!==null&&code>0x10ffff){if(throwOnInvalid){errors.invalidCodePoint(pos,lineStart,curLine);}else{return{code:null,pos};}}}else{({code,pos}=readHexChar(input,pos,lineStart,curLine,4,false,throwOnInvalid,errors));}return{code,pos};}function buildPosition(pos,lineStart,curLine){return new Position(curLine,pos-lineStart,pos);}const VALID_REGEX_FLAGS=new Set([103,109,115,105,121,117,100,118]);class Token{constructor(state){this.type=state.type;this.value=state.value;this.start=state.start;this.end=state.end;this.loc=new SourceLocation(state.startLoc,state.endLoc);}}class Tokenizer extends CommentsParser{constructor(options,input){super();this.isLookahead=void 0;this.tokens=[];this.errorHandlers_readInt={invalidDigit:(pos,lineStart,curLine,radix)=>{if(!this.options.errorRecovery)return false;this.raise(Errors.InvalidDigit,buildPosition(pos,lineStart,curLine),{radix});return true;},numericSeparatorInEscapeSequence:this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),unexpectedNumericSeparator:this.errorBuilder(Errors.UnexpectedNumericSeparator)};this.errorHandlers_readCodePoint=Object.assign({},this.errorHandlers_readInt,{invalidEscapeSequence:this.errorBuilder(Errors.InvalidEscapeSequence),invalidCodePoint:this.errorBuilder(Errors.InvalidCodePoint)});this.errorHandlers_readStringContents_string=Object.assign({},this.errorHandlers_readCodePoint,{strictNumericEscape:(pos,lineStart,curLine)=>{this.recordStrictModeErrors(Errors.StrictNumericEscape,buildPosition(pos,lineStart,curLine));},unterminated:(pos,lineStart,curLine)=>{throw this.raise(Errors.UnterminatedString,buildPosition(pos-1,lineStart,curLine));}});this.errorHandlers_readStringContents_template=Object.assign({},this.errorHandlers_readCodePoint,{strictNumericEscape:this.errorBuilder(Errors.StrictNumericEscape),unterminated:(pos,lineStart,curLine)=>{throw this.raise(Errors.UnterminatedTemplate,buildPosition(pos,lineStart,curLine));}});this.state=new State();this.state.init(options);this.input=input;this.length=input.length;this.comments=[];this.isLookahead=false;}pushToken(token){this.tokens.length=this.state.tokensLength;this.tokens.push(token);++this.state.tokensLength;}next(){this.checkKeywordEscapes();if(this.options.tokens){this.pushToken(new Token(this.state));}this.state.lastTokEndLoc=this.state.endLoc;this.state.lastTokStartLoc=this.state.startLoc;this.nextToken();}eat(type){if(this.match(type)){this.next();return true;}else{return false;}}match(type){return this.state.type===type;}createLookaheadState(state){return{pos:state.pos,value:null,type:state.type,start:state.start,end:state.end,context:[this.curContext()],inType:state.inType,startLoc:state.startLoc,lastTokEndLoc:state.lastTokEndLoc,curLine:state.curLine,lineStart:state.lineStart,curPosition:state.curPosition};}lookahead(){const old=this.state;this.state=this.createLookaheadState(old);this.isLookahead=true;this.nextToken();this.isLookahead=false;const curr=this.state;this.state=old;return curr;}nextTokenStart(){return this.nextTokenStartSince(this.state.pos);}nextTokenStartSince(pos){skipWhiteSpace.lastIndex=pos;return skipWhiteSpace.test(this.input)?skipWhiteSpace.lastIndex:pos;}lookaheadCharCode(){return this.input.charCodeAt(this.nextTokenStart());}nextTokenInLineStart(){return this.nextTokenInLineStartSince(this.state.pos);}nextTokenInLineStartSince(pos){skipWhiteSpaceInLine.lastIndex=pos;return skipWhiteSpaceInLine.test(this.input)?skipWhiteSpaceInLine.lastIndex:pos;}lookaheadInLineCharCode(){return this.input.charCodeAt(this.nextTokenInLineStart());}codePointAtPos(pos){let cp=this.input.charCodeAt(pos);if((cp&0xfc00)===0xd800&&++pos<this.input.length){const trail=this.input.charCodeAt(pos);if((trail&0xfc00)===0xdc00){cp=0x10000+((cp&0x3ff)<<10)+(trail&0x3ff);}}return cp;}setStrict(strict){this.state.strict=strict;if(strict){this.state.strictErrors.forEach(_ref81=>{let[toParseError,at]=_ref81;return this.raise(toParseError,at);});this.state.strictErrors.clear();}}curContext(){return this.state.context[this.state.context.length-1];}nextToken(){this.skipSpace();this.state.start=this.state.pos;if(!this.isLookahead)this.state.startLoc=this.state.curPosition();if(this.state.pos>=this.length){this.finishToken(139);return;}this.getTokenFromCode(this.codePointAtPos(this.state.pos));}skipBlockComment(commentEnd){let startLoc;if(!this.isLookahead)startLoc=this.state.curPosition();const start=this.state.pos;const end=this.input.indexOf(commentEnd,start+2);if(end===-1){throw this.raise(Errors.UnterminatedComment,this.state.curPosition());}this.state.pos=end+commentEnd.length;lineBreakG.lastIndex=start+2;while(lineBreakG.test(this.input)&&lineBreakG.lastIndex<=end){++this.state.curLine;this.state.lineStart=lineBreakG.lastIndex;}if(this.isLookahead)return;const comment={type:"CommentBlock",value:this.input.slice(start+2,end),start,end:end+commentEnd.length,loc:new SourceLocation(startLoc,this.state.curPosition())};if(this.options.tokens)this.pushToken(comment);return comment;}skipLineComment(startSkip){const start=this.state.pos;let startLoc;if(!this.isLookahead)startLoc=this.state.curPosition();let ch=this.input.charCodeAt(this.state.pos+=startSkip);if(this.state.pos<this.length){while(!isNewLine(ch)&&++this.state.pos<this.length){ch=this.input.charCodeAt(this.state.pos);}}if(this.isLookahead)return;const end=this.state.pos;const value=this.input.slice(start+startSkip,end);const comment={type:"CommentLine",value,start,end,loc:new SourceLocation(startLoc,this.state.curPosition())};if(this.options.tokens)this.pushToken(comment);return comment;}skipSpace(){const spaceStart=this.state.pos;const comments=[];loop:while(this.state.pos<this.length){const ch=this.input.charCodeAt(this.state.pos);switch(ch){case 32:case 160:case 9:++this.state.pos;break;case 13:if(this.input.charCodeAt(this.state.pos+1)===10){++this.state.pos;}case 10:case 8232:case 8233:++this.state.pos;++this.state.curLine;this.state.lineStart=this.state.pos;break;case 47:switch(this.input.charCodeAt(this.state.pos+1)){case 42:{const comment=this.skipBlockComment("*/");if(comment!==undefined){this.addComment(comment);if(this.options.attachComment)comments.push(comment);}break;}case 47:{const comment=this.skipLineComment(2);if(comment!==undefined){this.addComment(comment);if(this.options.attachComment)comments.push(comment);}break;}default:break loop;}break;default:if(isWhitespace(ch)){++this.state.pos;}else if(ch===45&&!this.inModule&&this.options.annexB){const pos=this.state.pos;if(this.input.charCodeAt(pos+1)===45&&this.input.charCodeAt(pos+2)===62&&(spaceStart===0||this.state.lineStart>spaceStart)){const comment=this.skipLineComment(3);if(comment!==undefined){this.addComment(comment);if(this.options.attachComment)comments.push(comment);}}else{break loop;}}else if(ch===60&&!this.inModule&&this.options.annexB){const pos=this.state.pos;if(this.input.charCodeAt(pos+1)===33&&this.input.charCodeAt(pos+2)===45&&this.input.charCodeAt(pos+3)===45){const comment=this.skipLineComment(4);if(comment!==undefined){this.addComment(comment);if(this.options.attachComment)comments.push(comment);}}else{break loop;}}else{break loop;}}}if(comments.length>0){const end=this.state.pos;const commentWhitespace={start:spaceStart,end,comments,leadingNode:null,trailingNode:null,containingNode:null};this.state.commentStack.push(commentWhitespace);}}finishToken(type,val){this.state.end=this.state.pos;this.state.endLoc=this.state.curPosition();const prevType=this.state.type;this.state.type=type;this.state.value=val;if(!this.isLookahead){this.updateContext(prevType);}}replaceToken(type){this.state.type=type;this.updateContext();}readToken_numberSign(){if(this.state.pos===0&&this.readToken_interpreter()){return;}const nextPos=this.state.pos+1;const next=this.codePointAtPos(nextPos);if(next>=48&&next<=57){throw this.raise(Errors.UnexpectedDigitAfterHash,this.state.curPosition());}if(next===123||next===91&&this.hasPlugin("recordAndTuple")){this.expectPlugin("recordAndTuple");if(this.getPluginOption("recordAndTuple","syntaxType")==="bar"){throw this.raise(next===123?Errors.RecordExpressionHashIncorrectStartSyntaxType:Errors.TupleExpressionHashIncorrectStartSyntaxType,this.state.curPosition());}this.state.pos+=2;if(next===123){this.finishToken(7);}else{this.finishToken(1);}}else if(isIdentifierStart(next)){++this.state.pos;this.finishToken(138,this.readWord1(next));}else if(next===92){++this.state.pos;this.finishToken(138,this.readWord1());}else{this.finishOp(27,1);}}readToken_dot(){const next=this.input.charCodeAt(this.state.pos+1);if(next>=48&&next<=57){this.readNumber(true);return;}if(next===46&&this.input.charCodeAt(this.state.pos+2)===46){this.state.pos+=3;this.finishToken(21);}else{++this.state.pos;this.finishToken(16);}}readToken_slash(){const next=this.input.charCodeAt(this.state.pos+1);if(next===61){this.finishOp(31,2);}else{this.finishOp(56,1);}}readToken_interpreter(){if(this.state.pos!==0||this.length<2)return false;let ch=this.input.charCodeAt(this.state.pos+1);if(ch!==33)return false;const start=this.state.pos;this.state.pos+=1;while(!isNewLine(ch)&&++this.state.pos<this.length){ch=this.input.charCodeAt(this.state.pos);}const value=this.input.slice(start+2,this.state.pos);this.finishToken(28,value);return true;}readToken_mult_modulo(code){let type=code===42?55:54;let width=1;let next=this.input.charCodeAt(this.state.pos+1);if(code===42&&next===42){width++;next=this.input.charCodeAt(this.state.pos+2);type=57;}if(next===61&&!this.state.inType){width++;type=code===37?33:30;}this.finishOp(type,width);}readToken_pipe_amp(code){const next=this.input.charCodeAt(this.state.pos+1);if(next===code){if(this.input.charCodeAt(this.state.pos+2)===61){this.finishOp(30,3);}else{this.finishOp(code===124?41:42,2);}return;}if(code===124){if(next===62){this.finishOp(39,2);return;}if(this.hasPlugin("recordAndTuple")&&next===125){if(this.getPluginOption("recordAndTuple","syntaxType")!=="bar"){throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType,this.state.curPosition());}this.state.pos+=2;this.finishToken(9);return;}if(this.hasPlugin("recordAndTuple")&&next===93){if(this.getPluginOption("recordAndTuple","syntaxType")!=="bar"){throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType,this.state.curPosition());}this.state.pos+=2;this.finishToken(4);return;}}if(next===61){this.finishOp(30,2);return;}this.finishOp(code===124?43:45,1);}readToken_caret(){const next=this.input.charCodeAt(this.state.pos+1);if(next===61&&!this.state.inType){this.finishOp(32,2);}else if(next===94&&this.hasPlugin(["pipelineOperator",{proposal:"hack",topicToken:"^^"}])){this.finishOp(37,2);const lookaheadCh=this.input.codePointAt(this.state.pos);if(lookaheadCh===94){this.unexpected();}}else{this.finishOp(44,1);}}readToken_atSign(){const next=this.input.charCodeAt(this.state.pos+1);if(next===64&&this.hasPlugin(["pipelineOperator",{proposal:"hack",topicToken:"@@"}])){this.finishOp(38,2);}else{this.finishOp(26,1);}}readToken_plus_min(code){const next=this.input.charCodeAt(this.state.pos+1);if(next===code){this.finishOp(34,2);return;}if(next===61){this.finishOp(30,2);}else{this.finishOp(53,1);}}readToken_lt(){const{pos}=this.state;const next=this.input.charCodeAt(pos+1);if(next===60){if(this.input.charCodeAt(pos+2)===61){this.finishOp(30,3);return;}this.finishOp(51,2);return;}if(next===61){this.finishOp(49,2);return;}this.finishOp(47,1);}readToken_gt(){const{pos}=this.state;const next=this.input.charCodeAt(pos+1);if(next===62){const size=this.input.charCodeAt(pos+2)===62?3:2;if(this.input.charCodeAt(pos+size)===61){this.finishOp(30,size+1);return;}this.finishOp(52,size);return;}if(next===61){this.finishOp(49,2);return;}this.finishOp(48,1);}readToken_eq_excl(code){const next=this.input.charCodeAt(this.state.pos+1);if(next===61){this.finishOp(46,this.input.charCodeAt(this.state.pos+2)===61?3:2);return;}if(code===61&&next===62){this.state.pos+=2;this.finishToken(19);return;}this.finishOp(code===61?29:35,1);}readToken_question(){const next=this.input.charCodeAt(this.state.pos+1);const next2=this.input.charCodeAt(this.state.pos+2);if(next===63){if(next2===61){this.finishOp(30,3);}else{this.finishOp(40,2);}}else if(next===46&&!(next2>=48&&next2<=57)){this.state.pos+=2;this.finishToken(18);}else{++this.state.pos;this.finishToken(17);}}getTokenFromCode(code){switch(code){case 46:this.readToken_dot();return;case 40:++this.state.pos;this.finishToken(10);return;case 41:++this.state.pos;this.finishToken(11);return;case 59:++this.state.pos;this.finishToken(13);return;case 44:++this.state.pos;this.finishToken(12);return;case 91:if(this.hasPlugin("recordAndTuple")&&this.input.charCodeAt(this.state.pos+1)===124){if(this.getPluginOption("recordAndTuple","syntaxType")!=="bar"){throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType,this.state.curPosition());}this.state.pos+=2;this.finishToken(2);}else{++this.state.pos;this.finishToken(0);}return;case 93:++this.state.pos;this.finishToken(3);return;case 123:if(this.hasPlugin("recordAndTuple")&&this.input.charCodeAt(this.state.pos+1)===124){if(this.getPluginOption("recordAndTuple","syntaxType")!=="bar"){throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType,this.state.curPosition());}this.state.pos+=2;this.finishToken(6);}else{++this.state.pos;this.finishToken(5);}return;case 125:++this.state.pos;this.finishToken(8);return;case 58:if(this.hasPlugin("functionBind")&&this.input.charCodeAt(this.state.pos+1)===58){this.finishOp(15,2);}else{++this.state.pos;this.finishToken(14);}return;case 63:this.readToken_question();return;case 96:this.readTemplateToken();return;case 48:{const next=this.input.charCodeAt(this.state.pos+1);if(next===120||next===88){this.readRadixNumber(16);return;}if(next===111||next===79){this.readRadixNumber(8);return;}if(next===98||next===66){this.readRadixNumber(2);return;}}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:this.readNumber(false);return;case 34:case 39:this.readString(code);return;case 47:this.readToken_slash();return;case 37:case 42:this.readToken_mult_modulo(code);return;case 124:case 38:this.readToken_pipe_amp(code);return;case 94:this.readToken_caret();return;case 43:case 45:this.readToken_plus_min(code);return;case 60:this.readToken_lt();return;case 62:this.readToken_gt();return;case 61:case 33:this.readToken_eq_excl(code);return;case 126:this.finishOp(36,1);return;case 64:this.readToken_atSign();return;case 35:this.readToken_numberSign();return;case 92:this.readWord();return;default:if(isIdentifierStart(code)){this.readWord(code);return;}}throw this.raise(Errors.InvalidOrUnexpectedToken,this.state.curPosition(),{unexpected:String.fromCodePoint(code)});}finishOp(type,size){const str=this.input.slice(this.state.pos,this.state.pos+size);this.state.pos+=size;this.finishToken(type,str);}readRegexp(){const startLoc=this.state.startLoc;const start=this.state.start+1;let escaped,inClass;let{pos}=this.state;for(;;++pos){if(pos>=this.length){throw this.raise(Errors.UnterminatedRegExp,createPositionWithColumnOffset(startLoc,1));}const ch=this.input.charCodeAt(pos);if(isNewLine(ch)){throw this.raise(Errors.UnterminatedRegExp,createPositionWithColumnOffset(startLoc,1));}if(escaped){escaped=false;}else{if(ch===91){inClass=true;}else if(ch===93&&inClass){inClass=false;}else if(ch===47&&!inClass){break;}escaped=ch===92;}}const content=this.input.slice(start,pos);++pos;let mods="";const nextPos=()=>createPositionWithColumnOffset(startLoc,pos+2-start);while(pos<this.length){const cp=this.codePointAtPos(pos);const char=String.fromCharCode(cp);if(VALID_REGEX_FLAGS.has(cp)){if(cp===118){if(mods.includes("u")){this.raise(Errors.IncompatibleRegExpUVFlags,nextPos());}}else if(cp===117){if(mods.includes("v")){this.raise(Errors.IncompatibleRegExpUVFlags,nextPos());}}if(mods.includes(char)){this.raise(Errors.DuplicateRegExpFlags,nextPos());}}else if(isIdentifierChar(cp)||cp===92){this.raise(Errors.MalformedRegExpFlags,nextPos());}else{break;}++pos;mods+=char;}this.state.pos=pos;this.finishToken(137,{pattern:content,flags:mods});}readInt(radix,len){let forceLen=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let allowNumSeparator=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;const{n,pos}=readInt(this.input,this.state.pos,this.state.lineStart,this.state.curLine,radix,len,forceLen,allowNumSeparator,this.errorHandlers_readInt,false);this.state.pos=pos;return n;}readRadixNumber(radix){const startLoc=this.state.curPosition();let isBigInt=false;this.state.pos+=2;const val=this.readInt(radix);if(val==null){this.raise(Errors.InvalidDigit,createPositionWithColumnOffset(startLoc,2),{radix});}const next=this.input.charCodeAt(this.state.pos);if(next===110){++this.state.pos;isBigInt=true;}else if(next===109){throw this.raise(Errors.InvalidDecimal,startLoc);}if(isIdentifierStart(this.codePointAtPos(this.state.pos))){throw this.raise(Errors.NumberIdentifier,this.state.curPosition());}if(isBigInt){const str=this.input.slice(startLoc.index,this.state.pos).replace(/[_n]/g,"");this.finishToken(135,str);return;}this.finishToken(134,val);}readNumber(startsWithDot){const start=this.state.pos;const startLoc=this.state.curPosition();let isFloat=false;let isBigInt=false;let isDecimal=false;let hasExponent=false;let isOctal=false;if(!startsWithDot&&this.readInt(10)===null){this.raise(Errors.InvalidNumber,this.state.curPosition());}const hasLeadingZero=this.state.pos-start>=2&&this.input.charCodeAt(start)===48;if(hasLeadingZero){const integer=this.input.slice(start,this.state.pos);this.recordStrictModeErrors(Errors.StrictOctalLiteral,startLoc);if(!this.state.strict){const underscorePos=integer.indexOf("_");if(underscorePos>0){this.raise(Errors.ZeroDigitNumericSeparator,createPositionWithColumnOffset(startLoc,underscorePos));}}isOctal=hasLeadingZero&&!/[89]/.test(integer);}let next=this.input.charCodeAt(this.state.pos);if(next===46&&!isOctal){++this.state.pos;this.readInt(10);isFloat=true;next=this.input.charCodeAt(this.state.pos);}if((next===69||next===101)&&!isOctal){next=this.input.charCodeAt(++this.state.pos);if(next===43||next===45){++this.state.pos;}if(this.readInt(10)===null){this.raise(Errors.InvalidOrMissingExponent,startLoc);}isFloat=true;hasExponent=true;next=this.input.charCodeAt(this.state.pos);}if(next===110){if(isFloat||hasLeadingZero){this.raise(Errors.InvalidBigIntLiteral,startLoc);}++this.state.pos;isBigInt=true;}if(next===109){this.expectPlugin("decimal",this.state.curPosition());if(hasExponent||hasLeadingZero){this.raise(Errors.InvalidDecimal,startLoc);}++this.state.pos;isDecimal=true;}if(isIdentifierStart(this.codePointAtPos(this.state.pos))){throw this.raise(Errors.NumberIdentifier,this.state.curPosition());}const str=this.input.slice(start,this.state.pos).replace(/[_mn]/g,"");if(isBigInt){this.finishToken(135,str);return;}if(isDecimal){this.finishToken(136,str);return;}const val=isOctal?parseInt(str,8):parseFloat(str);this.finishToken(134,val);}readCodePoint(throwOnInvalid){const{code,pos}=readCodePoint(this.input,this.state.pos,this.state.lineStart,this.state.curLine,throwOnInvalid,this.errorHandlers_readCodePoint);this.state.pos=pos;return code;}readString(quote){const{str,pos,curLine,lineStart}=readStringContents(quote===34?"double":"single",this.input,this.state.pos+1,this.state.lineStart,this.state.curLine,this.errorHandlers_readStringContents_string);this.state.pos=pos+1;this.state.lineStart=lineStart;this.state.curLine=curLine;this.finishToken(133,str);}readTemplateContinuation(){if(!this.match(8)){this.unexpected(null,8);}this.state.pos--;this.readTemplateToken();}readTemplateToken(){const opening=this.input[this.state.pos];const{str,firstInvalidLoc,pos,curLine,lineStart}=readStringContents("template",this.input,this.state.pos+1,this.state.lineStart,this.state.curLine,this.errorHandlers_readStringContents_template);this.state.pos=pos+1;this.state.lineStart=lineStart;this.state.curLine=curLine;if(firstInvalidLoc){this.state.firstInvalidTemplateEscapePos=new Position(firstInvalidLoc.curLine,firstInvalidLoc.pos-firstInvalidLoc.lineStart,firstInvalidLoc.pos);}if(this.input.codePointAt(pos)===96){this.finishToken(24,firstInvalidLoc?null:opening+str+"`");}else{this.state.pos++;this.finishToken(25,firstInvalidLoc?null:opening+str+"${");}}recordStrictModeErrors(toParseError,at){const index=at.index;if(this.state.strict&&!this.state.strictErrors.has(index)){this.raise(toParseError,at);}else{this.state.strictErrors.set(index,[toParseError,at]);}}readWord1(firstCode){this.state.containsEsc=false;let word="";const start=this.state.pos;let chunkStart=this.state.pos;if(firstCode!==undefined){this.state.pos+=firstCode<=0xffff?1:2;}while(this.state.pos<this.length){const ch=this.codePointAtPos(this.state.pos);if(isIdentifierChar(ch)){this.state.pos+=ch<=0xffff?1:2;}else if(ch===92){this.state.containsEsc=true;word+=this.input.slice(chunkStart,this.state.pos);const escStart=this.state.curPosition();const identifierCheck=this.state.pos===start?isIdentifierStart:isIdentifierChar;if(this.input.charCodeAt(++this.state.pos)!==117){this.raise(Errors.MissingUnicodeEscape,this.state.curPosition());chunkStart=this.state.pos-1;continue;}++this.state.pos;const esc=this.readCodePoint(true);if(esc!==null){if(!identifierCheck(esc)){this.raise(Errors.EscapedCharNotAnIdentifier,escStart);}word+=String.fromCodePoint(esc);}chunkStart=this.state.pos;}else{break;}}return word+this.input.slice(chunkStart,this.state.pos);}readWord(firstCode){const word=this.readWord1(firstCode);const type=keywords$1.get(word);if(type!==undefined){this.finishToken(type,tokenLabelName(type));}else{this.finishToken(132,word);}}checkKeywordEscapes(){const{type}=this.state;if(tokenIsKeyword(type)&&this.state.containsEsc){this.raise(Errors.InvalidEscapedReservedWord,this.state.startLoc,{reservedWord:tokenLabelName(type)});}}raise(toParseError,at){let details=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const loc=at instanceof Position?at:at.loc.start;const error=toParseError(loc,details);if(!this.options.errorRecovery)throw error;if(!this.isLookahead)this.state.errors.push(error);return error;}raiseOverwrite(toParseError,at){let details=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const loc=at instanceof Position?at:at.loc.start;const pos=loc.index;const errors=this.state.errors;for(let i=errors.length-1;i>=0;i--){const error=errors[i];if(error.loc.index===pos){return errors[i]=toParseError(loc,details);}if(error.loc.index<pos)break;}return this.raise(toParseError,at,details);}updateContext(prevType){}unexpected(loc,type){throw this.raise(Errors.UnexpectedToken,loc!=null?loc:this.state.startLoc,{expected:type?tokenLabelName(type):null});}expectPlugin(pluginName,loc){if(this.hasPlugin(pluginName)){return true;}throw this.raise(Errors.MissingPlugin,loc!=null?loc:this.state.startLoc,{missingPlugin:[pluginName]});}expectOnePlugin(pluginNames){if(!pluginNames.some(name=>this.hasPlugin(name))){throw this.raise(Errors.MissingOneOfPlugins,this.state.startLoc,{missingPlugin:pluginNames});}}errorBuilder(error){return(pos,lineStart,curLine)=>{this.raise(error,buildPosition(pos,lineStart,curLine));};}}class ClassScope{constructor(){this.privateNames=new Set();this.loneAccessors=new Map();this.undefinedPrivateNames=new Map();}}class ClassScopeHandler{constructor(parser){this.parser=void 0;this.stack=[];this.undefinedPrivateNames=new Map();this.parser=parser;}current(){return this.stack[this.stack.length-1];}enter(){this.stack.push(new ClassScope());}exit(){const oldClassScope=this.stack.pop();const current=this.current();for(const[name,loc]of Array.from(oldClassScope.undefinedPrivateNames)){if(current){if(!current.undefinedPrivateNames.has(name)){current.undefinedPrivateNames.set(name,loc);}}else{this.parser.raise(Errors.InvalidPrivateFieldResolution,loc,{identifierName:name});}}}declarePrivateName(name,elementType,loc){const{privateNames,loneAccessors,undefinedPrivateNames}=this.current();let redefined=privateNames.has(name);if(elementType&3){const accessor=redefined&&loneAccessors.get(name);if(accessor){const oldStatic=accessor&4;const newStatic=elementType&4;const oldKind=accessor&3;const newKind=elementType&3;redefined=oldKind===newKind||oldStatic!==newStatic;if(!redefined)loneAccessors.delete(name);}else if(!redefined){loneAccessors.set(name,elementType);}}if(redefined){this.parser.raise(Errors.PrivateNameRedeclaration,loc,{identifierName:name});}privateNames.add(name);undefinedPrivateNames.delete(name);}usePrivateName(name,loc){let classScope;for(classScope of this.stack){if(classScope.privateNames.has(name))return;}if(classScope){classScope.undefinedPrivateNames.set(name,loc);}else{this.parser.raise(Errors.InvalidPrivateFieldResolution,loc,{identifierName:name});}}}class ExpressionScope{constructor(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;this.type=type;}canBeArrowParameterDeclaration(){return this.type===2||this.type===1;}isCertainlyParameterDeclaration(){return this.type===3;}}class ArrowHeadParsingScope extends ExpressionScope{constructor(type){super(type);this.declarationErrors=new Map();}recordDeclarationError(ParsingErrorClass,at){const index=at.index;this.declarationErrors.set(index,[ParsingErrorClass,at]);}clearDeclarationError(index){this.declarationErrors.delete(index);}iterateErrors(iterator){this.declarationErrors.forEach(iterator);}}class ExpressionScopeHandler{constructor(parser){this.parser=void 0;this.stack=[new ExpressionScope()];this.parser=parser;}enter(scope){this.stack.push(scope);}exit(){this.stack.pop();}recordParameterInitializerError(toParseError,node){const origin=node.loc.start;const{stack}=this;let i=stack.length-1;let scope=stack[i];while(!scope.isCertainlyParameterDeclaration()){if(scope.canBeArrowParameterDeclaration()){scope.recordDeclarationError(toParseError,origin);}else{return;}scope=stack[--i];}this.parser.raise(toParseError,origin);}recordArrowParameterBindingError(error,node){const{stack}=this;const scope=stack[stack.length-1];const origin=node.loc.start;if(scope.isCertainlyParameterDeclaration()){this.parser.raise(error,origin);}else if(scope.canBeArrowParameterDeclaration()){scope.recordDeclarationError(error,origin);}else{return;}}recordAsyncArrowParametersError(at){const{stack}=this;let i=stack.length-1;let scope=stack[i];while(scope.canBeArrowParameterDeclaration()){if(scope.type===2){scope.recordDeclarationError(Errors.AwaitBindingIdentifier,at);}scope=stack[--i];}}validateAsPattern(){const{stack}=this;const currentScope=stack[stack.length-1];if(!currentScope.canBeArrowParameterDeclaration())return;currentScope.iterateErrors(_ref82=>{let[toParseError,loc]=_ref82;this.parser.raise(toParseError,loc);let i=stack.length-2;let scope=stack[i];while(scope.canBeArrowParameterDeclaration()){scope.clearDeclarationError(loc.index);scope=stack[--i];}});}}function newParameterDeclarationScope(){return new ExpressionScope(3);}function newArrowHeadScope(){return new ArrowHeadParsingScope(1);}function newAsyncArrowScope(){return new ArrowHeadParsingScope(2);}function newExpressionScope(){return new ExpressionScope();}class ProductionParameterHandler{constructor(){this.stacks=[];}enter(flags){this.stacks.push(flags);}exit(){this.stacks.pop();}currentFlags(){return this.stacks[this.stacks.length-1];}get hasAwait(){return(this.currentFlags()&2)>0;}get hasYield(){return(this.currentFlags()&1)>0;}get hasReturn(){return(this.currentFlags()&4)>0;}get hasIn(){return(this.currentFlags()&8)>0;}}function functionFlags(isAsync,isGenerator){return(isAsync?2:0)|(isGenerator?1:0);}class UtilParser extends Tokenizer{addExtra(node,key,value){let enumerable=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;if(!node)return;const extra=node.extra=node.extra||{};if(enumerable){extra[key]=value;}else{Object.defineProperty(extra,key,{enumerable,value});}}isContextual(token){return this.state.type===token&&!this.state.containsEsc;}isUnparsedContextual(nameStart,name){const nameEnd=nameStart+name.length;if(this.input.slice(nameStart,nameEnd)===name){const nextCh=this.input.charCodeAt(nameEnd);return!(isIdentifierChar(nextCh)||(nextCh&0xfc00)===0xd800);}return false;}isLookaheadContextual(name){const next=this.nextTokenStart();return this.isUnparsedContextual(next,name);}eatContextual(token){if(this.isContextual(token)){this.next();return true;}return false;}expectContextual(token,toParseError){if(!this.eatContextual(token)){if(toParseError!=null){throw this.raise(toParseError,this.state.startLoc);}this.unexpected(null,token);}}canInsertSemicolon(){return this.match(139)||this.match(8)||this.hasPrecedingLineBreak();}hasPrecedingLineBreak(){return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index,this.state.start));}hasFollowingLineBreak(){skipWhiteSpaceToLineBreak.lastIndex=this.state.end;return skipWhiteSpaceToLineBreak.test(this.input);}isLineTerminator(){return this.eat(13)||this.canInsertSemicolon();}semicolon(){let allowAsi=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;if(allowAsi?this.isLineTerminator():this.eat(13))return;this.raise(Errors.MissingSemicolon,this.state.lastTokEndLoc);}expect(type,loc){this.eat(type)||this.unexpected(loc,type);}tryParse(fn){let oldState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.state.clone();const abortSignal={node:null};try{const node=fn(function(){let node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;abortSignal.node=node;throw abortSignal;});if(this.state.errors.length>oldState.errors.length){const failState=this.state;this.state=oldState;this.state.tokensLength=failState.tokensLength;return{node,error:failState.errors[oldState.errors.length],thrown:false,aborted:false,failState};}return{node,error:null,thrown:false,aborted:false,failState:null};}catch(error){const failState=this.state;this.state=oldState;if(error instanceof SyntaxError){return{node:null,error,thrown:true,aborted:false,failState};}if(error===abortSignal){return{node:abortSignal.node,error:null,thrown:false,aborted:true,failState};}throw error;}}checkExpressionErrors(refExpressionErrors,andThrow){if(!refExpressionErrors)return false;const{shorthandAssignLoc,doubleProtoLoc,privateKeyLoc,optionalParametersLoc}=refExpressionErrors;const hasErrors=!!shorthandAssignLoc||!!doubleProtoLoc||!!optionalParametersLoc||!!privateKeyLoc;if(!andThrow){return hasErrors;}if(shorthandAssignLoc!=null){this.raise(Errors.InvalidCoverInitializedName,shorthandAssignLoc);}if(doubleProtoLoc!=null){this.raise(Errors.DuplicateProto,doubleProtoLoc);}if(privateKeyLoc!=null){this.raise(Errors.UnexpectedPrivateField,privateKeyLoc);}if(optionalParametersLoc!=null){this.unexpected(optionalParametersLoc);}}isLiteralPropertyName(){return tokenIsLiteralPropertyName(this.state.type);}isPrivateName(node){return node.type==="PrivateName";}getPrivateNameSV(node){return node.id.name;}hasPropertyAsPrivateName(node){return(node.type==="MemberExpression"||node.type==="OptionalMemberExpression")&&this.isPrivateName(node.property);}isObjectProperty(node){return node.type==="ObjectProperty";}isObjectMethod(node){return node.type==="ObjectMethod";}initializeScopes(){let inModule=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.options.sourceType==="module";const oldLabels=this.state.labels;this.state.labels=[];const oldExportedIdentifiers=this.exportedIdentifiers;this.exportedIdentifiers=new Set();const oldInModule=this.inModule;this.inModule=inModule;const oldScope=this.scope;const ScopeHandler=this.getScopeHandler();this.scope=new ScopeHandler(this,inModule);const oldProdParam=this.prodParam;this.prodParam=new ProductionParameterHandler();const oldClassScope=this.classScope;this.classScope=new ClassScopeHandler(this);const oldExpressionScope=this.expressionScope;this.expressionScope=new ExpressionScopeHandler(this);return()=>{this.state.labels=oldLabels;this.exportedIdentifiers=oldExportedIdentifiers;this.inModule=oldInModule;this.scope=oldScope;this.prodParam=oldProdParam;this.classScope=oldClassScope;this.expressionScope=oldExpressionScope;};}enterInitialScopes(){let paramFlags=0;if(this.inModule){paramFlags|=2;}this.scope.enter(1);this.prodParam.enter(paramFlags);}checkDestructuringPrivate(refExpressionErrors){const{privateKeyLoc}=refExpressionErrors;if(privateKeyLoc!==null){this.expectPlugin("destructuringPrivate",privateKeyLoc);}}}class ExpressionErrors{constructor(){this.shorthandAssignLoc=null;this.doubleProtoLoc=null;this.privateKeyLoc=null;this.optionalParametersLoc=null;}}class Node{constructor(parser,pos,loc){this.type="";this.start=pos;this.end=0;this.loc=new SourceLocation(loc);if(parser!=null&&parser.options.ranges)this.range=[pos,0];if(parser!=null&&parser.filename)this.loc.filename=parser.filename;}}const NodePrototype=Node.prototype;{NodePrototype.__clone=function(){const newNode=new Node(undefined,this.start,this.loc.start);const keys=Object.keys(this);for(let i=0,length=keys.length;i<length;i++){const key=keys[i];if(key!=="leadingComments"&&key!=="trailingComments"&&key!=="innerComments"){newNode[key]=this[key];}}return newNode;};}function clonePlaceholder(node){return cloneIdentifier(node);}function cloneIdentifier(node){const{type,start,end,loc,range,extra,name}=node;const cloned=Object.create(NodePrototype);cloned.type=type;cloned.start=start;cloned.end=end;cloned.loc=loc;cloned.range=range;cloned.extra=extra;cloned.name=name;if(type==="Placeholder"){cloned.expectedNode=node.expectedNode;}return cloned;}function cloneStringLiteral(node){const{type,start,end,loc,range,extra}=node;if(type==="Placeholder"){return clonePlaceholder(node);}const cloned=Object.create(NodePrototype);cloned.type=type;cloned.start=start;cloned.end=end;cloned.loc=loc;cloned.range=range;if(node.raw!==undefined){cloned.raw=node.raw;}else{cloned.extra=extra;}cloned.value=node.value;return cloned;}class NodeUtils extends UtilParser{startNode(){const loc=this.state.startLoc;return new Node(this,loc.index,loc);}startNodeAt(loc){return new Node(this,loc.index,loc);}startNodeAtNode(type){return this.startNodeAt(type.loc.start);}finishNode(node,type){return this.finishNodeAt(node,type,this.state.lastTokEndLoc);}finishNodeAt(node,type,endLoc){node.type=type;node.end=endLoc.index;node.loc.end=endLoc;if(this.options.ranges)node.range[1]=endLoc.index;if(this.options.attachComment)this.processComment(node);return node;}resetStartLocation(node,startLoc){node.start=startLoc.index;node.loc.start=startLoc;if(this.options.ranges)node.range[0]=startLoc.index;}resetEndLocation(node){let endLoc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.state.lastTokEndLoc;node.end=endLoc.index;node.loc.end=endLoc;if(this.options.ranges)node.range[1]=endLoc.index;}resetStartLocationFromNode(node,locationNode){this.resetStartLocation(node,locationNode.loc.start);}}const reservedTypes=new Set(["_","any","bool","boolean","empty","extends","false","interface","mixed","null","number","static","string","true","typeof","void"]);const FlowErrors=ParseErrorEnum(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["flow"])))({AmbiguousConditionalArrow:"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",AmbiguousDeclareModuleKind:"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.",AssignReservedType:_ref83=>{let{reservedType}=_ref83;return"Cannot overwrite reserved type ".concat(reservedType,".");},DeclareClassElement:"The `declare` modifier can only appear on class fields.",DeclareClassFieldInitializer:"Initializers are not allowed in fields with the `declare` modifier.",DuplicateDeclareModuleExports:"Duplicate `declare module.exports` statement.",EnumBooleanMemberNotInitialized:_ref84=>{let{memberName,enumName}=_ref84;return"Boolean enum members need to be initialized. Use either `".concat(memberName," = true,` or `").concat(memberName," = false,` in enum `").concat(enumName,"`.");},EnumDuplicateMemberName:_ref85=>{let{memberName,enumName}=_ref85;return"Enum member names need to be unique, but the name `".concat(memberName,"` has already been used before in enum `").concat(enumName,"`.");},EnumInconsistentMemberValues:_ref86=>{let{enumName}=_ref86;return"Enum `".concat(enumName,"` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.");},EnumInvalidExplicitType:_ref87=>{let{invalidEnumType,enumName}=_ref87;return"Enum type `".concat(invalidEnumType,"` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `").concat(enumName,"`.");},EnumInvalidExplicitTypeUnknownSupplied:_ref88=>{let{enumName}=_ref88;return"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `".concat(enumName,"`.");},EnumInvalidMemberInitializerPrimaryType:_ref89=>{let{enumName,memberName,explicitType}=_ref89;return"Enum `".concat(enumName,"` has type `").concat(explicitType,"`, so the initializer of `").concat(memberName,"` needs to be a ").concat(explicitType," literal.");},EnumInvalidMemberInitializerSymbolType:_ref90=>{let{enumName,memberName}=_ref90;return"Symbol enum members cannot be initialized. Use `".concat(memberName,",` in enum `").concat(enumName,"`.");},EnumInvalidMemberInitializerUnknownType:_ref91=>{let{enumName,memberName}=_ref91;return"The enum member initializer for `".concat(memberName,"` needs to be a literal (either a boolean, number, or string) in enum `").concat(enumName,"`.");},EnumInvalidMemberName:_ref92=>{let{enumName,memberName,suggestion}=_ref92;return"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `".concat(memberName,"`, consider using `").concat(suggestion,"`, in enum `").concat(enumName,"`.");},EnumNumberMemberNotInitialized:_ref93=>{let{enumName,memberName}=_ref93;return"Number enum members need to be initialized, e.g. `".concat(memberName," = 1` in enum `").concat(enumName,"`.");},EnumStringMemberInconsistentlyInitialized:_ref94=>{let{enumName}=_ref94;return"String enum members need to consistently either all use initializers, or use no initializers, in enum `".concat(enumName,"`.");},GetterMayNotHaveThisParam:"A getter cannot have a `this` parameter.",ImportReflectionHasImportType:"An `import module` declaration can not use `type` or `typeof` keyword.",ImportTypeShorthandOnlyInPureImport:"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.",InexactInsideExact:"Explicit inexact syntax cannot appear inside an explicit exact object type.",InexactInsideNonObject:"Explicit inexact syntax cannot appear in class or interface definitions.",InexactVariance:"Explicit inexact syntax cannot have variance.",InvalidNonTypeImportInDeclareModule:"Imports within a `declare module` body must always be `import type` or `import typeof`.",MissingTypeParamDefault:"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",NestedDeclareModule:"`declare module` cannot be used inside another `declare module`.",NestedFlowComment:"Cannot have a flow comment inside another flow comment.",PatternIsOptional:Object.assign({message:"A binding pattern parameter cannot be optional in an implementation signature."},{reasonCode:"OptionalBindingPattern"}),SetterMayNotHaveThisParam:"A setter cannot have a `this` parameter.",SpreadVariance:"Spread properties cannot have variance.",ThisParamAnnotationRequired:"A type annotation is required for the `this` parameter.",ThisParamBannedInConstructor:"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.",ThisParamMayNotBeOptional:"The `this` parameter cannot be optional.",ThisParamMustBeFirst:"The `this` parameter must be the first function parameter.",ThisParamNoDefault:"The `this` parameter may not have a default value.",TypeBeforeInitializer:"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",TypeCastInPattern:"The type cast expression is expected to be wrapped with parenthesis.",UnexpectedExplicitInexactInObject:"Explicit inexact syntax must appear at the end of an inexact object.",UnexpectedReservedType:_ref95=>{let{reservedType}=_ref95;return"Unexpected reserved type ".concat(reservedType,".");},UnexpectedReservedUnderscore:"`_` is only allowed as a type argument to call or new.",UnexpectedSpaceBetweenModuloChecks:"Spaces between `%` and `checks` are not allowed here.",UnexpectedSpreadType:"Spread operator cannot appear in class or interface definitions.",UnexpectedSubtractionOperand:'Unexpected token, expected "number" or "bigint".',UnexpectedTokenAfterTypeParameter:"Expected an arrow function after this type parameter declaration.",UnexpectedTypeParameterBeforeAsyncArrowFunction:"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.",UnsupportedDeclareExportKind:_ref96=>{let{unsupportedExportKind,suggestion}=_ref96;return"`declare export ".concat(unsupportedExportKind,"` is not supported. Use `").concat(suggestion,"` instead.");},UnsupportedStatementInDeclareModule:"Only declares and type imports are allowed inside declare module.",UnterminatedFlowComment:"Unterminated flow-comment."});function isEsModuleType(bodyElement){return bodyElement.type==="DeclareExportAllDeclaration"||bodyElement.type==="DeclareExportDeclaration"&&(!bodyElement.declaration||bodyElement.declaration.type!=="TypeAlias"&&bodyElement.declaration.type!=="InterfaceDeclaration");}function hasTypeImportKind(node){return node.importKind==="type"||node.importKind==="typeof";}const exportSuggestions={const:"declare export var",let:"declare export var",type:"export type",interface:"export interface"};function partition(list,test){const list1=[];const list2=[];for(let i=0;i<list.length;i++){(test(list[i],i,list)?list1:list2).push(list[i]);}return[list1,list2];}const FLOW_PRAGMA_REGEX=/\*?\s*@((?:no)?flow)\b/;var flow=superClass=>class FlowParserMixin extends superClass{constructor(){super(...arguments);this.flowPragma=undefined;}getScopeHandler(){return FlowScopeHandler;}shouldParseTypes(){return this.getPluginOption("flow","all")||this.flowPragma==="flow";}shouldParseEnums(){return!!this.getPluginOption("flow","enums");}finishToken(type,val){if(type!==133&&type!==13&&type!==28){if(this.flowPragma===undefined){this.flowPragma=null;}}super.finishToken(type,val);}addComment(comment){if(this.flowPragma===undefined){const matches=FLOW_PRAGMA_REGEX.exec(comment.value);if(!matches);else if(matches[1]==="flow"){this.flowPragma="flow";}else if(matches[1]==="noflow"){this.flowPragma="noflow";}else{throw new Error("Unexpected flow pragma");}}super.addComment(comment);}flowParseTypeInitialiser(tok){const oldInType=this.state.inType;this.state.inType=true;this.expect(tok||14);const type=this.flowParseType();this.state.inType=oldInType;return type;}flowParsePredicate(){const node=this.startNode();const moduloLoc=this.state.startLoc;this.next();this.expectContextual(110);if(this.state.lastTokStartLoc.index>moduloLoc.index+1){this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks,moduloLoc);}if(this.eat(10)){node.value=super.parseExpression();this.expect(11);return this.finishNode(node,"DeclaredPredicate");}else{return this.finishNode(node,"InferredPredicate");}}flowParseTypeAndPredicateInitialiser(){const oldInType=this.state.inType;this.state.inType=true;this.expect(14);let type=null;let predicate=null;if(this.match(54)){this.state.inType=oldInType;predicate=this.flowParsePredicate();}else{type=this.flowParseType();this.state.inType=oldInType;if(this.match(54)){predicate=this.flowParsePredicate();}}return[type,predicate];}flowParseDeclareClass(node){this.next();this.flowParseInterfaceish(node,true);return this.finishNode(node,"DeclareClass");}flowParseDeclareFunction(node){this.next();const id=node.id=this.parseIdentifier();const typeNode=this.startNode();const typeContainer=this.startNode();if(this.match(47)){typeNode.typeParameters=this.flowParseTypeParameterDeclaration();}else{typeNode.typeParameters=null;}this.expect(10);const tmp=this.flowParseFunctionTypeParams();typeNode.params=tmp.params;typeNode.rest=tmp.rest;typeNode.this=tmp._this;this.expect(11);[typeNode.returnType,node.predicate]=this.flowParseTypeAndPredicateInitialiser();typeContainer.typeAnnotation=this.finishNode(typeNode,"FunctionTypeAnnotation");id.typeAnnotation=this.finishNode(typeContainer,"TypeAnnotation");this.resetEndLocation(id);this.semicolon();this.scope.declareName(node.id.name,2048,node.id.loc.start);return this.finishNode(node,"DeclareFunction");}flowParseDeclare(node,insideModule){if(this.match(80)){return this.flowParseDeclareClass(node);}else if(this.match(68)){return this.flowParseDeclareFunction(node);}else if(this.match(74)){return this.flowParseDeclareVariable(node);}else if(this.eatContextual(127)){if(this.match(16)){return this.flowParseDeclareModuleExports(node);}else{if(insideModule){this.raise(FlowErrors.NestedDeclareModule,this.state.lastTokStartLoc);}return this.flowParseDeclareModule(node);}}else if(this.isContextual(130)){return this.flowParseDeclareTypeAlias(node);}else if(this.isContextual(131)){return this.flowParseDeclareOpaqueType(node);}else if(this.isContextual(129)){return this.flowParseDeclareInterface(node);}else if(this.match(82)){return this.flowParseDeclareExportDeclaration(node,insideModule);}else{this.unexpected();}}flowParseDeclareVariable(node){this.next();node.id=this.flowParseTypeAnnotatableIdentifier(true);this.scope.declareName(node.id.name,5,node.id.loc.start);this.semicolon();return this.finishNode(node,"DeclareVariable");}flowParseDeclareModule(node){this.scope.enter(0);if(this.match(133)){node.id=super.parseExprAtom();}else{node.id=this.parseIdentifier();}const bodyNode=node.body=this.startNode();const body=bodyNode.body=[];this.expect(5);while(!this.match(8)){let bodyNode=this.startNode();if(this.match(83)){this.next();if(!this.isContextual(130)&&!this.match(87)){this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule,this.state.lastTokStartLoc);}super.parseImport(bodyNode);}else{this.expectContextual(125,FlowErrors.UnsupportedStatementInDeclareModule);bodyNode=this.flowParseDeclare(bodyNode,true);}body.push(bodyNode);}this.scope.exit();this.expect(8);this.finishNode(bodyNode,"BlockStatement");let kind=null;let hasModuleExport=false;body.forEach(bodyElement=>{if(isEsModuleType(bodyElement)){if(kind==="CommonJS"){this.raise(FlowErrors.AmbiguousDeclareModuleKind,bodyElement);}kind="ES";}else if(bodyElement.type==="DeclareModuleExports"){if(hasModuleExport){this.raise(FlowErrors.DuplicateDeclareModuleExports,bodyElement);}if(kind==="ES"){this.raise(FlowErrors.AmbiguousDeclareModuleKind,bodyElement);}kind="CommonJS";hasModuleExport=true;}});node.kind=kind||"CommonJS";return this.finishNode(node,"DeclareModule");}flowParseDeclareExportDeclaration(node,insideModule){this.expect(82);if(this.eat(65)){if(this.match(68)||this.match(80)){node.declaration=this.flowParseDeclare(this.startNode());}else{node.declaration=this.flowParseType();this.semicolon();}node.default=true;return this.finishNode(node,"DeclareExportDeclaration");}else{if(this.match(75)||this.isLet()||(this.isContextual(130)||this.isContextual(129))&&!insideModule){const label=this.state.value;throw this.raise(FlowErrors.UnsupportedDeclareExportKind,this.state.startLoc,{unsupportedExportKind:label,suggestion:exportSuggestions[label]});}if(this.match(74)||this.match(68)||this.match(80)||this.isContextual(131)){node.declaration=this.flowParseDeclare(this.startNode());node.default=false;return this.finishNode(node,"DeclareExportDeclaration");}else if(this.match(55)||this.match(5)||this.isContextual(129)||this.isContextual(130)||this.isContextual(131)){node=this.parseExport(node,null);if(node.type==="ExportNamedDeclaration"){node.type="ExportDeclaration";node.default=false;delete node.exportKind;}node.type="Declare"+node.type;return node;}}this.unexpected();}flowParseDeclareModuleExports(node){this.next();this.expectContextual(111);node.typeAnnotation=this.flowParseTypeAnnotation();this.semicolon();return this.finishNode(node,"DeclareModuleExports");}flowParseDeclareTypeAlias(node){this.next();const finished=this.flowParseTypeAlias(node);finished.type="DeclareTypeAlias";return finished;}flowParseDeclareOpaqueType(node){this.next();const finished=this.flowParseOpaqueType(node,true);finished.type="DeclareOpaqueType";return finished;}flowParseDeclareInterface(node){this.next();this.flowParseInterfaceish(node,false);return this.finishNode(node,"DeclareInterface");}flowParseInterfaceish(node,isClass){node.id=this.flowParseRestrictedIdentifier(!isClass,true);this.scope.declareName(node.id.name,isClass?17:8201,node.id.loc.start);if(this.match(47)){node.typeParameters=this.flowParseTypeParameterDeclaration();}else{node.typeParameters=null;}node.extends=[];if(this.eat(81)){do{node.extends.push(this.flowParseInterfaceExtends());}while(!isClass&&this.eat(12));}if(isClass){node.implements=[];node.mixins=[];if(this.eatContextual(117)){do{node.mixins.push(this.flowParseInterfaceExtends());}while(this.eat(12));}if(this.eatContextual(113)){do{node.implements.push(this.flowParseInterfaceExtends());}while(this.eat(12));}}node.body=this.flowParseObjectType({allowStatic:isClass,allowExact:false,allowSpread:false,allowProto:isClass,allowInexact:false});}flowParseInterfaceExtends(){const node=this.startNode();node.id=this.flowParseQualifiedTypeIdentifier();if(this.match(47)){node.typeParameters=this.flowParseTypeParameterInstantiation();}else{node.typeParameters=null;}return this.finishNode(node,"InterfaceExtends");}flowParseInterface(node){this.flowParseInterfaceish(node,false);return this.finishNode(node,"InterfaceDeclaration");}checkNotUnderscore(word){if(word==="_"){this.raise(FlowErrors.UnexpectedReservedUnderscore,this.state.startLoc);}}checkReservedType(word,startLoc,declaration){if(!reservedTypes.has(word))return;this.raise(declaration?FlowErrors.AssignReservedType:FlowErrors.UnexpectedReservedType,startLoc,{reservedType:word});}flowParseRestrictedIdentifier(liberal,declaration){this.checkReservedType(this.state.value,this.state.startLoc,declaration);return this.parseIdentifier(liberal);}flowParseTypeAlias(node){node.id=this.flowParseRestrictedIdentifier(false,true);this.scope.declareName(node.id.name,8201,node.id.loc.start);if(this.match(47)){node.typeParameters=this.flowParseTypeParameterDeclaration();}else{node.typeParameters=null;}node.right=this.flowParseTypeInitialiser(29);this.semicolon();return this.finishNode(node,"TypeAlias");}flowParseOpaqueType(node,declare){this.expectContextual(130);node.id=this.flowParseRestrictedIdentifier(true,true);this.scope.declareName(node.id.name,8201,node.id.loc.start);if(this.match(47)){node.typeParameters=this.flowParseTypeParameterDeclaration();}else{node.typeParameters=null;}node.supertype=null;if(this.match(14)){node.supertype=this.flowParseTypeInitialiser(14);}node.impltype=null;if(!declare){node.impltype=this.flowParseTypeInitialiser(29);}this.semicolon();return this.finishNode(node,"OpaqueType");}flowParseTypeParameter(){let requireDefault=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;const nodeStartLoc=this.state.startLoc;const node=this.startNode();const variance=this.flowParseVariance();const ident=this.flowParseTypeAnnotatableIdentifier();node.name=ident.name;node.variance=variance;node.bound=ident.typeAnnotation;if(this.match(29)){this.eat(29);node.default=this.flowParseType();}else{if(requireDefault){this.raise(FlowErrors.MissingTypeParamDefault,nodeStartLoc);}}return this.finishNode(node,"TypeParameter");}flowParseTypeParameterDeclaration(){const oldInType=this.state.inType;const node=this.startNode();node.params=[];this.state.inType=true;if(this.match(47)||this.match(142)){this.next();}else{this.unexpected();}let defaultRequired=false;do{const typeParameter=this.flowParseTypeParameter(defaultRequired);node.params.push(typeParameter);if(typeParameter.default){defaultRequired=true;}if(!this.match(48)){this.expect(12);}}while(!this.match(48));this.expect(48);this.state.inType=oldInType;return this.finishNode(node,"TypeParameterDeclaration");}flowParseTypeParameterInstantiation(){const node=this.startNode();const oldInType=this.state.inType;node.params=[];this.state.inType=true;this.expect(47);const oldNoAnonFunctionType=this.state.noAnonFunctionType;this.state.noAnonFunctionType=false;while(!this.match(48)){node.params.push(this.flowParseType());if(!this.match(48)){this.expect(12);}}this.state.noAnonFunctionType=oldNoAnonFunctionType;this.expect(48);this.state.inType=oldInType;return this.finishNode(node,"TypeParameterInstantiation");}flowParseTypeParameterInstantiationCallOrNew(){const node=this.startNode();const oldInType=this.state.inType;node.params=[];this.state.inType=true;this.expect(47);while(!this.match(48)){node.params.push(this.flowParseTypeOrImplicitInstantiation());if(!this.match(48)){this.expect(12);}}this.expect(48);this.state.inType=oldInType;return this.finishNode(node,"TypeParameterInstantiation");}flowParseInterfaceType(){const node=this.startNode();this.expectContextual(129);node.extends=[];if(this.eat(81)){do{node.extends.push(this.flowParseInterfaceExtends());}while(this.eat(12));}node.body=this.flowParseObjectType({allowStatic:false,allowExact:false,allowSpread:false,allowProto:false,allowInexact:false});return this.finishNode(node,"InterfaceTypeAnnotation");}flowParseObjectPropertyKey(){return this.match(134)||this.match(133)?super.parseExprAtom():this.parseIdentifier(true);}flowParseObjectTypeIndexer(node,isStatic,variance){node.static=isStatic;if(this.lookahead().type===14){node.id=this.flowParseObjectPropertyKey();node.key=this.flowParseTypeInitialiser();}else{node.id=null;node.key=this.flowParseType();}this.expect(3);node.value=this.flowParseTypeInitialiser();node.variance=variance;return this.finishNode(node,"ObjectTypeIndexer");}flowParseObjectTypeInternalSlot(node,isStatic){node.static=isStatic;node.id=this.flowParseObjectPropertyKey();this.expect(3);this.expect(3);if(this.match(47)||this.match(10)){node.method=true;node.optional=false;node.value=this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));}else{node.method=false;if(this.eat(17)){node.optional=true;}node.value=this.flowParseTypeInitialiser();}return this.finishNode(node,"ObjectTypeInternalSlot");}flowParseObjectTypeMethodish(node){node.params=[];node.rest=null;node.typeParameters=null;node.this=null;if(this.match(47)){node.typeParameters=this.flowParseTypeParameterDeclaration();}this.expect(10);if(this.match(78)){node.this=this.flowParseFunctionTypeParam(true);node.this.name=null;if(!this.match(11)){this.expect(12);}}while(!this.match(11)&&!this.match(21)){node.params.push(this.flowParseFunctionTypeParam(false));if(!this.match(11)){this.expect(12);}}if(this.eat(21)){node.rest=this.flowParseFunctionTypeParam(false);}this.expect(11);node.returnType=this.flowParseTypeInitialiser();return this.finishNode(node,"FunctionTypeAnnotation");}flowParseObjectTypeCallProperty(node,isStatic){const valueNode=this.startNode();node.static=isStatic;node.value=this.flowParseObjectTypeMethodish(valueNode);return this.finishNode(node,"ObjectTypeCallProperty");}flowParseObjectType(_ref97){let{allowStatic,allowExact,allowSpread,allowProto,allowInexact}=_ref97;const oldInType=this.state.inType;this.state.inType=true;const nodeStart=this.startNode();nodeStart.callProperties=[];nodeStart.properties=[];nodeStart.indexers=[];nodeStart.internalSlots=[];let endDelim;let exact;let inexact=false;if(allowExact&&this.match(6)){this.expect(6);endDelim=9;exact=true;}else{this.expect(5);endDelim=8;exact=false;}nodeStart.exact=exact;while(!this.match(endDelim)){let isStatic=false;let protoStartLoc=null;let inexactStartLoc=null;const node=this.startNode();if(allowProto&&this.isContextual(118)){const lookahead=this.lookahead();if(lookahead.type!==14&&lookahead.type!==17){this.next();protoStartLoc=this.state.startLoc;allowStatic=false;}}if(allowStatic&&this.isContextual(106)){const lookahead=this.lookahead();if(lookahead.type!==14&&lookahead.type!==17){this.next();isStatic=true;}}const variance=this.flowParseVariance();if(this.eat(0)){if(protoStartLoc!=null){this.unexpected(protoStartLoc);}if(this.eat(0)){if(variance){this.unexpected(variance.loc.start);}nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node,isStatic));}else{nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node,isStatic,variance));}}else if(this.match(10)||this.match(47)){if(protoStartLoc!=null){this.unexpected(protoStartLoc);}if(variance){this.unexpected(variance.loc.start);}nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node,isStatic));}else{let kind="init";if(this.isContextual(99)||this.isContextual(104)){const lookahead=this.lookahead();if(tokenIsLiteralPropertyName(lookahead.type)){kind=this.state.value;this.next();}}const propOrInexact=this.flowParseObjectTypeProperty(node,isStatic,protoStartLoc,variance,kind,allowSpread,allowInexact!=null?allowInexact:!exact);if(propOrInexact===null){inexact=true;inexactStartLoc=this.state.lastTokStartLoc;}else{nodeStart.properties.push(propOrInexact);}}this.flowObjectTypeSemicolon();if(inexactStartLoc&&!this.match(8)&&!this.match(9)){this.raise(FlowErrors.UnexpectedExplicitInexactInObject,inexactStartLoc);}}this.expect(endDelim);if(allowSpread){nodeStart.inexact=inexact;}const out=this.finishNode(nodeStart,"ObjectTypeAnnotation");this.state.inType=oldInType;return out;}flowParseObjectTypeProperty(node,isStatic,protoStartLoc,variance,kind,allowSpread,allowInexact){if(this.eat(21)){const isInexactToken=this.match(12)||this.match(13)||this.match(8)||this.match(9);if(isInexactToken){if(!allowSpread){this.raise(FlowErrors.InexactInsideNonObject,this.state.lastTokStartLoc);}else if(!allowInexact){this.raise(FlowErrors.InexactInsideExact,this.state.lastTokStartLoc);}if(variance){this.raise(FlowErrors.InexactVariance,variance);}return null;}if(!allowSpread){this.raise(FlowErrors.UnexpectedSpreadType,this.state.lastTokStartLoc);}if(protoStartLoc!=null){this.unexpected(protoStartLoc);}if(variance){this.raise(FlowErrors.SpreadVariance,variance);}node.argument=this.flowParseType();return this.finishNode(node,"ObjectTypeSpreadProperty");}else{node.key=this.flowParseObjectPropertyKey();node.static=isStatic;node.proto=protoStartLoc!=null;node.kind=kind;let optional=false;if(this.match(47)||this.match(10)){node.method=true;if(protoStartLoc!=null){this.unexpected(protoStartLoc);}if(variance){this.unexpected(variance.loc.start);}node.value=this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));if(kind==="get"||kind==="set"){this.flowCheckGetterSetterParams(node);}if(!allowSpread&&node.key.name==="constructor"&&node.value.this){this.raise(FlowErrors.ThisParamBannedInConstructor,node.value.this);}}else{if(kind!=="init")this.unexpected();node.method=false;if(this.eat(17)){optional=true;}node.value=this.flowParseTypeInitialiser();node.variance=variance;}node.optional=optional;return this.finishNode(node,"ObjectTypeProperty");}}flowCheckGetterSetterParams(property){const paramCount=property.kind==="get"?0:1;const length=property.value.params.length+(property.value.rest?1:0);if(property.value.this){this.raise(property.kind==="get"?FlowErrors.GetterMayNotHaveThisParam:FlowErrors.SetterMayNotHaveThisParam,property.value.this);}if(length!==paramCount){this.raise(property.kind==="get"?Errors.BadGetterArity:Errors.BadSetterArity,property);}if(property.kind==="set"&&property.value.rest){this.raise(Errors.BadSetterRestParameter,property);}}flowObjectTypeSemicolon(){if(!this.eat(13)&&!this.eat(12)&&!this.match(8)&&!this.match(9)){this.unexpected();}}flowParseQualifiedTypeIdentifier(startLoc,id){var _startLoc;(_startLoc=startLoc)!=null?_startLoc:startLoc=this.state.startLoc;let node=id||this.flowParseRestrictedIdentifier(true);while(this.eat(16)){const node2=this.startNodeAt(startLoc);node2.qualification=node;node2.id=this.flowParseRestrictedIdentifier(true);node=this.finishNode(node2,"QualifiedTypeIdentifier");}return node;}flowParseGenericType(startLoc,id){const node=this.startNodeAt(startLoc);node.typeParameters=null;node.id=this.flowParseQualifiedTypeIdentifier(startLoc,id);if(this.match(47)){node.typeParameters=this.flowParseTypeParameterInstantiation();}return this.finishNode(node,"GenericTypeAnnotation");}flowParseTypeofType(){const node=this.startNode();this.expect(87);node.argument=this.flowParsePrimaryType();return this.finishNode(node,"TypeofTypeAnnotation");}flowParseTupleType(){const node=this.startNode();node.types=[];this.expect(0);while(this.state.pos<this.length&&!this.match(3)){node.types.push(this.flowParseType());if(this.match(3))break;this.expect(12);}this.expect(3);return this.finishNode(node,"TupleTypeAnnotation");}flowParseFunctionTypeParam(first){let name=null;let optional=false;let typeAnnotation=null;const node=this.startNode();const lh=this.lookahead();const isThis=this.state.type===78;if(lh.type===14||lh.type===17){if(isThis&&!first){this.raise(FlowErrors.ThisParamMustBeFirst,node);}name=this.parseIdentifier(isThis);if(this.eat(17)){optional=true;if(isThis){this.raise(FlowErrors.ThisParamMayNotBeOptional,node);}}typeAnnotation=this.flowParseTypeInitialiser();}else{typeAnnotation=this.flowParseType();}node.name=name;node.optional=optional;node.typeAnnotation=typeAnnotation;return this.finishNode(node,"FunctionTypeParam");}reinterpretTypeAsFunctionTypeParam(type){const node=this.startNodeAt(type.loc.start);node.name=null;node.optional=false;node.typeAnnotation=type;return this.finishNode(node,"FunctionTypeParam");}flowParseFunctionTypeParams(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let rest=null;let _this=null;if(this.match(78)){_this=this.flowParseFunctionTypeParam(true);_this.name=null;if(!this.match(11)){this.expect(12);}}while(!this.match(11)&&!this.match(21)){params.push(this.flowParseFunctionTypeParam(false));if(!this.match(11)){this.expect(12);}}if(this.eat(21)){rest=this.flowParseFunctionTypeParam(false);}return{params,rest,_this};}flowIdentToTypeAnnotation(startLoc,node,id){switch(id.name){case"any":return this.finishNode(node,"AnyTypeAnnotation");case"bool":case"boolean":return this.finishNode(node,"BooleanTypeAnnotation");case"mixed":return this.finishNode(node,"MixedTypeAnnotation");case"empty":return this.finishNode(node,"EmptyTypeAnnotation");case"number":return this.finishNode(node,"NumberTypeAnnotation");case"string":return this.finishNode(node,"StringTypeAnnotation");case"symbol":return this.finishNode(node,"SymbolTypeAnnotation");default:this.checkNotUnderscore(id.name);return this.flowParseGenericType(startLoc,id);}}flowParsePrimaryType(){const startLoc=this.state.startLoc;const node=this.startNode();let tmp;let type;let isGroupedType=false;const oldNoAnonFunctionType=this.state.noAnonFunctionType;switch(this.state.type){case 5:return this.flowParseObjectType({allowStatic:false,allowExact:false,allowSpread:true,allowProto:false,allowInexact:true});case 6:return this.flowParseObjectType({allowStatic:false,allowExact:true,allowSpread:true,allowProto:false,allowInexact:false});case 0:this.state.noAnonFunctionType=false;type=this.flowParseTupleType();this.state.noAnonFunctionType=oldNoAnonFunctionType;return type;case 47:node.typeParameters=this.flowParseTypeParameterDeclaration();this.expect(10);tmp=this.flowParseFunctionTypeParams();node.params=tmp.params;node.rest=tmp.rest;node.this=tmp._this;this.expect(11);this.expect(19);node.returnType=this.flowParseType();return this.finishNode(node,"FunctionTypeAnnotation");case 10:this.next();if(!this.match(11)&&!this.match(21)){if(tokenIsIdentifier(this.state.type)||this.match(78)){const token=this.lookahead().type;isGroupedType=token!==17&&token!==14;}else{isGroupedType=true;}}if(isGroupedType){this.state.noAnonFunctionType=false;type=this.flowParseType();this.state.noAnonFunctionType=oldNoAnonFunctionType;if(this.state.noAnonFunctionType||!(this.match(12)||this.match(11)&&this.lookahead().type===19)){this.expect(11);return type;}else{this.eat(12);}}if(type){tmp=this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);}else{tmp=this.flowParseFunctionTypeParams();}node.params=tmp.params;node.rest=tmp.rest;node.this=tmp._this;this.expect(11);this.expect(19);node.returnType=this.flowParseType();node.typeParameters=null;return this.finishNode(node,"FunctionTypeAnnotation");case 133:return this.parseLiteral(this.state.value,"StringLiteralTypeAnnotation");case 85:case 86:node.value=this.match(85);this.next();return this.finishNode(node,"BooleanLiteralTypeAnnotation");case 53:if(this.state.value==="-"){this.next();if(this.match(134)){return this.parseLiteralAtNode(-this.state.value,"NumberLiteralTypeAnnotation",node);}if(this.match(135)){return this.parseLiteralAtNode(-this.state.value,"BigIntLiteralTypeAnnotation",node);}throw this.raise(FlowErrors.UnexpectedSubtractionOperand,this.state.startLoc);}this.unexpected();return;case 134:return this.parseLiteral(this.state.value,"NumberLiteralTypeAnnotation");case 135:return this.parseLiteral(this.state.value,"BigIntLiteralTypeAnnotation");case 88:this.next();return this.finishNode(node,"VoidTypeAnnotation");case 84:this.next();return this.finishNode(node,"NullLiteralTypeAnnotation");case 78:this.next();return this.finishNode(node,"ThisTypeAnnotation");case 55:this.next();return this.finishNode(node,"ExistsTypeAnnotation");case 87:return this.flowParseTypeofType();default:if(tokenIsKeyword(this.state.type)){const label=tokenLabelName(this.state.type);this.next();return super.createIdentifier(node,label);}else if(tokenIsIdentifier(this.state.type)){if(this.isContextual(129)){return this.flowParseInterfaceType();}return this.flowIdentToTypeAnnotation(startLoc,node,this.parseIdentifier());}}this.unexpected();}flowParsePostfixType(){const startLoc=this.state.startLoc;let type=this.flowParsePrimaryType();let seenOptionalIndexedAccess=false;while((this.match(0)||this.match(18))&&!this.canInsertSemicolon()){const node=this.startNodeAt(startLoc);const optional=this.eat(18);seenOptionalIndexedAccess=seenOptionalIndexedAccess||optional;this.expect(0);if(!optional&&this.match(3)){node.elementType=type;this.next();type=this.finishNode(node,"ArrayTypeAnnotation");}else{node.objectType=type;node.indexType=this.flowParseType();this.expect(3);if(seenOptionalIndexedAccess){node.optional=optional;type=this.finishNode(node,"OptionalIndexedAccessType");}else{type=this.finishNode(node,"IndexedAccessType");}}}return type;}flowParsePrefixType(){const node=this.startNode();if(this.eat(17)){node.typeAnnotation=this.flowParsePrefixType();return this.finishNode(node,"NullableTypeAnnotation");}else{return this.flowParsePostfixType();}}flowParseAnonFunctionWithoutParens(){const param=this.flowParsePrefixType();if(!this.state.noAnonFunctionType&&this.eat(19)){const node=this.startNodeAt(param.loc.start);node.params=[this.reinterpretTypeAsFunctionTypeParam(param)];node.rest=null;node.this=null;node.returnType=this.flowParseType();node.typeParameters=null;return this.finishNode(node,"FunctionTypeAnnotation");}return param;}flowParseIntersectionType(){const node=this.startNode();this.eat(45);const type=this.flowParseAnonFunctionWithoutParens();node.types=[type];while(this.eat(45)){node.types.push(this.flowParseAnonFunctionWithoutParens());}return node.types.length===1?type:this.finishNode(node,"IntersectionTypeAnnotation");}flowParseUnionType(){const node=this.startNode();this.eat(43);const type=this.flowParseIntersectionType();node.types=[type];while(this.eat(43)){node.types.push(this.flowParseIntersectionType());}return node.types.length===1?type:this.finishNode(node,"UnionTypeAnnotation");}flowParseType(){const oldInType=this.state.inType;this.state.inType=true;const type=this.flowParseUnionType();this.state.inType=oldInType;return type;}flowParseTypeOrImplicitInstantiation(){if(this.state.type===132&&this.state.value==="_"){const startLoc=this.state.startLoc;const node=this.parseIdentifier();return this.flowParseGenericType(startLoc,node);}else{return this.flowParseType();}}flowParseTypeAnnotation(){const node=this.startNode();node.typeAnnotation=this.flowParseTypeInitialiser();return this.finishNode(node,"TypeAnnotation");}flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride){const ident=allowPrimitiveOverride?this.parseIdentifier():this.flowParseRestrictedIdentifier();if(this.match(14)){ident.typeAnnotation=this.flowParseTypeAnnotation();this.resetEndLocation(ident);}return ident;}typeCastToParameter(node){node.expression.typeAnnotation=node.typeAnnotation;this.resetEndLocation(node.expression,node.typeAnnotation.loc.end);return node.expression;}flowParseVariance(){let variance=null;if(this.match(53)){variance=this.startNode();if(this.state.value==="+"){variance.kind="plus";}else{variance.kind="minus";}this.next();return this.finishNode(variance,"Variance");}return variance;}parseFunctionBody(node,allowExpressionBody){let isMethod=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(allowExpressionBody){this.forwardNoArrowParamsConversionAt(node,()=>super.parseFunctionBody(node,true,isMethod));return;}super.parseFunctionBody(node,false,isMethod);}parseFunctionBodyAndFinish(node,type){let isMethod=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(this.match(14)){const typeNode=this.startNode();[typeNode.typeAnnotation,node.predicate]=this.flowParseTypeAndPredicateInitialiser();node.returnType=typeNode.typeAnnotation?this.finishNode(typeNode,"TypeAnnotation"):null;}return super.parseFunctionBodyAndFinish(node,type,isMethod);}parseStatementLike(flags){if(this.state.strict&&this.isContextual(129)){const lookahead=this.lookahead();if(tokenIsKeywordOrIdentifier(lookahead.type)){const node=this.startNode();this.next();return this.flowParseInterface(node);}}else if(this.shouldParseEnums()&&this.isContextual(126)){const node=this.startNode();this.next();return this.flowParseEnumDeclaration(node);}const stmt=super.parseStatementLike(flags);if(this.flowPragma===undefined&&!this.isValidDirective(stmt)){this.flowPragma=null;}return stmt;}parseExpressionStatement(node,expr,decorators){if(expr.type==="Identifier"){if(expr.name==="declare"){if(this.match(80)||tokenIsIdentifier(this.state.type)||this.match(68)||this.match(74)||this.match(82)){return this.flowParseDeclare(node);}}else if(tokenIsIdentifier(this.state.type)){if(expr.name==="interface"){return this.flowParseInterface(node);}else if(expr.name==="type"){return this.flowParseTypeAlias(node);}else if(expr.name==="opaque"){return this.flowParseOpaqueType(node,false);}}}return super.parseExpressionStatement(node,expr,decorators);}shouldParseExportDeclaration(){const{type}=this.state;if(tokenIsFlowInterfaceOrTypeOrOpaque(type)||this.shouldParseEnums()&&type===126){return!this.state.containsEsc;}return super.shouldParseExportDeclaration();}isExportDefaultSpecifier(){const{type}=this.state;if(tokenIsFlowInterfaceOrTypeOrOpaque(type)||this.shouldParseEnums()&&type===126){return this.state.containsEsc;}return super.isExportDefaultSpecifier();}parseExportDefaultExpression(){if(this.shouldParseEnums()&&this.isContextual(126)){const node=this.startNode();this.next();return this.flowParseEnumDeclaration(node);}return super.parseExportDefaultExpression();}parseConditional(expr,startLoc,refExpressionErrors){if(!this.match(17))return expr;if(this.state.maybeInArrowParameters){const nextCh=this.lookaheadCharCode();if(nextCh===44||nextCh===61||nextCh===58||nextCh===41){this.setOptionalParametersError(refExpressionErrors);return expr;}}this.expect(17);const state=this.state.clone();const originalNoArrowAt=this.state.noArrowAt;const node=this.startNodeAt(startLoc);let{consequent,failed}=this.tryParseConditionalConsequent();let[valid,invalid]=this.getArrowLikeExpressions(consequent);if(failed||invalid.length>0){const noArrowAt=[...originalNoArrowAt];if(invalid.length>0){this.state=state;this.state.noArrowAt=noArrowAt;for(let i=0;i<invalid.length;i++){noArrowAt.push(invalid[i].start);}({consequent,failed}=this.tryParseConditionalConsequent());[valid,invalid]=this.getArrowLikeExpressions(consequent);}if(failed&&valid.length>1){this.raise(FlowErrors.AmbiguousConditionalArrow,state.startLoc);}if(failed&&valid.length===1){this.state=state;noArrowAt.push(valid[0].start);this.state.noArrowAt=noArrowAt;({consequent,failed}=this.tryParseConditionalConsequent());}}this.getArrowLikeExpressions(consequent,true);this.state.noArrowAt=originalNoArrowAt;this.expect(14);node.test=expr;node.consequent=consequent;node.alternate=this.forwardNoArrowParamsConversionAt(node,()=>this.parseMaybeAssign(undefined,undefined));return this.finishNode(node,"ConditionalExpression");}tryParseConditionalConsequent(){this.state.noArrowParamsConversionAt.push(this.state.start);const consequent=this.parseMaybeAssignAllowIn();const failed=!this.match(14);this.state.noArrowParamsConversionAt.pop();return{consequent,failed};}getArrowLikeExpressions(node,disallowInvalid){const stack=[node];const arrows=[];while(stack.length!==0){const node=stack.pop();if(node.type==="ArrowFunctionExpression"){if(node.typeParameters||!node.returnType){this.finishArrowValidation(node);}else{arrows.push(node);}stack.push(node.body);}else if(node.type==="ConditionalExpression"){stack.push(node.consequent);stack.push(node.alternate);}}if(disallowInvalid){arrows.forEach(node=>this.finishArrowValidation(node));return[arrows,[]];}return partition(arrows,node=>node.params.every(param=>this.isAssignable(param,true)));}finishArrowValidation(node){var _node$extra;this.toAssignableList(node.params,(_node$extra=node.extra)==null?void 0:_node$extra.trailingCommaLoc,false);this.scope.enter(2|4);super.checkParams(node,false,true);this.scope.exit();}forwardNoArrowParamsConversionAt(node,parse){let result;if(this.state.noArrowParamsConversionAt.indexOf(node.start)!==-1){this.state.noArrowParamsConversionAt.push(this.state.start);result=parse();this.state.noArrowParamsConversionAt.pop();}else{result=parse();}return result;}parseParenItem(node,startLoc){node=super.parseParenItem(node,startLoc);if(this.eat(17)){node.optional=true;this.resetEndLocation(node);}if(this.match(14)){const typeCastNode=this.startNodeAt(startLoc);typeCastNode.expression=node;typeCastNode.typeAnnotation=this.flowParseTypeAnnotation();return this.finishNode(typeCastNode,"TypeCastExpression");}return node;}assertModuleNodeAllowed(node){if(node.type==="ImportDeclaration"&&(node.importKind==="type"||node.importKind==="typeof")||node.type==="ExportNamedDeclaration"&&node.exportKind==="type"||node.type==="ExportAllDeclaration"&&node.exportKind==="type"){return;}super.assertModuleNodeAllowed(node);}parseExportDeclaration(node){if(this.isContextual(130)){node.exportKind="type";const declarationNode=this.startNode();this.next();if(this.match(5)){node.specifiers=this.parseExportSpecifiers(true);super.parseExportFrom(node);return null;}else{return this.flowParseTypeAlias(declarationNode);}}else if(this.isContextual(131)){node.exportKind="type";const declarationNode=this.startNode();this.next();return this.flowParseOpaqueType(declarationNode,false);}else if(this.isContextual(129)){node.exportKind="type";const declarationNode=this.startNode();this.next();return this.flowParseInterface(declarationNode);}else if(this.shouldParseEnums()&&this.isContextual(126)){node.exportKind="value";const declarationNode=this.startNode();this.next();return this.flowParseEnumDeclaration(declarationNode);}else{return super.parseExportDeclaration(node);}}eatExportStar(node){if(super.eatExportStar(node))return true;if(this.isContextual(130)&&this.lookahead().type===55){node.exportKind="type";this.next();this.next();return true;}return false;}maybeParseExportNamespaceSpecifier(node){const{startLoc}=this.state;const hasNamespace=super.maybeParseExportNamespaceSpecifier(node);if(hasNamespace&&node.exportKind==="type"){this.unexpected(startLoc);}return hasNamespace;}parseClassId(node,isStatement,optionalId){super.parseClassId(node,isStatement,optionalId);if(this.match(47)){node.typeParameters=this.flowParseTypeParameterDeclaration();}}parseClassMember(classBody,member,state){const{startLoc}=this.state;if(this.isContextual(125)){if(super.parseClassMemberFromModifier(classBody,member)){return;}member.declare=true;}super.parseClassMember(classBody,member,state);if(member.declare){if(member.type!=="ClassProperty"&&member.type!=="ClassPrivateProperty"&&member.type!=="PropertyDefinition"){this.raise(FlowErrors.DeclareClassElement,startLoc);}else if(member.value){this.raise(FlowErrors.DeclareClassFieldInitializer,member.value);}}}isIterator(word){return word==="iterator"||word==="asyncIterator";}readIterator(){const word=super.readWord1();const fullWord="@@"+word;if(!this.isIterator(word)||!this.state.inType){this.raise(Errors.InvalidIdentifier,this.state.curPosition(),{identifierName:fullWord});}this.finishToken(132,fullWord);}getTokenFromCode(code){const next=this.input.charCodeAt(this.state.pos+1);if(code===123&&next===124){this.finishOp(6,2);}else if(this.state.inType&&(code===62||code===60)){this.finishOp(code===62?48:47,1);}else if(this.state.inType&&code===63){if(next===46){this.finishOp(18,2);}else{this.finishOp(17,1);}}else if(isIteratorStart(code,next,this.input.charCodeAt(this.state.pos+2))){this.state.pos+=2;this.readIterator();}else{super.getTokenFromCode(code);}}isAssignable(node,isBinding){if(node.type==="TypeCastExpression"){return this.isAssignable(node.expression,isBinding);}else{return super.isAssignable(node,isBinding);}}toAssignable(node){let isLHS=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!isLHS&&node.type==="AssignmentExpression"&&node.left.type==="TypeCastExpression"){node.left=this.typeCastToParameter(node.left);}super.toAssignable(node,isLHS);}toAssignableList(exprList,trailingCommaLoc,isLHS){for(let i=0;i<exprList.length;i++){const expr=exprList[i];if((expr==null?void 0:expr.type)==="TypeCastExpression"){exprList[i]=this.typeCastToParameter(expr);}}super.toAssignableList(exprList,trailingCommaLoc,isLHS);}toReferencedList(exprList,isParenthesizedExpr){for(let i=0;i<exprList.length;i++){var _expr$extra;const expr=exprList[i];if(expr&&expr.type==="TypeCastExpression"&&!((_expr$extra=expr.extra)!=null&&_expr$extra.parenthesized)&&(exprList.length>1||!isParenthesizedExpr)){this.raise(FlowErrors.TypeCastInPattern,expr.typeAnnotation);}}return exprList;}parseArrayLike(close,canBePattern,isTuple,refExpressionErrors){const node=super.parseArrayLike(close,canBePattern,isTuple,refExpressionErrors);if(canBePattern&&!this.state.maybeInArrowParameters){this.toReferencedList(node.elements);}return node;}isValidLVal(type,isParenthesized,binding){return type==="TypeCastExpression"||super.isValidLVal(type,isParenthesized,binding);}parseClassProperty(node){if(this.match(14)){node.typeAnnotation=this.flowParseTypeAnnotation();}return super.parseClassProperty(node);}parseClassPrivateProperty(node){if(this.match(14)){node.typeAnnotation=this.flowParseTypeAnnotation();}return super.parseClassPrivateProperty(node);}isClassMethod(){return this.match(47)||super.isClassMethod();}isClassProperty(){return this.match(14)||super.isClassProperty();}isNonstaticConstructor(method){return!this.match(14)&&super.isNonstaticConstructor(method);}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper){if(method.variance){this.unexpected(method.variance.loc.start);}delete method.variance;if(this.match(47)){method.typeParameters=this.flowParseTypeParameterDeclaration();}super.pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper);if(method.params&&isConstructor){const params=method.params;if(params.length>0&&this.isThisParam(params[0])){this.raise(FlowErrors.ThisParamBannedInConstructor,method);}}else if(method.type==="MethodDefinition"&&isConstructor&&method.value.params){const params=method.value.params;if(params.length>0&&this.isThisParam(params[0])){this.raise(FlowErrors.ThisParamBannedInConstructor,method);}}}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){if(method.variance){this.unexpected(method.variance.loc.start);}delete method.variance;if(this.match(47)){method.typeParameters=this.flowParseTypeParameterDeclaration();}super.pushClassPrivateMethod(classBody,method,isGenerator,isAsync);}parseClassSuper(node){super.parseClassSuper(node);if(node.superClass&&this.match(47)){node.superTypeParameters=this.flowParseTypeParameterInstantiation();}if(this.isContextual(113)){this.next();const implemented=node.implements=[];do{const node=this.startNode();node.id=this.flowParseRestrictedIdentifier(true);if(this.match(47)){node.typeParameters=this.flowParseTypeParameterInstantiation();}else{node.typeParameters=null;}implemented.push(this.finishNode(node,"ClassImplements"));}while(this.eat(12));}}checkGetterSetterParams(method){super.checkGetterSetterParams(method);const params=this.getObjectOrClassMethodParams(method);if(params.length>0){const param=params[0];if(this.isThisParam(param)&&method.kind==="get"){this.raise(FlowErrors.GetterMayNotHaveThisParam,param);}else if(this.isThisParam(param)){this.raise(FlowErrors.SetterMayNotHaveThisParam,param);}}}parsePropertyNamePrefixOperator(node){node.variance=this.flowParseVariance();}parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors){if(prop.variance){this.unexpected(prop.variance.loc.start);}delete prop.variance;let typeParameters;if(this.match(47)&&!isAccessor){typeParameters=this.flowParseTypeParameterDeclaration();if(!this.match(10))this.unexpected();}const result=super.parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors);if(typeParameters){(result.value||result).typeParameters=typeParameters;}return result;}parseAssignableListItemTypes(param){if(this.eat(17)){if(param.type!=="Identifier"){this.raise(FlowErrors.PatternIsOptional,param);}if(this.isThisParam(param)){this.raise(FlowErrors.ThisParamMayNotBeOptional,param);}param.optional=true;}if(this.match(14)){param.typeAnnotation=this.flowParseTypeAnnotation();}else if(this.isThisParam(param)){this.raise(FlowErrors.ThisParamAnnotationRequired,param);}if(this.match(29)&&this.isThisParam(param)){this.raise(FlowErrors.ThisParamNoDefault,param);}this.resetEndLocation(param);return param;}parseMaybeDefault(startLoc,left){const node=super.parseMaybeDefault(startLoc,left);if(node.type==="AssignmentPattern"&&node.typeAnnotation&&node.right.start<node.typeAnnotation.start){this.raise(FlowErrors.TypeBeforeInitializer,node.typeAnnotation);}return node;}checkImportReflection(node){super.checkImportReflection(node);if(node.module&&node.importKind!=="value"){this.raise(FlowErrors.ImportReflectionHasImportType,node.specifiers[0].loc.start);}}parseImportSpecifierLocal(node,specifier,type){specifier.local=hasTypeImportKind(node)?this.flowParseRestrictedIdentifier(true,true):this.parseIdentifier();node.specifiers.push(this.finishImportSpecifier(specifier,type));}isPotentialImportPhase(isExport){if(super.isPotentialImportPhase(isExport))return true;if(this.isContextual(130)){if(!isExport)return true;const ch=this.lookaheadCharCode();return ch===123||ch===42;}return!isExport&&this.isContextual(87);}applyImportPhase(node,isExport,phase,loc){super.applyImportPhase(node,isExport,phase,loc);if(isExport){if(!phase&&this.match(65)){return;}node.exportKind=phase==="type"?phase:"value";}else{if(phase==="type"&&this.match(55))this.unexpected();node.importKind=phase==="type"||phase==="typeof"?phase:"value";}}parseImportSpecifier(specifier,importedIsString,isInTypeOnlyImport,isMaybeTypeOnly,bindingType){const firstIdent=specifier.imported;let specifierTypeKind=null;if(firstIdent.type==="Identifier"){if(firstIdent.name==="type"){specifierTypeKind="type";}else if(firstIdent.name==="typeof"){specifierTypeKind="typeof";}}let isBinding=false;if(this.isContextual(93)&&!this.isLookaheadContextual("as")){const as_ident=this.parseIdentifier(true);if(specifierTypeKind!==null&&!tokenIsKeywordOrIdentifier(this.state.type)){specifier.imported=as_ident;specifier.importKind=specifierTypeKind;specifier.local=cloneIdentifier(as_ident);}else{specifier.imported=firstIdent;specifier.importKind=null;specifier.local=this.parseIdentifier();}}else{if(specifierTypeKind!==null&&tokenIsKeywordOrIdentifier(this.state.type)){specifier.imported=this.parseIdentifier(true);specifier.importKind=specifierTypeKind;}else{if(importedIsString){throw this.raise(Errors.ImportBindingIsString,specifier,{importName:firstIdent.value});}specifier.imported=firstIdent;specifier.importKind=null;}if(this.eatContextual(93)){specifier.local=this.parseIdentifier();}else{isBinding=true;specifier.local=cloneIdentifier(specifier.imported);}}const specifierIsTypeImport=hasTypeImportKind(specifier);if(isInTypeOnlyImport&&specifierIsTypeImport){this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport,specifier);}if(isInTypeOnlyImport||specifierIsTypeImport){this.checkReservedType(specifier.local.name,specifier.local.loc.start,true);}if(isBinding&&!isInTypeOnlyImport&&!specifierIsTypeImport){this.checkReservedWord(specifier.local.name,specifier.loc.start,true,true);}return this.finishImportSpecifier(specifier,"ImportSpecifier");}parseBindingAtom(){switch(this.state.type){case 78:return this.parseIdentifier(true);default:return super.parseBindingAtom();}}parseFunctionParams(node,isConstructor){const kind=node.kind;if(kind!=="get"&&kind!=="set"&&this.match(47)){node.typeParameters=this.flowParseTypeParameterDeclaration();}super.parseFunctionParams(node,isConstructor);}parseVarId(decl,kind){super.parseVarId(decl,kind);if(this.match(14)){decl.id.typeAnnotation=this.flowParseTypeAnnotation();this.resetEndLocation(decl.id);}}parseAsyncArrowFromCallExpression(node,call){if(this.match(14)){const oldNoAnonFunctionType=this.state.noAnonFunctionType;this.state.noAnonFunctionType=true;node.returnType=this.flowParseTypeAnnotation();this.state.noAnonFunctionType=oldNoAnonFunctionType;}return super.parseAsyncArrowFromCallExpression(node,call);}shouldParseAsyncArrow(){return this.match(14)||super.shouldParseAsyncArrow();}parseMaybeAssign(refExpressionErrors,afterLeftParse){var _jsx;let state=null;let jsx;if(this.hasPlugin("jsx")&&(this.match(142)||this.match(47))){state=this.state.clone();jsx=this.tryParse(()=>super.parseMaybeAssign(refExpressionErrors,afterLeftParse),state);if(!jsx.error)return jsx.node;const{context}=this.state;const currentContext=context[context.length-1];if(currentContext===types.j_oTag||currentContext===types.j_expr){context.pop();}}if((_jsx=jsx)!=null&&_jsx.error||this.match(47)){var _jsx2,_jsx3;state=state||this.state.clone();let typeParameters;const arrow=this.tryParse(abort=>{var _arrowExpression$extr;typeParameters=this.flowParseTypeParameterDeclaration();const arrowExpression=this.forwardNoArrowParamsConversionAt(typeParameters,()=>{const result=super.parseMaybeAssign(refExpressionErrors,afterLeftParse);this.resetStartLocationFromNode(result,typeParameters);return result;});if((_arrowExpression$extr=arrowExpression.extra)!=null&&_arrowExpression$extr.parenthesized)abort();const expr=this.maybeUnwrapTypeCastExpression(arrowExpression);if(expr.type!=="ArrowFunctionExpression")abort();expr.typeParameters=typeParameters;this.resetStartLocationFromNode(expr,typeParameters);return arrowExpression;},state);let arrowExpression=null;if(arrow.node&&this.maybeUnwrapTypeCastExpression(arrow.node).type==="ArrowFunctionExpression"){if(!arrow.error&&!arrow.aborted){if(arrow.node.async){this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,typeParameters);}return arrow.node;}arrowExpression=arrow.node;}if((_jsx2=jsx)!=null&&_jsx2.node){this.state=jsx.failState;return jsx.node;}if(arrowExpression){this.state=arrow.failState;return arrowExpression;}if((_jsx3=jsx)!=null&&_jsx3.thrown)throw jsx.error;if(arrow.thrown)throw arrow.error;throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter,typeParameters);}return super.parseMaybeAssign(refExpressionErrors,afterLeftParse);}parseArrow(node){if(this.match(14)){const result=this.tryParse(()=>{const oldNoAnonFunctionType=this.state.noAnonFunctionType;this.state.noAnonFunctionType=true;const typeNode=this.startNode();[typeNode.typeAnnotation,node.predicate]=this.flowParseTypeAndPredicateInitialiser();this.state.noAnonFunctionType=oldNoAnonFunctionType;if(this.canInsertSemicolon())this.unexpected();if(!this.match(19))this.unexpected();return typeNode;});if(result.thrown)return null;if(result.error)this.state=result.failState;node.returnType=result.node.typeAnnotation?this.finishNode(result.node,"TypeAnnotation"):null;}return super.parseArrow(node);}shouldParseArrow(params){return this.match(14)||super.shouldParseArrow(params);}setArrowFunctionParameters(node,params){if(this.state.noArrowParamsConversionAt.indexOf(node.start)!==-1){node.params=params;}else{super.setArrowFunctionParameters(node,params);}}checkParams(node,allowDuplicates,isArrowFunction){let strictModeChanged=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;if(isArrowFunction&&this.state.noArrowParamsConversionAt.indexOf(node.start)!==-1){return;}for(let i=0;i<node.params.length;i++){if(this.isThisParam(node.params[i])&&i>0){this.raise(FlowErrors.ThisParamMustBeFirst,node.params[i]);}}super.checkParams(node,allowDuplicates,isArrowFunction,strictModeChanged);}parseParenAndDistinguishExpression(canBeArrow){return super.parseParenAndDistinguishExpression(canBeArrow&&this.state.noArrowAt.indexOf(this.state.start)===-1);}parseSubscripts(base,startLoc,noCalls){if(base.type==="Identifier"&&base.name==="async"&&this.state.noArrowAt.indexOf(startLoc.index)!==-1){this.next();const node=this.startNodeAt(startLoc);node.callee=base;node.arguments=super.parseCallExpressionArguments(11,false);base=this.finishNode(node,"CallExpression");}else if(base.type==="Identifier"&&base.name==="async"&&this.match(47)){const state=this.state.clone();const arrow=this.tryParse(abort=>this.parseAsyncArrowWithTypeParameters(startLoc)||abort(),state);if(!arrow.error&&!arrow.aborted)return arrow.node;const result=this.tryParse(()=>super.parseSubscripts(base,startLoc,noCalls),state);if(result.node&&!result.error)return result.node;if(arrow.node){this.state=arrow.failState;return arrow.node;}if(result.node){this.state=result.failState;return result.node;}throw arrow.error||result.error;}return super.parseSubscripts(base,startLoc,noCalls);}parseSubscript(base,startLoc,noCalls,subscriptState){if(this.match(18)&&this.isLookaheadToken_lt()){subscriptState.optionalChainMember=true;if(noCalls){subscriptState.stop=true;return base;}this.next();const node=this.startNodeAt(startLoc);node.callee=base;node.typeArguments=this.flowParseTypeParameterInstantiation();this.expect(10);node.arguments=this.parseCallExpressionArguments(11,false);node.optional=true;return this.finishCallExpression(node,true);}else if(!noCalls&&this.shouldParseTypes()&&this.match(47)){const node=this.startNodeAt(startLoc);node.callee=base;const result=this.tryParse(()=>{node.typeArguments=this.flowParseTypeParameterInstantiationCallOrNew();this.expect(10);node.arguments=super.parseCallExpressionArguments(11,false);if(subscriptState.optionalChainMember){node.optional=false;}return this.finishCallExpression(node,subscriptState.optionalChainMember);});if(result.node){if(result.error)this.state=result.failState;return result.node;}}return super.parseSubscript(base,startLoc,noCalls,subscriptState);}parseNewCallee(node){super.parseNewCallee(node);let targs=null;if(this.shouldParseTypes()&&this.match(47)){targs=this.tryParse(()=>this.flowParseTypeParameterInstantiationCallOrNew()).node;}node.typeArguments=targs;}parseAsyncArrowWithTypeParameters(startLoc){const node=this.startNodeAt(startLoc);this.parseFunctionParams(node,false);if(!this.parseArrow(node))return;return super.parseArrowExpression(node,undefined,true);}readToken_mult_modulo(code){const next=this.input.charCodeAt(this.state.pos+1);if(code===42&&next===47&&this.state.hasFlowComment){this.state.hasFlowComment=false;this.state.pos+=2;this.nextToken();return;}super.readToken_mult_modulo(code);}readToken_pipe_amp(code){const next=this.input.charCodeAt(this.state.pos+1);if(code===124&&next===125){this.finishOp(9,2);return;}super.readToken_pipe_amp(code);}parseTopLevel(file,program){const fileNode=super.parseTopLevel(file,program);if(this.state.hasFlowComment){this.raise(FlowErrors.UnterminatedFlowComment,this.state.curPosition());}return fileNode;}skipBlockComment(){if(this.hasPlugin("flowComments")&&this.skipFlowComment()){if(this.state.hasFlowComment){throw this.raise(FlowErrors.NestedFlowComment,this.state.startLoc);}this.hasFlowCommentCompletion();const commentSkip=this.skipFlowComment();if(commentSkip){this.state.pos+=commentSkip;this.state.hasFlowComment=true;}return;}return super.skipBlockComment(this.state.hasFlowComment?"*-/":"*/");}skipFlowComment(){const{pos}=this.state;let shiftToFirstNonWhiteSpace=2;while([32,9].includes(this.input.charCodeAt(pos+shiftToFirstNonWhiteSpace))){shiftToFirstNonWhiteSpace++;}const ch2=this.input.charCodeAt(shiftToFirstNonWhiteSpace+pos);const ch3=this.input.charCodeAt(shiftToFirstNonWhiteSpace+pos+1);if(ch2===58&&ch3===58){return shiftToFirstNonWhiteSpace+2;}if(this.input.slice(shiftToFirstNonWhiteSpace+pos,shiftToFirstNonWhiteSpace+pos+12)==="flow-include"){return shiftToFirstNonWhiteSpace+12;}if(ch2===58&&ch3!==58){return shiftToFirstNonWhiteSpace;}return false;}hasFlowCommentCompletion(){const end=this.input.indexOf("*/",this.state.pos);if(end===-1){throw this.raise(Errors.UnterminatedComment,this.state.curPosition());}}flowEnumErrorBooleanMemberNotInitialized(loc,_ref98){let{enumName,memberName}=_ref98;this.raise(FlowErrors.EnumBooleanMemberNotInitialized,loc,{memberName,enumName});}flowEnumErrorInvalidMemberInitializer(loc,enumContext){return this.raise(!enumContext.explicitType?FlowErrors.EnumInvalidMemberInitializerUnknownType:enumContext.explicitType==="symbol"?FlowErrors.EnumInvalidMemberInitializerSymbolType:FlowErrors.EnumInvalidMemberInitializerPrimaryType,loc,enumContext);}flowEnumErrorNumberMemberNotInitialized(loc,details){this.raise(FlowErrors.EnumNumberMemberNotInitialized,loc,details);}flowEnumErrorStringMemberInconsistentlyInitialized(node,details){this.raise(FlowErrors.EnumStringMemberInconsistentlyInitialized,node,details);}flowEnumMemberInit(){const startLoc=this.state.startLoc;const endOfInit=()=>this.match(12)||this.match(8);switch(this.state.type){case 134:{const literal=this.parseNumericLiteral(this.state.value);if(endOfInit()){return{type:"number",loc:literal.loc.start,value:literal};}return{type:"invalid",loc:startLoc};}case 133:{const literal=this.parseStringLiteral(this.state.value);if(endOfInit()){return{type:"string",loc:literal.loc.start,value:literal};}return{type:"invalid",loc:startLoc};}case 85:case 86:{const literal=this.parseBooleanLiteral(this.match(85));if(endOfInit()){return{type:"boolean",loc:literal.loc.start,value:literal};}return{type:"invalid",loc:startLoc};}default:return{type:"invalid",loc:startLoc};}}flowEnumMemberRaw(){const loc=this.state.startLoc;const id=this.parseIdentifier(true);const init=this.eat(29)?this.flowEnumMemberInit():{type:"none",loc};return{id,init};}flowEnumCheckExplicitTypeMismatch(loc,context,expectedType){const{explicitType}=context;if(explicitType===null){return;}if(explicitType!==expectedType){this.flowEnumErrorInvalidMemberInitializer(loc,context);}}flowEnumMembers(_ref99){let{enumName,explicitType}=_ref99;const seenNames=new Set();const members={booleanMembers:[],numberMembers:[],stringMembers:[],defaultedMembers:[]};let hasUnknownMembers=false;while(!this.match(8)){if(this.eat(21)){hasUnknownMembers=true;break;}const memberNode=this.startNode();const{id,init}=this.flowEnumMemberRaw();const memberName=id.name;if(memberName===""){continue;}if(/^[a-z]/.test(memberName)){this.raise(FlowErrors.EnumInvalidMemberName,id,{memberName,suggestion:memberName[0].toUpperCase()+memberName.slice(1),enumName});}if(seenNames.has(memberName)){this.raise(FlowErrors.EnumDuplicateMemberName,id,{memberName,enumName});}seenNames.add(memberName);const context={enumName,explicitType,memberName};memberNode.id=id;switch(init.type){case"boolean":{this.flowEnumCheckExplicitTypeMismatch(init.loc,context,"boolean");memberNode.init=init.value;members.booleanMembers.push(this.finishNode(memberNode,"EnumBooleanMember"));break;}case"number":{this.flowEnumCheckExplicitTypeMismatch(init.loc,context,"number");memberNode.init=init.value;members.numberMembers.push(this.finishNode(memberNode,"EnumNumberMember"));break;}case"string":{this.flowEnumCheckExplicitTypeMismatch(init.loc,context,"string");memberNode.init=init.value;members.stringMembers.push(this.finishNode(memberNode,"EnumStringMember"));break;}case"invalid":{throw this.flowEnumErrorInvalidMemberInitializer(init.loc,context);}case"none":{switch(explicitType){case"boolean":this.flowEnumErrorBooleanMemberNotInitialized(init.loc,context);break;case"number":this.flowEnumErrorNumberMemberNotInitialized(init.loc,context);break;default:members.defaultedMembers.push(this.finishNode(memberNode,"EnumDefaultedMember"));}}}if(!this.match(8)){this.expect(12);}}return{members,hasUnknownMembers};}flowEnumStringMembers(initializedMembers,defaultedMembers,_ref100){let{enumName}=_ref100;if(initializedMembers.length===0){return defaultedMembers;}else if(defaultedMembers.length===0){return initializedMembers;}else if(defaultedMembers.length>initializedMembers.length){for(const member of initializedMembers){this.flowEnumErrorStringMemberInconsistentlyInitialized(member,{enumName});}return defaultedMembers;}else{for(const member of defaultedMembers){this.flowEnumErrorStringMemberInconsistentlyInitialized(member,{enumName});}return initializedMembers;}}flowEnumParseExplicitType(_ref101){let{enumName}=_ref101;if(!this.eatContextual(102))return null;if(!tokenIsIdentifier(this.state.type)){throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied,this.state.startLoc,{enumName});}const{value}=this.state;this.next();if(value!=="boolean"&&value!=="number"&&value!=="string"&&value!=="symbol"){this.raise(FlowErrors.EnumInvalidExplicitType,this.state.startLoc,{enumName,invalidEnumType:value});}return value;}flowEnumBody(node,id){const enumName=id.name;const nameLoc=id.loc.start;const explicitType=this.flowEnumParseExplicitType({enumName});this.expect(5);const{members,hasUnknownMembers}=this.flowEnumMembers({enumName,explicitType});node.hasUnknownMembers=hasUnknownMembers;switch(explicitType){case"boolean":node.explicitType=true;node.members=members.booleanMembers;this.expect(8);return this.finishNode(node,"EnumBooleanBody");case"number":node.explicitType=true;node.members=members.numberMembers;this.expect(8);return this.finishNode(node,"EnumNumberBody");case"string":node.explicitType=true;node.members=this.flowEnumStringMembers(members.stringMembers,members.defaultedMembers,{enumName});this.expect(8);return this.finishNode(node,"EnumStringBody");case"symbol":node.members=members.defaultedMembers;this.expect(8);return this.finishNode(node,"EnumSymbolBody");default:{const empty=()=>{node.members=[];this.expect(8);return this.finishNode(node,"EnumStringBody");};node.explicitType=false;const boolsLen=members.booleanMembers.length;const numsLen=members.numberMembers.length;const strsLen=members.stringMembers.length;const defaultedLen=members.defaultedMembers.length;if(!boolsLen&&!numsLen&&!strsLen&&!defaultedLen){return empty();}else if(!boolsLen&&!numsLen){node.members=this.flowEnumStringMembers(members.stringMembers,members.defaultedMembers,{enumName});this.expect(8);return this.finishNode(node,"EnumStringBody");}else if(!numsLen&&!strsLen&&boolsLen>=defaultedLen){for(const member of members.defaultedMembers){this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start,{enumName,memberName:member.id.name});}node.members=members.booleanMembers;this.expect(8);return this.finishNode(node,"EnumBooleanBody");}else if(!boolsLen&&!strsLen&&numsLen>=defaultedLen){for(const member of members.defaultedMembers){this.flowEnumErrorNumberMemberNotInitialized(member.loc.start,{enumName,memberName:member.id.name});}node.members=members.numberMembers;this.expect(8);return this.finishNode(node,"EnumNumberBody");}else{this.raise(FlowErrors.EnumInconsistentMemberValues,nameLoc,{enumName});return empty();}}}}flowParseEnumDeclaration(node){const id=this.parseIdentifier();node.id=id;node.body=this.flowEnumBody(this.startNode(),id);return this.finishNode(node,"EnumDeclaration");}isLookaheadToken_lt(){const next=this.nextTokenStart();if(this.input.charCodeAt(next)===60){const afterNext=this.input.charCodeAt(next+1);return afterNext!==60&&afterNext!==61;}return false;}maybeUnwrapTypeCastExpression(node){return node.type==="TypeCastExpression"?node.expression:node;}};const entities={__proto__:null,quot:"\u0022",amp:"&",apos:"\u0027",lt:"<",gt:">",nbsp:"\u00A0",iexcl:"\u00A1",cent:"\u00A2",pound:"\u00A3",curren:"\u00A4",yen:"\u00A5",brvbar:"\u00A6",sect:"\u00A7",uml:"\u00A8",copy:"\u00A9",ordf:"\u00AA",laquo:"\u00AB",not:"\u00AC",shy:"\u00AD",reg:"\u00AE",macr:"\u00AF",deg:"\u00B0",plusmn:"\u00B1",sup2:"\u00B2",sup3:"\u00B3",acute:"\u00B4",micro:"\u00B5",para:"\u00B6",middot:"\u00B7",cedil:"\u00B8",sup1:"\u00B9",ordm:"\u00BA",raquo:"\u00BB",frac14:"\u00BC",frac12:"\u00BD",frac34:"\u00BE",iquest:"\u00BF",Agrave:"\u00C0",Aacute:"\u00C1",Acirc:"\u00C2",Atilde:"\u00C3",Auml:"\u00C4",Aring:"\u00C5",AElig:"\u00C6",Ccedil:"\u00C7",Egrave:"\u00C8",Eacute:"\u00C9",Ecirc:"\u00CA",Euml:"\u00CB",Igrave:"\u00CC",Iacute:"\u00CD",Icirc:"\u00CE",Iuml:"\u00CF",ETH:"\u00D0",Ntilde:"\u00D1",Ograve:"\u00D2",Oacute:"\u00D3",Ocirc:"\u00D4",Otilde:"\u00D5",Ouml:"\u00D6",times:"\u00D7",Oslash:"\u00D8",Ugrave:"\u00D9",Uacute:"\u00DA",Ucirc:"\u00DB",Uuml:"\u00DC",Yacute:"\u00DD",THORN:"\u00DE",szlig:"\u00DF",agrave:"\u00E0",aacute:"\u00E1",acirc:"\u00E2",atilde:"\u00E3",auml:"\u00E4",aring:"\u00E5",aelig:"\u00E6",ccedil:"\u00E7",egrave:"\u00E8",eacute:"\u00E9",ecirc:"\u00EA",euml:"\u00EB",igrave:"\u00EC",iacute:"\u00ED",icirc:"\u00EE",iuml:"\u00EF",eth:"\u00F0",ntilde:"\u00F1",ograve:"\u00F2",oacute:"\u00F3",ocirc:"\u00F4",otilde:"\u00F5",ouml:"\u00F6",divide:"\u00F7",oslash:"\u00F8",ugrave:"\u00F9",uacute:"\u00FA",ucirc:"\u00FB",uuml:"\u00FC",yacute:"\u00FD",thorn:"\u00FE",yuml:"\u00FF",OElig:"\u0152",oelig:"\u0153",Scaron:"\u0160",scaron:"\u0161",Yuml:"\u0178",fnof:"\u0192",circ:"\u02C6",tilde:"\u02DC",Alpha:"\u0391",Beta:"\u0392",Gamma:"\u0393",Delta:"\u0394",Epsilon:"\u0395",Zeta:"\u0396",Eta:"\u0397",Theta:"\u0398",Iota:"\u0399",Kappa:"\u039A",Lambda:"\u039B",Mu:"\u039C",Nu:"\u039D",Xi:"\u039E",Omicron:"\u039F",Pi:"\u03A0",Rho:"\u03A1",Sigma:"\u03A3",Tau:"\u03A4",Upsilon:"\u03A5",Phi:"\u03A6",Chi:"\u03A7",Psi:"\u03A8",Omega:"\u03A9",alpha:"\u03B1",beta:"\u03B2",gamma:"\u03B3",delta:"\u03B4",epsilon:"\u03B5",zeta:"\u03B6",eta:"\u03B7",theta:"\u03B8",iota:"\u03B9",kappa:"\u03BA",lambda:"\u03BB",mu:"\u03BC",nu:"\u03BD",xi:"\u03BE",omicron:"\u03BF",pi:"\u03C0",rho:"\u03C1",sigmaf:"\u03C2",sigma:"\u03C3",tau:"\u03C4",upsilon:"\u03C5",phi:"\u03C6",chi:"\u03C7",psi:"\u03C8",omega:"\u03C9",thetasym:"\u03D1",upsih:"\u03D2",piv:"\u03D6",ensp:"\u2002",emsp:"\u2003",thinsp:"\u2009",zwnj:"\u200C",zwj:"\u200D",lrm:"\u200E",rlm:"\u200F",ndash:"\u2013",mdash:"\u2014",lsquo:"\u2018",rsquo:"\u2019",sbquo:"\u201A",ldquo:"\u201C",rdquo:"\u201D",bdquo:"\u201E",dagger:"\u2020",Dagger:"\u2021",bull:"\u2022",hellip:"\u2026",permil:"\u2030",prime:"\u2032",Prime:"\u2033",lsaquo:"\u2039",rsaquo:"\u203A",oline:"\u203E",frasl:"\u2044",euro:"\u20AC",image:"\u2111",weierp:"\u2118",real:"\u211C",trade:"\u2122",alefsym:"\u2135",larr:"\u2190",uarr:"\u2191",rarr:"\u2192",darr:"\u2193",harr:"\u2194",crarr:"\u21B5",lArr:"\u21D0",uArr:"\u21D1",rArr:"\u21D2",dArr:"\u21D3",hArr:"\u21D4",forall:"\u2200",part:"\u2202",exist:"\u2203",empty:"\u2205",nabla:"\u2207",isin:"\u2208",notin:"\u2209",ni:"\u220B",prod:"\u220F",sum:"\u2211",minus:"\u2212",lowast:"\u2217",radic:"\u221A",prop:"\u221D",infin:"\u221E",ang:"\u2220",and:"\u2227",or:"\u2228",cap:"\u2229",cup:"\u222A",int:"\u222B",there4:"\u2234",sim:"\u223C",cong:"\u2245",asymp:"\u2248",ne:"\u2260",equiv:"\u2261",le:"\u2264",ge:"\u2265",sub:"\u2282",sup:"\u2283",nsub:"\u2284",sube:"\u2286",supe:"\u2287",oplus:"\u2295",otimes:"\u2297",perp:"\u22A5",sdot:"\u22C5",lceil:"\u2308",rceil:"\u2309",lfloor:"\u230A",rfloor:"\u230B",lang:"\u2329",rang:"\u232A",loz:"\u25CA",spades:"\u2660",clubs:"\u2663",hearts:"\u2665",diams:"\u2666"};const JsxErrors=ParseErrorEnum(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["jsx"])))({AttributeIsEmpty:"JSX attributes must only be assigned a non-empty expression.",MissingClosingTagElement:_ref102=>{let{openingTagName}=_ref102;return"Expected corresponding JSX closing tag for <".concat(openingTagName,">.");},MissingClosingTagFragment:"Expected corresponding JSX closing tag for <>.",UnexpectedSequenceExpression:"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?",UnexpectedToken:_ref103=>{let{unexpected,HTMLEntity}=_ref103;return"Unexpected token `".concat(unexpected,"`. Did you mean `").concat(HTMLEntity,"` or `{'").concat(unexpected,"'}`?");},UnsupportedJsxValue:"JSX value should be either an expression or a quoted JSX text.",UnterminatedJsxContent:"Unterminated JSX contents.",UnwrappedAdjacentJSXElements:"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"});function isFragment(object){return object?object.type==="JSXOpeningFragment"||object.type==="JSXClosingFragment":false;}function getQualifiedJSXName(object){if(object.type==="JSXIdentifier"){return object.name;}if(object.type==="JSXNamespacedName"){return object.namespace.name+":"+object.name.name;}if(object.type==="JSXMemberExpression"){return getQualifiedJSXName(object.object)+"."+getQualifiedJSXName(object.property);}throw new Error("Node had unexpected type: "+object.type);}var jsx=superClass=>class JSXParserMixin extends superClass{jsxReadToken(){let out="";let chunkStart=this.state.pos;for(;;){if(this.state.pos>=this.length){throw this.raise(JsxErrors.UnterminatedJsxContent,this.state.startLoc);}const ch=this.input.charCodeAt(this.state.pos);switch(ch){case 60:case 123:if(this.state.pos===this.state.start){if(ch===60&&this.state.canStartJSXElement){++this.state.pos;this.finishToken(142);}else{super.getTokenFromCode(ch);}return;}out+=this.input.slice(chunkStart,this.state.pos);this.finishToken(141,out);return;case 38:out+=this.input.slice(chunkStart,this.state.pos);out+=this.jsxReadEntity();chunkStart=this.state.pos;break;case 62:case 125:default:if(isNewLine(ch)){out+=this.input.slice(chunkStart,this.state.pos);out+=this.jsxReadNewLine(true);chunkStart=this.state.pos;}else{++this.state.pos;}}}}jsxReadNewLine(normalizeCRLF){const ch=this.input.charCodeAt(this.state.pos);let out;++this.state.pos;if(ch===13&&this.input.charCodeAt(this.state.pos)===10){++this.state.pos;out=normalizeCRLF?"\n":"\r\n";}else{out=String.fromCharCode(ch);}++this.state.curLine;this.state.lineStart=this.state.pos;return out;}jsxReadString(quote){let out="";let chunkStart=++this.state.pos;for(;;){if(this.state.pos>=this.length){throw this.raise(Errors.UnterminatedString,this.state.startLoc);}const ch=this.input.charCodeAt(this.state.pos);if(ch===quote)break;if(ch===38){out+=this.input.slice(chunkStart,this.state.pos);out+=this.jsxReadEntity();chunkStart=this.state.pos;}else if(isNewLine(ch)){out+=this.input.slice(chunkStart,this.state.pos);out+=this.jsxReadNewLine(false);chunkStart=this.state.pos;}else{++this.state.pos;}}out+=this.input.slice(chunkStart,this.state.pos++);this.finishToken(133,out);}jsxReadEntity(){const startPos=++this.state.pos;if(this.codePointAtPos(this.state.pos)===35){++this.state.pos;let radix=10;if(this.codePointAtPos(this.state.pos)===120){radix=16;++this.state.pos;}const codePoint=this.readInt(radix,undefined,false,"bail");if(codePoint!==null&&this.codePointAtPos(this.state.pos)===59){++this.state.pos;return String.fromCodePoint(codePoint);}}else{let count=0;let semi=false;while(count++<10&&this.state.pos<this.length&&!(semi=this.codePointAtPos(this.state.pos)==59)){++this.state.pos;}if(semi){const desc=this.input.slice(startPos,this.state.pos);const entity=entities[desc];++this.state.pos;if(entity){return entity;}}}this.state.pos=startPos;return"&";}jsxReadWord(){let ch;const start=this.state.pos;do{ch=this.input.charCodeAt(++this.state.pos);}while(isIdentifierChar(ch)||ch===45);this.finishToken(140,this.input.slice(start,this.state.pos));}jsxParseIdentifier(){const node=this.startNode();if(this.match(140)){node.name=this.state.value;}else if(tokenIsKeyword(this.state.type)){node.name=tokenLabelName(this.state.type);}else{this.unexpected();}this.next();return this.finishNode(node,"JSXIdentifier");}jsxParseNamespacedName(){const startLoc=this.state.startLoc;const name=this.jsxParseIdentifier();if(!this.eat(14))return name;const node=this.startNodeAt(startLoc);node.namespace=name;node.name=this.jsxParseIdentifier();return this.finishNode(node,"JSXNamespacedName");}jsxParseElementName(){const startLoc=this.state.startLoc;let node=this.jsxParseNamespacedName();if(node.type==="JSXNamespacedName"){return node;}while(this.eat(16)){const newNode=this.startNodeAt(startLoc);newNode.object=node;newNode.property=this.jsxParseIdentifier();node=this.finishNode(newNode,"JSXMemberExpression");}return node;}jsxParseAttributeValue(){let node;switch(this.state.type){case 5:node=this.startNode();this.setContext(types.brace);this.next();node=this.jsxParseExpressionContainer(node,types.j_oTag);if(node.expression.type==="JSXEmptyExpression"){this.raise(JsxErrors.AttributeIsEmpty,node);}return node;case 142:case 133:return this.parseExprAtom();default:throw this.raise(JsxErrors.UnsupportedJsxValue,this.state.startLoc);}}jsxParseEmptyExpression(){const node=this.startNodeAt(this.state.lastTokEndLoc);return this.finishNodeAt(node,"JSXEmptyExpression",this.state.startLoc);}jsxParseSpreadChild(node){this.next();node.expression=this.parseExpression();this.setContext(types.j_expr);this.state.canStartJSXElement=true;this.expect(8);return this.finishNode(node,"JSXSpreadChild");}jsxParseExpressionContainer(node,previousContext){if(this.match(8)){node.expression=this.jsxParseEmptyExpression();}else{const expression=this.parseExpression();node.expression=expression;}this.setContext(previousContext);this.state.canStartJSXElement=true;this.expect(8);return this.finishNode(node,"JSXExpressionContainer");}jsxParseAttribute(){const node=this.startNode();if(this.match(5)){this.setContext(types.brace);this.next();this.expect(21);node.argument=this.parseMaybeAssignAllowIn();this.setContext(types.j_oTag);this.state.canStartJSXElement=true;this.expect(8);return this.finishNode(node,"JSXSpreadAttribute");}node.name=this.jsxParseNamespacedName();node.value=this.eat(29)?this.jsxParseAttributeValue():null;return this.finishNode(node,"JSXAttribute");}jsxParseOpeningElementAt(startLoc){const node=this.startNodeAt(startLoc);if(this.eat(143)){return this.finishNode(node,"JSXOpeningFragment");}node.name=this.jsxParseElementName();return this.jsxParseOpeningElementAfterName(node);}jsxParseOpeningElementAfterName(node){const attributes=[];while(!this.match(56)&&!this.match(143)){attributes.push(this.jsxParseAttribute());}node.attributes=attributes;node.selfClosing=this.eat(56);this.expect(143);return this.finishNode(node,"JSXOpeningElement");}jsxParseClosingElementAt(startLoc){const node=this.startNodeAt(startLoc);if(this.eat(143)){return this.finishNode(node,"JSXClosingFragment");}node.name=this.jsxParseElementName();this.expect(143);return this.finishNode(node,"JSXClosingElement");}jsxParseElementAt(startLoc){const node=this.startNodeAt(startLoc);const children=[];const openingElement=this.jsxParseOpeningElementAt(startLoc);let closingElement=null;if(!openingElement.selfClosing){contents:for(;;){switch(this.state.type){case 142:startLoc=this.state.startLoc;this.next();if(this.eat(56)){closingElement=this.jsxParseClosingElementAt(startLoc);break contents;}children.push(this.jsxParseElementAt(startLoc));break;case 141:children.push(this.parseExprAtom());break;case 5:{const node=this.startNode();this.setContext(types.brace);this.next();if(this.match(21)){children.push(this.jsxParseSpreadChild(node));}else{children.push(this.jsxParseExpressionContainer(node,types.j_expr));}break;}default:this.unexpected();}}if(isFragment(openingElement)&&!isFragment(closingElement)&&closingElement!==null){this.raise(JsxErrors.MissingClosingTagFragment,closingElement);}else if(!isFragment(openingElement)&&isFragment(closingElement)){this.raise(JsxErrors.MissingClosingTagElement,closingElement,{openingTagName:getQualifiedJSXName(openingElement.name)});}else if(!isFragment(openingElement)&&!isFragment(closingElement)){if(getQualifiedJSXName(closingElement.name)!==getQualifiedJSXName(openingElement.name)){this.raise(JsxErrors.MissingClosingTagElement,closingElement,{openingTagName:getQualifiedJSXName(openingElement.name)});}}}if(isFragment(openingElement)){node.openingFragment=openingElement;node.closingFragment=closingElement;}else{node.openingElement=openingElement;node.closingElement=closingElement;}node.children=children;if(this.match(47)){throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements,this.state.startLoc);}return isFragment(openingElement)?this.finishNode(node,"JSXFragment"):this.finishNode(node,"JSXElement");}jsxParseElement(){const startLoc=this.state.startLoc;this.next();return this.jsxParseElementAt(startLoc);}setContext(newContext){const{context}=this.state;context[context.length-1]=newContext;}parseExprAtom(refExpressionErrors){if(this.match(141)){return this.parseLiteral(this.state.value,"JSXText");}else if(this.match(142)){return this.jsxParseElement();}else if(this.match(47)&&this.input.charCodeAt(this.state.pos)!==33){this.replaceToken(142);return this.jsxParseElement();}else{return super.parseExprAtom(refExpressionErrors);}}skipSpace(){const curContext=this.curContext();if(!curContext.preserveSpace)super.skipSpace();}getTokenFromCode(code){const context=this.curContext();if(context===types.j_expr){this.jsxReadToken();return;}if(context===types.j_oTag||context===types.j_cTag){if(isIdentifierStart(code)){this.jsxReadWord();return;}if(code===62){++this.state.pos;this.finishToken(143);return;}if((code===34||code===39)&&context===types.j_oTag){this.jsxReadString(code);return;}}if(code===60&&this.state.canStartJSXElement&&this.input.charCodeAt(this.state.pos+1)!==33){++this.state.pos;this.finishToken(142);return;}super.getTokenFromCode(code);}updateContext(prevType){const{context,type}=this.state;if(type===56&&prevType===142){context.splice(-2,2,types.j_cTag);this.state.canStartJSXElement=false;}else if(type===142){context.push(types.j_oTag);}else if(type===143){const out=context[context.length-1];if(out===types.j_oTag&&prevType===56||out===types.j_cTag){context.pop();this.state.canStartJSXElement=context[context.length-1]===types.j_expr;}else{this.setContext(types.j_expr);this.state.canStartJSXElement=true;}}else{this.state.canStartJSXElement=tokenComesBeforeExpression(type);}}};class TypeScriptScope extends Scope{constructor(){super(...arguments);this.tsNames=new Map();}}class TypeScriptScopeHandler extends ScopeHandler{constructor(){super(...arguments);this.importsStack=[];}createScope(flags){this.importsStack.push(new Set());return new TypeScriptScope(flags);}enter(flags){if(flags==256){this.importsStack.push(new Set());}super.enter(flags);}exit(){const flags=super.exit();if(flags==256){this.importsStack.pop();}return flags;}hasImport(name,allowShadow){const len=this.importsStack.length;if(this.importsStack[len-1].has(name)){return true;}if(!allowShadow&&len>1){for(let i=0;i<len-1;i++){if(this.importsStack[i].has(name))return true;}}return false;}declareName(name,bindingType,loc){if(bindingType&4096){if(this.hasImport(name,true)){this.parser.raise(Errors.VarRedeclaration,loc,{identifierName:name});}this.importsStack[this.importsStack.length-1].add(name);return;}const scope=this.currentScope();let type=scope.tsNames.get(name)||0;if(bindingType&1024){this.maybeExportDefined(scope,name);scope.tsNames.set(name,type|16);return;}super.declareName(name,bindingType,loc);if(bindingType&2){if(!(bindingType&1)){this.checkRedeclarationInScope(scope,name,bindingType,loc);this.maybeExportDefined(scope,name);}type=type|1;}if(bindingType&256){type=type|2;}if(bindingType&512){type=type|4;}if(bindingType&128){type=type|8;}if(type)scope.tsNames.set(name,type);}isRedeclaredInScope(scope,name,bindingType){const type=scope.tsNames.get(name);if((type&2)>0){if(bindingType&256){const isConst=!!(bindingType&512);const wasConst=(type&4)>0;return isConst!==wasConst;}return true;}if(bindingType&128&&(type&8)>0){if(scope.names.get(name)&2){return!!(bindingType&1);}else{return false;}}if(bindingType&2&&(type&1)>0){return true;}return super.isRedeclaredInScope(scope,name,bindingType);}checkLocalExport(id){const{name}=id;if(this.hasImport(name))return;const len=this.scopeStack.length;for(let i=len-1;i>=0;i--){const scope=this.scopeStack[i];const type=scope.tsNames.get(name);if((type&1)>0||(type&16)>0){return;}}super.checkLocalExport(id);}}const getOwn$1=(object,key)=>Object.hasOwnProperty.call(object,key)&&object[key];const unwrapParenthesizedExpression=node=>{return node.type==="ParenthesizedExpression"?unwrapParenthesizedExpression(node.expression):node;};class LValParser extends NodeUtils{toAssignable(node){let isLHS=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var _node$extra,_node$extra3;let parenthesized=undefined;if(node.type==="ParenthesizedExpression"||(_node$extra=node.extra)!=null&&_node$extra.parenthesized){parenthesized=unwrapParenthesizedExpression(node);if(isLHS){if(parenthesized.type==="Identifier"){this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment,node);}else if(parenthesized.type!=="MemberExpression"&&!this.isOptionalMemberExpression(parenthesized)){this.raise(Errors.InvalidParenthesizedAssignment,node);}}else{this.raise(Errors.InvalidParenthesizedAssignment,node);}}switch(node.type){case"Identifier":case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":case"RestElement":break;case"ObjectExpression":node.type="ObjectPattern";for(let i=0,length=node.properties.length,last=length-1;i<length;i++){var _node$extra2;const prop=node.properties[i];const isLast=i===last;this.toAssignableObjectExpressionProp(prop,isLast,isLHS);if(isLast&&prop.type==="RestElement"&&(_node$extra2=node.extra)!=null&&_node$extra2.trailingCommaLoc){this.raise(Errors.RestTrailingComma,node.extra.trailingCommaLoc);}}break;case"ObjectProperty":{const{key,value}=node;if(this.isPrivateName(key)){this.classScope.usePrivateName(this.getPrivateNameSV(key),key.loc.start);}this.toAssignable(value,isLHS);break;}case"SpreadElement":{throw new Error("Internal @babel/parser error (this is a bug, please report it)."+" SpreadElement should be converted by .toAssignable's caller.");}case"ArrayExpression":node.type="ArrayPattern";this.toAssignableList(node.elements,(_node$extra3=node.extra)==null?void 0:_node$extra3.trailingCommaLoc,isLHS);break;case"AssignmentExpression":if(node.operator!=="="){this.raise(Errors.MissingEqInAssignment,node.left.loc.end);}node.type="AssignmentPattern";delete node.operator;this.toAssignable(node.left,isLHS);break;case"ParenthesizedExpression":this.toAssignable(parenthesized,isLHS);break;}}toAssignableObjectExpressionProp(prop,isLast,isLHS){if(prop.type==="ObjectMethod"){this.raise(prop.kind==="get"||prop.kind==="set"?Errors.PatternHasAccessor:Errors.PatternHasMethod,prop.key);}else if(prop.type==="SpreadElement"){prop.type="RestElement";const arg=prop.argument;this.checkToRestConversion(arg,false);this.toAssignable(arg,isLHS);if(!isLast){this.raise(Errors.RestTrailingComma,prop);}}else{this.toAssignable(prop,isLHS);}}toAssignableList(exprList,trailingCommaLoc,isLHS){const end=exprList.length-1;for(let i=0;i<=end;i++){const elt=exprList[i];if(!elt)continue;if(elt.type==="SpreadElement"){elt.type="RestElement";const arg=elt.argument;this.checkToRestConversion(arg,true);this.toAssignable(arg,isLHS);}else{this.toAssignable(elt,isLHS);}if(elt.type==="RestElement"){if(i<end){this.raise(Errors.RestTrailingComma,elt);}else if(trailingCommaLoc){this.raise(Errors.RestTrailingComma,trailingCommaLoc);}}}}isAssignable(node,isBinding){switch(node.type){case"Identifier":case"ObjectPattern":case"ArrayPattern":case"AssignmentPattern":case"RestElement":return true;case"ObjectExpression":{const last=node.properties.length-1;return node.properties.every((prop,i)=>{return prop.type!=="ObjectMethod"&&(i===last||prop.type!=="SpreadElement")&&this.isAssignable(prop);});}case"ObjectProperty":return this.isAssignable(node.value);case"SpreadElement":return this.isAssignable(node.argument);case"ArrayExpression":return node.elements.every(element=>element===null||this.isAssignable(element));case"AssignmentExpression":return node.operator==="=";case"ParenthesizedExpression":return this.isAssignable(node.expression);case"MemberExpression":case"OptionalMemberExpression":return!isBinding;default:return false;}}toReferencedList(exprList,isParenthesizedExpr){return exprList;}toReferencedListDeep(exprList,isParenthesizedExpr){this.toReferencedList(exprList,isParenthesizedExpr);for(const expr of exprList){if((expr==null?void 0:expr.type)==="ArrayExpression"){this.toReferencedListDeep(expr.elements);}}}parseSpread(refExpressionErrors){const node=this.startNode();this.next();node.argument=this.parseMaybeAssignAllowIn(refExpressionErrors,undefined);return this.finishNode(node,"SpreadElement");}parseRestBinding(){const node=this.startNode();this.next();node.argument=this.parseBindingAtom();return this.finishNode(node,"RestElement");}parseBindingAtom(){switch(this.state.type){case 0:{const node=this.startNode();this.next();node.elements=this.parseBindingList(3,93,1);return this.finishNode(node,"ArrayPattern");}case 5:return this.parseObjectLike(8,true);}return this.parseIdentifier();}parseBindingList(close,closeCharCode,flags){const allowEmpty=flags&1;const elts=[];let first=true;while(!this.eat(close)){if(first){first=false;}else{this.expect(12);}if(allowEmpty&&this.match(12)){elts.push(null);}else if(this.eat(close)){break;}else if(this.match(21)){elts.push(this.parseAssignableListItemTypes(this.parseRestBinding(),flags));if(!this.checkCommaAfterRest(closeCharCode)){this.expect(close);break;}}else{const decorators=[];if(this.match(26)&&this.hasPlugin("decorators")){this.raise(Errors.UnsupportedParameterDecorator,this.state.startLoc);}while(this.match(26)){decorators.push(this.parseDecorator());}elts.push(this.parseAssignableListItem(flags,decorators));}}return elts;}parseBindingRestProperty(prop){this.next();prop.argument=this.parseIdentifier();this.checkCommaAfterRest(125);return this.finishNode(prop,"RestElement");}parseBindingProperty(){const prop=this.startNode();const{type,startLoc}=this.state;if(type===21){return this.parseBindingRestProperty(prop);}else if(type===138){this.expectPlugin("destructuringPrivate",startLoc);this.classScope.usePrivateName(this.state.value,startLoc);prop.key=this.parsePrivateName();}else{this.parsePropertyName(prop);}prop.method=false;return this.parseObjPropValue(prop,startLoc,false,false,true,false);}parseAssignableListItem(flags,decorators){const left=this.parseMaybeDefault();this.parseAssignableListItemTypes(left,flags);const elt=this.parseMaybeDefault(left.loc.start,left);if(decorators.length){left.decorators=decorators;}return elt;}parseAssignableListItemTypes(param,flags){return param;}parseMaybeDefault(startLoc,left){var _startLoc,_left;(_startLoc=startLoc)!=null?_startLoc:startLoc=this.state.startLoc;left=(_left=left)!=null?_left:this.parseBindingAtom();if(!this.eat(29))return left;const node=this.startNodeAt(startLoc);node.left=left;node.right=this.parseMaybeAssignAllowIn();return this.finishNode(node,"AssignmentPattern");}isValidLVal(type,isUnparenthesizedInAssign,binding){return getOwn$1({AssignmentPattern:"left",RestElement:"argument",ObjectProperty:"value",ParenthesizedExpression:"expression",ArrayPattern:"elements",ObjectPattern:"properties"},type);}isOptionalMemberExpression(expression){return expression.type==="OptionalMemberExpression";}checkLVal(expression,_ref104){let{in:ancestor,binding=64,checkClashes=false,strictModeChanged=false,hasParenthesizedAncestor=false}=_ref104;var _expression$extra;const type=expression.type;if(this.isObjectMethod(expression))return;const isOptionalMemberExpression=this.isOptionalMemberExpression(expression);if(isOptionalMemberExpression||type==="MemberExpression"){if(isOptionalMemberExpression){this.expectPlugin("optionalChainingAssign",expression.loc.start);if(ancestor.type!=="AssignmentExpression"){this.raise(Errors.InvalidLhsOptionalChaining,expression,{ancestor});}}if(binding!==64){this.raise(Errors.InvalidPropertyBindingPattern,expression);}return;}if(type==="Identifier"){this.checkIdentifier(expression,binding,strictModeChanged);const{name}=expression;if(checkClashes){if(checkClashes.has(name)){this.raise(Errors.ParamDupe,expression);}else{checkClashes.add(name);}}return;}const validity=this.isValidLVal(type,!(hasParenthesizedAncestor||(_expression$extra=expression.extra)!=null&&_expression$extra.parenthesized)&&ancestor.type==="AssignmentExpression",binding);if(validity===true)return;if(validity===false){const ParseErrorClass=binding===64?Errors.InvalidLhs:Errors.InvalidLhsBinding;this.raise(ParseErrorClass,expression,{ancestor});return;}const[key,isParenthesizedExpression]=Array.isArray(validity)?validity:[validity,type==="ParenthesizedExpression"];const nextAncestor=type==="ArrayPattern"||type==="ObjectPattern"?{type}:ancestor;for(const child of[].concat(expression[key])){if(child){this.checkLVal(child,{in:nextAncestor,binding,checkClashes,strictModeChanged,hasParenthesizedAncestor:isParenthesizedExpression});}}}checkIdentifier(at,bindingType){let strictModeChanged=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(this.state.strict&&(strictModeChanged?isStrictBindReservedWord(at.name,this.inModule):isStrictBindOnlyReservedWord(at.name))){if(bindingType===64){this.raise(Errors.StrictEvalArguments,at,{referenceName:at.name});}else{this.raise(Errors.StrictEvalArgumentsBinding,at,{bindingName:at.name});}}if(bindingType&8192&&at.name==="let"){this.raise(Errors.LetInLexicalBinding,at);}if(!(bindingType&64)){this.declareNameFromIdentifier(at,bindingType);}}declareNameFromIdentifier(identifier,binding){this.scope.declareName(identifier.name,binding,identifier.loc.start);}checkToRestConversion(node,allowPattern){switch(node.type){case"ParenthesizedExpression":this.checkToRestConversion(node.expression,allowPattern);break;case"Identifier":case"MemberExpression":break;case"ArrayExpression":case"ObjectExpression":if(allowPattern)break;default:this.raise(Errors.InvalidRestAssignmentPattern,node);}}checkCommaAfterRest(close){if(!this.match(12)){return false;}this.raise(this.lookaheadCharCode()===close?Errors.RestTrailingComma:Errors.ElementAfterRest,this.state.startLoc);return true;}}const getOwn=(object,key)=>Object.hasOwnProperty.call(object,key)&&object[key];function nonNull(x){if(x==null){throw new Error("Unexpected ".concat(x," value."));}return x;}function assert(x){if(!x){throw new Error("Assert fail");}}const TSErrors=ParseErrorEnum(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["typescript"])))({AbstractMethodHasImplementation:_ref105=>{let{methodName}=_ref105;return"Method '".concat(methodName,"' cannot have an implementation because it is marked abstract.");},AbstractPropertyHasInitializer:_ref106=>{let{propertyName}=_ref106;return"Property '".concat(propertyName,"' cannot have an initializer because it is marked abstract.");},AccesorCannotDeclareThisParameter:"'get' and 'set' accessors cannot declare 'this' parameters.",AccesorCannotHaveTypeParameters:"An accessor cannot have type parameters.",AccessorCannotBeOptional:"An 'accessor' property cannot be declared optional.",ClassMethodHasDeclare:"Class methods cannot have the 'declare' modifier.",ClassMethodHasReadonly:"Class methods cannot have the 'readonly' modifier.",ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.",ConstructorHasTypeParameters:"Type parameters cannot appear on a constructor declaration.",DeclareAccessor:_ref107=>{let{kind}=_ref107;return"'declare' is not allowed in ".concat(kind,"ters.");},DeclareClassFieldHasInitializer:"Initializers are not allowed in ambient contexts.",DeclareFunctionHasImplementation:"An implementation cannot be declared in ambient contexts.",DuplicateAccessibilityModifier:_ref108=>{let{modifier}=_ref108;return"Accessibility modifier already seen.";},DuplicateModifier:_ref109=>{let{modifier}=_ref109;return"Duplicate modifier: '".concat(modifier,"'.");},EmptyHeritageClauseType:_ref110=>{let{token}=_ref110;return"'".concat(token,"' list cannot be empty.");},EmptyTypeArguments:"Type argument list cannot be empty.",EmptyTypeParameters:"Type parameter list cannot be empty.",ExpectedAmbientAfterExportDeclare:"'export declare' must be followed by an ambient declaration.",ImportAliasHasImportType:"An import alias can not use 'import type'.",ImportReflectionHasImportType:"An `import module` declaration can not use `type` modifier",IncompatibleModifiers:_ref111=>{let{modifiers}=_ref111;return"'".concat(modifiers[0],"' modifier cannot be used with '").concat(modifiers[1],"' modifier.");},IndexSignatureHasAbstract:"Index signatures cannot have the 'abstract' modifier.",IndexSignatureHasAccessibility:_ref112=>{let{modifier}=_ref112;return"Index signatures cannot have an accessibility modifier ('".concat(modifier,"').");},IndexSignatureHasDeclare:"Index signatures cannot have the 'declare' modifier.",IndexSignatureHasOverride:"'override' modifier cannot appear on an index signature.",IndexSignatureHasStatic:"Index signatures cannot have the 'static' modifier.",InitializerNotAllowedInAmbientContext:"Initializers are not allowed in ambient contexts.",InvalidModifierOnTypeMember:_ref113=>{let{modifier}=_ref113;return"'".concat(modifier,"' modifier cannot appear on a type member.");},InvalidModifierOnTypeParameter:_ref114=>{let{modifier}=_ref114;return"'".concat(modifier,"' modifier cannot appear on a type parameter.");},InvalidModifierOnTypeParameterPositions:_ref115=>{let{modifier}=_ref115;return"'".concat(modifier,"' modifier can only appear on a type parameter of a class, interface or type alias.");},InvalidModifiersOrder:_ref116=>{let{orderedModifiers}=_ref116;return"'".concat(orderedModifiers[0],"' modifier must precede '").concat(orderedModifiers[1],"' modifier.");},InvalidPropertyAccessAfterInstantiationExpression:"Invalid property access after an instantiation expression. "+"You can either wrap the instantiation expression in parentheses, or delete the type arguments.",InvalidTupleMemberLabel:"Tuple members must be labeled with a simple identifier.",MissingInterfaceName:"'interface' declarations must be followed by an identifier.",NonAbstractClassHasAbstractMethod:"Abstract methods can only appear within an abstract class.",NonClassMethodPropertyHasAbstractModifer:"'abstract' modifier can only appear on a class, method, or property declaration.",OptionalTypeBeforeRequired:"A required element cannot follow an optional element.",OverrideNotInSubClass:"This member cannot have an 'override' modifier because its containing class does not extend another class.",PatternIsOptional:"A binding pattern parameter cannot be optional in an implementation signature.",PrivateElementHasAbstract:"Private elements cannot have the 'abstract' modifier.",PrivateElementHasAccessibility:_ref117=>{let{modifier}=_ref117;return"Private elements cannot have an accessibility modifier ('".concat(modifier,"').");},ReadonlyForMethodSignature:"'readonly' modifier can only appear on a property declaration or index signature.",ReservedArrowTypeParam:"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.",ReservedTypeAssertion:"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.",SetAccesorCannotHaveOptionalParameter:"A 'set' accessor cannot have an optional parameter.",SetAccesorCannotHaveRestParameter:"A 'set' accessor cannot have rest parameter.",SetAccesorCannotHaveReturnType:"A 'set' accessor cannot have a return type annotation.",SingleTypeParameterWithoutTrailingComma:_ref118=>{let{typeParameterName}=_ref118;return"Single type parameter ".concat(typeParameterName," should have a trailing comma. Example usage: <").concat(typeParameterName,",>.");},StaticBlockCannotHaveModifier:"Static class blocks cannot have any modifier.",TupleOptionalAfterType:"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).",TypeAnnotationAfterAssign:"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",TypeImportCannotSpecifyDefaultAndNamed:"A type-only import can specify a default import or named bindings, but not both.",TypeModifierIsUsedInTypeExports:"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.",TypeModifierIsUsedInTypeImports:"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.",UnexpectedParameterModifier:"A parameter property is only allowed in a constructor implementation.",UnexpectedReadonly:"'readonly' type modifier is only permitted on array and tuple literal types.",UnexpectedTypeAnnotation:"Did not expect a type annotation here.",UnexpectedTypeCastInParameter:"Unexpected type cast in parameter position.",UnsupportedImportTypeArgument:"Argument in a type import must be a string literal.",UnsupportedParameterPropertyKind:"A parameter property may not be declared using a binding pattern.",UnsupportedSignatureParameterKind:_ref119=>{let{type}=_ref119;return"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ".concat(type,".");}});function keywordTypeFromName(value){switch(value){case"any":return"TSAnyKeyword";case"boolean":return"TSBooleanKeyword";case"bigint":return"TSBigIntKeyword";case"never":return"TSNeverKeyword";case"number":return"TSNumberKeyword";case"object":return"TSObjectKeyword";case"string":return"TSStringKeyword";case"symbol":return"TSSymbolKeyword";case"undefined":return"TSUndefinedKeyword";case"unknown":return"TSUnknownKeyword";default:return undefined;}}function tsIsAccessModifier(modifier){return modifier==="private"||modifier==="public"||modifier==="protected";}function tsIsVarianceAnnotations(modifier){return modifier==="in"||modifier==="out";}var typescript=superClass=>class TypeScriptParserMixin extends superClass{constructor(){super(...arguments);this.tsParseInOutModifiers=this.tsParseModifiers.bind(this,{allowedModifiers:["in","out"],disallowedModifiers:["const","public","private","protected","readonly","declare","abstract","override"],errorTemplate:TSErrors.InvalidModifierOnTypeParameter});this.tsParseConstModifier=this.tsParseModifiers.bind(this,{allowedModifiers:["const"],disallowedModifiers:["in","out"],errorTemplate:TSErrors.InvalidModifierOnTypeParameterPositions});this.tsParseInOutConstModifiers=this.tsParseModifiers.bind(this,{allowedModifiers:["in","out","const"],disallowedModifiers:["public","private","protected","readonly","declare","abstract","override"],errorTemplate:TSErrors.InvalidModifierOnTypeParameter});}getScopeHandler(){return TypeScriptScopeHandler;}tsIsIdentifier(){return tokenIsIdentifier(this.state.type);}tsTokenCanFollowModifier(){return(this.match(0)||this.match(5)||this.match(55)||this.match(21)||this.match(138)||this.isLiteralPropertyName())&&!this.hasPrecedingLineBreak();}tsNextTokenCanFollowModifier(){this.next();return this.tsTokenCanFollowModifier();}tsParseModifier(allowedModifiers,stopOnStartOfClassStaticBlock){if(!tokenIsIdentifier(this.state.type)&&this.state.type!==58&&this.state.type!==75){return undefined;}const modifier=this.state.value;if(allowedModifiers.indexOf(modifier)!==-1){if(stopOnStartOfClassStaticBlock&&this.tsIsStartOfStaticBlocks()){return undefined;}if(this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))){return modifier;}}return undefined;}tsParseModifiers(_ref120,modified){let{allowedModifiers,disallowedModifiers,stopOnStartOfClassStaticBlock,errorTemplate=TSErrors.InvalidModifierOnTypeMember}=_ref120;const enforceOrder=(loc,modifier,before,after)=>{if(modifier===before&&modified[after]){this.raise(TSErrors.InvalidModifiersOrder,loc,{orderedModifiers:[before,after]});}};const incompatible=(loc,modifier,mod1,mod2)=>{if(modified[mod1]&&modifier===mod2||modified[mod2]&&modifier===mod1){this.raise(TSErrors.IncompatibleModifiers,loc,{modifiers:[mod1,mod2]});}};for(;;){const{startLoc}=this.state;const modifier=this.tsParseModifier(allowedModifiers.concat(disallowedModifiers!=null?disallowedModifiers:[]),stopOnStartOfClassStaticBlock);if(!modifier)break;if(tsIsAccessModifier(modifier)){if(modified.accessibility){this.raise(TSErrors.DuplicateAccessibilityModifier,startLoc,{modifier});}else{enforceOrder(startLoc,modifier,modifier,"override");enforceOrder(startLoc,modifier,modifier,"static");enforceOrder(startLoc,modifier,modifier,"readonly");modified.accessibility=modifier;}}else if(tsIsVarianceAnnotations(modifier)){if(modified[modifier]){this.raise(TSErrors.DuplicateModifier,startLoc,{modifier});}modified[modifier]=true;enforceOrder(startLoc,modifier,"in","out");}else{if(Object.hasOwnProperty.call(modified,modifier)){this.raise(TSErrors.DuplicateModifier,startLoc,{modifier});}else{enforceOrder(startLoc,modifier,"static","readonly");enforceOrder(startLoc,modifier,"static","override");enforceOrder(startLoc,modifier,"override","readonly");enforceOrder(startLoc,modifier,"abstract","override");incompatible(startLoc,modifier,"declare","override");incompatible(startLoc,modifier,"static","abstract");}modified[modifier]=true;}if(disallowedModifiers!=null&&disallowedModifiers.includes(modifier)){this.raise(errorTemplate,startLoc,{modifier});}}}tsIsListTerminator(kind){switch(kind){case"EnumMembers":case"TypeMembers":return this.match(8);case"HeritageClauseElement":return this.match(5);case"TupleElementTypes":return this.match(3);case"TypeParametersOrArguments":return this.match(48);}}tsParseList(kind,parseElement){const result=[];while(!this.tsIsListTerminator(kind)){result.push(parseElement());}return result;}tsParseDelimitedList(kind,parseElement,refTrailingCommaPos){return nonNull(this.tsParseDelimitedListWorker(kind,parseElement,true,refTrailingCommaPos));}tsParseDelimitedListWorker(kind,parseElement,expectSuccess,refTrailingCommaPos){const result=[];let trailingCommaPos=-1;for(;;){if(this.tsIsListTerminator(kind)){break;}trailingCommaPos=-1;const element=parseElement();if(element==null){return undefined;}result.push(element);if(this.eat(12)){trailingCommaPos=this.state.lastTokStartLoc.index;continue;}if(this.tsIsListTerminator(kind)){break;}if(expectSuccess){this.expect(12);}return undefined;}if(refTrailingCommaPos){refTrailingCommaPos.value=trailingCommaPos;}return result;}tsParseBracketedList(kind,parseElement,bracket,skipFirstToken,refTrailingCommaPos){if(!skipFirstToken){if(bracket){this.expect(0);}else{this.expect(47);}}const result=this.tsParseDelimitedList(kind,parseElement,refTrailingCommaPos);if(bracket){this.expect(3);}else{this.expect(48);}return result;}tsParseImportType(){const node=this.startNode();this.expect(83);this.expect(10);if(!this.match(133)){this.raise(TSErrors.UnsupportedImportTypeArgument,this.state.startLoc);}node.argument=super.parseExprAtom();this.expect(11);if(this.eat(16)){node.qualifier=this.tsParseEntityName();}if(this.match(47)){node.typeParameters=this.tsParseTypeArguments();}return this.finishNode(node,"TSImportType");}tsParseEntityName(){let allowReservedWords=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;let entity=this.parseIdentifier(allowReservedWords);while(this.eat(16)){const node=this.startNodeAtNode(entity);node.left=entity;node.right=this.parseIdentifier(allowReservedWords);entity=this.finishNode(node,"TSQualifiedName");}return entity;}tsParseTypeReference(){const node=this.startNode();node.typeName=this.tsParseEntityName();if(!this.hasPrecedingLineBreak()&&this.match(47)){node.typeParameters=this.tsParseTypeArguments();}return this.finishNode(node,"TSTypeReference");}tsParseThisTypePredicate(lhs){this.next();const node=this.startNodeAtNode(lhs);node.parameterName=lhs;node.typeAnnotation=this.tsParseTypeAnnotation(false);node.asserts=false;return this.finishNode(node,"TSTypePredicate");}tsParseThisTypeNode(){const node=this.startNode();this.next();return this.finishNode(node,"TSThisType");}tsParseTypeQuery(){const node=this.startNode();this.expect(87);if(this.match(83)){node.exprName=this.tsParseImportType();}else{node.exprName=this.tsParseEntityName();}if(!this.hasPrecedingLineBreak()&&this.match(47)){node.typeParameters=this.tsParseTypeArguments();}return this.finishNode(node,"TSTypeQuery");}tsParseTypeParameter(parseModifiers){const node=this.startNode();parseModifiers(node);node.name=this.tsParseTypeParameterName();node.constraint=this.tsEatThenParseType(81);node.default=this.tsEatThenParseType(29);return this.finishNode(node,"TSTypeParameter");}tsTryParseTypeParameters(parseModifiers){if(this.match(47)){return this.tsParseTypeParameters(parseModifiers);}}tsParseTypeParameters(parseModifiers){const node=this.startNode();if(this.match(47)||this.match(142)){this.next();}else{this.unexpected();}const refTrailingCommaPos={value:-1};node.params=this.tsParseBracketedList("TypeParametersOrArguments",this.tsParseTypeParameter.bind(this,parseModifiers),false,true,refTrailingCommaPos);if(node.params.length===0){this.raise(TSErrors.EmptyTypeParameters,node);}if(refTrailingCommaPos.value!==-1){this.addExtra(node,"trailingComma",refTrailingCommaPos.value);}return this.finishNode(node,"TSTypeParameterDeclaration");}tsFillSignature(returnToken,signature){const returnTokenRequired=returnToken===19;const paramsKey="parameters";const returnTypeKey="typeAnnotation";signature.typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);this.expect(10);signature[paramsKey]=this.tsParseBindingListForSignature();if(returnTokenRequired){signature[returnTypeKey]=this.tsParseTypeOrTypePredicateAnnotation(returnToken);}else if(this.match(returnToken)){signature[returnTypeKey]=this.tsParseTypeOrTypePredicateAnnotation(returnToken);}}tsParseBindingListForSignature(){const list=super.parseBindingList(11,41,2);for(const pattern of list){const{type}=pattern;if(type==="AssignmentPattern"||type==="TSParameterProperty"){this.raise(TSErrors.UnsupportedSignatureParameterKind,pattern,{type});}}return list;}tsParseTypeMemberSemicolon(){if(!this.eat(12)&&!this.isLineTerminator()){this.expect(13);}}tsParseSignatureMember(kind,node){this.tsFillSignature(14,node);this.tsParseTypeMemberSemicolon();return this.finishNode(node,kind);}tsIsUnambiguouslyIndexSignature(){this.next();if(tokenIsIdentifier(this.state.type)){this.next();return this.match(14);}return false;}tsTryParseIndexSignature(node){if(!(this.match(0)&&this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))){return;}this.expect(0);const id=this.parseIdentifier();id.typeAnnotation=this.tsParseTypeAnnotation();this.resetEndLocation(id);this.expect(3);node.parameters=[id];const type=this.tsTryParseTypeAnnotation();if(type)node.typeAnnotation=type;this.tsParseTypeMemberSemicolon();return this.finishNode(node,"TSIndexSignature");}tsParsePropertyOrMethodSignature(node,readonly){if(this.eat(17))node.optional=true;const nodeAny=node;if(this.match(10)||this.match(47)){if(readonly){this.raise(TSErrors.ReadonlyForMethodSignature,node);}const method=nodeAny;if(method.kind&&this.match(47)){this.raise(TSErrors.AccesorCannotHaveTypeParameters,this.state.curPosition());}this.tsFillSignature(14,method);this.tsParseTypeMemberSemicolon();const paramsKey="parameters";const returnTypeKey="typeAnnotation";if(method.kind==="get"){if(method[paramsKey].length>0){this.raise(Errors.BadGetterArity,this.state.curPosition());if(this.isThisParam(method[paramsKey][0])){this.raise(TSErrors.AccesorCannotDeclareThisParameter,this.state.curPosition());}}}else if(method.kind==="set"){if(method[paramsKey].length!==1){this.raise(Errors.BadSetterArity,this.state.curPosition());}else{const firstParameter=method[paramsKey][0];if(this.isThisParam(firstParameter)){this.raise(TSErrors.AccesorCannotDeclareThisParameter,this.state.curPosition());}if(firstParameter.type==="Identifier"&&firstParameter.optional){this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter,this.state.curPosition());}if(firstParameter.type==="RestElement"){this.raise(TSErrors.SetAccesorCannotHaveRestParameter,this.state.curPosition());}}if(method[returnTypeKey]){this.raise(TSErrors.SetAccesorCannotHaveReturnType,method[returnTypeKey]);}}else{method.kind="method";}return this.finishNode(method,"TSMethodSignature");}else{const property=nodeAny;if(readonly)property.readonly=true;const type=this.tsTryParseTypeAnnotation();if(type)property.typeAnnotation=type;this.tsParseTypeMemberSemicolon();return this.finishNode(property,"TSPropertySignature");}}tsParseTypeMember(){const node=this.startNode();if(this.match(10)||this.match(47)){return this.tsParseSignatureMember("TSCallSignatureDeclaration",node);}if(this.match(77)){const id=this.startNode();this.next();if(this.match(10)||this.match(47)){return this.tsParseSignatureMember("TSConstructSignatureDeclaration",node);}else{node.key=this.createIdentifier(id,"new");return this.tsParsePropertyOrMethodSignature(node,false);}}this.tsParseModifiers({allowedModifiers:["readonly"],disallowedModifiers:["declare","abstract","private","protected","public","static","override"]},node);const idx=this.tsTryParseIndexSignature(node);if(idx){return idx;}super.parsePropertyName(node);if(!node.computed&&node.key.type==="Identifier"&&(node.key.name==="get"||node.key.name==="set")&&this.tsTokenCanFollowModifier()){node.kind=node.key.name;super.parsePropertyName(node);}return this.tsParsePropertyOrMethodSignature(node,!!node.readonly);}tsParseTypeLiteral(){const node=this.startNode();node.members=this.tsParseObjectTypeMembers();return this.finishNode(node,"TSTypeLiteral");}tsParseObjectTypeMembers(){this.expect(5);const members=this.tsParseList("TypeMembers",this.tsParseTypeMember.bind(this));this.expect(8);return members;}tsIsStartOfMappedType(){this.next();if(this.eat(53)){return this.isContextual(122);}if(this.isContextual(122)){this.next();}if(!this.match(0)){return false;}this.next();if(!this.tsIsIdentifier()){return false;}this.next();return this.match(58);}tsParseMappedTypeParameter(){const node=this.startNode();node.name=this.tsParseTypeParameterName();node.constraint=this.tsExpectThenParseType(58);return this.finishNode(node,"TSTypeParameter");}tsParseMappedType(){const node=this.startNode();this.expect(5);if(this.match(53)){node.readonly=this.state.value;this.next();this.expectContextual(122);}else if(this.eatContextual(122)){node.readonly=true;}this.expect(0);node.typeParameter=this.tsParseMappedTypeParameter();node.nameType=this.eatContextual(93)?this.tsParseType():null;this.expect(3);if(this.match(53)){node.optional=this.state.value;this.next();this.expect(17);}else if(this.eat(17)){node.optional=true;}node.typeAnnotation=this.tsTryParseType();this.semicolon();this.expect(8);return this.finishNode(node,"TSMappedType");}tsParseTupleType(){const node=this.startNode();node.elementTypes=this.tsParseBracketedList("TupleElementTypes",this.tsParseTupleElementType.bind(this),true,false);let seenOptionalElement=false;node.elementTypes.forEach(elementNode=>{const{type}=elementNode;if(seenOptionalElement&&type!=="TSRestType"&&type!=="TSOptionalType"&&!(type==="TSNamedTupleMember"&&elementNode.optional)){this.raise(TSErrors.OptionalTypeBeforeRequired,elementNode);}seenOptionalElement||(seenOptionalElement=type==="TSNamedTupleMember"&&elementNode.optional||type==="TSOptionalType");});return this.finishNode(node,"TSTupleType");}tsParseTupleElementType(){const{startLoc}=this.state;const rest=this.eat(21);let labeled;let label;let optional;let type;const isWord=tokenIsKeywordOrIdentifier(this.state.type);const chAfterWord=isWord?this.lookaheadCharCode():null;if(chAfterWord===58){labeled=true;optional=false;label=this.parseIdentifier(true);this.expect(14);type=this.tsParseType();}else if(chAfterWord===63){optional=true;const startLoc=this.state.startLoc;const wordName=this.state.value;const typeOrLabel=this.tsParseNonArrayType();if(this.lookaheadCharCode()===58){labeled=true;label=this.createIdentifier(this.startNodeAt(startLoc),wordName);this.expect(17);this.expect(14);type=this.tsParseType();}else{labeled=false;type=typeOrLabel;this.expect(17);}}else{type=this.tsParseType();optional=this.eat(17);labeled=this.eat(14);}if(labeled){let labeledNode;if(label){labeledNode=this.startNodeAtNode(label);labeledNode.optional=optional;labeledNode.label=label;labeledNode.elementType=type;if(this.eat(17)){labeledNode.optional=true;this.raise(TSErrors.TupleOptionalAfterType,this.state.lastTokStartLoc);}}else{labeledNode=this.startNodeAtNode(type);labeledNode.optional=optional;this.raise(TSErrors.InvalidTupleMemberLabel,type);labeledNode.label=type;labeledNode.elementType=this.tsParseType();}type=this.finishNode(labeledNode,"TSNamedTupleMember");}else if(optional){const optionalTypeNode=this.startNodeAtNode(type);optionalTypeNode.typeAnnotation=type;type=this.finishNode(optionalTypeNode,"TSOptionalType");}if(rest){const restNode=this.startNodeAt(startLoc);restNode.typeAnnotation=type;type=this.finishNode(restNode,"TSRestType");}return type;}tsParseParenthesizedType(){const node=this.startNode();this.expect(10);node.typeAnnotation=this.tsParseType();this.expect(11);return this.finishNode(node,"TSParenthesizedType");}tsParseFunctionOrConstructorType(type,abstract){const node=this.startNode();if(type==="TSConstructorType"){node.abstract=!!abstract;if(abstract)this.next();this.next();}this.tsInAllowConditionalTypesContext(()=>this.tsFillSignature(19,node));return this.finishNode(node,type);}tsParseLiteralTypeNode(){const node=this.startNode();switch(this.state.type){case 134:case 135:case 133:case 85:case 86:node.literal=super.parseExprAtom();break;default:this.unexpected();}return this.finishNode(node,"TSLiteralType");}tsParseTemplateLiteralType(){const node=this.startNode();node.literal=super.parseTemplate(false);return this.finishNode(node,"TSLiteralType");}parseTemplateSubstitution(){if(this.state.inType)return this.tsParseType();return super.parseTemplateSubstitution();}tsParseThisTypeOrThisTypePredicate(){const thisKeyword=this.tsParseThisTypeNode();if(this.isContextual(116)&&!this.hasPrecedingLineBreak()){return this.tsParseThisTypePredicate(thisKeyword);}else{return thisKeyword;}}tsParseNonArrayType(){switch(this.state.type){case 133:case 134:case 135:case 85:case 86:return this.tsParseLiteralTypeNode();case 53:if(this.state.value==="-"){const node=this.startNode();const nextToken=this.lookahead();if(nextToken.type!==134&&nextToken.type!==135){this.unexpected();}node.literal=this.parseMaybeUnary();return this.finishNode(node,"TSLiteralType");}break;case 78:return this.tsParseThisTypeOrThisTypePredicate();case 87:return this.tsParseTypeQuery();case 83:return this.tsParseImportType();case 5:return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))?this.tsParseMappedType():this.tsParseTypeLiteral();case 0:return this.tsParseTupleType();case 10:return this.tsParseParenthesizedType();case 25:case 24:return this.tsParseTemplateLiteralType();default:{const{type}=this.state;if(tokenIsIdentifier(type)||type===88||type===84){const nodeType=type===88?"TSVoidKeyword":type===84?"TSNullKeyword":keywordTypeFromName(this.state.value);if(nodeType!==undefined&&this.lookaheadCharCode()!==46){const node=this.startNode();this.next();return this.finishNode(node,nodeType);}return this.tsParseTypeReference();}}}this.unexpected();}tsParseArrayTypeOrHigher(){let type=this.tsParseNonArrayType();while(!this.hasPrecedingLineBreak()&&this.eat(0)){if(this.match(3)){const node=this.startNodeAtNode(type);node.elementType=type;this.expect(3);type=this.finishNode(node,"TSArrayType");}else{const node=this.startNodeAtNode(type);node.objectType=type;node.indexType=this.tsParseType();this.expect(3);type=this.finishNode(node,"TSIndexedAccessType");}}return type;}tsParseTypeOperator(){const node=this.startNode();const operator=this.state.value;this.next();node.operator=operator;node.typeAnnotation=this.tsParseTypeOperatorOrHigher();if(operator==="readonly"){this.tsCheckTypeAnnotationForReadOnly(node);}return this.finishNode(node,"TSTypeOperator");}tsCheckTypeAnnotationForReadOnly(node){switch(node.typeAnnotation.type){case"TSTupleType":case"TSArrayType":return;default:this.raise(TSErrors.UnexpectedReadonly,node);}}tsParseInferType(){const node=this.startNode();this.expectContextual(115);const typeParameter=this.startNode();typeParameter.name=this.tsParseTypeParameterName();typeParameter.constraint=this.tsTryParse(()=>this.tsParseConstraintForInferType());node.typeParameter=this.finishNode(typeParameter,"TSTypeParameter");return this.finishNode(node,"TSInferType");}tsParseConstraintForInferType(){if(this.eat(81)){const constraint=this.tsInDisallowConditionalTypesContext(()=>this.tsParseType());if(this.state.inDisallowConditionalTypesContext||!this.match(17)){return constraint;}}}tsParseTypeOperatorOrHigher(){const isTypeOperator=tokenIsTSTypeOperator(this.state.type)&&!this.state.containsEsc;return isTypeOperator?this.tsParseTypeOperator():this.isContextual(115)?this.tsParseInferType():this.tsInAllowConditionalTypesContext(()=>this.tsParseArrayTypeOrHigher());}tsParseUnionOrIntersectionType(kind,parseConstituentType,operator){const node=this.startNode();const hasLeadingOperator=this.eat(operator);const types=[];do{types.push(parseConstituentType());}while(this.eat(operator));if(types.length===1&&!hasLeadingOperator){return types[0];}node.types=types;return this.finishNode(node,kind);}tsParseIntersectionTypeOrHigher(){return this.tsParseUnionOrIntersectionType("TSIntersectionType",this.tsParseTypeOperatorOrHigher.bind(this),45);}tsParseUnionTypeOrHigher(){return this.tsParseUnionOrIntersectionType("TSUnionType",this.tsParseIntersectionTypeOrHigher.bind(this),43);}tsIsStartOfFunctionType(){if(this.match(47)){return true;}return this.match(10)&&this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));}tsSkipParameterStart(){if(tokenIsIdentifier(this.state.type)||this.match(78)){this.next();return true;}if(this.match(5)){const{errors}=this.state;const previousErrorCount=errors.length;try{this.parseObjectLike(8,true);return errors.length===previousErrorCount;}catch(_unused){return false;}}if(this.match(0)){this.next();const{errors}=this.state;const previousErrorCount=errors.length;try{super.parseBindingList(3,93,1);return errors.length===previousErrorCount;}catch(_unused2){return false;}}return false;}tsIsUnambiguouslyStartOfFunctionType(){this.next();if(this.match(11)||this.match(21)){return true;}if(this.tsSkipParameterStart()){if(this.match(14)||this.match(12)||this.match(17)||this.match(29)){return true;}if(this.match(11)){this.next();if(this.match(19)){return true;}}}return false;}tsParseTypeOrTypePredicateAnnotation(returnToken){return this.tsInType(()=>{const t=this.startNode();this.expect(returnToken);const node=this.startNode();const asserts=!!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));if(asserts&&this.match(78)){let thisTypePredicate=this.tsParseThisTypeOrThisTypePredicate();if(thisTypePredicate.type==="TSThisType"){node.parameterName=thisTypePredicate;node.asserts=true;node.typeAnnotation=null;thisTypePredicate=this.finishNode(node,"TSTypePredicate");}else{this.resetStartLocationFromNode(thisTypePredicate,node);thisTypePredicate.asserts=true;}t.typeAnnotation=thisTypePredicate;return this.finishNode(t,"TSTypeAnnotation");}const typePredicateVariable=this.tsIsIdentifier()&&this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));if(!typePredicateVariable){if(!asserts){return this.tsParseTypeAnnotation(false,t);}node.parameterName=this.parseIdentifier();node.asserts=asserts;node.typeAnnotation=null;t.typeAnnotation=this.finishNode(node,"TSTypePredicate");return this.finishNode(t,"TSTypeAnnotation");}const type=this.tsParseTypeAnnotation(false);node.parameterName=typePredicateVariable;node.typeAnnotation=type;node.asserts=asserts;t.typeAnnotation=this.finishNode(node,"TSTypePredicate");return this.finishNode(t,"TSTypeAnnotation");});}tsTryParseTypeOrTypePredicateAnnotation(){if(this.match(14)){return this.tsParseTypeOrTypePredicateAnnotation(14);}}tsTryParseTypeAnnotation(){if(this.match(14)){return this.tsParseTypeAnnotation();}}tsTryParseType(){return this.tsEatThenParseType(14);}tsParseTypePredicatePrefix(){const id=this.parseIdentifier();if(this.isContextual(116)&&!this.hasPrecedingLineBreak()){this.next();return id;}}tsParseTypePredicateAsserts(){if(this.state.type!==109){return false;}const containsEsc=this.state.containsEsc;this.next();if(!tokenIsIdentifier(this.state.type)&&!this.match(78)){return false;}if(containsEsc){this.raise(Errors.InvalidEscapedReservedWord,this.state.lastTokStartLoc,{reservedWord:"asserts"});}return true;}tsParseTypeAnnotation(){let eatColon=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this.startNode();this.tsInType(()=>{if(eatColon)this.expect(14);t.typeAnnotation=this.tsParseType();});return this.finishNode(t,"TSTypeAnnotation");}tsParseType(){assert(this.state.inType);const type=this.tsParseNonConditionalType();if(this.state.inDisallowConditionalTypesContext||this.hasPrecedingLineBreak()||!this.eat(81)){return type;}const node=this.startNodeAtNode(type);node.checkType=type;node.extendsType=this.tsInDisallowConditionalTypesContext(()=>this.tsParseNonConditionalType());this.expect(17);node.trueType=this.tsInAllowConditionalTypesContext(()=>this.tsParseType());this.expect(14);node.falseType=this.tsInAllowConditionalTypesContext(()=>this.tsParseType());return this.finishNode(node,"TSConditionalType");}isAbstractConstructorSignature(){return this.isContextual(124)&&this.lookahead().type===77;}tsParseNonConditionalType(){if(this.tsIsStartOfFunctionType()){return this.tsParseFunctionOrConstructorType("TSFunctionType");}if(this.match(77)){return this.tsParseFunctionOrConstructorType("TSConstructorType");}else if(this.isAbstractConstructorSignature()){return this.tsParseFunctionOrConstructorType("TSConstructorType",true);}return this.tsParseUnionTypeOrHigher();}tsParseTypeAssertion(){if(this.getPluginOption("typescript","disallowAmbiguousJSXLike")){this.raise(TSErrors.ReservedTypeAssertion,this.state.startLoc);}const node=this.startNode();node.typeAnnotation=this.tsInType(()=>{this.next();return this.match(75)?this.tsParseTypeReference():this.tsParseType();});this.expect(48);node.expression=this.parseMaybeUnary();return this.finishNode(node,"TSTypeAssertion");}tsParseHeritageClause(token){const originalStartLoc=this.state.startLoc;const delimitedList=this.tsParseDelimitedList("HeritageClauseElement",()=>{const node=this.startNode();node.expression=this.tsParseEntityName();if(this.match(47)){node.typeParameters=this.tsParseTypeArguments();}return this.finishNode(node,"TSExpressionWithTypeArguments");});if(!delimitedList.length){this.raise(TSErrors.EmptyHeritageClauseType,originalStartLoc,{token});}return delimitedList;}tsParseInterfaceDeclaration(node){let properties=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(this.hasFollowingLineBreak())return null;this.expectContextual(129);if(properties.declare)node.declare=true;if(tokenIsIdentifier(this.state.type)){node.id=this.parseIdentifier();this.checkIdentifier(node.id,130);}else{node.id=null;this.raise(TSErrors.MissingInterfaceName,this.state.startLoc);}node.typeParameters=this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);if(this.eat(81)){node.extends=this.tsParseHeritageClause("extends");}const body=this.startNode();body.body=this.tsInType(this.tsParseObjectTypeMembers.bind(this));node.body=this.finishNode(body,"TSInterfaceBody");return this.finishNode(node,"TSInterfaceDeclaration");}tsParseTypeAliasDeclaration(node){node.id=this.parseIdentifier();this.checkIdentifier(node.id,2);node.typeAnnotation=this.tsInType(()=>{node.typeParameters=this.tsTryParseTypeParameters(this.tsParseInOutModifiers);this.expect(29);if(this.isContextual(114)&&this.lookahead().type!==16){const node=this.startNode();this.next();return this.finishNode(node,"TSIntrinsicKeyword");}return this.tsParseType();});this.semicolon();return this.finishNode(node,"TSTypeAliasDeclaration");}tsInNoContext(cb){const oldContext=this.state.context;this.state.context=[oldContext[0]];try{return cb();}finally{this.state.context=oldContext;}}tsInType(cb){const oldInType=this.state.inType;this.state.inType=true;try{return cb();}finally{this.state.inType=oldInType;}}tsInDisallowConditionalTypesContext(cb){const oldInDisallowConditionalTypesContext=this.state.inDisallowConditionalTypesContext;this.state.inDisallowConditionalTypesContext=true;try{return cb();}finally{this.state.inDisallowConditionalTypesContext=oldInDisallowConditionalTypesContext;}}tsInAllowConditionalTypesContext(cb){const oldInDisallowConditionalTypesContext=this.state.inDisallowConditionalTypesContext;this.state.inDisallowConditionalTypesContext=false;try{return cb();}finally{this.state.inDisallowConditionalTypesContext=oldInDisallowConditionalTypesContext;}}tsEatThenParseType(token){if(this.match(token)){return this.tsNextThenParseType();}}tsExpectThenParseType(token){return this.tsInType(()=>{this.expect(token);return this.tsParseType();});}tsNextThenParseType(){return this.tsInType(()=>{this.next();return this.tsParseType();});}tsParseEnumMember(){const node=this.startNode();node.id=this.match(133)?super.parseStringLiteral(this.state.value):this.parseIdentifier(true);if(this.eat(29)){node.initializer=super.parseMaybeAssignAllowIn();}return this.finishNode(node,"TSEnumMember");}tsParseEnumDeclaration(node){let properties=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(properties.const)node.const=true;if(properties.declare)node.declare=true;this.expectContextual(126);node.id=this.parseIdentifier();this.checkIdentifier(node.id,node.const?8971:8459);this.expect(5);node.members=this.tsParseDelimitedList("EnumMembers",this.tsParseEnumMember.bind(this));this.expect(8);return this.finishNode(node,"TSEnumDeclaration");}tsParseModuleBlock(){const node=this.startNode();this.scope.enter(0);this.expect(5);super.parseBlockOrModuleBlockBody(node.body=[],undefined,true,8);this.scope.exit();return this.finishNode(node,"TSModuleBlock");}tsParseModuleOrNamespaceDeclaration(node){let nested=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;node.id=this.parseIdentifier();if(!nested){this.checkIdentifier(node.id,1024);}if(this.eat(16)){const inner=this.startNode();this.tsParseModuleOrNamespaceDeclaration(inner,true);node.body=inner;}else{this.scope.enter(256);this.prodParam.enter(0);node.body=this.tsParseModuleBlock();this.prodParam.exit();this.scope.exit();}return this.finishNode(node,"TSModuleDeclaration");}tsParseAmbientExternalModuleDeclaration(node){if(this.isContextual(112)){node.global=true;node.id=this.parseIdentifier();}else if(this.match(133)){node.id=super.parseStringLiteral(this.state.value);}else{this.unexpected();}if(this.match(5)){this.scope.enter(256);this.prodParam.enter(0);node.body=this.tsParseModuleBlock();this.prodParam.exit();this.scope.exit();}else{this.semicolon();}return this.finishNode(node,"TSModuleDeclaration");}tsParseImportEqualsDeclaration(node,maybeDefaultIdentifier,isExport){node.isExport=isExport||false;node.id=maybeDefaultIdentifier||this.parseIdentifier();this.checkIdentifier(node.id,4096);this.expect(29);const moduleReference=this.tsParseModuleReference();if(node.importKind==="type"&&moduleReference.type!=="TSExternalModuleReference"){this.raise(TSErrors.ImportAliasHasImportType,moduleReference);}node.moduleReference=moduleReference;this.semicolon();return this.finishNode(node,"TSImportEqualsDeclaration");}tsIsExternalModuleReference(){return this.isContextual(119)&&this.lookaheadCharCode()===40;}tsParseModuleReference(){return this.tsIsExternalModuleReference()?this.tsParseExternalModuleReference():this.tsParseEntityName(false);}tsParseExternalModuleReference(){const node=this.startNode();this.expectContextual(119);this.expect(10);if(!this.match(133)){this.unexpected();}node.expression=super.parseExprAtom();this.expect(11);this.sawUnambiguousESM=true;return this.finishNode(node,"TSExternalModuleReference");}tsLookAhead(f){const state=this.state.clone();const res=f();this.state=state;return res;}tsTryParseAndCatch(f){const result=this.tryParse(abort=>f()||abort());if(result.aborted||!result.node)return;if(result.error)this.state=result.failState;return result.node;}tsTryParse(f){const state=this.state.clone();const result=f();if(result!==undefined&&result!==false){return result;}this.state=state;}tsTryParseDeclare(nany){if(this.isLineTerminator()){return;}let startType=this.state.type;let kind;if(this.isContextual(100)){startType=74;kind="let";}return this.tsInAmbientContext(()=>{switch(startType){case 68:nany.declare=true;return super.parseFunctionStatement(nany,false,false);case 80:nany.declare=true;return this.parseClass(nany,true,false);case 126:return this.tsParseEnumDeclaration(nany,{declare:true});case 112:return this.tsParseAmbientExternalModuleDeclaration(nany);case 75:case 74:if(!this.match(75)||!this.isLookaheadContextual("enum")){nany.declare=true;return this.parseVarStatement(nany,kind||this.state.value,true);}this.expect(75);return this.tsParseEnumDeclaration(nany,{const:true,declare:true});case 129:{const result=this.tsParseInterfaceDeclaration(nany,{declare:true});if(result)return result;}default:if(tokenIsIdentifier(startType)){return this.tsParseDeclaration(nany,this.state.value,true,null);}}});}tsTryParseExportDeclaration(){return this.tsParseDeclaration(this.startNode(),this.state.value,true,null);}tsParseExpressionStatement(node,expr,decorators){switch(expr.name){case"declare":{const declaration=this.tsTryParseDeclare(node);if(declaration){declaration.declare=true;}return declaration;}case"global":if(this.match(5)){this.scope.enter(256);this.prodParam.enter(0);const mod=node;mod.global=true;mod.id=expr;mod.body=this.tsParseModuleBlock();this.scope.exit();this.prodParam.exit();return this.finishNode(mod,"TSModuleDeclaration");}break;default:return this.tsParseDeclaration(node,expr.name,false,decorators);}}tsParseDeclaration(node,value,next,decorators){switch(value){case"abstract":if(this.tsCheckLineTerminator(next)&&(this.match(80)||tokenIsIdentifier(this.state.type))){return this.tsParseAbstractDeclaration(node,decorators);}break;case"module":if(this.tsCheckLineTerminator(next)){if(this.match(133)){return this.tsParseAmbientExternalModuleDeclaration(node);}else if(tokenIsIdentifier(this.state.type)){return this.tsParseModuleOrNamespaceDeclaration(node);}}break;case"namespace":if(this.tsCheckLineTerminator(next)&&tokenIsIdentifier(this.state.type)){return this.tsParseModuleOrNamespaceDeclaration(node);}break;case"type":if(this.tsCheckLineTerminator(next)&&tokenIsIdentifier(this.state.type)){return this.tsParseTypeAliasDeclaration(node);}break;}}tsCheckLineTerminator(next){if(next){if(this.hasFollowingLineBreak())return false;this.next();return true;}return!this.isLineTerminator();}tsTryParseGenericAsyncArrowFunction(startLoc){if(!this.match(47))return;const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;this.state.maybeInArrowParameters=true;const res=this.tsTryParseAndCatch(()=>{const node=this.startNodeAt(startLoc);node.typeParameters=this.tsParseTypeParameters(this.tsParseConstModifier);super.parseFunctionParams(node);node.returnType=this.tsTryParseTypeOrTypePredicateAnnotation();this.expect(19);return node;});this.state.maybeInArrowParameters=oldMaybeInArrowParameters;if(!res)return;return super.parseArrowExpression(res,null,true);}tsParseTypeArgumentsInExpression(){if(this.reScan_lt()!==47)return;return this.tsParseTypeArguments();}tsParseTypeArguments(){const node=this.startNode();node.params=this.tsInType(()=>this.tsInNoContext(()=>{this.expect(47);return this.tsParseDelimitedList("TypeParametersOrArguments",this.tsParseType.bind(this));}));if(node.params.length===0){this.raise(TSErrors.EmptyTypeArguments,node);}else if(!this.state.inType&&this.curContext()===types.brace){this.reScan_lt_gt();}this.expect(48);return this.finishNode(node,"TSTypeParameterInstantiation");}tsIsDeclarationStart(){return tokenIsTSDeclarationStart(this.state.type);}isExportDefaultSpecifier(){if(this.tsIsDeclarationStart())return false;return super.isExportDefaultSpecifier();}parseAssignableListItem(flags,decorators){const startLoc=this.state.startLoc;const modified={};this.tsParseModifiers({allowedModifiers:["public","private","protected","override","readonly"]},modified);const accessibility=modified.accessibility;const override=modified.override;const readonly=modified.readonly;if(!(flags&4)&&(accessibility||readonly||override)){this.raise(TSErrors.UnexpectedParameterModifier,startLoc);}const left=this.parseMaybeDefault();this.parseAssignableListItemTypes(left,flags);const elt=this.parseMaybeDefault(left.loc.start,left);if(accessibility||readonly||override){const pp=this.startNodeAt(startLoc);if(decorators.length){pp.decorators=decorators;}if(accessibility)pp.accessibility=accessibility;if(readonly)pp.readonly=readonly;if(override)pp.override=override;if(elt.type!=="Identifier"&&elt.type!=="AssignmentPattern"){this.raise(TSErrors.UnsupportedParameterPropertyKind,pp);}pp.parameter=elt;return this.finishNode(pp,"TSParameterProperty");}if(decorators.length){left.decorators=decorators;}return elt;}isSimpleParameter(node){return node.type==="TSParameterProperty"&&super.isSimpleParameter(node.parameter)||super.isSimpleParameter(node);}tsDisallowOptionalPattern(node){for(const param of node.params){if(param.type!=="Identifier"&&param.optional&&!this.state.isAmbientContext){this.raise(TSErrors.PatternIsOptional,param);}}}setArrowFunctionParameters(node,params,trailingCommaLoc){super.setArrowFunctionParameters(node,params,trailingCommaLoc);this.tsDisallowOptionalPattern(node);}parseFunctionBodyAndFinish(node,type){let isMethod=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(this.match(14)){node.returnType=this.tsParseTypeOrTypePredicateAnnotation(14);}const bodilessType=type==="FunctionDeclaration"?"TSDeclareFunction":type==="ClassMethod"||type==="ClassPrivateMethod"?"TSDeclareMethod":undefined;if(bodilessType&&!this.match(5)&&this.isLineTerminator()){return this.finishNode(node,bodilessType);}if(bodilessType==="TSDeclareFunction"&&this.state.isAmbientContext){this.raise(TSErrors.DeclareFunctionHasImplementation,node);if(node.declare){return super.parseFunctionBodyAndFinish(node,bodilessType,isMethod);}}this.tsDisallowOptionalPattern(node);return super.parseFunctionBodyAndFinish(node,type,isMethod);}registerFunctionStatementId(node){if(!node.body&&node.id){this.checkIdentifier(node.id,1024);}else{super.registerFunctionStatementId(node);}}tsCheckForInvalidTypeCasts(items){items.forEach(node=>{if((node==null?void 0:node.type)==="TSTypeCastExpression"){this.raise(TSErrors.UnexpectedTypeAnnotation,node.typeAnnotation);}});}toReferencedList(exprList,isInParens){this.tsCheckForInvalidTypeCasts(exprList);return exprList;}parseArrayLike(close,canBePattern,isTuple,refExpressionErrors){const node=super.parseArrayLike(close,canBePattern,isTuple,refExpressionErrors);if(node.type==="ArrayExpression"){this.tsCheckForInvalidTypeCasts(node.elements);}return node;}parseSubscript(base,startLoc,noCalls,state){if(!this.hasPrecedingLineBreak()&&this.match(35)){this.state.canStartJSXElement=false;this.next();const nonNullExpression=this.startNodeAt(startLoc);nonNullExpression.expression=base;return this.finishNode(nonNullExpression,"TSNonNullExpression");}let isOptionalCall=false;if(this.match(18)&&this.lookaheadCharCode()===60){if(noCalls){state.stop=true;return base;}state.optionalChainMember=isOptionalCall=true;this.next();}if(this.match(47)||this.match(51)){let missingParenErrorLoc;const result=this.tsTryParseAndCatch(()=>{if(!noCalls&&this.atPossibleAsyncArrow(base)){const asyncArrowFn=this.tsTryParseGenericAsyncArrowFunction(startLoc);if(asyncArrowFn){return asyncArrowFn;}}const typeArguments=this.tsParseTypeArgumentsInExpression();if(!typeArguments)return;if(isOptionalCall&&!this.match(10)){missingParenErrorLoc=this.state.curPosition();return;}if(tokenIsTemplate(this.state.type)){const result=super.parseTaggedTemplateExpression(base,startLoc,state);result.typeParameters=typeArguments;return result;}if(!noCalls&&this.eat(10)){const node=this.startNodeAt(startLoc);node.callee=base;node.arguments=this.parseCallExpressionArguments(11,false);this.tsCheckForInvalidTypeCasts(node.arguments);node.typeParameters=typeArguments;if(state.optionalChainMember){node.optional=isOptionalCall;}return this.finishCallExpression(node,state.optionalChainMember);}const tokenType=this.state.type;if(tokenType===48||tokenType===52||tokenType!==10&&tokenCanStartExpression(tokenType)&&!this.hasPrecedingLineBreak()){return;}const node=this.startNodeAt(startLoc);node.expression=base;node.typeParameters=typeArguments;return this.finishNode(node,"TSInstantiationExpression");});if(missingParenErrorLoc){this.unexpected(missingParenErrorLoc,10);}if(result){if(result.type==="TSInstantiationExpression"&&(this.match(16)||this.match(18)&&this.lookaheadCharCode()!==40)){this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression,this.state.startLoc);}return result;}}return super.parseSubscript(base,startLoc,noCalls,state);}parseNewCallee(node){var _callee$extra;super.parseNewCallee(node);const{callee}=node;if(callee.type==="TSInstantiationExpression"&&!((_callee$extra=callee.extra)!=null&&_callee$extra.parenthesized)){node.typeParameters=callee.typeParameters;node.callee=callee.expression;}}parseExprOp(left,leftStartLoc,minPrec){let isSatisfies;if(tokenOperatorPrecedence(58)>minPrec&&!this.hasPrecedingLineBreak()&&(this.isContextual(93)||(isSatisfies=this.isContextual(120)))){const node=this.startNodeAt(leftStartLoc);node.expression=left;node.typeAnnotation=this.tsInType(()=>{this.next();if(this.match(75)){if(isSatisfies){this.raise(Errors.UnexpectedKeyword,this.state.startLoc,{keyword:"const"});}return this.tsParseTypeReference();}return this.tsParseType();});this.finishNode(node,isSatisfies?"TSSatisfiesExpression":"TSAsExpression");this.reScan_lt_gt();return this.parseExprOp(node,leftStartLoc,minPrec);}return super.parseExprOp(left,leftStartLoc,minPrec);}checkReservedWord(word,startLoc,checkKeywords,isBinding){if(!this.state.isAmbientContext){super.checkReservedWord(word,startLoc,checkKeywords,isBinding);}}checkImportReflection(node){super.checkImportReflection(node);if(node.module&&node.importKind!=="value"){this.raise(TSErrors.ImportReflectionHasImportType,node.specifiers[0].loc.start);}}checkDuplicateExports(){}isPotentialImportPhase(isExport){if(super.isPotentialImportPhase(isExport))return true;if(this.isContextual(130)){const ch=this.lookaheadCharCode();return isExport?ch===123||ch===42:ch!==61;}return!isExport&&this.isContextual(87);}applyImportPhase(node,isExport,phase,loc){super.applyImportPhase(node,isExport,phase,loc);if(isExport){node.exportKind=phase==="type"?"type":"value";}else{node.importKind=phase==="type"||phase==="typeof"?phase:"value";}}parseImport(node){if(this.match(133)){node.importKind="value";return super.parseImport(node);}let importNode;if(tokenIsIdentifier(this.state.type)&&this.lookaheadCharCode()===61){node.importKind="value";return this.tsParseImportEqualsDeclaration(node);}else if(this.isContextual(130)){const maybeDefaultIdentifier=this.parseMaybeImportPhase(node,false);if(this.lookaheadCharCode()===61){return this.tsParseImportEqualsDeclaration(node,maybeDefaultIdentifier);}else{importNode=super.parseImportSpecifiersAndAfter(node,maybeDefaultIdentifier);}}else{importNode=super.parseImport(node);}if(importNode.importKind==="type"&&importNode.specifiers.length>1&&importNode.specifiers[0].type==="ImportDefaultSpecifier"){this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed,importNode);}return importNode;}parseExport(node,decorators){if(this.match(83)){this.next();let maybeDefaultIdentifier=null;if(this.isContextual(130)&&this.isPotentialImportPhase(false)){maybeDefaultIdentifier=this.parseMaybeImportPhase(node,false);}else{node.importKind="value";}return this.tsParseImportEqualsDeclaration(node,maybeDefaultIdentifier,true);}else if(this.eat(29)){const assign=node;assign.expression=super.parseExpression();this.semicolon();this.sawUnambiguousESM=true;return this.finishNode(assign,"TSExportAssignment");}else if(this.eatContextual(93)){const decl=node;this.expectContextual(128);decl.id=this.parseIdentifier();this.semicolon();return this.finishNode(decl,"TSNamespaceExportDeclaration");}else{return super.parseExport(node,decorators);}}isAbstractClass(){return this.isContextual(124)&&this.lookahead().type===80;}parseExportDefaultExpression(){if(this.isAbstractClass()){const cls=this.startNode();this.next();cls.abstract=true;return this.parseClass(cls,true,true);}if(this.match(129)){const result=this.tsParseInterfaceDeclaration(this.startNode());if(result)return result;}return super.parseExportDefaultExpression();}parseVarStatement(node,kind){let allowMissingInitializer=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const{isAmbientContext}=this.state;const declaration=super.parseVarStatement(node,kind,allowMissingInitializer||isAmbientContext);if(!isAmbientContext)return declaration;for(const{id,init}of declaration.declarations){if(!init)continue;if(kind!=="const"||!!id.typeAnnotation){this.raise(TSErrors.InitializerNotAllowedInAmbientContext,init);}else if(!isValidAmbientConstInitializer(init,this.hasPlugin("estree"))){this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,init);}}return declaration;}parseStatementContent(flags,decorators){if(this.match(75)&&this.isLookaheadContextual("enum")){const node=this.startNode();this.expect(75);return this.tsParseEnumDeclaration(node,{const:true});}if(this.isContextual(126)){return this.tsParseEnumDeclaration(this.startNode());}if(this.isContextual(129)){const result=this.tsParseInterfaceDeclaration(this.startNode());if(result)return result;}return super.parseStatementContent(flags,decorators);}parseAccessModifier(){return this.tsParseModifier(["public","protected","private"]);}tsHasSomeModifiers(member,modifiers){return modifiers.some(modifier=>{if(tsIsAccessModifier(modifier)){return member.accessibility===modifier;}return!!member[modifier];});}tsIsStartOfStaticBlocks(){return this.isContextual(106)&&this.lookaheadCharCode()===123;}parseClassMember(classBody,member,state){const modifiers=["declare","private","public","protected","override","abstract","readonly","static"];this.tsParseModifiers({allowedModifiers:modifiers,disallowedModifiers:["in","out"],stopOnStartOfClassStaticBlock:true,errorTemplate:TSErrors.InvalidModifierOnTypeParameterPositions},member);const callParseClassMemberWithIsStatic=()=>{if(this.tsIsStartOfStaticBlocks()){this.next();this.next();if(this.tsHasSomeModifiers(member,modifiers)){this.raise(TSErrors.StaticBlockCannotHaveModifier,this.state.curPosition());}super.parseClassStaticBlock(classBody,member);}else{this.parseClassMemberWithIsStatic(classBody,member,state,!!member.static);}};if(member.declare){this.tsInAmbientContext(callParseClassMemberWithIsStatic);}else{callParseClassMemberWithIsStatic();}}parseClassMemberWithIsStatic(classBody,member,state,isStatic){const idx=this.tsTryParseIndexSignature(member);if(idx){classBody.body.push(idx);if(member.abstract){this.raise(TSErrors.IndexSignatureHasAbstract,member);}if(member.accessibility){this.raise(TSErrors.IndexSignatureHasAccessibility,member,{modifier:member.accessibility});}if(member.declare){this.raise(TSErrors.IndexSignatureHasDeclare,member);}if(member.override){this.raise(TSErrors.IndexSignatureHasOverride,member);}return;}if(!this.state.inAbstractClass&&member.abstract){this.raise(TSErrors.NonAbstractClassHasAbstractMethod,member);}if(member.override){if(!state.hadSuperClass){this.raise(TSErrors.OverrideNotInSubClass,member);}}super.parseClassMemberWithIsStatic(classBody,member,state,isStatic);}parsePostMemberNameModifiers(methodOrProp){const optional=this.eat(17);if(optional)methodOrProp.optional=true;if(methodOrProp.readonly&&this.match(10)){this.raise(TSErrors.ClassMethodHasReadonly,methodOrProp);}if(methodOrProp.declare&&this.match(10)){this.raise(TSErrors.ClassMethodHasDeclare,methodOrProp);}}parseExpressionStatement(node,expr,decorators){const decl=expr.type==="Identifier"?this.tsParseExpressionStatement(node,expr,decorators):undefined;return decl||super.parseExpressionStatement(node,expr,decorators);}shouldParseExportDeclaration(){if(this.tsIsDeclarationStart())return true;return super.shouldParseExportDeclaration();}parseConditional(expr,startLoc,refExpressionErrors){if(!this.state.maybeInArrowParameters||!this.match(17)){return super.parseConditional(expr,startLoc,refExpressionErrors);}const result=this.tryParse(()=>super.parseConditional(expr,startLoc));if(!result.node){if(result.error){super.setOptionalParametersError(refExpressionErrors,result.error);}return expr;}if(result.error)this.state=result.failState;return result.node;}parseParenItem(node,startLoc){node=super.parseParenItem(node,startLoc);if(this.eat(17)){node.optional=true;this.resetEndLocation(node);}if(this.match(14)){const typeCastNode=this.startNodeAt(startLoc);typeCastNode.expression=node;typeCastNode.typeAnnotation=this.tsParseTypeAnnotation();return this.finishNode(typeCastNode,"TSTypeCastExpression");}return node;}parseExportDeclaration(node){if(!this.state.isAmbientContext&&this.isContextual(125)){return this.tsInAmbientContext(()=>this.parseExportDeclaration(node));}const startLoc=this.state.startLoc;const isDeclare=this.eatContextual(125);if(isDeclare&&(this.isContextual(125)||!this.shouldParseExportDeclaration())){throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare,this.state.startLoc);}const isIdentifier=tokenIsIdentifier(this.state.type);const declaration=isIdentifier&&this.tsTryParseExportDeclaration()||super.parseExportDeclaration(node);if(!declaration)return null;if(declaration.type==="TSInterfaceDeclaration"||declaration.type==="TSTypeAliasDeclaration"||isDeclare){node.exportKind="type";}if(isDeclare){this.resetStartLocation(declaration,startLoc);declaration.declare=true;}return declaration;}parseClassId(node,isStatement,optionalId,bindingType){if((!isStatement||optionalId)&&this.isContextual(113)){return;}super.parseClassId(node,isStatement,optionalId,node.declare?1024:8331);const typeParameters=this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);if(typeParameters)node.typeParameters=typeParameters;}parseClassPropertyAnnotation(node){if(!node.optional){if(this.eat(35)){node.definite=true;}else if(this.eat(17)){node.optional=true;}}const type=this.tsTryParseTypeAnnotation();if(type)node.typeAnnotation=type;}parseClassProperty(node){this.parseClassPropertyAnnotation(node);if(this.state.isAmbientContext&&!(node.readonly&&!node.typeAnnotation)&&this.match(29)){this.raise(TSErrors.DeclareClassFieldHasInitializer,this.state.startLoc);}if(node.abstract&&this.match(29)){const{key}=node;this.raise(TSErrors.AbstractPropertyHasInitializer,this.state.startLoc,{propertyName:key.type==="Identifier"&&!node.computed?key.name:"[".concat(this.input.slice(key.start,key.end),"]")});}return super.parseClassProperty(node);}parseClassPrivateProperty(node){if(node.abstract){this.raise(TSErrors.PrivateElementHasAbstract,node);}if(node.accessibility){this.raise(TSErrors.PrivateElementHasAccessibility,node,{modifier:node.accessibility});}this.parseClassPropertyAnnotation(node);return super.parseClassPrivateProperty(node);}parseClassAccessorProperty(node){this.parseClassPropertyAnnotation(node);if(node.optional){this.raise(TSErrors.AccessorCannotBeOptional,node);}return super.parseClassAccessorProperty(node);}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper){const typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);if(typeParameters&&isConstructor){this.raise(TSErrors.ConstructorHasTypeParameters,typeParameters);}const{declare=false,kind}=method;if(declare&&(kind==="get"||kind==="set")){this.raise(TSErrors.DeclareAccessor,method,{kind});}if(typeParameters)method.typeParameters=typeParameters;super.pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper);}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){const typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);if(typeParameters)method.typeParameters=typeParameters;super.pushClassPrivateMethod(classBody,method,isGenerator,isAsync);}declareClassPrivateMethodInScope(node,kind){if(node.type==="TSDeclareMethod")return;if(node.type==="MethodDefinition"&&!node.value.body)return;super.declareClassPrivateMethodInScope(node,kind);}parseClassSuper(node){super.parseClassSuper(node);if(node.superClass&&(this.match(47)||this.match(51))){node.superTypeParameters=this.tsParseTypeArgumentsInExpression();}if(this.eatContextual(113)){node.implements=this.tsParseHeritageClause("implements");}}parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors){const typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);if(typeParameters)prop.typeParameters=typeParameters;return super.parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors);}parseFunctionParams(node,isConstructor){const typeParameters=this.tsTryParseTypeParameters(this.tsParseConstModifier);if(typeParameters)node.typeParameters=typeParameters;super.parseFunctionParams(node,isConstructor);}parseVarId(decl,kind){super.parseVarId(decl,kind);if(decl.id.type==="Identifier"&&!this.hasPrecedingLineBreak()&&this.eat(35)){decl.definite=true;}const type=this.tsTryParseTypeAnnotation();if(type){decl.id.typeAnnotation=type;this.resetEndLocation(decl.id);}}parseAsyncArrowFromCallExpression(node,call){if(this.match(14)){node.returnType=this.tsParseTypeAnnotation();}return super.parseAsyncArrowFromCallExpression(node,call);}parseMaybeAssign(refExpressionErrors,afterLeftParse){var _jsx,_jsx2,_typeCast,_jsx3,_typeCast2;let state;let jsx;let typeCast;if(this.hasPlugin("jsx")&&(this.match(142)||this.match(47))){state=this.state.clone();jsx=this.tryParse(()=>super.parseMaybeAssign(refExpressionErrors,afterLeftParse),state);if(!jsx.error)return jsx.node;const{context}=this.state;const currentContext=context[context.length-1];if(currentContext===types.j_oTag||currentContext===types.j_expr){context.pop();}}if(!((_jsx=jsx)!=null&&_jsx.error)&&!this.match(47)){return super.parseMaybeAssign(refExpressionErrors,afterLeftParse);}if(!state||state===this.state)state=this.state.clone();let typeParameters;const arrow=this.tryParse(abort=>{var _expr$extra,_typeParameters;typeParameters=this.tsParseTypeParameters(this.tsParseConstModifier);const expr=super.parseMaybeAssign(refExpressionErrors,afterLeftParse);if(expr.type!=="ArrowFunctionExpression"||(_expr$extra=expr.extra)!=null&&_expr$extra.parenthesized){abort();}if(((_typeParameters=typeParameters)==null?void 0:_typeParameters.params.length)!==0){this.resetStartLocationFromNode(expr,typeParameters);}expr.typeParameters=typeParameters;return expr;},state);if(!arrow.error&&!arrow.aborted){if(typeParameters)this.reportReservedArrowTypeParam(typeParameters);return arrow.node;}if(!jsx){assert(!this.hasPlugin("jsx"));typeCast=this.tryParse(()=>super.parseMaybeAssign(refExpressionErrors,afterLeftParse),state);if(!typeCast.error)return typeCast.node;}if((_jsx2=jsx)!=null&&_jsx2.node){this.state=jsx.failState;return jsx.node;}if(arrow.node){this.state=arrow.failState;if(typeParameters)this.reportReservedArrowTypeParam(typeParameters);return arrow.node;}if((_typeCast=typeCast)!=null&&_typeCast.node){this.state=typeCast.failState;return typeCast.node;}throw((_jsx3=jsx)==null?void 0:_jsx3.error)||arrow.error||((_typeCast2=typeCast)==null?void 0:_typeCast2.error);}reportReservedArrowTypeParam(node){var _node$extra;if(node.params.length===1&&!node.params[0].constraint&&!((_node$extra=node.extra)!=null&&_node$extra.trailingComma)&&this.getPluginOption("typescript","disallowAmbiguousJSXLike")){this.raise(TSErrors.ReservedArrowTypeParam,node);}}parseMaybeUnary(refExpressionErrors,sawUnary){if(!this.hasPlugin("jsx")&&this.match(47)){return this.tsParseTypeAssertion();}return super.parseMaybeUnary(refExpressionErrors,sawUnary);}parseArrow(node){if(this.match(14)){const result=this.tryParse(abort=>{const returnType=this.tsParseTypeOrTypePredicateAnnotation(14);if(this.canInsertSemicolon()||!this.match(19))abort();return returnType;});if(result.aborted)return;if(!result.thrown){if(result.error)this.state=result.failState;node.returnType=result.node;}}return super.parseArrow(node);}parseAssignableListItemTypes(param,flags){if(!(flags&2))return param;if(this.eat(17)){param.optional=true;}const type=this.tsTryParseTypeAnnotation();if(type)param.typeAnnotation=type;this.resetEndLocation(param);return param;}isAssignable(node,isBinding){switch(node.type){case"TSTypeCastExpression":return this.isAssignable(node.expression,isBinding);case"TSParameterProperty":return true;default:return super.isAssignable(node,isBinding);}}toAssignable(node){let isLHS=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;switch(node.type){case"ParenthesizedExpression":this.toAssignableParenthesizedExpression(node,isLHS);break;case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"TSTypeAssertion":if(isLHS){this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter,node);}else{this.raise(TSErrors.UnexpectedTypeCastInParameter,node);}this.toAssignable(node.expression,isLHS);break;case"AssignmentExpression":if(!isLHS&&node.left.type==="TSTypeCastExpression"){node.left=this.typeCastToParameter(node.left);}default:super.toAssignable(node,isLHS);}}toAssignableParenthesizedExpression(node,isLHS){switch(node.expression.type){case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"TSTypeAssertion":case"ParenthesizedExpression":this.toAssignable(node.expression,isLHS);break;default:super.toAssignable(node,isLHS);}}checkToRestConversion(node,allowPattern){switch(node.type){case"TSAsExpression":case"TSSatisfiesExpression":case"TSTypeAssertion":case"TSNonNullExpression":this.checkToRestConversion(node.expression,false);break;default:super.checkToRestConversion(node,allowPattern);}}isValidLVal(type,isUnparenthesizedInAssign,binding){return getOwn({TSTypeCastExpression:true,TSParameterProperty:"parameter",TSNonNullExpression:"expression",TSAsExpression:(binding!==64||!isUnparenthesizedInAssign)&&["expression",true],TSSatisfiesExpression:(binding!==64||!isUnparenthesizedInAssign)&&["expression",true],TSTypeAssertion:(binding!==64||!isUnparenthesizedInAssign)&&["expression",true]},type)||super.isValidLVal(type,isUnparenthesizedInAssign,binding);}parseBindingAtom(){if(this.state.type===78){return this.parseIdentifier(true);}return super.parseBindingAtom();}parseMaybeDecoratorArguments(expr){if(this.match(47)||this.match(51)){const typeArguments=this.tsParseTypeArgumentsInExpression();if(this.match(10)){const call=super.parseMaybeDecoratorArguments(expr);call.typeParameters=typeArguments;return call;}this.unexpected(null,10);}return super.parseMaybeDecoratorArguments(expr);}checkCommaAfterRest(close){if(this.state.isAmbientContext&&this.match(12)&&this.lookaheadCharCode()===close){this.next();return false;}return super.checkCommaAfterRest(close);}isClassMethod(){return this.match(47)||super.isClassMethod();}isClassProperty(){return this.match(35)||this.match(14)||super.isClassProperty();}parseMaybeDefault(startLoc,left){const node=super.parseMaybeDefault(startLoc,left);if(node.type==="AssignmentPattern"&&node.typeAnnotation&&node.right.start<node.typeAnnotation.start){this.raise(TSErrors.TypeAnnotationAfterAssign,node.typeAnnotation);}return node;}getTokenFromCode(code){if(this.state.inType){if(code===62){this.finishOp(48,1);return;}if(code===60){this.finishOp(47,1);return;}}super.getTokenFromCode(code);}reScan_lt_gt(){const{type}=this.state;if(type===47){this.state.pos-=1;this.readToken_lt();}else if(type===48){this.state.pos-=1;this.readToken_gt();}}reScan_lt(){const{type}=this.state;if(type===51){this.state.pos-=2;this.finishOp(47,1);return 47;}return type;}toAssignableList(exprList,trailingCommaLoc,isLHS){for(let i=0;i<exprList.length;i++){const expr=exprList[i];if((expr==null?void 0:expr.type)==="TSTypeCastExpression"){exprList[i]=this.typeCastToParameter(expr);}}super.toAssignableList(exprList,trailingCommaLoc,isLHS);}typeCastToParameter(node){node.expression.typeAnnotation=node.typeAnnotation;this.resetEndLocation(node.expression,node.typeAnnotation.loc.end);return node.expression;}shouldParseArrow(params){if(this.match(14)){return params.every(expr=>this.isAssignable(expr,true));}return super.shouldParseArrow(params);}shouldParseAsyncArrow(){return this.match(14)||super.shouldParseAsyncArrow();}canHaveLeadingDecorator(){return super.canHaveLeadingDecorator()||this.isAbstractClass();}jsxParseOpeningElementAfterName(node){if(this.match(47)||this.match(51)){const typeArguments=this.tsTryParseAndCatch(()=>this.tsParseTypeArgumentsInExpression());if(typeArguments)node.typeParameters=typeArguments;}return super.jsxParseOpeningElementAfterName(node);}getGetterSetterExpectedParamCount(method){const baseCount=super.getGetterSetterExpectedParamCount(method);const params=this.getObjectOrClassMethodParams(method);const firstParam=params[0];const hasContextParam=firstParam&&this.isThisParam(firstParam);return hasContextParam?baseCount+1:baseCount;}parseCatchClauseParam(){const param=super.parseCatchClauseParam();const type=this.tsTryParseTypeAnnotation();if(type){param.typeAnnotation=type;this.resetEndLocation(param);}return param;}tsInAmbientContext(cb){const oldIsAmbientContext=this.state.isAmbientContext;this.state.isAmbientContext=true;try{return cb();}finally{this.state.isAmbientContext=oldIsAmbientContext;}}parseClass(node,isStatement,optionalId){const oldInAbstractClass=this.state.inAbstractClass;this.state.inAbstractClass=!!node.abstract;try{return super.parseClass(node,isStatement,optionalId);}finally{this.state.inAbstractClass=oldInAbstractClass;}}tsParseAbstractDeclaration(node,decorators){if(this.match(80)){node.abstract=true;return this.maybeTakeDecorators(decorators,this.parseClass(node,true,false));}else if(this.isContextual(129)){if(!this.hasFollowingLineBreak()){node.abstract=true;this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer,node);return this.tsParseInterfaceDeclaration(node);}}else{this.unexpected(null,80);}}parseMethod(node,isGenerator,isAsync,isConstructor,allowDirectSuper,type,inClassScope){const method=super.parseMethod(node,isGenerator,isAsync,isConstructor,allowDirectSuper,type,inClassScope);if(method.abstract){const hasBody=this.hasPlugin("estree")?!!method.value.body:!!method.body;if(hasBody){const{key}=method;this.raise(TSErrors.AbstractMethodHasImplementation,method,{methodName:key.type==="Identifier"&&!method.computed?key.name:"[".concat(this.input.slice(key.start,key.end),"]")});}}return method;}tsParseTypeParameterName(){const typeName=this.parseIdentifier();return typeName.name;}shouldParseAsAmbientContext(){return!!this.getPluginOption("typescript","dts");}parse(){if(this.shouldParseAsAmbientContext()){this.state.isAmbientContext=true;}return super.parse();}getExpression(){if(this.shouldParseAsAmbientContext()){this.state.isAmbientContext=true;}return super.getExpression();}parseExportSpecifier(node,isString,isInTypeExport,isMaybeTypeOnly){if(!isString&&isMaybeTypeOnly){this.parseTypeOnlyImportExportSpecifier(node,false,isInTypeExport);return this.finishNode(node,"ExportSpecifier");}node.exportKind="value";return super.parseExportSpecifier(node,isString,isInTypeExport,isMaybeTypeOnly);}parseImportSpecifier(specifier,importedIsString,isInTypeOnlyImport,isMaybeTypeOnly,bindingType){if(!importedIsString&&isMaybeTypeOnly){this.parseTypeOnlyImportExportSpecifier(specifier,true,isInTypeOnlyImport);return this.finishNode(specifier,"ImportSpecifier");}specifier.importKind="value";return super.parseImportSpecifier(specifier,importedIsString,isInTypeOnlyImport,isMaybeTypeOnly,isInTypeOnlyImport?4098:4096);}parseTypeOnlyImportExportSpecifier(node,isImport,isInTypeOnlyImportExport){const leftOfAsKey=isImport?"imported":"local";const rightOfAsKey=isImport?"local":"exported";let leftOfAs=node[leftOfAsKey];let rightOfAs;let hasTypeSpecifier=false;let canParseAsKeyword=true;const loc=leftOfAs.loc.start;if(this.isContextual(93)){const firstAs=this.parseIdentifier();if(this.isContextual(93)){const secondAs=this.parseIdentifier();if(tokenIsKeywordOrIdentifier(this.state.type)){hasTypeSpecifier=true;leftOfAs=firstAs;rightOfAs=isImport?this.parseIdentifier():this.parseModuleExportName();canParseAsKeyword=false;}else{rightOfAs=secondAs;canParseAsKeyword=false;}}else if(tokenIsKeywordOrIdentifier(this.state.type)){canParseAsKeyword=false;rightOfAs=isImport?this.parseIdentifier():this.parseModuleExportName();}else{hasTypeSpecifier=true;leftOfAs=firstAs;}}else if(tokenIsKeywordOrIdentifier(this.state.type)){hasTypeSpecifier=true;if(isImport){leftOfAs=this.parseIdentifier(true);if(!this.isContextual(93)){this.checkReservedWord(leftOfAs.name,leftOfAs.loc.start,true,true);}}else{leftOfAs=this.parseModuleExportName();}}if(hasTypeSpecifier&&isInTypeOnlyImportExport){this.raise(isImport?TSErrors.TypeModifierIsUsedInTypeImports:TSErrors.TypeModifierIsUsedInTypeExports,loc);}node[leftOfAsKey]=leftOfAs;node[rightOfAsKey]=rightOfAs;const kindKey=isImport?"importKind":"exportKind";node[kindKey]=hasTypeSpecifier?"type":"value";if(canParseAsKeyword&&this.eatContextual(93)){node[rightOfAsKey]=isImport?this.parseIdentifier():this.parseModuleExportName();}if(!node[rightOfAsKey]){node[rightOfAsKey]=cloneIdentifier(node[leftOfAsKey]);}if(isImport){this.checkIdentifier(node[rightOfAsKey],hasTypeSpecifier?4098:4096);}}};function isPossiblyLiteralEnum(expression){if(expression.type!=="MemberExpression")return false;const{computed,property}=expression;if(computed&&property.type!=="StringLiteral"&&(property.type!=="TemplateLiteral"||property.expressions.length>0)){return false;}return isUncomputedMemberExpressionChain(expression.object);}function isValidAmbientConstInitializer(expression,estree){var _expression$extra;const{type}=expression;if((_expression$extra=expression.extra)!=null&&_expression$extra.parenthesized){return false;}if(estree){if(type==="Literal"){const{value}=expression;if(typeof value==="string"||typeof value==="boolean"){return true;}}}else{if(type==="StringLiteral"||type==="BooleanLiteral"){return true;}}if(isNumber(expression,estree)||isNegativeNumber(expression,estree)){return true;}if(type==="TemplateLiteral"&&expression.expressions.length===0){return true;}if(isPossiblyLiteralEnum(expression)){return true;}return false;}function isNumber(expression,estree){if(estree){return expression.type==="Literal"&&(typeof expression.value==="number"||"bigint"in expression);}return expression.type==="NumericLiteral"||expression.type==="BigIntLiteral";}function isNegativeNumber(expression,estree){if(expression.type==="UnaryExpression"){const{operator,argument}=expression;if(operator==="-"&&isNumber(argument,estree)){return true;}}return false;}function isUncomputedMemberExpressionChain(expression){if(expression.type==="Identifier")return true;if(expression.type!=="MemberExpression"||expression.computed){return false;}return isUncomputedMemberExpressionChain(expression.object);}const PlaceholderErrors=ParseErrorEnum(_templateObject5||(_templateObject5=_taggedTemplateLiteral(["placeholders"])))({ClassNameIsRequired:"A class name is required.",UnexpectedSpace:"Unexpected space in placeholder."});var placeholders=superClass=>class PlaceholdersParserMixin extends superClass{parsePlaceholder(expectedNode){if(this.match(144)){const node=this.startNode();this.next();this.assertNoSpace();node.name=super.parseIdentifier(true);this.assertNoSpace();this.expect(144);return this.finishPlaceholder(node,expectedNode);}}finishPlaceholder(node,expectedNode){const isFinished=!!(node.expectedNode&&node.type==="Placeholder");node.expectedNode=expectedNode;return isFinished?node:this.finishNode(node,"Placeholder");}getTokenFromCode(code){if(code===37&&this.input.charCodeAt(this.state.pos+1)===37){this.finishOp(144,2);}else{super.getTokenFromCode(code);}}parseExprAtom(refExpressionErrors){return this.parsePlaceholder("Expression")||super.parseExprAtom(refExpressionErrors);}parseIdentifier(liberal){return this.parsePlaceholder("Identifier")||super.parseIdentifier(liberal);}checkReservedWord(word,startLoc,checkKeywords,isBinding){if(word!==undefined){super.checkReservedWord(word,startLoc,checkKeywords,isBinding);}}parseBindingAtom(){return this.parsePlaceholder("Pattern")||super.parseBindingAtom();}isValidLVal(type,isParenthesized,binding){return type==="Placeholder"||super.isValidLVal(type,isParenthesized,binding);}toAssignable(node,isLHS){if(node&&node.type==="Placeholder"&&node.expectedNode==="Expression"){node.expectedNode="Pattern";}else{super.toAssignable(node,isLHS);}}chStartsBindingIdentifier(ch,pos){if(super.chStartsBindingIdentifier(ch,pos)){return true;}const nextToken=this.lookahead();if(nextToken.type===144){return true;}return false;}verifyBreakContinue(node,isBreak){if(node.label&&node.label.type==="Placeholder")return;super.verifyBreakContinue(node,isBreak);}parseExpressionStatement(node,expr){var _expr$extra;if(expr.type!=="Placeholder"||(_expr$extra=expr.extra)!=null&&_expr$extra.parenthesized){return super.parseExpressionStatement(node,expr);}if(this.match(14)){const stmt=node;stmt.label=this.finishPlaceholder(expr,"Identifier");this.next();stmt.body=super.parseStatementOrSloppyAnnexBFunctionDeclaration();return this.finishNode(stmt,"LabeledStatement");}this.semicolon();node.name=expr.name;return this.finishPlaceholder(node,"Statement");}parseBlock(allowDirectives,createNewLexicalScope,afterBlockParse){return this.parsePlaceholder("BlockStatement")||super.parseBlock(allowDirectives,createNewLexicalScope,afterBlockParse);}parseFunctionId(requireId){return this.parsePlaceholder("Identifier")||super.parseFunctionId(requireId);}parseClass(node,isStatement,optionalId){const type=isStatement?"ClassDeclaration":"ClassExpression";this.next();const oldStrict=this.state.strict;const placeholder=this.parsePlaceholder("Identifier");if(placeholder){if(this.match(81)||this.match(144)||this.match(5)){node.id=placeholder;}else if(optionalId||!isStatement){node.id=null;node.body=this.finishPlaceholder(placeholder,"ClassBody");return this.finishNode(node,type);}else{throw this.raise(PlaceholderErrors.ClassNameIsRequired,this.state.startLoc);}}else{this.parseClassId(node,isStatement,optionalId);}super.parseClassSuper(node);node.body=this.parsePlaceholder("ClassBody")||super.parseClassBody(!!node.superClass,oldStrict);return this.finishNode(node,type);}parseExport(node,decorators){const placeholder=this.parsePlaceholder("Identifier");if(!placeholder)return super.parseExport(node,decorators);if(!this.isContextual(98)&&!this.match(12)){node.specifiers=[];node.source=null;node.declaration=this.finishPlaceholder(placeholder,"Declaration");return this.finishNode(node,"ExportNamedDeclaration");}this.expectPlugin("exportDefaultFrom");const specifier=this.startNode();specifier.exported=placeholder;node.specifiers=[this.finishNode(specifier,"ExportDefaultSpecifier")];return super.parseExport(node,decorators);}isExportDefaultSpecifier(){if(this.match(65)){const next=this.nextTokenStart();if(this.isUnparsedContextual(next,"from")){if(this.input.startsWith(tokenLabelName(144),this.nextTokenStartSince(next+4))){return true;}}}return super.isExportDefaultSpecifier();}maybeParseExportDefaultSpecifier(node,maybeDefaultIdentifier){var _specifiers;if((_specifiers=node.specifiers)!=null&&_specifiers.length){return true;}return super.maybeParseExportDefaultSpecifier(node,maybeDefaultIdentifier);}checkExport(node){const{specifiers}=node;if(specifiers!=null&&specifiers.length){node.specifiers=specifiers.filter(node=>node.exported.type==="Placeholder");}super.checkExport(node);node.specifiers=specifiers;}parseImport(node){const placeholder=this.parsePlaceholder("Identifier");if(!placeholder)return super.parseImport(node);node.specifiers=[];if(!this.isContextual(98)&&!this.match(12)){node.source=this.finishPlaceholder(placeholder,"StringLiteral");this.semicolon();return this.finishNode(node,"ImportDeclaration");}const specifier=this.startNodeAtNode(placeholder);specifier.local=placeholder;node.specifiers.push(this.finishNode(specifier,"ImportDefaultSpecifier"));if(this.eat(12)){const hasStarImport=this.maybeParseStarImportSpecifier(node);if(!hasStarImport)this.parseNamedImportSpecifiers(node);}this.expectContextual(98);node.source=this.parseImportSource();this.semicolon();return this.finishNode(node,"ImportDeclaration");}parseImportSource(){return this.parsePlaceholder("StringLiteral")||super.parseImportSource();}assertNoSpace(){if(this.state.start>this.state.lastTokEndLoc.index){this.raise(PlaceholderErrors.UnexpectedSpace,this.state.lastTokEndLoc);}}};var v8intrinsic=superClass=>class V8IntrinsicMixin extends superClass{parseV8Intrinsic(){if(this.match(54)){const v8IntrinsicStartLoc=this.state.startLoc;const node=this.startNode();this.next();if(tokenIsIdentifier(this.state.type)){const name=this.parseIdentifierName();const identifier=this.createIdentifier(node,name);identifier.type="V8IntrinsicIdentifier";if(this.match(10)){return identifier;}}this.unexpected(v8IntrinsicStartLoc);}}parseExprAtom(refExpressionErrors){return this.parseV8Intrinsic()||super.parseExprAtom(refExpressionErrors);}};function hasPlugin(plugins,expectedConfig){const[expectedName,expectedOptions]=typeof expectedConfig==="string"?[expectedConfig,{}]:expectedConfig;const expectedKeys=Object.keys(expectedOptions);const expectedOptionsIsEmpty=expectedKeys.length===0;return plugins.some(p=>{if(typeof p==="string"){return expectedOptionsIsEmpty&&p===expectedName;}else{const[pluginName,pluginOptions]=p;if(pluginName!==expectedName){return false;}for(const key of expectedKeys){if(pluginOptions[key]!==expectedOptions[key]){return false;}}return true;}});}function getPluginOption(plugins,name,option){const plugin=plugins.find(plugin=>{if(Array.isArray(plugin)){return plugin[0]===name;}else{return plugin===name;}});if(plugin&&Array.isArray(plugin)&&plugin.length>1){return plugin[1][option];}return null;}const PIPELINE_PROPOSALS=["minimal","fsharp","hack","smart"];const TOPIC_TOKENS=["^^","@@","^","%","#"];const RECORD_AND_TUPLE_SYNTAX_TYPES=["hash","bar"];function validatePlugins(plugins){if(hasPlugin(plugins,"decorators")){if(hasPlugin(plugins,"decorators-legacy")){throw new Error("Cannot use the decorators and decorators-legacy plugin together");}const decoratorsBeforeExport=getPluginOption(plugins,"decorators","decoratorsBeforeExport");if(decoratorsBeforeExport!=null&&typeof decoratorsBeforeExport!=="boolean"){throw new Error("'decoratorsBeforeExport' must be a boolean, if specified.");}const allowCallParenthesized=getPluginOption(plugins,"decorators","allowCallParenthesized");if(allowCallParenthesized!=null&&typeof allowCallParenthesized!=="boolean"){throw new Error("'allowCallParenthesized' must be a boolean.");}}if(hasPlugin(plugins,"flow")&&hasPlugin(plugins,"typescript")){throw new Error("Cannot combine flow and typescript plugins.");}if(hasPlugin(plugins,"placeholders")&&hasPlugin(plugins,"v8intrinsic")){throw new Error("Cannot combine placeholders and v8intrinsic plugins.");}if(hasPlugin(plugins,"pipelineOperator")){const proposal=getPluginOption(plugins,"pipelineOperator","proposal");if(!PIPELINE_PROPOSALS.includes(proposal)){const proposalList=PIPELINE_PROPOSALS.map(p=>"\"".concat(p,"\"")).join(", ");throw new Error("\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ".concat(proposalList,"."));}const tupleSyntaxIsHash=hasPlugin(plugins,["recordAndTuple",{syntaxType:"hash"}]);if(proposal==="hack"){if(hasPlugin(plugins,"placeholders")){throw new Error("Cannot combine placeholders plugin and Hack-style pipes.");}if(hasPlugin(plugins,"v8intrinsic")){throw new Error("Cannot combine v8intrinsic plugin and Hack-style pipes.");}const topicToken=getPluginOption(plugins,"pipelineOperator","topicToken");if(!TOPIC_TOKENS.includes(topicToken)){const tokenList=TOPIC_TOKENS.map(t=>"\"".concat(t,"\"")).join(", ");throw new Error("\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ".concat(tokenList,"."));}if(topicToken==="#"&&tupleSyntaxIsHash){throw new Error('Plugin conflict between `["pipelineOperator", { proposal: "hack", topicToken: "#" }]` and `["recordAndtuple", { syntaxType: "hash"}]`.');}}else if(proposal==="smart"&&tupleSyntaxIsHash){throw new Error('Plugin conflict between `["pipelineOperator", { proposal: "smart" }]` and `["recordAndtuple", { syntaxType: "hash"}]`.');}}if(hasPlugin(plugins,"moduleAttributes")){{if(hasPlugin(plugins,"importAssertions")||hasPlugin(plugins,"importAttributes")){throw new Error("Cannot combine importAssertions, importAttributes and moduleAttributes plugins.");}const moduleAttributesVersionPluginOption=getPluginOption(plugins,"moduleAttributes","version");if(moduleAttributesVersionPluginOption!=="may-2020"){throw new Error("The 'moduleAttributes' plugin requires a 'version' option,"+" representing the last proposal update. Currently, the"+" only supported value is 'may-2020'.");}}}if(hasPlugin(plugins,"importAssertions")&&hasPlugin(plugins,"importAttributes")){throw new Error("Cannot combine importAssertions and importAttributes plugins.");}if(hasPlugin(plugins,"recordAndTuple")&&getPluginOption(plugins,"recordAndTuple","syntaxType")!=null&&!RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins,"recordAndTuple","syntaxType"))){throw new Error("The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: "+RECORD_AND_TUPLE_SYNTAX_TYPES.map(p=>"'".concat(p,"'")).join(", "));}if(hasPlugin(plugins,"asyncDoExpressions")&&!hasPlugin(plugins,"doExpressions")){const error=new Error("'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.");error.missingPlugins="doExpressions";throw error;}if(hasPlugin(plugins,"optionalChainingAssign")&&getPluginOption(plugins,"optionalChainingAssign","version")!=="2023-07"){throw new Error("The 'optionalChainingAssign' plugin requires a 'version' option,"+" representing the last proposal update. Currently, the"+" only supported value is '2023-07'.");}}const mixinPlugins={estree,jsx,flow,typescript,v8intrinsic,placeholders};const mixinPluginNames=Object.keys(mixinPlugins);const defaultOptions={sourceType:"script",sourceFilename:undefined,startColumn:0,startLine:1,allowAwaitOutsideFunction:false,allowReturnOutsideFunction:false,allowNewTargetOutsideFunction:false,allowImportExportEverywhere:false,allowSuperOutsideMethod:false,allowUndeclaredExports:false,plugins:[],strictMode:null,ranges:false,tokens:false,createImportExpressions:false,createParenthesizedExpressions:false,errorRecovery:false,attachComment:true,annexB:true};function getOptions(opts){if(opts==null){return Object.assign({},defaultOptions);}if(opts.annexB!=null&&opts.annexB!==false){throw new Error("The `annexB` option can only be set to `false`.");}const options={};for(const key of Object.keys(defaultOptions)){var _opts$key;options[key]=(_opts$key=opts[key])!=null?_opts$key:defaultOptions[key];}return options;}class ExpressionParser extends LValParser{checkProto(prop,isRecord,protoRef,refExpressionErrors){if(prop.type==="SpreadElement"||this.isObjectMethod(prop)||prop.computed||prop.shorthand){return;}const key=prop.key;const name=key.type==="Identifier"?key.name:key.value;if(name==="__proto__"){if(isRecord){this.raise(Errors.RecordNoProto,key);return;}if(protoRef.used){if(refExpressionErrors){if(refExpressionErrors.doubleProtoLoc===null){refExpressionErrors.doubleProtoLoc=key.loc.start;}}else{this.raise(Errors.DuplicateProto,key);}}protoRef.used=true;}}shouldExitDescending(expr,potentialArrowAt){return expr.type==="ArrowFunctionExpression"&&expr.start===potentialArrowAt;}getExpression(){this.enterInitialScopes();this.nextToken();const expr=this.parseExpression();if(!this.match(139)){this.unexpected();}this.finalizeRemainingComments();expr.comments=this.comments;expr.errors=this.state.errors;if(this.options.tokens){expr.tokens=this.tokens;}return expr;}parseExpression(disallowIn,refExpressionErrors){if(disallowIn){return this.disallowInAnd(()=>this.parseExpressionBase(refExpressionErrors));}return this.allowInAnd(()=>this.parseExpressionBase(refExpressionErrors));}parseExpressionBase(refExpressionErrors){const startLoc=this.state.startLoc;const expr=this.parseMaybeAssign(refExpressionErrors);if(this.match(12)){const node=this.startNodeAt(startLoc);node.expressions=[expr];while(this.eat(12)){node.expressions.push(this.parseMaybeAssign(refExpressionErrors));}this.toReferencedList(node.expressions);return this.finishNode(node,"SequenceExpression");}return expr;}parseMaybeAssignDisallowIn(refExpressionErrors,afterLeftParse){return this.disallowInAnd(()=>this.parseMaybeAssign(refExpressionErrors,afterLeftParse));}parseMaybeAssignAllowIn(refExpressionErrors,afterLeftParse){return this.allowInAnd(()=>this.parseMaybeAssign(refExpressionErrors,afterLeftParse));}setOptionalParametersError(refExpressionErrors,resultError){var _resultError$loc;refExpressionErrors.optionalParametersLoc=(_resultError$loc=resultError==null?void 0:resultError.loc)!=null?_resultError$loc:this.state.startLoc;}parseMaybeAssign(refExpressionErrors,afterLeftParse){const startLoc=this.state.startLoc;if(this.isContextual(108)){if(this.prodParam.hasYield){let left=this.parseYield();if(afterLeftParse){left=afterLeftParse.call(this,left,startLoc);}return left;}}let ownExpressionErrors;if(refExpressionErrors){ownExpressionErrors=false;}else{refExpressionErrors=new ExpressionErrors();ownExpressionErrors=true;}const{type}=this.state;if(type===10||tokenIsIdentifier(type)){this.state.potentialArrowAt=this.state.start;}let left=this.parseMaybeConditional(refExpressionErrors);if(afterLeftParse){left=afterLeftParse.call(this,left,startLoc);}if(tokenIsAssignment(this.state.type)){const node=this.startNodeAt(startLoc);const operator=this.state.value;node.operator=operator;if(this.match(29)){this.toAssignable(left,true);node.left=left;const startIndex=startLoc.index;if(refExpressionErrors.doubleProtoLoc!=null&&refExpressionErrors.doubleProtoLoc.index>=startIndex){refExpressionErrors.doubleProtoLoc=null;}if(refExpressionErrors.shorthandAssignLoc!=null&&refExpressionErrors.shorthandAssignLoc.index>=startIndex){refExpressionErrors.shorthandAssignLoc=null;}if(refExpressionErrors.privateKeyLoc!=null&&refExpressionErrors.privateKeyLoc.index>=startIndex){this.checkDestructuringPrivate(refExpressionErrors);refExpressionErrors.privateKeyLoc=null;}}else{node.left=left;}this.next();node.right=this.parseMaybeAssign();this.checkLVal(left,{in:this.finishNode(node,"AssignmentExpression")});return node;}else if(ownExpressionErrors){this.checkExpressionErrors(refExpressionErrors,true);}return left;}parseMaybeConditional(refExpressionErrors){const startLoc=this.state.startLoc;const potentialArrowAt=this.state.potentialArrowAt;const expr=this.parseExprOps(refExpressionErrors);if(this.shouldExitDescending(expr,potentialArrowAt)){return expr;}return this.parseConditional(expr,startLoc,refExpressionErrors);}parseConditional(expr,startLoc,refExpressionErrors){if(this.eat(17)){const node=this.startNodeAt(startLoc);node.test=expr;node.consequent=this.parseMaybeAssignAllowIn();this.expect(14);node.alternate=this.parseMaybeAssign();return this.finishNode(node,"ConditionalExpression");}return expr;}parseMaybeUnaryOrPrivate(refExpressionErrors){return this.match(138)?this.parsePrivateName():this.parseMaybeUnary(refExpressionErrors);}parseExprOps(refExpressionErrors){const startLoc=this.state.startLoc;const potentialArrowAt=this.state.potentialArrowAt;const expr=this.parseMaybeUnaryOrPrivate(refExpressionErrors);if(this.shouldExitDescending(expr,potentialArrowAt)){return expr;}return this.parseExprOp(expr,startLoc,-1);}parseExprOp(left,leftStartLoc,minPrec){if(this.isPrivateName(left)){const value=this.getPrivateNameSV(left);if(minPrec>=tokenOperatorPrecedence(58)||!this.prodParam.hasIn||!this.match(58)){this.raise(Errors.PrivateInExpectedIn,left,{identifierName:value});}this.classScope.usePrivateName(value,left.loc.start);}const op=this.state.type;if(tokenIsOperator(op)&&(this.prodParam.hasIn||!this.match(58))){let prec=tokenOperatorPrecedence(op);if(prec>minPrec){if(op===39){this.expectPlugin("pipelineOperator");if(this.state.inFSharpPipelineDirectBody){return left;}this.checkPipelineAtInfixOperator(left,leftStartLoc);}const node=this.startNodeAt(leftStartLoc);node.left=left;node.operator=this.state.value;const logical=op===41||op===42;const coalesce=op===40;if(coalesce){prec=tokenOperatorPrecedence(42);}this.next();if(op===39&&this.hasPlugin(["pipelineOperator",{proposal:"minimal"}])){if(this.state.type===96&&this.prodParam.hasAwait){throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody,this.state.startLoc);}}node.right=this.parseExprOpRightExpr(op,prec);const finishedNode=this.finishNode(node,logical||coalesce?"LogicalExpression":"BinaryExpression");const nextOp=this.state.type;if(coalesce&&(nextOp===41||nextOp===42)||logical&&nextOp===40){throw this.raise(Errors.MixingCoalesceWithLogical,this.state.startLoc);}return this.parseExprOp(finishedNode,leftStartLoc,minPrec);}}return left;}parseExprOpRightExpr(op,prec){const startLoc=this.state.startLoc;switch(op){case 39:switch(this.getPluginOption("pipelineOperator","proposal")){case"hack":return this.withTopicBindingContext(()=>{return this.parseHackPipeBody();});case"smart":return this.withTopicBindingContext(()=>{if(this.prodParam.hasYield&&this.isContextual(108)){throw this.raise(Errors.PipeBodyIsTighter,this.state.startLoc);}return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op,prec),startLoc);});case"fsharp":return this.withSoloAwaitPermittingContext(()=>{return this.parseFSharpPipelineBody(prec);});}default:return this.parseExprOpBaseRightExpr(op,prec);}}parseExprOpBaseRightExpr(op,prec){const startLoc=this.state.startLoc;return this.parseExprOp(this.parseMaybeUnaryOrPrivate(),startLoc,tokenIsRightAssociative(op)?prec-1:prec);}parseHackPipeBody(){var _body$extra;const{startLoc}=this.state;const body=this.parseMaybeAssign();const requiredParentheses=UnparenthesizedPipeBodyDescriptions.has(body.type);if(requiredParentheses&&!((_body$extra=body.extra)!=null&&_body$extra.parenthesized)){this.raise(Errors.PipeUnparenthesizedBody,startLoc,{type:body.type});}if(!this.topicReferenceWasUsedInCurrentContext()){this.raise(Errors.PipeTopicUnused,startLoc);}return body;}checkExponentialAfterUnary(node){if(this.match(57)){this.raise(Errors.UnexpectedTokenUnaryExponentiation,node.argument);}}parseMaybeUnary(refExpressionErrors,sawUnary){const startLoc=this.state.startLoc;const isAwait=this.isContextual(96);if(isAwait&&this.isAwaitAllowed()){this.next();const expr=this.parseAwait(startLoc);if(!sawUnary)this.checkExponentialAfterUnary(expr);return expr;}const update=this.match(34);const node=this.startNode();if(tokenIsPrefix(this.state.type)){node.operator=this.state.value;node.prefix=true;if(this.match(72)){this.expectPlugin("throwExpressions");}const isDelete=this.match(89);this.next();node.argument=this.parseMaybeUnary(null,true);this.checkExpressionErrors(refExpressionErrors,true);if(this.state.strict&&isDelete){const arg=node.argument;if(arg.type==="Identifier"){this.raise(Errors.StrictDelete,node);}else if(this.hasPropertyAsPrivateName(arg)){this.raise(Errors.DeletePrivateField,node);}}if(!update){if(!sawUnary){this.checkExponentialAfterUnary(node);}return this.finishNode(node,"UnaryExpression");}}const expr=this.parseUpdate(node,update,refExpressionErrors);if(isAwait){const{type}=this.state;const startsExpr=this.hasPlugin("v8intrinsic")?tokenCanStartExpression(type):tokenCanStartExpression(type)&&!this.match(54);if(startsExpr&&!this.isAmbiguousAwait()){this.raiseOverwrite(Errors.AwaitNotInAsyncContext,startLoc);return this.parseAwait(startLoc);}}return expr;}parseUpdate(node,update,refExpressionErrors){if(update){const updateExpressionNode=node;this.checkLVal(updateExpressionNode.argument,{in:this.finishNode(updateExpressionNode,"UpdateExpression")});return node;}const startLoc=this.state.startLoc;let expr=this.parseExprSubscripts(refExpressionErrors);if(this.checkExpressionErrors(refExpressionErrors,false))return expr;while(tokenIsPostfix(this.state.type)&&!this.canInsertSemicolon()){const node=this.startNodeAt(startLoc);node.operator=this.state.value;node.prefix=false;node.argument=expr;this.next();this.checkLVal(expr,{in:expr=this.finishNode(node,"UpdateExpression")});}return expr;}parseExprSubscripts(refExpressionErrors){const startLoc=this.state.startLoc;const potentialArrowAt=this.state.potentialArrowAt;const expr=this.parseExprAtom(refExpressionErrors);if(this.shouldExitDescending(expr,potentialArrowAt)){return expr;}return this.parseSubscripts(expr,startLoc);}parseSubscripts(base,startLoc,noCalls){const state={optionalChainMember:false,maybeAsyncArrow:this.atPossibleAsyncArrow(base),stop:false};do{base=this.parseSubscript(base,startLoc,noCalls,state);state.maybeAsyncArrow=false;}while(!state.stop);return base;}parseSubscript(base,startLoc,noCalls,state){const{type}=this.state;if(!noCalls&&type===15){return this.parseBind(base,startLoc,noCalls,state);}else if(tokenIsTemplate(type)){return this.parseTaggedTemplateExpression(base,startLoc,state);}let optional=false;if(type===18){if(noCalls){this.raise(Errors.OptionalChainingNoNew,this.state.startLoc);if(this.lookaheadCharCode()===40){state.stop=true;return base;}}state.optionalChainMember=optional=true;this.next();}if(!noCalls&&this.match(10)){return this.parseCoverCallAndAsyncArrowHead(base,startLoc,state,optional);}else{const computed=this.eat(0);if(computed||optional||this.eat(16)){return this.parseMember(base,startLoc,state,computed,optional);}else{state.stop=true;return base;}}}parseMember(base,startLoc,state,computed,optional){const node=this.startNodeAt(startLoc);node.object=base;node.computed=computed;if(computed){node.property=this.parseExpression();this.expect(3);}else if(this.match(138)){if(base.type==="Super"){this.raise(Errors.SuperPrivateField,startLoc);}this.classScope.usePrivateName(this.state.value,this.state.startLoc);node.property=this.parsePrivateName();}else{node.property=this.parseIdentifier(true);}if(state.optionalChainMember){node.optional=optional;return this.finishNode(node,"OptionalMemberExpression");}else{return this.finishNode(node,"MemberExpression");}}parseBind(base,startLoc,noCalls,state){const node=this.startNodeAt(startLoc);node.object=base;this.next();node.callee=this.parseNoCallExpr();state.stop=true;return this.parseSubscripts(this.finishNode(node,"BindExpression"),startLoc,noCalls);}parseCoverCallAndAsyncArrowHead(base,startLoc,state,optional){const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;let refExpressionErrors=null;this.state.maybeInArrowParameters=true;this.next();const node=this.startNodeAt(startLoc);node.callee=base;const{maybeAsyncArrow,optionalChainMember}=state;if(maybeAsyncArrow){this.expressionScope.enter(newAsyncArrowScope());refExpressionErrors=new ExpressionErrors();}if(optionalChainMember){node.optional=optional;}if(optional){node.arguments=this.parseCallExpressionArguments(11);}else{node.arguments=this.parseCallExpressionArguments(11,base.type==="Import",base.type!=="Super",node,refExpressionErrors);}let finishedNode=this.finishCallExpression(node,optionalChainMember);if(maybeAsyncArrow&&this.shouldParseAsyncArrow()&&!optional){state.stop=true;this.checkDestructuringPrivate(refExpressionErrors);this.expressionScope.validateAsPattern();this.expressionScope.exit();finishedNode=this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc),finishedNode);}else{if(maybeAsyncArrow){this.checkExpressionErrors(refExpressionErrors,true);this.expressionScope.exit();}this.toReferencedArguments(finishedNode);}this.state.maybeInArrowParameters=oldMaybeInArrowParameters;return finishedNode;}toReferencedArguments(node,isParenthesizedExpr){this.toReferencedListDeep(node.arguments,isParenthesizedExpr);}parseTaggedTemplateExpression(base,startLoc,state){const node=this.startNodeAt(startLoc);node.tag=base;node.quasi=this.parseTemplate(true);if(state.optionalChainMember){this.raise(Errors.OptionalChainingNoTemplate,startLoc);}return this.finishNode(node,"TaggedTemplateExpression");}atPossibleAsyncArrow(base){return base.type==="Identifier"&&base.name==="async"&&this.state.lastTokEndLoc.index===base.end&&!this.canInsertSemicolon()&&base.end-base.start===5&&base.start===this.state.potentialArrowAt;}expectImportAttributesPlugin(){if(!this.hasPlugin("importAssertions")){this.expectPlugin("importAttributes");}}finishCallExpression(node,optional){if(node.callee.type==="Import"){if(node.arguments.length===2){{if(!this.hasPlugin("moduleAttributes")){this.expectImportAttributesPlugin();}}}if(node.arguments.length===0||node.arguments.length>2){this.raise(Errors.ImportCallArity,node,{maxArgumentCount:this.hasPlugin("importAttributes")||this.hasPlugin("importAssertions")||this.hasPlugin("moduleAttributes")?2:1});}else{for(const arg of node.arguments){if(arg.type==="SpreadElement"){this.raise(Errors.ImportCallSpreadArgument,arg);}}}}return this.finishNode(node,optional?"OptionalCallExpression":"CallExpression");}parseCallExpressionArguments(close,dynamicImport,allowPlaceholder,nodeForExtra,refExpressionErrors){const elts=[];let first=true;const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=false;while(!this.eat(close)){if(first){first=false;}else{this.expect(12);if(this.match(close)){if(dynamicImport&&!this.hasPlugin("importAttributes")&&!this.hasPlugin("importAssertions")&&!this.hasPlugin("moduleAttributes")){this.raise(Errors.ImportCallArgumentTrailingComma,this.state.lastTokStartLoc);}if(nodeForExtra){this.addTrailingCommaExtraToNode(nodeForExtra);}this.next();break;}}elts.push(this.parseExprListItem(false,refExpressionErrors,allowPlaceholder));}this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody;return elts;}shouldParseAsyncArrow(){return this.match(19)&&!this.canInsertSemicolon();}parseAsyncArrowFromCallExpression(node,call){var _call$extra;this.resetPreviousNodeTrailingComments(call);this.expect(19);this.parseArrowExpression(node,call.arguments,true,(_call$extra=call.extra)==null?void 0:_call$extra.trailingCommaLoc);if(call.innerComments){setInnerComments(node,call.innerComments);}if(call.callee.trailingComments){setInnerComments(node,call.callee.trailingComments);}return node;}parseNoCallExpr(){const startLoc=this.state.startLoc;return this.parseSubscripts(this.parseExprAtom(),startLoc,true);}parseExprAtom(refExpressionErrors){let node;let decorators=null;const{type}=this.state;switch(type){case 79:return this.parseSuper();case 83:node=this.startNode();this.next();if(this.match(16)){return this.parseImportMetaProperty(node);}if(this.match(10)){if(this.options.createImportExpressions){return this.parseImportCall(node);}else{return this.finishNode(node,"Import");}}else{this.raise(Errors.UnsupportedImport,this.state.lastTokStartLoc);return this.finishNode(node,"Import");}case 78:node=this.startNode();this.next();return this.finishNode(node,"ThisExpression");case 90:{return this.parseDo(this.startNode(),false);}case 56:case 31:{this.readRegexp();return this.parseRegExpLiteral(this.state.value);}case 134:return this.parseNumericLiteral(this.state.value);case 135:return this.parseBigIntLiteral(this.state.value);case 136:return this.parseDecimalLiteral(this.state.value);case 133:return this.parseStringLiteral(this.state.value);case 84:return this.parseNullLiteral();case 85:return this.parseBooleanLiteral(true);case 86:return this.parseBooleanLiteral(false);case 10:{const canBeArrow=this.state.potentialArrowAt===this.state.start;return this.parseParenAndDistinguishExpression(canBeArrow);}case 2:case 1:{return this.parseArrayLike(this.state.type===2?4:3,false,true);}case 0:{return this.parseArrayLike(3,true,false,refExpressionErrors);}case 6:case 7:{return this.parseObjectLike(this.state.type===6?9:8,false,true);}case 5:{return this.parseObjectLike(8,false,false,refExpressionErrors);}case 68:return this.parseFunctionOrFunctionSent();case 26:decorators=this.parseDecorators();case 80:return this.parseClass(this.maybeTakeDecorators(decorators,this.startNode()),false);case 77:return this.parseNewOrNewTarget();case 25:case 24:return this.parseTemplate(false);case 15:{node=this.startNode();this.next();node.object=null;const callee=node.callee=this.parseNoCallExpr();if(callee.type==="MemberExpression"){return this.finishNode(node,"BindExpression");}else{throw this.raise(Errors.UnsupportedBind,callee);}}case 138:{this.raise(Errors.PrivateInExpectedIn,this.state.startLoc,{identifierName:this.state.value});return this.parsePrivateName();}case 33:{return this.parseTopicReferenceThenEqualsSign(54,"%");}case 32:{return this.parseTopicReferenceThenEqualsSign(44,"^");}case 37:case 38:{return this.parseTopicReference("hack");}case 44:case 54:case 27:{const pipeProposal=this.getPluginOption("pipelineOperator","proposal");if(pipeProposal){return this.parseTopicReference(pipeProposal);}this.unexpected();break;}case 47:{const lookaheadCh=this.input.codePointAt(this.nextTokenStart());if(isIdentifierStart(lookaheadCh)||lookaheadCh===62){this.expectOnePlugin(["jsx","flow","typescript"]);}else{this.unexpected();}break;}default:if(tokenIsIdentifier(type)){if(this.isContextual(127)&&this.lookaheadInLineCharCode()===123){return this.parseModuleExpression();}const canBeArrow=this.state.potentialArrowAt===this.state.start;const containsEsc=this.state.containsEsc;const id=this.parseIdentifier();if(!containsEsc&&id.name==="async"&&!this.canInsertSemicolon()){const{type}=this.state;if(type===68){this.resetPreviousNodeTrailingComments(id);this.next();return this.parseAsyncFunctionExpression(this.startNodeAtNode(id));}else if(tokenIsIdentifier(type)){if(this.lookaheadCharCode()===61){return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));}else{return id;}}else if(type===90){this.resetPreviousNodeTrailingComments(id);return this.parseDo(this.startNodeAtNode(id),true);}}if(canBeArrow&&this.match(19)&&!this.canInsertSemicolon()){this.next();return this.parseArrowExpression(this.startNodeAtNode(id),[id],false);}return id;}else{this.unexpected();}}}parseTopicReferenceThenEqualsSign(topicTokenType,topicTokenValue){const pipeProposal=this.getPluginOption("pipelineOperator","proposal");if(pipeProposal){this.state.type=topicTokenType;this.state.value=topicTokenValue;this.state.pos--;this.state.end--;this.state.endLoc=createPositionWithColumnOffset(this.state.endLoc,-1);return this.parseTopicReference(pipeProposal);}else{this.unexpected();}}parseTopicReference(pipeProposal){const node=this.startNode();const startLoc=this.state.startLoc;const tokenType=this.state.type;this.next();return this.finishTopicReference(node,startLoc,pipeProposal,tokenType);}finishTopicReference(node,startLoc,pipeProposal,tokenType){if(this.testTopicReferenceConfiguration(pipeProposal,startLoc,tokenType)){const nodeType=pipeProposal==="smart"?"PipelinePrimaryTopicReference":"TopicReference";if(!this.topicReferenceIsAllowedInCurrentContext()){this.raise(pipeProposal==="smart"?Errors.PrimaryTopicNotAllowed:Errors.PipeTopicUnbound,startLoc);}this.registerTopicReference();return this.finishNode(node,nodeType);}else{throw this.raise(Errors.PipeTopicUnconfiguredToken,startLoc,{token:tokenLabelName(tokenType)});}}testTopicReferenceConfiguration(pipeProposal,startLoc,tokenType){switch(pipeProposal){case"hack":{return this.hasPlugin(["pipelineOperator",{topicToken:tokenLabelName(tokenType)}]);}case"smart":return tokenType===27;default:throw this.raise(Errors.PipeTopicRequiresHackPipes,startLoc);}}parseAsyncArrowUnaryFunction(node){this.prodParam.enter(functionFlags(true,this.prodParam.hasYield));const params=[this.parseIdentifier()];this.prodParam.exit();if(this.hasPrecedingLineBreak()){this.raise(Errors.LineTerminatorBeforeArrow,this.state.curPosition());}this.expect(19);return this.parseArrowExpression(node,params,true);}parseDo(node,isAsync){this.expectPlugin("doExpressions");if(isAsync){this.expectPlugin("asyncDoExpressions");}node.async=isAsync;this.next();const oldLabels=this.state.labels;this.state.labels=[];if(isAsync){this.prodParam.enter(2);node.body=this.parseBlock();this.prodParam.exit();}else{node.body=this.parseBlock();}this.state.labels=oldLabels;return this.finishNode(node,"DoExpression");}parseSuper(){const node=this.startNode();this.next();if(this.match(10)&&!this.scope.allowDirectSuper&&!this.options.allowSuperOutsideMethod){this.raise(Errors.SuperNotAllowed,node);}else if(!this.scope.allowSuper&&!this.options.allowSuperOutsideMethod){this.raise(Errors.UnexpectedSuper,node);}if(!this.match(10)&&!this.match(0)&&!this.match(16)){this.raise(Errors.UnsupportedSuper,node);}return this.finishNode(node,"Super");}parsePrivateName(){const node=this.startNode();const id=this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc,1));const name=this.state.value;this.next();node.id=this.createIdentifier(id,name);return this.finishNode(node,"PrivateName");}parseFunctionOrFunctionSent(){const node=this.startNode();this.next();if(this.prodParam.hasYield&&this.match(16)){const meta=this.createIdentifier(this.startNodeAtNode(node),"function");this.next();if(this.match(103)){this.expectPlugin("functionSent");}else if(!this.hasPlugin("functionSent")){this.unexpected();}return this.parseMetaProperty(node,meta,"sent");}return this.parseFunction(node);}parseMetaProperty(node,meta,propertyName){node.meta=meta;const containsEsc=this.state.containsEsc;node.property=this.parseIdentifier(true);if(node.property.name!==propertyName||containsEsc){this.raise(Errors.UnsupportedMetaProperty,node.property,{target:meta.name,onlyValidPropertyName:propertyName});}return this.finishNode(node,"MetaProperty");}parseImportMetaProperty(node){const id=this.createIdentifier(this.startNodeAtNode(node),"import");this.next();if(this.isContextual(101)){if(!this.inModule){this.raise(Errors.ImportMetaOutsideModule,id);}this.sawUnambiguousESM=true;}else if(this.isContextual(105)||this.isContextual(97)){const isSource=this.isContextual(105);if(!isSource)this.unexpected();this.expectPlugin(isSource?"sourcePhaseImports":"deferredImportEvaluation");if(!this.options.createImportExpressions){throw this.raise(Errors.DynamicImportPhaseRequiresImportExpressions,this.state.startLoc,{phase:this.state.value});}this.next();node.phase=isSource?"source":"defer";return this.parseImportCall(node);}return this.parseMetaProperty(node,id,"meta");}parseLiteralAtNode(value,type,node){this.addExtra(node,"rawValue",value);this.addExtra(node,"raw",this.input.slice(node.start,this.state.end));node.value=value;this.next();return this.finishNode(node,type);}parseLiteral(value,type){const node=this.startNode();return this.parseLiteralAtNode(value,type,node);}parseStringLiteral(value){return this.parseLiteral(value,"StringLiteral");}parseNumericLiteral(value){return this.parseLiteral(value,"NumericLiteral");}parseBigIntLiteral(value){return this.parseLiteral(value,"BigIntLiteral");}parseDecimalLiteral(value){return this.parseLiteral(value,"DecimalLiteral");}parseRegExpLiteral(value){const node=this.parseLiteral(value.value,"RegExpLiteral");node.pattern=value.pattern;node.flags=value.flags;return node;}parseBooleanLiteral(value){const node=this.startNode();node.value=value;this.next();return this.finishNode(node,"BooleanLiteral");}parseNullLiteral(){const node=this.startNode();this.next();return this.finishNode(node,"NullLiteral");}parseParenAndDistinguishExpression(canBeArrow){const startLoc=this.state.startLoc;let val;this.next();this.expressionScope.enter(newArrowHeadScope());const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.maybeInArrowParameters=true;this.state.inFSharpPipelineDirectBody=false;const innerStartLoc=this.state.startLoc;const exprList=[];const refExpressionErrors=new ExpressionErrors();let first=true;let spreadStartLoc;let optionalCommaStartLoc;while(!this.match(11)){if(first){first=false;}else{this.expect(12,refExpressionErrors.optionalParametersLoc===null?null:refExpressionErrors.optionalParametersLoc);if(this.match(11)){optionalCommaStartLoc=this.state.startLoc;break;}}if(this.match(21)){const spreadNodeStartLoc=this.state.startLoc;spreadStartLoc=this.state.startLoc;exprList.push(this.parseParenItem(this.parseRestBinding(),spreadNodeStartLoc));if(!this.checkCommaAfterRest(41)){break;}}else{exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors,this.parseParenItem));}}const innerEndLoc=this.state.lastTokEndLoc;this.expect(11);this.state.maybeInArrowParameters=oldMaybeInArrowParameters;this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody;let arrowNode=this.startNodeAt(startLoc);if(canBeArrow&&this.shouldParseArrow(exprList)&&(arrowNode=this.parseArrow(arrowNode))){this.checkDestructuringPrivate(refExpressionErrors);this.expressionScope.validateAsPattern();this.expressionScope.exit();this.parseArrowExpression(arrowNode,exprList,false);return arrowNode;}this.expressionScope.exit();if(!exprList.length){this.unexpected(this.state.lastTokStartLoc);}if(optionalCommaStartLoc)this.unexpected(optionalCommaStartLoc);if(spreadStartLoc)this.unexpected(spreadStartLoc);this.checkExpressionErrors(refExpressionErrors,true);this.toReferencedListDeep(exprList,true);if(exprList.length>1){val=this.startNodeAt(innerStartLoc);val.expressions=exprList;this.finishNode(val,"SequenceExpression");this.resetEndLocation(val,innerEndLoc);}else{val=exprList[0];}return this.wrapParenthesis(startLoc,val);}wrapParenthesis(startLoc,expression){if(!this.options.createParenthesizedExpressions){this.addExtra(expression,"parenthesized",true);this.addExtra(expression,"parenStart",startLoc.index);this.takeSurroundingComments(expression,startLoc.index,this.state.lastTokEndLoc.index);return expression;}const parenExpression=this.startNodeAt(startLoc);parenExpression.expression=expression;return this.finishNode(parenExpression,"ParenthesizedExpression");}shouldParseArrow(params){return!this.canInsertSemicolon();}parseArrow(node){if(this.eat(19)){return node;}}parseParenItem(node,startLoc){return node;}parseNewOrNewTarget(){const node=this.startNode();this.next();if(this.match(16)){const meta=this.createIdentifier(this.startNodeAtNode(node),"new");this.next();const metaProp=this.parseMetaProperty(node,meta,"target");if(!this.scope.inNonArrowFunction&&!this.scope.inClass&&!this.options.allowNewTargetOutsideFunction){this.raise(Errors.UnexpectedNewTarget,metaProp);}return metaProp;}return this.parseNew(node);}parseNew(node){this.parseNewCallee(node);if(this.eat(10)){const args=this.parseExprList(11);this.toReferencedList(args);node.arguments=args;}else{node.arguments=[];}return this.finishNode(node,"NewExpression");}parseNewCallee(node){const isImport=this.match(83);const callee=this.parseNoCallExpr();node.callee=callee;if(isImport&&(callee.type==="Import"||callee.type==="ImportExpression")){this.raise(Errors.ImportCallNotNewExpression,callee);}}parseTemplateElement(isTagged){const{start,startLoc,end,value}=this.state;const elemStart=start+1;const elem=this.startNodeAt(createPositionWithColumnOffset(startLoc,1));if(value===null){if(!isTagged){this.raise(Errors.InvalidEscapeSequenceTemplate,createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos,1));}}const isTail=this.match(24);const endOffset=isTail?-1:-2;const elemEnd=end+endOffset;elem.value={raw:this.input.slice(elemStart,elemEnd).replace(/\r\n?/g,"\n"),cooked:value===null?null:value.slice(1,endOffset)};elem.tail=isTail;this.next();const finishedNode=this.finishNode(elem,"TemplateElement");this.resetEndLocation(finishedNode,createPositionWithColumnOffset(this.state.lastTokEndLoc,endOffset));return finishedNode;}parseTemplate(isTagged){const node=this.startNode();node.expressions=[];let curElt=this.parseTemplateElement(isTagged);node.quasis=[curElt];while(!curElt.tail){node.expressions.push(this.parseTemplateSubstitution());this.readTemplateContinuation();node.quasis.push(curElt=this.parseTemplateElement(isTagged));}return this.finishNode(node,"TemplateLiteral");}parseTemplateSubstitution(){return this.parseExpression();}parseObjectLike(close,isPattern,isRecord,refExpressionErrors){if(isRecord){this.expectPlugin("recordAndTuple");}const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=false;const propHash=Object.create(null);let first=true;const node=this.startNode();node.properties=[];this.next();while(!this.match(close)){if(first){first=false;}else{this.expect(12);if(this.match(close)){this.addTrailingCommaExtraToNode(node);break;}}let prop;if(isPattern){prop=this.parseBindingProperty();}else{prop=this.parsePropertyDefinition(refExpressionErrors);this.checkProto(prop,isRecord,propHash,refExpressionErrors);}if(isRecord&&!this.isObjectProperty(prop)&&prop.type!=="SpreadElement"){this.raise(Errors.InvalidRecordProperty,prop);}if(prop.shorthand){this.addExtra(prop,"shorthand",true);}node.properties.push(prop);}this.next();this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody;let type="ObjectExpression";if(isPattern){type="ObjectPattern";}else if(isRecord){type="RecordExpression";}return this.finishNode(node,type);}addTrailingCommaExtraToNode(node){this.addExtra(node,"trailingComma",this.state.lastTokStartLoc.index);this.addExtra(node,"trailingCommaLoc",this.state.lastTokStartLoc,false);}maybeAsyncOrAccessorProp(prop){return!prop.computed&&prop.key.type==="Identifier"&&(this.isLiteralPropertyName()||this.match(0)||this.match(55));}parsePropertyDefinition(refExpressionErrors){let decorators=[];if(this.match(26)){if(this.hasPlugin("decorators")){this.raise(Errors.UnsupportedPropertyDecorator,this.state.startLoc);}while(this.match(26)){decorators.push(this.parseDecorator());}}const prop=this.startNode();let isAsync=false;let isAccessor=false;let startLoc;if(this.match(21)){if(decorators.length)this.unexpected();return this.parseSpread();}if(decorators.length){prop.decorators=decorators;decorators=[];}prop.method=false;if(refExpressionErrors){startLoc=this.state.startLoc;}let isGenerator=this.eat(55);this.parsePropertyNamePrefixOperator(prop);const containsEsc=this.state.containsEsc;const key=this.parsePropertyName(prop,refExpressionErrors);if(!isGenerator&&!containsEsc&&this.maybeAsyncOrAccessorProp(prop)){const keyName=key.name;if(keyName==="async"&&!this.hasPrecedingLineBreak()){isAsync=true;this.resetPreviousNodeTrailingComments(key);isGenerator=this.eat(55);this.parsePropertyName(prop);}if(keyName==="get"||keyName==="set"){isAccessor=true;this.resetPreviousNodeTrailingComments(key);prop.kind=keyName;if(this.match(55)){isGenerator=true;this.raise(Errors.AccessorIsGenerator,this.state.curPosition(),{kind:keyName});this.next();}this.parsePropertyName(prop);}}return this.parseObjPropValue(prop,startLoc,isGenerator,isAsync,false,isAccessor,refExpressionErrors);}getGetterSetterExpectedParamCount(method){return method.kind==="get"?0:1;}getObjectOrClassMethodParams(method){return method.params;}checkGetterSetterParams(method){var _params;const paramCount=this.getGetterSetterExpectedParamCount(method);const params=this.getObjectOrClassMethodParams(method);if(params.length!==paramCount){this.raise(method.kind==="get"?Errors.BadGetterArity:Errors.BadSetterArity,method);}if(method.kind==="set"&&((_params=params[params.length-1])==null?void 0:_params.type)==="RestElement"){this.raise(Errors.BadSetterRestParameter,method);}}parseObjectMethod(prop,isGenerator,isAsync,isPattern,isAccessor){if(isAccessor){const finishedProp=this.parseMethod(prop,isGenerator,false,false,false,"ObjectMethod");this.checkGetterSetterParams(finishedProp);return finishedProp;}if(isAsync||isGenerator||this.match(10)){if(isPattern)this.unexpected();prop.kind="method";prop.method=true;return this.parseMethod(prop,isGenerator,isAsync,false,false,"ObjectMethod");}}parseObjectProperty(prop,startLoc,isPattern,refExpressionErrors){prop.shorthand=false;if(this.eat(14)){prop.value=isPattern?this.parseMaybeDefault(this.state.startLoc):this.parseMaybeAssignAllowIn(refExpressionErrors);return this.finishNode(prop,"ObjectProperty");}if(!prop.computed&&prop.key.type==="Identifier"){this.checkReservedWord(prop.key.name,prop.key.loc.start,true,false);if(isPattern){prop.value=this.parseMaybeDefault(startLoc,cloneIdentifier(prop.key));}else if(this.match(29)){const shorthandAssignLoc=this.state.startLoc;if(refExpressionErrors!=null){if(refExpressionErrors.shorthandAssignLoc===null){refExpressionErrors.shorthandAssignLoc=shorthandAssignLoc;}}else{this.raise(Errors.InvalidCoverInitializedName,shorthandAssignLoc);}prop.value=this.parseMaybeDefault(startLoc,cloneIdentifier(prop.key));}else{prop.value=cloneIdentifier(prop.key);}prop.shorthand=true;return this.finishNode(prop,"ObjectProperty");}}parseObjPropValue(prop,startLoc,isGenerator,isAsync,isPattern,isAccessor,refExpressionErrors){const node=this.parseObjectMethod(prop,isGenerator,isAsync,isPattern,isAccessor)||this.parseObjectProperty(prop,startLoc,isPattern,refExpressionErrors);if(!node)this.unexpected();return node;}parsePropertyName(prop,refExpressionErrors){if(this.eat(0)){prop.computed=true;prop.key=this.parseMaybeAssignAllowIn();this.expect(3);}else{const{type,value}=this.state;let key;if(tokenIsKeywordOrIdentifier(type)){key=this.parseIdentifier(true);}else{switch(type){case 134:key=this.parseNumericLiteral(value);break;case 133:key=this.parseStringLiteral(value);break;case 135:key=this.parseBigIntLiteral(value);break;case 136:key=this.parseDecimalLiteral(value);break;case 138:{const privateKeyLoc=this.state.startLoc;if(refExpressionErrors!=null){if(refExpressionErrors.privateKeyLoc===null){refExpressionErrors.privateKeyLoc=privateKeyLoc;}}else{this.raise(Errors.UnexpectedPrivateField,privateKeyLoc);}key=this.parsePrivateName();break;}default:this.unexpected();}}prop.key=key;if(type!==138){prop.computed=false;}}return prop.key;}initFunction(node,isAsync){node.id=null;node.generator=false;node.async=isAsync;}parseMethod(node,isGenerator,isAsync,isConstructor,allowDirectSuper,type){let inClassScope=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;this.initFunction(node,isAsync);node.generator=isGenerator;this.scope.enter(2|16|(inClassScope?64:0)|(allowDirectSuper?32:0));this.prodParam.enter(functionFlags(isAsync,node.generator));this.parseFunctionParams(node,isConstructor);const finishedNode=this.parseFunctionBodyAndFinish(node,type,true);this.prodParam.exit();this.scope.exit();return finishedNode;}parseArrayLike(close,canBePattern,isTuple,refExpressionErrors){if(isTuple){this.expectPlugin("recordAndTuple");}const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=false;const node=this.startNode();this.next();node.elements=this.parseExprList(close,!isTuple,refExpressionErrors,node);this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody;return this.finishNode(node,isTuple?"TupleExpression":"ArrayExpression");}parseArrowExpression(node,params,isAsync,trailingCommaLoc){this.scope.enter(2|4);let flags=functionFlags(isAsync,false);if(!this.match(5)&&this.prodParam.hasIn){flags|=8;}this.prodParam.enter(flags);this.initFunction(node,isAsync);const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;if(params){this.state.maybeInArrowParameters=true;this.setArrowFunctionParameters(node,params,trailingCommaLoc);}this.state.maybeInArrowParameters=false;this.parseFunctionBody(node,true);this.prodParam.exit();this.scope.exit();this.state.maybeInArrowParameters=oldMaybeInArrowParameters;return this.finishNode(node,"ArrowFunctionExpression");}setArrowFunctionParameters(node,params,trailingCommaLoc){this.toAssignableList(params,trailingCommaLoc,false);node.params=params;}parseFunctionBodyAndFinish(node,type){let isMethod=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;this.parseFunctionBody(node,false,isMethod);return this.finishNode(node,type);}parseFunctionBody(node,allowExpression){let isMethod=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const isExpression=allowExpression&&!this.match(5);this.expressionScope.enter(newExpressionScope());if(isExpression){node.body=this.parseMaybeAssign();this.checkParams(node,false,allowExpression,false);}else{const oldStrict=this.state.strict;const oldLabels=this.state.labels;this.state.labels=[];this.prodParam.enter(this.prodParam.currentFlags()|4);node.body=this.parseBlock(true,false,hasStrictModeDirective=>{const nonSimple=!this.isSimpleParamList(node.params);if(hasStrictModeDirective&&nonSimple){this.raise(Errors.IllegalLanguageModeDirective,(node.kind==="method"||node.kind==="constructor")&&!!node.key?node.key.loc.end:node);}const strictModeChanged=!oldStrict&&this.state.strict;this.checkParams(node,!this.state.strict&&!allowExpression&&!isMethod&&!nonSimple,allowExpression,strictModeChanged);if(this.state.strict&&node.id){this.checkIdentifier(node.id,65,strictModeChanged);}});this.prodParam.exit();this.state.labels=oldLabels;}this.expressionScope.exit();}isSimpleParameter(node){return node.type==="Identifier";}isSimpleParamList(params){for(let i=0,len=params.length;i<len;i++){if(!this.isSimpleParameter(params[i]))return false;}return true;}checkParams(node,allowDuplicates,isArrowFunction){let strictModeChanged=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;const checkClashes=!allowDuplicates&&new Set();const formalParameters={type:"FormalParameters"};for(const param of node.params){this.checkLVal(param,{in:formalParameters,binding:5,checkClashes,strictModeChanged});}}parseExprList(close,allowEmpty,refExpressionErrors,nodeForExtra){const elts=[];let first=true;while(!this.eat(close)){if(first){first=false;}else{this.expect(12);if(this.match(close)){if(nodeForExtra){this.addTrailingCommaExtraToNode(nodeForExtra);}this.next();break;}}elts.push(this.parseExprListItem(allowEmpty,refExpressionErrors));}return elts;}parseExprListItem(allowEmpty,refExpressionErrors,allowPlaceholder){let elt;if(this.match(12)){if(!allowEmpty){this.raise(Errors.UnexpectedToken,this.state.curPosition(),{unexpected:","});}elt=null;}else if(this.match(21)){const spreadNodeStartLoc=this.state.startLoc;elt=this.parseParenItem(this.parseSpread(refExpressionErrors),spreadNodeStartLoc);}else if(this.match(17)){this.expectPlugin("partialApplication");if(!allowPlaceholder){this.raise(Errors.UnexpectedArgumentPlaceholder,this.state.startLoc);}const node=this.startNode();this.next();elt=this.finishNode(node,"ArgumentPlaceholder");}else{elt=this.parseMaybeAssignAllowIn(refExpressionErrors,this.parseParenItem);}return elt;}parseIdentifier(liberal){const node=this.startNode();const name=this.parseIdentifierName(liberal);return this.createIdentifier(node,name);}createIdentifier(node,name){node.name=name;node.loc.identifierName=name;return this.finishNode(node,"Identifier");}parseIdentifierName(liberal){let name;const{startLoc,type}=this.state;if(tokenIsKeywordOrIdentifier(type)){name=this.state.value;}else{this.unexpected();}const tokenIsKeyword=tokenKeywordOrIdentifierIsKeyword(type);if(liberal){if(tokenIsKeyword){this.replaceToken(132);}}else{this.checkReservedWord(name,startLoc,tokenIsKeyword,false);}this.next();return name;}checkReservedWord(word,startLoc,checkKeywords,isBinding){if(word.length>10){return;}if(!canBeReservedWord(word)){return;}if(checkKeywords&&isKeyword(word)){this.raise(Errors.UnexpectedKeyword,startLoc,{keyword:word});return;}const reservedTest=!this.state.strict?isReservedWord:isBinding?isStrictBindReservedWord:isStrictReservedWord;if(reservedTest(word,this.inModule)){this.raise(Errors.UnexpectedReservedWord,startLoc,{reservedWord:word});return;}else if(word==="yield"){if(this.prodParam.hasYield){this.raise(Errors.YieldBindingIdentifier,startLoc);return;}}else if(word==="await"){if(this.prodParam.hasAwait){this.raise(Errors.AwaitBindingIdentifier,startLoc);return;}if(this.scope.inStaticBlock){this.raise(Errors.AwaitBindingIdentifierInStaticBlock,startLoc);return;}this.expressionScope.recordAsyncArrowParametersError(startLoc);}else if(word==="arguments"){if(this.scope.inClassAndNotInNonArrowFunction){this.raise(Errors.ArgumentsInClass,startLoc);return;}}}isAwaitAllowed(){if(this.prodParam.hasAwait)return true;if(this.options.allowAwaitOutsideFunction&&!this.scope.inFunction){return true;}return false;}parseAwait(startLoc){const node=this.startNodeAt(startLoc);this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter,node);if(this.eat(55)){this.raise(Errors.ObsoleteAwaitStar,node);}if(!this.scope.inFunction&&!this.options.allowAwaitOutsideFunction){if(this.isAmbiguousAwait()){this.ambiguousScriptDifferentAst=true;}else{this.sawUnambiguousESM=true;}}if(!this.state.soloAwait){node.argument=this.parseMaybeUnary(null,true);}return this.finishNode(node,"AwaitExpression");}isAmbiguousAwait(){if(this.hasPrecedingLineBreak())return true;const{type}=this.state;return type===53||type===10||type===0||tokenIsTemplate(type)||type===102&&!this.state.containsEsc||type===137||type===56||this.hasPlugin("v8intrinsic")&&type===54;}parseYield(){const node=this.startNode();this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter,node);this.next();let delegating=false;let argument=null;if(!this.hasPrecedingLineBreak()){delegating=this.eat(55);switch(this.state.type){case 13:case 139:case 8:case 11:case 3:case 9:case 14:case 12:if(!delegating)break;default:argument=this.parseMaybeAssign();}}node.delegate=delegating;node.argument=argument;return this.finishNode(node,"YieldExpression");}parseImportCall(node){this.next();node.source=this.parseMaybeAssignAllowIn();if(this.hasPlugin("importAttributes")||this.hasPlugin("importAssertions")){node.options=null;}if(this.eat(12)){this.expectImportAttributesPlugin();if(!this.match(11)){node.options=this.parseMaybeAssignAllowIn();this.eat(12);}}this.expect(11);return this.finishNode(node,"ImportExpression");}checkPipelineAtInfixOperator(left,leftStartLoc){if(this.hasPlugin(["pipelineOperator",{proposal:"smart"}])){if(left.type==="SequenceExpression"){this.raise(Errors.PipelineHeadSequenceExpression,leftStartLoc);}}}parseSmartPipelineBodyInStyle(childExpr,startLoc){if(this.isSimpleReference(childExpr)){const bodyNode=this.startNodeAt(startLoc);bodyNode.callee=childExpr;return this.finishNode(bodyNode,"PipelineBareFunction");}else{const bodyNode=this.startNodeAt(startLoc);this.checkSmartPipeTopicBodyEarlyErrors(startLoc);bodyNode.expression=childExpr;return this.finishNode(bodyNode,"PipelineTopicExpression");}}isSimpleReference(expression){switch(expression.type){case"MemberExpression":return!expression.computed&&this.isSimpleReference(expression.object);case"Identifier":return true;default:return false;}}checkSmartPipeTopicBodyEarlyErrors(startLoc){if(this.match(19)){throw this.raise(Errors.PipelineBodyNoArrow,this.state.startLoc);}if(!this.topicReferenceWasUsedInCurrentContext()){this.raise(Errors.PipelineTopicUnused,startLoc);}}withTopicBindingContext(callback){const outerContextTopicState=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:1,maxTopicIndex:null};try{return callback();}finally{this.state.topicContext=outerContextTopicState;}}withSmartMixTopicForbiddingContext(callback){if(this.hasPlugin(["pipelineOperator",{proposal:"smart"}])){const outerContextTopicState=this.state.topicContext;this.state.topicContext={maxNumOfResolvableTopics:0,maxTopicIndex:null};try{return callback();}finally{this.state.topicContext=outerContextTopicState;}}else{return callback();}}withSoloAwaitPermittingContext(callback){const outerContextSoloAwaitState=this.state.soloAwait;this.state.soloAwait=true;try{return callback();}finally{this.state.soloAwait=outerContextSoloAwaitState;}}allowInAnd(callback){const flags=this.prodParam.currentFlags();const prodParamToSet=8&~flags;if(prodParamToSet){this.prodParam.enter(flags|8);try{return callback();}finally{this.prodParam.exit();}}return callback();}disallowInAnd(callback){const flags=this.prodParam.currentFlags();const prodParamToClear=8&flags;if(prodParamToClear){this.prodParam.enter(flags&~8);try{return callback();}finally{this.prodParam.exit();}}return callback();}registerTopicReference(){this.state.topicContext.maxTopicIndex=0;}topicReferenceIsAllowedInCurrentContext(){return this.state.topicContext.maxNumOfResolvableTopics>=1;}topicReferenceWasUsedInCurrentContext(){return this.state.topicContext.maxTopicIndex!=null&&this.state.topicContext.maxTopicIndex>=0;}parseFSharpPipelineBody(prec){const startLoc=this.state.startLoc;this.state.potentialArrowAt=this.state.start;const oldInFSharpPipelineDirectBody=this.state.inFSharpPipelineDirectBody;this.state.inFSharpPipelineDirectBody=true;const ret=this.parseExprOp(this.parseMaybeUnaryOrPrivate(),startLoc,prec);this.state.inFSharpPipelineDirectBody=oldInFSharpPipelineDirectBody;return ret;}parseModuleExpression(){this.expectPlugin("moduleBlocks");const node=this.startNode();this.next();if(!this.match(5)){this.unexpected(null,5);}const program=this.startNodeAt(this.state.endLoc);this.next();const revertScopes=this.initializeScopes(true);this.enterInitialScopes();try{node.body=this.parseProgram(program,8,"module");}finally{revertScopes();}return this.finishNode(node,"ModuleExpression");}parsePropertyNamePrefixOperator(prop){}}const loopLabel={kind:1},switchLabel={kind:2};const loneSurrogate=/[\uD800-\uDFFF]/u;const keywordRelationalOperator=/in(?:stanceof)?/y;function babel7CompatTokens(tokens,input){for(let i=0;i<tokens.length;i++){const token=tokens[i];const{type}=token;if(typeof type==="number"){{if(type===138){const{loc,start,value,end}=token;const hashEndPos=start+1;const hashEndLoc=createPositionWithColumnOffset(loc.start,1);tokens.splice(i,1,new Token({type:getExportedToken(27),value:"#",start:start,end:hashEndPos,startLoc:loc.start,endLoc:hashEndLoc}),new Token({type:getExportedToken(132),value:value,start:hashEndPos,end:end,startLoc:hashEndLoc,endLoc:loc.end}));i++;continue;}if(tokenIsTemplate(type)){const{loc,start,value,end}=token;const backquoteEnd=start+1;const backquoteEndLoc=createPositionWithColumnOffset(loc.start,1);let startToken;if(input.charCodeAt(start)===96){startToken=new Token({type:getExportedToken(22),value:"`",start:start,end:backquoteEnd,startLoc:loc.start,endLoc:backquoteEndLoc});}else{startToken=new Token({type:getExportedToken(8),value:"}",start:start,end:backquoteEnd,startLoc:loc.start,endLoc:backquoteEndLoc});}let templateValue,templateElementEnd,templateElementEndLoc,endToken;if(type===24){templateElementEnd=end-1;templateElementEndLoc=createPositionWithColumnOffset(loc.end,-1);templateValue=value===null?null:value.slice(1,-1);endToken=new Token({type:getExportedToken(22),value:"`",start:templateElementEnd,end:end,startLoc:templateElementEndLoc,endLoc:loc.end});}else{templateElementEnd=end-2;templateElementEndLoc=createPositionWithColumnOffset(loc.end,-2);templateValue=value===null?null:value.slice(1,-2);endToken=new Token({type:getExportedToken(23),value:"${",start:templateElementEnd,end:end,startLoc:templateElementEndLoc,endLoc:loc.end});}tokens.splice(i,1,startToken,new Token({type:getExportedToken(20),value:templateValue,start:backquoteEnd,end:templateElementEnd,startLoc:backquoteEndLoc,endLoc:templateElementEndLoc}),endToken);i+=2;continue;}}token.type=getExportedToken(type);}}return tokens;}class StatementParser extends ExpressionParser{parseTopLevel(file,program){file.program=this.parseProgram(program);file.comments=this.comments;if(this.options.tokens){file.tokens=babel7CompatTokens(this.tokens,this.input);}return this.finishNode(file,"File");}parseProgram(program){let end=arguments.length>1&&arguments[1]!==undefined?arguments[1]:139;let sourceType=arguments.length>2&&arguments[2]!==undefined?arguments[2]:this.options.sourceType;program.sourceType=sourceType;program.interpreter=this.parseInterpreterDirective();this.parseBlockBody(program,true,true,end);if(this.inModule&&!this.options.allowUndeclaredExports&&this.scope.undefinedExports.size>0){for(const[localName,at]of Array.from(this.scope.undefinedExports)){this.raise(Errors.ModuleExportUndefined,at,{localName});}}let finishedProgram;if(end===139){finishedProgram=this.finishNode(program,"Program");}else{finishedProgram=this.finishNodeAt(program,"Program",createPositionWithColumnOffset(this.state.startLoc,-1));}return finishedProgram;}stmtToDirective(stmt){const directive=stmt;directive.type="Directive";directive.value=directive.expression;delete directive.expression;const directiveLiteral=directive.value;const expressionValue=directiveLiteral.value;const raw=this.input.slice(directiveLiteral.start,directiveLiteral.end);const val=directiveLiteral.value=raw.slice(1,-1);this.addExtra(directiveLiteral,"raw",raw);this.addExtra(directiveLiteral,"rawValue",val);this.addExtra(directiveLiteral,"expressionValue",expressionValue);directiveLiteral.type="DirectiveLiteral";return directive;}parseInterpreterDirective(){if(!this.match(28)){return null;}const node=this.startNode();node.value=this.state.value;this.next();return this.finishNode(node,"InterpreterDirective");}isLet(){if(!this.isContextual(100)){return false;}return this.hasFollowingBindingAtom();}chStartsBindingIdentifier(ch,pos){if(isIdentifierStart(ch)){keywordRelationalOperator.lastIndex=pos;if(keywordRelationalOperator.test(this.input)){const endCh=this.codePointAtPos(keywordRelationalOperator.lastIndex);if(!isIdentifierChar(endCh)&&endCh!==92){return false;}}return true;}else if(ch===92){return true;}else{return false;}}chStartsBindingPattern(ch){return ch===91||ch===123;}hasFollowingBindingAtom(){const next=this.nextTokenStart();const nextCh=this.codePointAtPos(next);return this.chStartsBindingPattern(nextCh)||this.chStartsBindingIdentifier(nextCh,next);}hasInLineFollowingBindingIdentifier(){const next=this.nextTokenInLineStart();const nextCh=this.codePointAtPos(next);return this.chStartsBindingIdentifier(nextCh,next);}startsUsingForOf(){const{type,containsEsc}=this.lookahead();if(type===102&&!containsEsc){return false;}else if(tokenIsIdentifier(type)&&!this.hasFollowingLineBreak()){this.expectPlugin("explicitResourceManagement");return true;}}startsAwaitUsing(){let next=this.nextTokenInLineStart();if(this.isUnparsedContextual(next,"using")){next=this.nextTokenInLineStartSince(next+5);const nextCh=this.codePointAtPos(next);if(this.chStartsBindingIdentifier(nextCh,next)){this.expectPlugin("explicitResourceManagement");return true;}}return false;}parseModuleItem(){return this.parseStatementLike(1|2|4|8);}parseStatementListItem(){return this.parseStatementLike(2|4|(!this.options.annexB||this.state.strict?0:8));}parseStatementOrSloppyAnnexBFunctionDeclaration(){let allowLabeledFunction=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let flags=0;if(this.options.annexB&&!this.state.strict){flags|=4;if(allowLabeledFunction){flags|=8;}}return this.parseStatementLike(flags);}parseStatement(){return this.parseStatementLike(0);}parseStatementLike(flags){let decorators=null;if(this.match(26)){decorators=this.parseDecorators(true);}return this.parseStatementContent(flags,decorators);}parseStatementContent(flags,decorators){const starttype=this.state.type;const node=this.startNode();const allowDeclaration=!!(flags&2);const allowFunctionDeclaration=!!(flags&4);const topLevel=flags&1;switch(starttype){case 60:return this.parseBreakContinueStatement(node,true);case 63:return this.parseBreakContinueStatement(node,false);case 64:return this.parseDebuggerStatement(node);case 90:return this.parseDoWhileStatement(node);case 91:return this.parseForStatement(node);case 68:if(this.lookaheadCharCode()===46)break;if(!allowFunctionDeclaration){this.raise(this.state.strict?Errors.StrictFunction:this.options.annexB?Errors.SloppyFunctionAnnexB:Errors.SloppyFunction,this.state.startLoc);}return this.parseFunctionStatement(node,false,!allowDeclaration&&allowFunctionDeclaration);case 80:if(!allowDeclaration)this.unexpected();return this.parseClass(this.maybeTakeDecorators(decorators,node),true);case 69:return this.parseIfStatement(node);case 70:return this.parseReturnStatement(node);case 71:return this.parseSwitchStatement(node);case 72:return this.parseThrowStatement(node);case 73:return this.parseTryStatement(node);case 96:if(!this.state.containsEsc&&this.startsAwaitUsing()){if(!this.isAwaitAllowed()){this.raise(Errors.AwaitUsingNotInAsyncContext,node);}else if(!allowDeclaration){this.raise(Errors.UnexpectedLexicalDeclaration,node);}this.next();return this.parseVarStatement(node,"await using");}break;case 107:if(this.state.containsEsc||!this.hasInLineFollowingBindingIdentifier()){break;}this.expectPlugin("explicitResourceManagement");if(!this.scope.inModule&&this.scope.inTopLevel){this.raise(Errors.UnexpectedUsingDeclaration,this.state.startLoc);}else if(!allowDeclaration){this.raise(Errors.UnexpectedLexicalDeclaration,this.state.startLoc);}return this.parseVarStatement(node,"using");case 100:{if(this.state.containsEsc){break;}const next=this.nextTokenStart();const nextCh=this.codePointAtPos(next);if(nextCh!==91){if(!allowDeclaration&&this.hasFollowingLineBreak())break;if(!this.chStartsBindingIdentifier(nextCh,next)&&nextCh!==123){break;}}}case 75:{if(!allowDeclaration){this.raise(Errors.UnexpectedLexicalDeclaration,this.state.startLoc);}}case 74:{const kind=this.state.value;return this.parseVarStatement(node,kind);}case 92:return this.parseWhileStatement(node);case 76:return this.parseWithStatement(node);case 5:return this.parseBlock();case 13:return this.parseEmptyStatement(node);case 83:{const nextTokenCharCode=this.lookaheadCharCode();if(nextTokenCharCode===40||nextTokenCharCode===46){break;}}case 82:{if(!this.options.allowImportExportEverywhere&&!topLevel){this.raise(Errors.UnexpectedImportExport,this.state.startLoc);}this.next();let result;if(starttype===83){result=this.parseImport(node);if(result.type==="ImportDeclaration"&&(!result.importKind||result.importKind==="value")){this.sawUnambiguousESM=true;}}else{result=this.parseExport(node,decorators);if(result.type==="ExportNamedDeclaration"&&(!result.exportKind||result.exportKind==="value")||result.type==="ExportAllDeclaration"&&(!result.exportKind||result.exportKind==="value")||result.type==="ExportDefaultDeclaration"){this.sawUnambiguousESM=true;}}this.assertModuleNodeAllowed(result);return result;}default:{if(this.isAsyncFunction()){if(!allowDeclaration){this.raise(Errors.AsyncFunctionInSingleStatementContext,this.state.startLoc);}this.next();return this.parseFunctionStatement(node,true,!allowDeclaration&&allowFunctionDeclaration);}}}const maybeName=this.state.value;const expr=this.parseExpression();if(tokenIsIdentifier(starttype)&&expr.type==="Identifier"&&this.eat(14)){return this.parseLabeledStatement(node,maybeName,expr,flags);}else{return this.parseExpressionStatement(node,expr,decorators);}}assertModuleNodeAllowed(node){if(!this.options.allowImportExportEverywhere&&!this.inModule){this.raise(Errors.ImportOutsideModule,node);}}decoratorsEnabledBeforeExport(){if(this.hasPlugin("decorators-legacy"))return true;return this.hasPlugin("decorators")&&this.getPluginOption("decorators","decoratorsBeforeExport")!==false;}maybeTakeDecorators(maybeDecorators,classNode,exportNode){if(maybeDecorators){if(classNode.decorators&&classNode.decorators.length>0){if(typeof this.getPluginOption("decorators","decoratorsBeforeExport")!=="boolean"){this.raise(Errors.DecoratorsBeforeAfterExport,classNode.decorators[0]);}classNode.decorators.unshift(...maybeDecorators);}else{classNode.decorators=maybeDecorators;}this.resetStartLocationFromNode(classNode,maybeDecorators[0]);if(exportNode)this.resetStartLocationFromNode(exportNode,classNode);}return classNode;}canHaveLeadingDecorator(){return this.match(80);}parseDecorators(allowExport){const decorators=[];do{decorators.push(this.parseDecorator());}while(this.match(26));if(this.match(82)){if(!allowExport){this.unexpected();}if(!this.decoratorsEnabledBeforeExport()){this.raise(Errors.DecoratorExportClass,this.state.startLoc);}}else if(!this.canHaveLeadingDecorator()){throw this.raise(Errors.UnexpectedLeadingDecorator,this.state.startLoc);}return decorators;}parseDecorator(){this.expectOnePlugin(["decorators","decorators-legacy"]);const node=this.startNode();this.next();if(this.hasPlugin("decorators")){const startLoc=this.state.startLoc;let expr;if(this.match(10)){const startLoc=this.state.startLoc;this.next();expr=this.parseExpression();this.expect(11);expr=this.wrapParenthesis(startLoc,expr);const paramsStartLoc=this.state.startLoc;node.expression=this.parseMaybeDecoratorArguments(expr);if(this.getPluginOption("decorators","allowCallParenthesized")===false&&node.expression!==expr){this.raise(Errors.DecoratorArgumentsOutsideParentheses,paramsStartLoc);}}else{expr=this.parseIdentifier(false);while(this.eat(16)){const node=this.startNodeAt(startLoc);node.object=expr;if(this.match(138)){this.classScope.usePrivateName(this.state.value,this.state.startLoc);node.property=this.parsePrivateName();}else{node.property=this.parseIdentifier(true);}node.computed=false;expr=this.finishNode(node,"MemberExpression");}node.expression=this.parseMaybeDecoratorArguments(expr);}}else{node.expression=this.parseExprSubscripts();}return this.finishNode(node,"Decorator");}parseMaybeDecoratorArguments(expr){if(this.eat(10)){const node=this.startNodeAtNode(expr);node.callee=expr;node.arguments=this.parseCallExpressionArguments(11,false);this.toReferencedList(node.arguments);return this.finishNode(node,"CallExpression");}return expr;}parseBreakContinueStatement(node,isBreak){this.next();if(this.isLineTerminator()){node.label=null;}else{node.label=this.parseIdentifier();this.semicolon();}this.verifyBreakContinue(node,isBreak);return this.finishNode(node,isBreak?"BreakStatement":"ContinueStatement");}verifyBreakContinue(node,isBreak){let i;for(i=0;i<this.state.labels.length;++i){const lab=this.state.labels[i];if(node.label==null||lab.name===node.label.name){if(lab.kind!=null&&(isBreak||lab.kind===1)){break;}if(node.label&&isBreak)break;}}if(i===this.state.labels.length){const type=isBreak?"BreakStatement":"ContinueStatement";this.raise(Errors.IllegalBreakContinue,node,{type});}}parseDebuggerStatement(node){this.next();this.semicolon();return this.finishNode(node,"DebuggerStatement");}parseHeaderExpression(){this.expect(10);const val=this.parseExpression();this.expect(11);return val;}parseDoWhileStatement(node){this.next();this.state.labels.push(loopLabel);node.body=this.withSmartMixTopicForbiddingContext(()=>this.parseStatement());this.state.labels.pop();this.expect(92);node.test=this.parseHeaderExpression();this.eat(13);return this.finishNode(node,"DoWhileStatement");}parseForStatement(node){this.next();this.state.labels.push(loopLabel);let awaitAt=null;if(this.isAwaitAllowed()&&this.eatContextual(96)){awaitAt=this.state.lastTokStartLoc;}this.scope.enter(0);this.expect(10);if(this.match(13)){if(awaitAt!==null){this.unexpected(awaitAt);}return this.parseFor(node,null);}const startsWithLet=this.isContextual(100);{const startsWithAwaitUsing=this.isContextual(96)&&this.startsAwaitUsing();const starsWithUsingDeclaration=startsWithAwaitUsing||this.isContextual(107)&&this.startsUsingForOf();const isLetOrUsing=startsWithLet&&this.hasFollowingBindingAtom()||starsWithUsingDeclaration;if(this.match(74)||this.match(75)||isLetOrUsing){const initNode=this.startNode();let kind;if(startsWithAwaitUsing){kind="await using";if(!this.isAwaitAllowed()){this.raise(Errors.AwaitUsingNotInAsyncContext,this.state.startLoc);}this.next();}else{kind=this.state.value;}this.next();this.parseVar(initNode,true,kind);const init=this.finishNode(initNode,"VariableDeclaration");const isForIn=this.match(58);if(isForIn&&starsWithUsingDeclaration){this.raise(Errors.ForInUsing,init);}if((isForIn||this.isContextual(102))&&init.declarations.length===1){return this.parseForIn(node,init,awaitAt);}if(awaitAt!==null){this.unexpected(awaitAt);}return this.parseFor(node,init);}}const startsWithAsync=this.isContextual(95);const refExpressionErrors=new ExpressionErrors();const init=this.parseExpression(true,refExpressionErrors);const isForOf=this.isContextual(102);if(isForOf){if(startsWithLet){this.raise(Errors.ForOfLet,init);}if(awaitAt===null&&startsWithAsync&&init.type==="Identifier"){this.raise(Errors.ForOfAsync,init);}}if(isForOf||this.match(58)){this.checkDestructuringPrivate(refExpressionErrors);this.toAssignable(init,true);const type=isForOf?"ForOfStatement":"ForInStatement";this.checkLVal(init,{in:{type}});return this.parseForIn(node,init,awaitAt);}else{this.checkExpressionErrors(refExpressionErrors,true);}if(awaitAt!==null){this.unexpected(awaitAt);}return this.parseFor(node,init);}parseFunctionStatement(node,isAsync,isHangingDeclaration){this.next();return this.parseFunction(node,1|(isHangingDeclaration?2:0)|(isAsync?8:0));}parseIfStatement(node){this.next();node.test=this.parseHeaderExpression();node.consequent=this.parseStatementOrSloppyAnnexBFunctionDeclaration();node.alternate=this.eat(66)?this.parseStatementOrSloppyAnnexBFunctionDeclaration():null;return this.finishNode(node,"IfStatement");}parseReturnStatement(node){if(!this.prodParam.hasReturn&&!this.options.allowReturnOutsideFunction){this.raise(Errors.IllegalReturn,this.state.startLoc);}this.next();if(this.isLineTerminator()){node.argument=null;}else{node.argument=this.parseExpression();this.semicolon();}return this.finishNode(node,"ReturnStatement");}parseSwitchStatement(node){this.next();node.discriminant=this.parseHeaderExpression();const cases=node.cases=[];this.expect(5);this.state.labels.push(switchLabel);this.scope.enter(0);let cur;for(let sawDefault;!this.match(8);){if(this.match(61)||this.match(65)){const isCase=this.match(61);if(cur)this.finishNode(cur,"SwitchCase");cases.push(cur=this.startNode());cur.consequent=[];this.next();if(isCase){cur.test=this.parseExpression();}else{if(sawDefault){this.raise(Errors.MultipleDefaultsInSwitch,this.state.lastTokStartLoc);}sawDefault=true;cur.test=null;}this.expect(14);}else{if(cur){cur.consequent.push(this.parseStatementListItem());}else{this.unexpected();}}}this.scope.exit();if(cur)this.finishNode(cur,"SwitchCase");this.next();this.state.labels.pop();return this.finishNode(node,"SwitchStatement");}parseThrowStatement(node){this.next();if(this.hasPrecedingLineBreak()){this.raise(Errors.NewlineAfterThrow,this.state.lastTokEndLoc);}node.argument=this.parseExpression();this.semicolon();return this.finishNode(node,"ThrowStatement");}parseCatchClauseParam(){const param=this.parseBindingAtom();this.scope.enter(this.options.annexB&&param.type==="Identifier"?8:0);this.checkLVal(param,{in:{type:"CatchClause"},binding:9});return param;}parseTryStatement(node){this.next();node.block=this.parseBlock();node.handler=null;if(this.match(62)){const clause=this.startNode();this.next();if(this.match(10)){this.expect(10);clause.param=this.parseCatchClauseParam();this.expect(11);}else{clause.param=null;this.scope.enter(0);}clause.body=this.withSmartMixTopicForbiddingContext(()=>this.parseBlock(false,false));this.scope.exit();node.handler=this.finishNode(clause,"CatchClause");}node.finalizer=this.eat(67)?this.parseBlock():null;if(!node.handler&&!node.finalizer){this.raise(Errors.NoCatchOrFinally,node);}return this.finishNode(node,"TryStatement");}parseVarStatement(node,kind){let allowMissingInitializer=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;this.next();this.parseVar(node,false,kind,allowMissingInitializer);this.semicolon();return this.finishNode(node,"VariableDeclaration");}parseWhileStatement(node){this.next();node.test=this.parseHeaderExpression();this.state.labels.push(loopLabel);node.body=this.withSmartMixTopicForbiddingContext(()=>this.parseStatement());this.state.labels.pop();return this.finishNode(node,"WhileStatement");}parseWithStatement(node){if(this.state.strict){this.raise(Errors.StrictWith,this.state.startLoc);}this.next();node.object=this.parseHeaderExpression();node.body=this.withSmartMixTopicForbiddingContext(()=>this.parseStatement());return this.finishNode(node,"WithStatement");}parseEmptyStatement(node){this.next();return this.finishNode(node,"EmptyStatement");}parseLabeledStatement(node,maybeName,expr,flags){for(const label of this.state.labels){if(label.name===maybeName){this.raise(Errors.LabelRedeclaration,expr,{labelName:maybeName});}}const kind=tokenIsLoop(this.state.type)?1:this.match(71)?2:null;for(let i=this.state.labels.length-1;i>=0;i--){const label=this.state.labels[i];if(label.statementStart===node.start){label.statementStart=this.state.start;label.kind=kind;}else{break;}}this.state.labels.push({name:maybeName,kind:kind,statementStart:this.state.start});node.body=flags&8?this.parseStatementOrSloppyAnnexBFunctionDeclaration(true):this.parseStatement();this.state.labels.pop();node.label=expr;return this.finishNode(node,"LabeledStatement");}parseExpressionStatement(node,expr,decorators){node.expression=expr;this.semicolon();return this.finishNode(node,"ExpressionStatement");}parseBlock(){let allowDirectives=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let createNewLexicalScope=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;let afterBlockParse=arguments.length>2?arguments[2]:undefined;const node=this.startNode();if(allowDirectives){this.state.strictErrors.clear();}this.expect(5);if(createNewLexicalScope){this.scope.enter(0);}this.parseBlockBody(node,allowDirectives,false,8,afterBlockParse);if(createNewLexicalScope){this.scope.exit();}return this.finishNode(node,"BlockStatement");}isValidDirective(stmt){return stmt.type==="ExpressionStatement"&&stmt.expression.type==="StringLiteral"&&!stmt.expression.extra.parenthesized;}parseBlockBody(node,allowDirectives,topLevel,end,afterBlockParse){const body=node.body=[];const directives=node.directives=[];this.parseBlockOrModuleBlockBody(body,allowDirectives?directives:undefined,topLevel,end,afterBlockParse);}parseBlockOrModuleBlockBody(body,directives,topLevel,end,afterBlockParse){const oldStrict=this.state.strict;let hasStrictModeDirective=false;let parsedNonDirective=false;while(!this.match(end)){const stmt=topLevel?this.parseModuleItem():this.parseStatementListItem();if(directives&&!parsedNonDirective){if(this.isValidDirective(stmt)){const directive=this.stmtToDirective(stmt);directives.push(directive);if(!hasStrictModeDirective&&directive.value.value==="use strict"){hasStrictModeDirective=true;this.setStrict(true);}continue;}parsedNonDirective=true;this.state.strictErrors.clear();}body.push(stmt);}afterBlockParse==null||afterBlockParse.call(this,hasStrictModeDirective);if(!oldStrict){this.setStrict(false);}this.next();}parseFor(node,init){node.init=init;this.semicolon(false);node.test=this.match(13)?null:this.parseExpression();this.semicolon(false);node.update=this.match(11)?null:this.parseExpression();this.expect(11);node.body=this.withSmartMixTopicForbiddingContext(()=>this.parseStatement());this.scope.exit();this.state.labels.pop();return this.finishNode(node,"ForStatement");}parseForIn(node,init,awaitAt){const isForIn=this.match(58);this.next();if(isForIn){if(awaitAt!==null)this.unexpected(awaitAt);}else{node.await=awaitAt!==null;}if(init.type==="VariableDeclaration"&&init.declarations[0].init!=null&&(!isForIn||!this.options.annexB||this.state.strict||init.kind!=="var"||init.declarations[0].id.type!=="Identifier")){this.raise(Errors.ForInOfLoopInitializer,init,{type:isForIn?"ForInStatement":"ForOfStatement"});}if(init.type==="AssignmentPattern"){this.raise(Errors.InvalidLhs,init,{ancestor:{type:"ForStatement"}});}node.left=init;node.right=isForIn?this.parseExpression():this.parseMaybeAssignAllowIn();this.expect(11);node.body=this.withSmartMixTopicForbiddingContext(()=>this.parseStatement());this.scope.exit();this.state.labels.pop();return this.finishNode(node,isForIn?"ForInStatement":"ForOfStatement");}parseVar(node,isFor,kind){let allowMissingInitializer=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;const declarations=node.declarations=[];node.kind=kind;for(;;){const decl=this.startNode();this.parseVarId(decl,kind);decl.init=!this.eat(29)?null:isFor?this.parseMaybeAssignDisallowIn():this.parseMaybeAssignAllowIn();if(decl.init===null&&!allowMissingInitializer){if(decl.id.type!=="Identifier"&&!(isFor&&(this.match(58)||this.isContextual(102)))){this.raise(Errors.DeclarationMissingInitializer,this.state.lastTokEndLoc,{kind:"destructuring"});}else if(kind==="const"&&!(this.match(58)||this.isContextual(102))){this.raise(Errors.DeclarationMissingInitializer,this.state.lastTokEndLoc,{kind:"const"});}}declarations.push(this.finishNode(decl,"VariableDeclarator"));if(!this.eat(12))break;}return node;}parseVarId(decl,kind){const id=this.parseBindingAtom();this.checkLVal(id,{in:{type:"VariableDeclarator"},binding:kind==="var"?5:8201});decl.id=id;}parseAsyncFunctionExpression(node){return this.parseFunction(node,8);}parseFunction(node){let flags=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;const hangingDeclaration=flags&2;const isDeclaration=!!(flags&1);const requireId=isDeclaration&&!(flags&4);const isAsync=!!(flags&8);this.initFunction(node,isAsync);if(this.match(55)){if(hangingDeclaration){this.raise(Errors.GeneratorInSingleStatementContext,this.state.startLoc);}this.next();node.generator=true;}if(isDeclaration){node.id=this.parseFunctionId(requireId);}const oldMaybeInArrowParameters=this.state.maybeInArrowParameters;this.state.maybeInArrowParameters=false;this.scope.enter(2);this.prodParam.enter(functionFlags(isAsync,node.generator));if(!isDeclaration){node.id=this.parseFunctionId();}this.parseFunctionParams(node,false);this.withSmartMixTopicForbiddingContext(()=>{this.parseFunctionBodyAndFinish(node,isDeclaration?"FunctionDeclaration":"FunctionExpression");});this.prodParam.exit();this.scope.exit();if(isDeclaration&&!hangingDeclaration){this.registerFunctionStatementId(node);}this.state.maybeInArrowParameters=oldMaybeInArrowParameters;return node;}parseFunctionId(requireId){return requireId||tokenIsIdentifier(this.state.type)?this.parseIdentifier():null;}parseFunctionParams(node,isConstructor){this.expect(10);this.expressionScope.enter(newParameterDeclarationScope());node.params=this.parseBindingList(11,41,2|(isConstructor?4:0));this.expressionScope.exit();}registerFunctionStatementId(node){if(!node.id)return;this.scope.declareName(node.id.name,!this.options.annexB||this.state.strict||node.generator||node.async?this.scope.treatFunctionsAsVar?5:8201:17,node.id.loc.start);}parseClass(node,isStatement,optionalId){this.next();const oldStrict=this.state.strict;this.state.strict=true;this.parseClassId(node,isStatement,optionalId);this.parseClassSuper(node);node.body=this.parseClassBody(!!node.superClass,oldStrict);return this.finishNode(node,isStatement?"ClassDeclaration":"ClassExpression");}isClassProperty(){return this.match(29)||this.match(13)||this.match(8);}isClassMethod(){return this.match(10);}isNonstaticConstructor(method){return!method.computed&&!method.static&&(method.key.name==="constructor"||method.key.value==="constructor");}parseClassBody(hadSuperClass,oldStrict){this.classScope.enter();const state={hadConstructor:false,hadSuperClass};let decorators=[];const classBody=this.startNode();classBody.body=[];this.expect(5);this.withSmartMixTopicForbiddingContext(()=>{while(!this.match(8)){if(this.eat(13)){if(decorators.length>0){throw this.raise(Errors.DecoratorSemicolon,this.state.lastTokEndLoc);}continue;}if(this.match(26)){decorators.push(this.parseDecorator());continue;}const member=this.startNode();if(decorators.length){member.decorators=decorators;this.resetStartLocationFromNode(member,decorators[0]);decorators=[];}this.parseClassMember(classBody,member,state);if(member.kind==="constructor"&&member.decorators&&member.decorators.length>0){this.raise(Errors.DecoratorConstructor,member);}}});this.state.strict=oldStrict;this.next();if(decorators.length){throw this.raise(Errors.TrailingDecorator,this.state.startLoc);}this.classScope.exit();return this.finishNode(classBody,"ClassBody");}parseClassMemberFromModifier(classBody,member){const key=this.parseIdentifier(true);if(this.isClassMethod()){const method=member;method.kind="method";method.computed=false;method.key=key;method.static=false;this.pushClassMethod(classBody,method,false,false,false,false);return true;}else if(this.isClassProperty()){const prop=member;prop.computed=false;prop.key=key;prop.static=false;classBody.body.push(this.parseClassProperty(prop));return true;}this.resetPreviousNodeTrailingComments(key);return false;}parseClassMember(classBody,member,state){const isStatic=this.isContextual(106);if(isStatic){if(this.parseClassMemberFromModifier(classBody,member)){return;}if(this.eat(5)){this.parseClassStaticBlock(classBody,member);return;}}this.parseClassMemberWithIsStatic(classBody,member,state,isStatic);}parseClassMemberWithIsStatic(classBody,member,state,isStatic){const publicMethod=member;const privateMethod=member;const publicProp=member;const privateProp=member;const accessorProp=member;const method=publicMethod;const publicMember=publicMethod;member.static=isStatic;this.parsePropertyNamePrefixOperator(member);if(this.eat(55)){method.kind="method";const isPrivateName=this.match(138);this.parseClassElementName(method);if(isPrivateName){this.pushClassPrivateMethod(classBody,privateMethod,true,false);return;}if(this.isNonstaticConstructor(publicMethod)){this.raise(Errors.ConstructorIsGenerator,publicMethod.key);}this.pushClassMethod(classBody,publicMethod,true,false,false,false);return;}const isContextual=tokenIsIdentifier(this.state.type)&&!this.state.containsEsc;const isPrivate=this.match(138);const key=this.parseClassElementName(member);const maybeQuestionTokenStartLoc=this.state.startLoc;this.parsePostMemberNameModifiers(publicMember);if(this.isClassMethod()){method.kind="method";if(isPrivate){this.pushClassPrivateMethod(classBody,privateMethod,false,false);return;}const isConstructor=this.isNonstaticConstructor(publicMethod);let allowsDirectSuper=false;if(isConstructor){publicMethod.kind="constructor";if(state.hadConstructor&&!this.hasPlugin("typescript")){this.raise(Errors.DuplicateConstructor,key);}if(isConstructor&&this.hasPlugin("typescript")&&member.override){this.raise(Errors.OverrideOnConstructor,key);}state.hadConstructor=true;allowsDirectSuper=state.hadSuperClass;}this.pushClassMethod(classBody,publicMethod,false,false,isConstructor,allowsDirectSuper);}else if(this.isClassProperty()){if(isPrivate){this.pushClassPrivateProperty(classBody,privateProp);}else{this.pushClassProperty(classBody,publicProp);}}else if(isContextual&&key.name==="async"&&!this.isLineTerminator()){this.resetPreviousNodeTrailingComments(key);const isGenerator=this.eat(55);if(publicMember.optional){this.unexpected(maybeQuestionTokenStartLoc);}method.kind="method";const isPrivate=this.match(138);this.parseClassElementName(method);this.parsePostMemberNameModifiers(publicMember);if(isPrivate){this.pushClassPrivateMethod(classBody,privateMethod,isGenerator,true);}else{if(this.isNonstaticConstructor(publicMethod)){this.raise(Errors.ConstructorIsAsync,publicMethod.key);}this.pushClassMethod(classBody,publicMethod,isGenerator,true,false,false);}}else if(isContextual&&(key.name==="get"||key.name==="set")&&!(this.match(55)&&this.isLineTerminator())){this.resetPreviousNodeTrailingComments(key);method.kind=key.name;const isPrivate=this.match(138);this.parseClassElementName(publicMethod);if(isPrivate){this.pushClassPrivateMethod(classBody,privateMethod,false,false);}else{if(this.isNonstaticConstructor(publicMethod)){this.raise(Errors.ConstructorIsAccessor,publicMethod.key);}this.pushClassMethod(classBody,publicMethod,false,false,false,false);}this.checkGetterSetterParams(publicMethod);}else if(isContextual&&key.name==="accessor"&&!this.isLineTerminator()){this.expectPlugin("decoratorAutoAccessors");this.resetPreviousNodeTrailingComments(key);const isPrivate=this.match(138);this.parseClassElementName(publicProp);this.pushClassAccessorProperty(classBody,accessorProp,isPrivate);}else if(this.isLineTerminator()){if(isPrivate){this.pushClassPrivateProperty(classBody,privateProp);}else{this.pushClassProperty(classBody,publicProp);}}else{this.unexpected();}}parseClassElementName(member){const{type,value}=this.state;if((type===132||type===133)&&member.static&&value==="prototype"){this.raise(Errors.StaticPrototype,this.state.startLoc);}if(type===138){if(value==="constructor"){this.raise(Errors.ConstructorClassPrivateField,this.state.startLoc);}const key=this.parsePrivateName();member.key=key;return key;}return this.parsePropertyName(member);}parseClassStaticBlock(classBody,member){var _member$decorators;this.scope.enter(64|128|16);const oldLabels=this.state.labels;this.state.labels=[];this.prodParam.enter(0);const body=member.body=[];this.parseBlockOrModuleBlockBody(body,undefined,false,8);this.prodParam.exit();this.scope.exit();this.state.labels=oldLabels;classBody.body.push(this.finishNode(member,"StaticBlock"));if((_member$decorators=member.decorators)!=null&&_member$decorators.length){this.raise(Errors.DecoratorStaticBlock,member);}}pushClassProperty(classBody,prop){if(!prop.computed&&(prop.key.name==="constructor"||prop.key.value==="constructor")){this.raise(Errors.ConstructorClassField,prop.key);}classBody.body.push(this.parseClassProperty(prop));}pushClassPrivateProperty(classBody,prop){const node=this.parseClassPrivateProperty(prop);classBody.body.push(node);this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),0,node.key.loc.start);}pushClassAccessorProperty(classBody,prop,isPrivate){if(!isPrivate&&!prop.computed){const key=prop.key;if(key.name==="constructor"||key.value==="constructor"){this.raise(Errors.ConstructorClassField,key);}}const node=this.parseClassAccessorProperty(prop);classBody.body.push(node);if(isPrivate){this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),0,node.key.loc.start);}}pushClassMethod(classBody,method,isGenerator,isAsync,isConstructor,allowsDirectSuper){classBody.body.push(this.parseMethod(method,isGenerator,isAsync,isConstructor,allowsDirectSuper,"ClassMethod",true));}pushClassPrivateMethod(classBody,method,isGenerator,isAsync){const node=this.parseMethod(method,isGenerator,isAsync,false,false,"ClassPrivateMethod",true);classBody.body.push(node);const kind=node.kind==="get"?node.static?6:2:node.kind==="set"?node.static?5:1:0;this.declareClassPrivateMethodInScope(node,kind);}declareClassPrivateMethodInScope(node,kind){this.classScope.declarePrivateName(this.getPrivateNameSV(node.key),kind,node.key.loc.start);}parsePostMemberNameModifiers(methodOrProp){}parseClassPrivateProperty(node){this.parseInitializer(node);this.semicolon();return this.finishNode(node,"ClassPrivateProperty");}parseClassProperty(node){this.parseInitializer(node);this.semicolon();return this.finishNode(node,"ClassProperty");}parseClassAccessorProperty(node){this.parseInitializer(node);this.semicolon();return this.finishNode(node,"ClassAccessorProperty");}parseInitializer(node){this.scope.enter(64|16);this.expressionScope.enter(newExpressionScope());this.prodParam.enter(0);node.value=this.eat(29)?this.parseMaybeAssignAllowIn():null;this.expressionScope.exit();this.prodParam.exit();this.scope.exit();}parseClassId(node,isStatement,optionalId){let bindingType=arguments.length>3&&arguments[3]!==undefined?arguments[3]:8331;if(tokenIsIdentifier(this.state.type)){node.id=this.parseIdentifier();if(isStatement){this.declareNameFromIdentifier(node.id,bindingType);}}else{if(optionalId||!isStatement){node.id=null;}else{throw this.raise(Errors.MissingClassName,this.state.startLoc);}}}parseClassSuper(node){node.superClass=this.eat(81)?this.parseExprSubscripts():null;}parseExport(node,decorators){const maybeDefaultIdentifier=this.parseMaybeImportPhase(node,true);const hasDefault=this.maybeParseExportDefaultSpecifier(node,maybeDefaultIdentifier);const parseAfterDefault=!hasDefault||this.eat(12);const hasStar=parseAfterDefault&&this.eatExportStar(node);const hasNamespace=hasStar&&this.maybeParseExportNamespaceSpecifier(node);const parseAfterNamespace=parseAfterDefault&&(!hasNamespace||this.eat(12));const isFromRequired=hasDefault||hasStar;if(hasStar&&!hasNamespace){if(hasDefault)this.unexpected();if(decorators){throw this.raise(Errors.UnsupportedDecoratorExport,node);}this.parseExportFrom(node,true);return this.finishNode(node,"ExportAllDeclaration");}const hasSpecifiers=this.maybeParseExportNamedSpecifiers(node);if(hasDefault&&parseAfterDefault&&!hasStar&&!hasSpecifiers){this.unexpected(null,5);}if(hasNamespace&&parseAfterNamespace){this.unexpected(null,98);}let hasDeclaration;if(isFromRequired||hasSpecifiers){hasDeclaration=false;if(decorators){throw this.raise(Errors.UnsupportedDecoratorExport,node);}this.parseExportFrom(node,isFromRequired);}else{hasDeclaration=this.maybeParseExportDeclaration(node);}if(isFromRequired||hasSpecifiers||hasDeclaration){var _node2$declaration;const node2=node;this.checkExport(node2,true,false,!!node2.source);if(((_node2$declaration=node2.declaration)==null?void 0:_node2$declaration.type)==="ClassDeclaration"){this.maybeTakeDecorators(decorators,node2.declaration,node2);}else if(decorators){throw this.raise(Errors.UnsupportedDecoratorExport,node);}return this.finishNode(node2,"ExportNamedDeclaration");}if(this.eat(65)){const node2=node;const decl=this.parseExportDefaultExpression();node2.declaration=decl;if(decl.type==="ClassDeclaration"){this.maybeTakeDecorators(decorators,decl,node2);}else if(decorators){throw this.raise(Errors.UnsupportedDecoratorExport,node);}this.checkExport(node2,true,true);return this.finishNode(node2,"ExportDefaultDeclaration");}this.unexpected(null,5);}eatExportStar(node){return this.eat(55);}maybeParseExportDefaultSpecifier(node,maybeDefaultIdentifier){if(maybeDefaultIdentifier||this.isExportDefaultSpecifier()){this.expectPlugin("exportDefaultFrom",maybeDefaultIdentifier==null?void 0:maybeDefaultIdentifier.loc.start);const id=maybeDefaultIdentifier||this.parseIdentifier(true);const specifier=this.startNodeAtNode(id);specifier.exported=id;node.specifiers=[this.finishNode(specifier,"ExportDefaultSpecifier")];return true;}return false;}maybeParseExportNamespaceSpecifier(node){if(this.isContextual(93)){if(!node.specifiers)node.specifiers=[];const specifier=this.startNodeAt(this.state.lastTokStartLoc);this.next();specifier.exported=this.parseModuleExportName();node.specifiers.push(this.finishNode(specifier,"ExportNamespaceSpecifier"));return true;}return false;}maybeParseExportNamedSpecifiers(node){if(this.match(5)){if(!node.specifiers)node.specifiers=[];const isTypeExport=node.exportKind==="type";node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));node.source=null;node.declaration=null;if(this.hasPlugin("importAssertions")){node.assertions=[];}return true;}return false;}maybeParseExportDeclaration(node){if(this.shouldParseExportDeclaration()){node.specifiers=[];node.source=null;if(this.hasPlugin("importAssertions")){node.assertions=[];}node.declaration=this.parseExportDeclaration(node);return true;}return false;}isAsyncFunction(){if(!this.isContextual(95))return false;const next=this.nextTokenInLineStart();return this.isUnparsedContextual(next,"function");}parseExportDefaultExpression(){const expr=this.startNode();if(this.match(68)){this.next();return this.parseFunction(expr,1|4);}else if(this.isAsyncFunction()){this.next();this.next();return this.parseFunction(expr,1|4|8);}if(this.match(80)){return this.parseClass(expr,true,true);}if(this.match(26)){if(this.hasPlugin("decorators")&&this.getPluginOption("decorators","decoratorsBeforeExport")===true){this.raise(Errors.DecoratorBeforeExport,this.state.startLoc);}return this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false),this.startNode()),true,true);}if(this.match(75)||this.match(74)||this.isLet()){throw this.raise(Errors.UnsupportedDefaultExport,this.state.startLoc);}const res=this.parseMaybeAssignAllowIn();this.semicolon();return res;}parseExportDeclaration(node){if(this.match(80)){const node=this.parseClass(this.startNode(),true,false);return node;}return this.parseStatementListItem();}isExportDefaultSpecifier(){const{type}=this.state;if(tokenIsIdentifier(type)){if(type===95&&!this.state.containsEsc||type===100){return false;}if((type===130||type===129)&&!this.state.containsEsc){const{type:nextType}=this.lookahead();if(tokenIsIdentifier(nextType)&&nextType!==98||nextType===5){this.expectOnePlugin(["flow","typescript"]);return false;}}}else if(!this.match(65)){return false;}const next=this.nextTokenStart();const hasFrom=this.isUnparsedContextual(next,"from");if(this.input.charCodeAt(next)===44||tokenIsIdentifier(this.state.type)&&hasFrom){return true;}if(this.match(65)&&hasFrom){const nextAfterFrom=this.input.charCodeAt(this.nextTokenStartSince(next+4));return nextAfterFrom===34||nextAfterFrom===39;}return false;}parseExportFrom(node,expect){if(this.eatContextual(98)){node.source=this.parseImportSource();this.checkExport(node);this.maybeParseImportAttributes(node);this.checkJSONModuleImport(node);}else if(expect){this.unexpected();}this.semicolon();}shouldParseExportDeclaration(){const{type}=this.state;if(type===26){this.expectOnePlugin(["decorators","decorators-legacy"]);if(this.hasPlugin("decorators")){if(this.getPluginOption("decorators","decoratorsBeforeExport")===true){this.raise(Errors.DecoratorBeforeExport,this.state.startLoc);}return true;}}return type===74||type===75||type===68||type===80||this.isLet()||this.isAsyncFunction();}checkExport(node,checkNames,isDefault,isFrom){if(checkNames){var _node$specifiers;if(isDefault){this.checkDuplicateExports(node,"default");if(this.hasPlugin("exportDefaultFrom")){var _declaration$extra;const declaration=node.declaration;if(declaration.type==="Identifier"&&declaration.name==="from"&&declaration.end-declaration.start===4&&!((_declaration$extra=declaration.extra)!=null&&_declaration$extra.parenthesized)){this.raise(Errors.ExportDefaultFromAsIdentifier,declaration);}}}else if((_node$specifiers=node.specifiers)!=null&&_node$specifiers.length){for(const specifier of node.specifiers){const{exported}=specifier;const exportName=exported.type==="Identifier"?exported.name:exported.value;this.checkDuplicateExports(specifier,exportName);if(!isFrom&&specifier.local){const{local}=specifier;if(local.type!=="Identifier"){this.raise(Errors.ExportBindingIsString,specifier,{localName:local.value,exportName});}else{this.checkReservedWord(local.name,local.loc.start,true,false);this.scope.checkLocalExport(local);}}}}else if(node.declaration){if(node.declaration.type==="FunctionDeclaration"||node.declaration.type==="ClassDeclaration"){const id=node.declaration.id;if(!id)throw new Error("Assertion failure");this.checkDuplicateExports(node,id.name);}else if(node.declaration.type==="VariableDeclaration"){for(const declaration of node.declaration.declarations){this.checkDeclaration(declaration.id);}}}}}checkDeclaration(node){if(node.type==="Identifier"){this.checkDuplicateExports(node,node.name);}else if(node.type==="ObjectPattern"){for(const prop of node.properties){this.checkDeclaration(prop);}}else if(node.type==="ArrayPattern"){for(const elem of node.elements){if(elem){this.checkDeclaration(elem);}}}else if(node.type==="ObjectProperty"){this.checkDeclaration(node.value);}else if(node.type==="RestElement"){this.checkDeclaration(node.argument);}else if(node.type==="AssignmentPattern"){this.checkDeclaration(node.left);}}checkDuplicateExports(node,exportName){if(this.exportedIdentifiers.has(exportName)){if(exportName==="default"){this.raise(Errors.DuplicateDefaultExport,node);}else{this.raise(Errors.DuplicateExport,node,{exportName});}}this.exportedIdentifiers.add(exportName);}parseExportSpecifiers(isInTypeExport){const nodes=[];let first=true;this.expect(5);while(!this.eat(8)){if(first){first=false;}else{this.expect(12);if(this.eat(8))break;}const isMaybeTypeOnly=this.isContextual(130);const isString=this.match(133);const node=this.startNode();node.local=this.parseModuleExportName();nodes.push(this.parseExportSpecifier(node,isString,isInTypeExport,isMaybeTypeOnly));}return nodes;}parseExportSpecifier(node,isString,isInTypeExport,isMaybeTypeOnly){if(this.eatContextual(93)){node.exported=this.parseModuleExportName();}else if(isString){node.exported=cloneStringLiteral(node.local);}else if(!node.exported){node.exported=cloneIdentifier(node.local);}return this.finishNode(node,"ExportSpecifier");}parseModuleExportName(){if(this.match(133)){const result=this.parseStringLiteral(this.state.value);const surrogate=result.value.match(loneSurrogate);if(surrogate){this.raise(Errors.ModuleExportNameHasLoneSurrogate,result,{surrogateCharCode:surrogate[0].charCodeAt(0)});}return result;}return this.parseIdentifier(true);}isJSONModuleImport(node){if(node.assertions!=null){return node.assertions.some(_ref121=>{let{key,value}=_ref121;return value.value==="json"&&(key.type==="Identifier"?key.name==="type":key.value==="type");});}return false;}checkImportReflection(node){const{specifiers}=node;const singleBindingType=specifiers.length===1?specifiers[0].type:null;if(node.phase==="source"){if(singleBindingType!=="ImportDefaultSpecifier"){this.raise(Errors.SourcePhaseImportRequiresDefault,specifiers[0].loc.start);}}else if(node.phase==="defer"){if(singleBindingType!=="ImportNamespaceSpecifier"){this.raise(Errors.DeferImportRequiresNamespace,specifiers[0].loc.start);}}else if(node.module){var _node$assertions;if(singleBindingType!=="ImportDefaultSpecifier"){this.raise(Errors.ImportReflectionNotBinding,specifiers[0].loc.start);}if(((_node$assertions=node.assertions)==null?void 0:_node$assertions.length)>0){this.raise(Errors.ImportReflectionHasAssertion,specifiers[0].loc.start);}}}checkJSONModuleImport(node){if(this.isJSONModuleImport(node)&&node.type!=="ExportAllDeclaration"){const{specifiers}=node;if(specifiers!=null){const nonDefaultNamedSpecifier=specifiers.find(specifier=>{let imported;if(specifier.type==="ExportSpecifier"){imported=specifier.local;}else if(specifier.type==="ImportSpecifier"){imported=specifier.imported;}if(imported!==undefined){return imported.type==="Identifier"?imported.name!=="default":imported.value!=="default";}});if(nonDefaultNamedSpecifier!==undefined){this.raise(Errors.ImportJSONBindingNotDefault,nonDefaultNamedSpecifier.loc.start);}}}}isPotentialImportPhase(isExport){if(isExport)return false;return this.isContextual(105)||this.isContextual(97)||this.isContextual(127);}applyImportPhase(node,isExport,phase,loc){if(isExport){return;}if(phase==="module"){this.expectPlugin("importReflection",loc);node.module=true;}else if(this.hasPlugin("importReflection")){node.module=false;}if(phase==="source"){this.expectPlugin("sourcePhaseImports",loc);node.phase="source";}else if(phase==="defer"){this.expectPlugin("deferredImportEvaluation",loc);node.phase="defer";}else if(this.hasPlugin("sourcePhaseImports")){node.phase=null;}}parseMaybeImportPhase(node,isExport){if(!this.isPotentialImportPhase(isExport)){this.applyImportPhase(node,isExport,null);return null;}const phaseIdentifier=this.parseIdentifier(true);const{type}=this.state;const isImportPhase=tokenIsKeywordOrIdentifier(type)?type!==98||this.lookaheadCharCode()===102:type!==12;if(isImportPhase){this.resetPreviousIdentifierLeadingComments(phaseIdentifier);this.applyImportPhase(node,isExport,phaseIdentifier.name,phaseIdentifier.loc.start);return null;}else{this.applyImportPhase(node,isExport,null);return phaseIdentifier;}}isPrecedingIdImportPhase(phase){const{type}=this.state;return tokenIsIdentifier(type)?type!==98||this.lookaheadCharCode()===102:type!==12;}parseImport(node){if(this.match(133)){return this.parseImportSourceAndAttributes(node);}return this.parseImportSpecifiersAndAfter(node,this.parseMaybeImportPhase(node,false));}parseImportSpecifiersAndAfter(node,maybeDefaultIdentifier){node.specifiers=[];const hasDefault=this.maybeParseDefaultImportSpecifier(node,maybeDefaultIdentifier);const parseNext=!hasDefault||this.eat(12);const hasStar=parseNext&&this.maybeParseStarImportSpecifier(node);if(parseNext&&!hasStar)this.parseNamedImportSpecifiers(node);this.expectContextual(98);return this.parseImportSourceAndAttributes(node);}parseImportSourceAndAttributes(node){var _node$specifiers2;(_node$specifiers2=node.specifiers)!=null?_node$specifiers2:node.specifiers=[];node.source=this.parseImportSource();this.maybeParseImportAttributes(node);this.checkImportReflection(node);this.checkJSONModuleImport(node);this.semicolon();return this.finishNode(node,"ImportDeclaration");}parseImportSource(){if(!this.match(133))this.unexpected();return this.parseExprAtom();}parseImportSpecifierLocal(node,specifier,type){specifier.local=this.parseIdentifier();node.specifiers.push(this.finishImportSpecifier(specifier,type));}finishImportSpecifier(specifier,type){let bindingType=arguments.length>2&&arguments[2]!==undefined?arguments[2]:8201;this.checkLVal(specifier.local,{in:{type},binding:bindingType});return this.finishNode(specifier,type);}parseImportAttributes(){this.expect(5);const attrs=[];const attrNames=new Set();do{if(this.match(8)){break;}const node=this.startNode();const keyName=this.state.value;if(attrNames.has(keyName)){this.raise(Errors.ModuleAttributesWithDuplicateKeys,this.state.startLoc,{key:keyName});}attrNames.add(keyName);if(this.match(133)){node.key=this.parseStringLiteral(keyName);}else{node.key=this.parseIdentifier(true);}this.expect(14);if(!this.match(133)){throw this.raise(Errors.ModuleAttributeInvalidValue,this.state.startLoc);}node.value=this.parseStringLiteral(this.state.value);attrs.push(this.finishNode(node,"ImportAttribute"));}while(this.eat(12));this.expect(8);return attrs;}parseModuleAttributes(){const attrs=[];const attributes=new Set();do{const node=this.startNode();node.key=this.parseIdentifier(true);if(node.key.name!=="type"){this.raise(Errors.ModuleAttributeDifferentFromType,node.key);}if(attributes.has(node.key.name)){this.raise(Errors.ModuleAttributesWithDuplicateKeys,node.key,{key:node.key.name});}attributes.add(node.key.name);this.expect(14);if(!this.match(133)){throw this.raise(Errors.ModuleAttributeInvalidValue,this.state.startLoc);}node.value=this.parseStringLiteral(this.state.value);attrs.push(this.finishNode(node,"ImportAttribute"));}while(this.eat(12));return attrs;}maybeParseImportAttributes(node){let attributes;let useWith=false;if(this.match(76)){if(this.hasPrecedingLineBreak()&&this.lookaheadCharCode()===40){return;}this.next();{if(this.hasPlugin("moduleAttributes")){attributes=this.parseModuleAttributes();}else{this.expectImportAttributesPlugin();attributes=this.parseImportAttributes();}}useWith=true;}else if(this.isContextual(94)&&!this.hasPrecedingLineBreak()){if(this.hasPlugin("importAttributes")){if(this.getPluginOption("importAttributes","deprecatedAssertSyntax")!==true){this.raise(Errors.ImportAttributesUseAssert,this.state.startLoc);}this.addExtra(node,"deprecatedAssertSyntax",true);}else{this.expectOnePlugin(["importAttributes","importAssertions"]);}this.next();attributes=this.parseImportAttributes();}else if(this.hasPlugin("importAttributes")||this.hasPlugin("importAssertions")){attributes=[];}else{if(this.hasPlugin("moduleAttributes")){attributes=[];}else return;}if(!useWith&&this.hasPlugin("importAssertions")){node.assertions=attributes;}else{node.attributes=attributes;}}maybeParseDefaultImportSpecifier(node,maybeDefaultIdentifier){if(maybeDefaultIdentifier){const specifier=this.startNodeAtNode(maybeDefaultIdentifier);specifier.local=maybeDefaultIdentifier;node.specifiers.push(this.finishImportSpecifier(specifier,"ImportDefaultSpecifier"));return true;}else if(tokenIsKeywordOrIdentifier(this.state.type)){this.parseImportSpecifierLocal(node,this.startNode(),"ImportDefaultSpecifier");return true;}return false;}maybeParseStarImportSpecifier(node){if(this.match(55)){const specifier=this.startNode();this.next();this.expectContextual(93);this.parseImportSpecifierLocal(node,specifier,"ImportNamespaceSpecifier");return true;}return false;}parseNamedImportSpecifiers(node){let first=true;this.expect(5);while(!this.eat(8)){if(first){first=false;}else{if(this.eat(14)){throw this.raise(Errors.DestructureNamedImport,this.state.startLoc);}this.expect(12);if(this.eat(8))break;}const specifier=this.startNode();const importedIsString=this.match(133);const isMaybeTypeOnly=this.isContextual(130);specifier.imported=this.parseModuleExportName();const importSpecifier=this.parseImportSpecifier(specifier,importedIsString,node.importKind==="type"||node.importKind==="typeof",isMaybeTypeOnly,undefined);node.specifiers.push(importSpecifier);}}parseImportSpecifier(specifier,importedIsString,isInTypeOnlyImport,isMaybeTypeOnly,bindingType){if(this.eatContextual(93)){specifier.local=this.parseIdentifier();}else{const{imported}=specifier;if(importedIsString){throw this.raise(Errors.ImportBindingIsString,specifier,{importName:imported.value});}this.checkReservedWord(imported.name,specifier.loc.start,true,true);if(!specifier.local){specifier.local=cloneIdentifier(imported);}}return this.finishImportSpecifier(specifier,"ImportSpecifier",bindingType);}isThisParam(param){return param.type==="Identifier"&&param.name==="this";}}class Parser extends StatementParser{constructor(options,input){options=getOptions(options);super(options,input);this.options=options;this.initializeScopes();this.plugins=pluginsMap(this.options.plugins);this.filename=options.sourceFilename;}getScopeHandler(){return ScopeHandler;}parse(){this.enterInitialScopes();const file=this.startNode();const program=this.startNode();this.nextToken();file.errors=null;this.parseTopLevel(file,program);file.errors=this.state.errors;file.comments.length=this.state.commentsLen;return file;}}function pluginsMap(plugins){const pluginMap=new Map();for(const plugin of plugins){const[name,options]=Array.isArray(plugin)?plugin:[plugin,{}];if(!pluginMap.has(name))pluginMap.set(name,options||{});}return pluginMap;}function parse(input,options){var _options;if(((_options=options)==null?void 0:_options.sourceType)==="unambiguous"){options=Object.assign({},options);try{options.sourceType="module";const parser=getParser(options,input);const ast=parser.parse();if(parser.sawUnambiguousESM){return ast;}if(parser.ambiguousScriptDifferentAst){try{options.sourceType="script";return getParser(options,input).parse();}catch(_unused){}}else{ast.program.sourceType="script";}return ast;}catch(moduleError){try{options.sourceType="script";return getParser(options,input).parse();}catch(_unused2){}throw moduleError;}}else{return getParser(options,input).parse();}}function parseExpression(input,options){const parser=getParser(options,input);if(parser.options.strictMode){parser.state.strict=true;}return parser.getExpression();}function generateExportedTokenTypes(internalTokenTypes){const tokenTypes={};for(const typeName of Object.keys(internalTokenTypes)){tokenTypes[typeName]=getExportedToken(internalTokenTypes[typeName]);}return tokenTypes;}const tokTypes=generateExportedTokenTypes(tt);function getParser(options,input){let cls=Parser;if(options!=null&&options.plugins){validatePlugins(options.plugins);cls=getParserClass(options.plugins);}return new cls(options,input);}const parserClassCache={};function getParserClass(pluginsFromOptions){const pluginList=mixinPluginNames.filter(name=>hasPlugin(pluginsFromOptions,name));const key=pluginList.join("/");let cls=parserClassCache[key];if(!cls){cls=Parser;for(const plugin of pluginList){cls=mixinPlugins[plugin](cls);}parserClassCache[key]=cls;}return cls;}lib$1.parse=parse;lib$1.parseExpression=parseExpression;lib$1.tokTypes=tokTypes;return lib$1;}(function(exports){Object.defineProperty(exports,"__esModule",{value:true});exports.parse=exports.parser=void 0;var tslib_1=require$$0$3;var _babel_options_1=tslib_1.__importDefault(require_babel_options());// Prefer the new @babel/parser package, but fall back to babylon if
// that's what's available.
exports.parser=function(){try{return requireLib$1();}catch(_a){try{return require("babylon");}catch(_b){throw new Error("Install @babel/parser to use the `typescript`, `flow`, or `babel` parsers");}}}();// This module is suitable for passing as options.parser when calling
// recast.parse to process JavaScript code with Babel:
//
//   const ast = recast.parse(source, {
//     parser: require("recast/parsers/babel")
//   });
//
function parse(source,options){var babelOptions=_babel_options_1.default(options);babelOptions.plugins.push("jsx","flow");return exports.parser.parse(source,babelOptions);}exports.parse=parse;})(babel);Object.defineProperty(typescript,"__esModule",{value:true});var parse_1=typescript.parse=void 0;var tslib_1=require$$0$3;var babel_1=babel;var _babel_options_1=tslib_1.__importDefault(require_babel_options());// This module is suitable for passing as options.parser when calling
// recast.parse to process TypeScript code:
//
//   const ast = recast.parse(source, {
//     parser: require("recast/parsers/typescript")
//   });
//
function parse(source,options){var babelOptions=_babel_options_1.default(options);babelOptions.plugins.push("typescript");return babel_1.parser.parse(source,babelOptions);}parse_1=typescript.parse=parse;var parser=/*#__PURE__*/_mergeNamespaces({__proto__:null,default:typescript,get parse(){return parse_1;}},[typescript]);const defaultTemplate$1="\nimport {defineCliConfig} from 'sanity/cli'\n\nexport default defineCliConfig({\n  api: {\n    projectId: '%projectId%',\n    dataset: '%dataset%'\n  }\n})\n";function createCliConfig(options){const variables=options;const template=defaultTemplate$1.trimStart();const ast=main$4.parse(template,{parser});traverse__default.default(ast,{StringLiteral:{enter(_ref122){let{node}=_ref122;const value=node.value;if(!value.startsWith("%")||!value.endsWith("%")){return;}const variableName=value.slice(1,-1);if(!(variableName in variables)){throw new Error("Template variable '".concat(value,"' not defined"));}node.value=variables[variableName]||"";}}});return main$4.print(ast,{quote:"single"}).code;}/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */var isobject=function isObject(val){return val!=null&&typeof val==='object'&&Array.isArray(val)===false;};/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */var isObject$1=isobject;function isObjectObject(o){return isObject$1(o)===true&&Object.prototype.toString.call(o)==='[object Object]';}var isPlainObject$1=function isPlainObject(o){var ctor,prot;if(isObjectObject(o)===false)return false;// If has modified constructor
ctor=o.constructor;if(typeof ctor!=='function')return false;// If has modified prototype
prot=ctor.prototype;if(isObjectObject(prot)===false)return false;// If constructor does not have an Object-specific method
if(prot.hasOwnProperty('isPrototypeOf')===false){return false;}// Most likely a plain Object
return true;};var isPlainObject=isPlainObject$1;function defaultSortFn(a,b){return a.localeCompare(b);}function sort(src,comparator){var out;if(Array.isArray(src)){return src.map(function(item){return sort(item,comparator);});}if(isPlainObject(src)){out={};Object.keys(src).sort(comparator||defaultSortFn).forEach(function(key){out[key]=sort(src[key],comparator);});return out;}return src;}var deepSortObject=sort;var sortObject=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(deepSortObject);const manifestPropOrder=["name","private","version","description","main","author","license","scripts","keywords","dependencies","devDependencies"];function createPackageManifest(data){const dependencies=data.dependencies?{dependencies:sortObject(data.dependencies)}:{};const devDependencies=data.devDependencies?{devDependencies:sortObject(data.devDependencies)}:{};const pkg={...getCommonManifest(data),main:"package.json",keywords:["sanity"],scripts:{dev:"sanity dev",start:"sanity start",build:"sanity build",deploy:"sanity deploy","deploy-graphql":"sanity graphql deploy"},...dependencies,...devDependencies,prettier:{semi:false,printWidth:100,bracketSpacing:false,singleQuote:true}};return serializeManifest(pkg);}function getCommonManifest(data){const pkg={name:data.name,version:"1.0.0",description:data.description,author:data.author,license:data.license||"UNLICENSED",devDependencies:{}};if(pkg.license==="UNLICENSED"){pkg.private=true;}if(data.gitRemote){pkg.repository={type:"git",url:data.gitRemote};}return pkg;}function serializeManifest(src){const props=manifestPropOrder.concat(Object.keys(src));const ordered=props.reduce((target,prop)=>{const source=src;if(typeof source[prop]!=="undefined"&&typeof target[prop]==="undefined"){target[prop]=source[prop];}return target;},{});return"".concat(JSON.stringify(ordered,null,2),"\n");}const defaultTemplate="\nimport {defineConfig} from 'sanity'\nimport {structureTool} from 'sanity/structure'\nimport {visionTool} from '@sanity/vision'\nimport {schemaTypes} from './schemaTypes'\n\nexport default defineConfig({\n  name: '%sourceName%',\n  title: '%projectName%',\n\n  projectId: '%projectId%',\n  dataset: '%dataset%',\n\n  plugins: [structureTool(), visionTool()],\n\n  schema: {\n    types: schemaTypes,\n  },\n})\n";const defaultVariables={projectName:"Sanity Studio",sourceName:"default",sourceTitle:"Default"};function createStudioConfig(options){const variables={...defaultVariables,...options.variables};if(typeof options.template==="function"){return options.template(variables).trimStart();}const template=(options.template||defaultTemplate).trimStart();const ast=main$4.parse(template,{parser});traverse__default.default(ast,{StringLiteral:{enter(_ref123){let{node}=_ref123;const value=node.value;if(!value.startsWith("%")||!value.endsWith("%")){return;}const variableName=value.slice(1,-1);if(!(variableName in variables)){throw new Error("Template variable '".concat(value,"' not defined"));}node.value=variables[variableName]||"";}}});return main$4.print(ast,{quote:"single"}).code;}const blogTemplate={};const cleanTemplate={};const configTemplate$3="\nimport {defineConfig, isDev} from 'sanity'\nimport {visionTool} from '@sanity/vision'\nimport {structureTool} from 'sanity/structure'\nimport {schemaTypes} from './schemaTypes'\nimport {getStartedPlugin} from './plugins/sanity-plugin-tutorial'\n\nconst devOnlyPlugins = [getStartedPlugin()]\n\nexport default defineConfig({\n  name: '%sourceName%',\n  title: '%projectName%',\n\n  projectId: '%projectId%',\n  dataset: '%dataset%',\n\n  plugins: [structureTool(), visionTool(), ...(isDev ? devOnlyPlugins : [])],\n\n  schema: {\n    types: schemaTypes,\n  },\n})\n\n";const getStartedTemplate={configTemplate:configTemplate$3,typescriptOnly:true,dependencies:{"@sanity/icons":"^2.6.0","@sanity/ui":"^2.0.0"}};const configTemplate$2="\nimport {defineConfig} from 'sanity'\nimport {structureTool} from 'sanity/structure'\nimport {visionTool} from '@sanity/vision'\n//import {googleMapsInput} from '@sanity/google-maps-input'\nimport {schemaTypes} from './schemaTypes'\n\nexport default defineConfig({\n  name: '%sourceName%',\n  title: '%projectName%',\n\n  projectId: '%projectId%',\n  dataset: '%dataset%',\n\n  plugins: [\n    structureTool(),\n    visionTool(),\n    //googleMapsInput(),\n  ],\n\n  schema: {\n    types: schemaTypes,\n  },\n})\n";const movieTemplate={configTemplate:configTemplate$2,importPrompt:"Add a sampling of sci-fi movies to your dataset on the hosted backend?",datasetUrl:"https://public.sanity.io/moviesdb-2018-03-06.tar.gz",dependencies:{//'@sanity/google-maps-input': '^2.27.0',
"react-icons":"^3.11.0"}};const configTemplate$1="\nimport {defineConfig, isDev} from 'sanity'\n\nimport {structureTool} from 'sanity/structure'\nimport {schemaTypes} from './schemaTypes'\nimport {structure} from './structure'\n\nimport {visionTool} from '@sanity/vision'\nimport {colorInput} from '@sanity/color-input'\nimport {imageHotspotArrayPlugin} from 'sanity-plugin-hotspot-array'\nimport {media, mediaAssetSource} from 'sanity-plugin-media'\nimport {customDocumentActions} from './plugins/customDocumentActions'\n\nconst devOnlyPlugins = [visionTool()]\n\nexport default defineConfig({\n  name: '%sourceName%',\n  title: '%projectName%',\n\n  projectId: '%projectId%',\n  dataset: '%dataset%',\n\n  plugins: [\n    structureTool({structure}),\n    colorInput(),\n    imageHotspotArrayPlugin(),\n    customDocumentActions(),\n    media(),\n    ...(isDev ? devOnlyPlugins : []),\n  ],\n\n  schema: {\n    types: schemaTypes,\n  },\n\n  form: {\n    file: {\n      assetSources: (previousAssetSources) => {\n        return previousAssetSources.filter((assetSource) => assetSource !== mediaAssetSource)\n      },\n    },\n    image: {\n      assetSources: (previousAssetSources) => {\n        return previousAssetSources.filter((assetSource) => assetSource === mediaAssetSource)\n      },\n    },\n  },\n})";const shopifyTemplate$1={configTemplate:configTemplate$1,dependencies:{"@sanity/asset-utils":"^1.3.0","@sanity/color-input":"^3.0.2","@sanity/icons":"^2.6.0","@sanity/ui":"^2.0.0","lodash.get":"^4.4.2","pluralize-esm":"^9.0.2","sanity-plugin-hotspot-array":"^1.0.1","sanity-plugin-media":"^2.0.5",slug:"^8.2.2"},devDependencies:{"@portabletext/types":"^2.0.2","@types/lodash.get":"^4.4.7","@types/slug":"^5.0.3"}};const configTemplate="\nimport {shopifyAssets} from 'sanity-plugin-shopify-assets'\nimport {defineConfig, isDev} from 'sanity'\nimport {structureTool} from 'sanity/structure'\nimport {visionTool} from '@sanity/vision'\nimport {shopifyDocumentActions} from './plugins/shopifyDocumentActions'\nimport {schemaTypes} from './schemaTypes'\nimport {structure} from './structure'\nimport {SHOPIFY_STORE_ID} from './constants'\n\nconst devOnlyPlugins = [visionTool()]\n\nexport default defineConfig({\n  name: '%sourceName%',\n  title: '%projectName%',\n\n  projectId: '%projectId%',\n  dataset: '%dataset%',\n\n  plugins: [\n    structureTool({structure}),\n    shopifyDocumentActions(),\n    shopifyAssets({\n      shopifyDomain: SHOPIFY_STORE_ID,\n    }),\n    ...(isDev ? devOnlyPlugins : []),\n  ],\n\n  schema: {\n    types: schemaTypes,\n  },\n})\n";const shopifyTemplate={configTemplate,typescriptOnly:true,dependencies:{"@portabletext/toolkit":"^2.0.1","@sanity/icons":"^2.6.0","@sanity/ui":"^2.0.0","@types/lodash.get":"^4.4.7","lodash.get":"^4.4.2","pluralize-esm":"^9.0.4","sanity-plugin-shopify-assets":"^1.1.0"}};const templates={blog:blogTemplate,clean:cleanTemplate,"get-started":getStartedTemplate,moviedb:movieTemplate,shopify:shopifyTemplate$1,"shopify-online-storefront":shopifyTemplate};async function bootstrapTemplate(opts,context){const{apiClient,cliRoot,output}=context;const templatesDir=path__default.default.join(cliRoot,"templates");const{outputPath,templateName,useTypeScript,packageName,variables}=opts;const{projectId}=variables;const sourceDir=path__default.default.join(templatesDir,templateName);const sharedDir=path__default.default.join(templatesDir,"shared");const template=templates[templateName];if(!template){throw new Error("Template \"".concat(templateName,"\" not defined"));}loadEnv.debug('Copying files from template "%s" to "%s"',templateName,outputPath);let spinner=output.spinner("Bootstrapping files from template").start();await copy(sourceDir,outputPath,{rename:useTypeScript?toTypeScriptPath:void 0});await copy(path__default.default.join(sharedDir,"gitignore.txt"),outputPath,{rename:()=>".gitignore"});if(useTypeScript){await fs__default.default.copyFile(path__default.default.join(sharedDir,"tsconfig.json"),path__default.default.join(outputPath,"tsconfig.json"));}spinner.succeed();spinner=output.spinner("Resolving latest module versions").start();const dependencyVersions=await resolveLatestVersions({...studioDependencies.dependencies,...studioDependencies.devDependencies,...(template.dependencies||{})});spinner.succeed();const dependencies=Object.keys({...studioDependencies.dependencies,...template.dependencies}).reduce((deps,dependency)=>{deps[dependency]=dependencyVersions[dependency];return deps;},{});const devDependencies=Object.keys({...studioDependencies.devDependencies,...template.devDependencies}).reduce((deps,dependency)=>{deps[dependency]=dependencyVersions[dependency];return deps;},{});spinner=output.spinner("Creating default project files").start();const packageManifest=await createPackageManifest({name:packageName,dependencies,devDependencies});const studioConfig=await createStudioConfig({template:template.configTemplate,variables});const cliConfig=await createCliConfig({projectId:variables.projectId,dataset:variables.dataset});const codeExt=useTypeScript?"ts":"js";await Promise.all([writeFileIfNotExists("sanity.config.".concat(codeExt),studioConfig),writeFileIfNotExists("sanity.cli.".concat(codeExt),cliConfig),writeFileIfNotExists("package.json",packageManifest),writeFileIfNotExists(".eslintrc","".concat(JSON.stringify({extends:"@sanity/eslint-config-studio"},null,2),"\n"))]);try{await apiClient({api:{projectId}}).request({method:"PATCH",uri:"/projects/".concat(projectId),body:{metadata:{initialTemplate:"cli-".concat(templateName)}}});}catch(err){let message=typeof err==="string"?err:"<unknown error>";if(err instanceof Error){message=err.message;}loadEnv.debug("Failed to update initial template metadata for project: %s",message);}spinner.succeed();return template;async function writeFileIfNotExists(fileName,content){const filePath=path__default.default.join(outputPath,fileName);try{await fs__default.default.writeFile(filePath,content,{flag:"wx"});}catch(err){if(err.code==="EEXIST"){output.warn("\n".concat(chalk__default.default.yellow("\u26A0")," File \"").concat(filePath,"\" already exists, skipping"));}else{throw err;}}}}function toTypeScriptPath(originalPath){return originalPath.replace(/\.js$/,".ts");}function validateEmptyPath(dir){const checkPath=absolutify(dir);return pathIsEmpty(checkPath)?true:"Given path is not empty";}function absolutify(dir){const pathName=expandHome(dir);return path__default.default.isAbsolute(pathName)?pathName:path__default.default.resolve(process.cwd(),pathName);}function pathIsEmpty(dir){try{const content=require$$0__default.default.readdirSync(dir);return content.length===0;}catch(err){if(err.code==="ENOENT"){return true;}throw err;}}function expandHome(filePath){if(filePath.charCodeAt(0)===126){if(filePath.charCodeAt(1)===43){return path__default.default.join(process.cwd(),filePath.slice(2));}const home=require$$0__default$2.default.homedir();return home?path__default.default.join(home,filePath.slice(1)):filePath;}return filePath;}var pathIsAbsolute={exports:{}};var hasRequiredPathIsAbsolute;function requirePathIsAbsolute(){if(hasRequiredPathIsAbsolute)return pathIsAbsolute.exports;hasRequiredPathIsAbsolute=1;function posix(path){return path.charAt(0)==='/';}function win32(path){// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56
var splitDeviceRe=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;var result=splitDeviceRe.exec(path);var device=result[1]||'';var isUnc=Boolean(device&&device.charAt(1)!==':');// UNC paths are always absolute
return Boolean(result[2]||isUnc);}pathIsAbsolute.exports=process.platform==='win32'?win32:posix;pathIsAbsolute.exports.posix=posix;pathIsAbsolute.exports.win32=win32;return pathIsAbsolute.exports;}var common={};var hasRequiredCommon;function requireCommon(){if(hasRequiredCommon)return common;hasRequiredCommon=1;common.setopts=setopts;common.ownProp=ownProp;common.makeAbs=makeAbs;common.finish=finish;common.mark=mark;common.isIgnored=isIgnored;common.childrenIgnored=childrenIgnored;function ownProp(obj,field){return Object.prototype.hasOwnProperty.call(obj,field);}var fs=require$$0__default.default;var path=path__default.default;var minimatch=minimatch_1$2;var isAbsolute=requirePathIsAbsolute();var Minimatch=minimatch.Minimatch;function alphasort(a,b){return a.localeCompare(b,'en');}function setupIgnores(self,options){self.ignore=options.ignore||[];if(!Array.isArray(self.ignore))self.ignore=[self.ignore];if(self.ignore.length){self.ignore=self.ignore.map(ignoreMap);}}// ignore patterns are always in dot:true mode.
function ignoreMap(pattern){var gmatcher=null;if(pattern.slice(-3)==='/**'){var gpattern=pattern.replace(/(\/\*\*)+$/,'');gmatcher=new Minimatch(gpattern,{dot:true});}return{matcher:new Minimatch(pattern,{dot:true}),gmatcher:gmatcher};}function setopts(self,pattern,options){if(!options)options={};// base-matching: just use globstar for that.
if(options.matchBase&&-1===pattern.indexOf("/")){if(options.noglobstar){throw new Error("base matching requires globstar");}pattern="**/"+pattern;}self.silent=!!options.silent;self.pattern=pattern;self.strict=options.strict!==false;self.realpath=!!options.realpath;self.realpathCache=options.realpathCache||Object.create(null);self.follow=!!options.follow;self.dot=!!options.dot;self.mark=!!options.mark;self.nodir=!!options.nodir;if(self.nodir)self.mark=true;self.sync=!!options.sync;self.nounique=!!options.nounique;self.nonull=!!options.nonull;self.nosort=!!options.nosort;self.nocase=!!options.nocase;self.stat=!!options.stat;self.noprocess=!!options.noprocess;self.absolute=!!options.absolute;self.fs=options.fs||fs;self.maxLength=options.maxLength||Infinity;self.cache=options.cache||Object.create(null);self.statCache=options.statCache||Object.create(null);self.symlinks=options.symlinks||Object.create(null);setupIgnores(self,options);self.changedCwd=false;var cwd=process.cwd();if(!ownProp(options,"cwd"))self.cwd=cwd;else{self.cwd=path.resolve(options.cwd);self.changedCwd=self.cwd!==cwd;}self.root=options.root||path.resolve(self.cwd,"/");self.root=path.resolve(self.root);if(process.platform==="win32")self.root=self.root.replace(/\\/g,"/");// TODO: is an absolute `cwd` supposed to be resolved against `root`?
// e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')
self.cwdAbs=isAbsolute(self.cwd)?self.cwd:makeAbs(self,self.cwd);if(process.platform==="win32")self.cwdAbs=self.cwdAbs.replace(/\\/g,"/");self.nomount=!!options.nomount;// disable comments and negation in Minimatch.
// Note that they are not supported in Glob itself anyway.
options.nonegate=true;options.nocomment=true;// always treat \ in patterns as escapes, not path separators
options.allowWindowsEscape=false;self.minimatch=new Minimatch(pattern,options);self.options=self.minimatch.options;}function finish(self){var nou=self.nounique;var all=nou?[]:Object.create(null);for(var i=0,l=self.matches.length;i<l;i++){var matches=self.matches[i];if(!matches||Object.keys(matches).length===0){if(self.nonull){// do like the shell, and spit out the literal glob
var literal=self.minimatch.globSet[i];if(nou)all.push(literal);else all[literal]=true;}}else{// had matches
var m=Object.keys(matches);if(nou)all.push.apply(all,m);else m.forEach(function(m){all[m]=true;});}}if(!nou)all=Object.keys(all);if(!self.nosort)all=all.sort(alphasort);// at *some* point we statted all of these
if(self.mark){for(var i=0;i<all.length;i++){all[i]=self._mark(all[i]);}if(self.nodir){all=all.filter(function(e){var notDir=!/\/$/.test(e);var c=self.cache[e]||self.cache[makeAbs(self,e)];if(notDir&&c)notDir=c!=='DIR'&&!Array.isArray(c);return notDir;});}}if(self.ignore.length)all=all.filter(function(m){return!isIgnored(self,m);});self.found=all;}function mark(self,p){var abs=makeAbs(self,p);var c=self.cache[abs];var m=p;if(c){var isDir=c==='DIR'||Array.isArray(c);var slash=p.slice(-1)==='/';if(isDir&&!slash)m+='/';else if(!isDir&&slash)m=m.slice(0,-1);if(m!==p){var mabs=makeAbs(self,m);self.statCache[mabs]=self.statCache[abs];self.cache[mabs]=self.cache[abs];}}return m;}// lotta situps...
function makeAbs(self,f){var abs=f;if(f.charAt(0)==='/'){abs=path.join(self.root,f);}else if(isAbsolute(f)||f===''){abs=f;}else if(self.changedCwd){abs=path.resolve(self.cwd,f);}else{abs=path.resolve(f);}if(process.platform==='win32')abs=abs.replace(/\\/g,'/');return abs;}// Return true, if pattern ends with globstar '**', for the accompanying parent directory.
// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents
function isIgnored(self,path){if(!self.ignore.length)return false;return self.ignore.some(function(item){return item.matcher.match(path)||!!(item.gmatcher&&item.gmatcher.match(path));});}function childrenIgnored(self,path){if(!self.ignore.length)return false;return self.ignore.some(function(item){return!!(item.gmatcher&&item.gmatcher.match(path));});}return common;}var sync;var hasRequiredSync;function requireSync(){if(hasRequiredSync)return sync;hasRequiredSync=1;sync=globSync;globSync.GlobSync=GlobSync;var rp=requireFs_realpath();var minimatch=minimatch_1$2;requireGlob().Glob;var path=path__default.default;var assert=require$$1__default$1.default;var isAbsolute=requirePathIsAbsolute();var common=requireCommon();var setopts=common.setopts;var ownProp=common.ownProp;var childrenIgnored=common.childrenIgnored;var isIgnored=common.isIgnored;function globSync(pattern,options){if(typeof options==='function'||arguments.length===3)throw new TypeError('callback provided to sync glob\n'+'See: https://github.com/isaacs/node-glob/issues/167');return new GlobSync(pattern,options).found;}function GlobSync(pattern,options){if(!pattern)throw new Error('must provide pattern');if(typeof options==='function'||arguments.length===3)throw new TypeError('callback provided to sync glob\n'+'See: https://github.com/isaacs/node-glob/issues/167');if(!(this instanceof GlobSync))return new GlobSync(pattern,options);setopts(this,pattern,options);if(this.noprocess)return this;var n=this.minimatch.set.length;this.matches=new Array(n);for(var i=0;i<n;i++){this._process(this.minimatch.set[i],i,false);}this._finish();}GlobSync.prototype._finish=function(){assert.ok(this instanceof GlobSync);if(this.realpath){var self=this;this.matches.forEach(function(matchset,index){var set=self.matches[index]=Object.create(null);for(var p in matchset){try{p=self._makeAbs(p);var real=rp.realpathSync(p,self.realpathCache);set[real]=true;}catch(er){if(er.syscall==='stat')set[self._makeAbs(p)]=true;else throw er;}}});}common.finish(this);};GlobSync.prototype._process=function(pattern,index,inGlobStar){assert.ok(this instanceof GlobSync);// Get the first [n] parts of pattern that are all strings.
var n=0;while(typeof pattern[n]==='string'){n++;}// now n is the index of the first one that is *not* a string.
// See if there's anything else
var prefix;switch(n){// if not, then this is rather simple
case pattern.length:this._processSimple(pattern.join('/'),index);return;case 0:// pattern *starts* with some non-trivial item.
// going to readdir(cwd), but not include the prefix in matches.
prefix=null;break;default:// pattern has some string bits in the front.
// whatever it starts with, whether that's 'absolute' like /foo/bar,
// or 'relative' like '../baz'
prefix=pattern.slice(0,n).join('/');break;}var remain=pattern.slice(n);// get the list of entries.
var read;if(prefix===null)read='.';else if(isAbsolute(prefix)||isAbsolute(pattern.map(function(p){return typeof p==='string'?p:'[*]';}).join('/'))){if(!prefix||!isAbsolute(prefix))prefix='/'+prefix;read=prefix;}else read=prefix;var abs=this._makeAbs(read);//if ignored, skip processing
if(childrenIgnored(this,read))return;var isGlobStar=remain[0]===minimatch.GLOBSTAR;if(isGlobStar)this._processGlobStar(prefix,read,abs,remain,index,inGlobStar);else this._processReaddir(prefix,read,abs,remain,index,inGlobStar);};GlobSync.prototype._processReaddir=function(prefix,read,abs,remain,index,inGlobStar){var entries=this._readdir(abs,inGlobStar);// if the abs isn't a dir, then nothing can match!
if(!entries)return;// It will only match dot entries if it starts with a dot, or if
// dot is set.  Stuff like @(.foo|.bar) isn't allowed.
var pn=remain[0];var negate=!!this.minimatch.negate;var rawGlob=pn._glob;var dotOk=this.dot||rawGlob.charAt(0)==='.';var matchedEntries=[];for(var i=0;i<entries.length;i++){var e=entries[i];if(e.charAt(0)!=='.'||dotOk){var m;if(negate&&!prefix){m=!e.match(pn);}else{m=e.match(pn);}if(m)matchedEntries.push(e);}}var len=matchedEntries.length;// If there are no matched entries, then nothing matches.
if(len===0)return;// if this is the last remaining pattern bit, then no need for
// an additional stat *unless* the user has specified mark or
// stat explicitly.  We know they exist, since readdir returned
// them.
if(remain.length===1&&!this.mark&&!this.stat){if(!this.matches[index])this.matches[index]=Object.create(null);for(var i=0;i<len;i++){var e=matchedEntries[i];if(prefix){if(prefix.slice(-1)!=='/')e=prefix+'/'+e;else e=prefix+e;}if(e.charAt(0)==='/'&&!this.nomount){e=path.join(this.root,e);}this._emitMatch(index,e);}// This was the last one, and no stats were needed
return;}// now test all matched entries as stand-ins for that part
// of the pattern.
remain.shift();for(var i=0;i<len;i++){var e=matchedEntries[i];var newPattern;if(prefix)newPattern=[prefix,e];else newPattern=[e];this._process(newPattern.concat(remain),index,inGlobStar);}};GlobSync.prototype._emitMatch=function(index,e){if(isIgnored(this,e))return;var abs=this._makeAbs(e);if(this.mark)e=this._mark(e);if(this.absolute){e=abs;}if(this.matches[index][e])return;if(this.nodir){var c=this.cache[abs];if(c==='DIR'||Array.isArray(c))return;}this.matches[index][e]=true;if(this.stat)this._stat(e);};GlobSync.prototype._readdirInGlobStar=function(abs){// follow all symlinked directories forever
// just proceed as if this is a non-globstar situation
if(this.follow)return this._readdir(abs,false);var entries;var lstat;try{lstat=this.fs.lstatSync(abs);}catch(er){if(er.code==='ENOENT'){// lstat failed, doesn't exist
return null;}}var isSym=lstat&&lstat.isSymbolicLink();this.symlinks[abs]=isSym;// If it's not a symlink or a dir, then it's definitely a regular file.
// don't bother doing a readdir in that case.
if(!isSym&&lstat&&!lstat.isDirectory())this.cache[abs]='FILE';else entries=this._readdir(abs,false);return entries;};GlobSync.prototype._readdir=function(abs,inGlobStar){if(inGlobStar&&!ownProp(this.symlinks,abs))return this._readdirInGlobStar(abs);if(ownProp(this.cache,abs)){var c=this.cache[abs];if(!c||c==='FILE')return null;if(Array.isArray(c))return c;}try{return this._readdirEntries(abs,this.fs.readdirSync(abs));}catch(er){this._readdirError(abs,er);return null;}};GlobSync.prototype._readdirEntries=function(abs,entries){// if we haven't asked to stat everything, then just
// assume that everything in there exists, so we can avoid
// having to stat it a second time.
if(!this.mark&&!this.stat){for(var i=0;i<entries.length;i++){var e=entries[i];if(abs==='/')e=abs+e;else e=abs+'/'+e;this.cache[e]=true;}}this.cache[abs]=entries;// mark and cache dir-ness
return entries;};GlobSync.prototype._readdirError=function(f,er){// handle errors, and cache the information
switch(er.code){case'ENOTSUP':// https://github.com/isaacs/node-glob/issues/205
case'ENOTDIR':// totally normal. means it *does* exist.
var abs=this._makeAbs(f);this.cache[abs]='FILE';if(abs===this.cwdAbs){var error=new Error(er.code+' invalid cwd '+this.cwd);error.path=this.cwd;error.code=er.code;throw error;}break;case'ENOENT':// not terribly unusual
case'ELOOP':case'ENAMETOOLONG':case'UNKNOWN':this.cache[this._makeAbs(f)]=false;break;default:// some unusual error.  Treat as failure.
this.cache[this._makeAbs(f)]=false;if(this.strict)throw er;if(!this.silent)console.error('glob error',er);break;}};GlobSync.prototype._processGlobStar=function(prefix,read,abs,remain,index,inGlobStar){var entries=this._readdir(abs,inGlobStar);// no entries means not a dir, so it can never have matches
// foo.txt/** doesn't match foo.txt
if(!entries)return;// test without the globstar, and with every child both below
// and replacing the globstar.
var remainWithoutGlobStar=remain.slice(1);var gspref=prefix?[prefix]:[];var noGlobStar=gspref.concat(remainWithoutGlobStar);// the noGlobStar pattern exits the inGlobStar state
this._process(noGlobStar,index,false);var len=entries.length;var isSym=this.symlinks[abs];// If it's a symlink, and we're in a globstar, then stop
if(isSym&&inGlobStar)return;for(var i=0;i<len;i++){var e=entries[i];if(e.charAt(0)==='.'&&!this.dot)continue;// these two cases enter the inGlobStar state
var instead=gspref.concat(entries[i],remainWithoutGlobStar);this._process(instead,index,true);var below=gspref.concat(entries[i],remain);this._process(below,index,true);}};GlobSync.prototype._processSimple=function(prefix,index){// XXX review this.  Shouldn't it be doing the mounting etc
// before doing stat?  kinda weird?
var exists=this._stat(prefix);if(!this.matches[index])this.matches[index]=Object.create(null);// If it doesn't exist, then just mark the lack of results
if(!exists)return;if(prefix&&isAbsolute(prefix)&&!this.nomount){var trail=/[\/\\]$/.test(prefix);if(prefix.charAt(0)==='/'){prefix=path.join(this.root,prefix);}else{prefix=path.resolve(this.root,prefix);if(trail)prefix+='/';}}if(process.platform==='win32')prefix=prefix.replace(/\\/g,'/');// Mark this as a match
this._emitMatch(index,prefix);};// Returns either 'DIR', 'FILE', or false
GlobSync.prototype._stat=function(f){var abs=this._makeAbs(f);var needDir=f.slice(-1)==='/';if(f.length>this.maxLength)return false;if(!this.stat&&ownProp(this.cache,abs)){var c=this.cache[abs];if(Array.isArray(c))c='DIR';// It exists, but maybe not how we need it
if(!needDir||c==='DIR')return c;if(needDir&&c==='FILE')return false;// otherwise we have to stat, because maybe c=true
// if we know it exists, but not what it is.
}var stat=this.statCache[abs];if(!stat){var lstat;try{lstat=this.fs.lstatSync(abs);}catch(er){if(er&&(er.code==='ENOENT'||er.code==='ENOTDIR')){this.statCache[abs]=false;return false;}}if(lstat&&lstat.isSymbolicLink()){try{stat=this.fs.statSync(abs);}catch(er){stat=lstat;}}else{stat=lstat;}}this.statCache[abs]=stat;var c=true;if(stat)c=stat.isDirectory()?'DIR':'FILE';this.cache[abs]=this.cache[abs]||c;if(needDir&&c==='FILE')return false;return c;};GlobSync.prototype._mark=function(p){return common.mark(this,p);};GlobSync.prototype._makeAbs=function(f){return common.makeAbs(this,f);};return sync;}var glob_1;var hasRequiredGlob;function requireGlob(){if(hasRequiredGlob)return glob_1;hasRequiredGlob=1;// Approach:
//
// 1. Get the minimatch set
// 2. For each pattern in the set, PROCESS(pattern, false)
// 3. Store matches per-set, then uniq them
//
// PROCESS(pattern, inGlobStar)
// Get the first [n] items from pattern that are all strings
// Join these together.  This is PREFIX.
//   If there is no more remaining, then stat(PREFIX) and
//   add to matches if it succeeds.  END.
//
// If inGlobStar and PREFIX is symlink and points to dir
//   set ENTRIES = []
// else readdir(PREFIX) as ENTRIES
//   If fail, END
//
// with ENTRIES
//   If pattern[n] is GLOBSTAR
//     // handle the case where the globstar match is empty
//     // by pruning it out, and testing the resulting pattern
//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)
//     // handle other cases.
//     for ENTRY in ENTRIES (not dotfiles)
//       // attach globstar + tail onto the entry
//       // Mark that this entry is a globstar match
//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)
//
//   else // not globstar
//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)
//       Test ENTRY against pattern[n]
//       If fails, continue
//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])
//
// Caveat:
//   Cache all stats and readdirs results to minimize syscall.  Since all
//   we ever care about is existence and directory-ness, we can just keep
//   `true` for files, and [children,...] for directories, or `false` for
//   things that don't exist.
glob_1=glob;var rp=requireFs_realpath();var minimatch=minimatch_1$2;var inherits=inheritsExports;var EE=require$$3__default.default.EventEmitter;var path=path__default.default;var assert=require$$1__default$1.default;var isAbsolute=requirePathIsAbsolute();var globSync=requireSync();var common=requireCommon();var setopts=common.setopts;var ownProp=common.ownProp;var inflight=requireInflight();var childrenIgnored=common.childrenIgnored;var isIgnored=common.isIgnored;var once=requireOnce();function glob(pattern,options,cb){if(typeof options==='function')cb=options,options={};if(!options)options={};if(options.sync){if(cb)throw new TypeError('callback provided to sync glob');return globSync(pattern,options);}return new Glob(pattern,options,cb);}glob.sync=globSync;var GlobSync=glob.GlobSync=globSync.GlobSync;// old api surface
glob.glob=glob;function extend(origin,add){if(add===null||typeof add!=='object'){return origin;}var keys=Object.keys(add);var i=keys.length;while(i--){origin[keys[i]]=add[keys[i]];}return origin;}glob.hasMagic=function(pattern,options_){var options=extend({},options_);options.noprocess=true;var g=new Glob(pattern,options);var set=g.minimatch.set;if(!pattern)return false;if(set.length>1)return true;for(var j=0;j<set[0].length;j++){if(typeof set[0][j]!=='string')return true;}return false;};glob.Glob=Glob;inherits(Glob,EE);function Glob(pattern,options,cb){if(typeof options==='function'){cb=options;options=null;}if(options&&options.sync){if(cb)throw new TypeError('callback provided to sync glob');return new GlobSync(pattern,options);}if(!(this instanceof Glob))return new Glob(pattern,options,cb);setopts(this,pattern,options);this._didRealPath=false;// process each pattern in the minimatch set
var n=this.minimatch.set.length;// The matches are stored as {<filename>: true,...} so that
// duplicates are automagically pruned.
// Later, we do an Object.keys() on these.
// Keep them as a list so we can fill in when nonull is set.
this.matches=new Array(n);if(typeof cb==='function'){cb=once(cb);this.on('error',cb);this.on('end',function(matches){cb(null,matches);});}var self=this;this._processing=0;this._emitQueue=[];this._processQueue=[];this.paused=false;if(this.noprocess)return this;if(n===0)return done();var sync=true;for(var i=0;i<n;i++){this._process(this.minimatch.set[i],i,false,done);}sync=false;function done(){--self._processing;if(self._processing<=0){if(sync){process.nextTick(function(){self._finish();});}else{self._finish();}}}}Glob.prototype._finish=function(){assert(this instanceof Glob);if(this.aborted)return;if(this.realpath&&!this._didRealpath)return this._realpath();common.finish(this);this.emit('end',this.found);};Glob.prototype._realpath=function(){if(this._didRealpath)return;this._didRealpath=true;var n=this.matches.length;if(n===0)return this._finish();var self=this;for(var i=0;i<this.matches.length;i++)this._realpathSet(i,next);function next(){if(--n===0)self._finish();}};Glob.prototype._realpathSet=function(index,cb){var matchset=this.matches[index];if(!matchset)return cb();var found=Object.keys(matchset);var self=this;var n=found.length;if(n===0)return cb();var set=this.matches[index]=Object.create(null);found.forEach(function(p,i){// If there's a problem with the stat, then it means that
// one or more of the links in the realpath couldn't be
// resolved.  just return the abs value in that case.
p=self._makeAbs(p);rp.realpath(p,self.realpathCache,function(er,real){if(!er)set[real]=true;else if(er.syscall==='stat')set[p]=true;else self.emit('error',er);// srsly wtf right here
if(--n===0){self.matches[index]=set;cb();}});});};Glob.prototype._mark=function(p){return common.mark(this,p);};Glob.prototype._makeAbs=function(f){return common.makeAbs(this,f);};Glob.prototype.abort=function(){this.aborted=true;this.emit('abort');};Glob.prototype.pause=function(){if(!this.paused){this.paused=true;this.emit('pause');}};Glob.prototype.resume=function(){if(this.paused){this.emit('resume');this.paused=false;if(this._emitQueue.length){var eq=this._emitQueue.slice(0);this._emitQueue.length=0;for(var i=0;i<eq.length;i++){var e=eq[i];this._emitMatch(e[0],e[1]);}}if(this._processQueue.length){var pq=this._processQueue.slice(0);this._processQueue.length=0;for(var i=0;i<pq.length;i++){var p=pq[i];this._processing--;this._process(p[0],p[1],p[2],p[3]);}}}};Glob.prototype._process=function(pattern,index,inGlobStar,cb){assert(this instanceof Glob);assert(typeof cb==='function');if(this.aborted)return;this._processing++;if(this.paused){this._processQueue.push([pattern,index,inGlobStar,cb]);return;}//console.error('PROCESS %d', this._processing, pattern)
// Get the first [n] parts of pattern that are all strings.
var n=0;while(typeof pattern[n]==='string'){n++;}// now n is the index of the first one that is *not* a string.
// see if there's anything else
var prefix;switch(n){// if not, then this is rather simple
case pattern.length:this._processSimple(pattern.join('/'),index,cb);return;case 0:// pattern *starts* with some non-trivial item.
// going to readdir(cwd), but not include the prefix in matches.
prefix=null;break;default:// pattern has some string bits in the front.
// whatever it starts with, whether that's 'absolute' like /foo/bar,
// or 'relative' like '../baz'
prefix=pattern.slice(0,n).join('/');break;}var remain=pattern.slice(n);// get the list of entries.
var read;if(prefix===null)read='.';else if(isAbsolute(prefix)||isAbsolute(pattern.map(function(p){return typeof p==='string'?p:'[*]';}).join('/'))){if(!prefix||!isAbsolute(prefix))prefix='/'+prefix;read=prefix;}else read=prefix;var abs=this._makeAbs(read);//if ignored, skip _processing
if(childrenIgnored(this,read))return cb();var isGlobStar=remain[0]===minimatch.GLOBSTAR;if(isGlobStar)this._processGlobStar(prefix,read,abs,remain,index,inGlobStar,cb);else this._processReaddir(prefix,read,abs,remain,index,inGlobStar,cb);};Glob.prototype._processReaddir=function(prefix,read,abs,remain,index,inGlobStar,cb){var self=this;this._readdir(abs,inGlobStar,function(er,entries){return self._processReaddir2(prefix,read,abs,remain,index,inGlobStar,entries,cb);});};Glob.prototype._processReaddir2=function(prefix,read,abs,remain,index,inGlobStar,entries,cb){// if the abs isn't a dir, then nothing can match!
if(!entries)return cb();// It will only match dot entries if it starts with a dot, or if
// dot is set.  Stuff like @(.foo|.bar) isn't allowed.
var pn=remain[0];var negate=!!this.minimatch.negate;var rawGlob=pn._glob;var dotOk=this.dot||rawGlob.charAt(0)==='.';var matchedEntries=[];for(var i=0;i<entries.length;i++){var e=entries[i];if(e.charAt(0)!=='.'||dotOk){var m;if(negate&&!prefix){m=!e.match(pn);}else{m=e.match(pn);}if(m)matchedEntries.push(e);}}//console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)
var len=matchedEntries.length;// If there are no matched entries, then nothing matches.
if(len===0)return cb();// if this is the last remaining pattern bit, then no need for
// an additional stat *unless* the user has specified mark or
// stat explicitly.  We know they exist, since readdir returned
// them.
if(remain.length===1&&!this.mark&&!this.stat){if(!this.matches[index])this.matches[index]=Object.create(null);for(var i=0;i<len;i++){var e=matchedEntries[i];if(prefix){if(prefix!=='/')e=prefix+'/'+e;else e=prefix+e;}if(e.charAt(0)==='/'&&!this.nomount){e=path.join(this.root,e);}this._emitMatch(index,e);}// This was the last one, and no stats were needed
return cb();}// now test all matched entries as stand-ins for that part
// of the pattern.
remain.shift();for(var i=0;i<len;i++){var e=matchedEntries[i];if(prefix){if(prefix!=='/')e=prefix+'/'+e;else e=prefix+e;}this._process([e].concat(remain),index,inGlobStar,cb);}cb();};Glob.prototype._emitMatch=function(index,e){if(this.aborted)return;if(isIgnored(this,e))return;if(this.paused){this._emitQueue.push([index,e]);return;}var abs=isAbsolute(e)?e:this._makeAbs(e);if(this.mark)e=this._mark(e);if(this.absolute)e=abs;if(this.matches[index][e])return;if(this.nodir){var c=this.cache[abs];if(c==='DIR'||Array.isArray(c))return;}this.matches[index][e]=true;var st=this.statCache[abs];if(st)this.emit('stat',e,st);this.emit('match',e);};Glob.prototype._readdirInGlobStar=function(abs,cb){if(this.aborted)return;// follow all symlinked directories forever
// just proceed as if this is a non-globstar situation
if(this.follow)return this._readdir(abs,false,cb);var lstatkey='lstat\0'+abs;var self=this;var lstatcb=inflight(lstatkey,lstatcb_);if(lstatcb)self.fs.lstat(abs,lstatcb);function lstatcb_(er,lstat){if(er&&er.code==='ENOENT')return cb();var isSym=lstat&&lstat.isSymbolicLink();self.symlinks[abs]=isSym;// If it's not a symlink or a dir, then it's definitely a regular file.
// don't bother doing a readdir in that case.
if(!isSym&&lstat&&!lstat.isDirectory()){self.cache[abs]='FILE';cb();}else self._readdir(abs,false,cb);}};Glob.prototype._readdir=function(abs,inGlobStar,cb){if(this.aborted)return;cb=inflight('readdir\0'+abs+'\0'+inGlobStar,cb);if(!cb)return;//console.error('RD %j %j', +inGlobStar, abs)
if(inGlobStar&&!ownProp(this.symlinks,abs))return this._readdirInGlobStar(abs,cb);if(ownProp(this.cache,abs)){var c=this.cache[abs];if(!c||c==='FILE')return cb();if(Array.isArray(c))return cb(null,c);}var self=this;self.fs.readdir(abs,readdirCb(this,abs,cb));};function readdirCb(self,abs,cb){return function(er,entries){if(er)self._readdirError(abs,er,cb);else self._readdirEntries(abs,entries,cb);};}Glob.prototype._readdirEntries=function(abs,entries,cb){if(this.aborted)return;// if we haven't asked to stat everything, then just
// assume that everything in there exists, so we can avoid
// having to stat it a second time.
if(!this.mark&&!this.stat){for(var i=0;i<entries.length;i++){var e=entries[i];if(abs==='/')e=abs+e;else e=abs+'/'+e;this.cache[e]=true;}}this.cache[abs]=entries;return cb(null,entries);};Glob.prototype._readdirError=function(f,er,cb){if(this.aborted)return;// handle errors, and cache the information
switch(er.code){case'ENOTSUP':// https://github.com/isaacs/node-glob/issues/205
case'ENOTDIR':// totally normal. means it *does* exist.
var abs=this._makeAbs(f);this.cache[abs]='FILE';if(abs===this.cwdAbs){var error=new Error(er.code+' invalid cwd '+this.cwd);error.path=this.cwd;error.code=er.code;this.emit('error',error);this.abort();}break;case'ENOENT':// not terribly unusual
case'ELOOP':case'ENAMETOOLONG':case'UNKNOWN':this.cache[this._makeAbs(f)]=false;break;default:// some unusual error.  Treat as failure.
this.cache[this._makeAbs(f)]=false;if(this.strict){this.emit('error',er);// If the error is handled, then we abort
// if not, we threw out of here
this.abort();}if(!this.silent)console.error('glob error',er);break;}return cb();};Glob.prototype._processGlobStar=function(prefix,read,abs,remain,index,inGlobStar,cb){var self=this;this._readdir(abs,inGlobStar,function(er,entries){self._processGlobStar2(prefix,read,abs,remain,index,inGlobStar,entries,cb);});};Glob.prototype._processGlobStar2=function(prefix,read,abs,remain,index,inGlobStar,entries,cb){//console.error('pgs2', prefix, remain[0], entries)
// no entries means not a dir, so it can never have matches
// foo.txt/** doesn't match foo.txt
if(!entries)return cb();// test without the globstar, and with every child both below
// and replacing the globstar.
var remainWithoutGlobStar=remain.slice(1);var gspref=prefix?[prefix]:[];var noGlobStar=gspref.concat(remainWithoutGlobStar);// the noGlobStar pattern exits the inGlobStar state
this._process(noGlobStar,index,false,cb);var isSym=this.symlinks[abs];var len=entries.length;// If it's a symlink, and we're in a globstar, then stop
if(isSym&&inGlobStar)return cb();for(var i=0;i<len;i++){var e=entries[i];if(e.charAt(0)==='.'&&!this.dot)continue;// these two cases enter the inGlobStar state
var instead=gspref.concat(entries[i],remainWithoutGlobStar);this._process(instead,index,true,cb);var below=gspref.concat(entries[i],remain);this._process(below,index,true,cb);}cb();};Glob.prototype._processSimple=function(prefix,index,cb){// XXX review this.  Shouldn't it be doing the mounting etc
// before doing stat?  kinda weird?
var self=this;this._stat(prefix,function(er,exists){self._processSimple2(prefix,index,er,exists,cb);});};Glob.prototype._processSimple2=function(prefix,index,er,exists,cb){//console.error('ps2', prefix, exists)
if(!this.matches[index])this.matches[index]=Object.create(null);// If it doesn't exist, then just mark the lack of results
if(!exists)return cb();if(prefix&&isAbsolute(prefix)&&!this.nomount){var trail=/[\/\\]$/.test(prefix);if(prefix.charAt(0)==='/'){prefix=path.join(this.root,prefix);}else{prefix=path.resolve(this.root,prefix);if(trail)prefix+='/';}}if(process.platform==='win32')prefix=prefix.replace(/\\/g,'/');// Mark this as a match
this._emitMatch(index,prefix);cb();};// Returns either 'DIR', 'FILE', or false
Glob.prototype._stat=function(f,cb){var abs=this._makeAbs(f);var needDir=f.slice(-1)==='/';if(f.length>this.maxLength)return cb();if(!this.stat&&ownProp(this.cache,abs)){var c=this.cache[abs];if(Array.isArray(c))c='DIR';// It exists, but maybe not how we need it
if(!needDir||c==='DIR')return cb(null,c);if(needDir&&c==='FILE')return cb();// otherwise we have to stat, because maybe c=true
// if we know it exists, but not what it is.
}var stat=this.statCache[abs];if(stat!==undefined){if(stat===false)return cb(null,stat);else{var type=stat.isDirectory()?'DIR':'FILE';if(needDir&&type==='FILE')return cb();else return cb(null,type,stat);}}var self=this;var statcb=inflight('stat\0'+abs,lstatcb_);if(statcb)self.fs.lstat(abs,statcb);function lstatcb_(er,lstat){if(lstat&&lstat.isSymbolicLink()){// If it's a symlink, then treat it as the target, unless
// the target does not exist, then treat it as a file.
return self.fs.stat(abs,function(er,stat){if(er)self._stat2(f,abs,null,lstat,cb);else self._stat2(f,abs,er,stat,cb);});}else{self._stat2(f,abs,er,lstat,cb);}}};Glob.prototype._stat2=function(f,abs,er,stat,cb){if(er&&(er.code==='ENOENT'||er.code==='ENOTDIR')){this.statCache[abs]=false;return cb();}var needDir=f.slice(-1)==='/';this.statCache[abs]=stat;if(abs.slice(-1)==='/'&&stat&&!stat.isDirectory())return cb(null,false,stat);var c=true;if(stat)c=stat.isDirectory()?'DIR':'FILE';this.cache[abs]=this.cache[abs]||c;if(needDir&&c==='FILE')return cb();return cb(null,c,stat);};return glob_1;}const assert=require$$1__default$1.default;const path$1=path__default.default;const fs=require$$0__default.default;let glob=undefined;try{glob=requireGlob();}catch(_err){// treat glob as optional.
}const defaultGlobOpts={nosort:true,silent:true};// for EMFILE handling
let timeout$1=0;const isWindows=process.platform==="win32";const defaults$2=options=>{const methods=['unlink','chmod','stat','lstat','rmdir','readdir'];methods.forEach(m=>{options[m]=options[m]||fs[m];m=m+'Sync';options[m]=options[m]||fs[m];});options.maxBusyTries=options.maxBusyTries||3;options.emfileWait=options.emfileWait||1000;if(options.glob===false){options.disableGlob=true;}if(options.disableGlob!==true&&glob===undefined){throw Error('glob dependency not found, set `options.disableGlob = true` if intentional');}options.disableGlob=options.disableGlob||false;options.glob=options.glob||defaultGlobOpts;};const rimraf$1=(p,options,cb)=>{if(typeof options==='function'){cb=options;options={};}assert(p,'rimraf: missing path');assert.equal(typeof p,'string','rimraf: path should be a string');assert.equal(typeof cb,'function','rimraf: callback function required');assert(options,'rimraf: invalid options argument provided');assert.equal(typeof options,'object','rimraf: options should be object');defaults$2(options);let busyTries=0;let errState=null;let n=0;const next=er=>{errState=errState||er;if(--n===0)cb(errState);};const afterGlob=(er,results)=>{if(er)return cb(er);n=results.length;if(n===0)return cb();results.forEach(p=>{const CB=er=>{if(er){if((er.code==="EBUSY"||er.code==="ENOTEMPTY"||er.code==="EPERM")&&busyTries<options.maxBusyTries){busyTries++;// try again, with the same exact callback as this one.
return setTimeout(()=>rimraf_(p,options,CB),busyTries*100);}// this one won't happen if graceful-fs is used.
if(er.code==="EMFILE"&&timeout$1<options.emfileWait){return setTimeout(()=>rimraf_(p,options,CB),timeout$1++);}// already gone
if(er.code==="ENOENT")er=null;}timeout$1=0;next(er);};rimraf_(p,options,CB);});};if(options.disableGlob||!glob.hasMagic(p))return afterGlob(null,[p]);options.lstat(p,(er,stat)=>{if(!er)return afterGlob(null,[p]);glob(p,options.glob,afterGlob);});};// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
const rimraf_=(p,options,cb)=>{assert(p);assert(options);assert(typeof cb==='function');// sunos lets the root user unlink directories, which is... weird.
// so we have to lstat here and make sure it's not a dir.
options.lstat(p,(er,st)=>{if(er&&er.code==="ENOENT")return cb(null);// Windows can EPERM on stat.  Life is suffering.
if(er&&er.code==="EPERM"&&isWindows)fixWinEPERM(p,options,er,cb);if(st&&st.isDirectory())return rmdir(p,options,er,cb);options.unlink(p,er=>{if(er){if(er.code==="ENOENT")return cb(null);if(er.code==="EPERM")return isWindows?fixWinEPERM(p,options,er,cb):rmdir(p,options,er,cb);if(er.code==="EISDIR")return rmdir(p,options,er,cb);}return cb(er);});});};const fixWinEPERM=(p,options,er,cb)=>{assert(p);assert(options);assert(typeof cb==='function');options.chmod(p,0o666,er2=>{if(er2)cb(er2.code==="ENOENT"?null:er);else options.stat(p,(er3,stats)=>{if(er3)cb(er3.code==="ENOENT"?null:er);else if(stats.isDirectory())rmdir(p,options,er,cb);else options.unlink(p,cb);});});};const fixWinEPERMSync=(p,options,er)=>{assert(p);assert(options);try{options.chmodSync(p,0o666);}catch(er2){if(er2.code==="ENOENT")return;else throw er;}let stats;try{stats=options.statSync(p);}catch(er3){if(er3.code==="ENOENT")return;else throw er;}if(stats.isDirectory())rmdirSync(p,options,er);else options.unlinkSync(p);};const rmdir=(p,options,originalEr,cb)=>{assert(p);assert(options);assert(typeof cb==='function');// try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
// if we guessed wrong, and it's not a directory, then
// raise the original error.
options.rmdir(p,er=>{if(er&&(er.code==="ENOTEMPTY"||er.code==="EEXIST"||er.code==="EPERM"))rmkids(p,options,cb);else if(er&&er.code==="ENOTDIR")cb(originalEr);else cb(er);});};const rmkids=(p,options,cb)=>{assert(p);assert(options);assert(typeof cb==='function');options.readdir(p,(er,files)=>{if(er)return cb(er);let n=files.length;if(n===0)return options.rmdir(p,cb);let errState;files.forEach(f=>{rimraf$1(path$1.join(p,f),options,er=>{if(errState)return;if(er)return cb(errState=er);if(--n===0)options.rmdir(p,cb);});});});};// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
const rimrafSync=(p,options)=>{options=options||{};defaults$2(options);assert(p,'rimraf: missing path');assert.equal(typeof p,'string','rimraf: path should be a string');assert(options,'rimraf: missing options');assert.equal(typeof options,'object','rimraf: options should be object');let results;if(options.disableGlob||!glob.hasMagic(p)){results=[p];}else{try{options.lstatSync(p);results=[p];}catch(er){results=glob.sync(p,options.glob);}}if(!results.length)return;for(let i=0;i<results.length;i++){const p=results[i];let st;try{st=options.lstatSync(p);}catch(er){if(er.code==="ENOENT")return;// Windows can EPERM on stat.  Life is suffering.
if(er.code==="EPERM"&&isWindows)fixWinEPERMSync(p,options,er);}try{// sunos lets the root user unlink directories, which is... weird.
if(st&&st.isDirectory())rmdirSync(p,options,null);else options.unlinkSync(p);}catch(er){if(er.code==="ENOENT")return;if(er.code==="EPERM")return isWindows?fixWinEPERMSync(p,options,er):rmdirSync(p,options,er);if(er.code!=="EISDIR")throw er;rmdirSync(p,options,er);}}};const rmdirSync=(p,options,originalEr)=>{assert(p);assert(options);try{options.rmdirSync(p);}catch(er){if(er.code==="ENOENT")return;if(er.code==="ENOTDIR")throw originalEr;if(er.code==="ENOTEMPTY"||er.code==="EEXIST"||er.code==="EPERM")rmkidsSync(p,options);}};const rmkidsSync=(p,options)=>{assert(p);assert(options);options.readdirSync(p).forEach(f=>rimrafSync(path$1.join(p,f),options));// We only end up here once we got ENOTEMPTY at least once, and
// at this point, we are guaranteed to have removed all the kids.
// So, we know that it won't be ENOENT or ENOTDIR or anything else.
// try really hard to delete stuff on windows, because it has a
// PROFOUNDLY annoying habit of not closing handles promptly when
// files are deleted, resulting in spurious ENOTEMPTY errors.
const retries=isWindows?100:1;let i=0;do{let threw=true;try{const ret=options.rmdirSync(p,options);threw=false;return ret;}finally{if(++i<retries&&threw)continue;}}while(true);};var rimraf_1=rimraf$1;rimraf$1.sync=rimrafSync;var rimrafCb=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(rimraf_1);const defaultCommitMessage="feat: bootstrap sanity studio";function tryGitInit(rootDir,commitMessage){const execOptions={stdio:"ignore",cwd:rootDir};let didInit=false;try{require$$0$5.execSync("git --version",execOptions);if(isInGitRepository(rootDir)||isInMercurialRepository(rootDir)){return false;}require$$0$5.execSync("git init",execOptions);didInit=true;require$$0$5.execSync("git checkout -b main",execOptions);require$$0$5.execSync("git add -A",execOptions);require$$0$5.execFileSync("git",["commit","-m",commitMessage||defaultCommitMessage],{stdio:"ignore",cwd:rootDir});return true;}catch(e){if(didInit){try{rimrafCb.sync(path__default.default.join(rootDir,".git"));}catch(_){}}return false;}}function isInGitRepository(rootDir){try{require$$0$5.execSync("git rev-parse --is-inside-work-tree",{stdio:"ignore",cwd:rootDir});return true;}catch(_){}return false;}function isInMercurialRepository(rootDir){try{require$$0$5.execSync("hg --cwd . root",{stdio:"ignore",cwd:rootDir});return true;}catch(_){}return false;}const MAX_DATASET_NAME_LENGTH=64;const datasetNameError="Dataset names can only contain lowercase characters,numbers, underscores and dashesand can be at most ".concat(MAX_DATASET_NAME_LENGTH," characters.");function promptForDatasetName(prompt){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let existingDatasets=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];return prompt.single({type:"input",message:"Dataset name:",validate:name=>{if(existingDatasets.includes(name)){return"Dataset name already exists";}if(!name||name.length<2||name.length>MAX_DATASET_NAME_LENGTH){return"Dataset name must be between 2 and ".concat(MAX_DATASET_NAME_LENGTH," characters");}if(name.toLowerCase()!==name){return"Dataset name must be lowercase";}if(name.replace(/\s/g,"")!==name){return"Dataset name cannot contain whitespace";}if(/^[^a-z0-9]/.test(name)){return"Dataset name must start with a character or letter";}if(/[-_]$/.test(name)){return"Dataset name must not end with a dash or an underscore";}const isValid=/^[a-z0-9][-\w]+$/.test(name);if(isValid){return true;}const invalid=name.match(/[^-\w]/g)||[];return invalid.length>0?"Disallowed characters found: ".concat(formatInvalid(name,invalid)):datasetNameError;},...options});}function formatInvalid(name,invalid){return invalid.reduce((acc,char)=>acc.replace(new RegExp(escapeRegex(char),"g"),chalk__default.default.red.bold(char)),name);}function escapeRegex(str){return"".concat(str).replace(/([?!${}*:()|=^[\]/\\.+])/g,"\\$1");}function promptForTypeScript(prompt){return prompt.single({type:"confirm",message:"Do you want to use TypeScript?",default:true});}function promptForDefaultConfig(prompt){return prompt.single({type:"confirm",message:"Use the default dataset configuration?",default:true});}async function promptForAclMode(prompt,output){const mode=await prompt.single({type:"list",message:"Choose dataset visibility\xA0\u2013\xA0this can be changed later",choices:[{value:"public",name:"Public (world readable)"},{value:"private",name:"Private (authenticated requests only)"}]});if(mode==="private"){output.print("Please note that while documents are private, assets (files and images) are still public\n");}return mode;}function promptForEmbeddedStudio(prompt){return prompt.single({type:"confirm",message:"Would you like an embedded Sanity Studio?",default:true});}function promptForAppDir(prompt){return prompt.single({type:"confirm",message:"Would you like to use the Next.js app directory for routes?",default:false});}function promptForStudioPath(prompt){return prompt.single({type:"input",message:"What route do you want to use for the Studio?",default:"/studio",validate(input){if(!input.startsWith("/")){return"Must start with /";}if(input.endsWith("/")){return"Must not end with /";}if(!/^[a-zA-Z0-9-_\\/]+$/.test(input)){return"Must only contain a-Z, 0-9, -, _ and /";}return true;}});}function promptForNextTemplate(prompt){return prompt.single({message:"Select project template to use",type:"list",choices:[{value:"clean",name:"Clean project with no predefined schema types"},{value:"blog",name:"Blog (schema)"}],default:"clean"});}function promptForAppendEnv(prompt,envFilename){return prompt.single({type:"confirm",message:"Would you like to add the project ID and dataset to your ".concat(envFilename," file?"),default:true});}async function pathExists(filePath){try{await fs__default.default.access(filePath);return true;}catch(err){if(err.code==="ENOENT"){return false;}throw err;}}function writeJson$1(filePath,content){const serialized=JSON.stringify(content,null,2);return fs$o.writeFile(filePath,serialized,"utf8");}const isCI$1=process.env.CI;async function reconfigureV2Project(args,context){const{output,prompt,workDir,apiClient,yarn,chalk}=context;const cliFlags=args.extOptions;const unattended=cliFlags.y||cliFlags.yes;const print=unattended?noop$2:output.print;let defaultConfig=cliFlags["dataset-default"];let showDefaultConfigPrompt=!defaultConfig;const manifestPath=path__default.default.join(workDir,"sanity.json");let projectManifest=await readJson(manifestPath);const hasProjectId=projectManifest&&projectManifest.api&&projectManifest.api.projectId;print("The Sanity Studio in this folder will be tied to a new project on Sanity.io!");if(hasProjectId){print("The previous project configuration will be overwritten.");}print("We're first going to make sure you have an account with Sanity.io. Hang on.");print("Press ctrl + C at any time to quit.\n");const userConfig=getUserConfig();const hasToken=userConfig.get("authToken");loadEnv.debug(hasToken?"User already has a token":"User has no token");if(hasToken){print("Looks like you already have a Sanity-account. Sweet!\n");}else if(!unattended){await getOrCreateUser();}const flags=await prepareFlags();loadEnv.debug("Prompting user to select or create a project");const{projectId,displayName,isFirstProject}=await getOrCreateProject();loadEnv.debug("Project with name ".concat(displayName," selected"));loadEnv.debug("Prompting user to select or create a dataset");const{datasetName}=await getOrCreateDataset({projectId,displayName,dataset:flags.dataset,aclMode:flags.visibility,defaultConfig:flags["dataset-default"]});loadEnv.debug("Dataset with name ".concat(datasetName," selected"));const outputPath=workDir;const projectInfo=projectManifest.project||{};const newProps={root:true,api:{...(projectManifest.api||{}),projectId,dataset:datasetName},project:{...projectInfo,// Keep original name if present
name:projectInfo.name||displayName}};projectManifest={...newProps,...projectManifest,...newProps};await writeJson$1(manifestPath,projectManifest);const hasNodeModules=await pathExists(path__default.default.join(workDir,"node_modules"));if(hasNodeModules){print("Skipping installation of dependencies since node_modules exists.");print("Run sanity install to reinstall dependencies");}else{try{await yarn(["install"],{...output,rootDir:workDir});}catch(err){throw err;}}print("\n".concat(chalk.green("Success!")," Now what?\n"));const isCurrentDir=outputPath===process.cwd();if(!isCurrentDir){print("\u25AA ".concat(chalk.cyan("cd ".concat(outputPath)),", then:"));}print("\u25AA ".concat(chalk.cyan("sanity docs")," to open the documentation in a browser"));print("\u25AA ".concat(chalk.cyan("sanity manage")," to open the project settings in a browser"));print("\u25AA ".concat(chalk.cyan("sanity help")," to explore the CLI manual"));print("\u25AA ".concat(chalk.green("sanity start")," to run your studio\n"));const sendInvite=isFirstProject&&(await prompt.single({type:"confirm",message:"We have an excellent developer community, would you like us to send you an invitation to join?",default:true}));if(sendInvite){apiClient({requireProject:false}).request({uri:"/invitations/community",method:"POST"}).catch(noop$2);}async function getOrCreateUser(){print("We can't find any auth credentials in your Sanity config");print("- log in or create a new account\n");const{extOptions,...otherArgs}=args;const loginArgs={...otherArgs,extOptions:{}};await login(loginArgs,context);print("Good stuff, you're now authenticated. You'll need a project to keep your");print("datasets and collaborators safe and snug.");}async function getOrCreateProject(){var _projects$find;let projects;try{projects=await apiClient({requireProject:false}).projects.list({includeMembers:false});}catch(err){if(unattended&&flags.project){return{projectId:flags.project,displayName:"Unknown project",isFirstProject:false};}throw new Error("Failed to communicate with the Sanity API:\n".concat(err.message));}if(projects.length===0&&unattended){throw new Error("No projects found for current user");}if(flags.project){const project=projects.find(proj=>proj.id===flags.project);if(!project&&!unattended){throw new Error("Given project ID (".concat(flags.project,") not found, or you do not have access to it"));}return{projectId:flags.project,displayName:project?project.displayName:"Unknown project",isFirstProject:false};}const isUsersFirstProject=projects.length===0;if(isUsersFirstProject){loadEnv.debug("No projects found for user, prompting for name");const projectName=await prompt.single({type:"input",message:"Project name:"});return createProject(apiClient,{displayName:projectName,subscription:void 0}).then(response=>({...response,isFirstProject:isUsersFirstProject}));}loadEnv.debug("User has ".concat(projects.length," project(s) already, showing list of choices"));const projectChoices=projects.map(project=>({value:project.id,name:"".concat(project.displayName," [").concat(project.id,"]")}));const selected=await prompt.single({message:"Select project to use",type:"list",choices:[{value:"new",name:"Create new project"},new prompt.Separator(),...projectChoices]});if(selected==="new"){loadEnv.debug("User wants to create a new project, prompting for name");return createProject(apiClient,{displayName:await prompt.single({type:"input",message:"Your project name:",default:"My Sanity Project"}),subscription:void 0}).then(response=>({...response,isFirstProject:isUsersFirstProject}));}loadEnv.debug("Returning selected project (".concat(selected,")"));return{projectId:selected,displayName:((_projects$find=projects.find(proj=>proj.id===selected))===null||_projects$find===void 0?void 0:_projects$find.displayName)||"",isFirstProject:isUsersFirstProject};}async function getOrCreateDataset(opts){if(opts.dataset&&isCI$1){return{datasetName:opts.dataset};}const client=apiClient({api:{projectId:opts.projectId}});const[datasets,projectFeatures]=await Promise.all([client.datasets.list(),client.request({uri:"/features"})]);const privateDatasetsAllowed=projectFeatures.includes("privateDataset");const allowedModes=privateDatasetsAllowed?["public","private"]:["public"];if(opts.aclMode&&!allowedModes.includes(opts.aclMode)){throw new Error("Visibility mode \"".concat(opts.aclMode,"\" not allowed"));}const getAclMode=async()=>{if(opts.aclMode){return opts.aclMode;}if(unattended||!privateDatasetsAllowed||defaultConfig){return"public";}if(privateDatasetsAllowed){const mode=await promptForAclMode(prompt,output);return mode;}return"public";};if(opts.dataset){loadEnv.debug("User has specified dataset through a flag (%s)",opts.dataset);const existing=datasets.find(ds=>ds.name===opts.dataset);if(!existing){loadEnv.debug("Specified dataset not found, creating it");const aclMode=await getAclMode();const spinner=context.output.spinner("Creating dataset").start();await client.datasets.create(opts.dataset,{aclMode});spinner.succeed();}return{datasetName:opts.dataset};}const datasetInfo='Your content will be stored in a dataset that can be public or private, depending on\nwhether you want to query your content with or without authentication.\nThe default dataset configuration has a public dataset named "production".';if(datasets.length===0){loadEnv.debug("No datasets found for project, prompting for name");if(showDefaultConfigPrompt){output.print(datasetInfo);defaultConfig=await promptForDefaultConfig(prompt);}const name=defaultConfig?"production":await promptForDatasetName(prompt,{message:"Name of your first dataset:"});const aclMode=await getAclMode();const spinner=context.output.spinner("Creating dataset").start();await client.datasets.create(name,{aclMode});spinner.succeed();return{datasetName:name};}loadEnv.debug("User has ".concat(datasets.length," dataset(s) already, showing list of choices"));const datasetChoices=datasets.map(dataset=>({value:dataset.name}));const selected=await prompt.single({message:"Select dataset to use",type:"list",choices:[{value:"new",name:"Create new dataset"},new prompt.Separator(),...datasetChoices]});if(selected==="new"){const existingDatasetNames=datasets.map(ds=>ds.name);loadEnv.debug("User wants to create a new dataset, prompting for name");if(showDefaultConfigPrompt&&!existingDatasetNames.includes("production")){output.print(datasetInfo);defaultConfig=await promptForDefaultConfig(prompt);}const newDatasetName=defaultConfig?"production":await promptForDatasetName(prompt,{message:"Dataset name:"},existingDatasetNames);const aclMode=await getAclMode();const spinner=context.output.spinner("Creating dataset").start();await client.datasets.create(newDatasetName,{aclMode});spinner.succeed();return{datasetName:newDatasetName};}loadEnv.debug("Returning selected dataset (".concat(selected,")"));return{datasetName:selected};}async function prepareFlags(){const createProjectName=cliFlags["create-project"];if(cliFlags.dataset||cliFlags.visibility||cliFlags["dataset-default"]||unattended){showDefaultConfigPrompt=false;}if(cliFlags.project&&createProjectName){throw new Error("Both `--project` and `--create-project` specified, only a single is supported");}if(createProjectName===true){throw new Error("Please specify a project name (`--create-project <name>`)");}if(typeof createProjectName==="string"&&createProjectName.trim().length===0){throw new Error("Please specify a project name (`--create-project <name>`)");}if(unattended){loadEnv.debug("Unattended mode, validating required options");const requiredForUnattended=["dataset","output-path"];requiredForUnattended.forEach(flag=>{if(!cliFlags[flag]){throw new Error("`--".concat(flag,"` must be specified in unattended mode"));}});if(!cliFlags.project&&!createProjectName){throw new Error("`--project <id>` or `--create-project <name>` must be specified in unattended mode");}}if(createProjectName){loadEnv.debug("--create-project specified, creating a new project");const createdProject=await createProject(apiClient,{displayName:createProjectName.trim(),subscription:void 0});loadEnv.debug("Project with ID %s created",createdProject.projectId);if(cliFlags.dataset){loadEnv.debug("--dataset specified, creating dataset (%s)",cliFlags.dataset);const client=apiClient({api:{projectId:createdProject.projectId}});const spinner=context.output.spinner("Creating dataset").start();const createBody=cliFlags.visibility?{aclMode:cliFlags.visibility}:{};await client.datasets.create(cliFlags.dataset,createBody);spinner.succeed();}const newFlags={...cliFlags,project:createdProject.projectId};delete newFlags["create-project"];return newFlags;}return cliFlags;}}const authorTS="import {defineField, defineType} from 'sanity'\n\nexport default defineType({\n  name: 'author',\n  title: 'Author',\n  type: 'document',\n  fields: [\n    defineField({\n      name: 'name',\n      title: 'Name',\n      type: 'string',\n    }),\n    defineField({\n      name: 'slug',\n      title: 'Slug',\n      type: 'slug',\n      options: {\n        source: 'name',\n        maxLength: 96,\n      },\n    }),\n    defineField({\n      name: 'image',\n      title: 'Image',\n      type: 'image',\n      options: {\n        hotspot: true,\n      },\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    }),\n    defineField({\n      name: 'bio',\n      title: 'Bio',\n      type: 'array',\n      of: [\n        {\n          title: 'Block',\n          type: 'block',\n          styles: [{title: 'Normal', value: 'normal'}],\n          lists: [],\n        },\n      ],\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'name',\n      media: 'image',\n    },\n  },\n})\n";const authorJS="export const author = {\n  name: 'author',\n  title: 'Author',\n  type: 'document',\n  fields: [\n    {\n      name: 'name',\n      title: 'Name',\n      type: 'string',\n    },\n    {\n      name: 'slug',\n      title: 'Slug',\n      type: 'slug',\n      options: {\n        source: 'name',\n        maxLength: 96,\n      },\n    },\n    {\n      name: 'image',\n      title: 'Image',\n      type: 'image',\n      options: {\n        hotspot: true,\n      },\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    },\n    {\n      name: 'bio',\n      title: 'Bio',\n      type: 'array',\n      of: [\n        {\n          title: 'Block',\n          type: 'block',\n          styles: [{title: 'Normal', value: 'normal'}],\n          lists: [],\n        },\n      ],\n    },\n  ],\n  preview: {\n    select: {\n      title: 'name',\n      media: 'image',\n    },\n  },\n}\n";const blockContentTS="import {defineType, defineArrayMember} from 'sanity'\n\n/**\n * This is the schema type for block content used in the post document type\n * Importing this type into the studio configuration's `schema` property\n * lets you reuse it in other document types with:\n *  {\n *    name: 'someName',\n *    title: 'Some title',\n *    type: 'blockContent'\n *  }\n */\n\nexport default defineType({\n  title: 'Block Content',\n  name: 'blockContent',\n  type: 'array',\n  of: [\n    defineArrayMember({\n      title: 'Block',\n      type: 'block',\n      // Styles let you define what blocks can be marked up as. The default\n      // set corresponds with HTML tags, but you can set any title or value\n      // you want, and decide how you want to deal with it where you want to\n      // use your content.\n      styles: [\n        {title: 'Normal', value: 'normal'},\n        {title: 'H1', value: 'h1'},\n        {title: 'H2', value: 'h2'},\n        {title: 'H3', value: 'h3'},\n        {title: 'H4', value: 'h4'},\n        {title: 'Quote', value: 'blockquote'},\n      ],\n      lists: [{title: 'Bullet', value: 'bullet'}],\n      // Marks let you mark up inline text in the Portable Text Editor\n      marks: {\n        // Decorators usually describe a single property \u2013 e.g. a typographic\n        // preference or highlighting\n        decorators: [\n          {title: 'Strong', value: 'strong'},\n          {title: 'Emphasis', value: 'em'},\n        ],\n        // Annotations can be any object structure \u2013 e.g. a link or a footnote.\n        annotations: [\n          {\n            title: 'URL',\n            name: 'link',\n            type: 'object',\n            fields: [\n              {\n                title: 'URL',\n                name: 'href',\n                type: 'url',\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    // You can add additional types here. Note that you can't use\n    // primitive types such as 'string' and 'number' in the same array\n    // as a block type.\n    defineArrayMember({\n      type: 'image',\n      options: {hotspot: true},\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    }),\n  ],\n})\n";const blockContentJS="/**\n * This is the schema type for block content used in the post document type\n * Importing this type into the studio configuration's `schema` property\n * lets you reuse it in other document types with:\n *  {\n *    name: 'someName',\n *    title: 'Some title',\n *    type: 'blockContent'\n *  }\n */\n\nexport const blockContent = {\n  title: 'Block Content',\n  name: 'blockContent',\n  type: 'array',\n  of: [\n    {\n      title: 'Block',\n      type: 'block',\n      // Styles let you set what your user can mark up blocks with. These\n      // correspond with HTML tags, but you can set any title or value\n      // you want and decide how you want to deal with it where you want to\n      // use your content.\n      styles: [\n        {title: 'Normal', value: 'normal'},\n        {title: 'H1', value: 'h1'},\n        {title: 'H2', value: 'h2'},\n        {title: 'H3', value: 'h3'},\n        {title: 'H4', value: 'h4'},\n        {title: 'Quote', value: 'blockquote'},\n      ],\n      lists: [{title: 'Bullet', value: 'bullet'}],\n      // Marks let you mark up inline text in the block editor.\n      marks: {\n        // Decorators usually describe a single property \u2013 e.g. a typographic\n        // preference or highlighting by editors.\n        decorators: [\n          {title: 'Strong', value: 'strong'},\n          {title: 'Emphasis', value: 'em'},\n        ],\n        // Annotations can be any object structure \u2013 e.g. a link or a footnote.\n        annotations: [\n          {\n            title: 'URL',\n            name: 'link',\n            type: 'object',\n            fields: [\n              {\n                title: 'URL',\n                name: 'href',\n                type: 'url',\n              },\n            ],\n          },\n        ],\n      },\n    },\n    // You can add additional types here. Note that you can't use\n    // primitive types such as 'string' and 'number' in the same array\n    // as a block type.\n    {\n      type: 'image',\n      options: {hotspot: true},\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    },\n  ],\n}\n";const categoryTS="import {defineField, defineType} from 'sanity'\n\nexport default defineType({\n  name: 'category',\n  title: 'Category',\n  type: 'document',\n  fields: [\n    defineField({\n      name: 'title',\n      title: 'Title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'description',\n      title: 'Description',\n      type: 'text',\n    }),\n  ],\n})\n";const categoryJS="export const category = {\n  name: 'category',\n  title: 'Category',\n  type: 'document',\n  fields: [\n    {\n      name: 'title',\n      title: 'Title',\n      type: 'string',\n    },\n    {\n      name: 'description',\n      title: 'Description',\n      type: 'text',\n    },\n  ],\n}\n";const postTS="import {defineField, defineType} from 'sanity'\n\nexport default defineType({\n  name: 'post',\n  title: 'Post',\n  type: 'document',\n  fields: [\n    defineField({\n      name: 'title',\n      title: 'Title',\n      type: 'string',\n    }),\n    defineField({\n      name: 'slug',\n      title: 'Slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n        maxLength: 96,\n      },\n    }),\n    defineField({\n      name: 'author',\n      title: 'Author',\n      type: 'reference',\n      to: {type: 'author'},\n    }),\n    defineField({\n      name: 'mainImage',\n      title: 'Main image',\n      type: 'image',\n      options: {\n        hotspot: true,\n      },\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    }),\n    defineField({\n      name: 'categories',\n      title: 'Categories',\n      type: 'array',\n      of: [{type: 'reference', to: {type: 'category'}}],\n    }),\n    defineField({\n      name: 'publishedAt',\n      title: 'Published at',\n      type: 'datetime',\n    }),\n    defineField({\n      name: 'body',\n      title: 'Body',\n      type: 'blockContent',\n    }),\n  ],\n\n  preview: {\n    select: {\n      title: 'title',\n      author: 'author.name',\n      media: 'mainImage',\n    },\n    prepare(selection) {\n      const {author} = selection\n      return {...selection, subtitle: author && `by ${author}`}\n    },\n  },\n})\n";const postJS="export const post = {\n  name: 'post',\n  title: 'Post',\n  type: 'document',\n  fields: [\n    {\n      name: 'title',\n      title: 'Title',\n      type: 'string',\n    },\n    {\n      name: 'slug',\n      title: 'Slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n        maxLength: 96,\n      },\n    },\n    {\n      name: 'author',\n      title: 'Author',\n      type: 'reference',\n      to: {type: 'author'},\n    },\n    {\n      name: 'mainImage',\n      title: 'Main image',\n      type: 'image',\n      options: {\n        hotspot: true,\n      },\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    },\n    {\n      name: 'categories',\n      title: 'Categories',\n      type: 'array',\n      of: [{type: 'reference', to: {type: 'category'}}],\n    },\n    {\n      name: 'publishedAt',\n      title: 'Published at',\n      type: 'datetime',\n    },\n    {\n      name: 'body',\n      title: 'Body',\n      type: 'blockContent',\n    },\n  ],\n\n  preview: {\n    select: {\n      title: 'title',\n      author: 'author.name',\n      media: 'mainImage',\n    },\n    prepare(selection) {\n      const {author} = selection\n      return {...selection, subtitle: author && `by ${author}`}\n    },\n  },\n}\n";const blogSchemaTS="import { type SchemaTypeDefinition } from 'sanity'\n\nimport blockContent from './schemaTypes/blockContent'\nimport category from './schemaTypes/category'\nimport post from './schemaTypes/post'\nimport author from './schemaTypes/author'\n\nexport const schema: { types: SchemaTypeDefinition[] } = {\n  types: [post, author, category, blockContent],\n}\n";const blogSchemaJS="import {blockContent} from './schemaTypes/blockContent'\nimport {category} from './schemaTypes/category'\nimport {post} from './schemaTypes/post'\nimport {author} from './schemaTypes/author'\n\nexport const schema = {\n  types: [post, author, category, blockContent],\n}\n";const blogSchemaFolder=useTypeScript=>{return{"author.":useTypeScript?authorTS:authorJS,"blockContent.":useTypeScript?blockContentTS:blockContentJS,"category.":useTypeScript?categoryTS:categoryJS,"post.":useTypeScript?postTS:postJS};};const sanityConfigTemplate="/**\n * This configuration is used to for the Sanity Studio that\u2019s mounted on the `:route:` route\n */\n\nimport {visionTool} from '@sanity/vision'\nimport {defineConfig} from 'sanity'\nimport {structureTool} from 'sanity/structure'\n\n// Go to https://www.sanity.io/docs/api-versioning to learn how API versioning works\nimport {apiVersion, dataset, projectId} from './sanity/env'\nimport {schema} from './sanity/schema'\n\nexport default defineConfig({\n  basePath: ':basePath:',\n  projectId,\n  dataset,\n  // Add and edit the content schema in the './sanity/schema' folder\n  schema,\n  plugins: [\n    structureTool(),\n    // Vision is a tool that lets you query your content with GROQ in the studio\n    // https://www.sanity.io/docs/the-vision-plugin\n    visionTool({defaultApiVersion: apiVersion}),\n  ],\n})\n";const sanityCliTemplate="/**\n* This configuration file lets you run `$ sanity [command]` in this folder\n* Go to https://www.sanity.io/docs/cli to learn more.\n**/\nimport { defineCliConfig } from 'sanity/cli'\n\nconst projectId = process.env.NEXT_PUBLIC_SANITY_PROJECT_ID\nconst dataset = process.env.NEXT_PUBLIC_SANITY_DATASET\n\nexport default defineCliConfig({ api: { projectId, dataset } })\n";const sanityStudioPagesTemplate="import Head from 'next/head'\nimport { NextStudio } from 'next-sanity/studio'\nimport { metadata } from 'next-sanity/studio/metadata'\nimport config from ':configPath:'\n\nexport default function StudioPage() {\n  return (\n    <>\n      <Head>\n        {Object.entries(metadata).map(([key, value]) => (\n          <meta key={key} name={key} content={value} />\n        ))}\n      </Head>\n      <NextStudio config={config} />\n    </>\n  )\n}";const sanityStudioAppTemplate="'use client'\n\n/**\n * This route is responsible for the built-in authoring environment using Sanity Studio.\n * All routes under your studio path is handled by this file using Next.js' catch-all routes:\n * https://nextjs.org/docs/routing/dynamic-routes#catch-all-routes\n *\n * You can learn more about the next-sanity package here:\n * https://github.com/sanity-io/next-sanity\n */\n\nimport { NextStudio } from 'next-sanity/studio'\nimport config from ':configPath:'\n\nexport default function StudioPage() {\n  return <NextStudio config={config} />\n}";const envTS="export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '".concat((/* @__PURE__ */new Date()).toISOString().split("T")[0],"'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nexport const useCdn = false\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n");const envJS="export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '".concat((/* @__PURE__ */new Date()).toISOString().split("T")[0],"'\n\nexport const dataset = process.env.NEXT_PUBLIC_SANITY_DATASET;\nexport const projectId = process.env.NEXT_PUBLIC_SANITY_PROJECT_ID;\nexport const useCdn = false\n");const schemaTS="import { type SchemaTypeDefinition } from 'sanity'\n\nexport const schema: { types: SchemaTypeDefinition[] } = {\n  types: [],\n}\n";const schemaJS="export const schema = {\n  types: [],\n}\n";const client="import { createClient } from 'next-sanity'\n\nimport { apiVersion, dataset, projectId, useCdn } from '../env'\n\nexport const client = createClient({\n  apiVersion,\n  dataset,\n  projectId,\n  useCdn,\n})\n";const imageTS="import createImageUrlBuilder from '@sanity/image-url'\nimport type { Image } from 'sanity'\n\nimport { dataset, projectId } from '../env'\n\nconst imageBuilder = createImageUrlBuilder({\n  projectId: projectId || '',\n  dataset: dataset || '',\n})\n\nexport const urlForImage = (source: Image) => {\n  return imageBuilder?.image(source).auto('format').fit('max').url()\n}\n";const imageJS="import createImageUrlBuilder from '@sanity/image-url'\n\nimport { dataset, projectId } from '../env'\n\nconst imageBuilder = createImageUrlBuilder({\n  projectId: projectId || '',\n  dataset: dataset || '',\n})\n\nexport const urlForImage = (source) => {\n  return imageBuilder?.image(source).auto('format').fit('max').url()\n}\n";const sanityFolder=(useTypeScript,template)=>{const isBlogTemplate=template==="blog";const structure={// eslint-disable-next-line no-nested-ternary
"schema.":useTypeScript?isBlogTemplate?blogSchemaTS:schemaTS:isBlogTemplate?blogSchemaJS:schemaJS,"env.":useTypeScript?envTS:envJS,lib:{"client.":client,"image.":useTypeScript?imageTS:imageJS}};if(isBlogTemplate){structure.schemaTypes=blogSchemaFolder(useTypeScript);}return structure;};const isCI=process.env.CI;async function initSanity(args,context){const{output,prompt,workDir,apiClient,chalk,sanityMajorVersion,telemetry,detectedFramework}=context;const trace=telemetry.trace(CLIInitStepCompleted);const cliFlags=args.extOptions;const unattended=cliFlags.y||cliFlags.yes;const print=unattended?noop$2:output.print;const intendedPlan=cliFlags["project-plan"];const intendedCoupon=cliFlags.coupon;const reconfigure=cliFlags.reconfigure;const commitMessage=cliFlags.git;const useGit=typeof commitMessage==="undefined"?true:Boolean(commitMessage);const bareOutput=cliFlags.bare;const env=cliFlags.env;let defaultConfig=cliFlags["dataset-default"];let showDefaultConfigPrompt=!defaultConfig;trace.start();trace.log({step:"start",flags:{defaultConfig,unattended,plan:intendedPlan,coupon:intendedCoupon,reconfigure,git:commitMessage,bare:bareOutput,env}});if(sanityMajorVersion===2){await reconfigureV2Project(args,context);return;}if(intendedCoupon&&intendedPlan){throw new Error("Error! --project-plan and --coupon cannot be used together; please select only one flag");}if(intendedCoupon&&cliFlags.project){throw new Error("Error! --project and --coupon cannot be used together; coupons can only be applied to new projects");}let selectedPlan;if(intendedCoupon){try{selectedPlan=await getPlanFromCoupon(apiClient,intendedCoupon);print("Coupon \"".concat(intendedCoupon,"\" validated!\n"));}catch(err){if(err.statusCode=="404"){const useDefaultPlan=unattended!==null&&unattended!==void 0?unattended:await prompt.single({type:"confirm",message:"Coupon \"".concat(intendedCoupon,"\" is not available, use default plan instead?"),default:true});if(unattended){output.warn("Coupon \"".concat(intendedCoupon,"\" is not available - using default plan"));}trace.log({step:"useDefaultPlanCoupon",selectedOption:useDefaultPlan?"yes":"no",coupon:intendedCoupon});if(useDefaultPlan){print("Using default plan.");}else{throw new Error("Coupon \"".concat(intendedCoupon,"\" does not exist"));}}else{throw new Error("Unable to validate coupon, please try again later:\n\n".concat(err.message));}}}else if(intendedPlan){try{selectedPlan=await getPlanFromId(apiClient,intendedPlan);}catch(err){if(err.statusCode=="404"){const useDefaultPlan=unattended!==null&&unattended!==void 0?unattended:await prompt.single({type:"confirm",message:"Project plan \"".concat(intendedPlan,"\" does not exist, use default plan instead?"),default:true});if(unattended){output.warn("Project plan \"".concat(intendedPlan,"\" does not exist - using default plan"));}trace.log({step:"useDefaultPlanId",selectedOption:useDefaultPlan?"yes":"no",planId:intendedPlan});if(useDefaultPlan){print("Using default plan.");}else{throw new Error("Plan id \"".concat(intendedPlan,"\" does not exist"));}}else{throw new Error("Unable to validate plan, please try again later:\n\n".concat(err.message));}}}if(reconfigure){throw new Error("`--reconfigure` is deprecated - manual configuration is now required");}const envFilename=typeof env==="string"?env:".env";if(!envFilename.startsWith(".env")){throw new Error("Env filename must start with .env");}const usingBareOrEnv=cliFlags.bare||cliFlags.env;print("You're setting up a new project!");print("We'll make sure you have an account with Sanity.io. ".concat(usingBareOrEnv?"":"Then we'll"));if(!usingBareOrEnv){print("install an open-source JS content editor that connects to");print("the real-time hosted API on Sanity.io. Hang on.\n");}print("Press ctrl + C at any time to quit.\n");print("Prefer web interfaces to terminals?");print("You can also set up best practice Sanity projects with");print("your favorite frontends on https://www.sanity.io/templates\n");const userConfig=getUserConfig();const hasToken=userConfig.get("authToken");loadEnv.debug(hasToken?"User already has a token":"User has no token");if(hasToken){trace.log({step:"login",alreadyLoggedIn:true});print("Looks like you already have a Sanity-account. Sweet!\n");}else if(!unattended){trace.log({step:"login"});await getOrCreateUser();}const flags=await prepareFlags();loadEnv.debug("Prompting user to select or create a project");const{projectId,displayName,isFirstProject,userAction:getOrCreateUserAction}=await getOrCreateProject();trace.log({step:"createOrSelectProject",projectId,selectedOption:getOrCreateUserAction});const sluggedName=deburr$1(displayName.toLowerCase()).replace(/\s+/g,"-").replace(/[^a-z0-9-]/g,"");loadEnv.debug("Project with name ".concat(displayName," selected"));loadEnv.debug("Prompting user to select or create a dataset");const{datasetName,userAction:getOrCreateDatasetUserAction}=await getOrCreateDataset({projectId,displayName,dataset:flags.dataset,aclMode:flags.visibility,defaultConfig:flags["dataset-default"]});trace.log({step:"createOrSelectDataset",selectedOption:getOrCreateDatasetUserAction,datasetName,visibility:flags.visibility});loadEnv.debug("Dataset with name ".concat(datasetName," selected"));if(bareOutput){print("\n".concat(chalk.green("Success!")," Below are your project details:\n"));print("Project ID: ".concat(chalk.cyan(projectId)));print("Dataset: ".concat(chalk.cyan(datasetName)));print("\nYou can find your project on Sanity Manage \u2014 https://www.sanity.io/manage/project/".concat(projectId,"\n"));return;}let initNext=false;if((detectedFramework===null||detectedFramework===void 0?void 0:detectedFramework.slug)==="nextjs"){initNext=await prompt.single({type:"confirm",message:"Would you like to add configuration files for a Sanity project in this Next.js folder?",default:true});trace.log({step:"useDetectedFramework",selectedOption:initNext?"yes":"no",detectedFramework:detectedFramework===null||detectedFramework===void 0?void 0:detectedFramework.name});}const initFramework=initNext;let outputPath=workDir;const defaults=await getProjectDefaults(workDir,{isPlugin:false,context});const answers=await getProjectInfo();outputPath=answers.outputPath;if(initNext){const useTypeScript2=unattended?true:await promptForTypeScript(prompt);trace.log({step:"useTypeScript",selectedOption:useTypeScript2?"yes":"no"});const fileExtension=useTypeScript2?"ts":"js";const embeddedStudio=unattended?true:await promptForEmbeddedStudio(prompt);if(embeddedStudio){const useAppDir=unattended?false:await promptForAppDir(prompt);const srcDir=useAppDir?"app":"pages";let srcPath=path__default.default.join(workDir,srcDir);if(!require$$0$4.existsSync(srcPath)){srcPath=path__default.default.join(workDir,"src",srcDir);if(!require$$0$4.existsSync(srcPath)){await fs__default.default.mkdir(srcPath,{recursive:true}).catch(()=>loadEnv.debug("Error creating folder %s",srcPath));}}const studioPath=unattended?"/studio":await promptForStudioPath(prompt);const embeddedStudioRouteFilePath=path__default.default.join(srcPath,"".concat(studioPath,"/"),useAppDir?"[[...index]]/page.".concat(fileExtension,"x"):"[[...index]].".concat(fileExtension,"x"));await writeOrOverwrite(embeddedStudioRouteFilePath,(useAppDir?sanityStudioAppTemplate:sanityStudioPagesTemplate).replace(":configPath:",new Array(countNestedFolders(embeddedStudioRouteFilePath.slice(workDir.length))).join("../").concat("sanity.config")));const sanityConfigPath=path__default.default.join(workDir,"sanity.config.".concat(fileExtension));await writeOrOverwrite(sanityConfigPath,sanityConfigTemplate.replace(":route:",embeddedStudioRouteFilePath.slice(workDir.length).replace("src/","")).replace(":basePath:",studioPath));}const sanityCliPath=path__default.default.join(workDir,"sanity.cli.".concat(fileExtension));await writeOrOverwrite(sanityCliPath,sanityCliTemplate);const writeSourceFiles=async(files,folderPath)=>{for(const[filePath,content]of Object.entries(files)){if(filePath.includes(".")&&typeof content==="string"){await writeOrOverwrite(path__default.default.join(workDir,"sanity",folderPath||"","".concat(filePath).concat(fileExtension)),content);}else{await fs__default.default.mkdir(path__default.default.join(workDir,"sanity",filePath),{recursive:true});if(typeof content==="object"){await writeSourceFiles(content,filePath);}}}};const templateToUse=unattended?"clean":await promptForNextTemplate(prompt);await writeSourceFiles(sanityFolder(useTypeScript2,templateToUse));const tsConfigPath=path__default.default.join(workDir,"tsconfig.json");if(useTypeScript2&&require$$0$4.existsSync(tsConfigPath)){var _config$compilerOptio;const tsConfigFile=require$$0$4.readFileSync(tsConfigPath,"utf8");const config=goldenFleece.evaluate(tsConfigFile);if(((_config$compilerOptio=config.compilerOptions.target)===null||_config$compilerOptio===void 0?void 0:_config$compilerOptio.toLowerCase())!=="es2017"){config.compilerOptions.target="ES2017";const newConfig=goldenFleece.patch(tsConfigFile,config);await fs__default.default.writeFile(tsConfigPath,Buffer.from(newConfig));}}const appendEnv=unattended?true:await promptForAppendEnv(prompt,envFilename);if(appendEnv){await createOrAppendEnvVars(envFilename,detectedFramework,{log:true});}const{chosen}=await getPackageManagerChoice(workDir,{interactive:false});trace.log({step:"selectPackageManager",selectedOption:chosen});await installNewPackages({packageManager:chosen,packages:["@sanity/vision@3","sanity@3","@sanity/image-url@1","styled-components@6"]},{output:context.output,workDir});const execOptions={encoding:"utf8",env:getPartialEnvWithNpmPath(workDir),cwd:workDir,stdio:"inherit"};if(chosen==="npm"){await execa$1("npm",["install","next-sanity@7"],execOptions);}else if(chosen==="yarn"){await execa$1("npx",["install-peerdeps","--yarn","next-sanity@7"],execOptions);}else if(chosen==="pnpm"){await execa$1("pnpm",["install","next-sanity@7"],execOptions);}print("\n".concat(chalk.green("Success!")," Your Sanity configuration files has been added to this project"));process.exit(0);return;}function countNestedFolders(path2){const separator=path2.includes("\\")?"\\":"/";return path2.split(separator).filter(Boolean).length;}async function writeOrOverwrite(filePath,content){if(require$$0$4.existsSync(filePath)){const overwrite=await prompt.single({type:"confirm",message:"File ".concat(chalk.yellow(filePath.replace(workDir,""))," already exists. Do you want to overwrite it?"),default:false});if(!overwrite){return;}}const folderPath=path__default.default.dirname(filePath);await fs__default.default.mkdir(folderPath,{recursive:true}).catch(()=>loadEnv.debug("Error creating folder %s",folderPath));await fs__default.default.writeFile(filePath,content,{encoding:"utf8"});}if(env){await createOrAppendEnvVars(envFilename,detectedFramework);return;}const templateName=await selectProjectTemplate();trace.log({step:"selectProjectTemplate",selectedOption:templateName});const template=templates[templateName];if(!template){throw new Error("Template \"".concat(templateName,"\" not found"));}const typescriptOnly=template.typescriptOnly===true;let useTypeScript=true;if(!typescriptOnly&&typeof cliFlags.typescript==="boolean"){useTypeScript=cliFlags.typescript;}else if(!typescriptOnly&&!unattended){useTypeScript=await promptForTypeScript(prompt);trace.log({step:"useTypeScript",selectedOption:useTypeScript?"yes":"no"});}const templateOptions={outputPath,packageName:sluggedName,templateName,useTypeScript,variables:{dataset:datasetName,projectId,projectName:displayName||answers.projectName}};const shouldImport=!unattended&&template.datasetUrl&&(await promptForDatasetImport(template.importPrompt));trace.log({step:"importTemplateDataset",selectedOption:shouldImport?"yes":"no"});await bootstrapTemplate(templateOptions,context);const pkgManager=await getPackageManagerChoice(outputPath,{prompt,interactive:unattended?false:isInteractive$2});trace.log({step:"selectPackageManager",selectedOption:pkgManager.chosen});await installDeclaredPackages(outputPath,pkgManager.chosen,context);if(useGit){tryGitInit(outputPath,typeof commitMessage==="string"?commitMessage:void 0);}if(shouldImport){const importCommand=getImportCommand(outputPath,3);await doDatasetImport({projectId,outputPath,importCommand,template,datasetName,context});if(await hasGlobalCli()){print("");print("If you want to delete the imported data, use");print("  ".concat(chalk.cyan("sanity dataset delete ".concat(datasetName))));print("and create a new clean dataset with");print("  ".concat(chalk.cyan("sanity dataset create <name>"),"\n"));}}const devCommandMap={yarn:"yarn dev",npm:"npm run dev",pnpm:"pnpm dev",bun:"bun dev",manual:"npm run dev"};const devCommand=devCommandMap[pkgManager.chosen];const isCurrentDir=outputPath===process.cwd();if(isCurrentDir){print("\n".concat(chalk.green("Success!")," Now, use this command to continue:\n"));print("".concat(chalk.cyan(devCommand)," - to run Sanity Studio\n"));}else{print("\n".concat(chalk.green("Success!")," Now, use these commands to continue:\n"));print("First: ".concat(chalk.cyan("cd ".concat(outputPath))," - to enter project\u2019s directory"));print("Then: ".concat(chalk.cyan(devCommand)," - to run Sanity Studio\n"));}if(await hasGlobalCli()){print("Other helpful commands");print("sanity docs - to open the documentation in a browser");print("sanity manage - to open the project settings in a browser");print("sanity help - to explore the CLI manual");}const sendInvite=isFirstProject&&(await prompt.single({type:"confirm",message:"We have an excellent developer community, would you like us to send you an invitation to join?",default:true}));if(sendInvite){trace.log({step:"sendCommunityInvite",selectedOption:sendInvite?"yes":"no"});apiClient({requireProject:false}).request({uri:"/invitations/community",method:"POST"}).catch(noop$2);}trace.complete();async function getOrCreateUser(){print("We can't find any auth credentials in your Sanity config");print("- log in or create a new account\n");const{extOptions,...otherArgs}=args;const loginArgs={...otherArgs,extOptions:{}};await login(loginArgs,{...context,telemetry:trace.newContext("login")});print("Good stuff, you're now authenticated. You'll need a project to keep your");print("datasets and collaborators safe and snug.");}async function getOrCreateProject(){var _projects$find2;const spinner=context.output.spinner("Fetching existing projects").start();let projects;let organizations;try{const client=apiClient({requireUser:true,requireProject:false});const[allProjects,allOrgs]=await Promise.all([client.projects.list({includeMembers:false}),client.request({uri:"/organizations"})]);projects=allProjects.sort((a,b)=>b.createdAt.localeCompare(a.createdAt));organizations=allOrgs;spinner.succeed();}catch(err){if(unattended&&flags.project){spinner.succeed();return{projectId:flags.project,displayName:"Unknown project",isFirstProject:false,userAction:"select"};}spinner.fail();throw new Error("Failed to communicate with the Sanity API:\n".concat(err.message));}if(projects.length===0&&unattended){throw new Error("No projects found for current user");}if(flags.project){const project=projects.find(proj=>proj.id===flags.project);if(!project&&!unattended){throw new Error("Given project ID (".concat(flags.project,") not found, or you do not have access to it"));}return{projectId:flags.project,displayName:project?project.displayName:"Unknown project",isFirstProject:false,userAction:"select"};}if(flags.organization){const organization=organizations.find(org=>org.id===flags.organization)||organizations.find(org=>org.slug===flags.organization);if(!organization){throw new Error("Given organization ID (".concat(flags.organization,") not found, or you do not have access to it"));}if(!(await hasProjectAttachGrant(flags.organization))){throw new Error("You lack the necessary permissions to attach a project to this organization");}}const isUsersFirstProject=projects.length===0;if(isUsersFirstProject||intendedCoupon){loadEnv.debug(isUsersFirstProject?"No projects found for user, prompting for name":"Using a coupon - skipping project selection");const projectName=await prompt.single({type:"input",message:"Project name:"});return createProject(apiClient,{displayName:projectName,organizationId:await getOrganizationId(organizations),subscription:selectedPlan?{planId:selectedPlan}:void 0,metadata:{coupon:intendedCoupon}}).then(response=>({...response,isFirstProject:isUsersFirstProject,userAction:"create",coupon:intendedCoupon}));}loadEnv.debug("User has ".concat(projects.length," project(s) already, showing list of choices"));const projectChoices=projects.map(project=>({value:project.id,name:"".concat(project.displayName," [").concat(project.id,"]")}));const selected=await prompt.single({message:"Select project to use",type:"list",choices:[{value:"new",name:"Create new project"},new prompt.Separator(),...projectChoices]});if(selected==="new"){loadEnv.debug("User wants to create a new project, prompting for name");return createProject(apiClient,{displayName:await prompt.single({type:"input",message:"Your project name:",default:"My Sanity Project"}),organizationId:await getOrganizationId(organizations),subscription:selectedPlan?{planId:selectedPlan}:void 0,metadata:{coupon:intendedCoupon}}).then(response=>({...response,isFirstProject:isUsersFirstProject,userAction:"create"}));}loadEnv.debug("Returning selected project (".concat(selected,")"));return{projectId:selected,displayName:((_projects$find2=projects.find(proj=>proj.id===selected))===null||_projects$find2===void 0?void 0:_projects$find2.displayName)||"",isFirstProject:isUsersFirstProject,userAction:"select"};}async function getOrCreateDataset(opts){if(opts.dataset&&(isCI||unattended)){return{datasetName:opts.dataset,userAction:"none"};}const client=apiClient({api:{projectId:opts.projectId}});const[datasets,projectFeatures]=await Promise.all([client.datasets.list(),client.request({uri:"/features"})]);const privateDatasetsAllowed=projectFeatures.includes("privateDataset");const allowedModes=privateDatasetsAllowed?["public","private"]:["public"];if(opts.aclMode&&!allowedModes.includes(opts.aclMode)){throw new Error("Visibility mode \"".concat(opts.aclMode,"\" not allowed"));}const getAclMode=async()=>{if(opts.aclMode){return opts.aclMode;}if(unattended||!privateDatasetsAllowed||defaultConfig){return"public";}if(privateDatasetsAllowed){const mode=await promptForAclMode(prompt,output);return mode;}return"public";};if(opts.dataset){loadEnv.debug("User has specified dataset through a flag (%s)",opts.dataset);const existing=datasets.find(ds=>ds.name===opts.dataset);if(!existing){loadEnv.debug("Specified dataset not found, creating it");const aclMode=await getAclMode();const spinner=context.output.spinner("Creating dataset").start();await client.datasets.create(opts.dataset,{aclMode});spinner.succeed();}return{datasetName:opts.dataset,userAction:"none"};}const datasetInfo='Your content will be stored in a dataset that can be public or private, depending on\nwhether you want to query your content with or without authentication.\nThe default dataset configuration has a public dataset named "production".';if(datasets.length===0){loadEnv.debug("No datasets found for project, prompting for name");if(showDefaultConfigPrompt){output.print(datasetInfo);defaultConfig=await promptForDefaultConfig(prompt);}const name=defaultConfig?"production":await promptForDatasetName(prompt,{message:"Name of your first dataset:"});const aclMode=await getAclMode();const spinner=context.output.spinner("Creating dataset").start();await client.datasets.create(name,{aclMode});spinner.succeed();return{datasetName:name,userAction:"create"};}loadEnv.debug("User has ".concat(datasets.length," dataset(s) already, showing list of choices"));const datasetChoices=datasets.map(dataset=>({value:dataset.name}));const selected=await prompt.single({message:"Select dataset to use",type:"list",choices:[{value:"new",name:"Create new dataset"},new prompt.Separator(),...datasetChoices]});if(selected==="new"){const existingDatasetNames=datasets.map(ds=>ds.name);loadEnv.debug("User wants to create a new dataset, prompting for name");if(showDefaultConfigPrompt&&!existingDatasetNames.includes("production")){output.print(datasetInfo);defaultConfig=await promptForDefaultConfig(prompt);}const newDatasetName=defaultConfig?"production":await promptForDatasetName(prompt,{message:"Dataset name:"},existingDatasetNames);const aclMode=await getAclMode();const spinner=context.output.spinner("Creating dataset").start();await client.datasets.create(newDatasetName,{aclMode});spinner.succeed();return{datasetName:newDatasetName,userAction:"create"};}loadEnv.debug("Returning selected dataset (".concat(selected,")"));return{datasetName:selected,userAction:"select"};}function promptForDatasetImport(message){return prompt.single({type:"confirm",message:message||"This template includes a sample dataset, would you like to use it?",default:true});}function selectProjectTemplate(){const defaultTemplate=unattended||flags.template?flags.template||"clean":null;if(defaultTemplate){return defaultTemplate;}return prompt.single({message:"Select project template",type:"list",choices:[{value:"moviedb",name:"Movie project (schema + sample data)"},{value:"shopify",name:"E-commerce (Shopify)"},{value:"blog",name:"Blog (schema)"},{value:"clean",name:"Clean project with no predefined schema types"}]});}async function getProjectInfo(){const specifiedPath=flags["output-path"]&&path__default.default.resolve(flags["output-path"]);if(unattended||specifiedPath||env||initFramework){return{...defaults,outputPath:specifiedPath||workDir};}const workDirIsEmpty=(await fs__default.default.readdir(workDir)).length===0;const projectOutputPath=await prompt.single({type:"input",message:"Project output path:",default:workDirIsEmpty?workDir:path__default.default.join(workDir,sluggedName),validate:validateEmptyPath,filter:absolutify});return{...defaults,outputPath:projectOutputPath};}async function prepareFlags(){const createProjectName=cliFlags["create-project"];if(cliFlags.dataset||cliFlags.visibility||cliFlags["dataset-default"]||unattended){showDefaultConfigPrompt=false;}if(cliFlags.project&&createProjectName){throw new Error("Both `--project` and `--create-project` specified, only a single is supported");}if(cliFlags.project&&cliFlags.organization){throw new Error("You have specified both a project and an organization. To move a project to an organization please visit https://www.sanity.io/manage");}if(createProjectName===true){throw new Error("Please specify a project name (`--create-project <name>`)");}if(typeof createProjectName==="string"&&createProjectName.trim().length===0){throw new Error("Please specify a project name (`--create-project <name>`)");}if(unattended){loadEnv.debug("Unattended mode, validating required options");const requiredForUnattended=["dataset","output-path"];requiredForUnattended.forEach(flag=>{if(!cliFlags[flag]){throw new Error("`--".concat(flag,"` must be specified in unattended mode"));}});if(!cliFlags.project&&!createProjectName){throw new Error("`--project <id>` or `--create-project <name>` must be specified in unattended mode");}}if(createProjectName){loadEnv.debug("--create-project specified, creating a new project");const createdProject=await createProject(apiClient,{displayName:createProjectName.trim(),organizationId:cliFlags.organization||void 0,subscription:selectedPlan?{planId:selectedPlan}:void 0,metadata:{coupon:intendedCoupon}});loadEnv.debug("Project with ID %s created",createdProject.projectId);if(cliFlags.dataset){loadEnv.debug("--dataset specified, creating dataset (%s)",cliFlags.dataset);const client=apiClient({api:{projectId:createdProject.projectId}});const spinner=context.output.spinner("Creating dataset").start();const createBody=cliFlags.visibility?{aclMode:cliFlags.visibility}:{};await client.datasets.create(cliFlags.dataset,createBody);spinner.succeed();}const newFlags={...cliFlags,project:createdProject.projectId};delete newFlags["create-project"];return newFlags;}return cliFlags;}async function getOrganizationId(organizations){let organizationId=flags.organization;if(unattended){return organizationId||void 0;}const shouldPrompt=organizations.length>0&&!organizationId;if(shouldPrompt){loadEnv.debug("User has ".concat(organizations.length," organization(s), checking attach access"));const withGrant=await getOrganizationsWithAttachGrant(organizations);if(withGrant.length===0){loadEnv.debug("User lacks project attach grant in all organizations, not prompting");return void 0;}loadEnv.debug("User has attach access to %d organizations, prompting.",withGrant.length);const organizationChoices=[{value:"none",name:"None"},new prompt.Separator(),...withGrant.map(organization=>({value:organization.id,name:"".concat(organization.name," [").concat(organization.id,"]")}))];const chosenOrg=await prompt.single({message:"Select organization to attach project to",type:"list",choices:organizationChoices});if(chosenOrg&&chosenOrg!=="none"){organizationId=chosenOrg;}}else if(organizationId){loadEnv.debug("User has defined organization flag explicitly (%s)",organizationId);}else if(organizations.length===0){loadEnv.debug("User has no organizations, skipping selection prompt");}return organizationId||void 0;}async function hasProjectAttachGrant(organizationId){const requiredGrantGroup="sanity.organization.projects";const requiredGrant="attach";const client=apiClient({requireProject:false,requireUser:true}).clone().config({apiVersion:"v2021-06-07"});const grants=await client.request({uri:"organizations/".concat(organizationId,"/grants")});const group=grants[requiredGrantGroup]||[];return group.some(resource=>resource.grants&&resource.grants.some(grant=>grant.name===requiredGrant));}function getOrganizationsWithAttachGrant(organizations){return pFilter$1(organizations,org=>hasProjectAttachGrant(org.id),{concurrency:3});}async function createOrAppendEnvVars(filename,framework,options){const envVars={PROJECT_ID:projectId,DATASET:datasetName};try{if(framework&&framework.envPrefix&&!(options!==null&&options!==void 0&&options.log)){print("\nDetected framework ".concat(chalk.blue(framework===null||framework===void 0?void 0:framework.name),", using prefix '").concat(framework.envPrefix,"'"));}await writeEnvVarsToFile(filename,envVars,{framework,outputPath,log:options===null||options===void 0?void 0:options.log});}catch(err){print(err);throw new Error("An error occurred while creating .env",{cause:err});}}async function writeEnvVarsToFile(filename,envVars,options){var _options$framework;const envPrefix=((_options$framework=options.framework)===null||_options$framework===void 0?void 0:_options$framework.envPrefix)||"";const keyPrefix=envPrefix.includes("SANITY")?envPrefix:"".concat(envPrefix,"SANITY_");const fileOutputPath=path__default.default.join(options.outputPath,filename);for(const key of Object.keys(envVars)){envVars["".concat(keyPrefix).concat(key)]=envVars[key];delete envVars[key];}await fs__default.default.mkdir(options.outputPath,{recursive:true}).catch(()=>loadEnv.debug("Error creating folder %s",options.outputPath));const existingEnv=await fs__default.default.readFile(fileOutputPath,{encoding:"utf8"}).catch(err=>err.code==="ENOENT"?"":Promise.reject(err));const updatedEnv=parseAndUpdateEnvVars(existingEnv,envVars,{log:options.log});const warningComment=["# Warning: Do not add secrets (API keys and similar) to this file, as it source controlled!","# Use `.env.local` for any secrets, and ensure it is not added to source control"].join("\n");const shouldPrependWarning=!existingEnv.includes(warningComment);if(shouldPrependWarning){await fs__default.default.writeFile(fileOutputPath,"".concat(warningComment,"\n\n").concat(updatedEnv),{encoding:"utf8"});return;}await fs__default.default.writeFile(fileOutputPath,updatedEnv,{encoding:"utf8"});if(!options.log){print("\n".concat(chalk.green("Success!")," Environment variables written to ").concat(fileOutputPath));}}function parseAndUpdateEnvVars(fileContents,envVars,options){const existingKeys=loadEnv.dotenv.parse(fileContents);const updatedKeys={};for(const[key,value]of Object.entries(envVars)){if(!existingKeys[key]){updatedKeys[key]=value;if(!(options!==null&&options!==void 0&&options.log)){print("Appended ".concat(key,"=\"").concat(envVars[key],"\""));}continue;}if(!(options!==null&&options!==void 0&&options.log)){print("Found existing ".concat(key,", replacing value."));}updatedKeys[key]=value;}let updatedEnv=fileContents;for(const[key,value]of Object.entries(updatedKeys)){if(existingKeys[key]){const existingValue=existingKeys[key];updatedEnv=updatedEnv.split("\n").map(line=>{if(!line.trim().startsWith("#")&&// ignore comments
new RegExp("(^\\s*".concat(key,")((: )|( *=))")).test(line)){return line.replace(existingValue,value);}return line;}).join("\n");}else{updatedEnv=updatedEnv.trim().concat("\n".concat(key,"=\"").concat(value,"\""));}}return updatedEnv.concat(fileContents===""?"\n":"");}}function doDatasetImport(options){const{outputPath,importCommand,template,datasetName,projectId,context}=options;if(!template.datasetUrl){return Promise.resolve(void 0);}if(!importCommand){throw new Error("Failed to find `sanity dataset import` command");}const commandArgs={argv:[template.datasetUrl,datasetName],argsWithoutOptions:[template.datasetUrl,datasetName],extOptions:{},groupOrCommand:"import",extraArguments:[]};const configPath=context.cliConfigPath||path__default.default.join(outputPath,"sanity.cli.js");const apiClient=getClientWrapper({projectId,dataset:datasetName},configPath);const commandContext={...context,apiClient,workDir:outputPath,fromInitCommand:true};return importCommand.action(commandArgs,commandContext);}async function getPlanFromCoupon(apiClient,couponCode){const response=await apiClient({requireUser:false,requireProject:false}).request({method:"GET",uri:"plans/coupon/".concat(couponCode)});const planId=response[0].id;if(!planId){throw new Error("Unable to find a plan from coupon code");}return planId;}async function getPlanFromId(apiClient,planId){const response=await apiClient({requireUser:false,requireProject:false}).request({method:"GET",uri:"plans/".concat(planId)});const id=response[0].id;if(!id){throw new Error("Unable to find a plan with id ".concat(planId));}return id;}function getImportCommand(outputPath,studioVersion){if(studioVersion===3){const pkgPath2=resolveFrom$1.silent(outputPath,"sanity/_internal");if(!pkgPath2){throw new Error("Failed to resolve `sanity` module - problem with dependency installation?");}loadEnv.debug("`sanity` module path resolved to %s (from %s)",pkgPath2,outputPath);const cliInternals=getCliConfig.dynamicRequire(pkgPath2);if(!("cliProjectCommands"in cliInternals)){throw new Error("Incorrect version of the `sanity` module installed");}return cliInternals.cliProjectCommands.commands.find(cmd=>!isCommandGroup(cmd)&&cmd.name==="import"&&cmd.group==="dataset");}const pkgPath=resolveFrom$1.silent(outputPath,"@sanity/core");if(!pkgPath){throw new Error("Failed to resolve `@sanity/core` module - problem with dependency installation?");}loadEnv.debug("`@sanity/core` module path resolved to %s (from %s)",pkgPath,outputPath);const coreModule=getCliConfig.dynamicRequire(pkgPath);const coreCommands=coreModule&&coreModule.commands;if(!coreCommands||!Array.isArray(coreCommands)){throw new Error("Incorrect version of the `@sanity/core` module installed");}return coreCommands.find(cmd=>!isCommandGroup(cmd)&&cmd.name==="import"&&cmd.group==="dataset");}async function hasGlobalCli(){try{const globalCliPath=await which$2("sanity");return Boolean(globalCliPath);}catch(err){return false;}}const helpText$7="\nOptions\n  -y, --yes Use unattended mode, accepting defaults and using only flags for choices\n  --project <projectId> Project ID to use for the studio\n  --organization <organizationId> Organization ID to use for the project\n  --dataset <dataset> Dataset name for the studio\n  --dataset-default Set up a project with a public dataset named \"production\"\n  --output-path <path> Path to write studio project to\n  --template <template> Project template to use [default: \"clean\"]\n  --bare Skip the Studio initialization and only print the selected project ID and dataset name to stdout\n  --env <filename> Write environment variables to file [default: \".env\"]\n  --provider <provider> Login provider to use\n  --visibility <mode> Visibility mode for dataset (public/private)\n  --create-project <name> Create a new project with the given name\n  --project-plan <name> Optionally select a plan for a new project\n  --coupon <name> Optionally select a coupon for a new project (cannot be used with --project-plan)\n  --no-typescript Do not use TypeScript for template files\n\nExamples\n  # Initialize a new project, prompt for required information along the way\n  sanity init\n\n  # Initialize a new project with a public dataset named \"production\"\n  sanity init --dataset-default\n\n  # Initialize a project with the given project ID and dataset to the given path\n  sanity init -y --project abc123 --dataset production --output-path ~/myproj\n\n  # Initialize a project with the given project ID and dataset using the moviedb\n  # template to the given path\n  sanity init -y --project abc123 --dataset staging --template moviedb --output-path .\n\n  # Create a brand new project with name \"Movies Unlimited\"\n  sanity init -y \\\n    --create-project \"Movies Unlimited\" \\\n    --dataset moviedb \\\n    --visibility private \\\n    --template moviedb \\\n    --output-path /Users/espenh/movies-unlimited\n";const initCommand={name:"init",signature:"",description:"Initializes a new Sanity Studio and/or project",helpText:helpText$7,action:async(args,context)=>{const{output,chalk,prompt}=context;const[type]=args.argsWithoutOptions;const unattended=args.extOptions.y||args.extOptions.yes;const warn=msg=>output.warn(chalk.yellow.bgBlack(msg));if(type==="plugin"){return context.sanityMajorVersion===2?// don't bother with telemetry here, as it's not supported in v3
initPlugin(args,context):Promise.reject(new Error("'sanity init plugin' is not available in modern studios"));}if(type){return Promise.reject(new Error("Unknown init type \"".concat(type,"\"")));}const detectedFramework=await distExports.detectFrameworkRecord({fs:new distExports.LocalFileSystemDetector(process.cwd()),frameworkList:frameworks.frameworks});if(args.argv.includes("--from-create")||args.argv.includes("--env")||args.argv.includes("--bare")||(detectedFramework===null||detectedFramework===void 0?void 0:detectedFramework.slug)==="nextjs"){return initSanity(args,{...context,detectedFramework});}warn("\u256D\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256E");warn("\u2502                                                            \u2502");warn("\u2502  Welcome to Sanity! It looks like you're following         \u2502");warn("\u2502  instructions for Sanity Studio v2, but the version you    \u2502");warn("\u2502  have installed is the latest - Sanity Studio v3.          \u2502");warn("\u2502                                                            \u2502");warn("\u2502  In Sanity Studio v3, new projects are created by running  \u2502");warn("\u2502  [npm create sanity@latest]. For more information, see     \u2502");warn("\u2502   https://www.sanity.io/help/studio-v2-vs-v3               \u2502");warn("\u2502                                                            \u2502");warn("\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256F");warn("");const continueV3Init=unattended?true:await prompt.single({message:"Continue creating a Sanity Studio v3 project?",type:"confirm"});if(!continueV3Init){process.exit(1);}const returnVal=await initSanity(args,{...context,detectedFramework}).catch(err=>{return Promise.reject(err);});warn("\u256D\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256E");warn("\u2502                                                            \u2502");warn("\u2502  To learn how commands have changed from Studio v2 to v3,  \u2502");warn("\u2502  see https://www.sanity.io/help/studio-v2-vs-v3            \u2502");warn("\u2502                                                            \u2502");warn("\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256F");warn("");return returnVal;}};const installCommand={name:"install",signature:"",helpText:"",description:"Installs dependencies for Sanity Studio project",action:async(args,context)=>{const{workDir,prompt,sanityMajorVersion}=context;const packages=args.argsWithoutOptions;if(packages.length>0&&sanityMajorVersion===2){throw new Error("Re-run this command with `@sanity/core` installed");}const pkgManager=await getPackageManagerChoice(workDir,{prompt});if(packages.length>0){await installNewPackages({packageManager:pkgManager.chosen,packages:args.argsWithoutOptions},context);}else{await installDeclaredPackages(workDir,pkgManager.chosen,context);}}};const helpText$6="\nOptions\n  --sso <slug> Log in using Single Sign On, using the given slug\n  --provider <providerId> Authenticate against a specific provider\n  --no-open Do not open a browser window to log in, only print URL\n\nExamples\n  # Log in using default settings\n  sanity login\n\n  # Log in using Single Sign-On with the \"my-organization\" slug\n  sanity login --sso my-organization\n\n  # Login with GitHub provider, but do not open a browser window automatically\n  sanity login --provider github --no-open\n";const loginCommand={name:"login",signature:"[--sso <slug>] [--provider <providerId>] [--no-open]",helpText:helpText$6,description:"Authenticates the CLI for access to Sanity projects",action:login};const helpText$5="\nExamples\n  # Log out of the CLI\n  sanity logout\n";const logoutCommand={name:"logout",helpText:helpText$5,signature:"logout",description:"Logs out the CLI from the current user session",async action(args,_ref124){let{output,apiClient}=_ref124;const cfg=getUserConfig();const token=cfg.get("authToken");if(!token){output.print(chalk__default.default.red("No login credentials found"));return;}const client=apiClient({requireUser:true,requireProject:false});try{await client.request({uri:"/auth/logout",method:"POST"});}catch(err){const statusCode=err&&err.response&&err.response.statusCode;if(statusCode!==401){output.error(chalk__default.default.red("Failed to communicate with the Sanity API:\n".concat(err.message)));return;}}cfg.delete("authType");cfg.delete("authToken");cfg.delete(TELEMETRY_CONSENT_CONFIG_KEY);output.print(chalk__default.default.green("Logged out"));}};const manageCommand={name:"manage",signature:"manage",helpText:"",description:"Opens project management interface in your web browser",async action(args,context){var _cliConfig$api2;const{output,cliConfig}=context;const{print}=output;const projectId=cliConfig===null||cliConfig===void 0||(_cliConfig$api2=cliConfig.api)===null||_cliConfig$api2===void 0?void 0:_cliConfig$api2.projectId;const url=projectId?"https://www.sanity.io/manage/project/".concat(projectId):"https://www.sanity.io/manage/";print("Opening ".concat(url));await open$1(url);}};const headings=["id","members","name","url","created"];const helpText$4="\nOptions\n  --sort <field> Sort output by specified column\n  --order <asc/desc> Sort output ascending/descending\n\nExamples\n  # List projects\n  sanity projects list\n\n  # List projects sorted by member count, ascending\n  sanity projects list --sort=members --order=asc\n";const defaultFlags={sort:"created",order:"desc"};const listProjectsCommand={name:"list",group:"projects",signature:"",helpText:helpText$4,description:"Lists projects connected to your user",action:async(args,context)=>{const{apiClient,output,chalk}=context;const flags={...defaultFlags,...args.extOptions};const client=apiClient({requireUser:true,requireProject:false});const projects=await client.projects.list();const ordered=lodashExports.sortBy(projects.map(_ref125=>{let{displayName,id,members=[],studioHost="",createdAt}=_ref125;const studio=studioHost?"https://".concat(studioHost,".sanity.studio"):"Not deployed";return[id,members.length,displayName,studio,createdAt].map(String);}),[headings.indexOf(flags.sort)]);const rows=flags.order==="asc"?ordered:ordered.reverse();const maxWidths=rows.reduce((max,row)=>row.map((current,index)=>Math.max(lodashExports.size(current),max[index])),headings.map(str=>lodashExports.size(str)));const printRow=row=>row.map((col,i)=>"".concat(col).padEnd(maxWidths[i])).join("   ");output.print(chalk.cyan(printRow(headings)));rows.forEach(row=>output.print(printRow(row)));}};const projectGroup={name:"projects",signature:"[COMMAND]",isGroupRoot:true,description:"Lists all projects associated with your logged-in account"};const helpText$3="\nExamples\n  # Check telemetry consent status for your logged in user\n  sanity telemetry status\n";function telemetryStatusMessage(status,_ref126){let{chalk}=_ref126;switch(status){case"granted":return"Status: ".concat(chalk.green("Enabled"));case"denied":return"Status: ".concat(chalk.red("Disabled"));case"unset":return"Status: ".concat(chalk.yellow("Not set"));default:return"";}}function telemetryLearnMoreMessage(status){const url="https://www.sanity.io/telemetry";switch(status){case"granted":return"Learn more about the data being collected here:\n".concat(url);default:return"Learn more here:\n".concat(url);}}const telemetryStatusCommand={name:"status",group:"telemetry",helpText:helpText$3,signature:"",description:"Check telemetry consent status for your logged in user",action:async(_,context)=>{const{chalk,output}=context;const{status,reason}=await resolveConsent({env:process.env});switch(true){case status==="undetermined"&&reason==="unauthenticated":output.print("You need to log in first to see telemetry status.");break;case status==="undetermined"&&reason==="fetchError":output.print(chalk.yellow("Could not fetch telemetry consent status."));break;case status==="denied"&&reason==="localOverride":output.print("".concat(telemetryStatusMessage(status,context),"\n"));output.print("You've opted out of telemetry data collection.\nNo data will be collected from your machine.\n");output.print("Using ".concat(chalk.cyan("DO_NOT_TRACK")," environment variable."));break;case status==="denied":output.print("".concat(telemetryStatusMessage(status,context),"\n"));output.print("You've opted out of telemetry data collection.\nNo data will be collected from your Sanity account.");break;case status==="granted":output.print("".concat(telemetryStatusMessage(status,context),"\n"));output.print("Telemetry data on general usage and errors is collected to help us improve Sanity.");break;case status==="unset":output.print("".concat(telemetryStatusMessage(status,context),"\n"));output.print("You've not set your preference for telemetry collection.\n");output.print("Run ".concat(chalk.cyan("npx sanity telemetry enable/disable")," to opt in or out."));output.print("You can also use the ".concat(chalk.cyan("DO_NOT_TRACK")," environment variable to opt out."));break;}output.print("\n".concat(telemetryLearnMoreMessage(status)));}};const resultMessages={granted:{success:()=>"You've now enabled telemetry data collection to help us improve Sanity.",unchanged:()=>"You've already enabled telemetry data collection to help us improve Sanity.",failure:message=>{if(message){return"Failed to enable telemetry: ".concat(message);}return"Failed to enable telemetry";}},denied:{success:()=>"You've opted out of telemetry data collection.\nNo data will be collected from your Sanity account.",unchanged:_ref127=>{let{reason}=_ref127;if(reason==="localOverride"){return"You've already opted out of telemetry data collection.\nNo data is collected from your machine.\n\nUsing DO_NOT_TRACK environment variable.";}return"You've already opted out of telemetry data collection.\nNo data is collected from your Sanity account.";},failure:()=>"Failed to disable telemetry"}};function createSetTelemetryConsentAction(status){return async function setTelemetryConsentAction(_,context){const{apiClient,output}=context;const config=getUserConfig();const client=apiClient({requireUser:true,requireProject:false}).withConfig({apiVersion:"2023-12-18",useProjectHostname:false});const currentInformation=await resolveConsent({env:process.env});const isChanged=currentInformation.status!==status;if(!isChanged){loadEnv.debug('Telemetry consent is already "%s"',status);output.print("".concat(telemetryStatusMessage(status,context),"\n"));output.print(resultMessages[status].unchanged(currentInformation));}if(isChanged){loadEnv.debug('Setting telemetry consent to "%s"',status);try{const uri="/users/me/consents/telemetry/status/".concat(status);loadEnv.debug("Sending telemetry consent status to %s",uri);await client.request({method:"PUT",uri});config.delete(TELEMETRY_CONSENT_CONFIG_KEY);output.print("".concat(telemetryStatusMessage(status,context),"\n"));output.print(resultMessages[status].success());}catch(err){var _err$response;const errorMessage=resultMessages[status].failure((_err$response=err.response)===null||_err$response===void 0||(_err$response=_err$response.body)===null||_err$response===void 0?void 0:_err$response.message);if(err.statusCode===403){throw new Error(errorMessage);}else{err.message=errorMessage;throw err;}}}output.print("\n".concat(telemetryLearnMoreMessage(status)));};}const helpText$2="\nExamples\n  # Disable telemetry for your logged in user\n  sanity telemetry disable\n";const disableTelemetryCommand={name:"disable",group:"telemetry",helpText:helpText$2,signature:"",description:"Disable telemetry for your logged in user",action:createSetTelemetryConsentAction("denied")};const helpText$1="\nExamples\n  # Enable telemetry for your logged in user\n  sanity telemetry enable\n";const enableTelemetryCommand={name:"enable",group:"telemetry",helpText:helpText$1,signature:"",description:"Enable telemetry for your logged in user",action:createSetTelemetryConsentAction("granted")};const telemetryGroup={name:"telemetry",signature:"[COMMAND]",isGroupRoot:true,description:"Manages telemetry settings, opting in or out of data collection"};var boxen$1={exports:{}};var stringWidth$5={exports:{}};var ansiRegex$3=function(){let{onlyFirst=false}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const pattern=['[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)','(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'].join('|');return new RegExp(pattern,onlyFirst?undefined:'g');};const ansiRegex$2=ansiRegex$3;var stripAnsi$4=string=>typeof string==='string'?string.replace(ansiRegex$2(),''):string;var isFullwidthCodePoint$3={exports:{}};/* eslint-disable yoda */const isFullwidthCodePoint$2=codePoint=>{if(Number.isNaN(codePoint)){return false;}// Code points are derived from:
// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt
if(codePoint>=0x1100&&(codePoint<=0x115F||// Hangul Jamo
codePoint===0x2329||// LEFT-POINTING ANGLE BRACKET
codePoint===0x232A||// RIGHT-POINTING ANGLE BRACKET
// CJK Radicals Supplement .. Enclosed CJK Letters and Months
0x2E80<=codePoint&&codePoint<=0x3247&&codePoint!==0x303F||// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
0x3250<=codePoint&&codePoint<=0x4DBF||// CJK Unified Ideographs .. Yi Radicals
0x4E00<=codePoint&&codePoint<=0xA4C6||// Hangul Jamo Extended-A
0xA960<=codePoint&&codePoint<=0xA97C||// Hangul Syllables
0xAC00<=codePoint&&codePoint<=0xD7A3||// CJK Compatibility Ideographs
0xF900<=codePoint&&codePoint<=0xFAFF||// Vertical Forms
0xFE10<=codePoint&&codePoint<=0xFE19||// CJK Compatibility Forms .. Small Form Variants
0xFE30<=codePoint&&codePoint<=0xFE6B||// Halfwidth and Fullwidth Forms
0xFF01<=codePoint&&codePoint<=0xFF60||0xFFE0<=codePoint&&codePoint<=0xFFE6||// Kana Supplement
0x1B000<=codePoint&&codePoint<=0x1B001||// Enclosed Ideographic Supplement
0x1F200<=codePoint&&codePoint<=0x1F251||// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
0x20000<=codePoint&&codePoint<=0x3FFFD)){return true;}return false;};isFullwidthCodePoint$3.exports=isFullwidthCodePoint$2;isFullwidthCodePoint$3.exports.default=isFullwidthCodePoint$2;var isFullwidthCodePointExports=isFullwidthCodePoint$3.exports;var emojiRegex$1=function(){// https://mths.be/emoji
return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;};const stripAnsi$3=stripAnsi$4;const isFullwidthCodePoint$1=isFullwidthCodePointExports;const emojiRegex=emojiRegex$1;const stringWidth$4=string=>{if(typeof string!=='string'||string.length===0){return 0;}string=stripAnsi$3(string);if(string.length===0){return 0;}string=string.replace(emojiRegex(),'  ');let width=0;for(let i=0;i<string.length;i++){const code=string.codePointAt(i);// Ignore control characters
if(code<=0x1F||code>=0x7F&&code<=0x9F){continue;}// Ignore combining characters
if(code>=0x300&&code<=0x36F){continue;}// Surrogates
if(code>0xFFFF){i++;}width+=isFullwidthCodePoint$1(code)?2:1;}return width;};stringWidth$5.exports=stringWidth$4;// TODO: remove this in the next major version
stringWidth$5.exports.default=stringWidth$4;var stringWidthExports=stringWidth$5.exports;var widestLine$2={exports:{}};const stringWidth$3=stringWidthExports;const widestLine$1=input=>{let max=0;for(const line of input.split('\n')){max=Math.max(max,stringWidth$3(line));}return max;};widestLine$2.exports=widestLine$1;// TODO: remove this in the next major version
widestLine$2.exports.default=widestLine$1;var widestLineExports=widestLine$2.exports;var cliBoxes$2={exports:{}};var single$1={topLeft:"┌",topRight:"┐",bottomRight:"┘",bottomLeft:"└",vertical:"│",horizontal:"─"};var double={topLeft:"╔",topRight:"╗",bottomRight:"╝",bottomLeft:"╚",vertical:"║",horizontal:"═"};var round={topLeft:"╭",topRight:"╮",bottomRight:"╯",bottomLeft:"╰",vertical:"│",horizontal:"─"};var bold={topLeft:"┏",topRight:"┓",bottomRight:"┛",bottomLeft:"┗",vertical:"┃",horizontal:"━"};var singleDouble={topLeft:"╓",topRight:"╖",bottomRight:"╜",bottomLeft:"╙",vertical:"║",horizontal:"─"};var doubleSingle={topLeft:"╒",topRight:"╕",bottomRight:"╛",bottomLeft:"╘",vertical:"│",horizontal:"═"};var classic={topLeft:"+",topRight:"+",bottomRight:"+",bottomLeft:"+",vertical:"|",horizontal:"-"};var require$$0$2={single:single$1,double:double,round:round,bold:bold,singleDouble:singleDouble,doubleSingle:doubleSingle,classic:classic};const cliBoxes$1=require$$0$2;cliBoxes$2.exports=cliBoxes$1;// TODO: Remove this for the next major release
cliBoxes$2.exports.default=cliBoxes$1;var cliBoxesExports=cliBoxes$2.exports;var camelcase={exports:{}};const preserveCamelCase=string=>{let isLastCharLower=false;let isLastCharUpper=false;let isLastLastCharUpper=false;for(let i=0;i<string.length;i++){const character=string[i];if(isLastCharLower&&/[a-zA-Z]/.test(character)&&character.toUpperCase()===character){string=string.slice(0,i)+'-'+string.slice(i);isLastCharLower=false;isLastLastCharUpper=isLastCharUpper;isLastCharUpper=true;i++;}else if(isLastCharUpper&&isLastLastCharUpper&&/[a-zA-Z]/.test(character)&&character.toLowerCase()===character){string=string.slice(0,i-1)+'-'+string.slice(i-1);isLastLastCharUpper=isLastCharUpper;isLastCharUpper=false;isLastCharLower=true;}else{isLastCharLower=character.toLowerCase()===character&&character.toUpperCase()!==character;isLastLastCharUpper=isLastCharUpper;isLastCharUpper=character.toUpperCase()===character&&character.toLowerCase()!==character;}}return string;};const camelCase$1=(input,options)=>{if(!(typeof input==='string'||Array.isArray(input))){throw new TypeError('Expected the input to be `string | string[]`');}options=Object.assign({pascalCase:false},options);const postProcess=x=>options.pascalCase?x.charAt(0).toUpperCase()+x.slice(1):x;if(Array.isArray(input)){input=input.map(x=>x.trim()).filter(x=>x.length).join('-');}else{input=input.trim();}if(input.length===0){return'';}if(input.length===1){return options.pascalCase?input.toUpperCase():input.toLowerCase();}const hasUpperCase=input!==input.toLowerCase();if(hasUpperCase){input=preserveCamelCase(input);}input=input.replace(/^[_.\- ]+/,'').toLowerCase().replace(/[_.\- ]+(\w|$)/g,(_,p1)=>p1.toUpperCase()).replace(/\d+(\w|$)/g,m=>m.toUpperCase());return postProcess(input);};camelcase.exports=camelCase$1;// TODO: Remove this for the next major release
camelcase.exports.default=camelCase$1;var camelcaseExports=camelcase.exports;const stringWidth$2=stringWidthExports;function ansiAlign$1(text,opts){if(!text)return text;opts=opts||{};const align=opts.align||'center';// short-circuit `align: 'left'` as no-op
if(align==='left')return text;const split=opts.split||'\n';const pad=opts.pad||' ';const widthDiffFn=align!=='right'?halfDiff:fullDiff;let returnString=false;if(!Array.isArray(text)){returnString=true;text=String(text).split(split);}let width;let maxWidth=0;text=text.map(function(str){str=String(str);width=stringWidth$2(str);maxWidth=Math.max(width,maxWidth);return{str,width};}).map(function(obj){return new Array(widthDiffFn(maxWidth,obj.width)+1).join(pad)+obj.str;});return returnString?text.join(split):text;}ansiAlign$1.left=function left(text){return ansiAlign$1(text,{align:'left'});};ansiAlign$1.center=function center(text){return ansiAlign$1(text,{align:'center'});};ansiAlign$1.right=function right(text){return ansiAlign$1(text,{align:'right'});};var ansiAlign_1=ansiAlign$1;function halfDiff(maxWidth,curWidth){return Math.floor((maxWidth-curWidth)/2);}function fullDiff(maxWidth,curWidth){return maxWidth-curWidth;}const{execFileSync}=require$$0__default$1.default;const path=path__default.default;const exec=(command,arguments_,shell)=>execFileSync(command,arguments_,{encoding:'utf8',shell}).trim();const create=(columns,rows)=>({columns:parseInt(columns,10),rows:parseInt(rows,10)});var termSize$1=()=>{const{env,stdout,stderr}=process;if(stdout&&stdout.columns&&stdout.rows){return create(stdout.columns,stdout.rows);}if(stderr&&stderr.columns&&stderr.rows){return create(stderr.columns,stderr.rows);}// These values are static, so not the first choice
if(env.COLUMNS&&env.LINES){return create(env.COLUMNS,env.LINES);}if(process.platform==='win32'){try{// Binary: https://github.com/sindresorhus/win-term-size
const size=exec(path.join(__dirname,'vendor/windows/term-size.exe')).split(/\r?\n/);if(size.length===2){return create(size[0],size[1]);}}catch(_){}}else{if(process.platform==='darwin'){try{// Binary: https://github.com/sindresorhus/macos-term-size
const size=exec(path.join(__dirname,'vendor/macos/term-size'),[],true).split(/\r?\n/);if(size.length===2){return create(size[0],size[1]);}}catch(_){}}// `resize` is preferred as it works even when all file descriptors are redirected
// https://linux.die.net/man/1/resize
try{const size=exec('resize',['-u']).match(/\d+/g);if(size.length===2){return create(size[0],size[1]);}}catch(_){}if(process.env.TERM){try{const columns=exec('tput',['cols']);const rows=exec('tput',['lines']);if(columns&&rows){return create(columns,rows);}}catch(_){}}}return create(80,24);};const stringWidth$1=stringWidthExports;const chalk$3=chalk__default.default;const widestLine=widestLineExports;const cliBoxes=cliBoxesExports;const camelCase=camelcaseExports;const ansiAlign=ansiAlign_1;const termSize=termSize$1;const getObject=detail=>{let object;if(typeof detail==='number'){object={top:detail,right:detail*3,bottom:detail,left:detail*3};}else{object={top:0,right:0,bottom:0,left:0,...detail};}return object;};const getBorderChars=borderStyle=>{const sides=['topLeft','topRight','bottomRight','bottomLeft','vertical','horizontal'];let chararacters;if(typeof borderStyle==='string'){chararacters=cliBoxes[borderStyle];if(!chararacters){throw new TypeError("Invalid border style: ".concat(borderStyle));}}else{for(const side of sides){if(!borderStyle[side]||typeof borderStyle[side]!=='string'){throw new TypeError("Invalid border style: ".concat(side));}}chararacters=borderStyle;}return chararacters;};const isHex=color=>color.match(/^#[0-f]{3}(?:[0-f]{3})?$/i);const isColorValid=color=>typeof color==='string'&&(chalk$3[color]||isHex(color));const getColorFn=color=>isHex(color)?chalk$3.hex(color):chalk$3[color];const getBGColorFn=color=>isHex(color)?chalk$3.bgHex(color):chalk$3[camelCase(['bg',color])];boxen$1.exports=(text,options)=>{options={padding:0,borderStyle:'single',dimBorder:false,align:'left',float:'left',...options};if(options.borderColor&&!isColorValid(options.borderColor)){throw new Error("".concat(options.borderColor," is not a valid borderColor"));}if(options.backgroundColor&&!isColorValid(options.backgroundColor)){throw new Error("".concat(options.backgroundColor," is not a valid backgroundColor"));}const chars=getBorderChars(options.borderStyle);const padding=getObject(options.padding);const margin=getObject(options.margin);const colorizeBorder=border=>{const newBorder=options.borderColor?getColorFn(options.borderColor)(border):border;return options.dimBorder?chalk$3.dim(newBorder):newBorder;};const colorizeContent=content=>options.backgroundColor?getBGColorFn(options.backgroundColor)(content):content;text=ansiAlign(text,{align:options.align});const NL='\n';const PAD=' ';let lines=text.split(NL);if(padding.top>0){lines=new Array(padding.top).fill('').concat(lines);}if(padding.bottom>0){lines=lines.concat(new Array(padding.bottom).fill(''));}const contentWidth=widestLine(text)+padding.left+padding.right;const paddingLeft=PAD.repeat(padding.left);const{columns}=termSize();let marginLeft=PAD.repeat(margin.left);if(options.float==='center'){const padWidth=Math.max((columns-contentWidth)/2,0);marginLeft=PAD.repeat(padWidth);}else if(options.float==='right'){const padWidth=Math.max(columns-contentWidth-margin.right-2,0);marginLeft=PAD.repeat(padWidth);}const horizontal=chars.horizontal.repeat(contentWidth);const top=colorizeBorder(NL.repeat(margin.top)+marginLeft+chars.topLeft+horizontal+chars.topRight);const bottom=colorizeBorder(marginLeft+chars.bottomLeft+horizontal+chars.bottomRight+NL.repeat(margin.bottom));const side=colorizeBorder(chars.vertical);const middle=lines.map(line=>{const paddingRight=PAD.repeat(contentWidth-stringWidth$1(line)-padding.left);return marginLeft+side+colorizeContent(paddingLeft+line+paddingRight)+side;}).join(NL);return top+NL+middle+NL+bottom;};boxen$1.exports._borderStyles=cliBoxes;var boxenExports=boxen$1.exports;var boxen=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(boxenExports);const rimraf=require$$0__default$5.default.promisify(rimrafCb);const unsupportedMessage="\n`sanity upgrade` is not supported as of sanity v3.\nUse npm-check-updates or similar (https://www.npmjs.com/package/npm-check-updates)\n".trim();const upgradeDependencies=async function upgradeDependencies2(args,context){const{output,workDir,yarn,chalk,sanityMajorVersion}=context;if(sanityMajorVersion>=3){throw new Error(unsupportedMessage);}const{extOptions,argsWithoutOptions}=args;const modules=argsWithoutOptions.slice();const{range,tag}=extOptions;const saveExact=extOptions["save-exact"];const targetRange=tag||range;if(range&&tag){throw new Error("Both --tag and --range specified, can only use one");}if(range&&!semver__default.default.validRange(range)){throw new Error("Invalid semver range \"".concat(range,"\""));}const versions=await findSanityModuleVersions(context,{target:targetRange,includeCli:false});const allNeedsUpdate=versions.filter(mod=>mod.needsUpdate);loadEnv.debug("In need of update: %s",allNeedsUpdate.map(mod=>mod.name).join(", "));const needsUpdate=modules.length===0?allNeedsUpdate:allNeedsUpdate.filter(outOfDate=>modules.indexOf(outOfDate.name)!==-1);const semverBreakingUpgrades=versions.filter(hasSemverBreakingUpgrade);const baseMajorUpgrade=semverBreakingUpgrades.find(mod=>mod.name==="@sanity/base");const majorUpgrades=semverBreakingUpgrades.filter(mod=>mod.name!=="@sanity/base");schedulePrintMajorUpgrades({baseMajorUpgrade,majorUpgrades},context);if(needsUpdate.length===0){const specified=modules.length===0?"All":"All *specified*";context.output.print("".concat(chalk.green("\u2714")," ").concat(specified," Sanity modules are at latest compatible versions"));return;}const pinned=needsUpdate.filter(mod=>mod.isPinned);const nonPinned=needsUpdate.filter(mod=>!mod.isPinned);const pinnedNames=pinned.map(mod=>mod.name).join("\n - ");if(nonPinned.length===0){context.output.warn("".concat(chalk.yellow("\u26A0")," All modules are pinned to specific versions, not upgrading:\n - ").concat(pinnedNames));return;}if(pinned.length>0){context.output.warn("".concat(chalk.yellow("\u26A0")," The follow modules are pinned to specific versions, not upgrading:\n - ").concat(pinnedNames));}await maybeDeleteReactAce(nonPinned,workDir);await Promise.all(nonPinned.map(mod=>deleteIfNotSymlink(path__default.default.join(context.workDir,"node_modules",mod.name.replace(/\//g,path__default.default.sep)))));const versionPrefix=saveExact?"":"^";const oldManifest=await readLocalManifest(workDir);const newManifest=nonPinned.reduce((target,mod)=>{if(oldManifest.dependencies&&oldManifest.dependencies[mod.name]){target.dependencies[mod.name]=mod.latestInRange==="unknown"?oldManifest.dependencies[mod.name]:versionPrefix+mod.latestInRange;}if(oldManifest.devDependencies&&oldManifest.devDependencies[mod.name]){target.devDependencies[mod.name]=mod.latestInRange==="unknown"?oldManifest.devDependencies[mod.name]:versionPrefix+mod.latestInRange;}return target;},oldManifest);const manifestPath=path__default.default.join(context.workDir,"package.json");await writeJson(manifestPath,newManifest);const flags=extOptions.offline?["--offline"]:[];const cmd=["install"].concat(flags);loadEnv.debug("Running yarn %s",cmd.join(" "));await yarn(cmd,{...output,rootDir:workDir});context.output.print("");context.output.print("".concat(chalk.green("\u2714")," Modules upgraded:"));const{versionLength,formatName}=getFormatters(nonPinned);nonPinned.forEach(mod=>{const current=chalk.yellow(lodashExports.padStart(mod.installed||"<missing>",versionLength));const latest=chalk.green(mod.latestInRange);context.output.print("".concat(formatName(mod.name)," ").concat(current," \u2192 ").concat(latest));});};function writeJson(filePath,data){return require$$0$4.promises.writeFile(filePath,"".concat(JSON.stringify(data,null,2),"\n"));}async function deleteIfNotSymlink(modPath){const stats=await require$$0$4.promises.lstat(modPath).catch(lodashExports.noop);if(!stats||stats.isSymbolicLink()){return null;}return rimraf(modPath);}function hasSemverBreakingUpgrade(mod){var _semver__default$defa2;const current=mod.installed||((_semver__default$defa2=semver__default.default.minVersion(mod.declared))===null||_semver__default$defa2===void 0?void 0:_semver__default$defa2.toString())||"";return!semver__default.default.satisfies(mod.latest,"^".concat(current))&&semver__default.default.gt(mod.latest,current);}function getMajorUpgradeText(mods,chalk){const modNames=mods.map(mod=>"".concat(mod.name," (v").concat(semver__default.default.major(mod.latest),")")).join("\n - ");return["The following modules has new major versions\n","released and will have to be manually upgraded:\n\n"," - ".concat(modNames,"\n\n"),chalk.yellow("\u26A0")," Note that major versions can contain backwards\n","  incompatible changes and should be handled with care."].join("");}function getMajorStudioUpgradeText(mod,chalk){var _semver__default$defa3;const prev=semver__default.default.major(mod.installed||((_semver__default$defa3=semver__default.default.minVersion(mod.declared))===null||_semver__default$defa3===void 0?void 0:_semver__default$defa3.toString())||"");const next=semver__default.default.major(mod.latest);return["There is now a new major version of Sanity Studio!","","Read more about the new version and how to upgrade:",chalk.blueBright("https://www.sanity.io/changelog/studio?from=v".concat(prev,"&to=v").concat(next))].join("\n");}function schedulePrintMajorUpgrades(_ref128,_ref129){let{baseMajorUpgrade,majorUpgrades}=_ref128;let{chalk,output}=_ref129;if(majorUpgrades.length===0&&!baseMajorUpgrade){return;}process.on("beforeExit",()=>{output.print("");if(baseMajorUpgrade){output.warn(boxen(getMajorStudioUpgradeText(baseMajorUpgrade,chalk),{borderColor:"green",padding:1}));return;}output.warn(boxen(getMajorUpgradeText(majorUpgrades,chalk),{borderColor:"yellow",padding:1}));});}async function maybeDeleteReactAce(toUpgrade,workDir){const codeInputUpdate=toUpgrade.find(mod=>mod.name==="@sanity/code-input");if(!codeInputUpdate){return;}const installed=codeInputUpdate.installed?codeInputUpdate.installed:"2.4.0";const upgradeTo=codeInputUpdate.latestInRange;const shouldDelete=semver__default.default.lte(installed,"2.24.0")&&semver__default.default.gte(upgradeTo,"2.24.1");if(!shouldDelete){return;}const depRootPath=path__default.default.join(workDir,"node_modules");const closestReactAcePath=getModulePath("react-ace",path__default.default.join(depRootPath,"@sanity","code-input"))||path__default.default.join(depRootPath,"react-ace");await rimraf(closestReactAcePath);}function getModulePath(modName,fromPath){const manifestFile="".concat(modName.replace(/\//g,path__default.default.sep),"/package.json");const manifestPath=resolveFrom$1.silent(fromPath,manifestFile);return manifestPath?path__default.default.dirname(manifestPath):void 0;}async function readLocalManifest(dirName){let fileName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"package.json";try{const content=await require$$0$4.promises.readFile(path__default.default.join(dirName,fileName),"utf8");return JSON.parse(content);}catch(err){if(err.code==="ENOENT"){return{};}throw new Error("Error while attempting to read projects \"".concat(fileName,"\":\n").concat(err.message));}}const helpText="\nUpgrades installed Sanity modules to the latest available version within the\nsemantic versioning range specified in \"package.json\".\n\nIf a specific module name is provided, only that module will be upgraded.\n\nOptions\n  --range [range] Version range to upgrade to, eg '^2.2.7' or '2.1.x'\n  --tag [tag]     Tagged release to upgrade to, eg 'canary' or 'some-feature'\n  --save-exact    Pin the resolved version numbers in package.json (no ^ prefix)\n\nExamples\n  # Upgrade modules to the latest semver compatible versions\n  sanity upgrade\n\n  # Update to the latest within the 2.2 range\n  sanity upgrade --range 2.2.x\n\n  # Update to the latest semver compatible versions and pin the versions\n  sanity upgrade --save-exact\n\n  # Update to the latest 'canary' npm tag\n  sanity upgrade --tag canary\n";const upgradeCommand={name:"upgrade",signature:"[--tag DIST_TAG] [--range SEMVER_RANGE] [--save-exact]",description:"Upgrades all (or some) Sanity modules to their latest versions",action:upgradeDependencies,hideFromHelp:true,helpText};const help="\nShows a list of installed Sanity modules and their respective versions, and\nchecks the npm registry for the latest available versions.";var versionsCommand={name:"versions",signature:"",description:"Shows installed versions of Sanity Studio and components",helpText:help,action:printVersionResultCommand};const baseCommands=[initCommand,loginCommand,logoutCommand,installCommand,upgradeCommand,versionsCommand,docsCommand,manageCommand,debugCommand,command$1,projectGroup,listProjectsCommand,codemodCommand,telemetryGroup,disableTelemetryCommand,enableTelemetryCommand,telemetryStatusCommand];var ora$1={exports:{}};var cliCursor$2={};const onetime$1=onetimeExports;const signalExit=signalExitExports;var restoreCursor$1=onetime$1(()=>{signalExit(()=>{process.stderr.write('\u001B[?25h');},{alwaysLast:true});});(function(exports){const restoreCursor=restoreCursor$1;let isHidden=false;exports.show=function(){let writableStream=arguments.length>0&&arguments[0]!==undefined?arguments[0]:process.stderr;if(!writableStream.isTTY){return;}isHidden=false;writableStream.write('\u001B[?25h');};exports.hide=function(){let writableStream=arguments.length>0&&arguments[0]!==undefined?arguments[0]:process.stderr;if(!writableStream.isTTY){return;}restoreCursor();isHidden=true;writableStream.write('\u001B[?25l');};exports.toggle=(force,writableStream)=>{if(force!==undefined){isHidden=force;}if(isHidden){exports.show(writableStream);}else{exports.hide(writableStream);}};})(cliCursor$2);var dots={interval:80,frames:["⠋","⠙","⠹","⠸","⠼","⠴","⠦","⠧","⠇","⠏"]};var dots2={interval:80,frames:["⣾","⣽","⣻","⢿","⡿","⣟","⣯","⣷"]};var dots3={interval:80,frames:["⠋","⠙","⠚","⠞","⠖","⠦","⠴","⠲","⠳","⠓"]};var dots4={interval:80,frames:["⠄","⠆","⠇","⠋","⠙","⠸","⠰","⠠","⠰","⠸","⠙","⠋","⠇","⠆"]};var dots5={interval:80,frames:["⠋","⠙","⠚","⠒","⠂","⠂","⠒","⠲","⠴","⠦","⠖","⠒","⠐","⠐","⠒","⠓","⠋"]};var dots6={interval:80,frames:["⠁","⠉","⠙","⠚","⠒","⠂","⠂","⠒","⠲","⠴","⠤","⠄","⠄","⠤","⠴","⠲","⠒","⠂","⠂","⠒","⠚","⠙","⠉","⠁"]};var dots7={interval:80,frames:["⠈","⠉","⠋","⠓","⠒","⠐","⠐","⠒","⠖","⠦","⠤","⠠","⠠","⠤","⠦","⠖","⠒","⠐","⠐","⠒","⠓","⠋","⠉","⠈"]};var dots8={interval:80,frames:["⠁","⠁","⠉","⠙","⠚","⠒","⠂","⠂","⠒","⠲","⠴","⠤","⠄","⠄","⠤","⠠","⠠","⠤","⠦","⠖","⠒","⠐","⠐","⠒","⠓","⠋","⠉","⠈","⠈"]};var dots9={interval:80,frames:["⢹","⢺","⢼","⣸","⣇","⡧","⡗","⡏"]};var dots10={interval:80,frames:["⢄","⢂","⢁","⡁","⡈","⡐","⡠"]};var dots11={interval:100,frames:["⠁","⠂","⠄","⡀","⢀","⠠","⠐","⠈"]};var dots12={interval:80,frames:["⢀⠀","⡀⠀","⠄⠀","⢂⠀","⡂⠀","⠅⠀","⢃⠀","⡃⠀","⠍⠀","⢋⠀","⡋⠀","⠍⠁","⢋⠁","⡋⠁","⠍⠉","⠋⠉","⠋⠉","⠉⠙","⠉⠙","⠉⠩","⠈⢙","⠈⡙","⢈⠩","⡀⢙","⠄⡙","⢂⠩","⡂⢘","⠅⡘","⢃⠨","⡃⢐","⠍⡐","⢋⠠","⡋⢀","⠍⡁","⢋⠁","⡋⠁","⠍⠉","⠋⠉","⠋⠉","⠉⠙","⠉⠙","⠉⠩","⠈⢙","⠈⡙","⠈⠩","⠀⢙","⠀⡙","⠀⠩","⠀⢘","⠀⡘","⠀⠨","⠀⢐","⠀⡐","⠀⠠","⠀⢀","⠀⡀"]};var dots13={interval:80,frames:["⣼","⣹","⢻","⠿","⡟","⣏","⣧","⣶"]};var dots8Bit={interval:80,frames:["⠀","⠁","⠂","⠃","⠄","⠅","⠆","⠇","⡀","⡁","⡂","⡃","⡄","⡅","⡆","⡇","⠈","⠉","⠊","⠋","⠌","⠍","⠎","⠏","⡈","⡉","⡊","⡋","⡌","⡍","⡎","⡏","⠐","⠑","⠒","⠓","⠔","⠕","⠖","⠗","⡐","⡑","⡒","⡓","⡔","⡕","⡖","⡗","⠘","⠙","⠚","⠛","⠜","⠝","⠞","⠟","⡘","⡙","⡚","⡛","⡜","⡝","⡞","⡟","⠠","⠡","⠢","⠣","⠤","⠥","⠦","⠧","⡠","⡡","⡢","⡣","⡤","⡥","⡦","⡧","⠨","⠩","⠪","⠫","⠬","⠭","⠮","⠯","⡨","⡩","⡪","⡫","⡬","⡭","⡮","⡯","⠰","⠱","⠲","⠳","⠴","⠵","⠶","⠷","⡰","⡱","⡲","⡳","⡴","⡵","⡶","⡷","⠸","⠹","⠺","⠻","⠼","⠽","⠾","⠿","⡸","⡹","⡺","⡻","⡼","⡽","⡾","⡿","⢀","⢁","⢂","⢃","⢄","⢅","⢆","⢇","⣀","⣁","⣂","⣃","⣄","⣅","⣆","⣇","⢈","⢉","⢊","⢋","⢌","⢍","⢎","⢏","⣈","⣉","⣊","⣋","⣌","⣍","⣎","⣏","⢐","⢑","⢒","⢓","⢔","⢕","⢖","⢗","⣐","⣑","⣒","⣓","⣔","⣕","⣖","⣗","⢘","⢙","⢚","⢛","⢜","⢝","⢞","⢟","⣘","⣙","⣚","⣛","⣜","⣝","⣞","⣟","⢠","⢡","⢢","⢣","⢤","⢥","⢦","⢧","⣠","⣡","⣢","⣣","⣤","⣥","⣦","⣧","⢨","⢩","⢪","⢫","⢬","⢭","⢮","⢯","⣨","⣩","⣪","⣫","⣬","⣭","⣮","⣯","⢰","⢱","⢲","⢳","⢴","⢵","⢶","⢷","⣰","⣱","⣲","⣳","⣴","⣵","⣶","⣷","⢸","⢹","⢺","⢻","⢼","⢽","⢾","⢿","⣸","⣹","⣺","⣻","⣼","⣽","⣾","⣿"]};var sand={interval:80,frames:["⠁","⠂","⠄","⡀","⡈","⡐","⡠","⣀","⣁","⣂","⣄","⣌","⣔","⣤","⣥","⣦","⣮","⣶","⣷","⣿","⡿","⠿","⢟","⠟","⡛","⠛","⠫","⢋","⠋","⠍","⡉","⠉","⠑","⠡","⢁"]};var line={interval:130,frames:["-","\\","|","/"]};var line2={interval:100,frames:["⠂","-","–","—","–","-"]};var pipe$1={interval:100,frames:["┤","┘","┴","└","├","┌","┬","┐"]};var simpleDots={interval:400,frames:[".  ",".. ","...","   "]};var simpleDotsScrolling={interval:200,frames:[".  ",".. ","..."," ..","  .","   "]};var star={interval:70,frames:["✶","✸","✹","✺","✹","✷"]};var star2={interval:80,frames:["+","x","*"]};var flip={interval:70,frames:["_","_","_","-","`","`","'","´","-","_","_","_"]};var hamburger={interval:100,frames:["☱","☲","☴"]};var growVertical={interval:120,frames:["▁","▃","▄","▅","▆","▇","▆","▅","▄","▃"]};var growHorizontal={interval:120,frames:["▏","▎","▍","▌","▋","▊","▉","▊","▋","▌","▍","▎"]};var balloon={interval:140,frames:[" ",".","o","O","@","*"," "]};var balloon2={interval:120,frames:[".","o","O","°","O","o","."]};var noise={interval:100,frames:["▓","▒","░"]};var bounce={interval:120,frames:["⠁","⠂","⠄","⠂"]};var boxBounce={interval:120,frames:["▖","▘","▝","▗"]};var boxBounce2={interval:100,frames:["▌","▀","▐","▄"]};var triangle={interval:50,frames:["◢","◣","◤","◥"]};var binary={interval:80,frames:["010010","001100","100101","111010","111101","010111","101011","111000","110011","110101"]};var arc={interval:100,frames:["◜","◠","◝","◞","◡","◟"]};var circle={interval:120,frames:["◡","⊙","◠"]};var squareCorners={interval:180,frames:["◰","◳","◲","◱"]};var circleQuarters={interval:120,frames:["◴","◷","◶","◵"]};var circleHalves={interval:50,frames:["◐","◓","◑","◒"]};var squish={interval:100,frames:["╫","╪"]};var toggle={interval:250,frames:["⊶","⊷"]};var toggle2={interval:80,frames:["▫","▪"]};var toggle3={interval:120,frames:["□","■"]};var toggle4={interval:100,frames:["■","□","▪","▫"]};var toggle5={interval:100,frames:["▮","▯"]};var toggle6={interval:300,frames:["ဝ","၀"]};var toggle7={interval:80,frames:["⦾","⦿"]};var toggle8={interval:100,frames:["◍","◌"]};var toggle9={interval:100,frames:["◉","◎"]};var toggle10={interval:100,frames:["㊂","㊀","㊁"]};var toggle11={interval:50,frames:["⧇","⧆"]};var toggle12={interval:120,frames:["☗","☖"]};var toggle13={interval:80,frames:["=","*","-"]};var arrow={interval:100,frames:["←","↖","↑","↗","→","↘","↓","↙"]};var arrow2={interval:80,frames:["⬆️ ","↗️ ","➡️ ","↘️ ","⬇️ ","↙️ ","⬅️ ","↖️ "]};var arrow3={interval:120,frames:["▹▹▹▹▹","▸▹▹▹▹","▹▸▹▹▹","▹▹▸▹▹","▹▹▹▸▹","▹▹▹▹▸"]};var bouncingBar={interval:80,frames:["[    ]","[=   ]","[==  ]","[=== ]","[====]","[ ===]","[  ==]","[   =]","[    ]","[   =]","[  ==]","[ ===]","[====]","[=== ]","[==  ]","[=   ]"]};var bouncingBall={interval:80,frames:["( ●    )","(  ●   )","(   ●  )","(    ● )","(     ●)","(    ● )","(   ●  )","(  ●   )","( ●    )","(●     )"]};var smiley={interval:200,frames:["😄 ","😝 "]};var monkey={interval:300,frames:["🙈 ","🙈 ","🙉 ","🙊 "]};var hearts={interval:100,frames:["💛 ","💙 ","💜 ","💚 ","❤️ "]};var clock={interval:100,frames:["🕛 ","🕐 ","🕑 ","🕒 ","🕓 ","🕔 ","🕕 ","🕖 ","🕗 ","🕘 ","🕙 ","🕚 "]};var earth={interval:180,frames:["🌍 ","🌎 ","🌏 "]};var material={interval:17,frames:["█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","███▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","████▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","██████▁▁▁▁▁▁▁▁▁▁▁▁▁▁","██████▁▁▁▁▁▁▁▁▁▁▁▁▁▁","███████▁▁▁▁▁▁▁▁▁▁▁▁▁","████████▁▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","██████████▁▁▁▁▁▁▁▁▁▁","███████████▁▁▁▁▁▁▁▁▁","█████████████▁▁▁▁▁▁▁","██████████████▁▁▁▁▁▁","██████████████▁▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁▁██████████████▁▁▁▁","▁▁▁██████████████▁▁▁","▁▁▁▁█████████████▁▁▁","▁▁▁▁██████████████▁▁","▁▁▁▁██████████████▁▁","▁▁▁▁▁██████████████▁","▁▁▁▁▁██████████████▁","▁▁▁▁▁██████████████▁","▁▁▁▁▁▁██████████████","▁▁▁▁▁▁██████████████","▁▁▁▁▁▁▁█████████████","▁▁▁▁▁▁▁█████████████","▁▁▁▁▁▁▁▁████████████","▁▁▁▁▁▁▁▁████████████","▁▁▁▁▁▁▁▁▁███████████","▁▁▁▁▁▁▁▁▁███████████","▁▁▁▁▁▁▁▁▁▁██████████","▁▁▁▁▁▁▁▁▁▁██████████","▁▁▁▁▁▁▁▁▁▁▁▁████████","▁▁▁▁▁▁▁▁▁▁▁▁▁███████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁██████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████","█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████","██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","███▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","████▁▁▁▁▁▁▁▁▁▁▁▁▁▁██","█████▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","█████▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","██████▁▁▁▁▁▁▁▁▁▁▁▁▁█","████████▁▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","███████████▁▁▁▁▁▁▁▁▁","████████████▁▁▁▁▁▁▁▁","████████████▁▁▁▁▁▁▁▁","██████████████▁▁▁▁▁▁","██████████████▁▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁▁▁█████████████▁▁▁▁","▁▁▁▁▁████████████▁▁▁","▁▁▁▁▁████████████▁▁▁","▁▁▁▁▁▁███████████▁▁▁","▁▁▁▁▁▁▁▁█████████▁▁▁","▁▁▁▁▁▁▁▁█████████▁▁▁","▁▁▁▁▁▁▁▁▁█████████▁▁","▁▁▁▁▁▁▁▁▁█████████▁▁","▁▁▁▁▁▁▁▁▁▁█████████▁","▁▁▁▁▁▁▁▁▁▁▁████████▁","▁▁▁▁▁▁▁▁▁▁▁████████▁","▁▁▁▁▁▁▁▁▁▁▁▁███████▁","▁▁▁▁▁▁▁▁▁▁▁▁███████▁","▁▁▁▁▁▁▁▁▁▁▁▁▁███████","▁▁▁▁▁▁▁▁▁▁▁▁▁███████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁"]};var moon={interval:80,frames:["🌑 ","🌒 ","🌓 ","🌔 ","🌕 ","🌖 ","🌗 ","🌘 "]};var runner={interval:140,frames:["🚶 ","🏃 "]};var pong={interval:80,frames:["▐⠂       ▌","▐⠈       ▌","▐ ⠂      ▌","▐ ⠠      ▌","▐  ⡀     ▌","▐  ⠠     ▌","▐   ⠂    ▌","▐   ⠈    ▌","▐    ⠂   ▌","▐    ⠠   ▌","▐     ⡀  ▌","▐     ⠠  ▌","▐      ⠂ ▌","▐      ⠈ ▌","▐       ⠂▌","▐       ⠠▌","▐       ⡀▌","▐      ⠠ ▌","▐      ⠂ ▌","▐     ⠈  ▌","▐     ⠂  ▌","▐    ⠠   ▌","▐    ⡀   ▌","▐   ⠠    ▌","▐   ⠂    ▌","▐  ⠈     ▌","▐  ⠂     ▌","▐ ⠠      ▌","▐ ⡀      ▌","▐⠠       ▌"]};var shark={interval:120,frames:["▐|\\____________▌","▐_|\\___________▌","▐__|\\__________▌","▐___|\\_________▌","▐____|\\________▌","▐_____|\\_______▌","▐______|\\______▌","▐_______|\\_____▌","▐________|\\____▌","▐_________|\\___▌","▐__________|\\__▌","▐___________|\\_▌","▐____________|\\▌","▐____________/|▌","▐___________/|_▌","▐__________/|__▌","▐_________/|___▌","▐________/|____▌","▐_______/|_____▌","▐______/|______▌","▐_____/|_______▌","▐____/|________▌","▐___/|_________▌","▐__/|__________▌","▐_/|___________▌","▐/|____________▌"]};var dqpb={interval:100,frames:["d","q","p","b"]};var weather={interval:100,frames:["☀️ ","☀️ ","☀️ ","🌤 ","⛅️ ","🌥 ","☁️ ","🌧 ","🌨 ","🌧 ","🌨 ","🌧 ","🌨 ","⛈ ","🌨 ","🌧 ","🌨 ","☁️ ","🌥 ","⛅️ ","🌤 ","☀️ ","☀️ "]};var christmas={interval:400,frames:["🌲","🎄"]};var grenade={interval:80,frames:["،  ","′  "," ´ "," ‾ ","  ⸌","  ⸊","  |","  ⁎","  ⁕"," ෴ ","  ⁓","   ","   ","   "]};var point={interval:125,frames:["∙∙∙","●∙∙","∙●∙","∙∙●","∙∙∙"]};var layer={interval:150,frames:["-","=","≡"]};var betaWave={interval:80,frames:["ρββββββ","βρβββββ","ββρββββ","βββρβββ","ββββρββ","βββββρβ","ββββββρ"]};var fingerDance={interval:160,frames:["🤘 ","🤟 ","🖖 ","✋ ","🤚 ","👆 "]};var fistBump={interval:80,frames:["🤜　　　　🤛 ","🤜　　　　🤛 ","🤜　　　　🤛 ","　🤜　　🤛　 ","　　🤜🤛　　 ","　🤜✨🤛　　 ","🤜　✨　🤛　 "]};var soccerHeader={interval:80,frames:[" 🧑⚽️       🧑 ","🧑  ⚽️      🧑 ","🧑   ⚽️     🧑 ","🧑    ⚽️    🧑 ","🧑     ⚽️   🧑 ","🧑      ⚽️  🧑 ","🧑       ⚽️🧑  ","🧑      ⚽️  🧑 ","🧑     ⚽️   🧑 ","🧑    ⚽️    🧑 ","🧑   ⚽️     🧑 ","🧑  ⚽️      🧑 "]};var mindblown={interval:160,frames:["😐 ","😐 ","😮 ","😮 ","😦 ","😦 ","😧 ","😧 ","🤯 ","💥 ","✨ ","　 ","　 ","　 "]};var speaker={interval:160,frames:["🔈 ","🔉 ","🔊 ","🔉 "]};var orangePulse={interval:100,frames:["🔸 ","🔶 ","🟠 ","🟠 ","🔶 "]};var bluePulse={interval:100,frames:["🔹 ","🔷 ","🔵 ","🔵 ","🔷 "]};var orangeBluePulse={interval:100,frames:["🔸 ","🔶 ","🟠 ","🟠 ","🔶 ","🔹 ","🔷 ","🔵 ","🔵 ","🔷 "]};var timeTravel={interval:100,frames:["🕛 ","🕚 ","🕙 ","🕘 ","🕗 ","🕖 ","🕕 ","🕔 ","🕓 ","🕒 ","🕑 ","🕐 "]};var aesthetic={interval:80,frames:["▰▱▱▱▱▱▱","▰▰▱▱▱▱▱","▰▰▰▱▱▱▱","▰▰▰▰▱▱▱","▰▰▰▰▰▱▱","▰▰▰▰▰▰▱","▰▰▰▰▰▰▰","▰▱▱▱▱▱▱"]};var dwarfFortress={interval:80,frames:[" ██████£££  ","☺██████£££  ","☺██████£££  ","☺▓█████£££  ","☺▓█████£££  ","☺▒█████£££  ","☺▒█████£££  ","☺░█████£££  ","☺░█████£££  ","☺ █████£££  "," ☺█████£££  "," ☺█████£££  "," ☺▓████£££  "," ☺▓████£££  "," ☺▒████£££  "," ☺▒████£££  "," ☺░████£££  "," ☺░████£££  "," ☺ ████£££  ","  ☺████£££  ","  ☺████£££  ","  ☺▓███£££  ","  ☺▓███£££  ","  ☺▒███£££  ","  ☺▒███£££  ","  ☺░███£££  ","  ☺░███£££  ","  ☺ ███£££  ","   ☺███£££  ","   ☺███£££  ","   ☺▓██£££  ","   ☺▓██£££  ","   ☺▒██£££  ","   ☺▒██£££  ","   ☺░██£££  ","   ☺░██£££  ","   ☺ ██£££  ","    ☺██£££  ","    ☺██£££  ","    ☺▓█£££  ","    ☺▓█£££  ","    ☺▒█£££  ","    ☺▒█£££  ","    ☺░█£££  ","    ☺░█£££  ","    ☺ █£££  ","     ☺█£££  ","     ☺█£££  ","     ☺▓£££  ","     ☺▓£££  ","     ☺▒£££  ","     ☺▒£££  ","     ☺░£££  ","     ☺░£££  ","     ☺ £££  ","      ☺£££  ","      ☺£££  ","      ☺▓££  ","      ☺▓££  ","      ☺▒££  ","      ☺▒££  ","      ☺░££  ","      ☺░££  ","      ☺ ££  ","       ☺££  ","       ☺££  ","       ☺▓£  ","       ☺▓£  ","       ☺▒£  ","       ☺▒£  ","       ☺░£  ","       ☺░£  ","       ☺ £  ","        ☺£  ","        ☺£  ","        ☺▓  ","        ☺▓  ","        ☺▒  ","        ☺▒  ","        ☺░  ","        ☺░  ","        ☺   ","        ☺  &","        ☺ ☼&","       ☺ ☼ &","       ☺☼  &","      ☺☼  & ","      ‼   & ","     ☺   &  ","    ‼    &  ","   ☺    &   ","  ‼     &   "," ☺     &    ","‼      &    ","      &     ","      &     ","     &   ░  ","     &   ▒  ","    &    ▓  ","    &    £  ","   &    ░£  ","   &    ▒£  ","  &     ▓£  ","  &     ££  "," &     ░££  "," &     ▒££  ","&      ▓££  ","&      £££  ","      ░£££  ","      ▒£££  ","      ▓£££  ","      █£££  ","     ░█£££  ","     ▒█£££  ","     ▓█£££  ","     ██£££  ","    ░██£££  ","    ▒██£££  ","    ▓██£££  ","    ███£££  ","   ░███£££  ","   ▒███£££  ","   ▓███£££  ","   ████£££  ","  ░████£££  ","  ▒████£££  ","  ▓████£££  ","  █████£££  "," ░█████£££  "," ▒█████£££  "," ▓█████£££  "," ██████£££  "," ██████£££  "]};var require$$0$1={dots:dots,dots2:dots2,dots3:dots3,dots4:dots4,dots5:dots5,dots6:dots6,dots7:dots7,dots8:dots8,dots9:dots9,dots10:dots10,dots11:dots11,dots12:dots12,dots13:dots13,dots8Bit:dots8Bit,sand:sand,line:line,line2:line2,pipe:pipe$1,simpleDots:simpleDots,simpleDotsScrolling:simpleDotsScrolling,star:star,star2:star2,flip:flip,hamburger:hamburger,growVertical:growVertical,growHorizontal:growHorizontal,balloon:balloon,balloon2:balloon2,noise:noise,bounce:bounce,boxBounce:boxBounce,boxBounce2:boxBounce2,triangle:triangle,binary:binary,arc:arc,circle:circle,squareCorners:squareCorners,circleQuarters:circleQuarters,circleHalves:circleHalves,squish:squish,toggle:toggle,toggle2:toggle2,toggle3:toggle3,toggle4:toggle4,toggle5:toggle5,toggle6:toggle6,toggle7:toggle7,toggle8:toggle8,toggle9:toggle9,toggle10:toggle10,toggle11:toggle11,toggle12:toggle12,toggle13:toggle13,arrow:arrow,arrow2:arrow2,arrow3:arrow3,bouncingBar:bouncingBar,bouncingBall:bouncingBall,smiley:smiley,monkey:monkey,hearts:hearts,clock:clock,earth:earth,material:material,moon:moon,runner:runner,pong:pong,shark:shark,dqpb:dqpb,weather:weather,christmas:christmas,grenade:grenade,point:point,layer:layer,betaWave:betaWave,fingerDance:fingerDance,fistBump:fistBump,soccerHeader:soccerHeader,mindblown:mindblown,speaker:speaker,orangePulse:orangePulse,bluePulse:bluePulse,orangeBluePulse:orangeBluePulse,timeTravel:timeTravel,aesthetic:aesthetic,dwarfFortress:dwarfFortress};const spinners=Object.assign({},require$$0$1);// eslint-disable-line import/extensions
const spinnersList=Object.keys(spinners);Object.defineProperty(spinners,'random',{get(){const randomIndex=Math.floor(Math.random()*spinnersList.length);const spinnerName=spinnersList[randomIndex];return spinners[spinnerName];}});var cliSpinners$1=spinners;var isUnicodeSupported$2=()=>{if(process.platform!=='win32'){return true;}return Boolean(process.env.CI)||Boolean(process.env.WT_SESSION)||// Windows Terminal
process.env.TERM_PROGRAM==='vscode'||process.env.TERM==='xterm-256color'||process.env.TERM==='alacritty';};const chalk$2=chalk__default.default;const isUnicodeSupported$1=isUnicodeSupported$2;const main$2={info:chalk$2.blue('ℹ'),success:chalk$2.green('✔'),warning:chalk$2.yellow('⚠'),error:chalk$2.red('✖')};const fallback={info:chalk$2.blue('i'),success:chalk$2.green('√'),warning:chalk$2.yellow('‼'),error:chalk$2.red('×')};var logSymbols$1=isUnicodeSupported$1()?main$2:fallback;var wcwidth$2={exports:{}};var clone$1={exports:{}};(function(module){var clone=function(){/**
	 * Clones (copies) an Object using deep copying.
	 *
	 * This function supports circular references by default, but if you are certain
	 * there are no circular references in your object, you can save some CPU time
	 * by calling clone(obj, false).
	 *
	 * Caution: if `circular` is false and `parent` contains circular references,
	 * your program may enter an infinite loop and crash.
	 *
	 * @param `parent` - the object to be cloned
	 * @param `circular` - set to true if the object to be cloned may contain
	 *    circular references. (optional - true by default)
	 * @param `depth` - set to a number if the object is only to be cloned to
	 *    a particular depth. (optional - defaults to Infinity)
	 * @param `prototype` - sets the prototype to be used when cloning an object.
	 *    (optional - defaults to parent prototype).
	*/function clone(parent,circular,depth,prototype){if(typeof circular==='object'){depth=circular.depth;prototype=circular.prototype;circular=circular.circular;}// maintain two arrays for circular references, where corresponding parents
// and children have the same index
var allParents=[];var allChildren=[];var useBuffer=typeof Buffer!='undefined';if(typeof circular=='undefined')circular=true;if(typeof depth=='undefined')depth=Infinity;// recurse this function so we don't reset allParents and allChildren
function _clone(parent,depth){// cloning null always returns null
if(parent===null)return null;if(depth==0)return parent;var child;var proto;if(typeof parent!='object'){return parent;}if(clone.__isArray(parent)){child=[];}else if(clone.__isRegExp(parent)){child=new RegExp(parent.source,__getRegExpFlags(parent));if(parent.lastIndex)child.lastIndex=parent.lastIndex;}else if(clone.__isDate(parent)){child=new Date(parent.getTime());}else if(useBuffer&&Buffer.isBuffer(parent)){if(Buffer.allocUnsafe){// Node.js >= 4.5.0
child=Buffer.allocUnsafe(parent.length);}else{// Older Node.js versions
child=new Buffer(parent.length);}parent.copy(child);return child;}else{if(typeof prototype=='undefined'){proto=Object.getPrototypeOf(parent);child=Object.create(proto);}else{child=Object.create(prototype);proto=prototype;}}if(circular){var index=allParents.indexOf(parent);if(index!=-1){return allChildren[index];}allParents.push(parent);allChildren.push(child);}for(var i in parent){var attrs;if(proto){attrs=Object.getOwnPropertyDescriptor(proto,i);}if(attrs&&attrs.set==null){continue;}child[i]=_clone(parent[i],depth-1);}return child;}return _clone(parent,depth);}/**
	 * Simple flat clone using prototype, accepts only objects, usefull for property
	 * override on FLAT configuration object (no nested props).
	 *
	 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
	 * works.
	 */clone.clonePrototype=function clonePrototype(parent){if(parent===null)return null;var c=function(){};c.prototype=parent;return new c();};// private utility functions
function __objToStr(o){return Object.prototype.toString.call(o);}clone.__objToStr=__objToStr;function __isDate(o){return typeof o==='object'&&__objToStr(o)==='[object Date]';}clone.__isDate=__isDate;function __isArray(o){return typeof o==='object'&&__objToStr(o)==='[object Array]';}clone.__isArray=__isArray;function __isRegExp(o){return typeof o==='object'&&__objToStr(o)==='[object RegExp]';}clone.__isRegExp=__isRegExp;function __getRegExpFlags(re){var flags='';if(re.global)flags+='g';if(re.ignoreCase)flags+='i';if(re.multiline)flags+='m';return flags;}clone.__getRegExpFlags=__getRegExpFlags;return clone;}();if(module.exports){module.exports=clone;}})(clone$1);var cloneExports=clone$1.exports;var clone=cloneExports;var defaults$1=function(options,defaults){options=options||{};Object.keys(defaults).forEach(function(key){if(typeof options[key]==='undefined'){options[key]=clone(defaults[key]);}});return options;};var combining$1=[[0x0300,0x036F],[0x0483,0x0486],[0x0488,0x0489],[0x0591,0x05BD],[0x05BF,0x05BF],[0x05C1,0x05C2],[0x05C4,0x05C5],[0x05C7,0x05C7],[0x0600,0x0603],[0x0610,0x0615],[0x064B,0x065E],[0x0670,0x0670],[0x06D6,0x06E4],[0x06E7,0x06E8],[0x06EA,0x06ED],[0x070F,0x070F],[0x0711,0x0711],[0x0730,0x074A],[0x07A6,0x07B0],[0x07EB,0x07F3],[0x0901,0x0902],[0x093C,0x093C],[0x0941,0x0948],[0x094D,0x094D],[0x0951,0x0954],[0x0962,0x0963],[0x0981,0x0981],[0x09BC,0x09BC],[0x09C1,0x09C4],[0x09CD,0x09CD],[0x09E2,0x09E3],[0x0A01,0x0A02],[0x0A3C,0x0A3C],[0x0A41,0x0A42],[0x0A47,0x0A48],[0x0A4B,0x0A4D],[0x0A70,0x0A71],[0x0A81,0x0A82],[0x0ABC,0x0ABC],[0x0AC1,0x0AC5],[0x0AC7,0x0AC8],[0x0ACD,0x0ACD],[0x0AE2,0x0AE3],[0x0B01,0x0B01],[0x0B3C,0x0B3C],[0x0B3F,0x0B3F],[0x0B41,0x0B43],[0x0B4D,0x0B4D],[0x0B56,0x0B56],[0x0B82,0x0B82],[0x0BC0,0x0BC0],[0x0BCD,0x0BCD],[0x0C3E,0x0C40],[0x0C46,0x0C48],[0x0C4A,0x0C4D],[0x0C55,0x0C56],[0x0CBC,0x0CBC],[0x0CBF,0x0CBF],[0x0CC6,0x0CC6],[0x0CCC,0x0CCD],[0x0CE2,0x0CE3],[0x0D41,0x0D43],[0x0D4D,0x0D4D],[0x0DCA,0x0DCA],[0x0DD2,0x0DD4],[0x0DD6,0x0DD6],[0x0E31,0x0E31],[0x0E34,0x0E3A],[0x0E47,0x0E4E],[0x0EB1,0x0EB1],[0x0EB4,0x0EB9],[0x0EBB,0x0EBC],[0x0EC8,0x0ECD],[0x0F18,0x0F19],[0x0F35,0x0F35],[0x0F37,0x0F37],[0x0F39,0x0F39],[0x0F71,0x0F7E],[0x0F80,0x0F84],[0x0F86,0x0F87],[0x0F90,0x0F97],[0x0F99,0x0FBC],[0x0FC6,0x0FC6],[0x102D,0x1030],[0x1032,0x1032],[0x1036,0x1037],[0x1039,0x1039],[0x1058,0x1059],[0x1160,0x11FF],[0x135F,0x135F],[0x1712,0x1714],[0x1732,0x1734],[0x1752,0x1753],[0x1772,0x1773],[0x17B4,0x17B5],[0x17B7,0x17BD],[0x17C6,0x17C6],[0x17C9,0x17D3],[0x17DD,0x17DD],[0x180B,0x180D],[0x18A9,0x18A9],[0x1920,0x1922],[0x1927,0x1928],[0x1932,0x1932],[0x1939,0x193B],[0x1A17,0x1A18],[0x1B00,0x1B03],[0x1B34,0x1B34],[0x1B36,0x1B3A],[0x1B3C,0x1B3C],[0x1B42,0x1B42],[0x1B6B,0x1B73],[0x1DC0,0x1DCA],[0x1DFE,0x1DFF],[0x200B,0x200F],[0x202A,0x202E],[0x2060,0x2063],[0x206A,0x206F],[0x20D0,0x20EF],[0x302A,0x302F],[0x3099,0x309A],[0xA806,0xA806],[0xA80B,0xA80B],[0xA825,0xA826],[0xFB1E,0xFB1E],[0xFE00,0xFE0F],[0xFE20,0xFE23],[0xFEFF,0xFEFF],[0xFFF9,0xFFFB],[0x10A01,0x10A03],[0x10A05,0x10A06],[0x10A0C,0x10A0F],[0x10A38,0x10A3A],[0x10A3F,0x10A3F],[0x1D167,0x1D169],[0x1D173,0x1D182],[0x1D185,0x1D18B],[0x1D1AA,0x1D1AD],[0x1D242,0x1D244],[0xE0001,0xE0001],[0xE0020,0xE007F],[0xE0100,0xE01EF]];var defaults=defaults$1;var combining=combining$1;var DEFAULTS={nul:0,control:0};wcwidth$2.exports=function wcwidth(str){return wcswidth(str,DEFAULTS);};wcwidth$2.exports.config=function(opts){opts=defaults(opts||{},DEFAULTS);return function wcwidth(str){return wcswidth(str,opts);};};/*
 *  The following functions define the column width of an ISO 10646
 *  character as follows:
 *  - The null character (U+0000) has a column width of 0.
 *  - Other C0/C1 control characters and DEL will lead to a return value
 *    of -1.
 *  - Non-spacing and enclosing combining characters (general category
 *    code Mn or Me in the
 *    Unicode database) have a column width of 0.
 *  - SOFT HYPHEN (U+00AD) has a column width of 1.
 *  - Other format characters (general category code Cf in the Unicode
 *    database) and ZERO WIDTH
 *    SPACE (U+200B) have a column width of 0.
 *  - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF)
 *    have a column width of 0.
 *  - Spacing characters in the East Asian Wide (W) or East Asian
 *    Full-width (F) category as
 *    defined in Unicode Technical Report #11 have a column width of 2.
 *  - All remaining characters (including all printable ISO 8859-1 and
 *    WGL4 characters, Unicode control characters, etc.) have a column
 *    width of 1.
 *  This implementation assumes that characters are encoded in ISO 10646.
*/function wcswidth(str,opts){if(typeof str!=='string')return wcwidth$1(str,opts);var s=0;for(var i=0;i<str.length;i++){var n=wcwidth$1(str.charCodeAt(i),opts);if(n<0)return-1;s+=n;}return s;}function wcwidth$1(ucs,opts){// test for 8-bit control characters
if(ucs===0)return opts.nul;if(ucs<32||ucs>=0x7f&&ucs<0xa0)return opts.control;// binary search in table of non-spacing characters
if(bisearch(ucs))return 0;// if we arrive here, ucs is not a combining or C0/C1 control character
return 1+(ucs>=0x1100&&(ucs<=0x115f||// Hangul Jamo init. consonants
ucs==0x2329||ucs==0x232a||ucs>=0x2e80&&ucs<=0xa4cf&&ucs!=0x303f||// CJK ... Yi
ucs>=0xac00&&ucs<=0xd7a3||// Hangul Syllables
ucs>=0xf900&&ucs<=0xfaff||// CJK Compatibility Ideographs
ucs>=0xfe10&&ucs<=0xfe19||// Vertical forms
ucs>=0xfe30&&ucs<=0xfe6f||// CJK Compatibility Forms
ucs>=0xff00&&ucs<=0xff60||// Fullwidth Forms
ucs>=0xffe0&&ucs<=0xffe6||ucs>=0x20000&&ucs<=0x2fffd||ucs>=0x30000&&ucs<=0x3fffd));}function bisearch(ucs){var min=0;var max=combining.length-1;var mid;if(ucs<combining[0][0]||ucs>combining[max][1])return false;while(max>=min){mid=Math.floor((min+max)/2);if(ucs>combining[mid][1])min=mid+1;else if(ucs<combining[mid][0])max=mid-1;else return true;}return false;}var wcwidthExports=wcwidth$2.exports;var isInteractive$1=function(){let{stream=process.stdout}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return Boolean(stream&&stream.isTTY&&process.env.TERM!=='dumb'&&!('CI'in process.env));};var bl={exports:{}};var readable={exports:{}};var stream;var hasRequiredStream;function requireStream(){if(hasRequiredStream)return stream;hasRequiredStream=1;stream=require$$0__default$4.default;return stream;}var buffer_list;var hasRequiredBuffer_list;function requireBuffer_list(){if(hasRequiredBuffer_list)return buffer_list;hasRequiredBuffer_list=1;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,_toPropertyKey(descriptor.key),descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,"prototype",{writable:false});return Constructor;}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return typeof key==="symbol"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!=="object"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||"default");if(typeof res!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return(hint==="string"?String:Number)(input);}var _require=require$$0__default$7.default,Buffer=_require.Buffer;var _require2=require$$0__default$5.default,inspect=_require2.inspect;var custom=inspect&&inspect.custom||'inspect';function copyBuffer(src,target,offset){Buffer.prototype.copy.call(src,target,offset);}buffer_list=/*#__PURE__*/function(){function BufferList(){_classCallCheck(this,BufferList);this.head=null;this.tail=null;this.length=0;}_createClass(BufferList,[{key:"push",value:function push(v){var entry={data:v,next:null};if(this.length>0)this.tail.next=entry;else this.head=entry;this.tail=entry;++this.length;}},{key:"unshift",value:function unshift(v){var entry={data:v,next:this.head};if(this.length===0)this.tail=entry;this.head=entry;++this.length;}},{key:"shift",value:function shift(){if(this.length===0)return;var ret=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return ret;}},{key:"clear",value:function clear(){this.head=this.tail=null;this.length=0;}},{key:"join",value:function join(s){if(this.length===0)return'';var p=this.head;var ret=''+p.data;while(p=p.next)ret+=s+p.data;return ret;}},{key:"concat",value:function concat(n){if(this.length===0)return Buffer.alloc(0);var ret=Buffer.allocUnsafe(n>>>0);var p=this.head;var i=0;while(p){copyBuffer(p.data,ret,i);i+=p.data.length;p=p.next;}return ret;}// Consumes a specified amount of bytes or characters from the buffered data.
},{key:"consume",value:function consume(n,hasStrings){var ret;if(n<this.head.data.length){// `slice` is the same for buffers and strings.
ret=this.head.data.slice(0,n);this.head.data=this.head.data.slice(n);}else if(n===this.head.data.length){// First chunk is a perfect match.
ret=this.shift();}else{// Result spans more than one buffer.
ret=hasStrings?this._getString(n):this._getBuffer(n);}return ret;}},{key:"first",value:function first(){return this.head.data;}// Consumes a specified amount of characters from the buffered data.
},{key:"_getString",value:function _getString(n){var p=this.head;var c=1;var ret=p.data;n-=ret.length;while(p=p.next){var str=p.data;var nb=n>str.length?str.length:n;if(nb===str.length)ret+=str;else ret+=str.slice(0,n);n-=nb;if(n===0){if(nb===str.length){++c;if(p.next)this.head=p.next;else this.head=this.tail=null;}else{this.head=p;p.data=str.slice(nb);}break;}++c;}this.length-=c;return ret;}// Consumes a specified amount of bytes from the buffered data.
},{key:"_getBuffer",value:function _getBuffer(n){var ret=Buffer.allocUnsafe(n);var p=this.head;var c=1;p.data.copy(ret);n-=p.data.length;while(p=p.next){var buf=p.data;var nb=n>buf.length?buf.length:n;buf.copy(ret,ret.length-n,0,nb);n-=nb;if(n===0){if(nb===buf.length){++c;if(p.next)this.head=p.next;else this.head=this.tail=null;}else{this.head=p;p.data=buf.slice(nb);}break;}++c;}this.length-=c;return ret;}// Make sure the linked list only shows the minimal necessary information.
},{key:custom,value:function value(_,options){return inspect(this,_objectSpread(_objectSpread({},options),{},{// Only inspect one level.
depth:0,// It should not recurse.
customInspect:false}));}}]);return BufferList;}();return buffer_list;}var destroy_1;var hasRequiredDestroy;function requireDestroy(){if(hasRequiredDestroy)return destroy_1;hasRequiredDestroy=1;// undocumented cb() API, needed for core, not for public API
function destroy(err,cb){var _this=this;var readableDestroyed=this._readableState&&this._readableState.destroyed;var writableDestroyed=this._writableState&&this._writableState.destroyed;if(readableDestroyed||writableDestroyed){if(cb){cb(err);}else if(err){if(!this._writableState){process.nextTick(emitErrorNT,this,err);}else if(!this._writableState.errorEmitted){this._writableState.errorEmitted=true;process.nextTick(emitErrorNT,this,err);}}return this;}// we set destroyed to true before firing error callbacks in order
// to make it re-entrance safe in case destroy() is called within callbacks
if(this._readableState){this._readableState.destroyed=true;}// if this is a duplex stream mark the writable part as destroyed as well
if(this._writableState){this._writableState.destroyed=true;}this._destroy(err||null,function(err){if(!cb&&err){if(!_this._writableState){process.nextTick(emitErrorAndCloseNT,_this,err);}else if(!_this._writableState.errorEmitted){_this._writableState.errorEmitted=true;process.nextTick(emitErrorAndCloseNT,_this,err);}else{process.nextTick(emitCloseNT,_this);}}else if(cb){process.nextTick(emitCloseNT,_this);cb(err);}else{process.nextTick(emitCloseNT,_this);}});return this;}function emitErrorAndCloseNT(self,err){emitErrorNT(self,err);emitCloseNT(self);}function emitCloseNT(self){if(self._writableState&&!self._writableState.emitClose)return;if(self._readableState&&!self._readableState.emitClose)return;self.emit('close');}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false;}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finalCalled=false;this._writableState.prefinished=false;this._writableState.finished=false;this._writableState.errorEmitted=false;}}function emitErrorNT(self,err){self.emit('error',err);}function errorOrDestroy(stream,err){// We have tests that rely on errors being emitted
// in the same tick, so changing this is semver major.
// For now when you opt-in to autoDestroy we allow
// the error to be emitted nextTick. In a future
// semver major update we should change the default to this.
var rState=stream._readableState;var wState=stream._writableState;if(rState&&rState.autoDestroy||wState&&wState.autoDestroy)stream.destroy(err);else stream.emit('error',err);}destroy_1={destroy:destroy,undestroy:undestroy,errorOrDestroy:errorOrDestroy};return destroy_1;}var errors={};var hasRequiredErrors;function requireErrors(){if(hasRequiredErrors)return errors;hasRequiredErrors=1;const codes={};function createErrorType(code,message,Base){if(!Base){Base=Error;}function getMessage(arg1,arg2,arg3){if(typeof message==='string'){return message;}else{return message(arg1,arg2,arg3);}}class NodeError extends Base{constructor(arg1,arg2,arg3){super(getMessage(arg1,arg2,arg3));}}NodeError.prototype.name=Base.name;NodeError.prototype.code=code;codes[code]=NodeError;}// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js
function oneOf(expected,thing){if(Array.isArray(expected)){const len=expected.length;expected=expected.map(i=>String(i));if(len>2){return"one of ".concat(thing," ").concat(expected.slice(0,len-1).join(', '),", or ")+expected[len-1];}else if(len===2){return"one of ".concat(thing," ").concat(expected[0]," or ").concat(expected[1]);}else{return"of ".concat(thing," ").concat(expected[0]);}}else{return"of ".concat(thing," ").concat(String(expected));}}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith
function startsWith(str,search,pos){return str.substr(!pos||pos<0?0:+pos,search.length)===search;}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith
function endsWith(str,search,this_len){if(this_len===undefined||this_len>str.length){this_len=str.length;}return str.substring(this_len-search.length,this_len)===search;}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes
function includes(str,search,start){if(typeof start!=='number'){start=0;}if(start+search.length>str.length){return false;}else{return str.indexOf(search,start)!==-1;}}createErrorType('ERR_INVALID_OPT_VALUE',function(name,value){return'The value "'+value+'" is invalid for option "'+name+'"';},TypeError);createErrorType('ERR_INVALID_ARG_TYPE',function(name,expected,actual){// determiner: 'must be' or 'must not be'
let determiner;if(typeof expected==='string'&&startsWith(expected,'not ')){determiner='must not be';expected=expected.replace(/^not /,'');}else{determiner='must be';}let msg;if(endsWith(name,' argument')){// For cases like 'first argument'
msg="The ".concat(name," ").concat(determiner," ").concat(oneOf(expected,'type'));}else{const type=includes(name,'.')?'property':'argument';msg="The \"".concat(name,"\" ").concat(type," ").concat(determiner," ").concat(oneOf(expected,'type'));}msg+=". Received type ".concat(typeof actual);return msg;},TypeError);createErrorType('ERR_STREAM_PUSH_AFTER_EOF','stream.push() after EOF');createErrorType('ERR_METHOD_NOT_IMPLEMENTED',function(name){return'The '+name+' method is not implemented';});createErrorType('ERR_STREAM_PREMATURE_CLOSE','Premature close');createErrorType('ERR_STREAM_DESTROYED',function(name){return'Cannot call '+name+' after a stream was destroyed';});createErrorType('ERR_MULTIPLE_CALLBACK','Callback called multiple times');createErrorType('ERR_STREAM_CANNOT_PIPE','Cannot pipe, not readable');createErrorType('ERR_STREAM_WRITE_AFTER_END','write after end');createErrorType('ERR_STREAM_NULL_VALUES','May not write null values to stream',TypeError);createErrorType('ERR_UNKNOWN_ENCODING',function(arg){return'Unknown encoding: '+arg;},TypeError);createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT','stream.unshift() after end event');errors.codes=codes;return errors;}var state;var hasRequiredState;function requireState(){if(hasRequiredState)return state;hasRequiredState=1;var ERR_INVALID_OPT_VALUE=requireErrors().codes.ERR_INVALID_OPT_VALUE;function highWaterMarkFrom(options,isDuplex,duplexKey){return options.highWaterMark!=null?options.highWaterMark:isDuplex?options[duplexKey]:null;}function getHighWaterMark(state,options,duplexKey,isDuplex){var hwm=highWaterMarkFrom(options,isDuplex,duplexKey);if(hwm!=null){if(!(isFinite(hwm)&&Math.floor(hwm)===hwm)||hwm<0){var name=isDuplex?duplexKey:'highWaterMark';throw new ERR_INVALID_OPT_VALUE(name,hwm);}return Math.floor(hwm);}// Default value
return state.objectMode?16:16*1024;}state={getHighWaterMark:getHighWaterMark};return state;}var node;var hasRequiredNode;function requireNode(){if(hasRequiredNode)return node;hasRequiredNode=1;/**
	 * For Node.js, simply re-export the core `util.deprecate` function.
	 */node=require$$0__default$5.default.deprecate;return node;}var _stream_writable;var hasRequired_stream_writable;function require_stream_writable(){if(hasRequired_stream_writable)return _stream_writable;hasRequired_stream_writable=1;_stream_writable=Writable;// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state){var _this=this;this.next=null;this.entry=null;this.finish=function(){onCorkedFinish(_this,state);};}/* </replacement> */ /*<replacement>*/var Duplex;/*</replacement>*/Writable.WritableState=WritableState;/*<replacement>*/var internalUtil={deprecate:requireNode()};/*</replacement>*/ /*<replacement>*/var Stream=requireStream();/*</replacement>*/var Buffer=require$$0__default$7.default.Buffer;var OurUint8Array=(typeof loadEnv.commonjsGlobal!=='undefined'?loadEnv.commonjsGlobal:typeof window!=='undefined'?window:typeof self!=='undefined'?self:{}).Uint8Array||function(){};function _uint8ArrayToBuffer(chunk){return Buffer.from(chunk);}function _isUint8Array(obj){return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;}var destroyImpl=requireDestroy();var _require=requireState(),getHighWaterMark=_require.getHighWaterMark;var _require$codes=requireErrors().codes,ERR_INVALID_ARG_TYPE=_require$codes.ERR_INVALID_ARG_TYPE,ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,ERR_MULTIPLE_CALLBACK=_require$codes.ERR_MULTIPLE_CALLBACK,ERR_STREAM_CANNOT_PIPE=_require$codes.ERR_STREAM_CANNOT_PIPE,ERR_STREAM_DESTROYED=_require$codes.ERR_STREAM_DESTROYED,ERR_STREAM_NULL_VALUES=_require$codes.ERR_STREAM_NULL_VALUES,ERR_STREAM_WRITE_AFTER_END=_require$codes.ERR_STREAM_WRITE_AFTER_END,ERR_UNKNOWN_ENCODING=_require$codes.ERR_UNKNOWN_ENCODING;var errorOrDestroy=destroyImpl.errorOrDestroy;inheritsExports(Writable,Stream);function nop(){}function WritableState(options,stream,isDuplex){Duplex=Duplex||require_stream_duplex();options=options||{};// Duplex streams are both readable and writable, but share
// the same options object.
// However, some cases require setting options to different
// values for the readable and the writable sides of the duplex stream,
// e.g. options.readableObjectMode vs. options.writableObjectMode, etc.
if(typeof isDuplex!=='boolean')isDuplex=stream instanceof Duplex;// object stream flag to indicate whether or not this stream
// contains buffers or objects.
this.objectMode=!!options.objectMode;if(isDuplex)this.objectMode=this.objectMode||!!options.writableObjectMode;// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()
this.highWaterMark=getHighWaterMark(this,options,'writableHighWaterMark',isDuplex);// if _final has been called
this.finalCalled=false;// drain event flag.
this.needDrain=false;// at the start of calling end()
this.ending=false;// when end() has been called, and returned
this.ended=false;// when 'finish' is emitted
this.finished=false;// has it been destroyed
this.destroyed=false;// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.
var noDecode=options.decodeStrings===false;this.decodeStrings=!noDecode;// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=options.defaultEncoding||'utf8';// not an actual buffer we keep track of, but a measurement
// of how much we're waiting to get pushed to some underlying
// socket or file.
this.length=0;// a flag to see when we're in the middle of a write.
this.writing=false;// when true all writes will be buffered until .uncork() call
this.corked=0;// a flag to be able to tell if the onwrite cb is called immediately,
// or on a later tick.  We set this to true at first, because any
// actions that shouldn't happen until "later" should generally also
// not happen before the first write call.
this.sync=true;// a flag to know if we're processing previously buffered items, which
// may call the _write() callback in the same tick, so that we don't
// end up in an overlapped onwrite situation.
this.bufferProcessing=false;// the callback that's passed to _write(chunk,cb)
this.onwrite=function(er){onwrite(stream,er);};// the callback that the user supplies to write(chunk,encoding,cb)
this.writecb=null;// the amount that is being written when _write is called.
this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;// number of pending user-supplied write callbacks
// this must be 0 before 'finish' can be emitted
this.pendingcb=0;// emit prefinish if the only thing we're waiting for is _write cbs
// This is relevant for synchronous Transform streams
this.prefinished=false;// True if the error was already emitted and should not be thrown again
this.errorEmitted=false;// Should close be emitted on destroy. Defaults to true.
this.emitClose=options.emitClose!==false;// Should .destroy() be called after 'finish' (and potentially 'end')
this.autoDestroy=!!options.autoDestroy;// count buffered requests
this.bufferedRequestCount=0;// allocate the first CorkedRequest, there is always
// one allocated and free to use, and we maintain at most two
this.corkedRequestsFree=new CorkedRequest(this);}WritableState.prototype.getBuffer=function getBuffer(){var current=this.bufferedRequest;var out=[];while(current){out.push(current);current=current.next;}return out;};(function(){try{Object.defineProperty(WritableState.prototype,'buffer',{get:internalUtil.deprecate(function writableStateBufferGetter(){return this.getBuffer();},'_writableState.buffer is deprecated. Use _writableState.getBuffer '+'instead.','DEP0003')});}catch(_){}})();// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;if(typeof Symbol==='function'&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==='function'){realHasInstance=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function value(object){if(realHasInstance.call(this,object))return true;if(this!==Writable)return false;return object&&object._writableState instanceof WritableState;}});}else{realHasInstance=function realHasInstance(object){return object instanceof this;};}function Writable(options){Duplex=Duplex||require_stream_duplex();// Writable ctor is applied to Duplexes, too.
// `realHasInstance` is necessary because using plain `instanceof`
// would return false, as no `_writableState` property is attached.
// Trying to use the custom `instanceof` for Writable here will also break the
// Node.js LazyTransform implementation, which has a non-trivial getter for
// `_writableState` that would lead to infinite recursion.
// Checking for a Stream.Duplex instance is faster here instead of inside
// the WritableState constructor, at least with V8 6.5
var isDuplex=this instanceof Duplex;if(!isDuplex&&!realHasInstance.call(Writable,this))return new Writable(options);this._writableState=new WritableState(options,this,isDuplex);// legacy.
this.writable=true;if(options){if(typeof options.write==='function')this._write=options.write;if(typeof options.writev==='function')this._writev=options.writev;if(typeof options.destroy==='function')this._destroy=options.destroy;if(typeof options.final==='function')this._final=options.final;}Stream.call(this);}// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe=function(){errorOrDestroy(this,new ERR_STREAM_CANNOT_PIPE());};function writeAfterEnd(stream,cb){var er=new ERR_STREAM_WRITE_AFTER_END();// TODO: defer error events consistently everywhere, not just the cb
errorOrDestroy(stream,er);process.nextTick(cb,er);}// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream,state,chunk,cb){var er;if(chunk===null){er=new ERR_STREAM_NULL_VALUES();}else if(typeof chunk!=='string'&&!state.objectMode){er=new ERR_INVALID_ARG_TYPE('chunk',['string','Buffer'],chunk);}if(er){errorOrDestroy(stream,er);process.nextTick(cb,er);return false;}return true;}Writable.prototype.write=function(chunk,encoding,cb){var state=this._writableState;var ret=false;var isBuf=!state.objectMode&&_isUint8Array(chunk);if(isBuf&&!Buffer.isBuffer(chunk)){chunk=_uint8ArrayToBuffer(chunk);}if(typeof encoding==='function'){cb=encoding;encoding=null;}if(isBuf)encoding='buffer';else if(!encoding)encoding=state.defaultEncoding;if(typeof cb!=='function')cb=nop;if(state.ending)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state,chunk,cb)){state.pendingcb++;ret=writeOrBuffer(this,state,isBuf,chunk,encoding,cb);}return ret;};Writable.prototype.cork=function(){this._writableState.corked++;};Writable.prototype.uncork=function(){var state=this._writableState;if(state.corked){state.corked--;if(!state.writing&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest)clearBuffer(this,state);}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){// node::ParseEncoding() requires lower case.
if(typeof encoding==='string')encoding=encoding.toLowerCase();if(!(['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le','raw'].indexOf((encoding+'').toLowerCase())>-1))throw new ERR_UNKNOWN_ENCODING(encoding);this._writableState.defaultEncoding=encoding;return this;};Object.defineProperty(Writable.prototype,'writableBuffer',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer();}});function decodeChunk(state,chunk,encoding){if(!state.objectMode&&state.decodeStrings!==false&&typeof chunk==='string'){chunk=Buffer.from(chunk,encoding);}return chunk;}Object.defineProperty(Writable.prototype,'writableHighWaterMark',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState.highWaterMark;}});// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream,state,isBuf,chunk,encoding,cb){if(!isBuf){var newChunk=decodeChunk(state,chunk,encoding);if(chunk!==newChunk){isBuf=true;encoding='buffer';chunk=newChunk;}}var len=state.objectMode?1:chunk.length;state.length+=len;var ret=state.length<state.highWaterMark;// we must ensure that previous needDrain will not be reset to false.
if(!ret)state.needDrain=true;if(state.writing||state.corked){var last=state.lastBufferedRequest;state.lastBufferedRequest={chunk:chunk,encoding:encoding,isBuf:isBuf,callback:cb,next:null};if(last){last.next=state.lastBufferedRequest;}else{state.bufferedRequest=state.lastBufferedRequest;}state.bufferedRequestCount+=1;}else{doWrite(stream,state,false,len,chunk,encoding,cb);}return ret;}function doWrite(stream,state,writev,len,chunk,encoding,cb){state.writelen=len;state.writecb=cb;state.writing=true;state.sync=true;if(state.destroyed)state.onwrite(new ERR_STREAM_DESTROYED('write'));else if(writev)stream._writev(chunk,state.onwrite);else stream._write(chunk,encoding,state.onwrite);state.sync=false;}function onwriteError(stream,state,sync,er,cb){--state.pendingcb;if(sync){// defer the callback if we are being called synchronously
// to avoid piling up things on the stack
process.nextTick(cb,er);// this can emit finish, and it will always happen
// after error
process.nextTick(finishMaybe,stream,state);stream._writableState.errorEmitted=true;errorOrDestroy(stream,er);}else{// the caller expect this to happen before if
// it is async
cb(er);stream._writableState.errorEmitted=true;errorOrDestroy(stream,er);// this can emit finish, but finish must
// always follow error
finishMaybe(stream,state);}}function onwriteStateUpdate(state){state.writing=false;state.writecb=null;state.length-=state.writelen;state.writelen=0;}function onwrite(stream,er){var state=stream._writableState;var sync=state.sync;var cb=state.writecb;if(typeof cb!=='function')throw new ERR_MULTIPLE_CALLBACK();onwriteStateUpdate(state);if(er)onwriteError(stream,state,sync,er,cb);else{// Check if we're actually ready to finish, but don't emit yet
var finished=needFinish(state)||stream.destroyed;if(!finished&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest){clearBuffer(stream,state);}if(sync){process.nextTick(afterWrite,stream,state,finished,cb);}else{afterWrite(stream,state,finished,cb);}}}function afterWrite(stream,state,finished,cb){if(!finished)onwriteDrain(stream,state);state.pendingcb--;cb();finishMaybe(stream,state);}// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream,state){if(state.length===0&&state.needDrain){state.needDrain=false;stream.emit('drain');}}// if there's something in the buffer waiting, then process it
function clearBuffer(stream,state){state.bufferProcessing=true;var entry=state.bufferedRequest;if(stream._writev&&entry&&entry.next){// Fast case, write everything using _writev()
var l=state.bufferedRequestCount;var buffer=new Array(l);var holder=state.corkedRequestsFree;holder.entry=entry;var count=0;var allBuffers=true;while(entry){buffer[count]=entry;if(!entry.isBuf)allBuffers=false;entry=entry.next;count+=1;}buffer.allBuffers=allBuffers;doWrite(stream,state,true,state.length,buffer,'',holder.finish);// doWrite is almost always async, defer these to save a bit of time
// as the hot path ends with doWrite
state.pendingcb++;state.lastBufferedRequest=null;if(holder.next){state.corkedRequestsFree=holder.next;holder.next=null;}else{state.corkedRequestsFree=new CorkedRequest(state);}state.bufferedRequestCount=0;}else{// Slow case, write chunks one-by-one
while(entry){var chunk=entry.chunk;var encoding=entry.encoding;var cb=entry.callback;var len=state.objectMode?1:chunk.length;doWrite(stream,state,false,len,chunk,encoding,cb);entry=entry.next;state.bufferedRequestCount--;// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.
if(state.writing){break;}}if(entry===null)state.lastBufferedRequest=null;}state.bufferedRequest=entry;state.bufferProcessing=false;}Writable.prototype._write=function(chunk,encoding,cb){cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));};Writable.prototype._writev=null;Writable.prototype.end=function(chunk,encoding,cb){var state=this._writableState;if(typeof chunk==='function'){cb=chunk;chunk=null;encoding=null;}else if(typeof encoding==='function'){cb=encoding;encoding=null;}if(chunk!==null&&chunk!==undefined)this.write(chunk,encoding);// .end() fully uncorks
if(state.corked){state.corked=1;this.uncork();}// ignore unnecessary end() calls.
if(!state.ending)endWritable(this,state,cb);return this;};Object.defineProperty(Writable.prototype,'writableLength',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState.length;}});function needFinish(state){return state.ending&&state.length===0&&state.bufferedRequest===null&&!state.finished&&!state.writing;}function callFinal(stream,state){stream._final(function(err){state.pendingcb--;if(err){errorOrDestroy(stream,err);}state.prefinished=true;stream.emit('prefinish');finishMaybe(stream,state);});}function prefinish(stream,state){if(!state.prefinished&&!state.finalCalled){if(typeof stream._final==='function'&&!state.destroyed){state.pendingcb++;state.finalCalled=true;process.nextTick(callFinal,stream,state);}else{state.prefinished=true;stream.emit('prefinish');}}}function finishMaybe(stream,state){var need=needFinish(state);if(need){prefinish(stream,state);if(state.pendingcb===0){state.finished=true;stream.emit('finish');if(state.autoDestroy){// In case of duplex streams we need a way to detect
// if the readable side is ready for autoDestroy as well
var rState=stream._readableState;if(!rState||rState.autoDestroy&&rState.endEmitted){stream.destroy();}}}}return need;}function endWritable(stream,state,cb){state.ending=true;finishMaybe(stream,state);if(cb){if(state.finished)process.nextTick(cb);else stream.once('finish',cb);}state.ended=true;stream.writable=false;}function onCorkedFinish(corkReq,state,err){var entry=corkReq.entry;corkReq.entry=null;while(entry){var cb=entry.callback;state.pendingcb--;cb(err);entry=entry.next;}// reuse the free corkReq.
state.corkedRequestsFree.next=corkReq;}Object.defineProperty(Writable.prototype,'destroyed',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){if(this._writableState===undefined){return false;}return this._writableState.destroyed;},set:function set(value){// we ignore the value if the stream
// has not been initialized yet
if(!this._writableState){return;}// backward compatibility, the user is explicitly
// managing destroyed
this._writableState.destroyed=value;}});Writable.prototype.destroy=destroyImpl.destroy;Writable.prototype._undestroy=destroyImpl.undestroy;Writable.prototype._destroy=function(err,cb){cb(err);};return _stream_writable;}var _stream_duplex;var hasRequired_stream_duplex;function require_stream_duplex(){if(hasRequired_stream_duplex)return _stream_duplex;hasRequired_stream_duplex=1;/*<replacement>*/var objectKeys=Object.keys||function(obj){var keys=[];for(var key in obj)keys.push(key);return keys;};/*</replacement>*/_stream_duplex=Duplex;var Readable=require_stream_readable();var Writable=require_stream_writable();inheritsExports(Duplex,Readable);{// Allow the keys array to be GC'ed.
var keys=objectKeys(Writable.prototype);for(var v=0;v<keys.length;v++){var method=keys[v];if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method];}}function Duplex(options){if(!(this instanceof Duplex))return new Duplex(options);Readable.call(this,options);Writable.call(this,options);this.allowHalfOpen=true;if(options){if(options.readable===false)this.readable=false;if(options.writable===false)this.writable=false;if(options.allowHalfOpen===false){this.allowHalfOpen=false;this.once('end',onend);}}}Object.defineProperty(Duplex.prototype,'writableHighWaterMark',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState.highWaterMark;}});Object.defineProperty(Duplex.prototype,'writableBuffer',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer();}});Object.defineProperty(Duplex.prototype,'writableLength',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._writableState.length;}});// the no-half-open enforcer
function onend(){// If the writable side ended, then we're ok.
if(this._writableState.ended)return;// no more data can be written.
// But allow more writes to happen in this tick.
process.nextTick(onEndNT,this);}function onEndNT(self){self.end();}Object.defineProperty(Duplex.prototype,'destroyed',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){if(this._readableState===undefined||this._writableState===undefined){return false;}return this._readableState.destroyed&&this._writableState.destroyed;},set:function set(value){// we ignore the value if the stream
// has not been initialized yet
if(this._readableState===undefined||this._writableState===undefined){return;}// backward compatibility, the user is explicitly
// managing destroyed
this._readableState.destroyed=value;this._writableState.destroyed=value;}});return _stream_duplex;}var string_decoder$1={};var safeBuffer$1={exports:{}};/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */var hasRequiredSafeBuffer$1;function requireSafeBuffer$1(){if(hasRequiredSafeBuffer$1)return safeBuffer$1.exports;hasRequiredSafeBuffer$1=1;(function(module,exports){/* eslint-disable node/no-deprecated-api */var buffer=require$$0__default$7.default;var Buffer=buffer.Buffer;// alternative to using Object.keys for old browsers
function copyProps(src,dst){for(var key in src){dst[key]=src[key];}}if(Buffer.from&&Buffer.alloc&&Buffer.allocUnsafe&&Buffer.allocUnsafeSlow){module.exports=buffer;}else{// Copy properties from require('buffer')
copyProps(buffer,exports);exports.Buffer=SafeBuffer;}function SafeBuffer(arg,encodingOrOffset,length){return Buffer(arg,encodingOrOffset,length);}SafeBuffer.prototype=Object.create(Buffer.prototype);// Copy static methods from Buffer
copyProps(Buffer,SafeBuffer);SafeBuffer.from=function(arg,encodingOrOffset,length){if(typeof arg==='number'){throw new TypeError('Argument must not be a number');}return Buffer(arg,encodingOrOffset,length);};SafeBuffer.alloc=function(size,fill,encoding){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}var buf=Buffer(size);if(fill!==undefined){if(typeof encoding==='string'){buf.fill(fill,encoding);}else{buf.fill(fill);}}else{buf.fill(0);}return buf;};SafeBuffer.allocUnsafe=function(size){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}return Buffer(size);};SafeBuffer.allocUnsafeSlow=function(size){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}return buffer.SlowBuffer(size);};})(safeBuffer$1,safeBuffer$1.exports);return safeBuffer$1.exports;}var hasRequiredString_decoder$1;function requireString_decoder$1(){if(hasRequiredString_decoder$1)return string_decoder$1;hasRequiredString_decoder$1=1;/*<replacement>*/var Buffer=requireSafeBuffer$1().Buffer;/*</replacement>*/var isEncoding=Buffer.isEncoding||function(encoding){encoding=''+encoding;switch(encoding&&encoding.toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':return true;default:return false;}};function _normalizeEncoding(enc){if(!enc)return'utf8';var retried;while(true){switch(enc){case'utf8':case'utf-8':return'utf8';case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return'utf16le';case'latin1':case'binary':return'latin1';case'base64':case'ascii':case'hex':return enc;default:if(retried)return;// undefined
enc=(''+enc).toLowerCase();retried=true;}}}// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc){var nenc=_normalizeEncoding(enc);if(typeof nenc!=='string'&&(Buffer.isEncoding===isEncoding||!isEncoding(enc)))throw new Error('Unknown encoding: '+enc);return nenc||enc;}// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
string_decoder$1.StringDecoder=StringDecoder;function StringDecoder(encoding){this.encoding=normalizeEncoding(encoding);var nb;switch(this.encoding){case'utf16le':this.text=utf16Text;this.end=utf16End;nb=4;break;case'utf8':this.fillLast=utf8FillLast;nb=4;break;case'base64':this.text=base64Text;this.end=base64End;nb=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return;}this.lastNeed=0;this.lastTotal=0;this.lastChar=Buffer.allocUnsafe(nb);}StringDecoder.prototype.write=function(buf){if(buf.length===0)return'';var r;var i;if(this.lastNeed){r=this.fillLast(buf);if(r===undefined)return'';i=this.lastNeed;this.lastNeed=0;}else{i=0;}if(i<buf.length)return r?r+this.text(buf,i):this.text(buf,i);return r||'';};StringDecoder.prototype.end=utf8End;// Returns only complete characters in a Buffer
StringDecoder.prototype.text=utf8Text;// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast=function(buf){if(this.lastNeed<=buf.length){buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);this.lastNeed-=buf.length;};// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte){if(byte<=0x7F)return 0;else if(byte>>5===0x06)return 2;else if(byte>>4===0x0E)return 3;else if(byte>>3===0x1E)return 4;return byte>>6===0x02?-1:-2;}// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self,buf,i){var j=buf.length-1;if(j<i)return 0;var nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-1;return nb;}if(--j<i||nb===-2)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-2;return nb;}if(--j<i||nb===-2)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0){if(nb===2)nb=0;else self.lastNeed=nb-3;}return nb;}return 0;}// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self,buf,p){if((buf[0]&0xC0)!==0x80){self.lastNeed=0;return'\ufffd';}if(self.lastNeed>1&&buf.length>1){if((buf[1]&0xC0)!==0x80){self.lastNeed=1;return'\ufffd';}if(self.lastNeed>2&&buf.length>2){if((buf[2]&0xC0)!==0x80){self.lastNeed=2;return'\ufffd';}}}}// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf){var p=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,buf);if(r!==undefined)return r;if(this.lastNeed<=buf.length){buf.copy(this.lastChar,p,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}buf.copy(this.lastChar,p,0,buf.length);this.lastNeed-=buf.length;}// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf,i){var total=utf8CheckIncomplete(this,buf,i);if(!this.lastNeed)return buf.toString('utf8',i);this.lastTotal=total;var end=buf.length-(total-this.lastNeed);buf.copy(this.lastChar,0,end);return buf.toString('utf8',i,end);}// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed)return r+'\ufffd';return r;}// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf,i){if((buf.length-i)%2===0){var r=buf.toString('utf16le',i);if(r){var c=r.charCodeAt(r.length-1);if(c>=0xD800&&c<=0xDBFF){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];return r.slice(0,-1);}}return r;}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=buf[buf.length-1];return buf.toString('utf16le',i,buf.length-1);}// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed){var end=this.lastTotal-this.lastNeed;return r+this.lastChar.toString('utf16le',0,end);}return r;}function base64Text(buf,i){var n=(buf.length-i)%3;if(n===0)return buf.toString('base64',i);this.lastNeed=3-n;this.lastTotal=3;if(n===1){this.lastChar[0]=buf[buf.length-1];}else{this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];}return buf.toString('base64',i,buf.length-n);}function base64End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed)return r+this.lastChar.toString('base64',0,3-this.lastNeed);return r;}// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf){return buf.toString(this.encoding);}function simpleEnd(buf){return buf&&buf.length?this.write(buf):'';}return string_decoder$1;}var endOfStream;var hasRequiredEndOfStream;function requireEndOfStream(){if(hasRequiredEndOfStream)return endOfStream;hasRequiredEndOfStream=1;var ERR_STREAM_PREMATURE_CLOSE=requireErrors().codes.ERR_STREAM_PREMATURE_CLOSE;function once(callback){var called=false;return function(){if(called)return;called=true;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}callback.apply(this,args);};}function noop(){}function isRequest(stream){return stream.setHeader&&typeof stream.abort==='function';}function eos(stream,opts,callback){if(typeof opts==='function')return eos(stream,null,opts);if(!opts)opts={};callback=once(callback||noop);var readable=opts.readable||opts.readable!==false&&stream.readable;var writable=opts.writable||opts.writable!==false&&stream.writable;var onlegacyfinish=function onlegacyfinish(){if(!stream.writable)onfinish();};var writableEnded=stream._writableState&&stream._writableState.finished;var onfinish=function onfinish(){writable=false;writableEnded=true;if(!readable)callback.call(stream);};var readableEnded=stream._readableState&&stream._readableState.endEmitted;var onend=function onend(){readable=false;readableEnded=true;if(!writable)callback.call(stream);};var onerror=function onerror(err){callback.call(stream,err);};var onclose=function onclose(){var err;if(readable&&!readableEnded){if(!stream._readableState||!stream._readableState.ended)err=new ERR_STREAM_PREMATURE_CLOSE();return callback.call(stream,err);}if(writable&&!writableEnded){if(!stream._writableState||!stream._writableState.ended)err=new ERR_STREAM_PREMATURE_CLOSE();return callback.call(stream,err);}};var onrequest=function onrequest(){stream.req.on('finish',onfinish);};if(isRequest(stream)){stream.on('complete',onfinish);stream.on('abort',onclose);if(stream.req)onrequest();else stream.on('request',onrequest);}else if(writable&&!stream._writableState){// legacy streams
stream.on('end',onlegacyfinish);stream.on('close',onlegacyfinish);}stream.on('end',onend);stream.on('finish',onfinish);if(opts.error!==false)stream.on('error',onerror);stream.on('close',onclose);return function(){stream.removeListener('complete',onfinish);stream.removeListener('abort',onclose);stream.removeListener('request',onrequest);if(stream.req)stream.req.removeListener('finish',onfinish);stream.removeListener('end',onlegacyfinish);stream.removeListener('close',onlegacyfinish);stream.removeListener('finish',onfinish);stream.removeListener('end',onend);stream.removeListener('error',onerror);stream.removeListener('close',onclose);};}endOfStream=eos;return endOfStream;}var async_iterator;var hasRequiredAsync_iterator;function requireAsync_iterator(){if(hasRequiredAsync_iterator)return async_iterator;hasRequiredAsync_iterator=1;var _Object$setPrototypeO;function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return typeof key==="symbol"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!=="object"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||"default");if(typeof res!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return(hint==="string"?String:Number)(input);}var finished=requireEndOfStream();var kLastResolve=Symbol('lastResolve');var kLastReject=Symbol('lastReject');var kError=Symbol('error');var kEnded=Symbol('ended');var kLastPromise=Symbol('lastPromise');var kHandlePromise=Symbol('handlePromise');var kStream=Symbol('stream');function createIterResult(value,done){return{value:value,done:done};}function readAndResolve(iter){var resolve=iter[kLastResolve];if(resolve!==null){var data=iter[kStream].read();// we defer if data is null
// we can be expecting either 'end' or
// 'error'
if(data!==null){iter[kLastPromise]=null;iter[kLastResolve]=null;iter[kLastReject]=null;resolve(createIterResult(data,false));}}}function onReadable(iter){// we wait for the next tick, because it might
// emit an error with process.nextTick
process.nextTick(readAndResolve,iter);}function wrapForNext(lastPromise,iter){return function(resolve,reject){lastPromise.then(function(){if(iter[kEnded]){resolve(createIterResult(undefined,true));return;}iter[kHandlePromise](resolve,reject);},reject);};}var AsyncIteratorPrototype=Object.getPrototypeOf(function(){});var ReadableStreamAsyncIteratorPrototype=Object.setPrototypeOf((_Object$setPrototypeO={get stream(){return this[kStream];},next:function next(){var _this=this;// if we have detected an error in the meanwhile
// reject straight away
var error=this[kError];if(error!==null){return Promise.reject(error);}if(this[kEnded]){return Promise.resolve(createIterResult(undefined,true));}if(this[kStream].destroyed){// We need to defer via nextTick because if .destroy(err) is
// called, the error will be emitted via nextTick, and
// we cannot guarantee that there is no error lingering around
// waiting to be emitted.
return new Promise(function(resolve,reject){process.nextTick(function(){if(_this[kError]){reject(_this[kError]);}else{resolve(createIterResult(undefined,true));}});});}// if we have multiple next() calls
// we will wait for the previous Promise to finish
// this logic is optimized to support for await loops,
// where next() is only called once at a time
var lastPromise=this[kLastPromise];var promise;if(lastPromise){promise=new Promise(wrapForNext(lastPromise,this));}else{// fast path needed to support multiple this.push()
// without triggering the next() queue
var data=this[kStream].read();if(data!==null){return Promise.resolve(createIterResult(data,false));}promise=new Promise(this[kHandlePromise]);}this[kLastPromise]=promise;return promise;}},_defineProperty(_Object$setPrototypeO,Symbol.asyncIterator,function(){return this;}),_defineProperty(_Object$setPrototypeO,"return",function _return(){var _this2=this;// destroy(err, cb) is a private API
// we can guarantee we have that here, because we control the
// Readable class this is attached to
return new Promise(function(resolve,reject){_this2[kStream].destroy(null,function(err){if(err){reject(err);return;}resolve(createIterResult(undefined,true));});});}),_Object$setPrototypeO),AsyncIteratorPrototype);var createReadableStreamAsyncIterator=function createReadableStreamAsyncIterator(stream){var _Object$create;var iterator=Object.create(ReadableStreamAsyncIteratorPrototype,(_Object$create={},_defineProperty(_Object$create,kStream,{value:stream,writable:true}),_defineProperty(_Object$create,kLastResolve,{value:null,writable:true}),_defineProperty(_Object$create,kLastReject,{value:null,writable:true}),_defineProperty(_Object$create,kError,{value:null,writable:true}),_defineProperty(_Object$create,kEnded,{value:stream._readableState.endEmitted,writable:true}),_defineProperty(_Object$create,kHandlePromise,{value:function value(resolve,reject){var data=iterator[kStream].read();if(data){iterator[kLastPromise]=null;iterator[kLastResolve]=null;iterator[kLastReject]=null;resolve(createIterResult(data,false));}else{iterator[kLastResolve]=resolve;iterator[kLastReject]=reject;}},writable:true}),_Object$create));iterator[kLastPromise]=null;finished(stream,function(err){if(err&&err.code!=='ERR_STREAM_PREMATURE_CLOSE'){var reject=iterator[kLastReject];// reject if we are waiting for data in the Promise
// returned by next() and store the error
if(reject!==null){iterator[kLastPromise]=null;iterator[kLastResolve]=null;iterator[kLastReject]=null;reject(err);}iterator[kError]=err;return;}var resolve=iterator[kLastResolve];if(resolve!==null){iterator[kLastPromise]=null;iterator[kLastResolve]=null;iterator[kLastReject]=null;resolve(createIterResult(undefined,true));}iterator[kEnded]=true;});stream.on('readable',onReadable.bind(null,iterator));return iterator;};async_iterator=createReadableStreamAsyncIterator;return async_iterator;}var from_1;var hasRequiredFrom;function requireFrom(){if(hasRequiredFrom)return from_1;hasRequiredFrom=1;function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{Promise.resolve(value).then(_next,_throw);}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value);}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err);}_next(undefined);});};}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return typeof key==="symbol"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!=="object"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||"default");if(typeof res!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return(hint==="string"?String:Number)(input);}var ERR_INVALID_ARG_TYPE=requireErrors().codes.ERR_INVALID_ARG_TYPE;function from(Readable,iterable,opts){var iterator;if(iterable&&typeof iterable.next==='function'){iterator=iterable;}else if(iterable&&iterable[Symbol.asyncIterator])iterator=iterable[Symbol.asyncIterator]();else if(iterable&&iterable[Symbol.iterator])iterator=iterable[Symbol.iterator]();else throw new ERR_INVALID_ARG_TYPE('iterable',['Iterable'],iterable);var readable=new Readable(_objectSpread({objectMode:true},opts));// Reading boolean to protect against _read
// being called before last iteration completion.
var reading=false;readable._read=function(){if(!reading){reading=true;next();}};function next(){return _next2.apply(this,arguments);}function _next2(){_next2=_asyncToGenerator(function*(){try{var _yield$iterator$next=yield iterator.next(),value=_yield$iterator$next.value,done=_yield$iterator$next.done;if(done){readable.push(null);}else if(readable.push(yield value)){next();}else{reading=false;}}catch(err){readable.destroy(err);}});return _next2.apply(this,arguments);}return readable;}from_1=from;return from_1;}var _stream_readable;var hasRequired_stream_readable;function require_stream_readable(){if(hasRequired_stream_readable)return _stream_readable;hasRequired_stream_readable=1;_stream_readable=Readable;/*<replacement>*/var Duplex;/*</replacement>*/Readable.ReadableState=ReadableState;var EElistenerCount=function EElistenerCount(emitter,type){return emitter.listeners(type).length;};/*</replacement>*/ /*<replacement>*/var Stream=requireStream();/*</replacement>*/var Buffer=require$$0__default$7.default.Buffer;var OurUint8Array=(typeof loadEnv.commonjsGlobal!=='undefined'?loadEnv.commonjsGlobal:typeof window!=='undefined'?window:typeof self!=='undefined'?self:{}).Uint8Array||function(){};function _uint8ArrayToBuffer(chunk){return Buffer.from(chunk);}function _isUint8Array(obj){return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;}/*<replacement>*/var debugUtil=require$$0__default$5.default;var debug;if(debugUtil&&debugUtil.debuglog){debug=debugUtil.debuglog('stream');}else{debug=function debug(){};}/*</replacement>*/var BufferList=requireBuffer_list();var destroyImpl=requireDestroy();var _require=requireState(),getHighWaterMark=_require.getHighWaterMark;var _require$codes=requireErrors().codes,ERR_INVALID_ARG_TYPE=_require$codes.ERR_INVALID_ARG_TYPE,ERR_STREAM_PUSH_AFTER_EOF=_require$codes.ERR_STREAM_PUSH_AFTER_EOF,ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,ERR_STREAM_UNSHIFT_AFTER_END_EVENT=_require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;// Lazy loaded to improve the startup performance.
var StringDecoder;var createReadableStreamAsyncIterator;var from;inheritsExports(Readable,Stream);var errorOrDestroy=destroyImpl.errorOrDestroy;var kProxyEvents=['error','close','destroy','pause','resume'];function prependListener(emitter,event,fn){// Sadly this is not cacheable as some libraries bundle their own
// event emitter implementation with them.
if(typeof emitter.prependListener==='function')return emitter.prependListener(event,fn);// This is a hack to make sure that our error handler is attached before any
// userland ones.  NEVER DO THIS. This is here only because this code needs
// to continue to work with older versions of Node.js that do not include
// the prependListener() method. The goal is to eventually remove this hack.
if(!emitter._events||!emitter._events[event])emitter.on(event,fn);else if(Array.isArray(emitter._events[event]))emitter._events[event].unshift(fn);else emitter._events[event]=[fn,emitter._events[event]];}function ReadableState(options,stream,isDuplex){Duplex=Duplex||require_stream_duplex();options=options||{};// Duplex streams are both readable and writable, but share
// the same options object.
// However, some cases require setting options to different
// values for the readable and the writable sides of the duplex stream.
// These options can be provided separately as readableXXX and writableXXX.
if(typeof isDuplex!=='boolean')isDuplex=stream instanceof Duplex;// object stream flag. Used to make read(n) ignore n and to
// make all the buffer merging and length checks go away
this.objectMode=!!options.objectMode;if(isDuplex)this.objectMode=this.objectMode||!!options.readableObjectMode;// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"
this.highWaterMark=getHighWaterMark(this,options,'readableHighWaterMark',isDuplex);// A linked list is used to store data chunks instead of an array because the
// linked list can remove elements from the beginning faster than
// array.shift()
this.buffer=new BufferList();this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;// a flag to be able to tell if the event 'readable'/'data' is emitted
// immediately, or on a later tick.  We set this to true at first, because
// any actions that shouldn't happen until "later" should generally also
// not happen before the first read call.
this.sync=true;// whenever we return null, then we set a flag to say
// that we're awaiting a 'readable' event emission.
this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.paused=true;// Should close be emitted on destroy. Defaults to true.
this.emitClose=options.emitClose!==false;// Should .destroy() be called after 'end' (and potentially 'finish')
this.autoDestroy=!!options.autoDestroy;// has it been destroyed
this.destroyed=false;// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=options.defaultEncoding||'utf8';// the number of writers that are awaiting a drain event in .pipe()s
this.awaitDrain=0;// if true, a maybeReadMore has been scheduled
this.readingMore=false;this.decoder=null;this.encoding=null;if(options.encoding){if(!StringDecoder)StringDecoder=requireString_decoder$1().StringDecoder;this.decoder=new StringDecoder(options.encoding);this.encoding=options.encoding;}}function Readable(options){Duplex=Duplex||require_stream_duplex();if(!(this instanceof Readable))return new Readable(options);// Checking for a Stream.Duplex instance is faster here instead of inside
// the ReadableState constructor, at least with V8 6.5
var isDuplex=this instanceof Duplex;this._readableState=new ReadableState(options,this,isDuplex);// legacy
this.readable=true;if(options){if(typeof options.read==='function')this._read=options.read;if(typeof options.destroy==='function')this._destroy=options.destroy;}Stream.call(this);}Object.defineProperty(Readable.prototype,'destroyed',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){if(this._readableState===undefined){return false;}return this._readableState.destroyed;},set:function set(value){// we ignore the value if the stream
// has not been initialized yet
if(!this._readableState){return;}// backward compatibility, the user is explicitly
// managing destroyed
this._readableState.destroyed=value;}});Readable.prototype.destroy=destroyImpl.destroy;Readable.prototype._undestroy=destroyImpl.undestroy;Readable.prototype._destroy=function(err,cb){cb(err);};// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push=function(chunk,encoding){var state=this._readableState;var skipChunkCheck;if(!state.objectMode){if(typeof chunk==='string'){encoding=encoding||state.defaultEncoding;if(encoding!==state.encoding){chunk=Buffer.from(chunk,encoding);encoding='';}skipChunkCheck=true;}}else{skipChunkCheck=true;}return readableAddChunk(this,chunk,encoding,false,skipChunkCheck);};// Unshift should *always* be something directly out of read()
Readable.prototype.unshift=function(chunk){return readableAddChunk(this,chunk,null,true,false);};function readableAddChunk(stream,chunk,encoding,addToFront,skipChunkCheck){debug('readableAddChunk',chunk);var state=stream._readableState;if(chunk===null){state.reading=false;onEofChunk(stream,state);}else{var er;if(!skipChunkCheck)er=chunkInvalid(state,chunk);if(er){errorOrDestroy(stream,er);}else if(state.objectMode||chunk&&chunk.length>0){if(typeof chunk!=='string'&&!state.objectMode&&Object.getPrototypeOf(chunk)!==Buffer.prototype){chunk=_uint8ArrayToBuffer(chunk);}if(addToFront){if(state.endEmitted)errorOrDestroy(stream,new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream,state,chunk,true);}else if(state.ended){errorOrDestroy(stream,new ERR_STREAM_PUSH_AFTER_EOF());}else if(state.destroyed){return false;}else{state.reading=false;if(state.decoder&&!encoding){chunk=state.decoder.write(chunk);if(state.objectMode||chunk.length!==0)addChunk(stream,state,chunk,false);else maybeReadMore(stream,state);}else{addChunk(stream,state,chunk,false);}}}else if(!addToFront){state.reading=false;maybeReadMore(stream,state);}}// We can push more data if we are below the highWaterMark.
// Also, if we have no data yet, we can stand some more bytes.
// This is to work around cases where hwm=0, such as the repl.
return!state.ended&&(state.length<state.highWaterMark||state.length===0);}function addChunk(stream,state,chunk,addToFront){if(state.flowing&&state.length===0&&!state.sync){state.awaitDrain=0;stream.emit('data',chunk);}else{// update the buffer info.
state.length+=state.objectMode?1:chunk.length;if(addToFront)state.buffer.unshift(chunk);else state.buffer.push(chunk);if(state.needReadable)emitReadable(stream);}maybeReadMore(stream,state);}function chunkInvalid(state,chunk){var er;if(!_isUint8Array(chunk)&&typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){er=new ERR_INVALID_ARG_TYPE('chunk',['string','Buffer','Uint8Array'],chunk);}return er;}Readable.prototype.isPaused=function(){return this._readableState.flowing===false;};// backwards compatibility.
Readable.prototype.setEncoding=function(enc){if(!StringDecoder)StringDecoder=requireString_decoder$1().StringDecoder;var decoder=new StringDecoder(enc);this._readableState.decoder=decoder;// If setEncoding(null), decoder.encoding equals utf8
this._readableState.encoding=this._readableState.decoder.encoding;// Iterate over current buffer to convert already stored Buffers:
var p=this._readableState.buffer.head;var content='';while(p!==null){content+=decoder.write(p.data);p=p.next;}this._readableState.buffer.clear();if(content!=='')this._readableState.buffer.push(content);this._readableState.length=content.length;return this;};// Don't raise the hwm > 1GB
var MAX_HWM=0x40000000;function computeNewHighWaterMark(n){if(n>=MAX_HWM){// TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
n=MAX_HWM;}else{// Get the next highest power of 2 to prevent increasing hwm excessively in
// tiny amounts
n--;n|=n>>>1;n|=n>>>2;n|=n>>>4;n|=n>>>8;n|=n>>>16;n++;}return n;}// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n,state){if(n<=0||state.length===0&&state.ended)return 0;if(state.objectMode)return 1;if(n!==n){// Only flow one buffer at a time
if(state.flowing&&state.length)return state.buffer.head.data.length;else return state.length;}// If we're asking for more than the current hwm, then raise the hwm.
if(n>state.highWaterMark)state.highWaterMark=computeNewHighWaterMark(n);if(n<=state.length)return n;// Don't have enough
if(!state.ended){state.needReadable=true;return 0;}return state.length;}// you can override either this method, or the async _read(n) below.
Readable.prototype.read=function(n){debug('read',n);n=parseInt(n,10);var state=this._readableState;var nOrig=n;if(n!==0)state.emittedReadable=false;// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.
if(n===0&&state.needReadable&&((state.highWaterMark!==0?state.length>=state.highWaterMark:state.length>0)||state.ended)){debug('read: emitReadable',state.length,state.ended);if(state.length===0&&state.ended)endReadable(this);else emitReadable(this);return null;}n=howMuchToRead(n,state);// if we've ended, and we're now clear, then finish it up.
if(n===0&&state.ended){if(state.length===0)endReadable(this);return null;}// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.
//
// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.
//
// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.
//
// 3. Actually pull the requested chunks out of the buffer and return.
// if we need a readable event, then we need to do some reading.
var doRead=state.needReadable;debug('need readable',doRead);// if we currently have less than the highWaterMark, then also read some
if(state.length===0||state.length-n<state.highWaterMark){doRead=true;debug('length less than watermark',doRead);}// however, if we've ended, then there's no point, and if we're already
// reading, then it's unnecessary.
if(state.ended||state.reading){doRead=false;debug('reading or ended',doRead);}else if(doRead){debug('do read');state.reading=true;state.sync=true;// if the length is currently zero, then we *need* a readable event.
if(state.length===0)state.needReadable=true;// call internal read method
this._read(state.highWaterMark);state.sync=false;// If _read pushed data synchronously, then `reading` will be false,
// and we need to re-evaluate how much data we can return to the user.
if(!state.reading)n=howMuchToRead(nOrig,state);}var ret;if(n>0)ret=fromList(n,state);else ret=null;if(ret===null){state.needReadable=state.length<=state.highWaterMark;n=0;}else{state.length-=n;state.awaitDrain=0;}if(state.length===0){// If we have nothing in the buffer, then we want to know
// as soon as we *do* get something into the buffer.
if(!state.ended)state.needReadable=true;// If we tried to read() past the EOF, then emit end on the next tick.
if(nOrig!==n&&state.ended)endReadable(this);}if(ret!==null)this.emit('data',ret);return ret;};function onEofChunk(stream,state){debug('onEofChunk');if(state.ended)return;if(state.decoder){var chunk=state.decoder.end();if(chunk&&chunk.length){state.buffer.push(chunk);state.length+=state.objectMode?1:chunk.length;}}state.ended=true;if(state.sync){// if we are sync, wait until next tick to emit the data.
// Otherwise we risk emitting data in the flow()
// the readable code triggers during a read() call
emitReadable(stream);}else{// emit 'readable' now to make sure it gets picked up.
state.needReadable=false;if(!state.emittedReadable){state.emittedReadable=true;emitReadable_(stream);}}}// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream){var state=stream._readableState;debug('emitReadable',state.needReadable,state.emittedReadable);state.needReadable=false;if(!state.emittedReadable){debug('emitReadable',state.flowing);state.emittedReadable=true;process.nextTick(emitReadable_,stream);}}function emitReadable_(stream){var state=stream._readableState;debug('emitReadable_',state.destroyed,state.length,state.ended);if(!state.destroyed&&(state.length||state.ended)){stream.emit('readable');state.emittedReadable=false;}// The stream needs another readable event if
// 1. It is not flowing, as the flow mechanism will take
//    care of it.
// 2. It is not ended.
// 3. It is below the highWaterMark, so we can schedule
//    another readable later.
state.needReadable=!state.flowing&&!state.ended&&state.length<=state.highWaterMark;flow(stream);}// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream,state){if(!state.readingMore){state.readingMore=true;process.nextTick(maybeReadMore_,stream,state);}}function maybeReadMore_(stream,state){// Attempt to read more data if we should.
//
// The conditions for reading more data are (one of):
// - Not enough data buffered (state.length < state.highWaterMark). The loop
//   is responsible for filling the buffer with enough data if such data
//   is available. If highWaterMark is 0 and we are not in the flowing mode
//   we should _not_ attempt to buffer any extra data. We'll get more data
//   when the stream consumer calls read() instead.
// - No data in the buffer, and the stream is in flowing mode. In this mode
//   the loop below is responsible for ensuring read() is called. Failing to
//   call read here would abort the flow and there's no other mechanism for
//   continuing the flow if the stream consumer has just subscribed to the
//   'data' event.
//
// In addition to the above conditions to keep reading data, the following
// conditions prevent the data from being read:
// - The stream has ended (state.ended).
// - There is already a pending 'read' operation (state.reading). This is a
//   case where the the stream has called the implementation defined _read()
//   method, but they are processing the call asynchronously and have _not_
//   called push() with new data. In this case we skip performing more
//   read()s. The execution ends in this method again after the _read() ends
//   up calling push() with more data.
while(!state.reading&&!state.ended&&(state.length<state.highWaterMark||state.flowing&&state.length===0)){var len=state.length;debug('maybeReadMore read 0');stream.read(0);if(len===state.length)// didn't get any data, stop spinning.
break;}state.readingMore=false;}// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read=function(n){errorOrDestroy(this,new ERR_METHOD_NOT_IMPLEMENTED('_read()'));};Readable.prototype.pipe=function(dest,pipeOpts){var src=this;var state=this._readableState;switch(state.pipesCount){case 0:state.pipes=dest;break;case 1:state.pipes=[state.pipes,dest];break;default:state.pipes.push(dest);break;}state.pipesCount+=1;debug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);var doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process.stdout&&dest!==process.stderr;var endFn=doEnd?onend:unpipe;if(state.endEmitted)process.nextTick(endFn);else src.once('end',endFn);dest.on('unpipe',onunpipe);function onunpipe(readable,unpipeInfo){debug('onunpipe');if(readable===src){if(unpipeInfo&&unpipeInfo.hasUnpiped===false){unpipeInfo.hasUnpiped=true;cleanup();}}}function onend(){debug('onend');dest.end();}// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.
var ondrain=pipeOnDrain(src);dest.on('drain',ondrain);var cleanedUp=false;function cleanup(){debug('cleanup');// cleanup event handlers once the pipe is broken
dest.removeListener('close',onclose);dest.removeListener('finish',onfinish);dest.removeListener('drain',ondrain);dest.removeListener('error',onerror);dest.removeListener('unpipe',onunpipe);src.removeListener('end',onend);src.removeListener('end',unpipe);src.removeListener('data',ondata);cleanedUp=true;// if the reader is waiting for a drain event from this
// specific writer, then it would cause it to never start
// flowing again.
// So, if this is awaiting a drain, then we just call it now.
// If we don't know, then assume that we are waiting for one.
if(state.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain();}src.on('data',ondata);function ondata(chunk){debug('ondata');var ret=dest.write(chunk);debug('dest.write',ret);if(ret===false){// If the user unpiped during `dest.write()`, it is possible
// to get stuck in a permanently paused state if that write
// also returned false.
// => Check whether `dest` is still a piping destination.
if((state.pipesCount===1&&state.pipes===dest||state.pipesCount>1&&indexOf(state.pipes,dest)!==-1)&&!cleanedUp){debug('false write response, pause',state.awaitDrain);state.awaitDrain++;}src.pause();}}// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.
function onerror(er){debug('onerror',er);unpipe();dest.removeListener('error',onerror);if(EElistenerCount(dest,'error')===0)errorOrDestroy(dest,er);}// Make sure our error handler is attached before userland ones.
prependListener(dest,'error',onerror);// Both close and finish should trigger unpipe, but only once.
function onclose(){dest.removeListener('finish',onfinish);unpipe();}dest.once('close',onclose);function onfinish(){debug('onfinish');dest.removeListener('close',onclose);unpipe();}dest.once('finish',onfinish);function unpipe(){debug('unpipe');src.unpipe(dest);}// tell the dest that it's being piped to
dest.emit('pipe',src);// start the flow if it hasn't been started already.
if(!state.flowing){debug('pipe resume');src.resume();}return dest;};function pipeOnDrain(src){return function pipeOnDrainFunctionResult(){var state=src._readableState;debug('pipeOnDrain',state.awaitDrain);if(state.awaitDrain)state.awaitDrain--;if(state.awaitDrain===0&&EElistenerCount(src,'data')){state.flowing=true;flow(src);}};}Readable.prototype.unpipe=function(dest){var state=this._readableState;var unpipeInfo={hasUnpiped:false};// if we're not piping anywhere, then do nothing.
if(state.pipesCount===0)return this;// just one destination.  most common case.
if(state.pipesCount===1){// passed in one, but it's not the right one.
if(dest&&dest!==state.pipes)return this;if(!dest)dest=state.pipes;// got a match.
state.pipes=null;state.pipesCount=0;state.flowing=false;if(dest)dest.emit('unpipe',this,unpipeInfo);return this;}// slow case. multiple pipe destinations.
if(!dest){// remove all.
var dests=state.pipes;var len=state.pipesCount;state.pipes=null;state.pipesCount=0;state.flowing=false;for(var i=0;i<len;i++)dests[i].emit('unpipe',this,{hasUnpiped:false});return this;}// try to find the right one.
var index=indexOf(state.pipes,dest);if(index===-1)return this;state.pipes.splice(index,1);state.pipesCount-=1;if(state.pipesCount===1)state.pipes=state.pipes[0];dest.emit('unpipe',this,unpipeInfo);return this;};// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on=function(ev,fn){var res=Stream.prototype.on.call(this,ev,fn);var state=this._readableState;if(ev==='data'){// update readableListening so that resume() may be a no-op
// a few lines down. This is needed to support once('readable').
state.readableListening=this.listenerCount('readable')>0;// Try start flowing on next tick if stream isn't explicitly paused
if(state.flowing!==false)this.resume();}else if(ev==='readable'){if(!state.endEmitted&&!state.readableListening){state.readableListening=state.needReadable=true;state.flowing=false;state.emittedReadable=false;debug('on readable',state.length,state.reading);if(state.length){emitReadable(this);}else if(!state.reading){process.nextTick(nReadingNextTick,this);}}}return res;};Readable.prototype.addListener=Readable.prototype.on;Readable.prototype.removeListener=function(ev,fn){var res=Stream.prototype.removeListener.call(this,ev,fn);if(ev==='readable'){// We need to check if there is someone still listening to
// readable and reset the state. However this needs to happen
// after readable has been emitted but before I/O (nextTick) to
// support once('readable', fn) cycles. This means that calling
// resume within the same tick will have no
// effect.
process.nextTick(updateReadableListening,this);}return res;};Readable.prototype.removeAllListeners=function(ev){var res=Stream.prototype.removeAllListeners.apply(this,arguments);if(ev==='readable'||ev===undefined){// We need to check if there is someone still listening to
// readable and reset the state. However this needs to happen
// after readable has been emitted but before I/O (nextTick) to
// support once('readable', fn) cycles. This means that calling
// resume within the same tick will have no
// effect.
process.nextTick(updateReadableListening,this);}return res;};function updateReadableListening(self){var state=self._readableState;state.readableListening=self.listenerCount('readable')>0;if(state.resumeScheduled&&!state.paused){// flowing needs to be set to true now, otherwise
// the upcoming resume will not flow.
state.flowing=true;// crude way to check if we should resume
}else if(self.listenerCount('data')>0){self.resume();}}function nReadingNextTick(self){debug('readable nexttick read 0');self.read(0);}// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume=function(){var state=this._readableState;if(!state.flowing){debug('resume');// we flow only if there is no one listening
// for readable, but we still have to call
// resume()
state.flowing=!state.readableListening;resume(this,state);}state.paused=false;return this;};function resume(stream,state){if(!state.resumeScheduled){state.resumeScheduled=true;process.nextTick(resume_,stream,state);}}function resume_(stream,state){debug('resume',state.reading);if(!state.reading){stream.read(0);}state.resumeScheduled=false;stream.emit('resume');flow(stream);if(state.flowing&&!state.reading)stream.read(0);}Readable.prototype.pause=function(){debug('call pause flowing=%j',this._readableState.flowing);if(this._readableState.flowing!==false){debug('pause');this._readableState.flowing=false;this.emit('pause');}this._readableState.paused=true;return this;};function flow(stream){var state=stream._readableState;debug('flow',state.flowing);while(state.flowing&&stream.read()!==null);}// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap=function(stream){var _this=this;var state=this._readableState;var paused=false;stream.on('end',function(){debug('wrapped end');if(state.decoder&&!state.ended){var chunk=state.decoder.end();if(chunk&&chunk.length)_this.push(chunk);}_this.push(null);});stream.on('data',function(chunk){debug('wrapped data');if(state.decoder)chunk=state.decoder.write(chunk);// don't skip over falsy values in objectMode
if(state.objectMode&&(chunk===null||chunk===undefined))return;else if(!state.objectMode&&(!chunk||!chunk.length))return;var ret=_this.push(chunk);if(!ret){paused=true;stream.pause();}});// proxy all the other methods.
// important when wrapping filters and duplexes.
for(var i in stream){if(this[i]===undefined&&typeof stream[i]==='function'){this[i]=function methodWrap(method){return function methodWrapReturnFunction(){return stream[method].apply(stream,arguments);};}(i);}}// proxy certain important events.
for(var n=0;n<kProxyEvents.length;n++){stream.on(kProxyEvents[n],this.emit.bind(this,kProxyEvents[n]));}// when we try to consume some more bytes, simply unpause the
// underlying stream.
this._read=function(n){debug('wrapped _read',n);if(paused){paused=false;stream.resume();}};return this;};if(typeof Symbol==='function'){Readable.prototype[Symbol.asyncIterator]=function(){if(createReadableStreamAsyncIterator===undefined){createReadableStreamAsyncIterator=requireAsync_iterator();}return createReadableStreamAsyncIterator(this);};}Object.defineProperty(Readable.prototype,'readableHighWaterMark',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._readableState.highWaterMark;}});Object.defineProperty(Readable.prototype,'readableBuffer',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._readableState&&this._readableState.buffer;}});Object.defineProperty(Readable.prototype,'readableFlowing',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._readableState.flowing;},set:function set(state){if(this._readableState){this._readableState.flowing=state;}}});// exposed for testing purposes only.
Readable._fromList=fromList;Object.defineProperty(Readable.prototype,'readableLength',{// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,get:function get(){return this._readableState.length;}});// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n,state){// nothing buffered
if(state.length===0)return null;var ret;if(state.objectMode)ret=state.buffer.shift();else if(!n||n>=state.length){// read it all, truncate the list
if(state.decoder)ret=state.buffer.join('');else if(state.buffer.length===1)ret=state.buffer.first();else ret=state.buffer.concat(state.length);state.buffer.clear();}else{// read part of list
ret=state.buffer.consume(n,state.decoder);}return ret;}function endReadable(stream){var state=stream._readableState;debug('endReadable',state.endEmitted);if(!state.endEmitted){state.ended=true;process.nextTick(endReadableNT,state,stream);}}function endReadableNT(state,stream){debug('endReadableNT',state.endEmitted,state.length);// Check that we didn't get one last unshift.
if(!state.endEmitted&&state.length===0){state.endEmitted=true;stream.readable=false;stream.emit('end');if(state.autoDestroy){// In case of duplex streams we need a way to detect
// if the writable side is ready for autoDestroy as well
var wState=stream._writableState;if(!wState||wState.autoDestroy&&wState.finished){stream.destroy();}}}}if(typeof Symbol==='function'){Readable.from=function(iterable,opts){if(from===undefined){from=requireFrom();}return from(Readable,iterable,opts);};}function indexOf(xs,x){for(var i=0,l=xs.length;i<l;i++){if(xs[i]===x)return i;}return-1;}return _stream_readable;}var _stream_transform;var hasRequired_stream_transform;function require_stream_transform(){if(hasRequired_stream_transform)return _stream_transform;hasRequired_stream_transform=1;_stream_transform=Transform;var _require$codes=requireErrors().codes,ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,ERR_MULTIPLE_CALLBACK=_require$codes.ERR_MULTIPLE_CALLBACK,ERR_TRANSFORM_ALREADY_TRANSFORMING=_require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,ERR_TRANSFORM_WITH_LENGTH_0=_require$codes.ERR_TRANSFORM_WITH_LENGTH_0;var Duplex=require_stream_duplex();inheritsExports(Transform,Duplex);function afterTransform(er,data){var ts=this._transformState;ts.transforming=false;var cb=ts.writecb;if(cb===null){return this.emit('error',new ERR_MULTIPLE_CALLBACK());}ts.writechunk=null;ts.writecb=null;if(data!=null)// single equals check for both `null` and `undefined`
this.push(data);cb(er);var rs=this._readableState;rs.reading=false;if(rs.needReadable||rs.length<rs.highWaterMark){this._read(rs.highWaterMark);}}function Transform(options){if(!(this instanceof Transform))return new Transform(options);Duplex.call(this,options);this._transformState={afterTransform:afterTransform.bind(this),needTransform:false,transforming:false,writecb:null,writechunk:null,writeencoding:null};// start out asking for a readable event once data is transformed.
this._readableState.needReadable=true;// we have implemented the _read method, and done the other things
// that Readable wants before the first _read call, so unset the
// sync guard flag.
this._readableState.sync=false;if(options){if(typeof options.transform==='function')this._transform=options.transform;if(typeof options.flush==='function')this._flush=options.flush;}// When the writable side finishes, then flush out anything remaining.
this.on('prefinish',prefinish);}function prefinish(){var _this=this;if(typeof this._flush==='function'&&!this._readableState.destroyed){this._flush(function(er,data){done(_this,er,data);});}else{done(this,null,null);}}Transform.prototype.push=function(chunk,encoding){this._transformState.needTransform=false;return Duplex.prototype.push.call(this,chunk,encoding);};// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform=function(chunk,encoding,cb){cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));};Transform.prototype._write=function(chunk,encoding,cb){var ts=this._transformState;ts.writecb=cb;ts.writechunk=chunk;ts.writeencoding=encoding;if(!ts.transforming){var rs=this._readableState;if(ts.needTransform||rs.needReadable||rs.length<rs.highWaterMark)this._read(rs.highWaterMark);}};// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read=function(n){var ts=this._transformState;if(ts.writechunk!==null&&!ts.transforming){ts.transforming=true;this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);}else{// mark that we need a transform, so that any data that comes in
// will get processed, now that we've asked for it.
ts.needTransform=true;}};Transform.prototype._destroy=function(err,cb){Duplex.prototype._destroy.call(this,err,function(err2){cb(err2);});};function done(stream,er,data){if(er)return stream.emit('error',er);if(data!=null)// single equals check for both `null` and `undefined`
stream.push(data);// TODO(BridgeAR): Write a test for these two error cases
// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided
if(stream._writableState.length)throw new ERR_TRANSFORM_WITH_LENGTH_0();if(stream._transformState.transforming)throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();return stream.push(null);}return _stream_transform;}var _stream_passthrough;var hasRequired_stream_passthrough;function require_stream_passthrough(){if(hasRequired_stream_passthrough)return _stream_passthrough;hasRequired_stream_passthrough=1;_stream_passthrough=PassThrough;var Transform=require_stream_transform();inheritsExports(PassThrough,Transform);function PassThrough(options){if(!(this instanceof PassThrough))return new PassThrough(options);Transform.call(this,options);}PassThrough.prototype._transform=function(chunk,encoding,cb){cb(null,chunk);};return _stream_passthrough;}var pipeline_1;var hasRequiredPipeline;function requirePipeline(){if(hasRequiredPipeline)return pipeline_1;hasRequiredPipeline=1;var eos;function once(callback){var called=false;return function(){if(called)return;called=true;callback.apply(void 0,arguments);};}var _require$codes=requireErrors().codes,ERR_MISSING_ARGS=_require$codes.ERR_MISSING_ARGS,ERR_STREAM_DESTROYED=_require$codes.ERR_STREAM_DESTROYED;function noop(err){// Rethrow the error if it exists to avoid swallowing it
if(err)throw err;}function isRequest(stream){return stream.setHeader&&typeof stream.abort==='function';}function destroyer(stream,reading,writing,callback){callback=once(callback);var closed=false;stream.on('close',function(){closed=true;});if(eos===undefined)eos=requireEndOfStream();eos(stream,{readable:reading,writable:writing},function(err){if(err)return callback(err);closed=true;callback();});var destroyed=false;return function(err){if(closed)return;if(destroyed)return;destroyed=true;// request.destroy just do .end - .abort is what we want
if(isRequest(stream))return stream.abort();if(typeof stream.destroy==='function')return stream.destroy();callback(err||new ERR_STREAM_DESTROYED('pipe'));};}function call(fn){fn();}function pipe(from,to){return from.pipe(to);}function popCallback(streams){if(!streams.length)return noop;if(typeof streams[streams.length-1]!=='function')return noop;return streams.pop();}function pipeline(){for(var _len=arguments.length,streams=new Array(_len),_key=0;_key<_len;_key++){streams[_key]=arguments[_key];}var callback=popCallback(streams);if(Array.isArray(streams[0]))streams=streams[0];if(streams.length<2){throw new ERR_MISSING_ARGS('streams');}var error;var destroys=streams.map(function(stream,i){var reading=i<streams.length-1;var writing=i>0;return destroyer(stream,reading,writing,function(err){if(!error)error=err;if(err)destroys.forEach(call);if(reading)return;destroys.forEach(call);callback(error);});});return streams.reduce(pipe);}pipeline_1=pipeline;return pipeline_1;}(function(module,exports){var Stream=require$$0__default$4.default;if(process.env.READABLE_STREAM==='disable'&&Stream){module.exports=Stream.Readable;Object.assign(module.exports,Stream);module.exports.Stream=Stream;}else{exports=module.exports=require_stream_readable();exports.Stream=Stream||exports;exports.Readable=exports;exports.Writable=require_stream_writable();exports.Duplex=require_stream_duplex();exports.Transform=require_stream_transform();exports.PassThrough=require_stream_passthrough();exports.finished=requireEndOfStream();exports.pipeline=requirePipeline();}})(readable,readable.exports);var readableExports=readable.exports;const{Buffer:Buffer$1}=require$$0__default$7.default;const symbol=Symbol.for('BufferList');function BufferList$1(buf){if(!(this instanceof BufferList$1)){return new BufferList$1(buf);}BufferList$1._init.call(this,buf);}BufferList$1._init=function _init(buf){Object.defineProperty(this,symbol,{value:true});this._bufs=[];this.length=0;if(buf){this.append(buf);}};BufferList$1.prototype._new=function _new(buf){return new BufferList$1(buf);};BufferList$1.prototype._offset=function _offset(offset){if(offset===0){return[0,0];}let tot=0;for(let i=0;i<this._bufs.length;i++){const _t=tot+this._bufs[i].length;if(offset<_t||i===this._bufs.length-1){return[i,offset-tot];}tot=_t;}};BufferList$1.prototype._reverseOffset=function(blOffset){const bufferId=blOffset[0];let offset=blOffset[1];for(let i=0;i<bufferId;i++){offset+=this._bufs[i].length;}return offset;};BufferList$1.prototype.get=function get(index){if(index>this.length||index<0){return undefined;}const offset=this._offset(index);return this._bufs[offset[0]][offset[1]];};BufferList$1.prototype.slice=function slice(start,end){if(typeof start==='number'&&start<0){start+=this.length;}if(typeof end==='number'&&end<0){end+=this.length;}return this.copy(null,0,start,end);};BufferList$1.prototype.copy=function copy(dst,dstStart,srcStart,srcEnd){if(typeof srcStart!=='number'||srcStart<0){srcStart=0;}if(typeof srcEnd!=='number'||srcEnd>this.length){srcEnd=this.length;}if(srcStart>=this.length){return dst||Buffer$1.alloc(0);}if(srcEnd<=0){return dst||Buffer$1.alloc(0);}const copy=!!dst;const off=this._offset(srcStart);const len=srcEnd-srcStart;let bytes=len;let bufoff=copy&&dstStart||0;let start=off[1];// copy/slice everything
if(srcStart===0&&srcEnd===this.length){if(!copy){// slice, but full concat if multiple buffers
return this._bufs.length===1?this._bufs[0]:Buffer$1.concat(this._bufs,this.length);}// copy, need to copy individual buffers
for(let i=0;i<this._bufs.length;i++){this._bufs[i].copy(dst,bufoff);bufoff+=this._bufs[i].length;}return dst;}// easy, cheap case where it's a subset of one of the buffers
if(bytes<=this._bufs[off[0]].length-start){return copy?this._bufs[off[0]].copy(dst,dstStart,start,start+bytes):this._bufs[off[0]].slice(start,start+bytes);}if(!copy){// a slice, we need something to copy in to
dst=Buffer$1.allocUnsafe(len);}for(let i=off[0];i<this._bufs.length;i++){const l=this._bufs[i].length-start;if(bytes>l){this._bufs[i].copy(dst,bufoff,start);bufoff+=l;}else{this._bufs[i].copy(dst,bufoff,start,start+bytes);bufoff+=l;break;}bytes-=l;if(start){start=0;}}// safeguard so that we don't return uninitialized memory
if(dst.length>bufoff)return dst.slice(0,bufoff);return dst;};BufferList$1.prototype.shallowSlice=function shallowSlice(start,end){start=start||0;end=typeof end!=='number'?this.length:end;if(start<0){start+=this.length;}if(end<0){end+=this.length;}if(start===end){return this._new();}const startOffset=this._offset(start);const endOffset=this._offset(end);const buffers=this._bufs.slice(startOffset[0],endOffset[0]+1);if(endOffset[1]===0){buffers.pop();}else{buffers[buffers.length-1]=buffers[buffers.length-1].slice(0,endOffset[1]);}if(startOffset[1]!==0){buffers[0]=buffers[0].slice(startOffset[1]);}return this._new(buffers);};BufferList$1.prototype.toString=function toString(encoding,start,end){return this.slice(start,end).toString(encoding);};BufferList$1.prototype.consume=function consume(bytes){// first, normalize the argument, in accordance with how Buffer does it
bytes=Math.trunc(bytes);// do nothing if not a positive number
if(Number.isNaN(bytes)||bytes<=0)return this;while(this._bufs.length){if(bytes>=this._bufs[0].length){bytes-=this._bufs[0].length;this.length-=this._bufs[0].length;this._bufs.shift();}else{this._bufs[0]=this._bufs[0].slice(bytes);this.length-=bytes;break;}}return this;};BufferList$1.prototype.duplicate=function duplicate(){const copy=this._new();for(let i=0;i<this._bufs.length;i++){copy.append(this._bufs[i]);}return copy;};BufferList$1.prototype.append=function append(buf){if(buf==null){return this;}if(buf.buffer){// append a view of the underlying ArrayBuffer
this._appendBuffer(Buffer$1.from(buf.buffer,buf.byteOffset,buf.byteLength));}else if(Array.isArray(buf)){for(let i=0;i<buf.length;i++){this.append(buf[i]);}}else if(this._isBufferList(buf)){// unwrap argument into individual BufferLists
for(let i=0;i<buf._bufs.length;i++){this.append(buf._bufs[i]);}}else{// coerce number arguments to strings, since Buffer(number) does
// uninitialized memory allocation
if(typeof buf==='number'){buf=buf.toString();}this._appendBuffer(Buffer$1.from(buf));}return this;};BufferList$1.prototype._appendBuffer=function appendBuffer(buf){this._bufs.push(buf);this.length+=buf.length;};BufferList$1.prototype.indexOf=function(search,offset,encoding){if(encoding===undefined&&typeof offset==='string'){encoding=offset;offset=undefined;}if(typeof search==='function'||Array.isArray(search)){throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.');}else if(typeof search==='number'){search=Buffer$1.from([search]);}else if(typeof search==='string'){search=Buffer$1.from(search,encoding);}else if(this._isBufferList(search)){search=search.slice();}else if(Array.isArray(search.buffer)){search=Buffer$1.from(search.buffer,search.byteOffset,search.byteLength);}else if(!Buffer$1.isBuffer(search)){search=Buffer$1.from(search);}offset=Number(offset||0);if(isNaN(offset)){offset=0;}if(offset<0){offset=this.length+offset;}if(offset<0){offset=0;}if(search.length===0){return offset>this.length?this.length:offset;}const blOffset=this._offset(offset);let blIndex=blOffset[0];// index of which internal buffer we're working on
let buffOffset=blOffset[1];// offset of the internal buffer we're working on
// scan over each buffer
for(;blIndex<this._bufs.length;blIndex++){const buff=this._bufs[blIndex];while(buffOffset<buff.length){const availableWindow=buff.length-buffOffset;if(availableWindow>=search.length){const nativeSearchResult=buff.indexOf(search,buffOffset);if(nativeSearchResult!==-1){return this._reverseOffset([blIndex,nativeSearchResult]);}buffOffset=buff.length-search.length+1;// end of native search window
}else{const revOffset=this._reverseOffset([blIndex,buffOffset]);if(this._match(revOffset,search)){return revOffset;}buffOffset++;}}buffOffset=0;}return-1;};BufferList$1.prototype._match=function(offset,search){if(this.length-offset<search.length){return false;}for(let searchOffset=0;searchOffset<search.length;searchOffset++){if(this.get(offset+searchOffset)!==search[searchOffset]){return false;}}return true;};(function(){const methods={readDoubleBE:8,readDoubleLE:8,readFloatBE:4,readFloatLE:4,readInt32BE:4,readInt32LE:4,readUInt32BE:4,readUInt32LE:4,readInt16BE:2,readInt16LE:2,readUInt16BE:2,readUInt16LE:2,readInt8:1,readUInt8:1,readIntBE:null,readIntLE:null,readUIntBE:null,readUIntLE:null};for(const m in methods){(function(m){if(methods[m]===null){BufferList$1.prototype[m]=function(offset,byteLength){return this.slice(offset,offset+byteLength)[m](0,byteLength);};}else{BufferList$1.prototype[m]=function(){let offset=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return this.slice(offset,offset+methods[m])[m](0);};}})(m);}})();// Used internally by the class and also as an indicator of this object being
// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser
// environment because there could be multiple different copies of the
// BufferList class and some `BufferList`s might be `BufferList`s.
BufferList$1.prototype._isBufferList=function _isBufferList(b){return b instanceof BufferList$1||BufferList$1.isBufferList(b);};BufferList$1.isBufferList=function isBufferList(b){return b!=null&&b[symbol];};var BufferList_1=BufferList$1;const DuplexStream=readableExports.Duplex;const inherits=inheritsExports;const BufferList=BufferList_1;function BufferListStream$1(callback){if(!(this instanceof BufferListStream$1)){return new BufferListStream$1(callback);}if(typeof callback==='function'){this._callback=callback;const piper=function piper(err){if(this._callback){this._callback(err);this._callback=null;}}.bind(this);this.on('pipe',function onPipe(src){src.on('error',piper);});this.on('unpipe',function onUnpipe(src){src.removeListener('error',piper);});callback=null;}BufferList._init.call(this,callback);DuplexStream.call(this);}inherits(BufferListStream$1,DuplexStream);Object.assign(BufferListStream$1.prototype,BufferList.prototype);BufferListStream$1.prototype._new=function _new(callback){return new BufferListStream$1(callback);};BufferListStream$1.prototype._write=function _write(buf,encoding,callback){this._appendBuffer(buf);if(typeof callback==='function'){callback();}};BufferListStream$1.prototype._read=function _read(size){if(!this.length){return this.push(null);}size=Math.min(size,this.length);this.push(this.slice(0,size));this.consume(size);};BufferListStream$1.prototype.end=function end(chunk){DuplexStream.prototype.end.call(this,chunk);if(this._callback){this._callback(null,this.slice());this._callback=null;}};BufferListStream$1.prototype._destroy=function _destroy(err,cb){this._bufs.length=0;this.length=0;cb(err);};BufferListStream$1.prototype._isBufferList=function _isBufferList(b){return b instanceof BufferListStream$1||b instanceof BufferList||BufferListStream$1.isBufferList(b);};BufferListStream$1.isBufferList=BufferList.isBufferList;bl.exports=BufferListStream$1;bl.exports.BufferListStream=BufferListStream$1;bl.exports.BufferList=BufferList;var blExports=bl.exports;const readline$2=require$$0__default$8.default;const chalk$1=chalk__default.default;const cliCursor$1=cliCursor$2;const cliSpinners=cliSpinners$1;const logSymbols=logSymbols$1;const stripAnsi$2=stripAnsi$4;const wcwidth=wcwidthExports;const isInteractive=isInteractive$1;const isUnicodeSupported=isUnicodeSupported$2;const{BufferListStream}=blExports;const TEXT=Symbol('text');const PREFIX_TEXT=Symbol('prefixText');const ASCII_ETX_CODE=0x03;// Ctrl+C emits this code
class StdinDiscarder{constructor(){this.requests=0;this.mutedStream=new BufferListStream();this.mutedStream.pipe(process.stdout);const self=this;// eslint-disable-line unicorn/no-this-assignment
this.ourEmit=function(event,data){const{stdin}=process;for(var _len11=arguments.length,args=new Array(_len11>2?_len11-2:0),_key11=2;_key11<_len11;_key11++){args[_key11-2]=arguments[_key11];}if(self.requests>0||stdin.emit===self.ourEmit){if(event==='keypress'){// Fixes readline behavior
return;}if(event==='data'&&data.includes(ASCII_ETX_CODE)){process.emit('SIGINT');}Reflect.apply(self.oldEmit,this,[event,data,...args]);}else{Reflect.apply(process.stdin.emit,this,[event,data,...args]);}};}start(){this.requests++;if(this.requests===1){this.realStart();}}stop(){if(this.requests<=0){throw new Error('`stop` called more times than `start`');}this.requests--;if(this.requests===0){this.realStop();}}realStart(){// No known way to make it work reliably on Windows
if(process.platform==='win32'){return;}this.rl=readline$2.createInterface({input:process.stdin,output:this.mutedStream});this.rl.on('SIGINT',()=>{if(process.listenerCount('SIGINT')===0){process.emit('SIGINT');}else{this.rl.close();process.kill(process.pid,'SIGINT');}});}realStop(){if(process.platform==='win32'){return;}this.rl.close();this.rl=undefined;}}let stdinDiscarder;class Ora{constructor(options){if(!stdinDiscarder){stdinDiscarder=new StdinDiscarder();}if(typeof options==='string'){options={text:options};}this.options={text:'',color:'cyan',stream:process.stderr,discardStdin:true,...options};this.spinner=this.options.spinner;this.color=this.options.color;this.hideCursor=this.options.hideCursor!==false;this.interval=this.options.interval||this.spinner.interval||100;this.stream=this.options.stream;this.id=undefined;this.isEnabled=typeof this.options.isEnabled==='boolean'?this.options.isEnabled:isInteractive({stream:this.stream});this.isSilent=typeof this.options.isSilent==='boolean'?this.options.isSilent:false;// Set *after* `this.stream`
this.text=this.options.text;this.prefixText=this.options.prefixText;this.linesToClear=0;this.indent=this.options.indent;this.discardStdin=this.options.discardStdin;this.isDiscardingStdin=false;}get indent(){return this._indent;}set indent(indent){if(indent===void 0){indent=0;}if(!(indent>=0&&Number.isInteger(indent))){throw new Error('The `indent` option must be an integer from 0 and up');}this._indent=indent;}_updateInterval(interval){if(interval!==undefined){this.interval=interval;}}get spinner(){return this._spinner;}set spinner(spinner){this.frameIndex=0;if(typeof spinner==='object'){if(spinner.frames===undefined){throw new Error('The given spinner must have a `frames` property');}this._spinner=spinner;}else if(!isUnicodeSupported()){this._spinner=cliSpinners.line;}else if(spinner===undefined){// Set default spinner
this._spinner=cliSpinners.dots;}else if(spinner!=='default'&&cliSpinners[spinner]){this._spinner=cliSpinners[spinner];}else{throw new Error("There is no built-in spinner named '".concat(spinner,"'. See https://github.com/sindresorhus/cli-spinners/blob/main/spinners.json for a full list."));}this._updateInterval(this._spinner.interval);}get text(){return this[TEXT];}set text(value){this[TEXT]=value;this.updateLineCount();}get prefixText(){return this[PREFIX_TEXT];}set prefixText(value){this[PREFIX_TEXT]=value;this.updateLineCount();}get isSpinning(){return this.id!==undefined;}getFullPrefixText(){let prefixText=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this[PREFIX_TEXT];let postfix=arguments.length>1&&arguments[1]!==undefined?arguments[1]:' ';if(typeof prefixText==='string'){return prefixText+postfix;}if(typeof prefixText==='function'){return prefixText()+postfix;}return'';}updateLineCount(){const columns=this.stream.columns||80;const fullPrefixText=this.getFullPrefixText(this.prefixText,'-');this.lineCount=0;for(const line of stripAnsi$2(fullPrefixText+'--'+this[TEXT]).split('\n')){this.lineCount+=Math.max(1,Math.ceil(wcwidth(line)/columns));}}get isEnabled(){return this._isEnabled&&!this.isSilent;}set isEnabled(value){if(typeof value!=='boolean'){throw new TypeError('The `isEnabled` option must be a boolean');}this._isEnabled=value;}get isSilent(){return this._isSilent;}set isSilent(value){if(typeof value!=='boolean'){throw new TypeError('The `isSilent` option must be a boolean');}this._isSilent=value;}frame(){const{frames}=this.spinner;let frame=frames[this.frameIndex];if(this.color){frame=chalk$1[this.color](frame);}this.frameIndex=++this.frameIndex%frames.length;const fullPrefixText=typeof this.prefixText==='string'&&this.prefixText!==''?this.prefixText+' ':'';const fullText=typeof this.text==='string'?' '+this.text:'';return fullPrefixText+frame+fullText;}clear(){if(!this.isEnabled||!this.stream.isTTY){return this;}for(let i=0;i<this.linesToClear;i++){if(i>0){this.stream.moveCursor(0,-1);}this.stream.clearLine();this.stream.cursorTo(this.indent);}this.linesToClear=0;return this;}render(){if(this.isSilent){return this;}this.clear();this.stream.write(this.frame());this.linesToClear=this.lineCount;return this;}start(text){if(text){this.text=text;}if(this.isSilent){return this;}if(!this.isEnabled){if(this.text){this.stream.write("- ".concat(this.text,"\n"));}return this;}if(this.isSpinning){return this;}if(this.hideCursor){cliCursor$1.hide(this.stream);}if(this.discardStdin&&process.stdin.isTTY){this.isDiscardingStdin=true;stdinDiscarder.start();}this.render();this.id=setInterval(this.render.bind(this),this.interval);return this;}stop(){if(!this.isEnabled){return this;}clearInterval(this.id);this.id=undefined;this.frameIndex=0;this.clear();if(this.hideCursor){cliCursor$1.show(this.stream);}if(this.discardStdin&&process.stdin.isTTY&&this.isDiscardingStdin){stdinDiscarder.stop();this.isDiscardingStdin=false;}return this;}succeed(text){return this.stopAndPersist({symbol:logSymbols.success,text});}fail(text){return this.stopAndPersist({symbol:logSymbols.error,text});}warn(text){return this.stopAndPersist({symbol:logSymbols.warning,text});}info(text){return this.stopAndPersist({symbol:logSymbols.info,text});}stopAndPersist(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(this.isSilent){return this;}const prefixText=options.prefixText||this.prefixText;const text=options.text||this.text;const fullText=typeof text==='string'?' '+text:'';this.stop();this.stream.write("".concat(this.getFullPrefixText(prefixText,' ')).concat(options.symbol||' ').concat(fullText,"\n"));return this;}}const oraFactory=function(options){return new Ora(options);};ora$1.exports=oraFactory;ora$1.exports.promise=(action,options)=>{// eslint-disable-next-line promise/prefer-await-to-then
if(typeof action.then!=='function'){throw new TypeError('Parameter `action` must be a Promise');}const spinner=new Ora(options);spinner.start();(async()=>{try{await action;spinner.succeed();}catch{spinner.fail();}})();return spinner;};var oraExports=ora$1.exports;var ora=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(oraExports);let isFirstClear=true;var cliOutputter={print(){console.log(...arguments);},warn(){console.warn(...arguments);},error(){for(var _len12=arguments.length,args=new Array(_len12),_key12=0;_key12<_len12;_key12++){args[_key12]=arguments[_key12];}if(args[0]instanceof Error){console.error(chalk__default.default.red(args[0].stack));}else{console.error(...args);}},clear:()=>{process.stdout.write(isFirstClear?"\x1Bc":"\x1B[2J\x1B[0f");isFirstClear=false;},spinner(options){return ora(options);}};var inquirer$1={exports:{}};var matchOperatorsRe=/[|\\{}()[\]^$+*?.]/g;var escapeStringRegexp$3=function(str){if(typeof str!=='string'){throw new TypeError('Expected a string');}return str.replace(matchOperatorsRe,'\\$&');};const escapeStringRegexp$2=escapeStringRegexp$3;const platform=process.platform;const main$1={tick:'✔',cross:'✖',star:'★',square:'▇',squareSmall:'◻',squareSmallFilled:'◼',play:'▶',circle:'◯',circleFilled:'◉',circleDotted:'◌',circleDouble:'◎',circleCircle:'ⓞ',circleCross:'ⓧ',circlePipe:'Ⓘ',circleQuestionMark:'?⃝',bullet:'●',dot:'․',line:'─',ellipsis:'…',pointer:'❯',pointerSmall:'›',info:'ℹ',warning:'⚠',hamburger:'☰',smiley:'㋡',mustache:'෴',heart:'♥',arrowUp:'↑',arrowDown:'↓',arrowLeft:'←',arrowRight:'→',radioOn:'◉',radioOff:'◯',checkboxOn:'☒',checkboxOff:'☐',checkboxCircleOn:'ⓧ',checkboxCircleOff:'Ⓘ',questionMarkPrefix:'?⃝',oneHalf:'½',oneThird:'⅓',oneQuarter:'¼',oneFifth:'⅕',oneSixth:'⅙',oneSeventh:'⅐',oneEighth:'⅛',oneNinth:'⅑',oneTenth:'⅒',twoThirds:'⅔',twoFifths:'⅖',threeQuarters:'¾',threeFifths:'⅗',threeEighths:'⅜',fourFifths:'⅘',fiveSixths:'⅚',fiveEighths:'⅝',sevenEighths:'⅞'};const win={tick:'√',cross:'×',star:'*',square:'█',squareSmall:'[ ]',squareSmallFilled:'[█]',play:'►',circle:'( )',circleFilled:'(*)',circleDotted:'( )',circleDouble:'( )',circleCircle:'(○)',circleCross:'(×)',circlePipe:'(│)',circleQuestionMark:'(?)',bullet:'*',dot:'.',line:'─',ellipsis:'...',pointer:'>',pointerSmall:'»',info:'i',warning:'‼',hamburger:'≡',smiley:'☺',mustache:'┌─┐',heart:main$1.heart,arrowUp:main$1.arrowUp,arrowDown:main$1.arrowDown,arrowLeft:main$1.arrowLeft,arrowRight:main$1.arrowRight,radioOn:'(*)',radioOff:'( )',checkboxOn:'[×]',checkboxOff:'[ ]',checkboxCircleOn:'(×)',checkboxCircleOff:'( )',questionMarkPrefix:'？',oneHalf:'1/2',oneThird:'1/3',oneQuarter:'1/4',oneFifth:'1/5',oneSixth:'1/6',oneSeventh:'1/7',oneEighth:'1/8',oneNinth:'1/9',oneTenth:'1/10',twoThirds:'2/3',twoFifths:'2/5',threeQuarters:'3/4',threeFifths:'3/5',threeEighths:'3/8',fourFifths:'4/5',fiveSixths:'5/6',fiveEighths:'5/8',sevenEighths:'7/8'};if(platform==='linux'){// the main one doesn't look that good on Ubuntu
main$1.questionMarkPrefix='?';}const figures$1=platform==='win32'?win:main$1;const fn=str=>{if(figures$1===main$1){return str;}Object.keys(main$1).forEach(key=>{if(main$1[key]===figures$1[key]){return;}str=str.replace(new RegExp(escapeStringRegexp$2(main$1[key]),'g'),figures$1[key]);});return str;};var figures_1=Object.assign(fn,figures$1);var chalk=chalk__default.default;var figures=figures_1;/**
 * Separator object
 * Used to space/separate choices group
 * @constructor
 * @param {String} line   Separation line content (facultative)
 */class Separator{constructor(line){this.type='separator';this.line=chalk.dim(line||new Array(15).join(figures.line));}/**
   * Stringify separator
   * @return {String} the separator display string
   */toString(){return this.line;}}/**
 * Helper function returning false if object is a separator
 * @param  {Object} obj object to test against
 * @return {Boolean}    `false` if object is a separator
 */Separator.exclude=function(obj){return obj.type!=='separator';};var separator=Separator;var through$1={exports:{}};(function(module,exports){var Stream=require$$0__default$4.default;// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)
module.exports=through;through.through=through;//create a readable writable stream.
function through(write,end,opts){write=write||function(data){this.queue(data);};end=end||function(){this.queue(null);};var ended=false,destroyed=false,buffer=[],_ended=false;var stream=new Stream();stream.readable=stream.writable=true;stream.paused=false;//  stream.autoPause   = !(opts && opts.autoPause   === false)
stream.autoDestroy=!(opts&&opts.autoDestroy===false);stream.write=function(data){write.call(this,data);return!stream.paused;};function drain(){while(buffer.length&&!stream.paused){var data=buffer.shift();if(null===data)return stream.emit('end');else stream.emit('data',data);}}stream.queue=stream.push=function(data){//    console.error(ended)
if(_ended)return stream;if(data===null)_ended=true;buffer.push(data);drain();return stream;};//this will be registered as the first 'end' listener
//must call destroy next tick, to make sure we're after any
//stream piped from here.
//this is only a problem if end is not emitted synchronously.
//a nicer way to do this is to make sure this is the last listener for 'end'
stream.on('end',function(){stream.readable=false;if(!stream.writable&&stream.autoDestroy)process.nextTick(function(){stream.destroy();});});function _end(){stream.writable=false;end.call(stream);if(!stream.readable&&stream.autoDestroy)stream.destroy();}stream.end=function(data){if(ended)return;ended=true;if(arguments.length)stream.write(data);_end();// will emit or queue
return stream;};stream.destroy=function(){if(destroyed)return;destroyed=true;ended=true;buffer.length=0;stream.writable=stream.readable=false;stream.emit('close');return stream;};stream.pause=function(){if(stream.paused)return;stream.paused=true;return stream;};stream.resume=function(){if(stream.paused){stream.paused=false;stream.emit('resume');}drain();//may have become paused again,
//as drain emits 'data'.
if(!stream.paused)stream.emit('drain');return stream;};return stream;}})(through$1);var throughExports=through$1.exports;var Stream=require$$0__default$4.default;var mute=MuteStream$1;// var out = new MuteStream(process.stdout)
// argument auto-pipes
function MuteStream$1(opts){Stream.apply(this);opts=opts||{};this.writable=this.readable=true;this.muted=false;this.on('pipe',this._onpipe);this.replace=opts.replace;// For readline-type situations
// This much at the start of a line being redrawn after a ctrl char
// is seen (such as backspace) won't be redrawn as the replacement
this._prompt=opts.prompt||null;this._hadControl=false;}MuteStream$1.prototype=Object.create(Stream.prototype);Object.defineProperty(MuteStream$1.prototype,'constructor',{value:MuteStream$1,enumerable:false});MuteStream$1.prototype.mute=function(){this.muted=true;};MuteStream$1.prototype.unmute=function(){this.muted=false;};Object.defineProperty(MuteStream$1.prototype,'_onpipe',{value:onPipe,enumerable:false,writable:true,configurable:true});function onPipe(src){this._src=src;}Object.defineProperty(MuteStream$1.prototype,'isTTY',{get:getIsTTY,set:setIsTTY,enumerable:true,configurable:true});function getIsTTY(){return this._dest?this._dest.isTTY:this._src?this._src.isTTY:false;}// basically just get replace the getter/setter with a regular value
function setIsTTY(isTTY){Object.defineProperty(this,'isTTY',{value:isTTY,enumerable:true,writable:true,configurable:true});}Object.defineProperty(MuteStream$1.prototype,'rows',{get:function(){return this._dest?this._dest.rows:this._src?this._src.rows:undefined;},enumerable:true,configurable:true});Object.defineProperty(MuteStream$1.prototype,'columns',{get:function(){return this._dest?this._dest.columns:this._src?this._src.columns:undefined;},enumerable:true,configurable:true});MuteStream$1.prototype.pipe=function(dest,options){this._dest=dest;return Stream.prototype.pipe.call(this,dest,options);};MuteStream$1.prototype.pause=function(){if(this._src)return this._src.pause();};MuteStream$1.prototype.resume=function(){if(this._src)return this._src.resume();};MuteStream$1.prototype.write=function(c){if(this.muted){if(!this.replace)return true;if(c.match(/^\u001b/)){if(c.indexOf(this._prompt)===0){c=c.substr(this._prompt.length);c=c.replace(/./g,this.replace);c=this._prompt+c;}this._hadControl=true;return this.emit('data',c);}else{if(this._prompt&&this._hadControl&&c.indexOf(this._prompt)===0){this._hadControl=false;this.emit('data',this._prompt);c=c.substr(this._prompt.length);}c=c.toString().replace(/./g,this.replace);}}this.emit('data',c);};MuteStream$1.prototype.end=function(c){if(this.muted){if(c&&this.replace){c=c.toString().replace(/./g,this.replace);}else{c=null;}}if(c)this.emit('data',c);this.emit('end');};function proxy(fn){return function(){var d=this._dest;var s=this._src;if(d&&d[fn])d[fn].apply(d,arguments);if(s&&s[fn])s[fn].apply(s,arguments);};}MuteStream$1.prototype.destroy=proxy('destroy');MuteStream$1.prototype.destroySoon=proxy('destroySoon');MuteStream$1.prototype.close=proxy('close');var _$3=lodashExports;var MuteStream=mute;var readline$1=require$$0__default$8.default;/**
 * Base interface class other can inherits from
 */class UI{constructor(opt){// Instantiate the Readline interface
// @Note: Don't reassign if already present (allow test to override the Stream)
if(!this.rl){this.rl=readline$1.createInterface(setupReadlineOptions(opt));}this.rl.resume();this.onForceClose=this.onForceClose.bind(this);// Make sure new prompt start on a newline when closing
process.on('exit',this.onForceClose);// Terminate process on SIGINT (which will call process.on('exit') in return)
this.rl.on('SIGINT',this.onForceClose);}/**
   * Handle the ^C exit
   * @return {null}
   */onForceClose(){this.close();process.kill(process.pid,'SIGINT');console.log('');}/**
   * Close the interface and cleanup listeners
   */close(){// Remove events listeners
this.rl.removeListener('SIGINT',this.onForceClose);process.removeListener('exit',this.onForceClose);this.rl.output.unmute();if(this.activePrompt&&typeof this.activePrompt.close==='function'){this.activePrompt.close();}// Close the readline
this.rl.output.end();this.rl.pause();this.rl.close();}}function setupReadlineOptions(opt){opt=opt||{};// Default `input` to stdin
var input=opt.input||process.stdin;// Add mute capabilities to the output
var ms=new MuteStream();ms.pipe(opt.output||process.stdout);var output=ms;return _$3.extend({terminal:true,input:input,output:output},_$3.omit(opt,['input','output']));}var baseUI=UI;var readline={};var ansiEscapes$1={exports:{}};(function(module){const x=module.exports;const ESC='\u001B[';const OSC='\u001B]';const BEL='\u0007';const SEP=';';const isTerminalApp=process.env.TERM_PROGRAM==='Apple_Terminal';x.cursorTo=(x,y)=>{if(typeof x!=='number'){throw new TypeError('The `x` argument is required');}if(typeof y!=='number'){return ESC+(x+1)+'G';}return ESC+(y+1)+';'+(x+1)+'H';};x.cursorMove=(x,y)=>{if(typeof x!=='number'){throw new TypeError('The `x` argument is required');}let ret='';if(x<0){ret+=ESC+-x+'D';}else if(x>0){ret+=ESC+x+'C';}if(y<0){ret+=ESC+-y+'A';}else if(y>0){ret+=ESC+y+'B';}return ret;};x.cursorUp=count=>ESC+(typeof count==='number'?count:1)+'A';x.cursorDown=count=>ESC+(typeof count==='number'?count:1)+'B';x.cursorForward=count=>ESC+(typeof count==='number'?count:1)+'C';x.cursorBackward=count=>ESC+(typeof count==='number'?count:1)+'D';x.cursorLeft=ESC+'G';x.cursorSavePosition=ESC+(isTerminalApp?'7':'s');x.cursorRestorePosition=ESC+(isTerminalApp?'8':'u');x.cursorGetPosition=ESC+'6n';x.cursorNextLine=ESC+'E';x.cursorPrevLine=ESC+'F';x.cursorHide=ESC+'?25l';x.cursorShow=ESC+'?25h';x.eraseLines=count=>{let clear='';for(let i=0;i<count;i++){clear+=x.eraseLine+(i<count-1?x.cursorUp():'');}if(count){clear+=x.cursorLeft;}return clear;};x.eraseEndLine=ESC+'K';x.eraseStartLine=ESC+'1K';x.eraseLine=ESC+'2K';x.eraseDown=ESC+'J';x.eraseUp=ESC+'1J';x.eraseScreen=ESC+'2J';x.scrollUp=ESC+'S';x.scrollDown=ESC+'T';x.clearScreen='\u001Bc';x.clearTerminal=process.platform==='win32'?"".concat(x.eraseScreen).concat(ESC,"0f"):// 1. Erases the screen (Only done in case `2` is not supported)
// 2. Erases the whole screen including scrollback buffer
// 3. Moves cursor to the top-left position
// More info: https://www.real-world-systems.com/docs/ANSIcode.html
"".concat(x.eraseScreen).concat(ESC,"3J").concat(ESC,"H");x.beep=BEL;x.link=(text,url)=>{return[OSC,'8',SEP,SEP,url,BEL,text,OSC,'8',SEP,SEP,BEL].join('');};x.image=(buf,opts)=>{opts=opts||{};let ret=OSC+'1337;File=inline=1';if(opts.width){ret+=";width=".concat(opts.width);}if(opts.height){ret+=";height=".concat(opts.height);}if(opts.preserveAspectRatio===false){ret+=';preserveAspectRatio=0';}return ret+':'+buf.toString('base64')+BEL;};x.iTerm={};x.iTerm.setCwd=cwd=>OSC+'50;CurrentDir='+(cwd||process.cwd())+BEL;})(ansiEscapes$1);var ansiEscapesExports=ansiEscapes$1.exports;var ansiEscapes=ansiEscapesExports;/**
 * Move cursor left by `x`
 * @param  {Readline} rl - Readline instance
 * @param  {Number}   x  - How far to go left (default to 1)
 */readline.left=function(rl,x){rl.output.write(ansiEscapes.cursorBackward(x));};/**
 * Move cursor right by `x`
 * @param  {Readline} rl - Readline instance
 * @param  {Number}   x  - How far to go left (default to 1)
 */readline.right=function(rl,x){rl.output.write(ansiEscapes.cursorForward(x));};/**
 * Move cursor up by `x`
 * @param  {Readline} rl - Readline instance
 * @param  {Number}   x  - How far to go up (default to 1)
 */readline.up=function(rl,x){rl.output.write(ansiEscapes.cursorUp(x));};/**
 * Move cursor down by `x`
 * @param  {Readline} rl - Readline instance
 * @param  {Number}   x  - How far to go down (default to 1)
 */readline.down=function(rl,x){rl.output.write(ansiEscapes.cursorDown(x));};/**
 * Clear current line
 * @param  {Readline} rl  - Readline instance
 * @param  {Number}   len - number of line to delete
 */readline.clearLine=function(rl,len){rl.output.write(ansiEscapes.eraseLines(len));};/**
 * Sticky bottom bar user interface
 */var through=throughExports;var Base$1=baseUI;var rlUtils=readline;var _$2=lodashExports;class BottomBar extends Base$1{constructor(opt){opt=opt||{};super(opt);this.log=through(this.writeLog.bind(this));this.bottomBar=opt.bottomBar||'';this.render();}/**
   * Render the prompt to screen
   * @return {BottomBar} self
   */render(){this.write(this.bottomBar);return this;}clean(){rlUtils.clearLine(this.rl,this.bottomBar.split('\n').length);return this;}/**
   * Update the bottom bar content and rerender
   * @param  {String} bottomBar Bottom bar content
   * @return {BottomBar}           self
   */updateBottomBar(bottomBar){rlUtils.clearLine(this.rl,1);this.rl.output.unmute();this.clean();this.bottomBar=bottomBar;this.render();this.rl.output.mute();return this;}/**
   * Write out log data
   * @param {String} data - The log data to be output
   * @return {BottomBar} self
   */writeLog(data){this.rl.output.unmute();this.clean();this.rl.output.write(this.enforceLF(data.toString()));this.render();this.rl.output.mute();return this;}/**
   * Make sure line end on a line feed
   * @param  {String} str Input string
   * @return {String}     The input string with a final line feed
   */enforceLF(str){return str.match(/[\r\n]$/)?str:str+'\n';}/**
   * Helper for writing message in Prompt
   * @param {BottomBar} prompt  - The Prompt object that extends tty
   * @param {String} message - The message to be output
   */write(message){var msgLines=message.split(/\n/);this.height=msgLines.length;// Write message to screen and setPrompt to control backspace
this.rl.setPrompt(_$2.last(msgLines));if(this.rl.output.rows===0&&this.rl.output.columns===0){/* When it's a tty through serial port there's no terminal info and the render will malfunction,
         so we need enforce the cursor to locate to the leftmost position for rendering. */rlUtils.left(this.rl,message.length+this.rl.line.length);}this.rl.output.write(message);}}var bottomBar=BottomBar;/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return extendStatics(d,b);};function __extends(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}/** PURE_IMPORTS_START  PURE_IMPORTS_END */function isFunction(x){return typeof x==='function';}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var _enable_super_gross_mode_that_will_cause_bad_things=false;var config={Promise:undefined,set useDeprecatedSynchronousErrorHandling(value){_enable_super_gross_mode_that_will_cause_bad_things=value;},get useDeprecatedSynchronousErrorHandling(){return _enable_super_gross_mode_that_will_cause_bad_things;}};/** PURE_IMPORTS_START  PURE_IMPORTS_END */function hostReportError(err){setTimeout(function(){throw err;},0);}/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */var empty$2={closed:true,next:function(value){},error:function(err){if(config.useDeprecatedSynchronousErrorHandling){throw err;}else{hostReportError(err);}},complete:function(){}};/** PURE_IMPORTS_START  PURE_IMPORTS_END */var isArray=/*@__PURE__*/function(){return Array.isArray||function(x){return x&&typeof x.length==='number';};}();/** PURE_IMPORTS_START  PURE_IMPORTS_END */function isObject(x){return x!==null&&typeof x==='object';}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var UnsubscriptionErrorImpl=/*@__PURE__*/function(){function UnsubscriptionErrorImpl(errors){Error.call(this);this.message=errors?errors.length+" errors occurred during unsubscription:\n"+errors.map(function(err,i){return i+1+") "+err.toString();}).join('\n  '):'';this.name='UnsubscriptionError';this.errors=errors;return this;}UnsubscriptionErrorImpl.prototype=/*@__PURE__*/Object.create(Error.prototype);return UnsubscriptionErrorImpl;}();var UnsubscriptionError=UnsubscriptionErrorImpl;/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */var Subscription=/*@__PURE__*/function(){function Subscription(unsubscribe){this.closed=false;this._parentOrParents=null;this._subscriptions=null;if(unsubscribe){this._ctorUnsubscribe=true;this._unsubscribe=unsubscribe;}}Subscription.prototype.unsubscribe=function(){var errors;if(this.closed){return;}var _a=this,_parentOrParents=_a._parentOrParents,_ctorUnsubscribe=_a._ctorUnsubscribe,_unsubscribe=_a._unsubscribe,_subscriptions=_a._subscriptions;this.closed=true;this._parentOrParents=null;this._subscriptions=null;if(_parentOrParents instanceof Subscription){_parentOrParents.remove(this);}else if(_parentOrParents!==null){for(var index=0;index<_parentOrParents.length;++index){var parent_1=_parentOrParents[index];parent_1.remove(this);}}if(isFunction(_unsubscribe)){if(_ctorUnsubscribe){this._unsubscribe=undefined;}try{_unsubscribe.call(this);}catch(e){errors=e instanceof UnsubscriptionError?flattenUnsubscriptionErrors(e.errors):[e];}}if(isArray(_subscriptions)){var index=-1;var len=_subscriptions.length;while(++index<len){var sub=_subscriptions[index];if(isObject(sub)){try{sub.unsubscribe();}catch(e){errors=errors||[];if(e instanceof UnsubscriptionError){errors=errors.concat(flattenUnsubscriptionErrors(e.errors));}else{errors.push(e);}}}}}if(errors){throw new UnsubscriptionError(errors);}};Subscription.prototype.add=function(teardown){var subscription=teardown;if(!teardown){return Subscription.EMPTY;}switch(typeof teardown){case'function':subscription=new Subscription(teardown);case'object':if(subscription===this||subscription.closed||typeof subscription.unsubscribe!=='function'){return subscription;}else if(this.closed){subscription.unsubscribe();return subscription;}else if(!(subscription instanceof Subscription)){var tmp=subscription;subscription=new Subscription();subscription._subscriptions=[tmp];}break;default:{throw new Error('unrecognized teardown '+teardown+' added to Subscription.');}}var _parentOrParents=subscription._parentOrParents;if(_parentOrParents===null){subscription._parentOrParents=this;}else if(_parentOrParents instanceof Subscription){if(_parentOrParents===this){return subscription;}subscription._parentOrParents=[_parentOrParents,this];}else if(_parentOrParents.indexOf(this)===-1){_parentOrParents.push(this);}else{return subscription;}var subscriptions=this._subscriptions;if(subscriptions===null){this._subscriptions=[subscription];}else{subscriptions.push(subscription);}return subscription;};Subscription.prototype.remove=function(subscription){var subscriptions=this._subscriptions;if(subscriptions){var subscriptionIndex=subscriptions.indexOf(subscription);if(subscriptionIndex!==-1){subscriptions.splice(subscriptionIndex,1);}}};Subscription.EMPTY=function(empty){empty.closed=true;return empty;}(new Subscription());return Subscription;}();function flattenUnsubscriptionErrors(errors){return errors.reduce(function(errs,err){return errs.concat(err instanceof UnsubscriptionError?err.errors:err);},[]);}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var rxSubscriber=/*@__PURE__*/function(){return typeof Symbol==='function'?/*@__PURE__*/Symbol('rxSubscriber'):'@@rxSubscriber_'+/*@__PURE__*/Math.random();}();/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */var Subscriber=/*@__PURE__*/function(_super){__extends(Subscriber,_super);function Subscriber(destinationOrNext,error,complete){var _this=_super.call(this)||this;_this.syncErrorValue=null;_this.syncErrorThrown=false;_this.syncErrorThrowable=false;_this.isStopped=false;switch(arguments.length){case 0:_this.destination=empty$2;break;case 1:if(!destinationOrNext){_this.destination=empty$2;break;}if(typeof destinationOrNext==='object'){if(destinationOrNext instanceof Subscriber){_this.syncErrorThrowable=destinationOrNext.syncErrorThrowable;_this.destination=destinationOrNext;destinationOrNext.add(_this);}else{_this.syncErrorThrowable=true;_this.destination=new SafeSubscriber(_this,destinationOrNext);}break;}default:_this.syncErrorThrowable=true;_this.destination=new SafeSubscriber(_this,destinationOrNext,error,complete);break;}return _this;}Subscriber.prototype[rxSubscriber]=function(){return this;};Subscriber.create=function(next,error,complete){var subscriber=new Subscriber(next,error,complete);subscriber.syncErrorThrowable=false;return subscriber;};Subscriber.prototype.next=function(value){if(!this.isStopped){this._next(value);}};Subscriber.prototype.error=function(err){if(!this.isStopped){this.isStopped=true;this._error(err);}};Subscriber.prototype.complete=function(){if(!this.isStopped){this.isStopped=true;this._complete();}};Subscriber.prototype.unsubscribe=function(){if(this.closed){return;}this.isStopped=true;_super.prototype.unsubscribe.call(this);};Subscriber.prototype._next=function(value){this.destination.next(value);};Subscriber.prototype._error=function(err){this.destination.error(err);this.unsubscribe();};Subscriber.prototype._complete=function(){this.destination.complete();this.unsubscribe();};Subscriber.prototype._unsubscribeAndRecycle=function(){var _parentOrParents=this._parentOrParents;this._parentOrParents=null;this.unsubscribe();this.closed=false;this.isStopped=false;this._parentOrParents=_parentOrParents;return this;};return Subscriber;}(Subscription);var SafeSubscriber=/*@__PURE__*/function(_super){__extends(SafeSubscriber,_super);function SafeSubscriber(_parentSubscriber,observerOrNext,error,complete){var _this=_super.call(this)||this;_this._parentSubscriber=_parentSubscriber;var next;var context=_this;if(isFunction(observerOrNext)){next=observerOrNext;}else if(observerOrNext){next=observerOrNext.next;error=observerOrNext.error;complete=observerOrNext.complete;if(observerOrNext!==empty$2){context=Object.create(observerOrNext);if(isFunction(context.unsubscribe)){_this.add(context.unsubscribe.bind(context));}context.unsubscribe=_this.unsubscribe.bind(_this);}}_this._context=context;_this._next=next;_this._error=error;_this._complete=complete;return _this;}SafeSubscriber.prototype.next=function(value){if(!this.isStopped&&this._next){var _parentSubscriber=this._parentSubscriber;if(!config.useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(this._next,value);}else if(this.__tryOrSetError(_parentSubscriber,this._next,value)){this.unsubscribe();}}};SafeSubscriber.prototype.error=function(err){if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;var useDeprecatedSynchronousErrorHandling=config.useDeprecatedSynchronousErrorHandling;if(this._error){if(!useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(this._error,err);this.unsubscribe();}else{this.__tryOrSetError(_parentSubscriber,this._error,err);this.unsubscribe();}}else if(!_parentSubscriber.syncErrorThrowable){this.unsubscribe();if(useDeprecatedSynchronousErrorHandling){throw err;}hostReportError(err);}else{if(useDeprecatedSynchronousErrorHandling){_parentSubscriber.syncErrorValue=err;_parentSubscriber.syncErrorThrown=true;}else{hostReportError(err);}this.unsubscribe();}}};SafeSubscriber.prototype.complete=function(){var _this=this;if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._complete){var wrappedComplete=function(){return _this._complete.call(_this._context);};if(!config.useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(wrappedComplete);this.unsubscribe();}else{this.__tryOrSetError(_parentSubscriber,wrappedComplete);this.unsubscribe();}}else{this.unsubscribe();}}};SafeSubscriber.prototype.__tryOrUnsub=function(fn,value){try{fn.call(this._context,value);}catch(err){this.unsubscribe();if(config.useDeprecatedSynchronousErrorHandling){throw err;}else{hostReportError(err);}}};SafeSubscriber.prototype.__tryOrSetError=function(parent,fn,value){if(!config.useDeprecatedSynchronousErrorHandling){throw new Error('bad call');}try{fn.call(this._context,value);}catch(err){if(config.useDeprecatedSynchronousErrorHandling){parent.syncErrorValue=err;parent.syncErrorThrown=true;return true;}else{hostReportError(err);return true;}}return false;};SafeSubscriber.prototype._unsubscribe=function(){var _parentSubscriber=this._parentSubscriber;this._context=null;this._parentSubscriber=null;_parentSubscriber.unsubscribe();};return SafeSubscriber;}(Subscriber);/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */function canReportError(observer){while(observer){var _a=observer,closed_1=_a.closed,destination=_a.destination,isStopped=_a.isStopped;if(closed_1||isStopped){return false;}else if(destination&&destination instanceof Subscriber){observer=destination;}else{observer=null;}}return true;}/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */function toSubscriber(nextOrObserver,error,complete){if(nextOrObserver){if(nextOrObserver instanceof Subscriber){return nextOrObserver;}if(nextOrObserver[rxSubscriber]){return nextOrObserver[rxSubscriber]();}}if(!nextOrObserver&&!error&&!complete){return new Subscriber(empty$2);}return new Subscriber(nextOrObserver,error,complete);}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var observable=/*@__PURE__*/function(){return typeof Symbol==='function'&&Symbol.observable||'@@observable';}();/** PURE_IMPORTS_START  PURE_IMPORTS_END */function identity(x){return x;}/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */function pipe(){var fns=[];for(var _i=0;_i<arguments.length;_i++){fns[_i]=arguments[_i];}return pipeFromArray(fns);}function pipeFromArray(fns){if(fns.length===0){return identity;}if(fns.length===1){return fns[0];}return function piped(input){return fns.reduce(function(prev,fn){return fn(prev);},input);};}/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */var Observable=/*@__PURE__*/function(){function Observable(subscribe){this._isScalar=false;if(subscribe){this._subscribe=subscribe;}}Observable.prototype.lift=function(operator){var observable=new Observable();observable.source=this;observable.operator=operator;return observable;};Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator;var sink=toSubscriber(observerOrNext,error,complete);if(operator){sink.add(operator.call(sink,this.source));}else{sink.add(this.source||config.useDeprecatedSynchronousErrorHandling&&!sink.syncErrorThrowable?this._subscribe(sink):this._trySubscribe(sink));}if(config.useDeprecatedSynchronousErrorHandling){if(sink.syncErrorThrowable){sink.syncErrorThrowable=false;if(sink.syncErrorThrown){throw sink.syncErrorValue;}}}return sink;};Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink);}catch(err){if(config.useDeprecatedSynchronousErrorHandling){sink.syncErrorThrown=true;sink.syncErrorValue=err;}if(canReportError(sink)){sink.error(err);}else{console.warn(err);}}};Observable.prototype.forEach=function(next,promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var subscription;subscription=_this.subscribe(function(value){try{next(value);}catch(err){reject(err);if(subscription){subscription.unsubscribe();}}},reject,resolve);});};Observable.prototype._subscribe=function(subscriber){var source=this.source;return source&&source.subscribe(subscriber);};Observable.prototype[observable]=function(){return this;};Observable.prototype.pipe=function(){var operations=[];for(var _i=0;_i<arguments.length;_i++){operations[_i]=arguments[_i];}if(operations.length===0){return this;}return pipeFromArray(operations)(this);};Observable.prototype.toPromise=function(promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var value;_this.subscribe(function(x){return value=x;},function(err){return reject(err);},function(){return resolve(value);});});};Observable.create=function(subscribe){return new Observable(subscribe);};return Observable;}();function getPromiseCtor(promiseCtor){if(!promiseCtor){promiseCtor=config.Promise||Promise;}if(!promiseCtor){throw new Error('no Promise impl found');}return promiseCtor;}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var ObjectUnsubscribedErrorImpl=/*@__PURE__*/function(){function ObjectUnsubscribedErrorImpl(){Error.call(this);this.message='object unsubscribed';this.name='ObjectUnsubscribedError';return this;}ObjectUnsubscribedErrorImpl.prototype=/*@__PURE__*/Object.create(Error.prototype);return ObjectUnsubscribedErrorImpl;}();var ObjectUnsubscribedError=ObjectUnsubscribedErrorImpl;/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */var SubjectSubscription=/*@__PURE__*/function(_super){__extends(SubjectSubscription,_super);function SubjectSubscription(subject,subscriber){var _this=_super.call(this)||this;_this.subject=subject;_this.subscriber=subscriber;_this.closed=false;return _this;}SubjectSubscription.prototype.unsubscribe=function(){if(this.closed){return;}this.closed=true;var subject=this.subject;var observers=subject.observers;this.subject=null;if(!observers||observers.length===0||subject.isStopped||subject.closed){return;}var subscriberIndex=observers.indexOf(this.subscriber);if(subscriberIndex!==-1){observers.splice(subscriberIndex,1);}};return SubjectSubscription;}(Subscription);/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */var SubjectSubscriber=/*@__PURE__*/function(_super){__extends(SubjectSubscriber,_super);function SubjectSubscriber(destination){var _this=_super.call(this,destination)||this;_this.destination=destination;return _this;}return SubjectSubscriber;}(Subscriber);var Subject=/*@__PURE__*/function(_super){__extends(Subject,_super);function Subject(){var _this=_super.call(this)||this;_this.observers=[];_this.closed=false;_this.isStopped=false;_this.hasError=false;_this.thrownError=null;return _this;}Subject.prototype[rxSubscriber]=function(){return new SubjectSubscriber(this);};Subject.prototype.lift=function(operator){var subject=new AnonymousSubject(this,this);subject.operator=operator;return subject;};Subject.prototype.next=function(value){if(this.closed){throw new ObjectUnsubscribedError();}if(!this.isStopped){var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].next(value);}}};Subject.prototype.error=function(err){if(this.closed){throw new ObjectUnsubscribedError();}this.hasError=true;this.thrownError=err;this.isStopped=true;var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].error(err);}this.observers.length=0;};Subject.prototype.complete=function(){if(this.closed){throw new ObjectUnsubscribedError();}this.isStopped=true;var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].complete();}this.observers.length=0;};Subject.prototype.unsubscribe=function(){this.isStopped=true;this.closed=true;this.observers=null;};Subject.prototype._trySubscribe=function(subscriber){if(this.closed){throw new ObjectUnsubscribedError();}else{return _super.prototype._trySubscribe.call(this,subscriber);}};Subject.prototype._subscribe=function(subscriber){if(this.closed){throw new ObjectUnsubscribedError();}else if(this.hasError){subscriber.error(this.thrownError);return Subscription.EMPTY;}else if(this.isStopped){subscriber.complete();return Subscription.EMPTY;}else{this.observers.push(subscriber);return new SubjectSubscription(this,subscriber);}};Subject.prototype.asObservable=function(){var observable=new Observable();observable.source=this;return observable;};Subject.create=function(destination,source){return new AnonymousSubject(destination,source);};return Subject;}(Observable);var AnonymousSubject=/*@__PURE__*/function(_super){__extends(AnonymousSubject,_super);function AnonymousSubject(destination,source){var _this=_super.call(this)||this;_this.destination=destination;_this.source=source;return _this;}AnonymousSubject.prototype.next=function(value){var destination=this.destination;if(destination&&destination.next){destination.next(value);}};AnonymousSubject.prototype.error=function(err){var destination=this.destination;if(destination&&destination.error){this.destination.error(err);}};AnonymousSubject.prototype.complete=function(){var destination=this.destination;if(destination&&destination.complete){this.destination.complete();}};AnonymousSubject.prototype._subscribe=function(subscriber){var source=this.source;if(source){return this.source.subscribe(subscriber);}else{return Subscription.EMPTY;}};return AnonymousSubject;}(Subject);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function refCount(){return function refCountOperatorFunction(source){return source.lift(new RefCountOperator(source));};}var RefCountOperator=/*@__PURE__*/function(){function RefCountOperator(connectable){this.connectable=connectable;}RefCountOperator.prototype.call=function(subscriber,source){var connectable=this.connectable;connectable._refCount++;var refCounter=new RefCountSubscriber(subscriber,connectable);var subscription=source.subscribe(refCounter);if(!refCounter.closed){refCounter.connection=connectable.connect();}return subscription;};return RefCountOperator;}();var RefCountSubscriber=/*@__PURE__*/function(_super){__extends(RefCountSubscriber,_super);function RefCountSubscriber(destination,connectable){var _this=_super.call(this,destination)||this;_this.connectable=connectable;return _this;}RefCountSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(!connectable){this.connection=null;return;}this.connectable=null;var refCount=connectable._refCount;if(refCount<=0){this.connection=null;return;}connectable._refCount=refCount-1;if(refCount>1){this.connection=null;return;}var connection=this.connection;var sharedConnection=connectable._connection;this.connection=null;if(sharedConnection&&(!connection||sharedConnection===connection)){sharedConnection.unsubscribe();}};return RefCountSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */var ConnectableObservable=/*@__PURE__*/function(_super){__extends(ConnectableObservable,_super);function ConnectableObservable(source,subjectFactory){var _this=_super.call(this)||this;_this.source=source;_this.subjectFactory=subjectFactory;_this._refCount=0;_this._isComplete=false;return _this;}ConnectableObservable.prototype._subscribe=function(subscriber){return this.getSubject().subscribe(subscriber);};ConnectableObservable.prototype.getSubject=function(){var subject=this._subject;if(!subject||subject.isStopped){this._subject=this.subjectFactory();}return this._subject;};ConnectableObservable.prototype.connect=function(){var connection=this._connection;if(!connection){this._isComplete=false;connection=this._connection=new Subscription();connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(),this)));if(connection.closed){this._connection=null;connection=Subscription.EMPTY;}}return connection;};ConnectableObservable.prototype.refCount=function(){return refCount()(this);};return ConnectableObservable;}(Observable);var connectableObservableDescriptor=/*@__PURE__*/function(){var connectableProto=ConnectableObservable.prototype;return{operator:{value:null},_refCount:{value:0,writable:true},_subject:{value:null,writable:true},_connection:{value:null,writable:true},_subscribe:{value:connectableProto._subscribe},_isComplete:{value:connectableProto._isComplete,writable:true},getSubject:{value:connectableProto.getSubject},connect:{value:connectableProto.connect},refCount:{value:connectableProto.refCount}};}();var ConnectableSubscriber=/*@__PURE__*/function(_super){__extends(ConnectableSubscriber,_super);function ConnectableSubscriber(destination,connectable){var _this=_super.call(this,destination)||this;_this.connectable=connectable;return _this;}ConnectableSubscriber.prototype._error=function(err){this._unsubscribe();_super.prototype._error.call(this,err);};ConnectableSubscriber.prototype._complete=function(){this.connectable._isComplete=true;this._unsubscribe();_super.prototype._complete.call(this);};ConnectableSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(connectable){this.connectable=null;var connection=connectable._connection;connectable._refCount=0;connectable._subject=null;connectable._connection=null;if(connection){connection.unsubscribe();}}};return ConnectableSubscriber;}(SubjectSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */function groupBy(keySelector,elementSelector,durationSelector,subjectSelector){return function(source){return source.lift(new GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector));};}var GroupByOperator=/*@__PURE__*/function(){function GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector){this.keySelector=keySelector;this.elementSelector=elementSelector;this.durationSelector=durationSelector;this.subjectSelector=subjectSelector;}GroupByOperator.prototype.call=function(subscriber,source){return source.subscribe(new GroupBySubscriber(subscriber,this.keySelector,this.elementSelector,this.durationSelector,this.subjectSelector));};return GroupByOperator;}();var GroupBySubscriber=/*@__PURE__*/function(_super){__extends(GroupBySubscriber,_super);function GroupBySubscriber(destination,keySelector,elementSelector,durationSelector,subjectSelector){var _this=_super.call(this,destination)||this;_this.keySelector=keySelector;_this.elementSelector=elementSelector;_this.durationSelector=durationSelector;_this.subjectSelector=subjectSelector;_this.groups=null;_this.attemptedToUnsubscribe=false;_this.count=0;return _this;}GroupBySubscriber.prototype._next=function(value){var key;try{key=this.keySelector(value);}catch(err){this.error(err);return;}this._group(value,key);};GroupBySubscriber.prototype._group=function(value,key){var groups=this.groups;if(!groups){groups=this.groups=new Map();}var group=groups.get(key);var element;if(this.elementSelector){try{element=this.elementSelector(value);}catch(err){this.error(err);}}else{element=value;}if(!group){group=this.subjectSelector?this.subjectSelector():new Subject();groups.set(key,group);var groupedObservable=new GroupedObservable(key,group,this);this.destination.next(groupedObservable);if(this.durationSelector){var duration=void 0;try{duration=this.durationSelector(new GroupedObservable(key,group));}catch(err){this.error(err);return;}this.add(duration.subscribe(new GroupDurationSubscriber(key,group,this)));}}if(!group.closed){group.next(element);}};GroupBySubscriber.prototype._error=function(err){var groups=this.groups;if(groups){groups.forEach(function(group,key){group.error(err);});groups.clear();}this.destination.error(err);};GroupBySubscriber.prototype._complete=function(){var groups=this.groups;if(groups){groups.forEach(function(group,key){group.complete();});groups.clear();}this.destination.complete();};GroupBySubscriber.prototype.removeGroup=function(key){this.groups.delete(key);};GroupBySubscriber.prototype.unsubscribe=function(){if(!this.closed){this.attemptedToUnsubscribe=true;if(this.count===0){_super.prototype.unsubscribe.call(this);}}};return GroupBySubscriber;}(Subscriber);var GroupDurationSubscriber=/*@__PURE__*/function(_super){__extends(GroupDurationSubscriber,_super);function GroupDurationSubscriber(key,group,parent){var _this=_super.call(this,group)||this;_this.key=key;_this.group=group;_this.parent=parent;return _this;}GroupDurationSubscriber.prototype._next=function(value){this.complete();};GroupDurationSubscriber.prototype._unsubscribe=function(){var _a=this,parent=_a.parent,key=_a.key;this.key=this.parent=null;if(parent){parent.removeGroup(key);}};return GroupDurationSubscriber;}(Subscriber);var GroupedObservable=/*@__PURE__*/function(_super){__extends(GroupedObservable,_super);function GroupedObservable(key,groupSubject,refCountSubscription){var _this=_super.call(this)||this;_this.key=key;_this.groupSubject=groupSubject;_this.refCountSubscription=refCountSubscription;return _this;}GroupedObservable.prototype._subscribe=function(subscriber){var subscription=new Subscription();var _a=this,refCountSubscription=_a.refCountSubscription,groupSubject=_a.groupSubject;if(refCountSubscription&&!refCountSubscription.closed){subscription.add(new InnerRefCountSubscription(refCountSubscription));}subscription.add(groupSubject.subscribe(subscriber));return subscription;};return GroupedObservable;}(Observable);var InnerRefCountSubscription=/*@__PURE__*/function(_super){__extends(InnerRefCountSubscription,_super);function InnerRefCountSubscription(parent){var _this=_super.call(this)||this;_this.parent=parent;parent.count++;return _this;}InnerRefCountSubscription.prototype.unsubscribe=function(){var parent=this.parent;if(!parent.closed&&!this.closed){_super.prototype.unsubscribe.call(this);parent.count-=1;if(parent.count===0&&parent.attemptedToUnsubscribe){parent.unsubscribe();}}};return InnerRefCountSubscription;}(Subscription);/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */var BehaviorSubject=/*@__PURE__*/function(_super){__extends(BehaviorSubject,_super);function BehaviorSubject(_value){var _this=_super.call(this)||this;_this._value=_value;return _this;}Object.defineProperty(BehaviorSubject.prototype,"value",{get:function(){return this.getValue();},enumerable:true,configurable:true});BehaviorSubject.prototype._subscribe=function(subscriber){var subscription=_super.prototype._subscribe.call(this,subscriber);if(subscription&&!subscription.closed){subscriber.next(this._value);}return subscription;};BehaviorSubject.prototype.getValue=function(){if(this.hasError){throw this.thrownError;}else if(this.closed){throw new ObjectUnsubscribedError();}else{return this._value;}};BehaviorSubject.prototype.next=function(value){_super.prototype.next.call(this,this._value=value);};return BehaviorSubject;}(Subject);/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */var Action=/*@__PURE__*/function(_super){__extends(Action,_super);function Action(scheduler,work){return _super.call(this)||this;}Action.prototype.schedule=function(state,delay){return this;};return Action;}(Subscription);/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */var AsyncAction=/*@__PURE__*/function(_super){__extends(AsyncAction,_super);function AsyncAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;_this.pending=false;return _this;}AsyncAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(this.closed){return this;}this.state=state;var id=this.id;var scheduler=this.scheduler;if(id!=null){this.id=this.recycleAsyncId(scheduler,id,delay);}this.pending=true;this.delay=delay;this.id=this.id||this.requestAsyncId(scheduler,this.id,delay);return this;};AsyncAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}return setInterval(scheduler.flush.bind(scheduler,this),delay);};AsyncAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&this.delay===delay&&this.pending===false){return id;}clearInterval(id);return undefined;};AsyncAction.prototype.execute=function(state,delay){if(this.closed){return new Error('executing a cancelled action');}this.pending=false;var error=this._execute(state,delay);if(error){return error;}else if(this.pending===false&&this.id!=null){this.id=this.recycleAsyncId(this.scheduler,this.id,null);}};AsyncAction.prototype._execute=function(state,delay){var errored=false;var errorValue=undefined;try{this.work(state);}catch(e){errored=true;errorValue=!!e&&e||new Error(e);}if(errored){this.unsubscribe();return errorValue;}};AsyncAction.prototype._unsubscribe=function(){var id=this.id;var scheduler=this.scheduler;var actions=scheduler.actions;var index=actions.indexOf(this);this.work=null;this.state=null;this.pending=false;this.scheduler=null;if(index!==-1){actions.splice(index,1);}if(id!=null){this.id=this.recycleAsyncId(scheduler,id,null);}this.delay=null;};return AsyncAction;}(Action);/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */var QueueAction=/*@__PURE__*/function(_super){__extends(QueueAction,_super);function QueueAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;return _this;}QueueAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(delay>0){return _super.prototype.schedule.call(this,state,delay);}this.delay=delay;this.state=state;this.scheduler.flush(this);return this;};QueueAction.prototype.execute=function(state,delay){return delay>0||this.closed?_super.prototype.execute.call(this,state,delay):this._execute(state,delay);};QueueAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}return scheduler.flush(this);};return QueueAction;}(AsyncAction);var Scheduler=/*@__PURE__*/function(){function Scheduler(SchedulerAction,now){if(now===void 0){now=Scheduler.now;}this.SchedulerAction=SchedulerAction;this.now=now;}Scheduler.prototype.schedule=function(work,delay,state){if(delay===void 0){delay=0;}return new this.SchedulerAction(this,work).schedule(state,delay);};Scheduler.now=function(){return Date.now();};return Scheduler;}();/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */var AsyncScheduler=/*@__PURE__*/function(_super){__extends(AsyncScheduler,_super);function AsyncScheduler(SchedulerAction,now){if(now===void 0){now=Scheduler.now;}var _this=_super.call(this,SchedulerAction,function(){if(AsyncScheduler.delegate&&AsyncScheduler.delegate!==_this){return AsyncScheduler.delegate.now();}else{return now();}})||this;_this.actions=[];_this.active=false;_this.scheduled=undefined;return _this;}AsyncScheduler.prototype.schedule=function(work,delay,state){if(delay===void 0){delay=0;}if(AsyncScheduler.delegate&&AsyncScheduler.delegate!==this){return AsyncScheduler.delegate.schedule(work,delay,state);}else{return _super.prototype.schedule.call(this,work,delay,state);}};AsyncScheduler.prototype.flush=function(action){var actions=this.actions;if(this.active){actions.push(action);return;}var error;this.active=true;do{if(error=action.execute(action.state,action.delay)){break;}}while(action=actions.shift());this.active=false;if(error){while(action=actions.shift()){action.unsubscribe();}throw error;}};return AsyncScheduler;}(Scheduler);/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */var QueueScheduler=/*@__PURE__*/function(_super){__extends(QueueScheduler,_super);function QueueScheduler(){return _super!==null&&_super.apply(this,arguments)||this;}return QueueScheduler;}(AsyncScheduler);/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */var queueScheduler=/*@__PURE__*/new QueueScheduler(QueueAction);var queue=queueScheduler;/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */var EMPTY=/*@__PURE__*/new Observable(function(subscriber){return subscriber.complete();});function empty$1(scheduler){return scheduler?emptyScheduled(scheduler):EMPTY;}function emptyScheduled(scheduler){return new Observable(function(subscriber){return scheduler.schedule(function(){return subscriber.complete();});});}/** PURE_IMPORTS_START  PURE_IMPORTS_END */function isScheduler(value){return value&&typeof value.schedule==='function';}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var subscribeToArray=function(array){return function(subscriber){for(var i=0,len=array.length;i<len&&!subscriber.closed;i++){subscriber.next(array[i]);}subscriber.complete();};};/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */function scheduleArray(input,scheduler){return new Observable(function(subscriber){var sub=new Subscription();var i=0;sub.add(scheduler.schedule(function(){if(i===input.length){subscriber.complete();return;}subscriber.next(input[i++]);if(!subscriber.closed){sub.add(this.schedule());}}));return sub;});}/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */function fromArray(input,scheduler){if(!scheduler){return new Observable(subscribeToArray(input));}else{return scheduleArray(input,scheduler);}}/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */function of$2(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var scheduler=args[args.length-1];if(isScheduler(scheduler)){args.pop();return scheduleArray(args,scheduler);}else{return fromArray(args);}}/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */function throwError(error,scheduler){if(!scheduler){return new Observable(function(subscriber){return subscriber.error(error);});}else{return new Observable(function(subscriber){return scheduler.schedule(dispatch$7,0,{error:error,subscriber:subscriber});});}}function dispatch$7(_a){var error=_a.error,subscriber=_a.subscriber;subscriber.error(error);}/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */var NotificationKind;/*@__PURE__*/(function(NotificationKind){NotificationKind["NEXT"]="N";NotificationKind["ERROR"]="E";NotificationKind["COMPLETE"]="C";})(NotificationKind||(NotificationKind={}));var Notification=/*@__PURE__*/function(){function Notification(kind,value,error){this.kind=kind;this.value=value;this.error=error;this.hasValue=kind==='N';}Notification.prototype.observe=function(observer){switch(this.kind){case'N':return observer.next&&observer.next(this.value);case'E':return observer.error&&observer.error(this.error);case'C':return observer.complete&&observer.complete();}};Notification.prototype.do=function(next,error,complete){var kind=this.kind;switch(kind){case'N':return next&&next(this.value);case'E':return error&&error(this.error);case'C':return complete&&complete();}};Notification.prototype.accept=function(nextOrObserver,error,complete){if(nextOrObserver&&typeof nextOrObserver.next==='function'){return this.observe(nextOrObserver);}else{return this.do(nextOrObserver,error,complete);}};Notification.prototype.toObservable=function(){var kind=this.kind;switch(kind){case'N':return of$2(this.value);case'E':return throwError(this.error);case'C':return empty$1();}throw new Error('unexpected notification kind value');};Notification.createNext=function(value){if(typeof value!=='undefined'){return new Notification('N',value);}return Notification.undefinedValueNotification;};Notification.createError=function(err){return new Notification('E',undefined,err);};Notification.createComplete=function(){return Notification.completeNotification;};Notification.completeNotification=new Notification('C');Notification.undefinedValueNotification=new Notification('N',undefined);return Notification;}();/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */function observeOn(scheduler,delay){if(delay===void 0){delay=0;}return function observeOnOperatorFunction(source){return source.lift(new ObserveOnOperator(scheduler,delay));};}var ObserveOnOperator=/*@__PURE__*/function(){function ObserveOnOperator(scheduler,delay){if(delay===void 0){delay=0;}this.scheduler=scheduler;this.delay=delay;}ObserveOnOperator.prototype.call=function(subscriber,source){return source.subscribe(new ObserveOnSubscriber(subscriber,this.scheduler,this.delay));};return ObserveOnOperator;}();var ObserveOnSubscriber=/*@__PURE__*/function(_super){__extends(ObserveOnSubscriber,_super);function ObserveOnSubscriber(destination,scheduler,delay){if(delay===void 0){delay=0;}var _this=_super.call(this,destination)||this;_this.scheduler=scheduler;_this.delay=delay;return _this;}ObserveOnSubscriber.dispatch=function(arg){var notification=arg.notification,destination=arg.destination;notification.observe(destination);this.unsubscribe();};ObserveOnSubscriber.prototype.scheduleMessage=function(notification){var destination=this.destination;destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,this.delay,new ObserveOnMessage(notification,this.destination)));};ObserveOnSubscriber.prototype._next=function(value){this.scheduleMessage(Notification.createNext(value));};ObserveOnSubscriber.prototype._error=function(err){this.scheduleMessage(Notification.createError(err));this.unsubscribe();};ObserveOnSubscriber.prototype._complete=function(){this.scheduleMessage(Notification.createComplete());this.unsubscribe();};return ObserveOnSubscriber;}(Subscriber);var ObserveOnMessage=/*@__PURE__*/function(){function ObserveOnMessage(notification,destination){this.notification=notification;this.destination=destination;}return ObserveOnMessage;}();/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */var ReplaySubject=/*@__PURE__*/function(_super){__extends(ReplaySubject,_super);function ReplaySubject(bufferSize,windowTime,scheduler){if(bufferSize===void 0){bufferSize=Number.POSITIVE_INFINITY;}if(windowTime===void 0){windowTime=Number.POSITIVE_INFINITY;}var _this=_super.call(this)||this;_this.scheduler=scheduler;_this._events=[];_this._infiniteTimeWindow=false;_this._bufferSize=bufferSize<1?1:bufferSize;_this._windowTime=windowTime<1?1:windowTime;if(windowTime===Number.POSITIVE_INFINITY){_this._infiniteTimeWindow=true;_this.next=_this.nextInfiniteTimeWindow;}else{_this.next=_this.nextTimeWindow;}return _this;}ReplaySubject.prototype.nextInfiniteTimeWindow=function(value){if(!this.isStopped){var _events=this._events;_events.push(value);if(_events.length>this._bufferSize){_events.shift();}}_super.prototype.next.call(this,value);};ReplaySubject.prototype.nextTimeWindow=function(value){if(!this.isStopped){this._events.push(new ReplayEvent(this._getNow(),value));this._trimBufferThenGetEvents();}_super.prototype.next.call(this,value);};ReplaySubject.prototype._subscribe=function(subscriber){var _infiniteTimeWindow=this._infiniteTimeWindow;var _events=_infiniteTimeWindow?this._events:this._trimBufferThenGetEvents();var scheduler=this.scheduler;var len=_events.length;var subscription;if(this.closed){throw new ObjectUnsubscribedError();}else if(this.isStopped||this.hasError){subscription=Subscription.EMPTY;}else{this.observers.push(subscriber);subscription=new SubjectSubscription(this,subscriber);}if(scheduler){subscriber.add(subscriber=new ObserveOnSubscriber(subscriber,scheduler));}if(_infiniteTimeWindow){for(var i=0;i<len&&!subscriber.closed;i++){subscriber.next(_events[i]);}}else{for(var i=0;i<len&&!subscriber.closed;i++){subscriber.next(_events[i].value);}}if(this.hasError){subscriber.error(this.thrownError);}else if(this.isStopped){subscriber.complete();}return subscription;};ReplaySubject.prototype._getNow=function(){return(this.scheduler||queue).now();};ReplaySubject.prototype._trimBufferThenGetEvents=function(){var now=this._getNow();var _bufferSize=this._bufferSize;var _windowTime=this._windowTime;var _events=this._events;var eventsCount=_events.length;var spliceCount=0;while(spliceCount<eventsCount){if(now-_events[spliceCount].time<_windowTime){break;}spliceCount++;}if(eventsCount>_bufferSize){spliceCount=Math.max(spliceCount,eventsCount-_bufferSize);}if(spliceCount>0){_events.splice(0,spliceCount);}return _events;};return ReplaySubject;}(Subject);var ReplayEvent=/*@__PURE__*/function(){function ReplayEvent(time,value){this.time=time;this.value=value;}return ReplayEvent;}();/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */var AsyncSubject=/*@__PURE__*/function(_super){__extends(AsyncSubject,_super);function AsyncSubject(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.value=null;_this.hasNext=false;_this.hasCompleted=false;return _this;}AsyncSubject.prototype._subscribe=function(subscriber){if(this.hasError){subscriber.error(this.thrownError);return Subscription.EMPTY;}else if(this.hasCompleted&&this.hasNext){subscriber.next(this.value);subscriber.complete();return Subscription.EMPTY;}return _super.prototype._subscribe.call(this,subscriber);};AsyncSubject.prototype.next=function(value){if(!this.hasCompleted){this.value=value;this.hasNext=true;}};AsyncSubject.prototype.error=function(error){if(!this.hasCompleted){_super.prototype.error.call(this,error);}};AsyncSubject.prototype.complete=function(){this.hasCompleted=true;if(this.hasNext){_super.prototype.next.call(this,this.value);}_super.prototype.complete.call(this);};return AsyncSubject;}(Subject);/** PURE_IMPORTS_START  PURE_IMPORTS_END */var nextHandle=1;var RESOLVED=/*@__PURE__*/function(){return/*@__PURE__*/Promise.resolve();}();var activeHandles={};function findAndClearHandle(handle){if(handle in activeHandles){delete activeHandles[handle];return true;}return false;}var Immediate={setImmediate:function(cb){var handle=nextHandle++;activeHandles[handle]=true;RESOLVED.then(function(){return findAndClearHandle(handle)&&cb();});return handle;},clearImmediate:function(handle){findAndClearHandle(handle);}};/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */var AsapAction=/*@__PURE__*/function(_super){__extends(AsapAction,_super);function AsapAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;return _this;}AsapAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}scheduler.actions.push(this);return scheduler.scheduled||(scheduler.scheduled=Immediate.setImmediate(scheduler.flush.bind(scheduler,null)));};AsapAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);}if(scheduler.actions.length===0){Immediate.clearImmediate(id);scheduler.scheduled=undefined;}return undefined;};return AsapAction;}(AsyncAction);/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */var AsapScheduler=/*@__PURE__*/function(_super){__extends(AsapScheduler,_super);function AsapScheduler(){return _super!==null&&_super.apply(this,arguments)||this;}AsapScheduler.prototype.flush=function(action){this.active=true;this.scheduled=undefined;var actions=this.actions;var error;var index=-1;var count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay)){break;}}while(++index<count&&(action=actions.shift()));this.active=false;if(error){while(++index<count&&(action=actions.shift())){action.unsubscribe();}throw error;}};return AsapScheduler;}(AsyncScheduler);/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */var asapScheduler=/*@__PURE__*/new AsapScheduler(AsapAction);var asap=asapScheduler;/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */var asyncScheduler=/*@__PURE__*/new AsyncScheduler(AsyncAction);var async=asyncScheduler;/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */var AnimationFrameAction=/*@__PURE__*/function(_super){__extends(AnimationFrameAction,_super);function AnimationFrameAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;return _this;}AnimationFrameAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}scheduler.actions.push(this);return scheduler.scheduled||(scheduler.scheduled=requestAnimationFrame(function(){return scheduler.flush(null);}));};AnimationFrameAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);}if(scheduler.actions.length===0){cancelAnimationFrame(id);scheduler.scheduled=undefined;}return undefined;};return AnimationFrameAction;}(AsyncAction);/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */var AnimationFrameScheduler=/*@__PURE__*/function(_super){__extends(AnimationFrameScheduler,_super);function AnimationFrameScheduler(){return _super!==null&&_super.apply(this,arguments)||this;}AnimationFrameScheduler.prototype.flush=function(action){this.active=true;this.scheduled=undefined;var actions=this.actions;var error;var index=-1;var count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay)){break;}}while(++index<count&&(action=actions.shift()));this.active=false;if(error){while(++index<count&&(action=actions.shift())){action.unsubscribe();}throw error;}};return AnimationFrameScheduler;}(AsyncScheduler);/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */var animationFrameScheduler=/*@__PURE__*/new AnimationFrameScheduler(AnimationFrameAction);var animationFrame=animationFrameScheduler;/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */var VirtualTimeScheduler=/*@__PURE__*/function(_super){__extends(VirtualTimeScheduler,_super);function VirtualTimeScheduler(SchedulerAction,maxFrames){if(SchedulerAction===void 0){SchedulerAction=VirtualAction;}if(maxFrames===void 0){maxFrames=Number.POSITIVE_INFINITY;}var _this=_super.call(this,SchedulerAction,function(){return _this.frame;})||this;_this.maxFrames=maxFrames;_this.frame=0;_this.index=-1;return _this;}VirtualTimeScheduler.prototype.flush=function(){var _a=this,actions=_a.actions,maxFrames=_a.maxFrames;var error,action;while((action=actions[0])&&action.delay<=maxFrames){actions.shift();this.frame=action.delay;if(error=action.execute(action.state,action.delay)){break;}}if(error){while(action=actions.shift()){action.unsubscribe();}throw error;}};VirtualTimeScheduler.frameTimeFactor=10;return VirtualTimeScheduler;}(AsyncScheduler);var VirtualAction=/*@__PURE__*/function(_super){__extends(VirtualAction,_super);function VirtualAction(scheduler,work,index){if(index===void 0){index=scheduler.index+=1;}var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;_this.index=index;_this.active=true;_this.index=scheduler.index=index;return _this;}VirtualAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(!this.id){return _super.prototype.schedule.call(this,state,delay);}this.active=false;var action=new VirtualAction(this.scheduler,this.work);this.add(action);return action.schedule(state,delay);};VirtualAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}this.delay=scheduler.frame+delay;var actions=scheduler.actions;actions.push(this);actions.sort(VirtualAction.sortActions);return true;};VirtualAction.prototype.recycleAsyncId=function(scheduler,id,delay){return undefined;};VirtualAction.prototype._execute=function(state,delay){if(this.active===true){return _super.prototype._execute.call(this,state,delay);}};VirtualAction.sortActions=function(a,b){if(a.delay===b.delay){if(a.index===b.index){return 0;}else if(a.index>b.index){return 1;}else{return-1;}}else if(a.delay>b.delay){return 1;}else{return-1;}};return VirtualAction;}(AsyncAction);/** PURE_IMPORTS_START  PURE_IMPORTS_END */function noop(){}/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */function isObservable(obj){return!!obj&&(obj instanceof Observable||typeof obj.lift==='function'&&typeof obj.subscribe==='function');}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var ArgumentOutOfRangeErrorImpl=/*@__PURE__*/function(){function ArgumentOutOfRangeErrorImpl(){Error.call(this);this.message='argument out of range';this.name='ArgumentOutOfRangeError';return this;}ArgumentOutOfRangeErrorImpl.prototype=/*@__PURE__*/Object.create(Error.prototype);return ArgumentOutOfRangeErrorImpl;}();var ArgumentOutOfRangeError=ArgumentOutOfRangeErrorImpl;/** PURE_IMPORTS_START  PURE_IMPORTS_END */var EmptyErrorImpl=/*@__PURE__*/function(){function EmptyErrorImpl(){Error.call(this);this.message='no elements in sequence';this.name='EmptyError';return this;}EmptyErrorImpl.prototype=/*@__PURE__*/Object.create(Error.prototype);return EmptyErrorImpl;}();var EmptyError=EmptyErrorImpl;/** PURE_IMPORTS_START  PURE_IMPORTS_END */var TimeoutErrorImpl=/*@__PURE__*/function(){function TimeoutErrorImpl(){Error.call(this);this.message='Timeout has occurred';this.name='TimeoutError';return this;}TimeoutErrorImpl.prototype=/*@__PURE__*/Object.create(Error.prototype);return TimeoutErrorImpl;}();var TimeoutError$1=TimeoutErrorImpl;/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function map(project,thisArg){return function mapOperation(source){if(typeof project!=='function'){throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');}return source.lift(new MapOperator(project,thisArg));};}var MapOperator=/*@__PURE__*/function(){function MapOperator(project,thisArg){this.project=project;this.thisArg=thisArg;}MapOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapSubscriber(subscriber,this.project,this.thisArg));};return MapOperator;}();var MapSubscriber=/*@__PURE__*/function(_super){__extends(MapSubscriber,_super);function MapSubscriber(destination,project,thisArg){var _this=_super.call(this,destination)||this;_this.project=project;_this.count=0;_this.thisArg=thisArg||_this;return _this;}MapSubscriber.prototype._next=function(value){var result;try{result=this.project.call(this.thisArg,value,this.count++);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return MapSubscriber;}(Subscriber);/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */function bindCallback(callbackFunc,resultSelector,scheduler){if(resultSelector){if(isScheduler(resultSelector)){scheduler=resultSelector;}else{return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return bindCallback(callbackFunc,scheduler).apply(void 0,args).pipe(map(function(args){return isArray(args)?resultSelector.apply(void 0,args):resultSelector(args);}));};}}return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var context=this;var subject;var params={context:context,subject:subject,callbackFunc:callbackFunc,scheduler:scheduler};return new Observable(function(subscriber){if(!scheduler){if(!subject){subject=new AsyncSubject();var handler=function(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i]=arguments[_i];}subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs);subject.complete();};try{callbackFunc.apply(context,args.concat([handler]));}catch(err){if(canReportError(subject)){subject.error(err);}else{console.warn(err);}}}return subject.subscribe(subscriber);}else{var state={args:args,subscriber:subscriber,params:params};return scheduler.schedule(dispatch$6,0,state);}});};}function dispatch$6(state){var _this=this;var args=state.args,subscriber=state.subscriber,params=state.params;var callbackFunc=params.callbackFunc,context=params.context,scheduler=params.scheduler;var subject=params.subject;if(!subject){subject=params.subject=new AsyncSubject();var handler=function(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i]=arguments[_i];}var value=innerArgs.length<=1?innerArgs[0]:innerArgs;_this.add(scheduler.schedule(dispatchNext$3,0,{value:value,subject:subject}));};try{callbackFunc.apply(context,args.concat([handler]));}catch(err){subject.error(err);}}this.add(subject.subscribe(subscriber));}function dispatchNext$3(state){var value=state.value,subject=state.subject;subject.next(value);subject.complete();}/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */function bindNodeCallback(callbackFunc,resultSelector,scheduler){if(resultSelector){if(isScheduler(resultSelector)){scheduler=resultSelector;}else{return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return bindNodeCallback(callbackFunc,scheduler).apply(void 0,args).pipe(map(function(args){return isArray(args)?resultSelector.apply(void 0,args):resultSelector(args);}));};}}return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var params={subject:undefined,args:args,callbackFunc:callbackFunc,scheduler:scheduler,context:this};return new Observable(function(subscriber){var context=params.context;var subject=params.subject;if(!scheduler){if(!subject){subject=params.subject=new AsyncSubject();var handler=function(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i]=arguments[_i];}var err=innerArgs.shift();if(err){subject.error(err);return;}subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs);subject.complete();};try{callbackFunc.apply(context,args.concat([handler]));}catch(err){if(canReportError(subject)){subject.error(err);}else{console.warn(err);}}}return subject.subscribe(subscriber);}else{return scheduler.schedule(dispatch$5,0,{params:params,subscriber:subscriber,context:context});}});};}function dispatch$5(state){var _this=this;var params=state.params,subscriber=state.subscriber,context=state.context;var callbackFunc=params.callbackFunc,args=params.args,scheduler=params.scheduler;var subject=params.subject;if(!subject){subject=params.subject=new AsyncSubject();var handler=function(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i]=arguments[_i];}var err=innerArgs.shift();if(err){_this.add(scheduler.schedule(dispatchError,0,{err:err,subject:subject}));}else{var value=innerArgs.length<=1?innerArgs[0]:innerArgs;_this.add(scheduler.schedule(dispatchNext$2,0,{value:value,subject:subject}));}};try{callbackFunc.apply(context,args.concat([handler]));}catch(err){this.add(scheduler.schedule(dispatchError,0,{err:err,subject:subject}));}}this.add(subject.subscribe(subscriber));}function dispatchNext$2(arg){var value=arg.value,subject=arg.subject;subject.next(value);subject.complete();}function dispatchError(arg){var err=arg.err,subject=arg.subject;subject.error(err);}/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */var OuterSubscriber=/*@__PURE__*/function(_super){__extends(OuterSubscriber,_super);function OuterSubscriber(){return _super!==null&&_super.apply(this,arguments)||this;}OuterSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue);};OuterSubscriber.prototype.notifyError=function(error,innerSub){this.destination.error(error);};OuterSubscriber.prototype.notifyComplete=function(innerSub){this.destination.complete();};return OuterSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */var InnerSubscriber=/*@__PURE__*/function(_super){__extends(InnerSubscriber,_super);function InnerSubscriber(parent,outerValue,outerIndex){var _this=_super.call(this)||this;_this.parent=parent;_this.outerValue=outerValue;_this.outerIndex=outerIndex;_this.index=0;return _this;}InnerSubscriber.prototype._next=function(value){this.parent.notifyNext(this.outerValue,value,this.outerIndex,this.index++,this);};InnerSubscriber.prototype._error=function(error){this.parent.notifyError(error,this);this.unsubscribe();};InnerSubscriber.prototype._complete=function(){this.parent.notifyComplete(this);this.unsubscribe();};return InnerSubscriber;}(Subscriber);/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */var subscribeToPromise=function(promise){return function(subscriber){promise.then(function(value){if(!subscriber.closed){subscriber.next(value);subscriber.complete();}},function(err){return subscriber.error(err);}).then(null,hostReportError);return subscriber;};};/** PURE_IMPORTS_START  PURE_IMPORTS_END */function getSymbolIterator(){if(typeof Symbol!=='function'||!Symbol.iterator){return'@@iterator';}return Symbol.iterator;}var iterator=/*@__PURE__*/getSymbolIterator();/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */var subscribeToIterable=function(iterable){return function(subscriber){var iterator$1=iterable[iterator]();do{var item=void 0;try{item=iterator$1.next();}catch(err){subscriber.error(err);return subscriber;}if(item.done){subscriber.complete();break;}subscriber.next(item.value);if(subscriber.closed){break;}}while(true);if(typeof iterator$1.return==='function'){subscriber.add(function(){if(iterator$1.return){iterator$1.return();}});}return subscriber;};};/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */var subscribeToObservable=function(obj){return function(subscriber){var obs=obj[observable]();if(typeof obs.subscribe!=='function'){throw new TypeError('Provided object does not correctly implement Symbol.observable');}else{return obs.subscribe(subscriber);}};};/** PURE_IMPORTS_START  PURE_IMPORTS_END */var isArrayLike=function(x){return x&&typeof x.length==='number'&&typeof x!=='function';};/** PURE_IMPORTS_START  PURE_IMPORTS_END */function isPromise$1(value){return!!value&&typeof value.subscribe!=='function'&&typeof value.then==='function';}/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */var subscribeTo=function(result){if(!!result&&typeof result[observable]==='function'){return subscribeToObservable(result);}else if(isArrayLike(result)){return subscribeToArray(result);}else if(isPromise$1(result)){return subscribeToPromise(result);}else if(!!result&&typeof result[iterator]==='function'){return subscribeToIterable(result);}else{var value=isObject(result)?'an invalid object':"'"+result+"'";var msg="You provided "+value+" where a stream was expected."+' You can provide an Observable, Promise, Array, or Iterable.';throw new TypeError(msg);}};/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */function subscribeToResult(outerSubscriber,result,outerValue,outerIndex,innerSubscriber){if(innerSubscriber===void 0){innerSubscriber=new InnerSubscriber(outerSubscriber,outerValue,outerIndex);}if(innerSubscriber.closed){return undefined;}if(result instanceof Observable){return result.subscribe(innerSubscriber);}return subscribeTo(result)(innerSubscriber);}/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */var NONE={};function combineLatest$1(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}var resultSelector=undefined;var scheduler=undefined;if(isScheduler(observables[observables.length-1])){scheduler=observables.pop();}if(typeof observables[observables.length-1]==='function'){resultSelector=observables.pop();}if(observables.length===1&&isArray(observables[0])){observables=observables[0];}return fromArray(observables,scheduler).lift(new CombineLatestOperator(resultSelector));}var CombineLatestOperator=/*@__PURE__*/function(){function CombineLatestOperator(resultSelector){this.resultSelector=resultSelector;}CombineLatestOperator.prototype.call=function(subscriber,source){return source.subscribe(new CombineLatestSubscriber(subscriber,this.resultSelector));};return CombineLatestOperator;}();var CombineLatestSubscriber=/*@__PURE__*/function(_super){__extends(CombineLatestSubscriber,_super);function CombineLatestSubscriber(destination,resultSelector){var _this=_super.call(this,destination)||this;_this.resultSelector=resultSelector;_this.active=0;_this.values=[];_this.observables=[];return _this;}CombineLatestSubscriber.prototype._next=function(observable){this.values.push(NONE);this.observables.push(observable);};CombineLatestSubscriber.prototype._complete=function(){var observables=this.observables;var len=observables.length;if(len===0){this.destination.complete();}else{this.active=len;this.toRespond=len;for(var i=0;i<len;i++){var observable=observables[i];this.add(subscribeToResult(this,observable,undefined,i));}}};CombineLatestSubscriber.prototype.notifyComplete=function(unused){if((this.active-=1)===0){this.destination.complete();}};CombineLatestSubscriber.prototype.notifyNext=function(_outerValue,innerValue,outerIndex){var values=this.values;var oldVal=values[outerIndex];var toRespond=!this.toRespond?0:oldVal===NONE?--this.toRespond:this.toRespond;values[outerIndex]=innerValue;if(toRespond===0){if(this.resultSelector){this._tryResultSelector(values);}else{this.destination.next(values.slice());}}};CombineLatestSubscriber.prototype._tryResultSelector=function(values){var result;try{result=this.resultSelector.apply(this,values);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return CombineLatestSubscriber;}(OuterSubscriber);/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */function scheduleObservable(input,scheduler){return new Observable(function(subscriber){var sub=new Subscription();sub.add(scheduler.schedule(function(){var observable$1=input[observable]();sub.add(observable$1.subscribe({next:function(value){sub.add(scheduler.schedule(function(){return subscriber.next(value);}));},error:function(err){sub.add(scheduler.schedule(function(){return subscriber.error(err);}));},complete:function(){sub.add(scheduler.schedule(function(){return subscriber.complete();}));}}));}));return sub;});}/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */function schedulePromise(input,scheduler){return new Observable(function(subscriber){var sub=new Subscription();sub.add(scheduler.schedule(function(){return input.then(function(value){sub.add(scheduler.schedule(function(){subscriber.next(value);sub.add(scheduler.schedule(function(){return subscriber.complete();}));}));},function(err){sub.add(scheduler.schedule(function(){return subscriber.error(err);}));});}));return sub;});}/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */function scheduleIterable(input,scheduler){if(!input){throw new Error('Iterable cannot be null');}return new Observable(function(subscriber){var sub=new Subscription();var iterator$1;sub.add(function(){if(iterator$1&&typeof iterator$1.return==='function'){iterator$1.return();}});sub.add(scheduler.schedule(function(){iterator$1=input[iterator]();sub.add(scheduler.schedule(function(){if(subscriber.closed){return;}var value;var done;try{var result=iterator$1.next();value=result.value;done=result.done;}catch(err){subscriber.error(err);return;}if(done){subscriber.complete();}else{subscriber.next(value);this.schedule();}}));}));return sub;});}/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */function isInteropObservable(input){return input&&typeof input[observable]==='function';}/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */function isIterable(input){return input&&typeof input[iterator]==='function';}/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */function scheduled(input,scheduler){if(input!=null){if(isInteropObservable(input)){return scheduleObservable(input,scheduler);}else if(isPromise$1(input)){return schedulePromise(input,scheduler);}else if(isArrayLike(input)){return scheduleArray(input,scheduler);}else if(isIterable(input)||typeof input==='string'){return scheduleIterable(input,scheduler);}}throw new TypeError((input!==null&&typeof input||input)+' is not observable');}/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */function from$2(input,scheduler){if(!scheduler){if(input instanceof Observable){return input;}return new Observable(subscribeTo(input));}else{return scheduled(input,scheduler);}}/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_util_subscribeTo PURE_IMPORTS_END */var SimpleInnerSubscriber=/*@__PURE__*/function(_super){__extends(SimpleInnerSubscriber,_super);function SimpleInnerSubscriber(parent){var _this=_super.call(this)||this;_this.parent=parent;return _this;}SimpleInnerSubscriber.prototype._next=function(value){this.parent.notifyNext(value);};SimpleInnerSubscriber.prototype._error=function(error){this.parent.notifyError(error);this.unsubscribe();};SimpleInnerSubscriber.prototype._complete=function(){this.parent.notifyComplete();this.unsubscribe();};return SimpleInnerSubscriber;}(Subscriber);var SimpleOuterSubscriber=/*@__PURE__*/function(_super){__extends(SimpleOuterSubscriber,_super);function SimpleOuterSubscriber(){return _super!==null&&_super.apply(this,arguments)||this;}SimpleOuterSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue);};SimpleOuterSubscriber.prototype.notifyError=function(err){this.destination.error(err);};SimpleOuterSubscriber.prototype.notifyComplete=function(){this.destination.complete();};return SimpleOuterSubscriber;}(Subscriber);function innerSubscribe(result,innerSubscriber){if(innerSubscriber.closed){return undefined;}if(result instanceof Observable){return result.subscribe(innerSubscriber);}var subscription;try{subscription=subscribeTo(result)(innerSubscriber);}catch(error){innerSubscriber.error(error);}return subscription;}/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */function mergeMap(project,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}if(typeof resultSelector==='function'){return function(source){return source.pipe(mergeMap(function(a,i){return from$2(project(a,i)).pipe(map(function(b,ii){return resultSelector(a,b,i,ii);}));},concurrent));};}else if(typeof resultSelector==='number'){concurrent=resultSelector;}return function(source){return source.lift(new MergeMapOperator(project,concurrent));};}var MergeMapOperator=/*@__PURE__*/function(){function MergeMapOperator(project,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}this.project=project;this.concurrent=concurrent;}MergeMapOperator.prototype.call=function(observer,source){return source.subscribe(new MergeMapSubscriber(observer,this.project,this.concurrent));};return MergeMapOperator;}();var MergeMapSubscriber=/*@__PURE__*/function(_super){__extends(MergeMapSubscriber,_super);function MergeMapSubscriber(destination,project,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}var _this=_super.call(this,destination)||this;_this.project=project;_this.concurrent=concurrent;_this.hasCompleted=false;_this.buffer=[];_this.active=0;_this.index=0;return _this;}MergeMapSubscriber.prototype._next=function(value){if(this.active<this.concurrent){this._tryNext(value);}else{this.buffer.push(value);}};MergeMapSubscriber.prototype._tryNext=function(value){var result;var index=this.index++;try{result=this.project(value,index);}catch(err){this.destination.error(err);return;}this.active++;this._innerSub(result);};MergeMapSubscriber.prototype._innerSub=function(ish){var innerSubscriber=new SimpleInnerSubscriber(this);var destination=this.destination;destination.add(innerSubscriber);var innerSubscription=innerSubscribe(ish,innerSubscriber);if(innerSubscription!==innerSubscriber){destination.add(innerSubscription);}};MergeMapSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0&&this.buffer.length===0){this.destination.complete();}this.unsubscribe();};MergeMapSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue);};MergeMapSubscriber.prototype.notifyComplete=function(){var buffer=this.buffer;this.active--;if(buffer.length>0){this._next(buffer.shift());}else if(this.active===0&&this.hasCompleted){this.destination.complete();}};return MergeMapSubscriber;}(SimpleOuterSubscriber);var flatMap=mergeMap;/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */function mergeAll(concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}return mergeMap(identity,concurrent);}/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */function concatAll(){return mergeAll(1);}/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */function concat$1(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return concatAll()(of$2.apply(void 0,observables));}/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */function defer$1(observableFactory){return new Observable(function(subscriber){var input;try{input=observableFactory();}catch(err){subscriber.error(err);return undefined;}var source=input?from$2(input):empty$1();return source.subscribe(subscriber);});}/** PURE_IMPORTS_START _Observable,_util_isArray,_operators_map,_util_isObject,_from PURE_IMPORTS_END */function forkJoin(){var sources=[];for(var _i=0;_i<arguments.length;_i++){sources[_i]=arguments[_i];}if(sources.length===1){var first_1=sources[0];if(isArray(first_1)){return forkJoinInternal(first_1,null);}if(isObject(first_1)&&Object.getPrototypeOf(first_1)===Object.prototype){var keys=Object.keys(first_1);return forkJoinInternal(keys.map(function(key){return first_1[key];}),keys);}}if(typeof sources[sources.length-1]==='function'){var resultSelector_1=sources.pop();sources=sources.length===1&&isArray(sources[0])?sources[0]:sources;return forkJoinInternal(sources,null).pipe(map(function(args){return resultSelector_1.apply(void 0,args);}));}return forkJoinInternal(sources,null);}function forkJoinInternal(sources,keys){return new Observable(function(subscriber){var len=sources.length;if(len===0){subscriber.complete();return;}var values=new Array(len);var completed=0;var emitted=0;var _loop_1=function(i){var source=from$2(sources[i]);var hasValue=false;subscriber.add(source.subscribe({next:function(value){if(!hasValue){hasValue=true;emitted++;}values[i]=value;},error:function(err){return subscriber.error(err);},complete:function(){completed++;if(completed===len||!hasValue){if(emitted===len){subscriber.next(keys?keys.reduce(function(result,key,i){return result[key]=values[i],result;},{}):values);}subscriber.complete();}}}));};for(var i=0;i<len;i++){_loop_1(i);}});}/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */function fromEvent(target,eventName,options,resultSelector){if(isFunction(options)){resultSelector=options;options=undefined;}if(resultSelector){return fromEvent(target,eventName,options).pipe(map(function(args){return isArray(args)?resultSelector.apply(void 0,args):resultSelector(args);}));}return new Observable(function(subscriber){function handler(e){if(arguments.length>1){subscriber.next(Array.prototype.slice.call(arguments));}else{subscriber.next(e);}}setupSubscription(target,eventName,handler,subscriber,options);});}function setupSubscription(sourceObj,eventName,handler,subscriber,options){var unsubscribe;if(isEventTarget(sourceObj)){var source_1=sourceObj;sourceObj.addEventListener(eventName,handler,options);unsubscribe=function(){return source_1.removeEventListener(eventName,handler,options);};}else if(isJQueryStyleEventEmitter(sourceObj)){var source_2=sourceObj;sourceObj.on(eventName,handler);unsubscribe=function(){return source_2.off(eventName,handler);};}else if(isNodeStyleEventEmitter(sourceObj)){var source_3=sourceObj;sourceObj.addListener(eventName,handler);unsubscribe=function(){return source_3.removeListener(eventName,handler);};}else if(sourceObj&&sourceObj.length){for(var i=0,len=sourceObj.length;i<len;i++){setupSubscription(sourceObj[i],eventName,handler,subscriber,options);}}else{throw new TypeError('Invalid event target');}subscriber.add(unsubscribe);}function isNodeStyleEventEmitter(sourceObj){return sourceObj&&typeof sourceObj.addListener==='function'&&typeof sourceObj.removeListener==='function';}function isJQueryStyleEventEmitter(sourceObj){return sourceObj&&typeof sourceObj.on==='function'&&typeof sourceObj.off==='function';}function isEventTarget(sourceObj){return sourceObj&&typeof sourceObj.addEventListener==='function'&&typeof sourceObj.removeEventListener==='function';}/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */function fromEventPattern(addHandler,removeHandler,resultSelector){if(resultSelector){return fromEventPattern(addHandler,removeHandler).pipe(map(function(args){return isArray(args)?resultSelector.apply(void 0,args):resultSelector(args);}));}return new Observable(function(subscriber){var handler=function(){var e=[];for(var _i=0;_i<arguments.length;_i++){e[_i]=arguments[_i];}return subscriber.next(e.length===1?e[0]:e);};var retValue;try{retValue=addHandler(handler);}catch(err){subscriber.error(err);return undefined;}if(!isFunction(removeHandler)){return undefined;}return function(){return removeHandler(handler,retValue);};});}/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */function generate(initialStateOrOptions,condition,iterate,resultSelectorOrObservable,scheduler){var resultSelector;var initialState;if(arguments.length==1){var options=initialStateOrOptions;initialState=options.initialState;condition=options.condition;iterate=options.iterate;resultSelector=options.resultSelector||identity;scheduler=options.scheduler;}else if(resultSelectorOrObservable===undefined||isScheduler(resultSelectorOrObservable)){initialState=initialStateOrOptions;resultSelector=identity;scheduler=resultSelectorOrObservable;}else{initialState=initialStateOrOptions;resultSelector=resultSelectorOrObservable;}return new Observable(function(subscriber){var state=initialState;if(scheduler){return scheduler.schedule(dispatch$4,0,{subscriber:subscriber,iterate:iterate,condition:condition,resultSelector:resultSelector,state:state});}do{if(condition){var conditionResult=void 0;try{conditionResult=condition(state);}catch(err){subscriber.error(err);return undefined;}if(!conditionResult){subscriber.complete();break;}}var value=void 0;try{value=resultSelector(state);}catch(err){subscriber.error(err);return undefined;}subscriber.next(value);if(subscriber.closed){break;}try{state=iterate(state);}catch(err){subscriber.error(err);return undefined;}}while(true);return undefined;});}function dispatch$4(state){var subscriber=state.subscriber,condition=state.condition;if(subscriber.closed){return undefined;}if(state.needIterate){try{state.state=state.iterate(state.state);}catch(err){subscriber.error(err);return undefined;}}else{state.needIterate=true;}if(condition){var conditionResult=void 0;try{conditionResult=condition(state.state);}catch(err){subscriber.error(err);return undefined;}if(!conditionResult){subscriber.complete();return undefined;}if(subscriber.closed){return undefined;}}var value;try{value=state.resultSelector(state.state);}catch(err){subscriber.error(err);return undefined;}if(subscriber.closed){return undefined;}subscriber.next(value);if(subscriber.closed){return undefined;}return this.schedule(state);}/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */function iif(condition,trueResult,falseResult){if(trueResult===void 0){trueResult=EMPTY;}if(falseResult===void 0){falseResult=EMPTY;}return defer$1(function(){return condition()?trueResult:falseResult;});}/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */function isNumeric(val){return!isArray(val)&&val-parseFloat(val)+1>=0;}/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */function interval(period,scheduler){if(period===void 0){period=0;}if(scheduler===void 0){scheduler=async;}if(!isNumeric(period)||period<0){period=0;}if(!scheduler||typeof scheduler.schedule!=='function'){scheduler=async;}return new Observable(function(subscriber){subscriber.add(scheduler.schedule(dispatch$3,period,{subscriber:subscriber,counter:0,period:period}));return subscriber;});}function dispatch$3(state){var subscriber=state.subscriber,counter=state.counter,period=state.period;subscriber.next(counter);this.schedule({subscriber:subscriber,counter:counter+1,period:period},period);}/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */function merge$1(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}var concurrent=Number.POSITIVE_INFINITY;var scheduler=null;var last=observables[observables.length-1];if(isScheduler(last)){scheduler=observables.pop();if(observables.length>1&&typeof observables[observables.length-1]==='number'){concurrent=observables.pop();}}else if(typeof last==='number'){concurrent=observables.pop();}if(scheduler===null&&observables.length===1&&observables[0]instanceof Observable){return observables[0];}return mergeAll(concurrent)(fromArray(observables,scheduler));}/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */var NEVER=/*@__PURE__*/new Observable(noop);function never(){return NEVER;}/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */function onErrorResumeNext$1(){var sources=[];for(var _i=0;_i<arguments.length;_i++){sources[_i]=arguments[_i];}if(sources.length===0){return EMPTY;}var first=sources[0],remainder=sources.slice(1);if(sources.length===1&&isArray(first)){return onErrorResumeNext$1.apply(void 0,first);}return new Observable(function(subscriber){var subNext=function(){return subscriber.add(onErrorResumeNext$1.apply(void 0,remainder).subscribe(subscriber));};return from$2(first).subscribe({next:function(value){subscriber.next(value);},error:subNext,complete:subNext});});}/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */function pairs(obj,scheduler){if(!scheduler){return new Observable(function(subscriber){var keys=Object.keys(obj);for(var i=0;i<keys.length&&!subscriber.closed;i++){var key=keys[i];if(obj.hasOwnProperty(key)){subscriber.next([key,obj[key]]);}}subscriber.complete();});}else{return new Observable(function(subscriber){var keys=Object.keys(obj);var subscription=new Subscription();subscription.add(scheduler.schedule(dispatch$2,0,{keys:keys,index:0,subscriber:subscriber,subscription:subscription,obj:obj}));return subscription;});}}function dispatch$2(state){var keys=state.keys,index=state.index,subscriber=state.subscriber,subscription=state.subscription,obj=state.obj;if(!subscriber.closed){if(index<keys.length){var key=keys[index];subscriber.next([key,obj[key]]);subscription.add(this.schedule({keys:keys,index:index+1,subscriber:subscriber,subscription:subscription,obj:obj}));}else{subscriber.complete();}}}/** PURE_IMPORTS_START  PURE_IMPORTS_END */function not(pred,thisArg){function notPred(){return!notPred.pred.apply(notPred.thisArg,arguments);}notPred.pred=pred;notPred.thisArg=thisArg;return notPred;}/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function filter$1(predicate,thisArg){return function filterOperatorFunction(source){return source.lift(new FilterOperator(predicate,thisArg));};}var FilterOperator=/*@__PURE__*/function(){function FilterOperator(predicate,thisArg){this.predicate=predicate;this.thisArg=thisArg;}FilterOperator.prototype.call=function(subscriber,source){return source.subscribe(new FilterSubscriber(subscriber,this.predicate,this.thisArg));};return FilterOperator;}();var FilterSubscriber=/*@__PURE__*/function(_super){__extends(FilterSubscriber,_super);function FilterSubscriber(destination,predicate,thisArg){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.thisArg=thisArg;_this.count=0;return _this;}FilterSubscriber.prototype._next=function(value){var result;try{result=this.predicate.call(this.thisArg,value,this.count++);}catch(err){this.destination.error(err);return;}if(result){this.destination.next(value);}};return FilterSubscriber;}(Subscriber);/** PURE_IMPORTS_START _util_not,_util_subscribeTo,_operators_filter,_Observable PURE_IMPORTS_END */function partition$1(source,predicate,thisArg){return[filter$1(predicate,thisArg)(new Observable(subscribeTo(source))),filter$1(not(predicate,thisArg))(new Observable(subscribeTo(source)))];}/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */function race$1(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}if(observables.length===1){if(isArray(observables[0])){observables=observables[0];}else{return observables[0];}}return fromArray(observables,undefined).lift(new RaceOperator());}var RaceOperator=/*@__PURE__*/function(){function RaceOperator(){}RaceOperator.prototype.call=function(subscriber,source){return source.subscribe(new RaceSubscriber(subscriber));};return RaceOperator;}();var RaceSubscriber=/*@__PURE__*/function(_super){__extends(RaceSubscriber,_super);function RaceSubscriber(destination){var _this=_super.call(this,destination)||this;_this.hasFirst=false;_this.observables=[];_this.subscriptions=[];return _this;}RaceSubscriber.prototype._next=function(observable){this.observables.push(observable);};RaceSubscriber.prototype._complete=function(){var observables=this.observables;var len=observables.length;if(len===0){this.destination.complete();}else{for(var i=0;i<len&&!this.hasFirst;i++){var observable=observables[i];var subscription=subscribeToResult(this,observable,undefined,i);if(this.subscriptions){this.subscriptions.push(subscription);}this.add(subscription);}this.observables=null;}};RaceSubscriber.prototype.notifyNext=function(_outerValue,innerValue,outerIndex){if(!this.hasFirst){this.hasFirst=true;for(var i=0;i<this.subscriptions.length;i++){if(i!==outerIndex){var subscription=this.subscriptions[i];subscription.unsubscribe();this.remove(subscription);}}this.subscriptions=null;}this.destination.next(innerValue);};return RaceSubscriber;}(OuterSubscriber);/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */function range(start,count,scheduler){if(start===void 0){start=0;}return new Observable(function(subscriber){if(count===undefined){count=start;start=0;}var index=0;var current=start;if(scheduler){return scheduler.schedule(dispatch$1,0,{index:index,count:count,start:start,subscriber:subscriber});}else{do{if(index++>=count){subscriber.complete();break;}subscriber.next(current++);if(subscriber.closed){break;}}while(true);}return undefined;});}function dispatch$1(state){var start=state.start,index=state.index,count=state.count,subscriber=state.subscriber;if(index>=count){subscriber.complete();return;}subscriber.next(start);if(subscriber.closed){return;}state.index=index+1;state.start=start+1;this.schedule(state);}/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */function timer(dueTime,periodOrScheduler,scheduler){if(dueTime===void 0){dueTime=0;}var period=-1;if(isNumeric(periodOrScheduler)){period=Number(periodOrScheduler)<1&&1||Number(periodOrScheduler);}else if(isScheduler(periodOrScheduler)){scheduler=periodOrScheduler;}if(!isScheduler(scheduler)){scheduler=async;}return new Observable(function(subscriber){var due=isNumeric(dueTime)?dueTime:+dueTime-scheduler.now();return scheduler.schedule(dispatch,due,{index:0,period:period,subscriber:subscriber});});}function dispatch(state){var index=state.index,period=state.period,subscriber=state.subscriber;subscriber.next(index);if(subscriber.closed){return;}else if(period===-1){return subscriber.complete();}state.index=index+1;this.schedule(state,period);}/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */function using(resourceFactory,observableFactory){return new Observable(function(subscriber){var resource;try{resource=resourceFactory();}catch(err){subscriber.error(err);return undefined;}var result;try{result=observableFactory(resource);}catch(err){subscriber.error(err);return undefined;}var source=result?from$2(result):EMPTY;var subscription=source.subscribe(subscriber);return function(){subscription.unsubscribe();if(resource){resource.unsubscribe();}};});}/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */function zip$1(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}var resultSelector=observables[observables.length-1];if(typeof resultSelector==='function'){observables.pop();}return fromArray(observables,undefined).lift(new ZipOperator(resultSelector));}var ZipOperator=/*@__PURE__*/function(){function ZipOperator(resultSelector){this.resultSelector=resultSelector;}ZipOperator.prototype.call=function(subscriber,source){return source.subscribe(new ZipSubscriber(subscriber,this.resultSelector));};return ZipOperator;}();var ZipSubscriber=/*@__PURE__*/function(_super){__extends(ZipSubscriber,_super);function ZipSubscriber(destination,resultSelector,values){var _this=_super.call(this,destination)||this;_this.resultSelector=resultSelector;_this.iterators=[];_this.active=0;_this.resultSelector=typeof resultSelector==='function'?resultSelector:undefined;return _this;}ZipSubscriber.prototype._next=function(value){var iterators=this.iterators;if(isArray(value)){iterators.push(new StaticArrayIterator(value));}else if(typeof value[iterator]==='function'){iterators.push(new StaticIterator(value[iterator]()));}else{iterators.push(new ZipBufferIterator(this.destination,this,value));}};ZipSubscriber.prototype._complete=function(){var iterators=this.iterators;var len=iterators.length;this.unsubscribe();if(len===0){this.destination.complete();return;}this.active=len;for(var i=0;i<len;i++){var iterator=iterators[i];if(iterator.stillUnsubscribed){var destination=this.destination;destination.add(iterator.subscribe());}else{this.active--;}}};ZipSubscriber.prototype.notifyInactive=function(){this.active--;if(this.active===0){this.destination.complete();}};ZipSubscriber.prototype.checkIterators=function(){var iterators=this.iterators;var len=iterators.length;var destination=this.destination;for(var i=0;i<len;i++){var iterator=iterators[i];if(typeof iterator.hasValue==='function'&&!iterator.hasValue()){return;}}var shouldComplete=false;var args=[];for(var i=0;i<len;i++){var iterator=iterators[i];var result=iterator.next();if(iterator.hasCompleted()){shouldComplete=true;}if(result.done){destination.complete();return;}args.push(result.value);}if(this.resultSelector){this._tryresultSelector(args);}else{destination.next(args);}if(shouldComplete){destination.complete();}};ZipSubscriber.prototype._tryresultSelector=function(args){var result;try{result=this.resultSelector.apply(this,args);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return ZipSubscriber;}(Subscriber);var StaticIterator=/*@__PURE__*/function(){function StaticIterator(iterator){this.iterator=iterator;this.nextResult=iterator.next();}StaticIterator.prototype.hasValue=function(){return true;};StaticIterator.prototype.next=function(){var result=this.nextResult;this.nextResult=this.iterator.next();return result;};StaticIterator.prototype.hasCompleted=function(){var nextResult=this.nextResult;return Boolean(nextResult&&nextResult.done);};return StaticIterator;}();var StaticArrayIterator=/*@__PURE__*/function(){function StaticArrayIterator(array){this.array=array;this.index=0;this.length=0;this.length=array.length;}StaticArrayIterator.prototype[iterator]=function(){return this;};StaticArrayIterator.prototype.next=function(value){var i=this.index++;var array=this.array;return i<this.length?{value:array[i],done:false}:{value:null,done:true};};StaticArrayIterator.prototype.hasValue=function(){return this.array.length>this.index;};StaticArrayIterator.prototype.hasCompleted=function(){return this.array.length===this.index;};return StaticArrayIterator;}();var ZipBufferIterator=/*@__PURE__*/function(_super){__extends(ZipBufferIterator,_super);function ZipBufferIterator(destination,parent,observable){var _this=_super.call(this,destination)||this;_this.parent=parent;_this.observable=observable;_this.stillUnsubscribed=true;_this.buffer=[];_this.isComplete=false;return _this;}ZipBufferIterator.prototype[iterator]=function(){return this;};ZipBufferIterator.prototype.next=function(){var buffer=this.buffer;if(buffer.length===0&&this.isComplete){return{value:null,done:true};}else{return{value:buffer.shift(),done:false};}};ZipBufferIterator.prototype.hasValue=function(){return this.buffer.length>0;};ZipBufferIterator.prototype.hasCompleted=function(){return this.buffer.length===0&&this.isComplete;};ZipBufferIterator.prototype.notifyComplete=function(){if(this.buffer.length>0){this.isComplete=true;this.parent.notifyInactive();}else{this.destination.complete();}};ZipBufferIterator.prototype.notifyNext=function(innerValue){this.buffer.push(innerValue);this.parent.checkIterators();};ZipBufferIterator.prototype.subscribe=function(){return innerSubscribe(this.observable,new SimpleInnerSubscriber(this));};return ZipBufferIterator;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START  PURE_IMPORTS_END */var _esm5=/*#__PURE__*/Object.freeze({__proto__:null,ArgumentOutOfRangeError:ArgumentOutOfRangeError,AsyncSubject:AsyncSubject,BehaviorSubject:BehaviorSubject,ConnectableObservable:ConnectableObservable,EMPTY:EMPTY,EmptyError:EmptyError,GroupedObservable:GroupedObservable,NEVER:NEVER,Notification:Notification,get NotificationKind(){return NotificationKind;},ObjectUnsubscribedError:ObjectUnsubscribedError,Observable:Observable,ReplaySubject:ReplaySubject,Scheduler:Scheduler,Subject:Subject,Subscriber:Subscriber,Subscription:Subscription,TimeoutError:TimeoutError$1,UnsubscriptionError:UnsubscriptionError,VirtualAction:VirtualAction,VirtualTimeScheduler:VirtualTimeScheduler,animationFrame:animationFrame,animationFrameScheduler:animationFrameScheduler,asap:asap,asapScheduler:asapScheduler,async:async,asyncScheduler:asyncScheduler,bindCallback:bindCallback,bindNodeCallback:bindNodeCallback,combineLatest:combineLatest$1,concat:concat$1,config:config,defer:defer$1,empty:empty$1,forkJoin:forkJoin,from:from$2,fromEvent:fromEvent,fromEventPattern:fromEventPattern,generate:generate,identity:identity,iif:iif,interval:interval,isObservable:isObservable,merge:merge$1,never:never,noop:noop,observable:observable,of:of$2,onErrorResumeNext:onErrorResumeNext$1,pairs:pairs,partition:partition$1,pipe:pipe,queue:queue,queueScheduler:queueScheduler,race:race$1,range:range,scheduled:scheduled,throwError:throwError,timer:timer,using:using,zip:zip$1});var require$$4$1=/*@__PURE__*/loadEnv.getAugmentedNamespace(_esm5);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function audit(durationSelector){return function auditOperatorFunction(source){return source.lift(new AuditOperator(durationSelector));};}var AuditOperator=/*@__PURE__*/function(){function AuditOperator(durationSelector){this.durationSelector=durationSelector;}AuditOperator.prototype.call=function(subscriber,source){return source.subscribe(new AuditSubscriber(subscriber,this.durationSelector));};return AuditOperator;}();var AuditSubscriber=/*@__PURE__*/function(_super){__extends(AuditSubscriber,_super);function AuditSubscriber(destination,durationSelector){var _this=_super.call(this,destination)||this;_this.durationSelector=durationSelector;_this.hasValue=false;return _this;}AuditSubscriber.prototype._next=function(value){this.value=value;this.hasValue=true;if(!this.throttled){var duration=void 0;try{var durationSelector=this.durationSelector;duration=durationSelector(value);}catch(err){return this.destination.error(err);}var innerSubscription=innerSubscribe(duration,new SimpleInnerSubscriber(this));if(!innerSubscription||innerSubscription.closed){this.clearThrottle();}else{this.add(this.throttled=innerSubscription);}}};AuditSubscriber.prototype.clearThrottle=function(){var _a=this,value=_a.value,hasValue=_a.hasValue,throttled=_a.throttled;if(throttled){this.remove(throttled);this.throttled=undefined;throttled.unsubscribe();}if(hasValue){this.value=undefined;this.hasValue=false;this.destination.next(value);}};AuditSubscriber.prototype.notifyNext=function(){this.clearThrottle();};AuditSubscriber.prototype.notifyComplete=function(){this.clearThrottle();};return AuditSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */function auditTime(duration,scheduler){if(scheduler===void 0){scheduler=async;}return audit(function(){return timer(duration,scheduler);});}/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function buffer(closingNotifier){return function bufferOperatorFunction(source){return source.lift(new BufferOperator(closingNotifier));};}var BufferOperator=/*@__PURE__*/function(){function BufferOperator(closingNotifier){this.closingNotifier=closingNotifier;}BufferOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferSubscriber(subscriber,this.closingNotifier));};return BufferOperator;}();var BufferSubscriber=/*@__PURE__*/function(_super){__extends(BufferSubscriber,_super);function BufferSubscriber(destination,closingNotifier){var _this=_super.call(this,destination)||this;_this.buffer=[];_this.add(innerSubscribe(closingNotifier,new SimpleInnerSubscriber(_this)));return _this;}BufferSubscriber.prototype._next=function(value){this.buffer.push(value);};BufferSubscriber.prototype.notifyNext=function(){var buffer=this.buffer;this.buffer=[];this.destination.next(buffer);};return BufferSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function bufferCount(bufferSize,startBufferEvery){if(startBufferEvery===void 0){startBufferEvery=null;}return function bufferCountOperatorFunction(source){return source.lift(new BufferCountOperator(bufferSize,startBufferEvery));};}var BufferCountOperator=/*@__PURE__*/function(){function BufferCountOperator(bufferSize,startBufferEvery){this.bufferSize=bufferSize;this.startBufferEvery=startBufferEvery;if(!startBufferEvery||bufferSize===startBufferEvery){this.subscriberClass=BufferCountSubscriber;}else{this.subscriberClass=BufferSkipCountSubscriber;}}BufferCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new this.subscriberClass(subscriber,this.bufferSize,this.startBufferEvery));};return BufferCountOperator;}();var BufferCountSubscriber=/*@__PURE__*/function(_super){__extends(BufferCountSubscriber,_super);function BufferCountSubscriber(destination,bufferSize){var _this=_super.call(this,destination)||this;_this.bufferSize=bufferSize;_this.buffer=[];return _this;}BufferCountSubscriber.prototype._next=function(value){var buffer=this.buffer;buffer.push(value);if(buffer.length==this.bufferSize){this.destination.next(buffer);this.buffer=[];}};BufferCountSubscriber.prototype._complete=function(){var buffer=this.buffer;if(buffer.length>0){this.destination.next(buffer);}_super.prototype._complete.call(this);};return BufferCountSubscriber;}(Subscriber);var BufferSkipCountSubscriber=/*@__PURE__*/function(_super){__extends(BufferSkipCountSubscriber,_super);function BufferSkipCountSubscriber(destination,bufferSize,startBufferEvery){var _this=_super.call(this,destination)||this;_this.bufferSize=bufferSize;_this.startBufferEvery=startBufferEvery;_this.buffers=[];_this.count=0;return _this;}BufferSkipCountSubscriber.prototype._next=function(value){var _a=this,bufferSize=_a.bufferSize,startBufferEvery=_a.startBufferEvery,buffers=_a.buffers,count=_a.count;this.count++;if(count%startBufferEvery===0){buffers.push([]);}for(var i=buffers.length;i--;){var buffer=buffers[i];buffer.push(value);if(buffer.length===bufferSize){buffers.splice(i,1);this.destination.next(buffer);}}};BufferSkipCountSubscriber.prototype._complete=function(){var _a=this,buffers=_a.buffers,destination=_a.destination;while(buffers.length>0){var buffer=buffers.shift();if(buffer.length>0){destination.next(buffer);}}_super.prototype._complete.call(this);};return BufferSkipCountSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */function bufferTime(bufferTimeSpan){var length=arguments.length;var scheduler=async;if(isScheduler(arguments[arguments.length-1])){scheduler=arguments[arguments.length-1];length--;}var bufferCreationInterval=null;if(length>=2){bufferCreationInterval=arguments[1];}var maxBufferSize=Number.POSITIVE_INFINITY;if(length>=3){maxBufferSize=arguments[2];}return function bufferTimeOperatorFunction(source){return source.lift(new BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler));};}var BufferTimeOperator=/*@__PURE__*/function(){function BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){this.bufferTimeSpan=bufferTimeSpan;this.bufferCreationInterval=bufferCreationInterval;this.maxBufferSize=maxBufferSize;this.scheduler=scheduler;}BufferTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferTimeSubscriber(subscriber,this.bufferTimeSpan,this.bufferCreationInterval,this.maxBufferSize,this.scheduler));};return BufferTimeOperator;}();var Context=/*@__PURE__*/function(){function Context(){this.buffer=[];}return Context;}();var BufferTimeSubscriber=/*@__PURE__*/function(_super){__extends(BufferTimeSubscriber,_super);function BufferTimeSubscriber(destination,bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){var _this=_super.call(this,destination)||this;_this.bufferTimeSpan=bufferTimeSpan;_this.bufferCreationInterval=bufferCreationInterval;_this.maxBufferSize=maxBufferSize;_this.scheduler=scheduler;_this.contexts=[];var context=_this.openContext();_this.timespanOnly=bufferCreationInterval==null||bufferCreationInterval<0;if(_this.timespanOnly){var timeSpanOnlyState={subscriber:_this,context:context,bufferTimeSpan:bufferTimeSpan};_this.add(context.closeAction=scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState));}else{var closeState={subscriber:_this,context:context};var creationState={bufferTimeSpan:bufferTimeSpan,bufferCreationInterval:bufferCreationInterval,subscriber:_this,scheduler:scheduler};_this.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,closeState));_this.add(scheduler.schedule(dispatchBufferCreation,bufferCreationInterval,creationState));}return _this;}BufferTimeSubscriber.prototype._next=function(value){var contexts=this.contexts;var len=contexts.length;var filledBufferContext;for(var i=0;i<len;i++){var context_1=contexts[i];var buffer=context_1.buffer;buffer.push(value);if(buffer.length==this.maxBufferSize){filledBufferContext=context_1;}}if(filledBufferContext){this.onBufferFull(filledBufferContext);}};BufferTimeSubscriber.prototype._error=function(err){this.contexts.length=0;_super.prototype._error.call(this,err);};BufferTimeSubscriber.prototype._complete=function(){var _a=this,contexts=_a.contexts,destination=_a.destination;while(contexts.length>0){var context_2=contexts.shift();destination.next(context_2.buffer);}_super.prototype._complete.call(this);};BufferTimeSubscriber.prototype._unsubscribe=function(){this.contexts=null;};BufferTimeSubscriber.prototype.onBufferFull=function(context){this.closeContext(context);var closeAction=context.closeAction;closeAction.unsubscribe();this.remove(closeAction);if(!this.closed&&this.timespanOnly){context=this.openContext();var bufferTimeSpan=this.bufferTimeSpan;var timeSpanOnlyState={subscriber:this,context:context,bufferTimeSpan:bufferTimeSpan};this.add(context.closeAction=this.scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState));}};BufferTimeSubscriber.prototype.openContext=function(){var context=new Context();this.contexts.push(context);return context;};BufferTimeSubscriber.prototype.closeContext=function(context){this.destination.next(context.buffer);var contexts=this.contexts;var spliceIndex=contexts?contexts.indexOf(context):-1;if(spliceIndex>=0){contexts.splice(contexts.indexOf(context),1);}};return BufferTimeSubscriber;}(Subscriber);function dispatchBufferTimeSpanOnly(state){var subscriber=state.subscriber;var prevContext=state.context;if(prevContext){subscriber.closeContext(prevContext);}if(!subscriber.closed){state.context=subscriber.openContext();state.context.closeAction=this.schedule(state,state.bufferTimeSpan);}}function dispatchBufferCreation(state){var bufferCreationInterval=state.bufferCreationInterval,bufferTimeSpan=state.bufferTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler;var context=subscriber.openContext();var action=this;if(!subscriber.closed){subscriber.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,{subscriber:subscriber,context:context}));action.schedule(state,bufferCreationInterval);}}function dispatchBufferClose(arg){var subscriber=arg.subscriber,context=arg.context;subscriber.closeContext(context);}/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */function bufferToggle(openings,closingSelector){return function bufferToggleOperatorFunction(source){return source.lift(new BufferToggleOperator(openings,closingSelector));};}var BufferToggleOperator=/*@__PURE__*/function(){function BufferToggleOperator(openings,closingSelector){this.openings=openings;this.closingSelector=closingSelector;}BufferToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferToggleSubscriber(subscriber,this.openings,this.closingSelector));};return BufferToggleOperator;}();var BufferToggleSubscriber=/*@__PURE__*/function(_super){__extends(BufferToggleSubscriber,_super);function BufferToggleSubscriber(destination,openings,closingSelector){var _this=_super.call(this,destination)||this;_this.closingSelector=closingSelector;_this.contexts=[];_this.add(subscribeToResult(_this,openings));return _this;}BufferToggleSubscriber.prototype._next=function(value){var contexts=this.contexts;var len=contexts.length;for(var i=0;i<len;i++){contexts[i].buffer.push(value);}};BufferToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;while(contexts.length>0){var context_1=contexts.shift();context_1.subscription.unsubscribe();context_1.buffer=null;context_1.subscription=null;}this.contexts=null;_super.prototype._error.call(this,err);};BufferToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;while(contexts.length>0){var context_2=contexts.shift();this.destination.next(context_2.buffer);context_2.subscription.unsubscribe();context_2.buffer=null;context_2.subscription=null;}this.contexts=null;_super.prototype._complete.call(this);};BufferToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue){outerValue?this.closeBuffer(outerValue):this.openBuffer(innerValue);};BufferToggleSubscriber.prototype.notifyComplete=function(innerSub){this.closeBuffer(innerSub.context);};BufferToggleSubscriber.prototype.openBuffer=function(value){try{var closingSelector=this.closingSelector;var closingNotifier=closingSelector.call(this,value);if(closingNotifier){this.trySubscribe(closingNotifier);}}catch(err){this._error(err);}};BufferToggleSubscriber.prototype.closeBuffer=function(context){var contexts=this.contexts;if(contexts&&context){var buffer=context.buffer,subscription=context.subscription;this.destination.next(buffer);contexts.splice(contexts.indexOf(context),1);this.remove(subscription);subscription.unsubscribe();}};BufferToggleSubscriber.prototype.trySubscribe=function(closingNotifier){var contexts=this.contexts;var buffer=[];var subscription=new Subscription();var context={buffer:buffer,subscription:subscription};contexts.push(context);var innerSubscription=subscribeToResult(this,closingNotifier,context);if(!innerSubscription||innerSubscription.closed){this.closeBuffer(context);}else{innerSubscription.context=context;this.add(innerSubscription);subscription.add(innerSubscription);}};return BufferToggleSubscriber;}(OuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscription,_innerSubscribe PURE_IMPORTS_END */function bufferWhen(closingSelector){return function(source){return source.lift(new BufferWhenOperator(closingSelector));};}var BufferWhenOperator=/*@__PURE__*/function(){function BufferWhenOperator(closingSelector){this.closingSelector=closingSelector;}BufferWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferWhenSubscriber(subscriber,this.closingSelector));};return BufferWhenOperator;}();var BufferWhenSubscriber=/*@__PURE__*/function(_super){__extends(BufferWhenSubscriber,_super);function BufferWhenSubscriber(destination,closingSelector){var _this=_super.call(this,destination)||this;_this.closingSelector=closingSelector;_this.subscribing=false;_this.openBuffer();return _this;}BufferWhenSubscriber.prototype._next=function(value){this.buffer.push(value);};BufferWhenSubscriber.prototype._complete=function(){var buffer=this.buffer;if(buffer){this.destination.next(buffer);}_super.prototype._complete.call(this);};BufferWhenSubscriber.prototype._unsubscribe=function(){this.buffer=undefined;this.subscribing=false;};BufferWhenSubscriber.prototype.notifyNext=function(){this.openBuffer();};BufferWhenSubscriber.prototype.notifyComplete=function(){if(this.subscribing){this.complete();}else{this.openBuffer();}};BufferWhenSubscriber.prototype.openBuffer=function(){var closingSubscription=this.closingSubscription;if(closingSubscription){this.remove(closingSubscription);closingSubscription.unsubscribe();}var buffer=this.buffer;if(this.buffer){this.destination.next(buffer);}this.buffer=[];var closingNotifier;try{var closingSelector=this.closingSelector;closingNotifier=closingSelector();}catch(err){return this.error(err);}closingSubscription=new Subscription();this.closingSubscription=closingSubscription;this.add(closingSubscription);this.subscribing=true;closingSubscription.add(innerSubscribe(closingNotifier,new SimpleInnerSubscriber(this)));this.subscribing=false;};return BufferWhenSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function catchError(selector){return function catchErrorOperatorFunction(source){var operator=new CatchOperator(selector);var caught=source.lift(operator);return operator.caught=caught;};}var CatchOperator=/*@__PURE__*/function(){function CatchOperator(selector){this.selector=selector;}CatchOperator.prototype.call=function(subscriber,source){return source.subscribe(new CatchSubscriber(subscriber,this.selector,this.caught));};return CatchOperator;}();var CatchSubscriber=/*@__PURE__*/function(_super){__extends(CatchSubscriber,_super);function CatchSubscriber(destination,selector,caught){var _this=_super.call(this,destination)||this;_this.selector=selector;_this.caught=caught;return _this;}CatchSubscriber.prototype.error=function(err){if(!this.isStopped){var result=void 0;try{result=this.selector(err,this.caught);}catch(err2){_super.prototype.error.call(this,err2);return;}this._unsubscribeAndRecycle();var innerSubscriber=new SimpleInnerSubscriber(this);this.add(innerSubscriber);var innerSubscription=innerSubscribe(result,innerSubscriber);if(innerSubscription!==innerSubscriber){this.add(innerSubscription);}}};return CatchSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */function combineAll(project){return function(source){return source.lift(new CombineLatestOperator(project));};}/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */function combineLatest(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}var project=null;if(typeof observables[observables.length-1]==='function'){project=observables.pop();}if(observables.length===1&&isArray(observables[0])){observables=observables[0].slice();}return function(source){return source.lift.call(from$2([source].concat(observables)),new CombineLatestOperator(project));};}/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */function concat(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return function(source){return source.lift.call(concat$1.apply(void 0,[source].concat(observables)));};}/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */function concatMap$1(project,resultSelector){return mergeMap(project,resultSelector,1);}/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */function concatMapTo(innerObservable,resultSelector){return concatMap$1(function(){return innerObservable;},resultSelector);}/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function count(predicate){return function(source){return source.lift(new CountOperator(predicate,source));};}var CountOperator=/*@__PURE__*/function(){function CountOperator(predicate,source){this.predicate=predicate;this.source=source;}CountOperator.prototype.call=function(subscriber,source){return source.subscribe(new CountSubscriber(subscriber,this.predicate,this.source));};return CountOperator;}();var CountSubscriber=/*@__PURE__*/function(_super){__extends(CountSubscriber,_super);function CountSubscriber(destination,predicate,source){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.source=source;_this.count=0;_this.index=0;return _this;}CountSubscriber.prototype._next=function(value){if(this.predicate){this._tryPredicate(value);}else{this.count++;}};CountSubscriber.prototype._tryPredicate=function(value){var result;try{result=this.predicate(value,this.index++,this.source);}catch(err){this.destination.error(err);return;}if(result){this.count++;}};CountSubscriber.prototype._complete=function(){this.destination.next(this.count);this.destination.complete();};return CountSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function debounce(durationSelector){return function(source){return source.lift(new DebounceOperator(durationSelector));};}var DebounceOperator=/*@__PURE__*/function(){function DebounceOperator(durationSelector){this.durationSelector=durationSelector;}DebounceOperator.prototype.call=function(subscriber,source){return source.subscribe(new DebounceSubscriber(subscriber,this.durationSelector));};return DebounceOperator;}();var DebounceSubscriber=/*@__PURE__*/function(_super){__extends(DebounceSubscriber,_super);function DebounceSubscriber(destination,durationSelector){var _this=_super.call(this,destination)||this;_this.durationSelector=durationSelector;_this.hasValue=false;return _this;}DebounceSubscriber.prototype._next=function(value){try{var result=this.durationSelector.call(this,value);if(result){this._tryNext(value,result);}}catch(err){this.destination.error(err);}};DebounceSubscriber.prototype._complete=function(){this.emitValue();this.destination.complete();};DebounceSubscriber.prototype._tryNext=function(value,duration){var subscription=this.durationSubscription;this.value=value;this.hasValue=true;if(subscription){subscription.unsubscribe();this.remove(subscription);}subscription=innerSubscribe(duration,new SimpleInnerSubscriber(this));if(subscription&&!subscription.closed){this.add(this.durationSubscription=subscription);}};DebounceSubscriber.prototype.notifyNext=function(){this.emitValue();};DebounceSubscriber.prototype.notifyComplete=function(){this.emitValue();};DebounceSubscriber.prototype.emitValue=function(){if(this.hasValue){var value=this.value;var subscription=this.durationSubscription;if(subscription){this.durationSubscription=undefined;subscription.unsubscribe();this.remove(subscription);}this.value=undefined;this.hasValue=false;_super.prototype._next.call(this,value);}};return DebounceSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */function debounceTime(dueTime,scheduler){if(scheduler===void 0){scheduler=async;}return function(source){return source.lift(new DebounceTimeOperator(dueTime,scheduler));};}var DebounceTimeOperator=/*@__PURE__*/function(){function DebounceTimeOperator(dueTime,scheduler){this.dueTime=dueTime;this.scheduler=scheduler;}DebounceTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new DebounceTimeSubscriber(subscriber,this.dueTime,this.scheduler));};return DebounceTimeOperator;}();var DebounceTimeSubscriber=/*@__PURE__*/function(_super){__extends(DebounceTimeSubscriber,_super);function DebounceTimeSubscriber(destination,dueTime,scheduler){var _this=_super.call(this,destination)||this;_this.dueTime=dueTime;_this.scheduler=scheduler;_this.debouncedSubscription=null;_this.lastValue=null;_this.hasValue=false;return _this;}DebounceTimeSubscriber.prototype._next=function(value){this.clearDebounce();this.lastValue=value;this.hasValue=true;this.add(this.debouncedSubscription=this.scheduler.schedule(dispatchNext$1,this.dueTime,this));};DebounceTimeSubscriber.prototype._complete=function(){this.debouncedNext();this.destination.complete();};DebounceTimeSubscriber.prototype.debouncedNext=function(){this.clearDebounce();if(this.hasValue){var lastValue=this.lastValue;this.lastValue=null;this.hasValue=false;this.destination.next(lastValue);}};DebounceTimeSubscriber.prototype.clearDebounce=function(){var debouncedSubscription=this.debouncedSubscription;if(debouncedSubscription!==null){this.remove(debouncedSubscription);debouncedSubscription.unsubscribe();this.debouncedSubscription=null;}};return DebounceTimeSubscriber;}(Subscriber);function dispatchNext$1(subscriber){subscriber.debouncedNext();}/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function defaultIfEmpty(defaultValue){if(defaultValue===void 0){defaultValue=null;}return function(source){return source.lift(new DefaultIfEmptyOperator(defaultValue));};}var DefaultIfEmptyOperator=/*@__PURE__*/function(){function DefaultIfEmptyOperator(defaultValue){this.defaultValue=defaultValue;}DefaultIfEmptyOperator.prototype.call=function(subscriber,source){return source.subscribe(new DefaultIfEmptySubscriber(subscriber,this.defaultValue));};return DefaultIfEmptyOperator;}();var DefaultIfEmptySubscriber=/*@__PURE__*/function(_super){__extends(DefaultIfEmptySubscriber,_super);function DefaultIfEmptySubscriber(destination,defaultValue){var _this=_super.call(this,destination)||this;_this.defaultValue=defaultValue;_this.isEmpty=true;return _this;}DefaultIfEmptySubscriber.prototype._next=function(value){this.isEmpty=false;this.destination.next(value);};DefaultIfEmptySubscriber.prototype._complete=function(){if(this.isEmpty){this.destination.next(this.defaultValue);}this.destination.complete();};return DefaultIfEmptySubscriber;}(Subscriber);/** PURE_IMPORTS_START  PURE_IMPORTS_END */function isDate(value){return value instanceof Date&&!isNaN(+value);}/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */function delay(delay,scheduler){if(scheduler===void 0){scheduler=async;}var absoluteDelay=isDate(delay);var delayFor=absoluteDelay?+delay-scheduler.now():Math.abs(delay);return function(source){return source.lift(new DelayOperator(delayFor,scheduler));};}var DelayOperator=/*@__PURE__*/function(){function DelayOperator(delay,scheduler){this.delay=delay;this.scheduler=scheduler;}DelayOperator.prototype.call=function(subscriber,source){return source.subscribe(new DelaySubscriber(subscriber,this.delay,this.scheduler));};return DelayOperator;}();var DelaySubscriber=/*@__PURE__*/function(_super){__extends(DelaySubscriber,_super);function DelaySubscriber(destination,delay,scheduler){var _this=_super.call(this,destination)||this;_this.delay=delay;_this.scheduler=scheduler;_this.queue=[];_this.active=false;_this.errored=false;return _this;}DelaySubscriber.dispatch=function(state){var source=state.source;var queue=source.queue;var scheduler=state.scheduler;var destination=state.destination;while(queue.length>0&&queue[0].time-scheduler.now()<=0){queue.shift().notification.observe(destination);}if(queue.length>0){var delay_1=Math.max(0,queue[0].time-scheduler.now());this.schedule(state,delay_1);}else{this.unsubscribe();source.active=false;}};DelaySubscriber.prototype._schedule=function(scheduler){this.active=true;var destination=this.destination;destination.add(scheduler.schedule(DelaySubscriber.dispatch,this.delay,{source:this,destination:this.destination,scheduler:scheduler}));};DelaySubscriber.prototype.scheduleNotification=function(notification){if(this.errored===true){return;}var scheduler=this.scheduler;var message=new DelayMessage(scheduler.now()+this.delay,notification);this.queue.push(message);if(this.active===false){this._schedule(scheduler);}};DelaySubscriber.prototype._next=function(value){this.scheduleNotification(Notification.createNext(value));};DelaySubscriber.prototype._error=function(err){this.errored=true;this.queue=[];this.destination.error(err);this.unsubscribe();};DelaySubscriber.prototype._complete=function(){this.scheduleNotification(Notification.createComplete());this.unsubscribe();};return DelaySubscriber;}(Subscriber);var DelayMessage=/*@__PURE__*/function(){function DelayMessage(time,notification){this.time=time;this.notification=notification;}return DelayMessage;}();/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */function delayWhen(delayDurationSelector,subscriptionDelay){if(subscriptionDelay){return function(source){return new SubscriptionDelayObservable(source,subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));};}return function(source){return source.lift(new DelayWhenOperator(delayDurationSelector));};}var DelayWhenOperator=/*@__PURE__*/function(){function DelayWhenOperator(delayDurationSelector){this.delayDurationSelector=delayDurationSelector;}DelayWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new DelayWhenSubscriber(subscriber,this.delayDurationSelector));};return DelayWhenOperator;}();var DelayWhenSubscriber=/*@__PURE__*/function(_super){__extends(DelayWhenSubscriber,_super);function DelayWhenSubscriber(destination,delayDurationSelector){var _this=_super.call(this,destination)||this;_this.delayDurationSelector=delayDurationSelector;_this.completed=false;_this.delayNotifierSubscriptions=[];_this.index=0;return _this;}DelayWhenSubscriber.prototype.notifyNext=function(outerValue,_innerValue,_outerIndex,_innerIndex,innerSub){this.destination.next(outerValue);this.removeSubscription(innerSub);this.tryComplete();};DelayWhenSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};DelayWhenSubscriber.prototype.notifyComplete=function(innerSub){var value=this.removeSubscription(innerSub);if(value){this.destination.next(value);}this.tryComplete();};DelayWhenSubscriber.prototype._next=function(value){var index=this.index++;try{var delayNotifier=this.delayDurationSelector(value,index);if(delayNotifier){this.tryDelay(delayNotifier,value);}}catch(err){this.destination.error(err);}};DelayWhenSubscriber.prototype._complete=function(){this.completed=true;this.tryComplete();this.unsubscribe();};DelayWhenSubscriber.prototype.removeSubscription=function(subscription){subscription.unsubscribe();var subscriptionIdx=this.delayNotifierSubscriptions.indexOf(subscription);if(subscriptionIdx!==-1){this.delayNotifierSubscriptions.splice(subscriptionIdx,1);}return subscription.outerValue;};DelayWhenSubscriber.prototype.tryDelay=function(delayNotifier,value){var notifierSubscription=subscribeToResult(this,delayNotifier,value);if(notifierSubscription&&!notifierSubscription.closed){var destination=this.destination;destination.add(notifierSubscription);this.delayNotifierSubscriptions.push(notifierSubscription);}};DelayWhenSubscriber.prototype.tryComplete=function(){if(this.completed&&this.delayNotifierSubscriptions.length===0){this.destination.complete();}};return DelayWhenSubscriber;}(OuterSubscriber);var SubscriptionDelayObservable=/*@__PURE__*/function(_super){__extends(SubscriptionDelayObservable,_super);function SubscriptionDelayObservable(source,subscriptionDelay){var _this=_super.call(this)||this;_this.source=source;_this.subscriptionDelay=subscriptionDelay;return _this;}SubscriptionDelayObservable.prototype._subscribe=function(subscriber){this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber,this.source));};return SubscriptionDelayObservable;}(Observable);var SubscriptionDelaySubscriber=/*@__PURE__*/function(_super){__extends(SubscriptionDelaySubscriber,_super);function SubscriptionDelaySubscriber(parent,source){var _this=_super.call(this)||this;_this.parent=parent;_this.source=source;_this.sourceSubscribed=false;return _this;}SubscriptionDelaySubscriber.prototype._next=function(unused){this.subscribeToSource();};SubscriptionDelaySubscriber.prototype._error=function(err){this.unsubscribe();this.parent.error(err);};SubscriptionDelaySubscriber.prototype._complete=function(){this.unsubscribe();this.subscribeToSource();};SubscriptionDelaySubscriber.prototype.subscribeToSource=function(){if(!this.sourceSubscribed){this.sourceSubscribed=true;this.unsubscribe();this.source.subscribe(this.parent);}};return SubscriptionDelaySubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function dematerialize(){return function dematerializeOperatorFunction(source){return source.lift(new DeMaterializeOperator());};}var DeMaterializeOperator=/*@__PURE__*/function(){function DeMaterializeOperator(){}DeMaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new DeMaterializeSubscriber(subscriber));};return DeMaterializeOperator;}();var DeMaterializeSubscriber=/*@__PURE__*/function(_super){__extends(DeMaterializeSubscriber,_super);function DeMaterializeSubscriber(destination){return _super.call(this,destination)||this;}DeMaterializeSubscriber.prototype._next=function(value){value.observe(this.destination);};return DeMaterializeSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function distinct(keySelector,flushes){return function(source){return source.lift(new DistinctOperator(keySelector,flushes));};}var DistinctOperator=/*@__PURE__*/function(){function DistinctOperator(keySelector,flushes){this.keySelector=keySelector;this.flushes=flushes;}DistinctOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctSubscriber(subscriber,this.keySelector,this.flushes));};return DistinctOperator;}();var DistinctSubscriber=/*@__PURE__*/function(_super){__extends(DistinctSubscriber,_super);function DistinctSubscriber(destination,keySelector,flushes){var _this=_super.call(this,destination)||this;_this.keySelector=keySelector;_this.values=new Set();if(flushes){_this.add(innerSubscribe(flushes,new SimpleInnerSubscriber(_this)));}return _this;}DistinctSubscriber.prototype.notifyNext=function(){this.values.clear();};DistinctSubscriber.prototype.notifyError=function(error){this._error(error);};DistinctSubscriber.prototype._next=function(value){if(this.keySelector){this._useKeySelector(value);}else{this._finalizeNext(value,value);}};DistinctSubscriber.prototype._useKeySelector=function(value){var key;var destination=this.destination;try{key=this.keySelector(value);}catch(err){destination.error(err);return;}this._finalizeNext(key,value);};DistinctSubscriber.prototype._finalizeNext=function(key,value){var values=this.values;if(!values.has(key)){values.add(key);this.destination.next(value);}};return DistinctSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function distinctUntilChanged(compare,keySelector){return function(source){return source.lift(new DistinctUntilChangedOperator(compare,keySelector));};}var DistinctUntilChangedOperator=/*@__PURE__*/function(){function DistinctUntilChangedOperator(compare,keySelector){this.compare=compare;this.keySelector=keySelector;}DistinctUntilChangedOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctUntilChangedSubscriber(subscriber,this.compare,this.keySelector));};return DistinctUntilChangedOperator;}();var DistinctUntilChangedSubscriber=/*@__PURE__*/function(_super){__extends(DistinctUntilChangedSubscriber,_super);function DistinctUntilChangedSubscriber(destination,compare,keySelector){var _this=_super.call(this,destination)||this;_this.keySelector=keySelector;_this.hasKey=false;if(typeof compare==='function'){_this.compare=compare;}return _this;}DistinctUntilChangedSubscriber.prototype.compare=function(x,y){return x===y;};DistinctUntilChangedSubscriber.prototype._next=function(value){var key;try{var keySelector=this.keySelector;key=keySelector?keySelector(value):value;}catch(err){return this.destination.error(err);}var result=false;if(this.hasKey){try{var compare=this.compare;result=compare(this.key,key);}catch(err){return this.destination.error(err);}}else{this.hasKey=true;}if(!result){this.key=key;this.destination.next(value);}};return DistinctUntilChangedSubscriber;}(Subscriber);/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */function distinctUntilKeyChanged(key,compare){return distinctUntilChanged(function(x,y){return compare?compare(x[key],y[key]):x[key]===y[key];});}/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */function throwIfEmpty(errorFactory){if(errorFactory===void 0){errorFactory=defaultErrorFactory;}return function(source){return source.lift(new ThrowIfEmptyOperator(errorFactory));};}var ThrowIfEmptyOperator=/*@__PURE__*/function(){function ThrowIfEmptyOperator(errorFactory){this.errorFactory=errorFactory;}ThrowIfEmptyOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrowIfEmptySubscriber(subscriber,this.errorFactory));};return ThrowIfEmptyOperator;}();var ThrowIfEmptySubscriber=/*@__PURE__*/function(_super){__extends(ThrowIfEmptySubscriber,_super);function ThrowIfEmptySubscriber(destination,errorFactory){var _this=_super.call(this,destination)||this;_this.errorFactory=errorFactory;_this.hasValue=false;return _this;}ThrowIfEmptySubscriber.prototype._next=function(value){this.hasValue=true;this.destination.next(value);};ThrowIfEmptySubscriber.prototype._complete=function(){if(!this.hasValue){var err=void 0;try{err=this.errorFactory();}catch(e){err=e;}this.destination.error(err);}else{return this.destination.complete();}};return ThrowIfEmptySubscriber;}(Subscriber);function defaultErrorFactory(){return new EmptyError();}/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */function take(count){return function(source){if(count===0){return empty$1();}else{return source.lift(new TakeOperator(count));}};}var TakeOperator=/*@__PURE__*/function(){function TakeOperator(total){this.total=total;if(this.total<0){throw new ArgumentOutOfRangeError();}}TakeOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeSubscriber(subscriber,this.total));};return TakeOperator;}();var TakeSubscriber=/*@__PURE__*/function(_super){__extends(TakeSubscriber,_super);function TakeSubscriber(destination,total){var _this=_super.call(this,destination)||this;_this.total=total;_this.count=0;return _this;}TakeSubscriber.prototype._next=function(value){var total=this.total;var count=++this.count;if(count<=total){this.destination.next(value);if(count===total){this.destination.complete();this.unsubscribe();}}};return TakeSubscriber;}(Subscriber);/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */function elementAt(index,defaultValue){if(index<0){throw new ArgumentOutOfRangeError();}var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(filter$1(function(v,i){return i===index;}),take(1),hasDefaultValue?defaultIfEmpty(defaultValue):throwIfEmpty(function(){return new ArgumentOutOfRangeError();}));};}/** PURE_IMPORTS_START _observable_concat,_observable_of PURE_IMPORTS_END */function endWith(){var array=[];for(var _i=0;_i<arguments.length;_i++){array[_i]=arguments[_i];}return function(source){return concat$1(source,of$2.apply(void 0,array));};}/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function every(predicate,thisArg){return function(source){return source.lift(new EveryOperator(predicate,thisArg,source));};}var EveryOperator=/*@__PURE__*/function(){function EveryOperator(predicate,thisArg,source){this.predicate=predicate;this.thisArg=thisArg;this.source=source;}EveryOperator.prototype.call=function(observer,source){return source.subscribe(new EverySubscriber(observer,this.predicate,this.thisArg,this.source));};return EveryOperator;}();var EverySubscriber=/*@__PURE__*/function(_super){__extends(EverySubscriber,_super);function EverySubscriber(destination,predicate,thisArg,source){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.thisArg=thisArg;_this.source=source;_this.index=0;_this.thisArg=thisArg||_this;return _this;}EverySubscriber.prototype.notifyComplete=function(everyValueMatch){this.destination.next(everyValueMatch);this.destination.complete();};EverySubscriber.prototype._next=function(value){var result=false;try{result=this.predicate.call(this.thisArg,value,this.index++,this.source);}catch(err){this.destination.error(err);return;}if(!result){this.notifyComplete(false);}};EverySubscriber.prototype._complete=function(){this.notifyComplete(true);};return EverySubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function exhaust(){return function(source){return source.lift(new SwitchFirstOperator());};}var SwitchFirstOperator=/*@__PURE__*/function(){function SwitchFirstOperator(){}SwitchFirstOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchFirstSubscriber(subscriber));};return SwitchFirstOperator;}();var SwitchFirstSubscriber=/*@__PURE__*/function(_super){__extends(SwitchFirstSubscriber,_super);function SwitchFirstSubscriber(destination){var _this=_super.call(this,destination)||this;_this.hasCompleted=false;_this.hasSubscription=false;return _this;}SwitchFirstSubscriber.prototype._next=function(value){if(!this.hasSubscription){this.hasSubscription=true;this.add(innerSubscribe(value,new SimpleInnerSubscriber(this)));}};SwitchFirstSubscriber.prototype._complete=function(){this.hasCompleted=true;if(!this.hasSubscription){this.destination.complete();}};SwitchFirstSubscriber.prototype.notifyComplete=function(){this.hasSubscription=false;if(this.hasCompleted){this.destination.complete();}};return SwitchFirstSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */function exhaustMap(project,resultSelector){if(resultSelector){return function(source){return source.pipe(exhaustMap(function(a,i){return from$2(project(a,i)).pipe(map(function(b,ii){return resultSelector(a,b,i,ii);}));}));};}return function(source){return source.lift(new ExhaustMapOperator(project));};}var ExhaustMapOperator=/*@__PURE__*/function(){function ExhaustMapOperator(project){this.project=project;}ExhaustMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new ExhaustMapSubscriber(subscriber,this.project));};return ExhaustMapOperator;}();var ExhaustMapSubscriber=/*@__PURE__*/function(_super){__extends(ExhaustMapSubscriber,_super);function ExhaustMapSubscriber(destination,project){var _this=_super.call(this,destination)||this;_this.project=project;_this.hasSubscription=false;_this.hasCompleted=false;_this.index=0;return _this;}ExhaustMapSubscriber.prototype._next=function(value){if(!this.hasSubscription){this.tryNext(value);}};ExhaustMapSubscriber.prototype.tryNext=function(value){var result;var index=this.index++;try{result=this.project(value,index);}catch(err){this.destination.error(err);return;}this.hasSubscription=true;this._innerSub(result);};ExhaustMapSubscriber.prototype._innerSub=function(result){var innerSubscriber=new SimpleInnerSubscriber(this);var destination=this.destination;destination.add(innerSubscriber);var innerSubscription=innerSubscribe(result,innerSubscriber);if(innerSubscription!==innerSubscriber){destination.add(innerSubscription);}};ExhaustMapSubscriber.prototype._complete=function(){this.hasCompleted=true;if(!this.hasSubscription){this.destination.complete();}this.unsubscribe();};ExhaustMapSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue);};ExhaustMapSubscriber.prototype.notifyError=function(err){this.destination.error(err);};ExhaustMapSubscriber.prototype.notifyComplete=function(){this.hasSubscription=false;if(this.hasCompleted){this.destination.complete();}};return ExhaustMapSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function expand$1(project,concurrent,scheduler){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}concurrent=(concurrent||0)<1?Number.POSITIVE_INFINITY:concurrent;return function(source){return source.lift(new ExpandOperator(project,concurrent,scheduler));};}var ExpandOperator=/*@__PURE__*/function(){function ExpandOperator(project,concurrent,scheduler){this.project=project;this.concurrent=concurrent;this.scheduler=scheduler;}ExpandOperator.prototype.call=function(subscriber,source){return source.subscribe(new ExpandSubscriber(subscriber,this.project,this.concurrent,this.scheduler));};return ExpandOperator;}();var ExpandSubscriber=/*@__PURE__*/function(_super){__extends(ExpandSubscriber,_super);function ExpandSubscriber(destination,project,concurrent,scheduler){var _this=_super.call(this,destination)||this;_this.project=project;_this.concurrent=concurrent;_this.scheduler=scheduler;_this.index=0;_this.active=0;_this.hasCompleted=false;if(concurrent<Number.POSITIVE_INFINITY){_this.buffer=[];}return _this;}ExpandSubscriber.dispatch=function(arg){var subscriber=arg.subscriber,result=arg.result,value=arg.value,index=arg.index;subscriber.subscribeToProjection(result,value,index);};ExpandSubscriber.prototype._next=function(value){var destination=this.destination;if(destination.closed){this._complete();return;}var index=this.index++;if(this.active<this.concurrent){destination.next(value);try{var project=this.project;var result=project(value,index);if(!this.scheduler){this.subscribeToProjection(result,value,index);}else{var state={subscriber:this,result:result,value:value,index:index};var destination_1=this.destination;destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch,0,state));}}catch(e){destination.error(e);}}else{this.buffer.push(value);}};ExpandSubscriber.prototype.subscribeToProjection=function(result,value,index){this.active++;var destination=this.destination;destination.add(innerSubscribe(result,new SimpleInnerSubscriber(this)));};ExpandSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.hasCompleted&&this.active===0){this.destination.complete();}this.unsubscribe();};ExpandSubscriber.prototype.notifyNext=function(innerValue){this._next(innerValue);};ExpandSubscriber.prototype.notifyComplete=function(){var buffer=this.buffer;this.active--;if(buffer&&buffer.length>0){this._next(buffer.shift());}if(this.hasCompleted&&this.active===0){this.destination.complete();}};return ExpandSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */function finalize(callback){return function(source){return source.lift(new FinallyOperator(callback));};}var FinallyOperator=/*@__PURE__*/function(){function FinallyOperator(callback){this.callback=callback;}FinallyOperator.prototype.call=function(subscriber,source){return source.subscribe(new FinallySubscriber(subscriber,this.callback));};return FinallyOperator;}();var FinallySubscriber=/*@__PURE__*/function(_super){__extends(FinallySubscriber,_super);function FinallySubscriber(destination,callback){var _this=_super.call(this,destination)||this;_this.add(new Subscription(callback));return _this;}return FinallySubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function find(predicate,thisArg){if(typeof predicate!=='function'){throw new TypeError('predicate is not a function');}return function(source){return source.lift(new FindValueOperator(predicate,source,false,thisArg));};}var FindValueOperator=/*@__PURE__*/function(){function FindValueOperator(predicate,source,yieldIndex,thisArg){this.predicate=predicate;this.source=source;this.yieldIndex=yieldIndex;this.thisArg=thisArg;}FindValueOperator.prototype.call=function(observer,source){return source.subscribe(new FindValueSubscriber(observer,this.predicate,this.source,this.yieldIndex,this.thisArg));};return FindValueOperator;}();var FindValueSubscriber=/*@__PURE__*/function(_super){__extends(FindValueSubscriber,_super);function FindValueSubscriber(destination,predicate,source,yieldIndex,thisArg){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.source=source;_this.yieldIndex=yieldIndex;_this.thisArg=thisArg;_this.index=0;return _this;}FindValueSubscriber.prototype.notifyComplete=function(value){var destination=this.destination;destination.next(value);destination.complete();this.unsubscribe();};FindValueSubscriber.prototype._next=function(value){var _a=this,predicate=_a.predicate,thisArg=_a.thisArg;var index=this.index++;try{var result=predicate.call(thisArg||this,value,index,this.source);if(result){this.notifyComplete(this.yieldIndex?index:value);}}catch(err){this.destination.error(err);}};FindValueSubscriber.prototype._complete=function(){this.notifyComplete(this.yieldIndex?-1:undefined);};return FindValueSubscriber;}(Subscriber);/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */function findIndex(predicate,thisArg){return function(source){return source.lift(new FindValueOperator(predicate,source,true,thisArg));};}/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */function first(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?filter$1(function(v,i){return predicate(v,i,source);}):identity,take(1),hasDefaultValue?defaultIfEmpty(defaultValue):throwIfEmpty(function(){return new EmptyError();}));};}/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function ignoreElements(){return function ignoreElementsOperatorFunction(source){return source.lift(new IgnoreElementsOperator());};}var IgnoreElementsOperator=/*@__PURE__*/function(){function IgnoreElementsOperator(){}IgnoreElementsOperator.prototype.call=function(subscriber,source){return source.subscribe(new IgnoreElementsSubscriber(subscriber));};return IgnoreElementsOperator;}();var IgnoreElementsSubscriber=/*@__PURE__*/function(_super){__extends(IgnoreElementsSubscriber,_super);function IgnoreElementsSubscriber(){return _super!==null&&_super.apply(this,arguments)||this;}IgnoreElementsSubscriber.prototype._next=function(unused){};return IgnoreElementsSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function isEmpty(){return function(source){return source.lift(new IsEmptyOperator());};}var IsEmptyOperator=/*@__PURE__*/function(){function IsEmptyOperator(){}IsEmptyOperator.prototype.call=function(observer,source){return source.subscribe(new IsEmptySubscriber(observer));};return IsEmptyOperator;}();var IsEmptySubscriber=/*@__PURE__*/function(_super){__extends(IsEmptySubscriber,_super);function IsEmptySubscriber(destination){return _super.call(this,destination)||this;}IsEmptySubscriber.prototype.notifyComplete=function(isEmpty){var destination=this.destination;destination.next(isEmpty);destination.complete();};IsEmptySubscriber.prototype._next=function(value){this.notifyComplete(false);};IsEmptySubscriber.prototype._complete=function(){this.notifyComplete(true);};return IsEmptySubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */function takeLast(count){return function takeLastOperatorFunction(source){if(count===0){return empty$1();}else{return source.lift(new TakeLastOperator(count));}};}var TakeLastOperator=/*@__PURE__*/function(){function TakeLastOperator(total){this.total=total;if(this.total<0){throw new ArgumentOutOfRangeError();}}TakeLastOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeLastSubscriber(subscriber,this.total));};return TakeLastOperator;}();var TakeLastSubscriber=/*@__PURE__*/function(_super){__extends(TakeLastSubscriber,_super);function TakeLastSubscriber(destination,total){var _this=_super.call(this,destination)||this;_this.total=total;_this.ring=new Array();_this.count=0;return _this;}TakeLastSubscriber.prototype._next=function(value){var ring=this.ring;var total=this.total;var count=this.count++;if(ring.length<total){ring.push(value);}else{var index=count%total;ring[index]=value;}};TakeLastSubscriber.prototype._complete=function(){var destination=this.destination;var count=this.count;if(count>0){var total=this.count>=this.total?this.total:this.count;var ring=this.ring;for(var i=0;i<total;i++){var idx=count++%total;destination.next(ring[idx]);}}destination.complete();};return TakeLastSubscriber;}(Subscriber);/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */function last(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?filter$1(function(v,i){return predicate(v,i,source);}):identity,takeLast(1),hasDefaultValue?defaultIfEmpty(defaultValue):throwIfEmpty(function(){return new EmptyError();}));};}/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function mapTo(value){return function(source){return source.lift(new MapToOperator(value));};}var MapToOperator=/*@__PURE__*/function(){function MapToOperator(value){this.value=value;}MapToOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapToSubscriber(subscriber,this.value));};return MapToOperator;}();var MapToSubscriber=/*@__PURE__*/function(_super){__extends(MapToSubscriber,_super);function MapToSubscriber(destination,value){var _this=_super.call(this,destination)||this;_this.value=value;return _this;}MapToSubscriber.prototype._next=function(x){this.destination.next(this.value);};return MapToSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */function materialize(){return function materializeOperatorFunction(source){return source.lift(new MaterializeOperator());};}var MaterializeOperator=/*@__PURE__*/function(){function MaterializeOperator(){}MaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new MaterializeSubscriber(subscriber));};return MaterializeOperator;}();var MaterializeSubscriber=/*@__PURE__*/function(_super){__extends(MaterializeSubscriber,_super);function MaterializeSubscriber(destination){return _super.call(this,destination)||this;}MaterializeSubscriber.prototype._next=function(value){this.destination.next(Notification.createNext(value));};MaterializeSubscriber.prototype._error=function(err){var destination=this.destination;destination.next(Notification.createError(err));destination.complete();};MaterializeSubscriber.prototype._complete=function(){var destination=this.destination;destination.next(Notification.createComplete());destination.complete();};return MaterializeSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function scan(accumulator,seed){var hasSeed=false;if(arguments.length>=2){hasSeed=true;}return function scanOperatorFunction(source){return source.lift(new ScanOperator(accumulator,seed,hasSeed));};}var ScanOperator=/*@__PURE__*/function(){function ScanOperator(accumulator,seed,hasSeed){if(hasSeed===void 0){hasSeed=false;}this.accumulator=accumulator;this.seed=seed;this.hasSeed=hasSeed;}ScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new ScanSubscriber(subscriber,this.accumulator,this.seed,this.hasSeed));};return ScanOperator;}();var ScanSubscriber=/*@__PURE__*/function(_super){__extends(ScanSubscriber,_super);function ScanSubscriber(destination,accumulator,_seed,hasSeed){var _this=_super.call(this,destination)||this;_this.accumulator=accumulator;_this._seed=_seed;_this.hasSeed=hasSeed;_this.index=0;return _this;}Object.defineProperty(ScanSubscriber.prototype,"seed",{get:function(){return this._seed;},set:function(value){this.hasSeed=true;this._seed=value;},enumerable:true,configurable:true});ScanSubscriber.prototype._next=function(value){if(!this.hasSeed){this.seed=value;this.destination.next(value);}else{return this._tryNext(value);}};ScanSubscriber.prototype._tryNext=function(value){var index=this.index++;var result;try{result=this.accumulator(this.seed,value,index);}catch(err){this.destination.error(err);}this.seed=result;this.destination.next(result);};return ScanSubscriber;}(Subscriber);/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */function reduce$1(accumulator,seed){if(arguments.length>=2){return function reduceOperatorFunctionWithSeed(source){return pipe(scan(accumulator,seed),takeLast(1),defaultIfEmpty(seed))(source);};}return function reduceOperatorFunction(source){return pipe(scan(function(acc,value,index){return accumulator(acc,value,index+1);}),takeLast(1))(source);};}/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */function max(comparer){var max=typeof comparer==='function'?function(x,y){return comparer(x,y)>0?x:y;}:function(x,y){return x>y?x:y;};return reduce$1(max);}/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */function merge(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return function(source){return source.lift.call(merge$1.apply(void 0,[source].concat(observables)));};}/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */function mergeMapTo(innerObservable,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}if(typeof resultSelector==='function'){return mergeMap(function(){return innerObservable;},resultSelector,concurrent);}if(typeof resultSelector==='number'){concurrent=resultSelector;}return mergeMap(function(){return innerObservable;},concurrent);}/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function mergeScan(accumulator,seed,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}return function(source){return source.lift(new MergeScanOperator(accumulator,seed,concurrent));};}var MergeScanOperator=/*@__PURE__*/function(){function MergeScanOperator(accumulator,seed,concurrent){this.accumulator=accumulator;this.seed=seed;this.concurrent=concurrent;}MergeScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new MergeScanSubscriber(subscriber,this.accumulator,this.seed,this.concurrent));};return MergeScanOperator;}();var MergeScanSubscriber=/*@__PURE__*/function(_super){__extends(MergeScanSubscriber,_super);function MergeScanSubscriber(destination,accumulator,acc,concurrent){var _this=_super.call(this,destination)||this;_this.accumulator=accumulator;_this.acc=acc;_this.concurrent=concurrent;_this.hasValue=false;_this.hasCompleted=false;_this.buffer=[];_this.active=0;_this.index=0;return _this;}MergeScanSubscriber.prototype._next=function(value){if(this.active<this.concurrent){var index=this.index++;var destination=this.destination;var ish=void 0;try{var accumulator=this.accumulator;ish=accumulator(this.acc,value,index);}catch(e){return destination.error(e);}this.active++;this._innerSub(ish);}else{this.buffer.push(value);}};MergeScanSubscriber.prototype._innerSub=function(ish){var innerSubscriber=new SimpleInnerSubscriber(this);var destination=this.destination;destination.add(innerSubscriber);var innerSubscription=innerSubscribe(ish,innerSubscriber);if(innerSubscription!==innerSubscriber){destination.add(innerSubscription);}};MergeScanSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0&&this.buffer.length===0){if(this.hasValue===false){this.destination.next(this.acc);}this.destination.complete();}this.unsubscribe();};MergeScanSubscriber.prototype.notifyNext=function(innerValue){var destination=this.destination;this.acc=innerValue;this.hasValue=true;destination.next(innerValue);};MergeScanSubscriber.prototype.notifyComplete=function(){var buffer=this.buffer;this.active--;if(buffer.length>0){this._next(buffer.shift());}else if(this.active===0&&this.hasCompleted){if(this.hasValue===false){this.destination.next(this.acc);}this.destination.complete();}};return MergeScanSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */function min(comparer){var min=typeof comparer==='function'?function(x,y){return comparer(x,y)<0?x:y;}:function(x,y){return x<y?x:y;};return reduce$1(min);}/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */function multicast(subjectOrSubjectFactory,selector){return function multicastOperatorFunction(source){var subjectFactory;if(typeof subjectOrSubjectFactory==='function'){subjectFactory=subjectOrSubjectFactory;}else{subjectFactory=function subjectFactory(){return subjectOrSubjectFactory;};}if(typeof selector==='function'){return source.lift(new MulticastOperator(subjectFactory,selector));}var connectable=Object.create(source,connectableObservableDescriptor);connectable.source=source;connectable.subjectFactory=subjectFactory;return connectable;};}var MulticastOperator=/*@__PURE__*/function(){function MulticastOperator(subjectFactory,selector){this.subjectFactory=subjectFactory;this.selector=selector;}MulticastOperator.prototype.call=function(subscriber,source){var selector=this.selector;var subject=this.subjectFactory();var subscription=selector(subject).subscribe(subscriber);subscription.add(source.subscribe(subject));return subscription;};return MulticastOperator;}();/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_innerSubscribe PURE_IMPORTS_END */function onErrorResumeNext(){var nextSources=[];for(var _i=0;_i<arguments.length;_i++){nextSources[_i]=arguments[_i];}if(nextSources.length===1&&isArray(nextSources[0])){nextSources=nextSources[0];}return function(source){return source.lift(new OnErrorResumeNextOperator(nextSources));};}var OnErrorResumeNextOperator=/*@__PURE__*/function(){function OnErrorResumeNextOperator(nextSources){this.nextSources=nextSources;}OnErrorResumeNextOperator.prototype.call=function(subscriber,source){return source.subscribe(new OnErrorResumeNextSubscriber(subscriber,this.nextSources));};return OnErrorResumeNextOperator;}();var OnErrorResumeNextSubscriber=/*@__PURE__*/function(_super){__extends(OnErrorResumeNextSubscriber,_super);function OnErrorResumeNextSubscriber(destination,nextSources){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.nextSources=nextSources;return _this;}OnErrorResumeNextSubscriber.prototype.notifyError=function(){this.subscribeToNextSource();};OnErrorResumeNextSubscriber.prototype.notifyComplete=function(){this.subscribeToNextSource();};OnErrorResumeNextSubscriber.prototype._error=function(err){this.subscribeToNextSource();this.unsubscribe();};OnErrorResumeNextSubscriber.prototype._complete=function(){this.subscribeToNextSource();this.unsubscribe();};OnErrorResumeNextSubscriber.prototype.subscribeToNextSource=function(){var next=this.nextSources.shift();if(!!next){var innerSubscriber=new SimpleInnerSubscriber(this);var destination=this.destination;destination.add(innerSubscriber);var innerSubscription=innerSubscribe(next,innerSubscriber);if(innerSubscription!==innerSubscriber){destination.add(innerSubscription);}}else{this.destination.complete();}};return OnErrorResumeNextSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function pairwise(){return function(source){return source.lift(new PairwiseOperator());};}var PairwiseOperator=/*@__PURE__*/function(){function PairwiseOperator(){}PairwiseOperator.prototype.call=function(subscriber,source){return source.subscribe(new PairwiseSubscriber(subscriber));};return PairwiseOperator;}();var PairwiseSubscriber=/*@__PURE__*/function(_super){__extends(PairwiseSubscriber,_super);function PairwiseSubscriber(destination){var _this=_super.call(this,destination)||this;_this.hasPrev=false;return _this;}PairwiseSubscriber.prototype._next=function(value){var pair;if(this.hasPrev){pair=[this.prev,value];}else{this.hasPrev=true;}this.prev=value;if(pair){this.destination.next(pair);}};return PairwiseSubscriber;}(Subscriber);/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */function partition(predicate,thisArg){return function(source){return[filter$1(predicate,thisArg)(source),filter$1(not(predicate,thisArg))(source)];};}/** PURE_IMPORTS_START _map PURE_IMPORTS_END */function pluck(){var properties=[];for(var _i=0;_i<arguments.length;_i++){properties[_i]=arguments[_i];}var length=properties.length;if(length===0){throw new Error('list of properties cannot be empty.');}return function(source){return map(plucker(properties,length))(source);};}function plucker(props,length){var mapper=function(x){var currentProp=x;for(var i=0;i<length;i++){var p=currentProp!=null?currentProp[props[i]]:undefined;if(p!==void 0){currentProp=p;}else{return undefined;}}return currentProp;};return mapper;}/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */function publish$1(selector){return selector?multicast(function(){return new Subject();},selector):multicast(new Subject());}/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */function publishBehavior(value){return function(source){return multicast(new BehaviorSubject(value))(source);};}/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */function publishLast(){return function(source){return multicast(new AsyncSubject())(source);};}/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */function publishReplay(bufferSize,windowTime,selectorOrScheduler,scheduler){if(selectorOrScheduler&&typeof selectorOrScheduler!=='function'){scheduler=selectorOrScheduler;}var selector=typeof selectorOrScheduler==='function'?selectorOrScheduler:undefined;var subject=new ReplaySubject(bufferSize,windowTime,scheduler);return function(source){return multicast(function(){return subject;},selector)(source);};}/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */function race(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return function raceOperatorFunction(source){if(observables.length===1&&isArray(observables[0])){observables=observables[0];}return source.lift.call(race$1.apply(void 0,[source].concat(observables)));};}/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */function repeat(count){if(count===void 0){count=-1;}return function(source){if(count===0){return empty$1();}else if(count<0){return source.lift(new RepeatOperator(-1,source));}else{return source.lift(new RepeatOperator(count-1,source));}};}var RepeatOperator=/*@__PURE__*/function(){function RepeatOperator(count,source){this.count=count;this.source=source;}RepeatOperator.prototype.call=function(subscriber,source){return source.subscribe(new RepeatSubscriber(subscriber,this.count,this.source));};return RepeatOperator;}();var RepeatSubscriber=/*@__PURE__*/function(_super){__extends(RepeatSubscriber,_super);function RepeatSubscriber(destination,count,source){var _this=_super.call(this,destination)||this;_this.count=count;_this.source=source;return _this;}RepeatSubscriber.prototype.complete=function(){if(!this.isStopped){var _a=this,source=_a.source,count=_a.count;if(count===0){return _super.prototype.complete.call(this);}else if(count>-1){this.count=count-1;}source.subscribe(this._unsubscribeAndRecycle());}};return RepeatSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */function repeatWhen(notifier){return function(source){return source.lift(new RepeatWhenOperator(notifier));};}var RepeatWhenOperator=/*@__PURE__*/function(){function RepeatWhenOperator(notifier){this.notifier=notifier;}RepeatWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new RepeatWhenSubscriber(subscriber,this.notifier,source));};return RepeatWhenOperator;}();var RepeatWhenSubscriber=/*@__PURE__*/function(_super){__extends(RepeatWhenSubscriber,_super);function RepeatWhenSubscriber(destination,notifier,source){var _this=_super.call(this,destination)||this;_this.notifier=notifier;_this.source=source;_this.sourceIsBeingSubscribedTo=true;return _this;}RepeatWhenSubscriber.prototype.notifyNext=function(){this.sourceIsBeingSubscribedTo=true;this.source.subscribe(this);};RepeatWhenSubscriber.prototype.notifyComplete=function(){if(this.sourceIsBeingSubscribedTo===false){return _super.prototype.complete.call(this);}};RepeatWhenSubscriber.prototype.complete=function(){this.sourceIsBeingSubscribedTo=false;if(!this.isStopped){if(!this.retries){this.subscribeToRetries();}if(!this.retriesSubscription||this.retriesSubscription.closed){return _super.prototype.complete.call(this);}this._unsubscribeAndRecycle();this.notifications.next(undefined);}};RepeatWhenSubscriber.prototype._unsubscribe=function(){var _a=this,notifications=_a.notifications,retriesSubscription=_a.retriesSubscription;if(notifications){notifications.unsubscribe();this.notifications=undefined;}if(retriesSubscription){retriesSubscription.unsubscribe();this.retriesSubscription=undefined;}this.retries=undefined;};RepeatWhenSubscriber.prototype._unsubscribeAndRecycle=function(){var _unsubscribe=this._unsubscribe;this._unsubscribe=null;_super.prototype._unsubscribeAndRecycle.call(this);this._unsubscribe=_unsubscribe;return this;};RepeatWhenSubscriber.prototype.subscribeToRetries=function(){this.notifications=new Subject();var retries;try{var notifier=this.notifier;retries=notifier(this.notifications);}catch(e){return _super.prototype.complete.call(this);}this.retries=retries;this.retriesSubscription=innerSubscribe(retries,new SimpleInnerSubscriber(this));};return RepeatWhenSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function retry(count){if(count===void 0){count=-1;}return function(source){return source.lift(new RetryOperator(count,source));};}var RetryOperator=/*@__PURE__*/function(){function RetryOperator(count,source){this.count=count;this.source=source;}RetryOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetrySubscriber(subscriber,this.count,this.source));};return RetryOperator;}();var RetrySubscriber=/*@__PURE__*/function(_super){__extends(RetrySubscriber,_super);function RetrySubscriber(destination,count,source){var _this=_super.call(this,destination)||this;_this.count=count;_this.source=source;return _this;}RetrySubscriber.prototype.error=function(err){if(!this.isStopped){var _a=this,source=_a.source,count=_a.count;if(count===0){return _super.prototype.error.call(this,err);}else if(count>-1){this.count=count-1;}source.subscribe(this._unsubscribeAndRecycle());}};return RetrySubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */function retryWhen(notifier){return function(source){return source.lift(new RetryWhenOperator(notifier,source));};}var RetryWhenOperator=/*@__PURE__*/function(){function RetryWhenOperator(notifier,source){this.notifier=notifier;this.source=source;}RetryWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetryWhenSubscriber(subscriber,this.notifier,this.source));};return RetryWhenOperator;}();var RetryWhenSubscriber=/*@__PURE__*/function(_super){__extends(RetryWhenSubscriber,_super);function RetryWhenSubscriber(destination,notifier,source){var _this=_super.call(this,destination)||this;_this.notifier=notifier;_this.source=source;return _this;}RetryWhenSubscriber.prototype.error=function(err){if(!this.isStopped){var errors=this.errors;var retries=this.retries;var retriesSubscription=this.retriesSubscription;if(!retries){errors=new Subject();try{var notifier=this.notifier;retries=notifier(errors);}catch(e){return _super.prototype.error.call(this,e);}retriesSubscription=innerSubscribe(retries,new SimpleInnerSubscriber(this));}else{this.errors=undefined;this.retriesSubscription=undefined;}this._unsubscribeAndRecycle();this.errors=errors;this.retries=retries;this.retriesSubscription=retriesSubscription;errors.next(err);}};RetryWhenSubscriber.prototype._unsubscribe=function(){var _a=this,errors=_a.errors,retriesSubscription=_a.retriesSubscription;if(errors){errors.unsubscribe();this.errors=undefined;}if(retriesSubscription){retriesSubscription.unsubscribe();this.retriesSubscription=undefined;}this.retries=undefined;};RetryWhenSubscriber.prototype.notifyNext=function(){var _unsubscribe=this._unsubscribe;this._unsubscribe=null;this._unsubscribeAndRecycle();this._unsubscribe=_unsubscribe;this.source.subscribe(this);};return RetryWhenSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function sample$1(notifier){return function(source){return source.lift(new SampleOperator(notifier));};}var SampleOperator=/*@__PURE__*/function(){function SampleOperator(notifier){this.notifier=notifier;}SampleOperator.prototype.call=function(subscriber,source){var sampleSubscriber=new SampleSubscriber(subscriber);var subscription=source.subscribe(sampleSubscriber);subscription.add(innerSubscribe(this.notifier,new SimpleInnerSubscriber(sampleSubscriber)));return subscription;};return SampleOperator;}();var SampleSubscriber=/*@__PURE__*/function(_super){__extends(SampleSubscriber,_super);function SampleSubscriber(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.hasValue=false;return _this;}SampleSubscriber.prototype._next=function(value){this.value=value;this.hasValue=true;};SampleSubscriber.prototype.notifyNext=function(){this.emitValue();};SampleSubscriber.prototype.notifyComplete=function(){this.emitValue();};SampleSubscriber.prototype.emitValue=function(){if(this.hasValue){this.hasValue=false;this.destination.next(this.value);}};return SampleSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */function sampleTime(period,scheduler){if(scheduler===void 0){scheduler=async;}return function(source){return source.lift(new SampleTimeOperator(period,scheduler));};}var SampleTimeOperator=/*@__PURE__*/function(){function SampleTimeOperator(period,scheduler){this.period=period;this.scheduler=scheduler;}SampleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new SampleTimeSubscriber(subscriber,this.period,this.scheduler));};return SampleTimeOperator;}();var SampleTimeSubscriber=/*@__PURE__*/function(_super){__extends(SampleTimeSubscriber,_super);function SampleTimeSubscriber(destination,period,scheduler){var _this=_super.call(this,destination)||this;_this.period=period;_this.scheduler=scheduler;_this.hasValue=false;_this.add(scheduler.schedule(dispatchNotification,period,{subscriber:_this,period:period}));return _this;}SampleTimeSubscriber.prototype._next=function(value){this.lastValue=value;this.hasValue=true;};SampleTimeSubscriber.prototype.notifyNext=function(){if(this.hasValue){this.hasValue=false;this.destination.next(this.lastValue);}};return SampleTimeSubscriber;}(Subscriber);function dispatchNotification(state){var subscriber=state.subscriber,period=state.period;subscriber.notifyNext();this.schedule(state,period);}/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function sequenceEqual(compareTo,comparator){return function(source){return source.lift(new SequenceEqualOperator(compareTo,comparator));};}var SequenceEqualOperator=/*@__PURE__*/function(){function SequenceEqualOperator(compareTo,comparator){this.compareTo=compareTo;this.comparator=comparator;}SequenceEqualOperator.prototype.call=function(subscriber,source){return source.subscribe(new SequenceEqualSubscriber(subscriber,this.compareTo,this.comparator));};return SequenceEqualOperator;}();var SequenceEqualSubscriber=/*@__PURE__*/function(_super){__extends(SequenceEqualSubscriber,_super);function SequenceEqualSubscriber(destination,compareTo,comparator){var _this=_super.call(this,destination)||this;_this.compareTo=compareTo;_this.comparator=comparator;_this._a=[];_this._b=[];_this._oneComplete=false;_this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination,_this)));return _this;}SequenceEqualSubscriber.prototype._next=function(value){if(this._oneComplete&&this._b.length===0){this.emit(false);}else{this._a.push(value);this.checkValues();}};SequenceEqualSubscriber.prototype._complete=function(){if(this._oneComplete){this.emit(this._a.length===0&&this._b.length===0);}else{this._oneComplete=true;}this.unsubscribe();};SequenceEqualSubscriber.prototype.checkValues=function(){var _c=this,_a=_c._a,_b=_c._b,comparator=_c.comparator;while(_a.length>0&&_b.length>0){var a=_a.shift();var b=_b.shift();var areEqual=false;try{areEqual=comparator?comparator(a,b):a===b;}catch(e){this.destination.error(e);}if(!areEqual){this.emit(false);}}};SequenceEqualSubscriber.prototype.emit=function(value){var destination=this.destination;destination.next(value);destination.complete();};SequenceEqualSubscriber.prototype.nextB=function(value){if(this._oneComplete&&this._a.length===0){this.emit(false);}else{this._b.push(value);this.checkValues();}};SequenceEqualSubscriber.prototype.completeB=function(){if(this._oneComplete){this.emit(this._a.length===0&&this._b.length===0);}else{this._oneComplete=true;}};return SequenceEqualSubscriber;}(Subscriber);var SequenceEqualCompareToSubscriber=/*@__PURE__*/function(_super){__extends(SequenceEqualCompareToSubscriber,_super);function SequenceEqualCompareToSubscriber(destination,parent){var _this=_super.call(this,destination)||this;_this.parent=parent;return _this;}SequenceEqualCompareToSubscriber.prototype._next=function(value){this.parent.nextB(value);};SequenceEqualCompareToSubscriber.prototype._error=function(err){this.parent.error(err);this.unsubscribe();};SequenceEqualCompareToSubscriber.prototype._complete=function(){this.parent.completeB();this.unsubscribe();};return SequenceEqualCompareToSubscriber;}(Subscriber);/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */function shareSubjectFactory(){return new Subject();}function share(){return function(source){return refCount()(multicast(shareSubjectFactory)(source));};}/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */function shareReplay(configOrBufferSize,windowTime,scheduler){var config;if(configOrBufferSize&&typeof configOrBufferSize==='object'){config=configOrBufferSize;}else{config={bufferSize:configOrBufferSize,windowTime:windowTime,refCount:false,scheduler:scheduler};}return function(source){return source.lift(shareReplayOperator(config));};}function shareReplayOperator(_a){var _b=_a.bufferSize,bufferSize=_b===void 0?Number.POSITIVE_INFINITY:_b,_c=_a.windowTime,windowTime=_c===void 0?Number.POSITIVE_INFINITY:_c,useRefCount=_a.refCount,scheduler=_a.scheduler;var subject;var refCount=0;var subscription;var hasError=false;var isComplete=false;return function shareReplayOperation(source){refCount++;var innerSub;if(!subject||hasError){hasError=false;subject=new ReplaySubject(bufferSize,windowTime,scheduler);innerSub=subject.subscribe(this);subscription=source.subscribe({next:function(value){subject.next(value);},error:function(err){hasError=true;subject.error(err);},complete:function(){isComplete=true;subscription=undefined;subject.complete();}});if(isComplete){subscription=undefined;}}else{innerSub=subject.subscribe(this);}this.add(function(){refCount--;innerSub.unsubscribe();innerSub=undefined;if(subscription&&!isComplete&&useRefCount&&refCount===0){subscription.unsubscribe();subscription=undefined;subject=undefined;}});};}/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */function single(predicate){return function(source){return source.lift(new SingleOperator(predicate,source));};}var SingleOperator=/*@__PURE__*/function(){function SingleOperator(predicate,source){this.predicate=predicate;this.source=source;}SingleOperator.prototype.call=function(subscriber,source){return source.subscribe(new SingleSubscriber(subscriber,this.predicate,this.source));};return SingleOperator;}();var SingleSubscriber=/*@__PURE__*/function(_super){__extends(SingleSubscriber,_super);function SingleSubscriber(destination,predicate,source){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.source=source;_this.seenValue=false;_this.index=0;return _this;}SingleSubscriber.prototype.applySingleValue=function(value){if(this.seenValue){this.destination.error('Sequence contains more than one element');}else{this.seenValue=true;this.singleValue=value;}};SingleSubscriber.prototype._next=function(value){var index=this.index++;if(this.predicate){this.tryNext(value,index);}else{this.applySingleValue(value);}};SingleSubscriber.prototype.tryNext=function(value,index){try{if(this.predicate(value,index,this.source)){this.applySingleValue(value);}}catch(err){this.destination.error(err);}};SingleSubscriber.prototype._complete=function(){var destination=this.destination;if(this.index>0){destination.next(this.seenValue?this.singleValue:undefined);destination.complete();}else{destination.error(new EmptyError());}};return SingleSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function skip(count){return function(source){return source.lift(new SkipOperator(count));};}var SkipOperator=/*@__PURE__*/function(){function SkipOperator(total){this.total=total;}SkipOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipSubscriber(subscriber,this.total));};return SkipOperator;}();var SkipSubscriber=/*@__PURE__*/function(_super){__extends(SkipSubscriber,_super);function SkipSubscriber(destination,total){var _this=_super.call(this,destination)||this;_this.total=total;_this.count=0;return _this;}SkipSubscriber.prototype._next=function(x){if(++this.count>this.total){this.destination.next(x);}};return SkipSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */function skipLast(count){return function(source){return source.lift(new SkipLastOperator(count));};}var SkipLastOperator=/*@__PURE__*/function(){function SkipLastOperator(_skipCount){this._skipCount=_skipCount;if(this._skipCount<0){throw new ArgumentOutOfRangeError();}}SkipLastOperator.prototype.call=function(subscriber,source){if(this._skipCount===0){return source.subscribe(new Subscriber(subscriber));}else{return source.subscribe(new SkipLastSubscriber(subscriber,this._skipCount));}};return SkipLastOperator;}();var SkipLastSubscriber=/*@__PURE__*/function(_super){__extends(SkipLastSubscriber,_super);function SkipLastSubscriber(destination,_skipCount){var _this=_super.call(this,destination)||this;_this._skipCount=_skipCount;_this._count=0;_this._ring=new Array(_skipCount);return _this;}SkipLastSubscriber.prototype._next=function(value){var skipCount=this._skipCount;var count=this._count++;if(count<skipCount){this._ring[count]=value;}else{var currentIndex=count%skipCount;var ring=this._ring;var oldValue=ring[currentIndex];ring[currentIndex]=value;this.destination.next(oldValue);}};return SkipLastSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function skipUntil(notifier){return function(source){return source.lift(new SkipUntilOperator(notifier));};}var SkipUntilOperator=/*@__PURE__*/function(){function SkipUntilOperator(notifier){this.notifier=notifier;}SkipUntilOperator.prototype.call=function(destination,source){return source.subscribe(new SkipUntilSubscriber(destination,this.notifier));};return SkipUntilOperator;}();var SkipUntilSubscriber=/*@__PURE__*/function(_super){__extends(SkipUntilSubscriber,_super);function SkipUntilSubscriber(destination,notifier){var _this=_super.call(this,destination)||this;_this.hasValue=false;var innerSubscriber=new SimpleInnerSubscriber(_this);_this.add(innerSubscriber);_this.innerSubscription=innerSubscriber;var innerSubscription=innerSubscribe(notifier,innerSubscriber);if(innerSubscription!==innerSubscriber){_this.add(innerSubscription);_this.innerSubscription=innerSubscription;}return _this;}SkipUntilSubscriber.prototype._next=function(value){if(this.hasValue){_super.prototype._next.call(this,value);}};SkipUntilSubscriber.prototype.notifyNext=function(){this.hasValue=true;if(this.innerSubscription){this.innerSubscription.unsubscribe();}};SkipUntilSubscriber.prototype.notifyComplete=function(){};return SkipUntilSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function skipWhile(predicate){return function(source){return source.lift(new SkipWhileOperator(predicate));};}var SkipWhileOperator=/*@__PURE__*/function(){function SkipWhileOperator(predicate){this.predicate=predicate;}SkipWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipWhileSubscriber(subscriber,this.predicate));};return SkipWhileOperator;}();var SkipWhileSubscriber=/*@__PURE__*/function(_super){__extends(SkipWhileSubscriber,_super);function SkipWhileSubscriber(destination,predicate){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.skipping=true;_this.index=0;return _this;}SkipWhileSubscriber.prototype._next=function(value){var destination=this.destination;if(this.skipping){this.tryCallPredicate(value);}if(!this.skipping){destination.next(value);}};SkipWhileSubscriber.prototype.tryCallPredicate=function(value){try{var result=this.predicate(value,this.index++);this.skipping=Boolean(result);}catch(err){this.destination.error(err);}};return SkipWhileSubscriber;}(Subscriber);/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */function startWith(){var array=[];for(var _i=0;_i<arguments.length;_i++){array[_i]=arguments[_i];}var scheduler=array[array.length-1];if(isScheduler(scheduler)){array.pop();return function(source){return concat$1(array,source,scheduler);};}else{return function(source){return concat$1(array,source);};}}/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */var SubscribeOnObservable=/*@__PURE__*/function(_super){__extends(SubscribeOnObservable,_super);function SubscribeOnObservable(source,delayTime,scheduler){if(delayTime===void 0){delayTime=0;}if(scheduler===void 0){scheduler=asap;}var _this=_super.call(this)||this;_this.source=source;_this.delayTime=delayTime;_this.scheduler=scheduler;if(!isNumeric(delayTime)||delayTime<0){_this.delayTime=0;}if(!scheduler||typeof scheduler.schedule!=='function'){_this.scheduler=asap;}return _this;}SubscribeOnObservable.create=function(source,delay,scheduler){if(delay===void 0){delay=0;}if(scheduler===void 0){scheduler=asap;}return new SubscribeOnObservable(source,delay,scheduler);};SubscribeOnObservable.dispatch=function(arg){var source=arg.source,subscriber=arg.subscriber;return this.add(source.subscribe(subscriber));};SubscribeOnObservable.prototype._subscribe=function(subscriber){var delay=this.delayTime;var source=this.source;var scheduler=this.scheduler;return scheduler.schedule(SubscribeOnObservable.dispatch,delay,{source:source,subscriber:subscriber});};return SubscribeOnObservable;}(Observable);/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */function subscribeOn(scheduler,delay){if(delay===void 0){delay=0;}return function subscribeOnOperatorFunction(source){return source.lift(new SubscribeOnOperator(scheduler,delay));};}var SubscribeOnOperator=/*@__PURE__*/function(){function SubscribeOnOperator(scheduler,delay){this.scheduler=scheduler;this.delay=delay;}SubscribeOnOperator.prototype.call=function(subscriber,source){return new SubscribeOnObservable(source,this.delay,this.scheduler).subscribe(subscriber);};return SubscribeOnOperator;}();/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */function switchMap(project,resultSelector){if(typeof resultSelector==='function'){return function(source){return source.pipe(switchMap(function(a,i){return from$2(project(a,i)).pipe(map(function(b,ii){return resultSelector(a,b,i,ii);}));}));};}return function(source){return source.lift(new SwitchMapOperator(project));};}var SwitchMapOperator=/*@__PURE__*/function(){function SwitchMapOperator(project){this.project=project;}SwitchMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchMapSubscriber(subscriber,this.project));};return SwitchMapOperator;}();var SwitchMapSubscriber=/*@__PURE__*/function(_super){__extends(SwitchMapSubscriber,_super);function SwitchMapSubscriber(destination,project){var _this=_super.call(this,destination)||this;_this.project=project;_this.index=0;return _this;}SwitchMapSubscriber.prototype._next=function(value){var result;var index=this.index++;try{result=this.project(value,index);}catch(error){this.destination.error(error);return;}this._innerSub(result);};SwitchMapSubscriber.prototype._innerSub=function(result){var innerSubscription=this.innerSubscription;if(innerSubscription){innerSubscription.unsubscribe();}var innerSubscriber=new SimpleInnerSubscriber(this);var destination=this.destination;destination.add(innerSubscriber);this.innerSubscription=innerSubscribe(result,innerSubscriber);if(this.innerSubscription!==innerSubscriber){destination.add(this.innerSubscription);}};SwitchMapSubscriber.prototype._complete=function(){var innerSubscription=this.innerSubscription;if(!innerSubscription||innerSubscription.closed){_super.prototype._complete.call(this);}this.unsubscribe();};SwitchMapSubscriber.prototype._unsubscribe=function(){this.innerSubscription=undefined;};SwitchMapSubscriber.prototype.notifyComplete=function(){this.innerSubscription=undefined;if(this.isStopped){_super.prototype._complete.call(this);}};SwitchMapSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue);};return SwitchMapSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */function switchAll(){return switchMap(identity);}/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */function switchMapTo(innerObservable,resultSelector){return resultSelector?switchMap(function(){return innerObservable;},resultSelector):switchMap(function(){return innerObservable;});}/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */function takeUntil(notifier){return function(source){return source.lift(new TakeUntilOperator(notifier));};}var TakeUntilOperator=/*@__PURE__*/function(){function TakeUntilOperator(notifier){this.notifier=notifier;}TakeUntilOperator.prototype.call=function(subscriber,source){var takeUntilSubscriber=new TakeUntilSubscriber(subscriber);var notifierSubscription=innerSubscribe(this.notifier,new SimpleInnerSubscriber(takeUntilSubscriber));if(notifierSubscription&&!takeUntilSubscriber.seenValue){takeUntilSubscriber.add(notifierSubscription);return source.subscribe(takeUntilSubscriber);}return takeUntilSubscriber;};return TakeUntilOperator;}();var TakeUntilSubscriber=/*@__PURE__*/function(_super){__extends(TakeUntilSubscriber,_super);function TakeUntilSubscriber(destination){var _this=_super.call(this,destination)||this;_this.seenValue=false;return _this;}TakeUntilSubscriber.prototype.notifyNext=function(){this.seenValue=true;this.complete();};TakeUntilSubscriber.prototype.notifyComplete=function(){};return TakeUntilSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */function takeWhile(predicate,inclusive){if(inclusive===void 0){inclusive=false;}return function(source){return source.lift(new TakeWhileOperator(predicate,inclusive));};}var TakeWhileOperator=/*@__PURE__*/function(){function TakeWhileOperator(predicate,inclusive){this.predicate=predicate;this.inclusive=inclusive;}TakeWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeWhileSubscriber(subscriber,this.predicate,this.inclusive));};return TakeWhileOperator;}();var TakeWhileSubscriber=/*@__PURE__*/function(_super){__extends(TakeWhileSubscriber,_super);function TakeWhileSubscriber(destination,predicate,inclusive){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.inclusive=inclusive;_this.index=0;return _this;}TakeWhileSubscriber.prototype._next=function(value){var destination=this.destination;var result;try{result=this.predicate(value,this.index++);}catch(err){destination.error(err);return;}this.nextOrComplete(value,result);};TakeWhileSubscriber.prototype.nextOrComplete=function(value,predicateResult){var destination=this.destination;if(Boolean(predicateResult)){destination.next(value);}else{if(this.inclusive){destination.next(value);}destination.complete();}};return TakeWhileSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */function tap(nextOrObserver,error,complete){return function tapOperatorFunction(source){return source.lift(new DoOperator(nextOrObserver,error,complete));};}var DoOperator=/*@__PURE__*/function(){function DoOperator(nextOrObserver,error,complete){this.nextOrObserver=nextOrObserver;this.error=error;this.complete=complete;}DoOperator.prototype.call=function(subscriber,source){return source.subscribe(new TapSubscriber(subscriber,this.nextOrObserver,this.error,this.complete));};return DoOperator;}();var TapSubscriber=/*@__PURE__*/function(_super){__extends(TapSubscriber,_super);function TapSubscriber(destination,observerOrNext,error,complete){var _this=_super.call(this,destination)||this;_this._tapNext=noop;_this._tapError=noop;_this._tapComplete=noop;_this._tapError=error||noop;_this._tapComplete=complete||noop;if(isFunction(observerOrNext)){_this._context=_this;_this._tapNext=observerOrNext;}else if(observerOrNext){_this._context=observerOrNext;_this._tapNext=observerOrNext.next||noop;_this._tapError=observerOrNext.error||noop;_this._tapComplete=observerOrNext.complete||noop;}return _this;}TapSubscriber.prototype._next=function(value){try{this._tapNext.call(this._context,value);}catch(err){this.destination.error(err);return;}this.destination.next(value);};TapSubscriber.prototype._error=function(err){try{this._tapError.call(this._context,err);}catch(err){this.destination.error(err);return;}this.destination.error(err);};TapSubscriber.prototype._complete=function(){try{this._tapComplete.call(this._context);}catch(err){this.destination.error(err);return;}return this.destination.complete();};return TapSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */var defaultThrottleConfig={leading:true,trailing:false};function throttle(durationSelector,config){if(config===void 0){config=defaultThrottleConfig;}return function(source){return source.lift(new ThrottleOperator(durationSelector,!!config.leading,!!config.trailing));};}var ThrottleOperator=/*@__PURE__*/function(){function ThrottleOperator(durationSelector,leading,trailing){this.durationSelector=durationSelector;this.leading=leading;this.trailing=trailing;}ThrottleOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrottleSubscriber(subscriber,this.durationSelector,this.leading,this.trailing));};return ThrottleOperator;}();var ThrottleSubscriber=/*@__PURE__*/function(_super){__extends(ThrottleSubscriber,_super);function ThrottleSubscriber(destination,durationSelector,_leading,_trailing){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.durationSelector=durationSelector;_this._leading=_leading;_this._trailing=_trailing;_this._hasValue=false;return _this;}ThrottleSubscriber.prototype._next=function(value){this._hasValue=true;this._sendValue=value;if(!this._throttled){if(this._leading){this.send();}else{this.throttle(value);}}};ThrottleSubscriber.prototype.send=function(){var _a=this,_hasValue=_a._hasValue,_sendValue=_a._sendValue;if(_hasValue){this.destination.next(_sendValue);this.throttle(_sendValue);}this._hasValue=false;this._sendValue=undefined;};ThrottleSubscriber.prototype.throttle=function(value){var duration=this.tryDurationSelector(value);if(!!duration){this.add(this._throttled=innerSubscribe(duration,new SimpleInnerSubscriber(this)));}};ThrottleSubscriber.prototype.tryDurationSelector=function(value){try{return this.durationSelector(value);}catch(err){this.destination.error(err);return null;}};ThrottleSubscriber.prototype.throttlingDone=function(){var _a=this,_throttled=_a._throttled,_trailing=_a._trailing;if(_throttled){_throttled.unsubscribe();}this._throttled=undefined;if(_trailing){this.send();}};ThrottleSubscriber.prototype.notifyNext=function(){this.throttlingDone();};ThrottleSubscriber.prototype.notifyComplete=function(){this.throttlingDone();};return ThrottleSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */function throttleTime(duration,scheduler,config){if(scheduler===void 0){scheduler=async;}if(config===void 0){config=defaultThrottleConfig;}return function(source){return source.lift(new ThrottleTimeOperator(duration,scheduler,config.leading,config.trailing));};}var ThrottleTimeOperator=/*@__PURE__*/function(){function ThrottleTimeOperator(duration,scheduler,leading,trailing){this.duration=duration;this.scheduler=scheduler;this.leading=leading;this.trailing=trailing;}ThrottleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrottleTimeSubscriber(subscriber,this.duration,this.scheduler,this.leading,this.trailing));};return ThrottleTimeOperator;}();var ThrottleTimeSubscriber=/*@__PURE__*/function(_super){__extends(ThrottleTimeSubscriber,_super);function ThrottleTimeSubscriber(destination,duration,scheduler,leading,trailing){var _this=_super.call(this,destination)||this;_this.duration=duration;_this.scheduler=scheduler;_this.leading=leading;_this.trailing=trailing;_this._hasTrailingValue=false;_this._trailingValue=null;return _this;}ThrottleTimeSubscriber.prototype._next=function(value){if(this.throttled){if(this.trailing){this._trailingValue=value;this._hasTrailingValue=true;}}else{this.add(this.throttled=this.scheduler.schedule(dispatchNext,this.duration,{subscriber:this}));if(this.leading){this.destination.next(value);}else if(this.trailing){this._trailingValue=value;this._hasTrailingValue=true;}}};ThrottleTimeSubscriber.prototype._complete=function(){if(this._hasTrailingValue){this.destination.next(this._trailingValue);this.destination.complete();}else{this.destination.complete();}};ThrottleTimeSubscriber.prototype.clearThrottle=function(){var throttled=this.throttled;if(throttled){if(this.trailing&&this._hasTrailingValue){this.destination.next(this._trailingValue);this._trailingValue=null;this._hasTrailingValue=false;}throttled.unsubscribe();this.remove(throttled);this.throttled=null;}};return ThrottleTimeSubscriber;}(Subscriber);function dispatchNext(arg){var subscriber=arg.subscriber;subscriber.clearThrottle();}/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */function timeInterval(scheduler){if(scheduler===void 0){scheduler=async;}return function(source){return defer$1(function(){return source.pipe(scan(function(_a,value){var current=_a.current;return{value:value,current:scheduler.now(),last:current};},{current:scheduler.now(),value:undefined,last:undefined}),map(function(_a){var current=_a.current,last=_a.last,value=_a.value;return new TimeInterval(value,current-last);}));});};}var TimeInterval=/*@__PURE__*/function(){function TimeInterval(value,interval){this.value=value;this.interval=interval;}return TimeInterval;}();/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_innerSubscribe PURE_IMPORTS_END */function timeoutWith(due,withObservable,scheduler){if(scheduler===void 0){scheduler=async;}return function(source){var absoluteTimeout=isDate(due);var waitFor=absoluteTimeout?+due-scheduler.now():Math.abs(due);return source.lift(new TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler));};}var TimeoutWithOperator=/*@__PURE__*/function(){function TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler){this.waitFor=waitFor;this.absoluteTimeout=absoluteTimeout;this.withObservable=withObservable;this.scheduler=scheduler;}TimeoutWithOperator.prototype.call=function(subscriber,source){return source.subscribe(new TimeoutWithSubscriber(subscriber,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler));};return TimeoutWithOperator;}();var TimeoutWithSubscriber=/*@__PURE__*/function(_super){__extends(TimeoutWithSubscriber,_super);function TimeoutWithSubscriber(destination,absoluteTimeout,waitFor,withObservable,scheduler){var _this=_super.call(this,destination)||this;_this.absoluteTimeout=absoluteTimeout;_this.waitFor=waitFor;_this.withObservable=withObservable;_this.scheduler=scheduler;_this.scheduleTimeout();return _this;}TimeoutWithSubscriber.dispatchTimeout=function(subscriber){var withObservable=subscriber.withObservable;subscriber._unsubscribeAndRecycle();subscriber.add(innerSubscribe(withObservable,new SimpleInnerSubscriber(subscriber)));};TimeoutWithSubscriber.prototype.scheduleTimeout=function(){var action=this.action;if(action){this.action=action.schedule(this,this.waitFor);}else{this.add(this.action=this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout,this.waitFor,this));}};TimeoutWithSubscriber.prototype._next=function(value){if(!this.absoluteTimeout){this.scheduleTimeout();}_super.prototype._next.call(this,value);};TimeoutWithSubscriber.prototype._unsubscribe=function(){this.action=undefined;this.scheduler=null;this.withObservable=null;};return TimeoutWithSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */function timeout(due,scheduler){if(scheduler===void 0){scheduler=async;}return timeoutWith(due,throwError(new TimeoutError$1()),scheduler);}/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */function timestamp(scheduler){if(scheduler===void 0){scheduler=async;}return map(function(value){return new Timestamp(value,scheduler.now());});}var Timestamp=/*@__PURE__*/function(){function Timestamp(value,timestamp){this.value=value;this.timestamp=timestamp;}return Timestamp;}();/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */function toArrayReducer(arr,item,index){if(index===0){return[item];}arr.push(item);return arr;}function toArray(){return reduce$1(toArrayReducer,[]);}/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */function window$1(windowBoundaries){return function windowOperatorFunction(source){return source.lift(new WindowOperator$1(windowBoundaries));};}var WindowOperator$1=/*@__PURE__*/function(){function WindowOperator(windowBoundaries){this.windowBoundaries=windowBoundaries;}WindowOperator.prototype.call=function(subscriber,source){var windowSubscriber=new WindowSubscriber$1(subscriber);var sourceSubscription=source.subscribe(windowSubscriber);if(!sourceSubscription.closed){windowSubscriber.add(innerSubscribe(this.windowBoundaries,new SimpleInnerSubscriber(windowSubscriber)));}return sourceSubscription;};return WindowOperator;}();var WindowSubscriber$1=/*@__PURE__*/function(_super){__extends(WindowSubscriber,_super);function WindowSubscriber(destination){var _this=_super.call(this,destination)||this;_this.window=new Subject();destination.next(_this.window);return _this;}WindowSubscriber.prototype.notifyNext=function(){this.openWindow();};WindowSubscriber.prototype.notifyError=function(error){this._error(error);};WindowSubscriber.prototype.notifyComplete=function(){this._complete();};WindowSubscriber.prototype._next=function(value){this.window.next(value);};WindowSubscriber.prototype._error=function(err){this.window.error(err);this.destination.error(err);};WindowSubscriber.prototype._complete=function(){this.window.complete();this.destination.complete();};WindowSubscriber.prototype._unsubscribe=function(){this.window=null;};WindowSubscriber.prototype.openWindow=function(){var prevWindow=this.window;if(prevWindow){prevWindow.complete();}var destination=this.destination;var newWindow=this.window=new Subject();destination.next(newWindow);};return WindowSubscriber;}(SimpleOuterSubscriber);/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */function windowCount(windowSize,startWindowEvery){if(startWindowEvery===void 0){startWindowEvery=0;}return function windowCountOperatorFunction(source){return source.lift(new WindowCountOperator(windowSize,startWindowEvery));};}var WindowCountOperator=/*@__PURE__*/function(){function WindowCountOperator(windowSize,startWindowEvery){this.windowSize=windowSize;this.startWindowEvery=startWindowEvery;}WindowCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowCountSubscriber(subscriber,this.windowSize,this.startWindowEvery));};return WindowCountOperator;}();var WindowCountSubscriber=/*@__PURE__*/function(_super){__extends(WindowCountSubscriber,_super);function WindowCountSubscriber(destination,windowSize,startWindowEvery){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.windowSize=windowSize;_this.startWindowEvery=startWindowEvery;_this.windows=[new Subject()];_this.count=0;destination.next(_this.windows[0]);return _this;}WindowCountSubscriber.prototype._next=function(value){var startWindowEvery=this.startWindowEvery>0?this.startWindowEvery:this.windowSize;var destination=this.destination;var windowSize=this.windowSize;var windows=this.windows;var len=windows.length;for(var i=0;i<len&&!this.closed;i++){windows[i].next(value);}var c=this.count-windowSize+1;if(c>=0&&c%startWindowEvery===0&&!this.closed){windows.shift().complete();}if(++this.count%startWindowEvery===0&&!this.closed){var window_1=new Subject();windows.push(window_1);destination.next(window_1);}};WindowCountSubscriber.prototype._error=function(err){var windows=this.windows;if(windows){while(windows.length>0&&!this.closed){windows.shift().error(err);}}this.destination.error(err);};WindowCountSubscriber.prototype._complete=function(){var windows=this.windows;if(windows){while(windows.length>0&&!this.closed){windows.shift().complete();}}this.destination.complete();};WindowCountSubscriber.prototype._unsubscribe=function(){this.count=0;this.windows=null;};return WindowCountSubscriber;}(Subscriber);/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */function windowTime(windowTimeSpan){var scheduler=async;var windowCreationInterval=null;var maxWindowSize=Number.POSITIVE_INFINITY;if(isScheduler(arguments[3])){scheduler=arguments[3];}if(isScheduler(arguments[2])){scheduler=arguments[2];}else if(isNumeric(arguments[2])){maxWindowSize=Number(arguments[2]);}if(isScheduler(arguments[1])){scheduler=arguments[1];}else if(isNumeric(arguments[1])){windowCreationInterval=Number(arguments[1]);}return function windowTimeOperatorFunction(source){return source.lift(new WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler));};}var WindowTimeOperator=/*@__PURE__*/function(){function WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){this.windowTimeSpan=windowTimeSpan;this.windowCreationInterval=windowCreationInterval;this.maxWindowSize=maxWindowSize;this.scheduler=scheduler;}WindowTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowTimeSubscriber(subscriber,this.windowTimeSpan,this.windowCreationInterval,this.maxWindowSize,this.scheduler));};return WindowTimeOperator;}();var CountedSubject=/*@__PURE__*/function(_super){__extends(CountedSubject,_super);function CountedSubject(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this._numberOfNextedValues=0;return _this;}CountedSubject.prototype.next=function(value){this._numberOfNextedValues++;_super.prototype.next.call(this,value);};Object.defineProperty(CountedSubject.prototype,"numberOfNextedValues",{get:function(){return this._numberOfNextedValues;},enumerable:true,configurable:true});return CountedSubject;}(Subject);var WindowTimeSubscriber=/*@__PURE__*/function(_super){__extends(WindowTimeSubscriber,_super);function WindowTimeSubscriber(destination,windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.windowTimeSpan=windowTimeSpan;_this.windowCreationInterval=windowCreationInterval;_this.maxWindowSize=maxWindowSize;_this.scheduler=scheduler;_this.windows=[];var window=_this.openWindow();if(windowCreationInterval!==null&&windowCreationInterval>=0){var closeState={subscriber:_this,window:window,context:null};var creationState={windowTimeSpan:windowTimeSpan,windowCreationInterval:windowCreationInterval,subscriber:_this,scheduler:scheduler};_this.add(scheduler.schedule(dispatchWindowClose,windowTimeSpan,closeState));_this.add(scheduler.schedule(dispatchWindowCreation,windowCreationInterval,creationState));}else{var timeSpanOnlyState={subscriber:_this,window:window,windowTimeSpan:windowTimeSpan};_this.add(scheduler.schedule(dispatchWindowTimeSpanOnly,windowTimeSpan,timeSpanOnlyState));}return _this;}WindowTimeSubscriber.prototype._next=function(value){var windows=this.windows;var len=windows.length;for(var i=0;i<len;i++){var window_1=windows[i];if(!window_1.closed){window_1.next(value);if(window_1.numberOfNextedValues>=this.maxWindowSize){this.closeWindow(window_1);}}}};WindowTimeSubscriber.prototype._error=function(err){var windows=this.windows;while(windows.length>0){windows.shift().error(err);}this.destination.error(err);};WindowTimeSubscriber.prototype._complete=function(){var windows=this.windows;while(windows.length>0){var window_2=windows.shift();if(!window_2.closed){window_2.complete();}}this.destination.complete();};WindowTimeSubscriber.prototype.openWindow=function(){var window=new CountedSubject();this.windows.push(window);var destination=this.destination;destination.next(window);return window;};WindowTimeSubscriber.prototype.closeWindow=function(window){window.complete();var windows=this.windows;windows.splice(windows.indexOf(window),1);};return WindowTimeSubscriber;}(Subscriber);function dispatchWindowTimeSpanOnly(state){var subscriber=state.subscriber,windowTimeSpan=state.windowTimeSpan,window=state.window;if(window){subscriber.closeWindow(window);}state.window=subscriber.openWindow();this.schedule(state,windowTimeSpan);}function dispatchWindowCreation(state){var windowTimeSpan=state.windowTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler,windowCreationInterval=state.windowCreationInterval;var window=subscriber.openWindow();var action=this;var context={action:action,subscription:null};var timeSpanState={subscriber:subscriber,window:window,context:context};context.subscription=scheduler.schedule(dispatchWindowClose,windowTimeSpan,timeSpanState);action.add(context.subscription);action.schedule(state,windowCreationInterval);}function dispatchWindowClose(state){var subscriber=state.subscriber,window=state.window,context=state.context;if(context&&context.action&&context.subscription){context.action.remove(context.subscription);}subscriber.closeWindow(window);}/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */function windowToggle(openings,closingSelector){return function(source){return source.lift(new WindowToggleOperator(openings,closingSelector));};}var WindowToggleOperator=/*@__PURE__*/function(){function WindowToggleOperator(openings,closingSelector){this.openings=openings;this.closingSelector=closingSelector;}WindowToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowToggleSubscriber(subscriber,this.openings,this.closingSelector));};return WindowToggleOperator;}();var WindowToggleSubscriber=/*@__PURE__*/function(_super){__extends(WindowToggleSubscriber,_super);function WindowToggleSubscriber(destination,openings,closingSelector){var _this=_super.call(this,destination)||this;_this.openings=openings;_this.closingSelector=closingSelector;_this.contexts=[];_this.add(_this.openSubscription=subscribeToResult(_this,openings,openings));return _this;}WindowToggleSubscriber.prototype._next=function(value){var contexts=this.contexts;if(contexts){var len=contexts.length;for(var i=0;i<len;i++){contexts[i].window.next(value);}}};WindowToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context_1=contexts[index];context_1.window.error(err);context_1.subscription.unsubscribe();}}_super.prototype._error.call(this,err);};WindowToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context_2=contexts[index];context_2.window.complete();context_2.subscription.unsubscribe();}}_super.prototype._complete.call(this);};WindowToggleSubscriber.prototype._unsubscribe=function(){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context_3=contexts[index];context_3.window.unsubscribe();context_3.subscription.unsubscribe();}}};WindowToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(outerValue===this.openings){var closingNotifier=void 0;try{var closingSelector=this.closingSelector;closingNotifier=closingSelector(innerValue);}catch(e){return this.error(e);}var window_1=new Subject();var subscription=new Subscription();var context_4={window:window_1,subscription:subscription};this.contexts.push(context_4);var innerSubscription=subscribeToResult(this,closingNotifier,context_4);if(innerSubscription.closed){this.closeWindow(this.contexts.length-1);}else{innerSubscription.context=context_4;subscription.add(innerSubscription);}this.destination.next(window_1);}else{this.closeWindow(this.contexts.indexOf(outerValue));}};WindowToggleSubscriber.prototype.notifyError=function(err){this.error(err);};WindowToggleSubscriber.prototype.notifyComplete=function(inner){if(inner!==this.openSubscription){this.closeWindow(this.contexts.indexOf(inner.context));}};WindowToggleSubscriber.prototype.closeWindow=function(index){if(index===-1){return;}var contexts=this.contexts;var context=contexts[index];var window=context.window,subscription=context.subscription;contexts.splice(index,1);window.complete();subscription.unsubscribe();};return WindowToggleSubscriber;}(OuterSubscriber);/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */function windowWhen(closingSelector){return function windowWhenOperatorFunction(source){return source.lift(new WindowOperator(closingSelector));};}var WindowOperator=/*@__PURE__*/function(){function WindowOperator(closingSelector){this.closingSelector=closingSelector;}WindowOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowSubscriber(subscriber,this.closingSelector));};return WindowOperator;}();var WindowSubscriber=/*@__PURE__*/function(_super){__extends(WindowSubscriber,_super);function WindowSubscriber(destination,closingSelector){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.closingSelector=closingSelector;_this.openWindow();return _this;}WindowSubscriber.prototype.notifyNext=function(_outerValue,_innerValue,_outerIndex,_innerIndex,innerSub){this.openWindow(innerSub);};WindowSubscriber.prototype.notifyError=function(error){this._error(error);};WindowSubscriber.prototype.notifyComplete=function(innerSub){this.openWindow(innerSub);};WindowSubscriber.prototype._next=function(value){this.window.next(value);};WindowSubscriber.prototype._error=function(err){this.window.error(err);this.destination.error(err);this.unsubscribeClosingNotification();};WindowSubscriber.prototype._complete=function(){this.window.complete();this.destination.complete();this.unsubscribeClosingNotification();};WindowSubscriber.prototype.unsubscribeClosingNotification=function(){if(this.closingNotification){this.closingNotification.unsubscribe();}};WindowSubscriber.prototype.openWindow=function(innerSub){if(innerSub===void 0){innerSub=null;}if(innerSub){this.remove(innerSub);innerSub.unsubscribe();}var prevWindow=this.window;if(prevWindow){prevWindow.complete();}var window=this.window=new Subject();this.destination.next(window);var closingNotifier;try{var closingSelector=this.closingSelector;closingNotifier=closingSelector();}catch(e){this.destination.error(e);this.window.error(e);return;}this.add(this.closingNotification=subscribeToResult(this,closingNotifier));};return WindowSubscriber;}(OuterSubscriber);/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */function withLatestFrom(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return function(source){var project;if(typeof args[args.length-1]==='function'){project=args.pop();}var observables=args;return source.lift(new WithLatestFromOperator(observables,project));};}var WithLatestFromOperator=/*@__PURE__*/function(){function WithLatestFromOperator(observables,project){this.observables=observables;this.project=project;}WithLatestFromOperator.prototype.call=function(subscriber,source){return source.subscribe(new WithLatestFromSubscriber(subscriber,this.observables,this.project));};return WithLatestFromOperator;}();var WithLatestFromSubscriber=/*@__PURE__*/function(_super){__extends(WithLatestFromSubscriber,_super);function WithLatestFromSubscriber(destination,observables,project){var _this=_super.call(this,destination)||this;_this.observables=observables;_this.project=project;_this.toRespond=[];var len=observables.length;_this.values=new Array(len);for(var i=0;i<len;i++){_this.toRespond.push(i);}for(var i=0;i<len;i++){var observable=observables[i];_this.add(subscribeToResult(_this,observable,undefined,i));}return _this;}WithLatestFromSubscriber.prototype.notifyNext=function(_outerValue,innerValue,outerIndex){this.values[outerIndex]=innerValue;var toRespond=this.toRespond;if(toRespond.length>0){var found=toRespond.indexOf(outerIndex);if(found!==-1){toRespond.splice(found,1);}}};WithLatestFromSubscriber.prototype.notifyComplete=function(){};WithLatestFromSubscriber.prototype._next=function(value){if(this.toRespond.length===0){var args=[value].concat(this.values);if(this.project){this._tryProject(args);}else{this.destination.next(args);}}};WithLatestFromSubscriber.prototype._tryProject=function(args){var result;try{result=this.project.apply(this,args);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return WithLatestFromSubscriber;}(OuterSubscriber);/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */function zip(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return function zipOperatorFunction(source){return source.lift.call(zip$1.apply(void 0,[source].concat(observables)));};}/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */function zipAll(project){return function(source){return source.lift(new ZipOperator(project));};}/** PURE_IMPORTS_START  PURE_IMPORTS_END */var operators=/*#__PURE__*/Object.freeze({__proto__:null,audit:audit,auditTime:auditTime,buffer:buffer,bufferCount:bufferCount,bufferTime:bufferTime,bufferToggle:bufferToggle,bufferWhen:bufferWhen,catchError:catchError,combineAll:combineAll,combineLatest:combineLatest,concat:concat,concatAll:concatAll,concatMap:concatMap$1,concatMapTo:concatMapTo,count:count,debounce:debounce,debounceTime:debounceTime,defaultIfEmpty:defaultIfEmpty,delay:delay,delayWhen:delayWhen,dematerialize:dematerialize,distinct:distinct,distinctUntilChanged:distinctUntilChanged,distinctUntilKeyChanged:distinctUntilKeyChanged,elementAt:elementAt,endWith:endWith,every:every,exhaust:exhaust,exhaustMap:exhaustMap,expand:expand$1,filter:filter$1,finalize:finalize,find:find,findIndex:findIndex,first:first,flatMap:flatMap,groupBy:groupBy,ignoreElements:ignoreElements,isEmpty:isEmpty,last:last,map:map,mapTo:mapTo,materialize:materialize,max:max,merge:merge,mergeAll:mergeAll,mergeMap:mergeMap,mergeMapTo:mergeMapTo,mergeScan:mergeScan,min:min,multicast:multicast,observeOn:observeOn,onErrorResumeNext:onErrorResumeNext,pairwise:pairwise,partition:partition,pluck:pluck,publish:publish$1,publishBehavior:publishBehavior,publishLast:publishLast,publishReplay:publishReplay,race:race,reduce:reduce$1,refCount:refCount,repeat:repeat,repeatWhen:repeatWhen,retry:retry,retryWhen:retryWhen,sample:sample$1,sampleTime:sampleTime,scan:scan,sequenceEqual:sequenceEqual,share:share,shareReplay:shareReplay,single:single,skip:skip,skipLast:skipLast,skipUntil:skipUntil,skipWhile:skipWhile,startWith:startWith,subscribeOn:subscribeOn,switchAll:switchAll,switchMap:switchMap,switchMapTo:switchMapTo,take:take,takeLast:takeLast,takeUntil:takeUntil,takeWhile:takeWhile,tap:tap,throttle:throttle,throttleTime:throttleTime,throwIfEmpty:throwIfEmpty,timeInterval:timeInterval,timeout:timeout,timeoutWith:timeoutWith,timestamp:timestamp,toArray:toArray,window:window$1,windowCount:windowCount,windowTime:windowTime,windowToggle:windowToggle,windowWhen:windowWhen,withLatestFrom:withLatestFrom,zip:zip,zipAll:zipAll});var require$$1$1=/*@__PURE__*/loadEnv.getAugmentedNamespace(operators);var runAsync$3={exports:{}};function isPromise(obj){return!!obj&&(typeof obj==='object'||typeof obj==='function')&&typeof obj.then==='function';}/**
 * Return a function that will run a function asynchronously or synchronously
 *
 * example:
 * runAsync(wrappedFunction, callback)(...args);
 *
 * @param   {Function} func  Function to run
 * @param   {Function} cb    Callback function passed the `func` returned value
 * @return  {Function(arguments)} Arguments to pass to `func`. This function will in turn
 *                                return a Promise (Node >= 0.12) or call the callbacks.
 */var runAsync$2=runAsync$3.exports=function(func,cb){cb=cb||function(){};return function(){var args=arguments;var promise=new Promise(function(resolve,reject){var resolved=false;const wrappedResolve=function(value){if(resolved){console.warn('Run-async promise already resolved.');}resolved=true;resolve(value);};var rejected=false;const wrappedReject=function(value){if(rejected){console.warn('Run-async promise already rejected.');}rejected=true;reject(value);};var usingCallback=false;var callbackConflict=false;var contextEnded=false;var answer=func.apply({async:function(){if(contextEnded){console.warn('Run-async async() called outside a valid run-async context, callback will be ignored.');return function(){};}if(callbackConflict){console.warn('Run-async wrapped function (async) returned a promise.\nCalls to async() callback can have unexpected results.');}usingCallback=true;return function(err,value){if(err){wrappedReject(err);}else{wrappedResolve(value);}};}},Array.prototype.slice.call(args));if(usingCallback){if(isPromise(answer)){console.warn('Run-async wrapped function (sync) returned a promise but async() callback must be executed to resolve.');}}else{if(isPromise(answer)){callbackConflict=true;answer.then(wrappedResolve,wrappedReject);}else{wrappedResolve(answer);}}contextEnded=true;});promise.then(cb.bind(null,null),cb);return promise;};};runAsync$2.cb=function(func,cb){return runAsync$2(function(){var args=Array.prototype.slice.call(arguments);if(args.length===func.length-1){args.push(this.async());}return func.apply(this,args);},cb);};var runAsyncExports=runAsync$3.exports;var utils$1={};var _$1=lodashExports;var{from:from$1,of:of$1}=require$$4$1;var runAsync$1=runAsyncExports;/**
 * Resolve a question property value if it is passed as a function.
 * This method will overwrite the property on the question object with the received value.
 * @param  {Object} question - Question object
 * @param  {String} prop     - Property to fetch name
 * @param  {Object} answers  - Answers object
 * @return {Rx.Observable}   - Observable emitting once value is known
 */utils$1.fetchAsyncQuestionProperty=function(question,prop,answers){if(!_$1.isFunction(question[prop])){return of$1(question);}return from$1(runAsync$1(question[prop])(answers).then(value=>{question[prop]=value;return question;}));};var _=lodashExports;var{defer,empty,from,of}=require$$4$1;var{concatMap,filter,publish,reduce}=require$$1$1;var runAsync=runAsyncExports;var utils=utils$1;var Base=baseUI;/**
 * Base interface class other can inherits from
 */class PromptUI extends Base{constructor(prompts,opt){super(opt);this.prompts=prompts;}run(questions){// Keep global reference to the answers
this.answers={};// Make sure questions is an array.
if(_.isPlainObject(questions)){questions=[questions];}// Create an observable, unless we received one as parameter.
// Note: As this is a public interface, we cannot do an instanceof check as we won't
// be using the exact same object in memory.
var obs=_.isArray(questions)?from(questions):questions;this.process=obs.pipe(concatMap(this.processQuestion.bind(this)),publish()// Creates a hot Observable. It prevents duplicating prompts.
);this.process.connect();return this.process.pipe(reduce((answers,answer)=>{_.set(this.answers,answer.name,answer.answer);return this.answers;},{})).toPromise(Promise).then(this.onCompletion.bind(this));}/**
   * Once all prompt are over
   */onCompletion(){this.close();return this.answers;}processQuestion(question){question=_.clone(question);return defer(()=>{var obs=of(question);return obs.pipe(concatMap(this.setDefaultType.bind(this)),concatMap(this.filterIfRunnable.bind(this)),concatMap(()=>utils.fetchAsyncQuestionProperty(question,'message',this.answers)),concatMap(()=>utils.fetchAsyncQuestionProperty(question,'default',this.answers)),concatMap(()=>utils.fetchAsyncQuestionProperty(question,'choices',this.answers)),concatMap(this.fetchAnswer.bind(this)));});}fetchAnswer(question){var Prompt=this.prompts[question.type];this.activePrompt=new Prompt(question,this.rl,this.answers);return defer(()=>from(this.activePrompt.run().then(answer=>({name:question.name,answer:answer}))));}setDefaultType(question){// Default type to input
if(!this.prompts[question.type]){question.type='input';}return defer(()=>of(question));}filterIfRunnable(question){if(question.when===false){return empty();}if(!_.isFunction(question.when)){return of(question);}var answers=this.answers;return defer(()=>from(runAsync(question.when)(answers).then(shouldRun=>{if(shouldRun){return question;}})).pipe(filter(val=>val!=null)));}}var prompt$1=PromptUI;var cliCursor={};var mimicFn;var hasRequiredMimicFn;function requireMimicFn(){if(hasRequiredMimicFn)return mimicFn;hasRequiredMimicFn=1;mimicFn=(to,from)=>{// TODO: use `Reflect.ownKeys()` when targeting Node.js 6
for(const prop of Object.getOwnPropertyNames(from).concat(Object.getOwnPropertySymbols(from))){Object.defineProperty(to,prop,Object.getOwnPropertyDescriptor(from,prop));}return to;};return mimicFn;}var onetime;var hasRequiredOnetime;function requireOnetime(){if(hasRequiredOnetime)return onetime;hasRequiredOnetime=1;const mimicFn=requireMimicFn();onetime=(fn,opts)=>{// TODO: Remove this in v3
if(opts===true){throw new TypeError('The second argument is now an options object');}if(typeof fn!=='function'){throw new TypeError('Expected a function');}opts=opts||{};let ret;let called=false;const fnName=fn.displayName||fn.name||'<anonymous>';const onetime=function(){if(called){if(opts.throw===true){throw new Error("Function `".concat(fnName,"` can only be called once"));}return ret;}called=true;ret=fn.apply(this,arguments);fn=null;return ret;};mimicFn(onetime,fn);return onetime;};return onetime;}var restoreCursor;var hasRequiredRestoreCursor;function requireRestoreCursor(){if(hasRequiredRestoreCursor)return restoreCursor;hasRequiredRestoreCursor=1;const onetime=requireOnetime();const signalExit=signalExitExports;restoreCursor=onetime(()=>{signalExit(()=>{process.stderr.write('\u001b[?25h');},{alwaysLast:true});});return restoreCursor;}var hasRequiredCliCursor;function requireCliCursor(){if(hasRequiredCliCursor)return cliCursor;hasRequiredCliCursor=1;(function(exports){const restoreCursor=requireRestoreCursor();let hidden=false;exports.show=stream=>{const s=stream||process.stderr;if(!s.isTTY){return;}hidden=false;s.write('\u001b[?25h');};exports.hide=stream=>{const s=stream||process.stderr;if(!s.isTTY){return;}restoreCursor();hidden=true;s.write('\u001b[?25l');};exports.toggle=(force,stream)=>{if(force!==undefined){hidden=force;}if(hidden){exports.show(stream);}else{exports.hide(stream);}};})(cliCursor);return cliCursor;}var choice;var hasRequiredChoice;function requireChoice(){if(hasRequiredChoice)return choice;hasRequiredChoice=1;var _=lodashExports;/**
	 * Choice object
	 * Normalize input as choice object
	 * @constructor
	 * @param {Number|String|Object} val  Choice value. If an object is passed, it should contains
	 *                                    at least one of `value` or `name` property
	 */choice=class Choice{constructor(val,answers){// Don't process Choice and Separator object
if(val instanceof Choice||val.type==='separator'){return val;}if(_.isString(val)||_.isNumber(val)){this.name=String(val);this.value=val;this.short=String(val);}else{_.extend(this,val,{name:val.name||val.value,value:'value'in val?val.value:val.name,short:val.short||val.name||val.value});}if(_.isFunction(val.disabled)){this.disabled=val.disabled(answers);}else{this.disabled=val.disabled;}}};return choice;}var choices;var hasRequiredChoices;function requireChoices(){if(hasRequiredChoices)return choices;hasRequiredChoices=1;var assert=require$$1__default$1.default;var _=lodashExports;var Separator=separator;var Choice=requireChoice();/**
	 * Choices collection
	 * Collection of multiple `choice` object
	 * @constructor
	 * @param {Array} choices  All `choice` to keep in the collection
	 */choices=class Choices{constructor(choices,answers){this.choices=choices.map(val=>{if(val.type==='separator'){if(!(val instanceof Separator)){val=new Separator(val.line);}return val;}return new Choice(val,answers);});this.realChoices=this.choices.filter(Separator.exclude).filter(item=>!item.disabled);Object.defineProperty(this,'length',{get(){return this.choices.length;},set(val){this.choices.length=val;}});Object.defineProperty(this,'realLength',{get(){return this.realChoices.length;},set(){throw new Error('Cannot set `realLength` of a Choices collection');}});}/**
	   * Get a valid choice from the collection
	   * @param  {Number} selector  The selected choice index
	   * @return {Choice|Undefined} Return the matched choice or undefined
	   */getChoice(selector){assert(_.isNumber(selector));return this.realChoices[selector];}/**
	   * Get a raw element from the collection
	   * @param  {Number} selector  The selected index value
	   * @return {Choice|Undefined} Return the matched choice or undefined
	   */get(selector){assert(_.isNumber(selector));return this.choices[selector];}/**
	   * Match the valid choices against a where clause
	   * @param  {Object} whereClause Lodash `where` clause
	   * @return {Array}              Matching choices or empty array
	   */where(whereClause){return _.filter(this.realChoices,whereClause);}/**
	   * Pluck a particular key from the choices
	   * @param  {String} propertyName Property name to select
	   * @return {Array}               Selected properties
	   */pluck(propertyName){return _.map(this.realChoices,propertyName);}// Expose usual Array methods
indexOf(){return this.choices.indexOf.apply(this.choices,arguments);}forEach(){return this.choices.forEach.apply(this.choices,arguments);}filter(){return this.choices.filter.apply(this.choices,arguments);}find(func){return _.find(this.choices,func);}push(){var objs=_.map(arguments,val=>new Choice(val));this.choices.push.apply(this.choices,objs);this.realChoices=this.choices.filter(Separator.exclude);return this.choices;}};return choices;}var cliWidth={exports:{}};var hasRequiredCliWidth;function requireCliWidth(){if(hasRequiredCliWidth)return cliWidth.exports;hasRequiredCliWidth=1;(function(module,exports){module.exports=cliWidth;function normalizeOpts(options){var defaultOpts={defaultWidth:0,output:process.stdout,tty:require$$0__default$9.default};if(!options){return defaultOpts;}Object.keys(defaultOpts).forEach(function(key){if(!options[key]){options[key]=defaultOpts[key];}});return options;}function cliWidth(options){var opts=normalizeOpts(options);if(opts.output.getWindowSize){return opts.output.getWindowSize()[0]||opts.defaultWidth;}if(opts.tty.getWindowSize){return opts.tty.getWindowSize()[1]||opts.defaultWidth;}if(opts.output.columns){return opts.output.columns;}if(process.env.CLI_WIDTH){var width=parseInt(process.env.CLI_WIDTH,10);if(!isNaN(width)&&width!==0){return width;}}return opts.defaultWidth;}})(cliWidth);return cliWidth.exports;}var stripAnsi$1={exports:{}};var ansiRegex$1;var hasRequiredAnsiRegex$1;function requireAnsiRegex$1(){if(hasRequiredAnsiRegex$1)return ansiRegex$1;hasRequiredAnsiRegex$1=1;ansiRegex$1=options=>{options=Object.assign({onlyFirst:false},options);const pattern=['[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)','(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'].join('|');return new RegExp(pattern,options.onlyFirst?undefined:'g');};return ansiRegex$1;}var hasRequiredStripAnsi$1;function requireStripAnsi$1(){if(hasRequiredStripAnsi$1)return stripAnsi$1.exports;hasRequiredStripAnsi$1=1;const ansiRegex=requireAnsiRegex$1();const stripAnsi=string=>typeof string==='string'?string.replace(ansiRegex(),''):string;stripAnsi$1.exports=stripAnsi;stripAnsi$1.exports.default=stripAnsi;return stripAnsi$1.exports;}var ansiRegex;var hasRequiredAnsiRegex;function requireAnsiRegex(){if(hasRequiredAnsiRegex)return ansiRegex;hasRequiredAnsiRegex=1;ansiRegex=()=>{const pattern=['[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[a-zA-Z\\d]*)*)?\\u0007)','(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))'].join('|');return new RegExp(pattern,'g');};return ansiRegex;}var stripAnsi;var hasRequiredStripAnsi;function requireStripAnsi(){if(hasRequiredStripAnsi)return stripAnsi;hasRequiredStripAnsi=1;const ansiRegex=requireAnsiRegex();stripAnsi=input=>typeof input==='string'?input.replace(ansiRegex(),''):input;return stripAnsi;}var isFullwidthCodePoint;var hasRequiredIsFullwidthCodePoint;function requireIsFullwidthCodePoint(){if(hasRequiredIsFullwidthCodePoint)return isFullwidthCodePoint;hasRequiredIsFullwidthCodePoint=1;/* eslint-disable yoda */isFullwidthCodePoint=x=>{if(Number.isNaN(x)){return false;}// code points are derived from:
// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt
if(x>=0x1100&&(x<=0x115f||// Hangul Jamo
x===0x2329||// LEFT-POINTING ANGLE BRACKET
x===0x232a||// RIGHT-POINTING ANGLE BRACKET
// CJK Radicals Supplement .. Enclosed CJK Letters and Months
0x2e80<=x&&x<=0x3247&&x!==0x303f||// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
0x3250<=x&&x<=0x4dbf||// CJK Unified Ideographs .. Yi Radicals
0x4e00<=x&&x<=0xa4c6||// Hangul Jamo Extended-A
0xa960<=x&&x<=0xa97c||// Hangul Syllables
0xac00<=x&&x<=0xd7a3||// CJK Compatibility Ideographs
0xf900<=x&&x<=0xfaff||// Vertical Forms
0xfe10<=x&&x<=0xfe19||// CJK Compatibility Forms .. Small Form Variants
0xfe30<=x&&x<=0xfe6b||// Halfwidth and Fullwidth Forms
0xff01<=x&&x<=0xff60||0xffe0<=x&&x<=0xffe6||// Kana Supplement
0x1b000<=x&&x<=0x1b001||// Enclosed Ideographic Supplement
0x1f200<=x&&x<=0x1f251||// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
0x20000<=x&&x<=0x3fffd)){return true;}return false;};return isFullwidthCodePoint;}var stringWidth;var hasRequiredStringWidth;function requireStringWidth(){if(hasRequiredStringWidth)return stringWidth;hasRequiredStringWidth=1;const stripAnsi=requireStripAnsi();const isFullwidthCodePoint=requireIsFullwidthCodePoint();stringWidth=str=>{if(typeof str!=='string'||str.length===0){return 0;}str=stripAnsi(str);let width=0;for(let i=0;i<str.length;i++){const code=str.codePointAt(i);// Ignore control characters
if(code<=0x1F||code>=0x7F&&code<=0x9F){continue;}// Ignore combining characters
if(code>=0x300&&code<=0x36F){continue;}// Surrogates
if(code>0xFFFF){i++;}width+=isFullwidthCodePoint(code)?2:1;}return width;};return stringWidth;}var screenManager;var hasRequiredScreenManager;function requireScreenManager(){if(hasRequiredScreenManager)return screenManager;hasRequiredScreenManager=1;var _=lodashExports;var util=readline;var cliWidth=requireCliWidth();var stripAnsi=requireStripAnsi$1();var stringWidth=requireStringWidth();function height(content){return content.split('\n').length;}function lastLine(content){return _.last(content.split('\n'));}class ScreenManager{constructor(rl){// These variables are keeping information to allow correct prompt re-rendering
this.height=0;this.extraLinesUnderPrompt=0;this.rl=rl;}render(content,bottomContent){this.rl.output.unmute();this.clean(this.extraLinesUnderPrompt);/**
	     * Write message to screen and setPrompt to control backspace
	     */var promptLine=lastLine(content);var rawPromptLine=stripAnsi(promptLine);// Remove the rl.line from our prompt. We can't rely on the content of
// rl.line (mainly because of the password prompt), so just rely on it's
// length.
var prompt=rawPromptLine;if(this.rl.line.length){prompt=prompt.slice(0,-this.rl.line.length);}this.rl.setPrompt(prompt);// SetPrompt will change cursor position, now we can get correct value
var cursorPos=this.rl._getCursorPos();var width=this.normalizedCliWidth();content=this.forceLineReturn(content,width);if(bottomContent){bottomContent=this.forceLineReturn(bottomContent,width);}// Manually insert an extra line if we're at the end of the line.
// This prevent the cursor from appearing at the beginning of the
// current line.
if(rawPromptLine.length%width===0){content+='\n';}var fullContent=content+(bottomContent?'\n'+bottomContent:'');this.rl.output.write(fullContent);/**
	     * Re-adjust the cursor at the correct position.
	     */ // We need to consider parts of the prompt under the cursor as part of the bottom
// content in order to correctly cleanup and re-render.
var promptLineUpDiff=Math.floor(rawPromptLine.length/width)-cursorPos.rows;var bottomContentHeight=promptLineUpDiff+(bottomContent?height(bottomContent):0);if(bottomContentHeight>0){util.up(this.rl,bottomContentHeight);}// Reset cursor at the beginning of the line
util.left(this.rl,stringWidth(lastLine(fullContent)));// Adjust cursor on the right
if(cursorPos.cols>0){util.right(this.rl,cursorPos.cols);}/**
	     * Set up state for next re-rendering
	     */this.extraLinesUnderPrompt=bottomContentHeight;this.height=height(fullContent);this.rl.output.mute();}clean(extraLines){if(extraLines>0){util.down(this.rl,extraLines);}util.clearLine(this.rl,this.height);}done(){this.rl.setPrompt('');this.rl.output.unmute();this.rl.output.write('\n');}releaseCursor(){if(this.extraLinesUnderPrompt>0){util.down(this.rl,this.extraLinesUnderPrompt);}}normalizedCliWidth(){var width=cliWidth({defaultWidth:80,output:this.rl.output});return width;}breakLines(lines,width){// Break lines who're longer than the cli width so we can normalize the natural line
// returns behavior across terminals.
width=width||this.normalizedCliWidth();var regex=new RegExp('(?:(?:\\033[[0-9;]*m)*.?){1,'+width+'}','g');return lines.map(line=>{var chunk=line.match(regex);// Last match is always empty
chunk.pop();return chunk||'';});}forceLineReturn(content,width){width=width||this.normalizedCliWidth();return _.flatten(this.breakLines(content.split('\n'),width)).join('\n');}}screenManager=ScreenManager;return screenManager;}var base;var hasRequiredBase;function requireBase(){if(hasRequiredBase)return base;hasRequiredBase=1;/**
	 * Base prompt implementation
	 * Should be extended by prompt types.
	 */var _=lodashExports;var chalk=chalk__default.default;var runAsync=runAsyncExports;var{filter,flatMap,share,take,takeUntil}=require$$1$1;var Choices=requireChoices();var ScreenManager=requireScreenManager();class Prompt{constructor(question,rl,answers){// Setup instance defaults property
_.assign(this,{answers:answers,status:'pending'});// Set defaults prompt options
this.opt=_.defaults(_.clone(question),{validate:()=>true,filter:val=>val,when:()=>true,suffix:'',prefix:chalk.green('?')});// Make sure name is present
if(!this.opt.name){this.throwParamError('name');}// Set default message if no message defined
if(!this.opt.message){this.opt.message=this.opt.name+':';}// Normalize choices
if(Array.isArray(this.opt.choices)){this.opt.choices=new Choices(this.opt.choices,answers);}this.rl=rl;this.screen=new ScreenManager(this.rl);}/**
	   * Start the Inquiry session and manage output value filtering
	   * @return {Promise}
	   */run(){return new Promise(resolve=>{this._run(value=>resolve(value));});}// Default noop (this one should be overwritten in prompts)
_run(cb){cb();}/**
	   * Throw an error telling a required parameter is missing
	   * @param  {String} name Name of the missing param
	   * @return {Throw Error}
	   */throwParamError(name){throw new Error('You must provide a `'+name+'` parameter');}/**
	   * Called when the UI closes. Override to do any specific cleanup necessary
	   */close(){this.screen.releaseCursor();}/**
	   * Run the provided validation method each time a submit event occur.
	   * @param  {Rx.Observable} submit - submit event flow
	   * @return {Object}        Object containing two observables: `success` and `error`
	   */handleSubmitEvents(submit){var self=this;var validate=runAsync(this.opt.validate);var asyncFilter=runAsync(this.opt.filter);var validation=submit.pipe(flatMap(value=>asyncFilter(value,self.answers).then(filteredValue=>validate(filteredValue,self.answers).then(isValid=>({isValid:isValid,value:filteredValue}),err=>({isValid:err})),err=>({isValid:err}))),share());var success=validation.pipe(filter(state=>state.isValid===true),take(1));var error=validation.pipe(filter(state=>state.isValid!==true),takeUntil(success));return{success:success,error:error};}/**
	   * Generate the prompt question string
	   * @return {String} prompt question string
	   */getQuestion(){var message=this.opt.prefix+' '+chalk.bold(this.opt.message)+this.opt.suffix+chalk.reset(' ');// Append the default if available, and if question isn't answered
if(this.opt.default!=null&&this.status!=='answered'){// If default password is supplied, hide it
if(this.opt.type==='password'){message+=chalk.italic.dim('[hidden] ');}else{message+=chalk.dim('('+this.opt.default+') ');}}return message;}}base=Prompt;return base;}var events;var hasRequiredEvents;function requireEvents(){if(hasRequiredEvents)return events;hasRequiredEvents=1;var{fromEvent}=require$$4$1;var{filter,map,share}=require$$1$1;function normalizeKeypressEvents(value,key){return{value:value,key:key||{}};}events=function(rl){var keypress=fromEvent(rl.input,'keypress',normalizeKeypressEvents)// Ignore `enter` key. On the readline, we only care about the `line` event.
.pipe(filter(_ref130=>{let{key}=_ref130;return key.name!=='enter'&&key.name!=='return';}));return{line:fromEvent(rl,'line'),keypress:keypress,normalizedUpKey:keypress.pipe(filter(_ref131=>{let{key}=_ref131;return key.name==='up'||key.name==='k'||key.name==='p'&&key.ctrl;}),share()),normalizedDownKey:keypress.pipe(filter(_ref132=>{let{key}=_ref132;return key.name==='down'||key.name==='j'||key.name==='n'&&key.ctrl;}),share()),numberKey:keypress.pipe(filter(e=>e.value&&'123456789'.indexOf(e.value)>=0),map(e=>Number(e.value)),share()),spaceKey:keypress.pipe(filter(_ref133=>{let{key}=_ref133;return key&&key.name==='space';}),share()),aKey:keypress.pipe(filter(_ref134=>{let{key}=_ref134;return key&&key.name==='a';}),share()),iKey:keypress.pipe(filter(_ref135=>{let{key}=_ref135;return key&&key.name==='i';}),share())};};return events;}var paginator;var hasRequiredPaginator;function requirePaginator(){if(hasRequiredPaginator)return paginator;hasRequiredPaginator=1;var _=lodashExports;var chalk=chalk__default.default;/**
	 * The paginator keeps track of a pointer index in a list and returns
	 * a subset of the choices if the list is too long.
	 */class Paginator{constructor(screen){this.pointer=0;this.lastIndex=0;this.screen=screen;}paginate(output,active,pageSize){pageSize=pageSize||7;var middleOfList=Math.floor(pageSize/2);var lines=output.split('\n');if(this.screen){lines=this.screen.breakLines(lines);active=_.sum(lines.map(lineParts=>lineParts.length).splice(0,active));lines=_.flatten(lines);}// Make sure there's enough lines to paginate
if(lines.length<=pageSize){return output;}// Move the pointer only when the user go down and limit it to the middle of the list
if(this.pointer<middleOfList&&this.lastIndex<active&&active-this.lastIndex<pageSize){this.pointer=Math.min(middleOfList,this.pointer+active-this.lastIndex);}this.lastIndex=active;// Duplicate the lines so it give an infinite list look
var infinite=_.flatten([lines,lines,lines]);var topIndex=Math.max(0,active+lines.length-this.pointer);var section=infinite.splice(topIndex,pageSize).join('\n');return section+'\n'+chalk.dim('(Move up and down to reveal more choices)');}}paginator=Paginator;return paginator;}var list;var hasRequiredList;function requireList(){if(hasRequiredList)return list;hasRequiredList=1;/**
	 * `list` type prompt
	 */var _=lodashExports;var chalk=chalk__default.default;var figures=figures_1;var cliCursor=requireCliCursor();var runAsync=runAsyncExports;var{flatMap,map,take,takeUntil}=require$$1$1;var Base=requireBase();var observe=requireEvents();var Paginator=requirePaginator();class ListPrompt extends Base{constructor(questions,rl,answers){super(questions,rl,answers);if(!this.opt.choices){this.throwParamError('choices');}this.firstRender=true;this.selected=0;var def=this.opt.default;// If def is a Number, then use as index. Otherwise, check for value.
if(_.isNumber(def)&&def>=0&&def<this.opt.choices.realLength){this.selected=def;}else if(!_.isNumber(def)&&def!=null){let index=_.findIndex(this.opt.choices.realChoices,_ref136=>{let{value}=_ref136;return value===def;});this.selected=Math.max(index,0);}// Make sure no default is set (so it won't be printed)
this.opt.default=null;this.paginator=new Paginator(this.screen);}/**
	   * Start the Inquiry session
	   * @param  {Function} cb      Callback when prompt is done
	   * @return {this}
	   */_run(cb){this.done=cb;var self=this;var events=observe(this.rl);events.normalizedUpKey.pipe(takeUntil(events.line)).forEach(this.onUpKey.bind(this));events.normalizedDownKey.pipe(takeUntil(events.line)).forEach(this.onDownKey.bind(this));events.numberKey.pipe(takeUntil(events.line)).forEach(this.onNumberKey.bind(this));events.line.pipe(take(1),map(this.getCurrentValue.bind(this)),flatMap(value=>runAsync(self.opt.filter)(value).catch(err=>err))).forEach(this.onSubmit.bind(this));// Init the prompt
cliCursor.hide();this.render();return this;}/**
	   * Render the prompt to screen
	   * @return {ListPrompt} self
	   */render(){// Render question
var message=this.getQuestion();if(this.firstRender){message+=chalk.dim('(Use arrow keys)');}// Render choices or answer depending on the state
if(this.status==='answered'){message+=chalk.cyan(this.opt.choices.getChoice(this.selected).short);}else{var choicesStr=listRender(this.opt.choices,this.selected);var indexPosition=this.opt.choices.indexOf(this.opt.choices.getChoice(this.selected));message+='\n'+this.paginator.paginate(choicesStr,indexPosition,this.opt.pageSize);}this.firstRender=false;this.screen.render(message);}/**
	   * When user press `enter` key
	   */onSubmit(value){this.status='answered';// Rerender prompt
this.render();this.screen.done();cliCursor.show();this.done(value);}getCurrentValue(){return this.opt.choices.getChoice(this.selected).value;}/**
	   * When user press a key
	   */onUpKey(){var len=this.opt.choices.realLength;this.selected=this.selected>0?this.selected-1:len-1;this.render();}onDownKey(){var len=this.opt.choices.realLength;this.selected=this.selected<len-1?this.selected+1:0;this.render();}onNumberKey(input){if(input<=this.opt.choices.realLength){this.selected=input-1;}this.render();}}/**
	 * Function for rendering list choices
	 * @param  {Number} pointer Position of the pointer
	 * @return {String}         Rendered content
	 */function listRender(choices,pointer){var output='';var separatorOffset=0;choices.forEach((choice,i)=>{if(choice.type==='separator'){separatorOffset++;output+='  '+choice+'\n';return;}if(choice.disabled){separatorOffset++;output+='  - '+choice.name;output+=' ('+(_.isString(choice.disabled)?choice.disabled:'Disabled')+')';output+='\n';return;}var isSelected=i-separatorOffset===pointer;var line=(isSelected?figures.pointer+' ':'  ')+choice.name;if(isSelected){line=chalk.cyan(line);}output+=line+' \n';});return output.replace(/\n$/,'');}list=ListPrompt;return list;}var input;var hasRequiredInput;function requireInput(){if(hasRequiredInput)return input;hasRequiredInput=1;/**
	 * `input` type prompt
	 */var chalk=chalk__default.default;var{map,takeUntil}=require$$1$1;var Base=requireBase();var observe=requireEvents();class InputPrompt extends Base{/**
	   * Start the Inquiry session
	   * @param  {Function} cb      Callback when prompt is done
	   * @return {this}
	   */_run(cb){this.done=cb;// Once user confirm (enter key)
var events=observe(this.rl);var submit=events.line.pipe(map(this.filterInput.bind(this)));var validation=this.handleSubmitEvents(submit);validation.success.forEach(this.onEnd.bind(this));validation.error.forEach(this.onError.bind(this));events.keypress.pipe(takeUntil(validation.success)).forEach(this.onKeypress.bind(this));// Init
this.render();return this;}/**
	   * Render the prompt to screen
	   * @return {InputPrompt} self
	   */render(error){var bottomContent='';var appendContent='';var message=this.getQuestion();var transformer=this.opt.transformer;var isFinal=this.status==='answered';if(isFinal){appendContent=this.answer;}else{appendContent=this.rl.line;}if(transformer){message+=transformer(appendContent,this.answers,{isFinal});}else{message+=isFinal?chalk.cyan(appendContent):appendContent;}if(error){bottomContent=chalk.red('>> ')+error;}this.screen.render(message,bottomContent);}/**
	   * When user press `enter` key
	   */filterInput(input){if(!input){return this.opt.default==null?'':this.opt.default;}return input;}onEnd(state){this.answer=state.value;this.status='answered';// Re-render prompt
this.render();this.screen.done();this.done(state.value);}onError(state){this.rl.line+=state.value;this.rl.cursor+=state.value.length;this.render(state.isValid);}/**
	   * When user press a key
	   */onKeypress(){// If user press a key, just clear the default value
if(this.opt.default){this.opt.default=undefined;}this.render();}}input=InputPrompt;return input;}var number;var hasRequiredNumber;function requireNumber(){if(hasRequiredNumber)return number;hasRequiredNumber=1;/**
	 * `input` type prompt
	 */var Input=requireInput();/**
	 * Extention of the Input prompt specifically for use with number inputs.
	 */class NumberPrompt extends Input{filterInput(input){if(input&&typeof input==='string'){input=input.trim();// Match a number in the input
let numberMatch=input.match(/(^-?\d+|^\d+\.\d*|^\d*\.\d+)(e\d+)?$/);// If a number is found, return that input.
if(numberMatch){return Number(numberMatch[0]);}}// If the input was invalid return the default value.
return this.opt.default==null?NaN:this.opt.default;}}number=NumberPrompt;return number;}var confirm;var hasRequiredConfirm;function requireConfirm(){if(hasRequiredConfirm)return confirm;hasRequiredConfirm=1;/**
	 * `confirm` type prompt
	 */var _=lodashExports;var chalk=chalk__default.default;var{take,takeUntil}=require$$1$1;var Base=requireBase();var observe=requireEvents();class ConfirmPrompt extends Base{constructor(questions,rl,answers){super(questions,rl,answers);var rawDefault=true;_.extend(this.opt,{filter:function(input){var value=rawDefault;if(input!=null&&input!==''){value=/^y(es)?/i.test(input);}return value;}});if(_.isBoolean(this.opt.default)){rawDefault=this.opt.default;}this.opt.default=rawDefault?'Y/n':'y/N';return this;}/**
	   * Start the Inquiry session
	   * @param  {Function} cb   Callback when prompt is done
	   * @return {this}
	   */_run(cb){this.done=cb;// Once user confirm (enter key)
var events=observe(this.rl);events.keypress.pipe(takeUntil(events.line)).forEach(this.onKeypress.bind(this));events.line.pipe(take(1)).forEach(this.onEnd.bind(this));// Init
this.render();return this;}/**
	   * Render the prompt to screen
	   * @return {ConfirmPrompt} self
	   */render(answer){var message=this.getQuestion();if(typeof answer==='boolean'){message+=chalk.cyan(answer?'Yes':'No');}else{message+=this.rl.line;}this.screen.render(message);return this;}/**
	   * When user press `enter` key
	   */onEnd(input){this.status='answered';var output=this.opt.filter(input);this.render(output);this.screen.done();this.done(output);}/**
	   * When user press a key
	   */onKeypress(){this.render();}}confirm=ConfirmPrompt;return confirm;}var rawlist;var hasRequiredRawlist;function requireRawlist(){if(hasRequiredRawlist)return rawlist;hasRequiredRawlist=1;/**
	 * `rawlist` type prompt
	 */var _=lodashExports;var chalk=chalk__default.default;var{map,takeUntil}=require$$1$1;var Base=requireBase();var Separator=separator;var observe=requireEvents();var Paginator=requirePaginator();class RawListPrompt extends Base{constructor(questions,rl,answers){super(questions,rl,answers);if(!this.opt.choices){this.throwParamError('choices');}this.opt.validChoices=this.opt.choices.filter(Separator.exclude);this.selected=0;this.rawDefault=0;_.extend(this.opt,{validate:function(val){return val!=null;}});var def=this.opt.default;if(_.isNumber(def)&&def>=0&&def<this.opt.choices.realLength){this.selected=def;this.rawDefault=def;}else if(!_.isNumber(def)&&def!=null){let index=_.findIndex(this.opt.choices.realChoices,_ref137=>{let{value}=_ref137;return value===def;});let safeIndex=Math.max(index,0);this.selected=safeIndex;this.rawDefault=safeIndex;}// Make sure no default is set (so it won't be printed)
this.opt.default=null;this.paginator=new Paginator();}/**
	   * Start the Inquiry session
	   * @param  {Function} cb      Callback when prompt is done
	   * @return {this}
	   */_run(cb){this.done=cb;// Once user confirm (enter key)
var events=observe(this.rl);var submit=events.line.pipe(map(this.getCurrentValue.bind(this)));var validation=this.handleSubmitEvents(submit);validation.success.forEach(this.onEnd.bind(this));validation.error.forEach(this.onError.bind(this));events.keypress.pipe(takeUntil(validation.success)).forEach(this.onKeypress.bind(this));events.normalizedUpKey.pipe(takeUntil(events.line)).forEach(this.onUpKey.bind(this));events.normalizedDownKey.pipe(takeUntil(events.line)).forEach(this.onDownKey.bind(this));// Init the prompt
this.render();return this;}/**
	   * Render the prompt to screen
	   * @return {RawListPrompt} self
	   */render(error){// Render question
var message=this.getQuestion();var bottomContent='';if(this.status==='answered'){message+=chalk.cyan(this.answer);}else{var choicesStr=renderChoices(this.opt.choices,this.selected);message+='\n'+this.paginator.paginate(choicesStr,this.selected,this.opt.pageSize);message+='\n  Answer: ';}message+=this.rl.line;if(error){bottomContent='\n'+chalk.red('>> ')+error;}this.screen.render(message,bottomContent);}/**
	   * When user press `enter` key
	   */getCurrentValue(index){if(index==null||index===''){index=this.rawDefault;}else{index-=1;}var choice=this.opt.choices.getChoice(index);return choice?choice.value:null;}onEnd(state){this.status='answered';this.answer=state.value;// Re-render prompt
this.render();this.screen.done();this.done(state.value);}onError(){this.render('Please enter a valid index');}/**
	   * When user press a key
	   */onKeypress(){var index=this.rl.line.length?Number(this.rl.line)-1:0;if(this.opt.choices.getChoice(index)){this.selected=index;}else{this.selected=undefined;}this.render();}/**
	   * When user press up key
	   */onUpKey(){this.onArrowKey('up');}/**
	   * When user press down key
	   */onDownKey(){this.onArrowKey('down');}/**
	   * When user press up or down key
	   * @param {String} type Arrow type: up or down
	   */onArrowKey(type){var index=this.rl.line.length?Number(this.rl.line)-1:0;if(type==='up')index=index===0?this.opt.choices.length-1:index-1;else index=index===this.opt.choices.length-1?0:index+1;this.rl.line=String(index+1);this.onKeypress();}}/**
	 * Function for rendering list choices
	 * @param  {Number} pointer Position of the pointer
	 * @return {String}         Rendered content
	 */function renderChoices(choices,pointer){var output='';var separatorOffset=0;choices.forEach(function(choice,i){output+='\n  ';if(choice.type==='separator'){separatorOffset++;output+=' '+choice;return;}var index=i-separatorOffset;var display=index+1+') '+choice.name;if(index===pointer){display=chalk.cyan(display);}output+=display;});return output;}rawlist=RawListPrompt;return rawlist;}var expand;var hasRequiredExpand;function requireExpand(){if(hasRequiredExpand)return expand;hasRequiredExpand=1;/**
	 * `rawlist` type prompt
	 */var _=lodashExports;var chalk=chalk__default.default;var{map,takeUntil}=require$$1$1;var Base=requireBase();var Separator=separator;var observe=requireEvents();var Paginator=requirePaginator();class ExpandPrompt extends Base{constructor(questions,rl,answers){super(questions,rl,answers);if(!this.opt.choices){this.throwParamError('choices');}this.validateChoices(this.opt.choices);// Add the default `help` (/expand) option
this.opt.choices.push({key:'h',name:'Help, list all options',value:'help'});this.opt.validate=choice=>{if(choice==null){return'Please enter a valid command';}return choice!=='help';};// Setup the default string (capitalize the default key)
this.opt.default=this.generateChoicesString(this.opt.choices,this.opt.default);this.paginator=new Paginator(this.screen);}/**
	   * Start the Inquiry session
	   * @param  {Function} cb      Callback when prompt is done
	   * @return {this}
	   */_run(cb){this.done=cb;// Save user answer and update prompt to show selected option.
var events=observe(this.rl);var validation=this.handleSubmitEvents(events.line.pipe(map(this.getCurrentValue.bind(this))));validation.success.forEach(this.onSubmit.bind(this));validation.error.forEach(this.onError.bind(this));this.keypressObs=events.keypress.pipe(takeUntil(validation.success)).forEach(this.onKeypress.bind(this));// Init the prompt
this.render();return this;}/**
	   * Render the prompt to screen
	   * @return {ExpandPrompt} self
	   */render(error,hint){var message=this.getQuestion();var bottomContent='';if(this.status==='answered'){message+=chalk.cyan(this.answer);}else if(this.status==='expanded'){var choicesStr=renderChoices(this.opt.choices,this.selectedKey);message+=this.paginator.paginate(choicesStr,this.selectedKey,this.opt.pageSize);message+='\n  Answer: ';}message+=this.rl.line;if(error){bottomContent=chalk.red('>> ')+error;}if(hint){bottomContent=chalk.cyan('>> ')+hint;}this.screen.render(message,bottomContent);}getCurrentValue(input){if(!input){input=this.rawDefault;}var selected=this.opt.choices.where({key:input.toLowerCase().trim()})[0];if(!selected){return null;}return selected.value;}/**
	   * Generate the prompt choices string
	   * @return {String}  Choices string
	   */getChoices(){var output='';this.opt.choices.forEach(choice=>{output+='\n  ';if(choice.type==='separator'){output+=' '+choice;return;}var choiceStr=choice.key+') '+choice.name;if(this.selectedKey===choice.key){choiceStr=chalk.cyan(choiceStr);}output+=choiceStr;});return output;}onError(state){if(state.value==='help'){this.selectedKey='';this.status='expanded';this.render();return;}this.render(state.isValid);}/**
	   * When user press `enter` key
	   */onSubmit(state){this.status='answered';var choice=this.opt.choices.where({value:state.value})[0];this.answer=choice.short||choice.name;// Re-render prompt
this.render();this.screen.done();this.done(state.value);}/**
	   * When user press a key
	   */onKeypress(){this.selectedKey=this.rl.line.toLowerCase();var selected=this.opt.choices.where({key:this.selectedKey})[0];if(this.status==='expanded'){this.render();}else{this.render(null,selected?selected.name:null);}}/**
	   * Validate the choices
	   * @param {Array} choices
	   */validateChoices(choices){var formatError;var errors=[];var keymap={};choices.filter(Separator.exclude).forEach(choice=>{if(!choice.key||choice.key.length!==1){formatError=true;}if(keymap[choice.key]){errors.push(choice.key);}keymap[choice.key]=true;choice.key=String(choice.key).toLowerCase();});if(formatError){throw new Error('Format error: `key` param must be a single letter and is required.');}if(keymap.h){throw new Error('Reserved key error: `key` param cannot be `h` - this value is reserved.');}if(errors.length){throw new Error('Duplicate key error: `key` param must be unique. Duplicates: '+_.uniq(errors).join(', '));}}/**
	   * Generate a string out of the choices keys
	   * @param  {Array}  choices
	   * @param  {Number|String} default - the choice index or name to capitalize
	   * @return {String} The rendered choices key string
	   */generateChoicesString(choices,defaultChoice){var defIndex=choices.realLength-1;if(_.isNumber(defaultChoice)&&this.opt.choices.getChoice(defaultChoice)){defIndex=defaultChoice;}else if(_.isString(defaultChoice)){let index=_.findIndex(choices.realChoices,_ref138=>{let{value}=_ref138;return value===defaultChoice;});defIndex=index===-1?defIndex:index;}var defStr=this.opt.choices.pluck('key');this.rawDefault=defStr[defIndex];defStr[defIndex]=String(defStr[defIndex]).toUpperCase();return defStr.join('');}}/**
	 * Function for rendering checkbox choices
	 * @param  {String} pointer Selected key
	 * @return {String}         Rendered content
	 */function renderChoices(choices,pointer){var output='';choices.forEach(choice=>{output+='\n  ';if(choice.type==='separator'){output+=' '+choice;return;}var choiceStr=choice.key+') '+choice.name;if(pointer===choice.key){choiceStr=chalk.cyan(choiceStr);}output+=choiceStr;});return output;}expand=ExpandPrompt;return expand;}var checkbox;var hasRequiredCheckbox;function requireCheckbox(){if(hasRequiredCheckbox)return checkbox;hasRequiredCheckbox=1;/**
	 * `list` type prompt
	 */var _=lodashExports;var chalk=chalk__default.default;var cliCursor=requireCliCursor();var figures=figures_1;var{map,takeUntil}=require$$1$1;var Base=requireBase();var observe=requireEvents();var Paginator=requirePaginator();class CheckboxPrompt extends Base{constructor(questions,rl,answers){super(questions,rl,answers);if(!this.opt.choices){this.throwParamError('choices');}if(_.isArray(this.opt.default)){this.opt.choices.forEach(function(choice){if(this.opt.default.indexOf(choice.value)>=0){choice.checked=true;}},this);}this.pointer=0;// Make sure no default is set (so it won't be printed)
this.opt.default=null;this.paginator=new Paginator(this.screen);}/**
	   * Start the Inquiry session
	   * @param  {Function} cb      Callback when prompt is done
	   * @return {this}
	   */_run(cb){this.done=cb;var events=observe(this.rl);var validation=this.handleSubmitEvents(events.line.pipe(map(this.getCurrentValue.bind(this))));validation.success.forEach(this.onEnd.bind(this));validation.error.forEach(this.onError.bind(this));events.normalizedUpKey.pipe(takeUntil(validation.success)).forEach(this.onUpKey.bind(this));events.normalizedDownKey.pipe(takeUntil(validation.success)).forEach(this.onDownKey.bind(this));events.numberKey.pipe(takeUntil(validation.success)).forEach(this.onNumberKey.bind(this));events.spaceKey.pipe(takeUntil(validation.success)).forEach(this.onSpaceKey.bind(this));events.aKey.pipe(takeUntil(validation.success)).forEach(this.onAllKey.bind(this));events.iKey.pipe(takeUntil(validation.success)).forEach(this.onInverseKey.bind(this));// Init the prompt
cliCursor.hide();this.render();this.firstRender=false;return this;}/**
	   * Render the prompt to screen
	   * @return {CheckboxPrompt} self
	   */render(error){// Render question
var message=this.getQuestion();var bottomContent='';if(!this.spaceKeyPressed){message+='(Press '+chalk.cyan.bold('<space>')+' to select, '+chalk.cyan.bold('<a>')+' to toggle all, '+chalk.cyan.bold('<i>')+' to invert selection)';}// Render choices or answer depending on the state
if(this.status==='answered'){message+=chalk.cyan(this.selection.join(', '));}else{var choicesStr=renderChoices(this.opt.choices,this.pointer);var indexPosition=this.opt.choices.indexOf(this.opt.choices.getChoice(this.pointer));message+='\n'+this.paginator.paginate(choicesStr,indexPosition,this.opt.pageSize);}if(error){bottomContent=chalk.red('>> ')+error;}this.screen.render(message,bottomContent);}/**
	   * When user press `enter` key
	   */onEnd(state){this.status='answered';// Rerender prompt (and clean subline error)
this.render();this.screen.done();cliCursor.show();this.done(state.value);}onError(state){this.render(state.isValid);}getCurrentValue(){var choices=this.opt.choices.filter(function(choice){return Boolean(choice.checked)&&!choice.disabled;});this.selection=_.map(choices,'short');return _.map(choices,'value');}onUpKey(){var len=this.opt.choices.realLength;this.pointer=this.pointer>0?this.pointer-1:len-1;this.render();}onDownKey(){var len=this.opt.choices.realLength;this.pointer=this.pointer<len-1?this.pointer+1:0;this.render();}onNumberKey(input){if(input<=this.opt.choices.realLength){this.pointer=input-1;this.toggleChoice(this.pointer);}this.render();}onSpaceKey(){this.spaceKeyPressed=true;this.toggleChoice(this.pointer);this.render();}onAllKey(){var shouldBeChecked=Boolean(this.opt.choices.find(function(choice){return choice.type!=='separator'&&!choice.checked;}));this.opt.choices.forEach(function(choice){if(choice.type!=='separator'){choice.checked=shouldBeChecked;}});this.render();}onInverseKey(){this.opt.choices.forEach(function(choice){if(choice.type!=='separator'){choice.checked=!choice.checked;}});this.render();}toggleChoice(index){var item=this.opt.choices.getChoice(index);if(item!==undefined){this.opt.choices.getChoice(index).checked=!item.checked;}}}/**
	 * Function for rendering checkbox choices
	 * @param  {Number} pointer Position of the pointer
	 * @return {String}         Rendered content
	 */function renderChoices(choices,pointer){var output='';var separatorOffset=0;choices.forEach(function(choice,i){if(choice.type==='separator'){separatorOffset++;output+=' '+choice+'\n';return;}if(choice.disabled){separatorOffset++;output+=' - '+choice.name;output+=' ('+(_.isString(choice.disabled)?choice.disabled:'Disabled')+')';}else{var line=getCheckbox(choice.checked)+' '+choice.name;if(i-separatorOffset===pointer){output+=chalk.cyan(figures.pointer+line);}else{output+=' '+line;}}output+='\n';});return output.replace(/\n$/,'');}/**
	 * Get the checkbox
	 * @param  {Boolean} checked - add a X or not to the checkbox
	 * @return {String} Composited checkbox string
	 */function getCheckbox(checked){return checked?chalk.green(figures.radioOn):figures.radioOff;}checkbox=CheckboxPrompt;return checkbox;}var password;var hasRequiredPassword;function requirePassword(){if(hasRequiredPassword)return password;hasRequiredPassword=1;/**
	 * `password` type prompt
	 */var chalk=chalk__default.default;var{map,takeUntil}=require$$1$1;var Base=requireBase();var observe=requireEvents();function mask(input,maskChar){input=String(input);maskChar=typeof maskChar==='string'?maskChar:'*';if(input.length===0){return'';}return new Array(input.length+1).join(maskChar);}class PasswordPrompt extends Base{/**
	   * Start the Inquiry session
	   * @param  {Function} cb      Callback when prompt is done
	   * @return {this}
	   */_run(cb){this.done=cb;var events=observe(this.rl);// Once user confirm (enter key)
var submit=events.line.pipe(map(this.filterInput.bind(this)));var validation=this.handleSubmitEvents(submit);validation.success.forEach(this.onEnd.bind(this));validation.error.forEach(this.onError.bind(this));events.keypress.pipe(takeUntil(validation.success)).forEach(this.onKeypress.bind(this));// Init
this.render();return this;}/**
	   * Render the prompt to screen
	   * @return {PasswordPrompt} self
	   */render(error){var message=this.getQuestion();var bottomContent='';if(this.status==='answered'){message+=this.opt.mask?chalk.cyan(mask(this.answer,this.opt.mask)):chalk.italic.dim('[hidden]');}else if(this.opt.mask){message+=mask(this.rl.line||'',this.opt.mask);}else{message+=chalk.italic.dim('[input is hidden] ');}if(error){bottomContent='\n'+chalk.red('>> ')+error;}this.screen.render(message,bottomContent);}/**
	   * When user press `enter` key
	   */filterInput(input){if(!input){return this.opt.default==null?'':this.opt.default;}return input;}onEnd(state){this.status='answered';this.answer=state.value;// Re-render prompt
this.render();this.screen.done();this.done(state.value);}onError(state){this.render(state.isValid);}onKeypress(){// If user press a key, just clear the default value
if(this.opt.default){this.opt.default=undefined;}this.render();}}password=PasswordPrompt;return password;}var main={};var chardet={};var match;var hasRequiredMatch;function requireMatch(){if(hasRequiredMatch)return match;hasRequiredMatch=1;match=function(det,rec,confidence,name,lang){this.confidence=confidence;this.name=name||rec.name(det);this.lang=lang;};return match;}var utf8;var hasRequiredUtf8;function requireUtf8(){if(hasRequiredUtf8)return utf8;hasRequiredUtf8=1;var Match=requireMatch();/**
	 * Charset recognizer for UTF-8
	 */utf8=function(){this.name=function(){return'UTF-8';};this.match=function(det){var hasBOM=false,numValid=0,numInvalid=0,input=det.fRawInput,trailBytes=0,confidence;if(det.fRawLength>=3&&(input[0]&0xff)==0xef&&(input[1]&0xff)==0xbb&&(input[2]&0xff)==0xbf){hasBOM=true;}// Scan for multi-byte sequences
for(var i=0;i<det.fRawLength;i++){var b=input[i];if((b&0x80)==0)continue;// ASCII
// Hi bit on char found.  Figure out how long the sequence should be
if((b&0x0e0)==0x0c0){trailBytes=1;}else if((b&0x0f0)==0x0e0){trailBytes=2;}else if((b&0x0f8)==0xf0){trailBytes=3;}else{numInvalid++;if(numInvalid>5)break;trailBytes=0;}// Verify that we've got the right number of trail bytes in the sequence
for(;;){i++;if(i>=det.fRawLength)break;if((input[i]&0xc0)!=0x080){numInvalid++;break;}if(--trailBytes==0){numValid++;break;}}}// Cook up some sort of confidence score, based on presense of a BOM
//    and the existence of valid and/or invalid multi-byte sequences.
confidence=0;if(hasBOM&&numInvalid==0)confidence=100;else if(hasBOM&&numValid>numInvalid*10)confidence=80;else if(numValid>3&&numInvalid==0)confidence=100;else if(numValid>0&&numInvalid==0)confidence=80;else if(numValid==0&&numInvalid==0)// Plain ASCII.
confidence=10;else if(numValid>numInvalid*10)// Probably corruput utf-8 data.  Valid sequences aren't likely by chance.
confidence=25;else return null;return new Match(det,this,confidence);};};return utf8;}var unicode={exports:{}};var hasRequiredUnicode;function requireUnicode(){if(hasRequiredUnicode)return unicode.exports;hasRequiredUnicode=1;(function(module){var util=require$$0__default$5.default,Match=requireMatch();/**
		 * This class matches UTF-16 and UTF-32, both big- and little-endian. The
		 * BOM will be used if it is present.
		 */module.exports.UTF_16BE=function(){this.name=function(){return'UTF-16BE';};this.match=function(det){var input=det.fRawInput;if(input.length>=2&&(input[0]&0xff)==0xfe&&(input[1]&0xff)==0xff){return new Match(det,this,100);// confidence = 100
}// TODO: Do some statistics to check for unsigned UTF-16BE
return null;};};module.exports.UTF_16LE=function(){this.name=function(){return'UTF-16LE';};this.match=function(det){var input=det.fRawInput;if(input.length>=2&&(input[0]&0xff)==0xff&&(input[1]&0xff)==0xfe){// LE BOM is present.
if(input.length>=4&&input[2]==0x00&&input[3]==0x00){// It is probably UTF-32 LE, not UTF-16
return null;}return new Match(det,this,100);// confidence = 100
}// TODO: Do some statistics to check for unsigned UTF-16LE
return null;};};function UTF_32(){}UTF_32.prototype.match=function(det){var input=det.fRawInput,limit=det.fRawLength/4*4,numValid=0,numInvalid=0,hasBOM=false,confidence=0;if(limit==0){return null;}if(this.getChar(input,0)==0x0000FEFF){hasBOM=true;}for(var i=0;i<limit;i+=4){var ch=this.getChar(input,i);if(ch<0||ch>=0x10FFFF||ch>=0xD800&&ch<=0xDFFF){numInvalid+=1;}else{numValid+=1;}}// Cook up some sort of confidence score, based on presence of a BOM
//    and the existence of valid and/or invalid multi-byte sequences.
if(hasBOM&&numInvalid==0){confidence=100;}else if(hasBOM&&numValid>numInvalid*10){confidence=80;}else if(numValid>3&&numInvalid==0){confidence=100;}else if(numValid>0&&numInvalid==0){confidence=80;}else if(numValid>numInvalid*10){// Probably corrupt UTF-32BE data.  Valid sequences aren't likely by chance.
confidence=25;}// return confidence == 0 ? null : new CharsetMatch(det, this, confidence);
return confidence==0?null:new Match(det,this,confidence);};module.exports.UTF_32BE=function(){this.name=function(){return'UTF-32BE';};this.getChar=function(input,index){return(input[index+0]&0xff)<<24|(input[index+1]&0xff)<<16|(input[index+2]&0xff)<<8|input[index+3]&0xff;};};util.inherits(module.exports.UTF_32BE,UTF_32);module.exports.UTF_32LE=function(){this.name=function(){return'UTF-32LE';};this.getChar=function(input,index){return(input[index+3]&0xff)<<24|(input[index+2]&0xff)<<16|(input[index+1]&0xff)<<8|input[index+0]&0xff;};};util.inherits(module.exports.UTF_32LE,UTF_32);})(unicode);return unicode.exports;}var mbcs={exports:{}};var hasRequiredMbcs;function requireMbcs(){if(hasRequiredMbcs)return mbcs.exports;hasRequiredMbcs=1;(function(module){var util=require$$0__default$5.default,Match=requireMatch();/**
		 * Binary search implementation (recursive)
		 */function binarySearch(arr,searchValue){function find(arr,searchValue,left,right){if(right<left)return-1;/*
		    int mid = mid = (left + right) / 2;
		    There is a bug in the above line;
		    Joshua Bloch suggests the following replacement:
		    */var mid=Math.floor(left+right>>>1);if(searchValue>arr[mid])return find(arr,searchValue,mid+1,right);if(searchValue<arr[mid])return find(arr,searchValue,left,mid-1);return mid;}return find(arr,searchValue,0,arr.length-1);}// 'Character'  iterated character class.
//    Recognizers for specific mbcs encodings make their 'characters' available
//    by providing a nextChar() function that fills in an instance of iteratedChar
//    with the next char from the input.
//    The returned characters are not converted to Unicode, but remain as the raw
//    bytes (concatenated into an int) from the codepage data.
//
//  For Asian charsets, use the raw input rather than the input that has been
//   stripped of markup.  Detection only considers multi-byte chars, effectively
//   stripping markup anyway, and double byte chars do occur in markup too.
//
function IteratedChar(){this.charValue=0;// 1-4 bytes from the raw input data
this.index=0;this.nextIndex=0;this.error=false;this.done=false;this.reset=function(){this.charValue=0;this.index=-1;this.nextIndex=0;this.error=false;this.done=false;};this.nextByte=function(det){if(this.nextIndex>=det.fRawLength){this.done=true;return-1;}var byteValue=det.fRawInput[this.nextIndex++]&0x00ff;return byteValue;};}/**
		 * Asian double or multi-byte - charsets.
		 * Match is determined mostly by the input data adhering to the
		 * encoding scheme for the charset, and, optionally,
		 * frequency-of-occurence of characters.
		 */function mbcs(){}/**
		 * Test the match of this charset with the input text data
		 *      which is obtained via the CharsetDetector object.
		 *
		 * @param det  The CharsetDetector, which contains the input text
		 *             to be checked for being in this charset.
		 * @return     Two values packed into one int  (Damn java, anyhow)
		 *             bits 0-7:  the match confidence, ranging from 0-100
		 *             bits 8-15: The match reason, an enum-like value.
		 */mbcs.prototype.match=function(det){var doubleByteCharCount=0,commonCharCount=0,badCharCount=0,totalCharCount=0,confidence=0;var iter=new IteratedChar();detectBlock:{for(iter.reset();this.nextChar(iter,det);){totalCharCount++;if(iter.error){badCharCount++;}else{var cv=iter.charValue&0xFFFFFFFF;if(cv<=0xff);else{doubleByteCharCount++;if(this.commonChars!=null){// NOTE: This assumes that there are no 4-byte common chars.
if(binarySearch(this.commonChars,cv)>=0){commonCharCount++;}}}}if(badCharCount>=2&&badCharCount*5>=doubleByteCharCount){// console.log('its here!')
// Bail out early if the byte data is not matching the encoding scheme.
break detectBlock;}}if(doubleByteCharCount<=10&&badCharCount==0){// Not many multi-byte chars.
if(doubleByteCharCount==0&&totalCharCount<10){// There weren't any multibyte sequences, and there was a low density of non-ASCII single bytes.
// We don't have enough data to have any confidence.
// Statistical analysis of single byte non-ASCII charcters would probably help here.
confidence=0;}else{//   ASCII or ISO file?  It's probably not our encoding,
//   but is not incompatible with our encoding, so don't give it a zero.
confidence=10;}break detectBlock;}//
//  No match if there are too many characters that don't fit the encoding scheme.
//    (should we have zero tolerance for these?)
//
if(doubleByteCharCount<20*badCharCount){confidence=0;break detectBlock;}if(this.commonChars==null){// We have no statistics on frequently occuring characters.
//  Assess confidence purely on having a reasonable number of
//  multi-byte characters (the more the better
confidence=30+doubleByteCharCount-20*badCharCount;if(confidence>100){confidence=100;}}else{//
// Frequency of occurence statistics exist.
//
var maxVal=Math.log(parseFloat(doubleByteCharCount)/4);var scaleFactor=90.0/maxVal;confidence=Math.floor(Math.log(commonCharCount+1)*scaleFactor+10);confidence=Math.min(confidence,100);}}// end of detectBlock:
return confidence==0?null:new Match(det,this,confidence);};/**
		 * Get the next character (however many bytes it is) from the input data
		 *    Subclasses for specific charset encodings must implement this function
		 *    to get characters according to the rules of their encoding scheme.
		 *
		 *  This function is not a method of class iteratedChar only because
		 *   that would require a lot of extra derived classes, which is awkward.
		 * @param it  The iteratedChar 'struct' into which the returned char is placed.
		 * @param det The charset detector, which is needed to get at the input byte data
		 *            being iterated over.
		 * @return    True if a character was returned, false at end of input.
		 */mbcs.prototype.nextChar=function(iter,det){};/**
		 * Shift-JIS charset recognizer.
		 */module.exports.sjis=function(){this.name=function(){return'Shift-JIS';};this.language=function(){return'ja';};// TODO:  This set of data comes from the character frequency-
//        of-occurence analysis tool.  The data needs to be moved
//        into a resource and loaded from there.
this.commonChars=[0x8140,0x8141,0x8142,0x8145,0x815b,0x8169,0x816a,0x8175,0x8176,0x82a0,0x82a2,0x82a4,0x82a9,0x82aa,0x82ab,0x82ad,0x82af,0x82b1,0x82b3,0x82b5,0x82b7,0x82bd,0x82be,0x82c1,0x82c4,0x82c5,0x82c6,0x82c8,0x82c9,0x82cc,0x82cd,0x82dc,0x82e0,0x82e7,0x82e8,0x82e9,0x82ea,0x82f0,0x82f1,0x8341,0x8343,0x834e,0x834f,0x8358,0x835e,0x8362,0x8367,0x8375,0x8376,0x8389,0x838a,0x838b,0x838d,0x8393,0x8e96,0x93fa,0x95aa];this.nextChar=function(iter,det){iter.index=iter.nextIndex;iter.error=false;var firstByte;firstByte=iter.charValue=iter.nextByte(det);if(firstByte<0)return false;if(firstByte<=0x7f||firstByte>0xa0&&firstByte<=0xdf)return true;var secondByte=iter.nextByte(det);if(secondByte<0)return false;iter.charValue=firstByte<<8|secondByte;if(!(secondByte>=0x40&&secondByte<=0x7f||secondByte>=0x80&&secondByte<=0xff)){// Illegal second byte value.
iter.error=true;}return true;};};util.inherits(module.exports.sjis,mbcs);/**
		 *   Big5 charset recognizer.
		 */module.exports.big5=function(){this.name=function(){return'Big5';};this.language=function(){return'zh';};// TODO:  This set of data comes from the character frequency-
//        of-occurence analysis tool.  The data needs to be moved
//        into a resource and loaded from there.
this.commonChars=[0xa140,0xa141,0xa142,0xa143,0xa147,0xa149,0xa175,0xa176,0xa440,0xa446,0xa447,0xa448,0xa451,0xa454,0xa457,0xa464,0xa46a,0xa46c,0xa477,0xa4a3,0xa4a4,0xa4a7,0xa4c1,0xa4ce,0xa4d1,0xa4df,0xa4e8,0xa4fd,0xa540,0xa548,0xa558,0xa569,0xa5cd,0xa5e7,0xa657,0xa661,0xa662,0xa668,0xa670,0xa6a8,0xa6b3,0xa6b9,0xa6d3,0xa6db,0xa6e6,0xa6f2,0xa740,0xa751,0xa759,0xa7da,0xa8a3,0xa8a5,0xa8ad,0xa8d1,0xa8d3,0xa8e4,0xa8fc,0xa9c0,0xa9d2,0xa9f3,0xaa6b,0xaaba,0xaabe,0xaacc,0xaafc,0xac47,0xac4f,0xacb0,0xacd2,0xad59,0xaec9,0xafe0,0xb0ea,0xb16f,0xb2b3,0xb2c4,0xb36f,0xb44c,0xb44e,0xb54c,0xb5a5,0xb5bd,0xb5d0,0xb5d8,0xb671,0xb7ed,0xb867,0xb944,0xbad8,0xbb44,0xbba1,0xbdd1,0xc2c4,0xc3b9,0xc440,0xc45f];this.nextChar=function(iter,det){iter.index=iter.nextIndex;iter.error=false;var firstByte=iter.charValue=iter.nextByte(det);if(firstByte<0)return false;// single byte character.
if(firstByte<=0x7f||firstByte==0xff)return true;var secondByte=iter.nextByte(det);if(secondByte<0)return false;iter.charValue=iter.charValue<<8|secondByte;if(secondByte<0x40||secondByte==0x7f||secondByte==0xff)iter.error=true;return true;};};util.inherits(module.exports.big5,mbcs);/**
		 *  EUC charset recognizers.  One abstract class that provides the common function
		 *  for getting the next character according to the EUC encoding scheme,
		 *  and nested derived classes for EUC_KR, EUC_JP, EUC_CN.
		 *
		 *  Get the next character value for EUC based encodings.
		 *  Character 'value' is simply the raw bytes that make up the character
		 *     packed into an int.
		 */function eucNextChar(iter,det){iter.index=iter.nextIndex;iter.error=false;var firstByte=0;var secondByte=0;var thirdByte=0;//int fourthByte = 0;
buildChar:{firstByte=iter.charValue=iter.nextByte(det);if(firstByte<0){// Ran off the end of the input data
iter.done=true;break buildChar;}if(firstByte<=0x8d){// single byte char
break buildChar;}secondByte=iter.nextByte(det);iter.charValue=iter.charValue<<8|secondByte;if(firstByte>=0xA1&&firstByte<=0xfe){// Two byte Char
if(secondByte<0xa1){iter.error=true;}break buildChar;}if(firstByte==0x8e){// Code Set 2.
//   In EUC-JP, total char size is 2 bytes, only one byte of actual char value.
//   In EUC-TW, total char size is 4 bytes, three bytes contribute to char value.
// We don't know which we've got.
// Treat it like EUC-JP.  If the data really was EUC-TW, the following two
//   bytes will look like a well formed 2 byte char.
if(secondByte<0xa1){iter.error=true;}break buildChar;}if(firstByte==0x8f){// Code set 3.
// Three byte total char size, two bytes of actual char value.
thirdByte=iter.nextByte(det);iter.charValue=iter.charValue<<8|thirdByte;if(thirdByte<0xa1){iter.error=true;}}}return iter.done==false;}/**
		 * The charset recognize for EUC-JP.  A singleton instance of this class
		 *    is created and kept by the public CharsetDetector class
		 */module.exports.euc_jp=function(){this.name=function(){return'EUC-JP';};this.language=function(){return'ja';};// TODO:  This set of data comes from the character frequency-
//        of-occurence analysis tool.  The data needs to be moved
//        into a resource and loaded from there.
this.commonChars=[0xa1a1,0xa1a2,0xa1a3,0xa1a6,0xa1bc,0xa1ca,0xa1cb,0xa1d6,0xa1d7,0xa4a2,0xa4a4,0xa4a6,0xa4a8,0xa4aa,0xa4ab,0xa4ac,0xa4ad,0xa4af,0xa4b1,0xa4b3,0xa4b5,0xa4b7,0xa4b9,0xa4bb,0xa4bd,0xa4bf,0xa4c0,0xa4c1,0xa4c3,0xa4c4,0xa4c6,0xa4c7,0xa4c8,0xa4c9,0xa4ca,0xa4cb,0xa4ce,0xa4cf,0xa4d0,0xa4de,0xa4df,0xa4e1,0xa4e2,0xa4e4,0xa4e8,0xa4e9,0xa4ea,0xa4eb,0xa4ec,0xa4ef,0xa4f2,0xa4f3,0xa5a2,0xa5a3,0xa5a4,0xa5a6,0xa5a7,0xa5aa,0xa5ad,0xa5af,0xa5b0,0xa5b3,0xa5b5,0xa5b7,0xa5b8,0xa5b9,0xa5bf,0xa5c3,0xa5c6,0xa5c7,0xa5c8,0xa5c9,0xa5cb,0xa5d0,0xa5d5,0xa5d6,0xa5d7,0xa5de,0xa5e0,0xa5e1,0xa5e5,0xa5e9,0xa5ea,0xa5eb,0xa5ec,0xa5ed,0xa5f3,0xb8a9,0xb9d4,0xbaee,0xbbc8,0xbef0,0xbfb7,0xc4ea,0xc6fc,0xc7bd,0xcab8,0xcaf3,0xcbdc,0xcdd1];this.nextChar=eucNextChar;};util.inherits(module.exports.euc_jp,mbcs);/**
		 * The charset recognize for EUC-KR.  A singleton instance of this class
		 *    is created and kept by the public CharsetDetector class
		 */module.exports.euc_kr=function(){this.name=function(){return'EUC-KR';};this.language=function(){return'ko';};// TODO:  This set of data comes from the character frequency-
//        of-occurence analysis tool.  The data needs to be moved
//        into a resource and loaded from there.
this.commonChars=[0xb0a1,0xb0b3,0xb0c5,0xb0cd,0xb0d4,0xb0e6,0xb0ed,0xb0f8,0xb0fa,0xb0fc,0xb1b8,0xb1b9,0xb1c7,0xb1d7,0xb1e2,0xb3aa,0xb3bb,0xb4c2,0xb4cf,0xb4d9,0xb4eb,0xb5a5,0xb5b5,0xb5bf,0xb5c7,0xb5e9,0xb6f3,0xb7af,0xb7c2,0xb7ce,0xb8a6,0xb8ae,0xb8b6,0xb8b8,0xb8bb,0xb8e9,0xb9ab,0xb9ae,0xb9cc,0xb9ce,0xb9fd,0xbab8,0xbace,0xbad0,0xbaf1,0xbbe7,0xbbf3,0xbbfd,0xbcad,0xbcba,0xbcd2,0xbcf6,0xbdba,0xbdc0,0xbdc3,0xbdc5,0xbec6,0xbec8,0xbedf,0xbeee,0xbef8,0xbefa,0xbfa1,0xbfa9,0xbfc0,0xbfe4,0xbfeb,0xbfec,0xbff8,0xc0a7,0xc0af,0xc0b8,0xc0ba,0xc0bb,0xc0bd,0xc0c7,0xc0cc,0xc0ce,0xc0cf,0xc0d6,0xc0da,0xc0e5,0xc0fb,0xc0fc,0xc1a4,0xc1a6,0xc1b6,0xc1d6,0xc1df,0xc1f6,0xc1f8,0xc4a1,0xc5cd,0xc6ae,0xc7cf,0xc7d1,0xc7d2,0xc7d8,0xc7e5,0xc8ad];this.nextChar=eucNextChar;};util.inherits(module.exports.euc_kr,mbcs);/**
		 *   GB-18030 recognizer. Uses simplified Chinese statistics.
		 */module.exports.gb_18030=function(){this.name=function(){return'GB18030';};this.language=function(){return'zh';};/*
		   *  Get the next character value for EUC based encodings.
		   *  Character 'value' is simply the raw bytes that make up the character
		   *     packed into an int.
		   */this.nextChar=function(iter,det){iter.index=iter.nextIndex;iter.error=false;var firstByte=0;var secondByte=0;var thirdByte=0;var fourthByte=0;buildChar:{firstByte=iter.charValue=iter.nextByte(det);if(firstByte<0){// Ran off the end of the input data
iter.done=true;break buildChar;}if(firstByte<=0x80){// single byte char
break buildChar;}secondByte=iter.nextByte(det);iter.charValue=iter.charValue<<8|secondByte;if(firstByte>=0x81&&firstByte<=0xFE){// Two byte Char
if(secondByte>=0x40&&secondByte<=0x7E||secondByte>=80&&secondByte<=0xFE){break buildChar;}// Four byte char
if(secondByte>=0x30&&secondByte<=0x39){thirdByte=iter.nextByte(det);if(thirdByte>=0x81&&thirdByte<=0xFE){fourthByte=iter.nextByte(det);if(fourthByte>=0x30&&fourthByte<=0x39){iter.charValue=iter.charValue<<16|thirdByte<<8|fourthByte;break buildChar;}}}iter.error=true;break buildChar;}}return iter.done==false;};// TODO:  This set of data comes from the character frequency-
//        of-occurence analysis tool.  The data needs to be moved
//        into a resource and loaded from there.
this.commonChars=[0xa1a1,0xa1a2,0xa1a3,0xa1a4,0xa1b0,0xa1b1,0xa1f1,0xa1f3,0xa3a1,0xa3ac,0xa3ba,0xb1a8,0xb1b8,0xb1be,0xb2bb,0xb3c9,0xb3f6,0xb4f3,0xb5bd,0xb5c4,0xb5e3,0xb6af,0xb6d4,0xb6e0,0xb7a2,0xb7a8,0xb7bd,0xb7d6,0xb7dd,0xb8b4,0xb8df,0xb8f6,0xb9ab,0xb9c9,0xb9d8,0xb9fa,0xb9fd,0xbacd,0xbba7,0xbbd6,0xbbe1,0xbbfa,0xbcbc,0xbcdb,0xbcfe,0xbdcc,0xbecd,0xbedd,0xbfb4,0xbfc6,0xbfc9,0xc0b4,0xc0ed,0xc1cb,0xc2db,0xc3c7,0xc4dc,0xc4ea,0xc5cc,0xc6f7,0xc7f8,0xc8ab,0xc8cb,0xc8d5,0xc8e7,0xc9cf,0xc9fa,0xcab1,0xcab5,0xcac7,0xcad0,0xcad6,0xcaf5,0xcafd,0xccec,0xcdf8,0xceaa,0xcec4,0xced2,0xcee5,0xcfb5,0xcfc2,0xcfd6,0xd0c2,0xd0c5,0xd0d0,0xd0d4,0xd1a7,0xd2aa,0xd2b2,0xd2b5,0xd2bb,0xd2d4,0xd3c3,0xd3d0,0xd3fd,0xd4c2,0xd4da,0xd5e2,0xd6d0];};util.inherits(module.exports.gb_18030,mbcs);})(mbcs);return mbcs.exports;}var sbcs={exports:{}};var hasRequiredSbcs;function requireSbcs(){if(hasRequiredSbcs)return sbcs.exports;hasRequiredSbcs=1;(function(module){var util=require$$0__default$5.default,Match=requireMatch();/**
		 * This class recognizes single-byte encodings. Because the encoding scheme is so
		 * simple, language statistics are used to do the matching.
		 */function NGramParser(theNgramList,theByteMap){var N_GRAM_MASK=0xFFFFFF;this.byteIndex=0;this.ngram=0;this.ngramList=theNgramList;this.byteMap=theByteMap;this.ngramCount=0;this.hitCount=0;/*
		   * Binary search for value in table, which must have exactly 64 entries.
		   */this.search=function(table,value){var index=0;if(table[index+32]<=value)index+=32;if(table[index+16]<=value)index+=16;if(table[index+8]<=value)index+=8;if(table[index+4]<=value)index+=4;if(table[index+2]<=value)index+=2;if(table[index+1]<=value)index+=1;if(table[index]>value)index-=1;if(index<0||table[index]!=value)return-1;return index;};this.lookup=function(thisNgram){this.ngramCount+=1;if(this.search(this.ngramList,thisNgram)>=0){this.hitCount+=1;}};this.addByte=function(b){this.ngram=(this.ngram<<8)+(b&0xFF)&N_GRAM_MASK;this.lookup(this.ngram);};this.nextByte=function(det){if(this.byteIndex>=det.fInputLen)return-1;return det.fInputBytes[this.byteIndex++]&0xFF;};this.parse=function(det,spaceCh){var b,ignoreSpace=false;this.spaceChar=spaceCh;while((b=this.nextByte(det))>=0){var mb=this.byteMap[b];// TODO: 0x20 might not be a space in all character sets...
if(mb!=0){if(!(mb==this.spaceChar&&ignoreSpace)){this.addByte(mb);}ignoreSpace=mb==this.spaceChar;}}// TODO: Is this OK? The buffer could have ended in the middle of a word...
this.addByte(this.spaceChar);var rawPercent=this.hitCount/this.ngramCount;// TODO - This is a bit of a hack to take care of a case
// were we were getting a confidence of 135...
if(rawPercent>0.33)return 98;return Math.floor(rawPercent*300.0);};}function NGramsPlusLang(la,ng){this.fLang=la;this.fNGrams=ng;}function sbcs(){}sbcs.prototype.spaceChar=0x20;sbcs.prototype.ngrams=function(){};sbcs.prototype.byteMap=function(){};sbcs.prototype.match=function(det){var ngrams=this.ngrams();var multiple=Array.isArray(ngrams)&&ngrams[0]instanceof NGramsPlusLang;if(!multiple){var parser=new NGramParser(ngrams,this.byteMap());var confidence=parser.parse(det,this.spaceChar);return confidence<=0?null:new Match(det,this,confidence);}var bestConfidenceSoFar=-1;var lang=null;for(var i=ngrams.length-1;i>=0;i--){var ngl=ngrams[i];var parser=new NGramParser(ngl.fNGrams,this.byteMap());var confidence=parser.parse(det,this.spaceChar);if(confidence>bestConfidenceSoFar){bestConfidenceSoFar=confidence;lang=ngl.fLang;}}var name=this.name(det);return bestConfidenceSoFar<=0?null:new Match(det,this,bestConfidenceSoFar,name,lang);};module.exports.ISO_8859_1=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xAA,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xB5,0x20,0x20,0x20,0x20,0xBA,0x20,0x20,0x20,0x20,0x20,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0x20,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xDF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0x20,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF];};this.ngrams=function(){return[new NGramsPlusLang('da',[0x206166,0x206174,0x206465,0x20656E,0x206572,0x20666F,0x206861,0x206920,0x206D65,0x206F67,0x2070E5,0x207369,0x207374,0x207469,0x207669,0x616620,0x616E20,0x616E64,0x617220,0x617420,0x646520,0x64656E,0x646572,0x646574,0x652073,0x656420,0x656465,0x656E20,0x656E64,0x657220,0x657265,0x657320,0x657420,0x666F72,0x676520,0x67656E,0x676572,0x696765,0x696C20,0x696E67,0x6B6520,0x6B6B65,0x6C6572,0x6C6967,0x6C6C65,0x6D6564,0x6E6465,0x6E6520,0x6E6720,0x6E6765,0x6F6720,0x6F6D20,0x6F7220,0x70E520,0x722064,0x722065,0x722073,0x726520,0x737465,0x742073,0x746520,0x746572,0x74696C,0x766572]),new NGramsPlusLang('de',[0x20616E,0x206175,0x206265,0x206461,0x206465,0x206469,0x206569,0x206765,0x206861,0x20696E,0x206D69,0x207363,0x207365,0x20756E,0x207665,0x20766F,0x207765,0x207A75,0x626572,0x636820,0x636865,0x636874,0x646173,0x64656E,0x646572,0x646965,0x652064,0x652073,0x65696E,0x656974,0x656E20,0x657220,0x657320,0x67656E,0x68656E,0x687420,0x696368,0x696520,0x696E20,0x696E65,0x697420,0x6C6963,0x6C6C65,0x6E2061,0x6E2064,0x6E2073,0x6E6420,0x6E6465,0x6E6520,0x6E6720,0x6E6765,0x6E7465,0x722064,0x726465,0x726569,0x736368,0x737465,0x742064,0x746520,0x74656E,0x746572,0x756E64,0x756E67,0x766572]),new NGramsPlusLang('en',[0x206120,0x20616E,0x206265,0x20636F,0x20666F,0x206861,0x206865,0x20696E,0x206D61,0x206F66,0x207072,0x207265,0x207361,0x207374,0x207468,0x20746F,0x207768,0x616964,0x616C20,0x616E20,0x616E64,0x617320,0x617420,0x617465,0x617469,0x642061,0x642074,0x652061,0x652073,0x652074,0x656420,0x656E74,0x657220,0x657320,0x666F72,0x686174,0x686520,0x686572,0x696420,0x696E20,0x696E67,0x696F6E,0x697320,0x6E2061,0x6E2074,0x6E6420,0x6E6720,0x6E7420,0x6F6620,0x6F6E20,0x6F7220,0x726520,0x727320,0x732061,0x732074,0x736169,0x737420,0x742074,0x746572,0x746861,0x746865,0x74696F,0x746F20,0x747320]),new NGramsPlusLang('es',[0x206120,0x206361,0x20636F,0x206465,0x20656C,0x20656E,0x206573,0x20696E,0x206C61,0x206C6F,0x207061,0x20706F,0x207072,0x207175,0x207265,0x207365,0x20756E,0x207920,0x612063,0x612064,0x612065,0x61206C,0x612070,0x616369,0x61646F,0x616C20,0x617220,0x617320,0x6369F3,0x636F6E,0x646520,0x64656C,0x646F20,0x652064,0x652065,0x65206C,0x656C20,0x656E20,0x656E74,0x657320,0x657374,0x69656E,0x69F36E,0x6C6120,0x6C6F73,0x6E2065,0x6E7465,0x6F2064,0x6F2065,0x6F6E20,0x6F7220,0x6F7320,0x706172,0x717565,0x726120,0x726573,0x732064,0x732065,0x732070,0x736520,0x746520,0x746F20,0x756520,0xF36E20]),new NGramsPlusLang('fr',[0x206175,0x20636F,0x206461,0x206465,0x206475,0x20656E,0x206574,0x206C61,0x206C65,0x207061,0x20706F,0x207072,0x207175,0x207365,0x20736F,0x20756E,0x20E020,0x616E74,0x617469,0x636520,0x636F6E,0x646520,0x646573,0x647520,0x652061,0x652063,0x652064,0x652065,0x65206C,0x652070,0x652073,0x656E20,0x656E74,0x657220,0x657320,0x657420,0x657572,0x696F6E,0x697320,0x697420,0x6C6120,0x6C6520,0x6C6573,0x6D656E,0x6E2064,0x6E6520,0x6E7320,0x6E7420,0x6F6E20,0x6F6E74,0x6F7572,0x717565,0x72206C,0x726520,0x732061,0x732064,0x732065,0x73206C,0x732070,0x742064,0x746520,0x74696F,0x756520,0x757220]),new NGramsPlusLang('it',[0x20616C,0x206368,0x20636F,0x206465,0x206469,0x206520,0x20696C,0x20696E,0x206C61,0x207065,0x207072,0x20756E,0x612063,0x612064,0x612070,0x612073,0x61746F,0x636865,0x636F6E,0x64656C,0x646920,0x652061,0x652063,0x652064,0x652069,0x65206C,0x652070,0x652073,0x656C20,0x656C6C,0x656E74,0x657220,0x686520,0x692061,0x692063,0x692064,0x692073,0x696120,0x696C20,0x696E20,0x696F6E,0x6C6120,0x6C6520,0x6C6920,0x6C6C61,0x6E6520,0x6E6920,0x6E6F20,0x6E7465,0x6F2061,0x6F2064,0x6F2069,0x6F2073,0x6F6E20,0x6F6E65,0x706572,0x726120,0x726520,0x736920,0x746120,0x746520,0x746920,0x746F20,0x7A696F]),new NGramsPlusLang('nl',[0x20616C,0x206265,0x206461,0x206465,0x206469,0x206565,0x20656E,0x206765,0x206865,0x20696E,0x206D61,0x206D65,0x206F70,0x207465,0x207661,0x207665,0x20766F,0x207765,0x207A69,0x61616E,0x616172,0x616E20,0x616E64,0x617220,0x617420,0x636874,0x646520,0x64656E,0x646572,0x652062,0x652076,0x65656E,0x656572,0x656E20,0x657220,0x657273,0x657420,0x67656E,0x686574,0x696520,0x696E20,0x696E67,0x697320,0x6E2062,0x6E2064,0x6E2065,0x6E2068,0x6E206F,0x6E2076,0x6E6465,0x6E6720,0x6F6E64,0x6F6F72,0x6F7020,0x6F7220,0x736368,0x737465,0x742064,0x746520,0x74656E,0x746572,0x76616E,0x766572,0x766F6F]),new NGramsPlusLang('no',[0x206174,0x206176,0x206465,0x20656E,0x206572,0x20666F,0x206861,0x206920,0x206D65,0x206F67,0x2070E5,0x207365,0x20736B,0x20736F,0x207374,0x207469,0x207669,0x20E520,0x616E64,0x617220,0x617420,0x646520,0x64656E,0x646574,0x652073,0x656420,0x656E20,0x656E65,0x657220,0x657265,0x657420,0x657474,0x666F72,0x67656E,0x696B6B,0x696C20,0x696E67,0x6B6520,0x6B6B65,0x6C6520,0x6C6C65,0x6D6564,0x6D656E,0x6E2073,0x6E6520,0x6E6720,0x6E6765,0x6E6E65,0x6F6720,0x6F6D20,0x6F7220,0x70E520,0x722073,0x726520,0x736F6D,0x737465,0x742073,0x746520,0x74656E,0x746572,0x74696C,0x747420,0x747465,0x766572]),new NGramsPlusLang('pt',[0x206120,0x20636F,0x206461,0x206465,0x20646F,0x206520,0x206573,0x206D61,0x206E6F,0x206F20,0x207061,0x20706F,0x207072,0x207175,0x207265,0x207365,0x20756D,0x612061,0x612063,0x612064,0x612070,0x616465,0x61646F,0x616C20,0x617220,0x617261,0x617320,0x636F6D,0x636F6E,0x646120,0x646520,0x646F20,0x646F73,0x652061,0x652064,0x656D20,0x656E74,0x657320,0x657374,0x696120,0x696361,0x6D656E,0x6E7465,0x6E746F,0x6F2061,0x6F2063,0x6F2064,0x6F2065,0x6F2070,0x6F7320,0x706172,0x717565,0x726120,0x726573,0x732061,0x732064,0x732065,0x732070,0x737461,0x746520,0x746F20,0x756520,0xE36F20,0xE7E36F]),new NGramsPlusLang('sv',[0x206174,0x206176,0x206465,0x20656E,0x2066F6,0x206861,0x206920,0x20696E,0x206B6F,0x206D65,0x206F63,0x2070E5,0x20736B,0x20736F,0x207374,0x207469,0x207661,0x207669,0x20E472,0x616465,0x616E20,0x616E64,0x617220,0x617474,0x636820,0x646520,0x64656E,0x646572,0x646574,0x656420,0x656E20,0x657220,0x657420,0x66F672,0x67656E,0x696C6C,0x696E67,0x6B6120,0x6C6C20,0x6D6564,0x6E2073,0x6E6120,0x6E6465,0x6E6720,0x6E6765,0x6E696E,0x6F6368,0x6F6D20,0x6F6E20,0x70E520,0x722061,0x722073,0x726120,0x736B61,0x736F6D,0x742073,0x746120,0x746520,0x746572,0x74696C,0x747420,0x766172,0xE47220,0xF67220])];};this.name=function(det){return det&&det.fC1Bytes?'windows-1252':'ISO-8859-1';};};util.inherits(module.exports.ISO_8859_1,sbcs);module.exports.ISO_8859_2=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xB1,0x20,0xB3,0x20,0xB5,0xB6,0x20,0x20,0xB9,0xBA,0xBB,0xBC,0x20,0xBE,0xBF,0x20,0xB1,0x20,0xB3,0x20,0xB5,0xB6,0xB7,0x20,0xB9,0xBA,0xBB,0xBC,0x20,0xBE,0xBF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0x20,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xDF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0x20,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0x20];};this.ngrams=function(){return[new NGramsPlusLang('cs',[0x206120,0x206279,0x20646F,0x206A65,0x206E61,0x206E65,0x206F20,0x206F64,0x20706F,0x207072,0x2070F8,0x20726F,0x207365,0x20736F,0x207374,0x20746F,0x207620,0x207679,0x207A61,0x612070,0x636520,0x636820,0x652070,0x652073,0x652076,0x656D20,0x656EED,0x686F20,0x686F64,0x697374,0x6A6520,0x6B7465,0x6C6520,0x6C6920,0x6E6120,0x6EE920,0x6EEC20,0x6EED20,0x6F2070,0x6F646E,0x6F6A69,0x6F7374,0x6F7520,0x6F7661,0x706F64,0x706F6A,0x70726F,0x70F865,0x736520,0x736F75,0x737461,0x737469,0x73746E,0x746572,0x746EED,0x746F20,0x752070,0xBE6520,0xE16EED,0xE9686F,0xED2070,0xED2073,0xED6D20,0xF86564]),new NGramsPlusLang('hu',[0x206120,0x20617A,0x206265,0x206567,0x20656C,0x206665,0x206861,0x20686F,0x206973,0x206B65,0x206B69,0x206BF6,0x206C65,0x206D61,0x206D65,0x206D69,0x206E65,0x20737A,0x207465,0x20E973,0x612061,0x61206B,0x61206D,0x612073,0x616B20,0x616E20,0x617A20,0x62616E,0x62656E,0x656779,0x656B20,0x656C20,0x656C65,0x656D20,0x656E20,0x657265,0x657420,0x657465,0x657474,0x677920,0x686F67,0x696E74,0x697320,0x6B2061,0x6BF67A,0x6D6567,0x6D696E,0x6E2061,0x6E616B,0x6E656B,0x6E656D,0x6E7420,0x6F6779,0x732061,0x737A65,0x737A74,0x737AE1,0x73E967,0x742061,0x747420,0x74E173,0x7A6572,0xE16E20,0xE97320]),new NGramsPlusLang('pl',[0x20637A,0x20646F,0x206920,0x206A65,0x206B6F,0x206D61,0x206D69,0x206E61,0x206E69,0x206F64,0x20706F,0x207072,0x207369,0x207720,0x207769,0x207779,0x207A20,0x207A61,0x612070,0x612077,0x616E69,0x636820,0x637A65,0x637A79,0x646F20,0x647A69,0x652070,0x652073,0x652077,0x65207A,0x65676F,0x656A20,0x656D20,0x656E69,0x676F20,0x696120,0x696520,0x69656A,0x6B6120,0x6B6920,0x6B6965,0x6D6965,0x6E6120,0x6E6961,0x6E6965,0x6F2070,0x6F7761,0x6F7769,0x706F6C,0x707261,0x70726F,0x70727A,0x727A65,0x727A79,0x7369EA,0x736B69,0x737461,0x776965,0x796368,0x796D20,0x7A6520,0x7A6965,0x7A7920,0xF37720]),new NGramsPlusLang('ro',[0x206120,0x206163,0x206361,0x206365,0x20636F,0x206375,0x206465,0x206469,0x206C61,0x206D61,0x207065,0x207072,0x207365,0x2073E3,0x20756E,0x20BA69,0x20EE6E,0x612063,0x612064,0x617265,0x617420,0x617465,0x617520,0x636172,0x636F6E,0x637520,0x63E320,0x646520,0x652061,0x652063,0x652064,0x652070,0x652073,0x656120,0x656920,0x656C65,0x656E74,0x657374,0x692061,0x692063,0x692064,0x692070,0x696520,0x696920,0x696E20,0x6C6120,0x6C6520,0x6C6F72,0x6C7569,0x6E6520,0x6E7472,0x6F7220,0x70656E,0x726520,0x726561,0x727520,0x73E320,0x746520,0x747275,0x74E320,0x756920,0x756C20,0xBA6920,0xEE6E20])];};this.name=function(det){return det&&det.fC1Bytes?'windows-1250':'ISO-8859-2';};};util.inherits(module.exports.ISO_8859_2,sbcs);module.exports.ISO_8859_5=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0x20,0xFE,0xFF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0x20,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0x20,0xFE,0xFF];};this.ngrams=function(){return[0x20D220,0x20D2DE,0x20D4DE,0x20D7D0,0x20D820,0x20DAD0,0x20DADE,0x20DDD0,0x20DDD5,0x20DED1,0x20DFDE,0x20DFE0,0x20E0D0,0x20E1DE,0x20E1E2,0x20E2DE,0x20E7E2,0x20EDE2,0xD0DDD8,0xD0E2EC,0xD3DE20,0xD5DBEC,0xD5DDD8,0xD5E1E2,0xD5E220,0xD820DF,0xD8D520,0xD8D820,0xD8EF20,0xDBD5DD,0xDBD820,0xDBECDD,0xDDD020,0xDDD520,0xDDD8D5,0xDDD8EF,0xDDDE20,0xDDDED2,0xDE20D2,0xDE20DF,0xDE20E1,0xDED220,0xDED2D0,0xDED3DE,0xDED920,0xDEDBEC,0xDEDC20,0xDEE1E2,0xDFDEDB,0xDFE0D5,0xDFE0D8,0xDFE0DE,0xE0D0D2,0xE0D5D4,0xE1E2D0,0xE1E2D2,0xE1E2D8,0xE1EF20,0xE2D5DB,0xE2DE20,0xE2DEE0,0xE2EC20,0xE7E2DE,0xEBE520];};this.name=function(det){return'ISO-8859-5';};this.language=function(){return'ru';};};util.inherits(module.exports.ISO_8859_5,sbcs);module.exports.ISO_8859_6=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0x20,0x20,0x20,0x20,0x20,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20];};this.ngrams=function(){return[0x20C7E4,0x20C7E6,0x20C8C7,0x20D9E4,0x20E1EA,0x20E4E4,0x20E5E6,0x20E8C7,0xC720C7,0xC7C120,0xC7CA20,0xC7D120,0xC7E420,0xC7E4C3,0xC7E4C7,0xC7E4C8,0xC7E4CA,0xC7E4CC,0xC7E4CD,0xC7E4CF,0xC7E4D3,0xC7E4D9,0xC7E4E2,0xC7E4E5,0xC7E4E8,0xC7E4EA,0xC7E520,0xC7E620,0xC7E6CA,0xC820C7,0xC920C7,0xC920E1,0xC920E4,0xC920E5,0xC920E8,0xCA20C7,0xCF20C7,0xCFC920,0xD120C7,0xD1C920,0xD320C7,0xD920C7,0xD9E4E9,0xE1EA20,0xE420C7,0xE4C920,0xE4E920,0xE4EA20,0xE520C7,0xE5C720,0xE5C920,0xE5E620,0xE620C7,0xE720C7,0xE7C720,0xE8C7E4,0xE8E620,0xE920C7,0xEA20C7,0xEA20E5,0xEA20E8,0xEAC920,0xEAD120,0xEAE620];};this.name=function(det){return'ISO-8859-6';};this.language=function(){return'ar';};};util.inherits(module.exports.ISO_8859_6,sbcs);module.exports.ISO_8859_7=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xA1,0xA2,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDC,0x20,0xDD,0xDE,0xDF,0x20,0xFC,0x20,0xFD,0xFE,0xC0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0x20,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xDC,0xDD,0xDE,0xDF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0x20];};this.ngrams=function(){return[0x20E1ED,0x20E1F0,0x20E3E9,0x20E4E9,0x20E5F0,0x20E720,0x20EAE1,0x20ECE5,0x20EDE1,0x20EF20,0x20F0E1,0x20F0EF,0x20F0F1,0x20F3F4,0x20F3F5,0x20F4E7,0x20F4EF,0xDFE120,0xE120E1,0xE120F4,0xE1E920,0xE1ED20,0xE1F0FC,0xE1F220,0xE3E9E1,0xE5E920,0xE5F220,0xE720F4,0xE7ED20,0xE7F220,0xE920F4,0xE9E120,0xE9EADE,0xE9F220,0xEAE1E9,0xEAE1F4,0xECE520,0xED20E1,0xED20E5,0xED20F0,0xEDE120,0xEFF220,0xEFF520,0xF0EFF5,0xF0F1EF,0xF0FC20,0xF220E1,0xF220E5,0xF220EA,0xF220F0,0xF220F4,0xF3E520,0xF3E720,0xF3F4EF,0xF4E120,0xF4E1E9,0xF4E7ED,0xF4E7F2,0xF4E9EA,0xF4EF20,0xF4EFF5,0xF4F9ED,0xF9ED20,0xFEED20];};this.name=function(det){return det&&det.fC1Bytes?'windows-1253':'ISO-8859-7';};this.language=function(){return'el';};};util.inherits(module.exports.ISO_8859_7,sbcs);module.exports.ISO_8859_8=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xB5,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0x20,0x20,0x20,0x20,0x20];};this.ngrams=function(){return[new NGramsPlusLang('he',[0x20E0E5,0x20E0E7,0x20E0E9,0x20E0FA,0x20E1E9,0x20E1EE,0x20E4E0,0x20E4E5,0x20E4E9,0x20E4EE,0x20E4F2,0x20E4F9,0x20E4FA,0x20ECE0,0x20ECE4,0x20EEE0,0x20F2EC,0x20F9EC,0xE0FA20,0xE420E0,0xE420E1,0xE420E4,0xE420EC,0xE420EE,0xE420F9,0xE4E5E0,0xE5E020,0xE5ED20,0xE5EF20,0xE5F820,0xE5FA20,0xE920E4,0xE9E420,0xE9E5FA,0xE9E9ED,0xE9ED20,0xE9EF20,0xE9F820,0xE9FA20,0xEC20E0,0xEC20E4,0xECE020,0xECE420,0xED20E0,0xED20E1,0xED20E4,0xED20EC,0xED20EE,0xED20F9,0xEEE420,0xEF20E4,0xF0E420,0xF0E920,0xF0E9ED,0xF2EC20,0xF820E4,0xF8E9ED,0xF9EC20,0xFA20E0,0xFA20E1,0xFA20E4,0xFA20EC,0xFA20EE,0xFA20F9]),new NGramsPlusLang('he',[0x20E0E5,0x20E0EC,0x20E4E9,0x20E4EC,0x20E4EE,0x20E4F0,0x20E9F0,0x20ECF2,0x20ECF9,0x20EDE5,0x20EDE9,0x20EFE5,0x20EFE9,0x20F8E5,0x20F8E9,0x20FAE0,0x20FAE5,0x20FAE9,0xE020E4,0xE020EC,0xE020ED,0xE020FA,0xE0E420,0xE0E5E4,0xE0EC20,0xE0EE20,0xE120E4,0xE120ED,0xE120FA,0xE420E4,0xE420E9,0xE420EC,0xE420ED,0xE420EF,0xE420F8,0xE420FA,0xE4EC20,0xE5E020,0xE5E420,0xE7E020,0xE9E020,0xE9E120,0xE9E420,0xEC20E4,0xEC20ED,0xEC20FA,0xECF220,0xECF920,0xEDE9E9,0xEDE9F0,0xEDE9F8,0xEE20E4,0xEE20ED,0xEE20FA,0xEEE120,0xEEE420,0xF2E420,0xF920E4,0xF920ED,0xF920FA,0xF9E420,0xFAE020,0xFAE420,0xFAE5E9])];};this.name=function(det){return det&&det.fC1Bytes?'windows-1255':'ISO-8859-8';};this.language=function(){return'he';};};util.inherits(module.exports.ISO_8859_8,sbcs);module.exports.ISO_8859_9=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xAA,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xB5,0x20,0x20,0x20,0x20,0xBA,0x20,0x20,0x20,0x20,0x20,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0x20,0xF8,0xF9,0xFA,0xFB,0xFC,0x69,0xFE,0xDF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0x20,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF];};this.ngrams=function(){return[0x206261,0x206269,0x206275,0x206461,0x206465,0x206765,0x206861,0x20696C,0x206B61,0x206B6F,0x206D61,0x206F6C,0x207361,0x207461,0x207665,0x207961,0x612062,0x616B20,0x616C61,0x616D61,0x616E20,0x616EFD,0x617220,0x617261,0x6172FD,0x6173FD,0x617961,0x626972,0x646120,0x646520,0x646920,0x652062,0x65206B,0x656469,0x656E20,0x657220,0x657269,0x657369,0x696C65,0x696E20,0x696E69,0x697220,0x6C616E,0x6C6172,0x6C6520,0x6C6572,0x6E2061,0x6E2062,0x6E206B,0x6E6461,0x6E6465,0x6E6520,0x6E6920,0x6E696E,0x6EFD20,0x72696E,0x72FD6E,0x766520,0x796120,0x796F72,0xFD6E20,0xFD6E64,0xFD6EFD,0xFDF0FD];};this.name=function(det){return det&&det.fC1Bytes?'windows-1254':'ISO-8859-9';};this.language=function(){return'tr';};};util.inherits(module.exports.ISO_8859_9,sbcs);module.exports.windows_1251=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x90,0x83,0x20,0x83,0x20,0x20,0x20,0x20,0x20,0x20,0x9A,0x20,0x9C,0x9D,0x9E,0x9F,0x90,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x9A,0x20,0x9C,0x9D,0x9E,0x9F,0x20,0xA2,0xA2,0xBC,0x20,0xB4,0x20,0x20,0xB8,0x20,0xBA,0x20,0x20,0x20,0x20,0xBF,0x20,0x20,0xB3,0xB3,0xB4,0xB5,0x20,0x20,0xB8,0x20,0xBA,0x20,0xBC,0xBE,0xBE,0xBF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF];};this.ngrams=function(){return[0x20E220,0x20E2EE,0x20E4EE,0x20E7E0,0x20E820,0x20EAE0,0x20EAEE,0x20EDE0,0x20EDE5,0x20EEE1,0x20EFEE,0x20EFF0,0x20F0E0,0x20F1EE,0x20F1F2,0x20F2EE,0x20F7F2,0x20FDF2,0xE0EDE8,0xE0F2FC,0xE3EE20,0xE5EBFC,0xE5EDE8,0xE5F1F2,0xE5F220,0xE820EF,0xE8E520,0xE8E820,0xE8FF20,0xEBE5ED,0xEBE820,0xEBFCED,0xEDE020,0xEDE520,0xEDE8E5,0xEDE8FF,0xEDEE20,0xEDEEE2,0xEE20E2,0xEE20EF,0xEE20F1,0xEEE220,0xEEE2E0,0xEEE3EE,0xEEE920,0xEEEBFC,0xEEEC20,0xEEF1F2,0xEFEEEB,0xEFF0E5,0xEFF0E8,0xEFF0EE,0xF0E0E2,0xF0E5E4,0xF1F2E0,0xF1F2E2,0xF1F2E8,0xF1FF20,0xF2E5EB,0xF2EE20,0xF2EEF0,0xF2FC20,0xF7F2EE,0xFBF520];};this.name=function(det){return'windows-1251';};this.language=function(){return'ru';};};util.inherits(module.exports.windows_1251,sbcs);module.exports.windows_1256=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x81,0x20,0x83,0x20,0x20,0x20,0x20,0x88,0x20,0x8A,0x20,0x9C,0x8D,0x8E,0x8F,0x90,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x98,0x20,0x9A,0x20,0x9C,0x20,0x20,0x9F,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xAA,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xB5,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0x20,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF,0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0x20,0x20,0x20,0x20,0xF4,0x20,0x20,0x20,0x20,0xF9,0x20,0xFB,0xFC,0x20,0x20,0xFF];};this.ngrams=function(){return[0x20C7E1,0x20C7E4,0x20C8C7,0x20DAE1,0x20DDED,0x20E1E1,0x20E3E4,0x20E6C7,0xC720C7,0xC7C120,0xC7CA20,0xC7D120,0xC7E120,0xC7E1C3,0xC7E1C7,0xC7E1C8,0xC7E1CA,0xC7E1CC,0xC7E1CD,0xC7E1CF,0xC7E1D3,0xC7E1DA,0xC7E1DE,0xC7E1E3,0xC7E1E6,0xC7E1ED,0xC7E320,0xC7E420,0xC7E4CA,0xC820C7,0xC920C7,0xC920DD,0xC920E1,0xC920E3,0xC920E6,0xCA20C7,0xCF20C7,0xCFC920,0xD120C7,0xD1C920,0xD320C7,0xDA20C7,0xDAE1EC,0xDDED20,0xE120C7,0xE1C920,0xE1EC20,0xE1ED20,0xE320C7,0xE3C720,0xE3C920,0xE3E420,0xE420C7,0xE520C7,0xE5C720,0xE6C7E1,0xE6E420,0xEC20C7,0xED20C7,0xED20E3,0xED20E6,0xEDC920,0xEDD120,0xEDE420];};this.name=function(det){return'windows-1256';};this.language=function(){return'ar';};};util.inherits(module.exports.windows_1256,sbcs);module.exports.KOI8_R=function(){this.byteMap=function(){return[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xA3,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xA3,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF,0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF];};this.ngrams=function(){return[0x20C4CF,0x20C920,0x20CBC1,0x20CBCF,0x20CEC1,0x20CEC5,0x20CFC2,0x20D0CF,0x20D0D2,0x20D2C1,0x20D3CF,0x20D3D4,0x20D4CF,0x20D720,0x20D7CF,0x20DAC1,0x20DCD4,0x20DED4,0xC1CEC9,0xC1D4D8,0xC5CCD8,0xC5CEC9,0xC5D3D4,0xC5D420,0xC7CF20,0xC920D0,0xC9C520,0xC9C920,0xC9D120,0xCCC5CE,0xCCC920,0xCCD8CE,0xCEC120,0xCEC520,0xCEC9C5,0xCEC9D1,0xCECF20,0xCECFD7,0xCF20D0,0xCF20D3,0xCF20D7,0xCFC7CF,0xCFCA20,0xCFCCD8,0xCFCD20,0xCFD3D4,0xCFD720,0xCFD7C1,0xD0CFCC,0xD0D2C5,0xD0D2C9,0xD0D2CF,0xD2C1D7,0xD2C5C4,0xD3D120,0xD3D4C1,0xD3D4C9,0xD3D4D7,0xD4C5CC,0xD4CF20,0xD4CFD2,0xD4D820,0xD9C820,0xDED4CF];};this.name=function(det){return'KOI8-R';};this.language=function(){return'ru';};};util.inherits(module.exports.KOI8_R,sbcs);/*
		module.exports.ISO_8859_7 = function() {
		  this.byteMap = function() {
		    return [

		    ];
		  };

		  this.ngrams = function() {
		    return [

		    ];
		  };

		  this.name = function(det) {
		    if (typeof det == 'undefined')
		      return 'ISO-8859-7';
		    return det.fC1Bytes ? 'windows-1253' : 'ISO-8859-7';
		  };

		  this.language = function() {
		    return 'el';
		  };
		};
		util.inherits(module.exports.ISO_8859_7, sbcs);
		*/})(sbcs);return sbcs.exports;}var iso2022={exports:{}};var hasRequiredIso2022;function requireIso2022(){if(hasRequiredIso2022)return iso2022.exports;hasRequiredIso2022=1;(function(module){var util=require$$0__default$5.default,Match=requireMatch();/**
		 * This is a superclass for the individual detectors for
		 * each of the detectable members of the ISO 2022 family
		 * of encodings.
		 */function ISO_2022(){}ISO_2022.prototype.match=function(det){/**
		   * Matching function shared among the 2022 detectors JP, CN and KR
		   * Counts up the number of legal an unrecognized escape sequences in
		   * the sample of text, and computes a score based on the total number &
		   * the proportion that fit the encoding.
		   *
		   *
		   * @param text the byte buffer containing text to analyse
		   * @param textLen  the size of the text in the byte.
		   * @param escapeSequences the byte escape sequences to test for.
		   * @return match quality, in the range of 0-100.
		   */var i,j;var escN;var hits=0;var misses=0;var shifts=0;var quality;// TODO: refactor me
var text=det.fInputBytes;var textLen=det.fInputLen;scanInput:for(i=0;i<textLen;i++){if(text[i]==0x1b){checkEscapes:for(escN=0;escN<this.escapeSequences.length;escN++){var seq=this.escapeSequences[escN];if(textLen-i<seq.length)continue checkEscapes;for(j=1;j<seq.length;j++)if(seq[j]!=text[i+j])continue checkEscapes;hits++;i+=seq.length-1;continue scanInput;}misses++;}// Shift in/out
if(text[i]==0x0e||text[i]==0x0f)shifts++;}if(hits==0)return null;//
// Initial quality is based on relative proportion of recongized vs.
//   unrecognized escape sequences.
//   All good:  quality = 100;
//   half or less good: quality = 0;
//   linear inbetween.
quality=(100*hits-100*misses)/(hits+misses);// Back off quality if there were too few escape sequences seen.
//   Include shifts in this computation, so that KR does not get penalized
//   for having only a single Escape sequence, but many shifts.
if(hits+shifts<5)quality-=(5-(hits+shifts))*10;return quality<=0?null:new Match(det,this,quality);};module.exports.ISO_2022_JP=function(){this.name=function(){return'ISO-2022-JP';};this.escapeSequences=[[0x1b,0x24,0x28,0x43],// KS X 1001:1992
[0x1b,0x24,0x28,0x44],// JIS X 212-1990
[0x1b,0x24,0x40],// JIS C 6226-1978
[0x1b,0x24,0x41],// GB 2312-80
[0x1b,0x24,0x42],// JIS X 208-1983
[0x1b,0x26,0x40],// JIS X 208 1990, 1997
[0x1b,0x28,0x42],// ASCII
[0x1b,0x28,0x48],// JIS-Roman
[0x1b,0x28,0x49],// Half-width katakana
[0x1b,0x28,0x4a],// JIS-Roman
[0x1b,0x2e,0x41],// ISO 8859-1
[0x1b,0x2e,0x46]// ISO 8859-7
];};util.inherits(module.exports.ISO_2022_JP,ISO_2022);module.exports.ISO_2022_KR=function(){this.name=function(){return'ISO-2022-KR';};this.escapeSequences=[[0x1b,0x24,0x29,0x43]];};util.inherits(module.exports.ISO_2022_KR,ISO_2022);module.exports.ISO_2022_CN=function(){this.name=function(){return'ISO-2022-CN';};this.escapeSequences=[[0x1b,0x24,0x29,0x41],// GB 2312-80
[0x1b,0x24,0x29,0x47],// CNS 11643-1992 Plane 1
[0x1b,0x24,0x2A,0x48],// CNS 11643-1992 Plane 2
[0x1b,0x24,0x29,0x45],// ISO-IR-165
[0x1b,0x24,0x2B,0x49],// CNS 11643-1992 Plane 3
[0x1b,0x24,0x2B,0x4A],// CNS 11643-1992 Plane 4
[0x1b,0x24,0x2B,0x4B],// CNS 11643-1992 Plane 5
[0x1b,0x24,0x2B,0x4C],// CNS 11643-1992 Plane 6
[0x1b,0x24,0x2B,0x4D],// CNS 11643-1992 Plane 7
[0x1b,0x4e],// SS2
[0x1b,0x4f]// SS3
];};util.inherits(module.exports.ISO_2022_CN,ISO_2022);})(iso2022);return iso2022.exports;}var hasRequiredChardet;function requireChardet(){if(hasRequiredChardet)return chardet;hasRequiredChardet=1;var fs=require$$0__default.default;var utf8=requireUtf8(),unicode=requireUnicode(),mbcs=requireMbcs(),sbcs=requireSbcs(),iso2022=requireIso2022();var self=loadEnv.commonjsGlobal;var recognisers=[new utf8(),new unicode.UTF_16BE(),new unicode.UTF_16LE(),new unicode.UTF_32BE(),new unicode.UTF_32LE(),new mbcs.sjis(),new mbcs.big5(),new mbcs.euc_jp(),new mbcs.euc_kr(),new mbcs.gb_18030(),new iso2022.ISO_2022_JP(),new iso2022.ISO_2022_KR(),new iso2022.ISO_2022_CN(),new sbcs.ISO_8859_1(),new sbcs.ISO_8859_2(),new sbcs.ISO_8859_5(),new sbcs.ISO_8859_6(),new sbcs.ISO_8859_7(),new sbcs.ISO_8859_8(),new sbcs.ISO_8859_9(),new sbcs.windows_1251(),new sbcs.windows_1256(),new sbcs.KOI8_R()];chardet.detect=function(buffer,opts){// Tally up the byte occurence statistics.
var fByteStats=[];for(var i=0;i<256;i++)fByteStats[i]=0;for(var i=buffer.length-1;i>=0;i--)fByteStats[buffer[i]&0x00ff]++;var fC1Bytes=false;for(var i=0x80;i<=0x9F;i+=1){if(fByteStats[i]!=0){fC1Bytes=true;break;}}var context={fByteStats:fByteStats,fC1Bytes:fC1Bytes,fRawInput:buffer,fRawLength:buffer.length,fInputBytes:buffer,fInputLen:buffer.length};var matches=recognisers.map(function(rec){return rec.match(context);}).filter(function(match){return!!match;}).sort(function(a,b){return b.confidence-a.confidence;});if(opts&&opts.returnAllMatches===true){return matches;}else{return matches.length>0?matches[0].name:null;}};chardet.detectFile=function(filepath,opts,cb){if(typeof opts==='function'){cb=opts;opts=undefined;}var fd;var handler=function(err,buffer){if(fd){fs.closeSync(fd);}if(err)return cb(err,null);cb(null,self.detect(buffer,opts));};if(opts&&opts.sampleSize){fd=fs.openSync(filepath,'r'),sample=Buffer.allocUnsafe(opts.sampleSize);fs.read(fd,sample,0,opts.sampleSize,null,function(err){handler(err,sample);});return;}fs.readFile(filepath,handler);};chardet.detectFileSync=function(filepath,opts){if(opts&&opts.sampleSize){var fd=fs.openSync(filepath,'r'),sample=Buffer.allocUnsafe(opts.sampleSize);fs.readSync(fd,sample,0,opts.sampleSize);fs.closeSync(fd);return self.detect(sample,opts);}return self.detect(fs.readFileSync(filepath),opts);};// Wrappers for the previous functions to return all encodings
chardet.detectAll=function(buffer,opts){if(typeof opts!=='object'){opts={};}opts.returnAllMatches=true;return self.detect(buffer,opts);};chardet.detectFileAll=function(filepath,opts,cb){if(typeof opts==='function'){cb=opts;opts=undefined;}if(typeof opts!=='object'){opts={};}opts.returnAllMatches=true;self.detectFile(filepath,opts,cb);};chardet.detectFileAllSync=function(filepath,opts){if(typeof opts!=='object'){opts={};}opts.returnAllMatches=true;return self.detectFileSync(filepath,opts);};return chardet;}var lib={exports:{}};/* eslint-disable node/no-deprecated-api */var safer_1;var hasRequiredSafer;function requireSafer(){if(hasRequiredSafer)return safer_1;hasRequiredSafer=1;var buffer=require$$0__default$7.default;var Buffer=buffer.Buffer;var safer={};var key;for(key in buffer){if(!buffer.hasOwnProperty(key))continue;if(key==='SlowBuffer'||key==='Buffer')continue;safer[key]=buffer[key];}var Safer=safer.Buffer={};for(key in Buffer){if(!Buffer.hasOwnProperty(key))continue;if(key==='allocUnsafe'||key==='allocUnsafeSlow')continue;Safer[key]=Buffer[key];}safer.Buffer.prototype=Buffer.prototype;if(!Safer.from||Safer.from===Uint8Array.from){Safer.from=function(value,encodingOrOffset,length){if(typeof value==='number'){throw new TypeError('The "value" argument must not be of type number. Received type '+typeof value);}if(value&&typeof value.length==='undefined'){throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type '+typeof value);}return Buffer(value,encodingOrOffset,length);};}if(!Safer.alloc){Safer.alloc=function(size,fill,encoding){if(typeof size!=='number'){throw new TypeError('The "size" argument must be of type number. Received type '+typeof size);}if(size<0||size>=2*(1<<30)){throw new RangeError('The value "'+size+'" is invalid for option "size"');}var buf=Buffer(size);if(!fill||fill.length===0){buf.fill(0);}else if(typeof encoding==='string'){buf.fill(fill,encoding);}else{buf.fill(fill);}return buf;};}if(!safer.kStringMaxLength){try{safer.kStringMaxLength=process.binding('buffer').kStringMaxLength;}catch(e){// we can't determine kStringMaxLength in environments where process.binding
// is unsupported, so let's not set it
}}if(!safer.constants){safer.constants={MAX_LENGTH:safer.kMaxLength};if(safer.kStringMaxLength){safer.constants.MAX_STRING_LENGTH=safer.kStringMaxLength;}}safer_1=safer;return safer_1;}var bomHandling={};var hasRequiredBomHandling;function requireBomHandling(){if(hasRequiredBomHandling)return bomHandling;hasRequiredBomHandling=1;var BOMChar='\uFEFF';bomHandling.PrependBOM=PrependBOMWrapper;function PrependBOMWrapper(encoder,options){this.encoder=encoder;this.addBOM=true;}PrependBOMWrapper.prototype.write=function(str){if(this.addBOM){str=BOMChar+str;this.addBOM=false;}return this.encoder.write(str);};PrependBOMWrapper.prototype.end=function(){return this.encoder.end();};//------------------------------------------------------------------------------
bomHandling.StripBOM=StripBOMWrapper;function StripBOMWrapper(decoder,options){this.decoder=decoder;this.pass=false;this.options=options||{};}StripBOMWrapper.prototype.write=function(buf){var res=this.decoder.write(buf);if(this.pass||!res)return res;if(res[0]===BOMChar){res=res.slice(1);if(typeof this.options.stripBOM==='function')this.options.stripBOM();}this.pass=true;return res;};StripBOMWrapper.prototype.end=function(){return this.decoder.end();};return bomHandling;}var encodings={};var string_decoder={};var safeBuffer={exports:{}};/* eslint-disable node/no-deprecated-api */var hasRequiredSafeBuffer;function requireSafeBuffer(){if(hasRequiredSafeBuffer)return safeBuffer.exports;hasRequiredSafeBuffer=1;(function(module,exports){var buffer=require$$0__default$7.default;var Buffer=buffer.Buffer;// alternative to using Object.keys for old browsers
function copyProps(src,dst){for(var key in src){dst[key]=src[key];}}if(Buffer.from&&Buffer.alloc&&Buffer.allocUnsafe&&Buffer.allocUnsafeSlow){module.exports=buffer;}else{// Copy properties from require('buffer')
copyProps(buffer,exports);exports.Buffer=SafeBuffer;}function SafeBuffer(arg,encodingOrOffset,length){return Buffer(arg,encodingOrOffset,length);}// Copy static methods from Buffer
copyProps(Buffer,SafeBuffer);SafeBuffer.from=function(arg,encodingOrOffset,length){if(typeof arg==='number'){throw new TypeError('Argument must not be a number');}return Buffer(arg,encodingOrOffset,length);};SafeBuffer.alloc=function(size,fill,encoding){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}var buf=Buffer(size);if(fill!==undefined){if(typeof encoding==='string'){buf.fill(fill,encoding);}else{buf.fill(fill);}}else{buf.fill(0);}return buf;};SafeBuffer.allocUnsafe=function(size){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}return Buffer(size);};SafeBuffer.allocUnsafeSlow=function(size){if(typeof size!=='number'){throw new TypeError('Argument must be a number');}return buffer.SlowBuffer(size);};})(safeBuffer,safeBuffer.exports);return safeBuffer.exports;}var hasRequiredString_decoder;function requireString_decoder(){if(hasRequiredString_decoder)return string_decoder;hasRequiredString_decoder=1;/*<replacement>*/var Buffer=requireSafeBuffer().Buffer;/*</replacement>*/var isEncoding=Buffer.isEncoding||function(encoding){encoding=''+encoding;switch(encoding&&encoding.toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':return true;default:return false;}};function _normalizeEncoding(enc){if(!enc)return'utf8';var retried;while(true){switch(enc){case'utf8':case'utf-8':return'utf8';case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return'utf16le';case'latin1':case'binary':return'latin1';case'base64':case'ascii':case'hex':return enc;default:if(retried)return;// undefined
enc=(''+enc).toLowerCase();retried=true;}}}// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc){var nenc=_normalizeEncoding(enc);if(typeof nenc!=='string'&&(Buffer.isEncoding===isEncoding||!isEncoding(enc)))throw new Error('Unknown encoding: '+enc);return nenc||enc;}// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
string_decoder.StringDecoder=StringDecoder;function StringDecoder(encoding){this.encoding=normalizeEncoding(encoding);var nb;switch(this.encoding){case'utf16le':this.text=utf16Text;this.end=utf16End;nb=4;break;case'utf8':this.fillLast=utf8FillLast;nb=4;break;case'base64':this.text=base64Text;this.end=base64End;nb=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return;}this.lastNeed=0;this.lastTotal=0;this.lastChar=Buffer.allocUnsafe(nb);}StringDecoder.prototype.write=function(buf){if(buf.length===0)return'';var r;var i;if(this.lastNeed){r=this.fillLast(buf);if(r===undefined)return'';i=this.lastNeed;this.lastNeed=0;}else{i=0;}if(i<buf.length)return r?r+this.text(buf,i):this.text(buf,i);return r||'';};StringDecoder.prototype.end=utf8End;// Returns only complete characters in a Buffer
StringDecoder.prototype.text=utf8Text;// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast=function(buf){if(this.lastNeed<=buf.length){buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);this.lastNeed-=buf.length;};// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte){if(byte<=0x7F)return 0;else if(byte>>5===0x06)return 2;else if(byte>>4===0x0E)return 3;else if(byte>>3===0x1E)return 4;return byte>>6===0x02?-1:-2;}// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self,buf,i){var j=buf.length-1;if(j<i)return 0;var nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-1;return nb;}if(--j<i||nb===-2)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-2;return nb;}if(--j<i||nb===-2)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0){if(nb===2)nb=0;else self.lastNeed=nb-3;}return nb;}return 0;}// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self,buf,p){if((buf[0]&0xC0)!==0x80){self.lastNeed=0;return'\ufffd';}if(self.lastNeed>1&&buf.length>1){if((buf[1]&0xC0)!==0x80){self.lastNeed=1;return'\ufffd';}if(self.lastNeed>2&&buf.length>2){if((buf[2]&0xC0)!==0x80){self.lastNeed=2;return'\ufffd';}}}}// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf){var p=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,buf);if(r!==undefined)return r;if(this.lastNeed<=buf.length){buf.copy(this.lastChar,p,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}buf.copy(this.lastChar,p,0,buf.length);this.lastNeed-=buf.length;}// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf,i){var total=utf8CheckIncomplete(this,buf,i);if(!this.lastNeed)return buf.toString('utf8',i);this.lastTotal=total;var end=buf.length-(total-this.lastNeed);buf.copy(this.lastChar,0,end);return buf.toString('utf8',i,end);}// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed)return r+'\ufffd';return r;}// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf,i){if((buf.length-i)%2===0){var r=buf.toString('utf16le',i);if(r){var c=r.charCodeAt(r.length-1);if(c>=0xD800&&c<=0xDBFF){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];return r.slice(0,-1);}}return r;}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=buf[buf.length-1];return buf.toString('utf16le',i,buf.length-1);}// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed){var end=this.lastTotal-this.lastNeed;return r+this.lastChar.toString('utf16le',0,end);}return r;}function base64Text(buf,i){var n=(buf.length-i)%3;if(n===0)return buf.toString('base64',i);this.lastNeed=3-n;this.lastTotal=3;if(n===1){this.lastChar[0]=buf[buf.length-1];}else{this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];}return buf.toString('base64',i,buf.length-n);}function base64End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed)return r+this.lastChar.toString('base64',0,3-this.lastNeed);return r;}// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf){return buf.toString(this.encoding);}function simpleEnd(buf){return buf&&buf.length?this.write(buf):'';}return string_decoder;}var internal;var hasRequiredInternal;function requireInternal(){if(hasRequiredInternal)return internal;hasRequiredInternal=1;var Buffer=requireSafer().Buffer;// Export Node.js internal encodings.
internal={// Encodings
utf8:{type:"_internal",bomAware:true},cesu8:{type:"_internal",bomAware:true},unicode11utf8:"utf8",ucs2:{type:"_internal",bomAware:true},utf16le:"ucs2",binary:{type:"_internal"},base64:{type:"_internal"},hex:{type:"_internal"},// Codec.
_internal:InternalCodec};//------------------------------------------------------------------------------
function InternalCodec(codecOptions,iconv){this.enc=codecOptions.encodingName;this.bomAware=codecOptions.bomAware;if(this.enc==="base64")this.encoder=InternalEncoderBase64;else if(this.enc==="cesu8"){this.enc="utf8";// Use utf8 for decoding.
this.encoder=InternalEncoderCesu8;// Add decoder for versions of Node not supporting CESU-8
if(Buffer.from('eda0bdedb2a9','hex').toString()!=='💩'){this.decoder=InternalDecoderCesu8;this.defaultCharUnicode=iconv.defaultCharUnicode;}}}InternalCodec.prototype.encoder=InternalEncoder;InternalCodec.prototype.decoder=InternalDecoder;//------------------------------------------------------------------------------
// We use node.js internal decoder. Its signature is the same as ours.
var StringDecoder=requireString_decoder().StringDecoder;if(!StringDecoder.prototype.end)// Node v0.8 doesn't have this method.
StringDecoder.prototype.end=function(){};function InternalDecoder(options,codec){StringDecoder.call(this,codec.enc);}InternalDecoder.prototype=StringDecoder.prototype;//------------------------------------------------------------------------------
// Encoder is mostly trivial
function InternalEncoder(options,codec){this.enc=codec.enc;}InternalEncoder.prototype.write=function(str){return Buffer.from(str,this.enc);};InternalEncoder.prototype.end=function(){};//------------------------------------------------------------------------------
// Except base64 encoder, which must keep its state.
function InternalEncoderBase64(options,codec){this.prevStr='';}InternalEncoderBase64.prototype.write=function(str){str=this.prevStr+str;var completeQuads=str.length-str.length%4;this.prevStr=str.slice(completeQuads);str=str.slice(0,completeQuads);return Buffer.from(str,"base64");};InternalEncoderBase64.prototype.end=function(){return Buffer.from(this.prevStr,"base64");};//------------------------------------------------------------------------------
// CESU-8 encoder is also special.
function InternalEncoderCesu8(options,codec){}InternalEncoderCesu8.prototype.write=function(str){var buf=Buffer.alloc(str.length*3),bufIdx=0;for(var i=0;i<str.length;i++){var charCode=str.charCodeAt(i);// Naive implementation, but it works because CESU-8 is especially easy
// to convert from UTF-16 (which all JS strings are encoded in).
if(charCode<0x80)buf[bufIdx++]=charCode;else if(charCode<0x800){buf[bufIdx++]=0xC0+(charCode>>>6);buf[bufIdx++]=0x80+(charCode&0x3f);}else{// charCode will always be < 0x10000 in javascript.
buf[bufIdx++]=0xE0+(charCode>>>12);buf[bufIdx++]=0x80+(charCode>>>6&0x3f);buf[bufIdx++]=0x80+(charCode&0x3f);}}return buf.slice(0,bufIdx);};InternalEncoderCesu8.prototype.end=function(){};//------------------------------------------------------------------------------
// CESU-8 decoder is not implemented in Node v4.0+
function InternalDecoderCesu8(options,codec){this.acc=0;this.contBytes=0;this.accBytes=0;this.defaultCharUnicode=codec.defaultCharUnicode;}InternalDecoderCesu8.prototype.write=function(buf){var acc=this.acc,contBytes=this.contBytes,accBytes=this.accBytes,res='';for(var i=0;i<buf.length;i++){var curByte=buf[i];if((curByte&0xC0)!==0x80){// Leading byte
if(contBytes>0){// Previous code is invalid
res+=this.defaultCharUnicode;contBytes=0;}if(curByte<0x80){// Single-byte code
res+=String.fromCharCode(curByte);}else if(curByte<0xE0){// Two-byte code
acc=curByte&0x1F;contBytes=1;accBytes=1;}else if(curByte<0xF0){// Three-byte code
acc=curByte&0x0F;contBytes=2;accBytes=1;}else{// Four or more are not supported for CESU-8.
res+=this.defaultCharUnicode;}}else{// Continuation byte
if(contBytes>0){// We're waiting for it.
acc=acc<<6|curByte&0x3f;contBytes--;accBytes++;if(contBytes===0){// Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)
if(accBytes===2&&acc<0x80&&acc>0)res+=this.defaultCharUnicode;else if(accBytes===3&&acc<0x800)res+=this.defaultCharUnicode;else// Actually add character.
res+=String.fromCharCode(acc);}}else{// Unexpected continuation byte
res+=this.defaultCharUnicode;}}}this.acc=acc;this.contBytes=contBytes;this.accBytes=accBytes;return res;};InternalDecoderCesu8.prototype.end=function(){var res=0;if(this.contBytes>0)res+=this.defaultCharUnicode;return res;};return internal;}var utf16={};var hasRequiredUtf16;function requireUtf16(){if(hasRequiredUtf16)return utf16;hasRequiredUtf16=1;var Buffer=requireSafer().Buffer;// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js
// == UTF16-BE codec. ==========================================================
utf16.utf16be=Utf16BECodec;function Utf16BECodec(){}Utf16BECodec.prototype.encoder=Utf16BEEncoder;Utf16BECodec.prototype.decoder=Utf16BEDecoder;Utf16BECodec.prototype.bomAware=true;// -- Encoding
function Utf16BEEncoder(){}Utf16BEEncoder.prototype.write=function(str){var buf=Buffer.from(str,'ucs2');for(var i=0;i<buf.length;i+=2){var tmp=buf[i];buf[i]=buf[i+1];buf[i+1]=tmp;}return buf;};Utf16BEEncoder.prototype.end=function(){};// -- Decoding
function Utf16BEDecoder(){this.overflowByte=-1;}Utf16BEDecoder.prototype.write=function(buf){if(buf.length==0)return'';var buf2=Buffer.alloc(buf.length+1),i=0,j=0;if(this.overflowByte!==-1){buf2[0]=buf[0];buf2[1]=this.overflowByte;i=1;j=2;}for(;i<buf.length-1;i+=2,j+=2){buf2[j]=buf[i+1];buf2[j+1]=buf[i];}this.overflowByte=i==buf.length-1?buf[buf.length-1]:-1;return buf2.slice(0,j).toString('ucs2');};Utf16BEDecoder.prototype.end=function(){};// == UTF-16 codec =============================================================
// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.
// Defaults to UTF-16LE, as it's prevalent and default in Node.
// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le
// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});
// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).
utf16.utf16=Utf16Codec;function Utf16Codec(codecOptions,iconv){this.iconv=iconv;}Utf16Codec.prototype.encoder=Utf16Encoder;Utf16Codec.prototype.decoder=Utf16Decoder;// -- Encoding (pass-through)
function Utf16Encoder(options,codec){options=options||{};if(options.addBOM===undefined)options.addBOM=true;this.encoder=codec.iconv.getEncoder('utf-16le',options);}Utf16Encoder.prototype.write=function(str){return this.encoder.write(str);};Utf16Encoder.prototype.end=function(){return this.encoder.end();};// -- Decoding
function Utf16Decoder(options,codec){this.decoder=null;this.initialBytes=[];this.initialBytesLen=0;this.options=options||{};this.iconv=codec.iconv;}Utf16Decoder.prototype.write=function(buf){if(!this.decoder){// Codec is not chosen yet. Accumulate initial bytes.
this.initialBytes.push(buf);this.initialBytesLen+=buf.length;if(this.initialBytesLen<16)// We need more bytes to use space heuristic (see below)
return'';// We have enough bytes -> detect endianness.
var buf=Buffer.concat(this.initialBytes),encoding=detectEncoding(buf,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(encoding,this.options);this.initialBytes.length=this.initialBytesLen=0;}return this.decoder.write(buf);};Utf16Decoder.prototype.end=function(){if(!this.decoder){var buf=Buffer.concat(this.initialBytes),encoding=detectEncoding(buf,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(encoding,this.options);var res=this.decoder.write(buf),trail=this.decoder.end();return trail?res+trail:res;}return this.decoder.end();};function detectEncoding(buf,defaultEncoding){var enc=defaultEncoding||'utf-16le';if(buf.length>=2){// Check BOM.
if(buf[0]==0xFE&&buf[1]==0xFF)// UTF-16BE BOM
enc='utf-16be';else if(buf[0]==0xFF&&buf[1]==0xFE)// UTF-16LE BOM
enc='utf-16le';else{// No BOM found. Try to deduce encoding from initial content.
// Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.
// So, we count ASCII as if it was LE or BE, and decide from that.
var asciiCharsLE=0,asciiCharsBE=0,// Counts of chars in both positions
_len=Math.min(buf.length-buf.length%2,64);// Len is always even.
for(var i=0;i<_len;i+=2){if(buf[i]===0&&buf[i+1]!==0)asciiCharsBE++;if(buf[i]!==0&&buf[i+1]===0)asciiCharsLE++;}if(asciiCharsBE>asciiCharsLE)enc='utf-16be';else if(asciiCharsBE<asciiCharsLE)enc='utf-16le';}}return enc;}return utf16;}var utf7={};var hasRequiredUtf7;function requireUtf7(){if(hasRequiredUtf7)return utf7;hasRequiredUtf7=1;var Buffer=requireSafer().Buffer;// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152
// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3
utf7.utf7=Utf7Codec;utf7.unicode11utf7='utf7';// Alias UNICODE-1-1-UTF-7
function Utf7Codec(codecOptions,iconv){this.iconv=iconv;}Utf7Codec.prototype.encoder=Utf7Encoder;Utf7Codec.prototype.decoder=Utf7Decoder;Utf7Codec.prototype.bomAware=true;// -- Encoding
var nonDirectChars=/[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;function Utf7Encoder(options,codec){this.iconv=codec.iconv;}Utf7Encoder.prototype.write=function(str){// Naive implementation.
// Non-direct chars are encoded as "+<base64>-"; single "+" char is encoded as "+-".
return Buffer.from(str.replace(nonDirectChars,function(chunk){return"+"+(chunk==='+'?'':this.iconv.encode(chunk,'utf16-be').toString('base64').replace(/=+$/,''))+"-";}.bind(this)));};Utf7Encoder.prototype.end=function(){};// -- Decoding
function Utf7Decoder(options,codec){this.iconv=codec.iconv;this.inBase64=false;this.base64Accum='';}var base64Regex=/[A-Za-z0-9\/+]/;var base64Chars=[];for(var i=0;i<256;i++)base64Chars[i]=base64Regex.test(String.fromCharCode(i));var plusChar='+'.charCodeAt(0),minusChar='-'.charCodeAt(0),andChar='&'.charCodeAt(0);Utf7Decoder.prototype.write=function(buf){var res="",lastI=0,inBase64=this.inBase64,base64Accum=this.base64Accum;// The decoder is more involved as we must handle chunks in stream.
for(var i=0;i<buf.length;i++){if(!inBase64){// We're in direct mode.
// Write direct chars until '+'
if(buf[i]==plusChar){res+=this.iconv.decode(buf.slice(lastI,i),"ascii");// Write direct chars.
lastI=i+1;inBase64=true;}}else{// We decode base64.
if(!base64Chars[buf[i]]){// Base64 ended.
if(i==lastI&&buf[i]==minusChar){// "+-" -> "+"
res+="+";}else{var b64str=base64Accum+buf.slice(lastI,i).toString();res+=this.iconv.decode(Buffer.from(b64str,'base64'),"utf16-be");}if(buf[i]!=minusChar)// Minus is absorbed after base64.
i--;lastI=i+1;inBase64=false;base64Accum='';}}}if(!inBase64){res+=this.iconv.decode(buf.slice(lastI),"ascii");// Write direct chars.
}else{var b64str=base64Accum+buf.slice(lastI).toString();var canBeDecoded=b64str.length-b64str.length%8;// Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
base64Accum=b64str.slice(canBeDecoded);// The rest will be decoded in future.
b64str=b64str.slice(0,canBeDecoded);res+=this.iconv.decode(Buffer.from(b64str,'base64'),"utf16-be");}this.inBase64=inBase64;this.base64Accum=base64Accum;return res;};Utf7Decoder.prototype.end=function(){var res="";if(this.inBase64&&this.base64Accum.length>0)res=this.iconv.decode(Buffer.from(this.base64Accum,'base64'),"utf16-be");this.inBase64=false;this.base64Accum='';return res;};// UTF-7-IMAP codec.
// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)
// Differences:
//  * Base64 part is started by "&" instead of "+"
//  * Direct characters are 0x20-0x7E, except "&" (0x26)
//  * In Base64, "," is used instead of "/"
//  * Base64 must not be used to represent direct characters.
//  * No implicit shift back from Base64 (should always end with '-')
//  * String must end in non-shifted position.
//  * "-&" while in base64 is not allowed.
utf7.utf7imap=Utf7IMAPCodec;function Utf7IMAPCodec(codecOptions,iconv){this.iconv=iconv;}Utf7IMAPCodec.prototype.encoder=Utf7IMAPEncoder;Utf7IMAPCodec.prototype.decoder=Utf7IMAPDecoder;Utf7IMAPCodec.prototype.bomAware=true;// -- Encoding
function Utf7IMAPEncoder(options,codec){this.iconv=codec.iconv;this.inBase64=false;this.base64Accum=Buffer.alloc(6);this.base64AccumIdx=0;}Utf7IMAPEncoder.prototype.write=function(str){var inBase64=this.inBase64,base64Accum=this.base64Accum,base64AccumIdx=this.base64AccumIdx,buf=Buffer.alloc(str.length*5+10),bufIdx=0;for(var i=0;i<str.length;i++){var uChar=str.charCodeAt(i);if(0x20<=uChar&&uChar<=0x7E){// Direct character or '&'.
if(inBase64){if(base64AccumIdx>0){bufIdx+=buf.write(base64Accum.slice(0,base64AccumIdx).toString('base64').replace(/\//g,',').replace(/=+$/,''),bufIdx);base64AccumIdx=0;}buf[bufIdx++]=minusChar;// Write '-', then go to direct mode.
inBase64=false;}if(!inBase64){buf[bufIdx++]=uChar;// Write direct character
if(uChar===andChar)// Ampersand -> '&-'
buf[bufIdx++]=minusChar;}}else{// Non-direct character
if(!inBase64){buf[bufIdx++]=andChar;// Write '&', then go to base64 mode.
inBase64=true;}if(inBase64){base64Accum[base64AccumIdx++]=uChar>>8;base64Accum[base64AccumIdx++]=uChar&0xFF;if(base64AccumIdx==base64Accum.length){bufIdx+=buf.write(base64Accum.toString('base64').replace(/\//g,','),bufIdx);base64AccumIdx=0;}}}}this.inBase64=inBase64;this.base64AccumIdx=base64AccumIdx;return buf.slice(0,bufIdx);};Utf7IMAPEncoder.prototype.end=function(){var buf=Buffer.alloc(10),bufIdx=0;if(this.inBase64){if(this.base64AccumIdx>0){bufIdx+=buf.write(this.base64Accum.slice(0,this.base64AccumIdx).toString('base64').replace(/\//g,',').replace(/=+$/,''),bufIdx);this.base64AccumIdx=0;}buf[bufIdx++]=minusChar;// Write '-', then go to direct mode.
this.inBase64=false;}return buf.slice(0,bufIdx);};// -- Decoding
function Utf7IMAPDecoder(options,codec){this.iconv=codec.iconv;this.inBase64=false;this.base64Accum='';}var base64IMAPChars=base64Chars.slice();base64IMAPChars[','.charCodeAt(0)]=true;Utf7IMAPDecoder.prototype.write=function(buf){var res="",lastI=0,inBase64=this.inBase64,base64Accum=this.base64Accum;// The decoder is more involved as we must handle chunks in stream.
// It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).
for(var i=0;i<buf.length;i++){if(!inBase64){// We're in direct mode.
// Write direct chars until '&'
if(buf[i]==andChar){res+=this.iconv.decode(buf.slice(lastI,i),"ascii");// Write direct chars.
lastI=i+1;inBase64=true;}}else{// We decode base64.
if(!base64IMAPChars[buf[i]]){// Base64 ended.
if(i==lastI&&buf[i]==minusChar){// "&-" -> "&"
res+="&";}else{var b64str=base64Accum+buf.slice(lastI,i).toString().replace(/,/g,'/');res+=this.iconv.decode(Buffer.from(b64str,'base64'),"utf16-be");}if(buf[i]!=minusChar)// Minus may be absorbed after base64.
i--;lastI=i+1;inBase64=false;base64Accum='';}}}if(!inBase64){res+=this.iconv.decode(buf.slice(lastI),"ascii");// Write direct chars.
}else{var b64str=base64Accum+buf.slice(lastI).toString().replace(/,/g,'/');var canBeDecoded=b64str.length-b64str.length%8;// Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
base64Accum=b64str.slice(canBeDecoded);// The rest will be decoded in future.
b64str=b64str.slice(0,canBeDecoded);res+=this.iconv.decode(Buffer.from(b64str,'base64'),"utf16-be");}this.inBase64=inBase64;this.base64Accum=base64Accum;return res;};Utf7IMAPDecoder.prototype.end=function(){var res="";if(this.inBase64&&this.base64Accum.length>0)res=this.iconv.decode(Buffer.from(this.base64Accum,'base64'),"utf16-be");this.inBase64=false;this.base64Accum='';return res;};return utf7;}var sbcsCodec={};var hasRequiredSbcsCodec;function requireSbcsCodec(){if(hasRequiredSbcsCodec)return sbcsCodec;hasRequiredSbcsCodec=1;var Buffer=requireSafer().Buffer;// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that
// correspond to encoded bytes (if 128 - then lower half is ASCII). 
sbcsCodec._sbcs=SBCSCodec;function SBCSCodec(codecOptions,iconv){if(!codecOptions)throw new Error("SBCS codec is called without the data.");// Prepare char buffer for decoding.
if(!codecOptions.chars||codecOptions.chars.length!==128&&codecOptions.chars.length!==256)throw new Error("Encoding '"+codecOptions.type+"' has incorrect 'chars' (must be of len 128 or 256)");if(codecOptions.chars.length===128){var asciiString="";for(var i=0;i<128;i++)asciiString+=String.fromCharCode(i);codecOptions.chars=asciiString+codecOptions.chars;}this.decodeBuf=Buffer.from(codecOptions.chars,'ucs2');// Encoding buffer.
var encodeBuf=Buffer.alloc(65536,iconv.defaultCharSingleByte.charCodeAt(0));for(var i=0;i<codecOptions.chars.length;i++)encodeBuf[codecOptions.chars.charCodeAt(i)]=i;this.encodeBuf=encodeBuf;}SBCSCodec.prototype.encoder=SBCSEncoder;SBCSCodec.prototype.decoder=SBCSDecoder;function SBCSEncoder(options,codec){this.encodeBuf=codec.encodeBuf;}SBCSEncoder.prototype.write=function(str){var buf=Buffer.alloc(str.length);for(var i=0;i<str.length;i++)buf[i]=this.encodeBuf[str.charCodeAt(i)];return buf;};SBCSEncoder.prototype.end=function(){};function SBCSDecoder(options,codec){this.decodeBuf=codec.decodeBuf;}SBCSDecoder.prototype.write=function(buf){// Strings are immutable in JS -> we use ucs2 buffer to speed up computations.
var decodeBuf=this.decodeBuf;var newBuf=Buffer.alloc(buf.length*2);var idx1=0,idx2=0;for(var i=0;i<buf.length;i++){idx1=buf[i]*2;idx2=i*2;newBuf[idx2]=decodeBuf[idx1];newBuf[idx2+1]=decodeBuf[idx1+1];}return newBuf.toString('ucs2');};SBCSDecoder.prototype.end=function(){};return sbcsCodec;}var sbcsData;var hasRequiredSbcsData;function requireSbcsData(){if(hasRequiredSbcsData)return sbcsData;hasRequiredSbcsData=1;// Manually added data to be used by sbcs codec in addition to generated one.
sbcsData={// Not supported by iconv, not sure why.
"10029":"maccenteuro","maccenteuro":{"type":"_sbcs","chars":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"},"808":"cp808","ibm808":"cp808","cp808":{"type":"_sbcs","chars":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "},"mik":{"type":"_sbcs","chars":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},// Aliases of generated encodings.
"ascii8bit":"ascii","usascii":"ascii","ansix34":"ascii","ansix341968":"ascii","ansix341986":"ascii","csascii":"ascii","cp367":"ascii","ibm367":"ascii","isoir6":"ascii","iso646us":"ascii","iso646irv":"ascii","us":"ascii","latin1":"iso88591","latin2":"iso88592","latin3":"iso88593","latin4":"iso88594","latin5":"iso88599","latin6":"iso885910","latin7":"iso885913","latin8":"iso885914","latin9":"iso885915","latin10":"iso885916","csisolatin1":"iso88591","csisolatin2":"iso88592","csisolatin3":"iso88593","csisolatin4":"iso88594","csisolatincyrillic":"iso88595","csisolatinarabic":"iso88596","csisolatingreek":"iso88597","csisolatinhebrew":"iso88598","csisolatin5":"iso88599","csisolatin6":"iso885910","l1":"iso88591","l2":"iso88592","l3":"iso88593","l4":"iso88594","l5":"iso88599","l6":"iso885910","l7":"iso885913","l8":"iso885914","l9":"iso885915","l10":"iso885916","isoir14":"iso646jp","isoir57":"iso646cn","isoir100":"iso88591","isoir101":"iso88592","isoir109":"iso88593","isoir110":"iso88594","isoir144":"iso88595","isoir127":"iso88596","isoir126":"iso88597","isoir138":"iso88598","isoir148":"iso88599","isoir157":"iso885910","isoir166":"tis620","isoir179":"iso885913","isoir199":"iso885914","isoir203":"iso885915","isoir226":"iso885916","cp819":"iso88591","ibm819":"iso88591","cyrillic":"iso88595","arabic":"iso88596","arabic8":"iso88596","ecma114":"iso88596","asmo708":"iso88596","greek":"iso88597","greek8":"iso88597","ecma118":"iso88597","elot928":"iso88597","hebrew":"iso88598","hebrew8":"iso88598","turkish":"iso88599","turkish8":"iso88599","thai":"iso885911","thai8":"iso885911","celtic":"iso885914","celtic8":"iso885914","isoceltic":"iso885914","tis6200":"tis620","tis62025291":"tis620","tis62025330":"tis620","10000":"macroman","10006":"macgreek","10007":"maccyrillic","10079":"maciceland","10081":"macturkish","cspc8codepage437":"cp437","cspc775baltic":"cp775","cspc850multilingual":"cp850","cspcp852":"cp852","cspc862latinhebrew":"cp862","cpgr":"cp869","msee":"cp1250","mscyrl":"cp1251","msansi":"cp1252","msgreek":"cp1253","msturk":"cp1254","mshebr":"cp1255","msarab":"cp1256","winbaltrim":"cp1257","cp20866":"koi8r","20866":"koi8r","ibm878":"koi8r","cskoi8r":"koi8r","cp21866":"koi8u","21866":"koi8u","ibm1168":"koi8u","strk10482002":"rk1048","tcvn5712":"tcvn","tcvn57121":"tcvn","gb198880":"iso646cn","cn":"iso646cn","csiso14jisc6220ro":"iso646jp","jisc62201969ro":"iso646jp","jp":"iso646jp","cshproman8":"hproman8","r8":"hproman8","roman8":"hproman8","xroman8":"hproman8","ibm1051":"hproman8","mac":"macintosh","csmacintosh":"macintosh"};return sbcsData;}var sbcsDataGenerated;var hasRequiredSbcsDataGenerated;function requireSbcsDataGenerated(){if(hasRequiredSbcsDataGenerated)return sbcsDataGenerated;hasRequiredSbcsDataGenerated=1;// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.
sbcsDataGenerated={"437":"cp437","737":"cp737","775":"cp775","850":"cp850","852":"cp852","855":"cp855","856":"cp856","857":"cp857","858":"cp858","860":"cp860","861":"cp861","862":"cp862","863":"cp863","864":"cp864","865":"cp865","866":"cp866","869":"cp869","874":"windows874","922":"cp922","1046":"cp1046","1124":"cp1124","1125":"cp1125","1129":"cp1129","1133":"cp1133","1161":"cp1161","1162":"cp1162","1163":"cp1163","1250":"windows1250","1251":"windows1251","1252":"windows1252","1253":"windows1253","1254":"windows1254","1255":"windows1255","1256":"windows1256","1257":"windows1257","1258":"windows1258","28591":"iso88591","28592":"iso88592","28593":"iso88593","28594":"iso88594","28595":"iso88595","28596":"iso88596","28597":"iso88597","28598":"iso88598","28599":"iso88599","28600":"iso885910","28601":"iso885911","28603":"iso885913","28604":"iso885914","28605":"iso885915","28606":"iso885916","windows874":{"type":"_sbcs","chars":"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},"win874":"windows874","cp874":"windows874","windows1250":{"type":"_sbcs","chars":"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"},"win1250":"windows1250","cp1250":"windows1250","windows1251":{"type":"_sbcs","chars":"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},"win1251":"windows1251","cp1251":"windows1251","windows1252":{"type":"_sbcs","chars":"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},"win1252":"windows1252","cp1252":"windows1252","windows1253":{"type":"_sbcs","chars":"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"},"win1253":"windows1253","cp1253":"windows1253","windows1254":{"type":"_sbcs","chars":"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"},"win1254":"windows1254","cp1254":"windows1254","windows1255":{"type":"_sbcs","chars":"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"},"win1255":"windows1255","cp1255":"windows1255","windows1256":{"type":"_sbcs","chars":"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"},"win1256":"windows1256","cp1256":"windows1256","windows1257":{"type":"_sbcs","chars":"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"},"win1257":"windows1257","cp1257":"windows1257","windows1258":{"type":"_sbcs","chars":"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},"win1258":"windows1258","cp1258":"windows1258","iso88591":{"type":"_sbcs","chars":" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},"cp28591":"iso88591","iso88592":{"type":"_sbcs","chars":" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"},"cp28592":"iso88592","iso88593":{"type":"_sbcs","chars":" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"},"cp28593":"iso88593","iso88594":{"type":"_sbcs","chars":" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"},"cp28594":"iso88594","iso88595":{"type":"_sbcs","chars":" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"},"cp28595":"iso88595","iso88596":{"type":"_sbcs","chars":" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"},"cp28596":"iso88596","iso88597":{"type":"_sbcs","chars":" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"},"cp28597":"iso88597","iso88598":{"type":"_sbcs","chars":" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"},"cp28598":"iso88598","iso88599":{"type":"_sbcs","chars":" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"},"cp28599":"iso88599","iso885910":{"type":"_sbcs","chars":" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"},"cp28600":"iso885910","iso885911":{"type":"_sbcs","chars":" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},"cp28601":"iso885911","iso885913":{"type":"_sbcs","chars":" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"},"cp28603":"iso885913","iso885914":{"type":"_sbcs","chars":" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"},"cp28604":"iso885914","iso885915":{"type":"_sbcs","chars":" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},"cp28605":"iso885915","iso885916":{"type":"_sbcs","chars":" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"},"cp28606":"iso885916","cp437":{"type":"_sbcs","chars":"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},"ibm437":"cp437","csibm437":"cp437","cp737":{"type":"_sbcs","chars":"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "},"ibm737":"cp737","csibm737":"cp737","cp775":{"type":"_sbcs","chars":"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "},"ibm775":"cp775","csibm775":"cp775","cp850":{"type":"_sbcs","chars":"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "},"ibm850":"cp850","csibm850":"cp850","cp852":{"type":"_sbcs","chars":"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "},"ibm852":"cp852","csibm852":"cp852","cp855":{"type":"_sbcs","chars":"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "},"ibm855":"cp855","csibm855":"cp855","cp856":{"type":"_sbcs","chars":"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "},"ibm856":"cp856","csibm856":"cp856","cp857":{"type":"_sbcs","chars":"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "},"ibm857":"cp857","csibm857":"cp857","cp858":{"type":"_sbcs","chars":"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "},"ibm858":"cp858","csibm858":"cp858","cp860":{"type":"_sbcs","chars":"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},"ibm860":"cp860","csibm860":"cp860","cp861":{"type":"_sbcs","chars":"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},"ibm861":"cp861","csibm861":"cp861","cp862":{"type":"_sbcs","chars":"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},"ibm862":"cp862","csibm862":"cp862","cp863":{"type":"_sbcs","chars":"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},"ibm863":"cp863","csibm863":"cp863","cp864":{"type":"_sbcs","chars":"\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"},"ibm864":"cp864","csibm864":"cp864","cp865":{"type":"_sbcs","chars":"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},"ibm865":"cp865","csibm865":"cp865","cp866":{"type":"_sbcs","chars":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "},"ibm866":"cp866","csibm866":"cp866","cp869":{"type":"_sbcs","chars":"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "},"ibm869":"cp869","csibm869":"cp869","cp922":{"type":"_sbcs","chars":" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"},"ibm922":"cp922","csibm922":"cp922","cp1046":{"type":"_sbcs","chars":"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"},"ibm1046":"cp1046","csibm1046":"cp1046","cp1124":{"type":"_sbcs","chars":" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"},"ibm1124":"cp1124","csibm1124":"cp1124","cp1125":{"type":"_sbcs","chars":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "},"ibm1125":"cp1125","csibm1125":"cp1125","cp1129":{"type":"_sbcs","chars":" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},"ibm1129":"cp1129","csibm1129":"cp1129","cp1133":{"type":"_sbcs","chars":" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"},"ibm1133":"cp1133","csibm1133":"cp1133","cp1161":{"type":"_sbcs","chars":"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "},"ibm1161":"cp1161","csibm1161":"cp1161","cp1162":{"type":"_sbcs","chars":"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},"ibm1162":"cp1162","csibm1162":"cp1162","cp1163":{"type":"_sbcs","chars":" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},"ibm1163":"cp1163","csibm1163":"cp1163","maccroatian":{"type":"_sbcs","chars":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"},"maccyrillic":{"type":"_sbcs","chars":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"},"macgreek":{"type":"_sbcs","chars":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"},"maciceland":{"type":"_sbcs","chars":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},"macroman":{"type":"_sbcs","chars":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},"macromania":{"type":"_sbcs","chars":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},"macthai":{"type":"_sbcs","chars":"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"},"macturkish":{"type":"_sbcs","chars":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"},"macukraine":{"type":"_sbcs","chars":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"},"koi8r":{"type":"_sbcs","chars":"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},"koi8u":{"type":"_sbcs","chars":"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},"koi8ru":{"type":"_sbcs","chars":"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},"koi8t":{"type":"_sbcs","chars":"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},"armscii8":{"type":"_sbcs","chars":" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"},"rk1048":{"type":"_sbcs","chars":"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},"tcvn":{"type":"_sbcs","chars":"\u0000ÚỤ\u0003ỪỬỮ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010ỨỰỲỶỸÝỴ\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"},"georgianacademy":{"type":"_sbcs","chars":"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},"georgianps":{"type":"_sbcs","chars":"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},"pt154":{"type":"_sbcs","chars":"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},"viscii":{"type":"_sbcs","chars":"\u0000\u0001Ẳ\u0003\u0004ẴẪ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013Ỷ\u0015\u0016\u0017\u0018Ỹ\u001a\u001b\u001c\u001dỴ\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"},"iso646cn":{"type":"_sbcs","chars":"\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"},"iso646jp":{"type":"_sbcs","chars":"\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"},"hproman8":{"type":"_sbcs","chars":" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"},"macintosh":{"type":"_sbcs","chars":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},"ascii":{"type":"_sbcs","chars":"��������������������������������������������������������������������������������������������������������������������������������"},"tis620":{"type":"_sbcs","chars":"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"}};return sbcsDataGenerated;}var dbcsCodec={};var hasRequiredDbcsCodec;function requireDbcsCodec(){if(hasRequiredDbcsCodec)return dbcsCodec;hasRequiredDbcsCodec=1;var Buffer=requireSafer().Buffer;// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.
// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.
// To save memory and loading time, we read table files only when requested.
dbcsCodec._dbcs=DBCSCodec;var UNASSIGNED=-1,GB18030_CODE=-2,SEQ_START=-10,NODE_START=-1000,UNASSIGNED_NODE=new Array(0x100),DEF_CHAR=-1;for(var i=0;i<0x100;i++)UNASSIGNED_NODE[i]=UNASSIGNED;// Class DBCSCodec reads and initializes mapping tables.
function DBCSCodec(codecOptions,iconv){this.encodingName=codecOptions.encodingName;if(!codecOptions)throw new Error("DBCS codec is called without the data.");if(!codecOptions.table)throw new Error("Encoding '"+this.encodingName+"' has no data.");// Load tables.
var mappingTable=codecOptions.table();// Decode tables: MBCS -> Unicode.
// decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.
// Trie root is decodeTables[0].
// Values: >=  0 -> unicode character code. can be > 0xFFFF
//         == UNASSIGNED -> unknown/unassigned sequence.
//         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.
//         <= NODE_START -> index of the next node in our trie to process next byte.
//         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.
this.decodeTables=[];this.decodeTables[0]=UNASSIGNED_NODE.slice(0);// Create root node.
// Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. 
this.decodeTableSeq=[];// Actual mapping tables consist of chunks. Use them to fill up decode tables.
for(var i=0;i<mappingTable.length;i++)this._addDecodeChunk(mappingTable[i]);this.defaultCharUnicode=iconv.defaultCharUnicode;// Encode tables: Unicode -> DBCS.
// `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.
// Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.
// Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).
//         == UNASSIGNED -> no conversion found. Output a default char.
//         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.
this.encodeTable=[];// `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of
// objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key
// means end of sequence (needed when one sequence is a strict subsequence of another).
// Objects are kept separately from encodeTable to increase performance.
this.encodeTableSeq=[];// Some chars can be decoded, but need not be encoded.
var skipEncodeChars={};if(codecOptions.encodeSkipVals)for(var i=0;i<codecOptions.encodeSkipVals.length;i++){var val=codecOptions.encodeSkipVals[i];if(typeof val==='number')skipEncodeChars[val]=true;else for(var j=val.from;j<=val.to;j++)skipEncodeChars[j]=true;}// Use decode trie to recursively fill out encode tables.
this._fillEncodeTable(0,0,skipEncodeChars);// Add more encoding pairs when needed.
if(codecOptions.encodeAdd){for(var uChar in codecOptions.encodeAdd)if(Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd,uChar))this._setEncodeChar(uChar.charCodeAt(0),codecOptions.encodeAdd[uChar]);}this.defCharSB=this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];if(this.defCharSB===UNASSIGNED)this.defCharSB=this.encodeTable[0]['?'];if(this.defCharSB===UNASSIGNED)this.defCharSB="?".charCodeAt(0);// Load & create GB18030 tables when needed.
if(typeof codecOptions.gb18030==='function'){this.gb18030=codecOptions.gb18030();// Load GB18030 ranges.
// Add GB18030 decode tables.
var thirdByteNodeIdx=this.decodeTables.length;var thirdByteNode=this.decodeTables[thirdByteNodeIdx]=UNASSIGNED_NODE.slice(0);var fourthByteNodeIdx=this.decodeTables.length;var fourthByteNode=this.decodeTables[fourthByteNodeIdx]=UNASSIGNED_NODE.slice(0);for(var i=0x81;i<=0xFE;i++){var secondByteNodeIdx=NODE_START-this.decodeTables[0][i];var secondByteNode=this.decodeTables[secondByteNodeIdx];for(var j=0x30;j<=0x39;j++)secondByteNode[j]=NODE_START-thirdByteNodeIdx;}for(var i=0x81;i<=0xFE;i++)thirdByteNode[i]=NODE_START-fourthByteNodeIdx;for(var i=0x30;i<=0x39;i++)fourthByteNode[i]=GB18030_CODE;}}DBCSCodec.prototype.encoder=DBCSEncoder;DBCSCodec.prototype.decoder=DBCSDecoder;// Decoder helpers
DBCSCodec.prototype._getDecodeTrieNode=function(addr){var bytes=[];for(;addr>0;addr>>=8)bytes.push(addr&0xFF);if(bytes.length==0)bytes.push(0);var node=this.decodeTables[0];for(var i=bytes.length-1;i>0;i--){// Traverse nodes deeper into the trie.
var val=node[bytes[i]];if(val==UNASSIGNED){// Create new node.
node[bytes[i]]=NODE_START-this.decodeTables.length;this.decodeTables.push(node=UNASSIGNED_NODE.slice(0));}else if(val<=NODE_START){// Existing node.
node=this.decodeTables[NODE_START-val];}else throw new Error("Overwrite byte in "+this.encodingName+", addr: "+addr.toString(16));}return node;};DBCSCodec.prototype._addDecodeChunk=function(chunk){// First element of chunk is the hex mbcs code where we start.
var curAddr=parseInt(chunk[0],16);// Choose the decoding node where we'll write our chars.
var writeTable=this._getDecodeTrieNode(curAddr);curAddr=curAddr&0xFF;// Write all other elements of the chunk to the table.
for(var k=1;k<chunk.length;k++){var part=chunk[k];if(typeof part==="string"){// String, write as-is.
for(var l=0;l<part.length;){var code=part.charCodeAt(l++);if(0xD800<=code&&code<0xDC00){// Decode surrogate
var codeTrail=part.charCodeAt(l++);if(0xDC00<=codeTrail&&codeTrail<0xE000)writeTable[curAddr++]=0x10000+(code-0xD800)*0x400+(codeTrail-0xDC00);else throw new Error("Incorrect surrogate pair in "+this.encodingName+" at chunk "+chunk[0]);}else if(0x0FF0<code&&code<=0x0FFF){// Character sequence (our own encoding used)
var len=0xFFF-code+2;var seq=[];for(var m=0;m<len;m++)seq.push(part.charCodeAt(l++));// Simple variation: don't support surrogates or subsequences in seq.
writeTable[curAddr++]=SEQ_START-this.decodeTableSeq.length;this.decodeTableSeq.push(seq);}else writeTable[curAddr++]=code;// Basic char
}}else if(typeof part==="number"){// Integer, meaning increasing sequence starting with prev character.
var charCode=writeTable[curAddr-1]+1;for(var l=0;l<part;l++)writeTable[curAddr++]=charCode++;}else throw new Error("Incorrect type '"+typeof part+"' given in "+this.encodingName+" at chunk "+chunk[0]);}if(curAddr>0xFF)throw new Error("Incorrect chunk in "+this.encodingName+" at addr "+chunk[0]+": too long"+curAddr);};// Encoder helpers
DBCSCodec.prototype._getEncodeBucket=function(uCode){var high=uCode>>8;// This could be > 0xFF because of astral characters.
if(this.encodeTable[high]===undefined)this.encodeTable[high]=UNASSIGNED_NODE.slice(0);// Create bucket on demand.
return this.encodeTable[high];};DBCSCodec.prototype._setEncodeChar=function(uCode,dbcsCode){var bucket=this._getEncodeBucket(uCode);var low=uCode&0xFF;if(bucket[low]<=SEQ_START)this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR]=dbcsCode;// There's already a sequence, set a single-char subsequence of it.
else if(bucket[low]==UNASSIGNED)bucket[low]=dbcsCode;};DBCSCodec.prototype._setEncodeSequence=function(seq,dbcsCode){// Get the root of character tree according to first character of the sequence.
var uCode=seq[0];var bucket=this._getEncodeBucket(uCode);var low=uCode&0xFF;var node;if(bucket[low]<=SEQ_START){// There's already a sequence with  - use it.
node=this.encodeTableSeq[SEQ_START-bucket[low]];}else{// There was no sequence object - allocate a new one.
node={};if(bucket[low]!==UNASSIGNED)node[DEF_CHAR]=bucket[low];// If a char was set before - make it a single-char subsequence.
bucket[low]=SEQ_START-this.encodeTableSeq.length;this.encodeTableSeq.push(node);}// Traverse the character tree, allocating new nodes as needed.
for(var j=1;j<seq.length-1;j++){var oldVal=node[uCode];if(typeof oldVal==='object')node=oldVal;else{node=node[uCode]={};if(oldVal!==undefined)node[DEF_CHAR]=oldVal;}}// Set the leaf to given dbcsCode.
uCode=seq[seq.length-1];node[uCode]=dbcsCode;};DBCSCodec.prototype._fillEncodeTable=function(nodeIdx,prefix,skipEncodeChars){var node=this.decodeTables[nodeIdx];for(var i=0;i<0x100;i++){var uCode=node[i];var mbCode=prefix+i;if(skipEncodeChars[mbCode])continue;if(uCode>=0)this._setEncodeChar(uCode,mbCode);else if(uCode<=NODE_START)this._fillEncodeTable(NODE_START-uCode,mbCode<<8,skipEncodeChars);else if(uCode<=SEQ_START)this._setEncodeSequence(this.decodeTableSeq[SEQ_START-uCode],mbCode);}};// == Encoder ==================================================================
function DBCSEncoder(options,codec){// Encoder state
this.leadSurrogate=-1;this.seqObj=undefined;// Static data
this.encodeTable=codec.encodeTable;this.encodeTableSeq=codec.encodeTableSeq;this.defaultCharSingleByte=codec.defCharSB;this.gb18030=codec.gb18030;}DBCSEncoder.prototype.write=function(str){var newBuf=Buffer.alloc(str.length*(this.gb18030?4:3)),leadSurrogate=this.leadSurrogate,seqObj=this.seqObj,nextChar=-1,i=0,j=0;while(true){// 0. Get next character.
if(nextChar===-1){if(i==str.length)break;var uCode=str.charCodeAt(i++);}else{var uCode=nextChar;nextChar=-1;}// 1. Handle surrogates.
if(0xD800<=uCode&&uCode<0xE000){// Char is one of surrogates.
if(uCode<0xDC00){// We've got lead surrogate.
if(leadSurrogate===-1){leadSurrogate=uCode;continue;}else{leadSurrogate=uCode;// Double lead surrogate found.
uCode=UNASSIGNED;}}else{// We've got trail surrogate.
if(leadSurrogate!==-1){uCode=0x10000+(leadSurrogate-0xD800)*0x400+(uCode-0xDC00);leadSurrogate=-1;}else{// Incomplete surrogate pair - only trail surrogate found.
uCode=UNASSIGNED;}}}else if(leadSurrogate!==-1){// Incomplete surrogate pair - only lead surrogate found.
nextChar=uCode;uCode=UNASSIGNED;// Write an error, then current char.
leadSurrogate=-1;}// 2. Convert uCode character.
var dbcsCode=UNASSIGNED;if(seqObj!==undefined&&uCode!=UNASSIGNED){// We are in the middle of the sequence
var resCode=seqObj[uCode];if(typeof resCode==='object'){// Sequence continues.
seqObj=resCode;continue;}else if(typeof resCode=='number'){// Sequence finished. Write it.
dbcsCode=resCode;}else if(resCode==undefined){// Current character is not part of the sequence.
// Try default character for this sequence
resCode=seqObj[DEF_CHAR];if(resCode!==undefined){dbcsCode=resCode;// Found. Write it.
nextChar=uCode;// Current character will be written too in the next iteration.
}}seqObj=undefined;}else if(uCode>=0){// Regular character
var subtable=this.encodeTable[uCode>>8];if(subtable!==undefined)dbcsCode=subtable[uCode&0xFF];if(dbcsCode<=SEQ_START){// Sequence start
seqObj=this.encodeTableSeq[SEQ_START-dbcsCode];continue;}if(dbcsCode==UNASSIGNED&&this.gb18030){// Use GB18030 algorithm to find character(s) to write.
var idx=findIdx(this.gb18030.uChars,uCode);if(idx!=-1){var dbcsCode=this.gb18030.gbChars[idx]+(uCode-this.gb18030.uChars[idx]);newBuf[j++]=0x81+Math.floor(dbcsCode/12600);dbcsCode=dbcsCode%12600;newBuf[j++]=0x30+Math.floor(dbcsCode/1260);dbcsCode=dbcsCode%1260;newBuf[j++]=0x81+Math.floor(dbcsCode/10);dbcsCode=dbcsCode%10;newBuf[j++]=0x30+dbcsCode;continue;}}}// 3. Write dbcsCode character.
if(dbcsCode===UNASSIGNED)dbcsCode=this.defaultCharSingleByte;if(dbcsCode<0x100){newBuf[j++]=dbcsCode;}else if(dbcsCode<0x10000){newBuf[j++]=dbcsCode>>8;// high byte
newBuf[j++]=dbcsCode&0xFF;// low byte
}else{newBuf[j++]=dbcsCode>>16;newBuf[j++]=dbcsCode>>8&0xFF;newBuf[j++]=dbcsCode&0xFF;}}this.seqObj=seqObj;this.leadSurrogate=leadSurrogate;return newBuf.slice(0,j);};DBCSEncoder.prototype.end=function(){if(this.leadSurrogate===-1&&this.seqObj===undefined)return;// All clean. Most often case.
var newBuf=Buffer.alloc(10),j=0;if(this.seqObj){// We're in the sequence.
var dbcsCode=this.seqObj[DEF_CHAR];if(dbcsCode!==undefined){// Write beginning of the sequence.
if(dbcsCode<0x100){newBuf[j++]=dbcsCode;}else{newBuf[j++]=dbcsCode>>8;// high byte
newBuf[j++]=dbcsCode&0xFF;// low byte
}}this.seqObj=undefined;}if(this.leadSurrogate!==-1){// Incomplete surrogate pair - only lead surrogate found.
newBuf[j++]=this.defaultCharSingleByte;this.leadSurrogate=-1;}return newBuf.slice(0,j);};// Export for testing
DBCSEncoder.prototype.findIdx=findIdx;// == Decoder ==================================================================
function DBCSDecoder(options,codec){// Decoder state
this.nodeIdx=0;this.prevBuf=Buffer.alloc(0);// Static data
this.decodeTables=codec.decodeTables;this.decodeTableSeq=codec.decodeTableSeq;this.defaultCharUnicode=codec.defaultCharUnicode;this.gb18030=codec.gb18030;}DBCSDecoder.prototype.write=function(buf){var newBuf=Buffer.alloc(buf.length*2),nodeIdx=this.nodeIdx,prevBuf=this.prevBuf,prevBufOffset=this.prevBuf.length,seqStart=-this.prevBuf.length,// idx of the start of current parsed sequence.
uCode;if(prevBufOffset>0)// Make prev buf overlap a little to make it easier to slice later.
prevBuf=Buffer.concat([prevBuf,buf.slice(0,10)]);for(var i=0,j=0;i<buf.length;i++){var curByte=i>=0?buf[i]:prevBuf[i+prevBufOffset];// Lookup in current trie node.
var uCode=this.decodeTables[nodeIdx][curByte];if(uCode>=0);else if(uCode===UNASSIGNED){// Unknown char.
// TODO: Callback with seq.
//var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);
i=seqStart;// Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).
uCode=this.defaultCharUnicode.charCodeAt(0);}else if(uCode===GB18030_CODE){var curSeq=seqStart>=0?buf.slice(seqStart,i+1):prevBuf.slice(seqStart+prevBufOffset,i+1+prevBufOffset);var ptr=(curSeq[0]-0x81)*12600+(curSeq[1]-0x30)*1260+(curSeq[2]-0x81)*10+(curSeq[3]-0x30);var idx=findIdx(this.gb18030.gbChars,ptr);uCode=this.gb18030.uChars[idx]+ptr-this.gb18030.gbChars[idx];}else if(uCode<=NODE_START){// Go to next trie node.
nodeIdx=NODE_START-uCode;continue;}else if(uCode<=SEQ_START){// Output a sequence of chars.
var seq=this.decodeTableSeq[SEQ_START-uCode];for(var k=0;k<seq.length-1;k++){uCode=seq[k];newBuf[j++]=uCode&0xFF;newBuf[j++]=uCode>>8;}uCode=seq[seq.length-1];}else throw new Error("iconv-lite internal error: invalid decoding table value "+uCode+" at "+nodeIdx+"/"+curByte);// Write the character to buffer, handling higher planes using surrogate pair.
if(uCode>0xFFFF){uCode-=0x10000;var uCodeLead=0xD800+Math.floor(uCode/0x400);newBuf[j++]=uCodeLead&0xFF;newBuf[j++]=uCodeLead>>8;uCode=0xDC00+uCode%0x400;}newBuf[j++]=uCode&0xFF;newBuf[j++]=uCode>>8;// Reset trie node.
nodeIdx=0;seqStart=i+1;}this.nodeIdx=nodeIdx;this.prevBuf=seqStart>=0?buf.slice(seqStart):prevBuf.slice(seqStart+prevBufOffset);return newBuf.slice(0,j).toString('ucs2');};DBCSDecoder.prototype.end=function(){var ret='';// Try to parse all remaining chars.
while(this.prevBuf.length>0){// Skip 1 character in the buffer.
ret+=this.defaultCharUnicode;var buf=this.prevBuf.slice(1);// Parse remaining as usual.
this.prevBuf=Buffer.alloc(0);this.nodeIdx=0;if(buf.length>0)ret+=this.write(buf);}this.nodeIdx=0;return ret;};// Binary search for GB18030. Returns largest i such that table[i] <= val.
function findIdx(table,val){if(table[0]>val)return-1;var l=0,r=table.length;while(l<r-1){// always table[l] <= val < table[r]
var mid=l+Math.floor((r-l+1)/2);if(table[mid]<=val)l=mid;else r=mid;}return l;}return dbcsCodec;}var require$$0=[["0","\u0000",128],["a1","｡",62],["8140","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×"],["8180","÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"],["81b8","∈∋⊆⊇⊂⊃∪∩"],["81c8","∧∨￢⇒⇔∀∃"],["81da","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["81f0","Å‰♯♭♪†‡¶"],["81fc","◯"],["824f","０",9],["8260","Ａ",25],["8281","ａ",25],["829f","ぁ",82],["8340","ァ",62],["8380","ム",22],["839f","Α",16,"Σ",6],["83bf","α",16,"σ",6],["8440","А",5,"ЁЖ",25],["8470","а",5,"ёж",7],["8480","о",17],["849f","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["8740","①",19,"Ⅰ",9],["875f","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["877e","㍻"],["8780","〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["889f","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["8940","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"],["8980","園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["8a40","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"],["8a80","橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["8b40","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"],["8b80","朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["8c40","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"],["8c80","劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["8d40","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"],["8d80","項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["8e40","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"],["8e80","死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["8f40","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"],["8f80","準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["9040","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"],["9080","逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["9140","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"],["9180","操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["9240","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"],["9280","逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["9340","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"],["9380","凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["9440","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"],["9480","楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["9540","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"],["9580","斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["9640","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"],["9680","摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["9740","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"],["9780","沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["9840","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["989f","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["9940","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"],["9980","凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["9a40","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"],["9a80","噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["9b40","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"],["9b80","它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["9c40","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"],["9c80","怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["9d40","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"],["9d80","捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["9e40","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"],["9e80","梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["9f40","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"],["9f80","麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["e040","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"],["e080","烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e140","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"],["e180","痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e240","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"],["e280","窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e340","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"],["e380","縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e440","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"],["e480","艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e540","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"],["e580","蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["e640","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"],["e680","諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["e740","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"],["e780","轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["e840","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"],["e880","閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["e940","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"],["e980","騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["ea40","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"],["ea80","黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"],["ed40","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"],["ed80","塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["ee40","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"],["ee80","蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["eeef","ⅰ",9,"￢￤＇＂"],["f040","",62],["f080","",124],["f140","",62],["f180","",124],["f240","",62],["f280","",124],["f340","",62],["f380","",124],["f440","",62],["f480","",124],["f540","",62],["f580","",124],["f640","",62],["f680","",124],["f740","",62],["f780","",124],["f840","",62],["f880","",124],["f940",""],["fa40","ⅰ",9,"Ⅰ",9,"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"],["fa80","兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"],["fb40","涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"],["fb80","祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"],["fc40","髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"]];var require$$1=[["0","\u0000",127],["8ea1","｡",62],["a1a1","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"],["a2a1","◆□■△▲▽▼※〒→←↑↓〓"],["a2ba","∈∋⊆⊇⊂⊃∪∩"],["a2ca","∧∨￢⇒⇔∀∃"],["a2dc","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["a2f2","Å‰♯♭♪†‡¶"],["a2fe","◯"],["a3b0","０",9],["a3c1","Ａ",25],["a3e1","ａ",25],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a8a1","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["ada1","①",19,"Ⅰ",9],["adc0","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["addf","㍻〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["b0a1","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["b1a1","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"],["b2a1","押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["b3a1","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"],["b4a1","粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["b5a1","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"],["b6a1","供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["b7a1","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"],["b8a1","検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["b9a1","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"],["baa1","此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["bba1","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"],["bca1","次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["bda1","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"],["bea1","勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["bfa1","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"],["c0a1","澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["c1a1","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"],["c2a1","臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["c3a1","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"],["c4a1","帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["c5a1","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"],["c6a1","董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["c7a1","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"],["c8a1","函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["c9a1","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"],["caa1","福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["cba1","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"],["cca1","漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["cda1","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"],["cea1","痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["cfa1","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["d0a1","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["d1a1","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"],["d2a1","辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["d3a1","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"],["d4a1","圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["d5a1","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"],["d6a1","屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["d7a1","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"],["d8a1","悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["d9a1","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"],["daa1","據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["dba1","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"],["dca1","棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["dda1","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"],["dea1","沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["dfa1","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"],["e0a1","燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e1a1","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"],["e2a1","癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e3a1","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"],["e4a1","筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e5a1","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"],["e6a1","罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e7a1","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"],["e8a1","茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e9a1","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"],["eaa1","蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["eba1","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"],["eca1","譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["eda1","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"],["eea1","遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["efa1","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"],["f0a1","陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["f1a1","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"],["f2a1","髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["f3a1","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"],["f4a1","堯槇遙瑤凜熙"],["f9a1","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"],["faa1","忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["fba1","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"],["fca1","釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["fcf1","ⅰ",9,"￢￤＇＂"],["8fa2af","˘ˇ¸˙˝¯˛˚～΄΅"],["8fa2c2","¡¦¿"],["8fa2eb","ºª©®™¤№"],["8fa6e1","ΆΈΉΊΪ"],["8fa6e7","Ό"],["8fa6e9","ΎΫ"],["8fa6ec","Ώ"],["8fa6f1","άέήίϊΐόςύϋΰώ"],["8fa7c2","Ђ",10,"ЎЏ"],["8fa7f2","ђ",10,"ўџ"],["8fa9a1","ÆĐ"],["8fa9a4","Ħ"],["8fa9a6","Ĳ"],["8fa9a8","ŁĿ"],["8fa9ab","ŊØŒ"],["8fa9af","ŦÞ"],["8fa9c1","æđðħıĳĸłŀŉŋøœßŧþ"],["8faaa1","ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"],["8faaba","ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"],["8faba1","áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"],["8fabbd","ġĥíìïîǐ"],["8fabc5","īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"],["8fb0a1","丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"],["8fb1a1","侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"],["8fb2a1","傒傓傔傖傛傜傞",4,"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"],["8fb3a1","凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"],["8fb4a1","匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"],["8fb5a1","咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"],["8fb6a1","嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍",5,"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤",4,"囱囫园"],["8fb7a1","囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭",4,"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"],["8fb8a1","堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"],["8fb9a1","奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"],["8fbaa1","嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖",4,"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"],["8fbba1","屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"],["8fbca1","巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪",4,"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"],["8fbda1","彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐",4,"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"],["8fbea1","悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐",4,"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"],["8fbfa1","懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"],["8fc0a1","捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"],["8fc1a1","擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"],["8fc2a1","昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"],["8fc3a1","杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮",4,"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"],["8fc4a1","棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"],["8fc5a1","樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"],["8fc6a1","歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"],["8fc7a1","泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"],["8fc8a1","湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"],["8fc9a1","濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔",4,"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃",4,"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"],["8fcaa1","煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"],["8fcba1","狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"],["8fcca1","珿琀琁琄琇琊琑琚琛琤琦琨",9,"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"],["8fcda1","甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹",5,"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"],["8fcea1","瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢",6,"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"],["8fcfa1","睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"],["8fd0a1","碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"],["8fd1a1","秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"],["8fd2a1","笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙",5],["8fd3a1","籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"],["8fd4a1","綞綦綧綪綳綶綷綹緂",4,"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"],["8fd5a1","罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"],["8fd6a1","胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"],["8fd7a1","艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"],["8fd8a1","荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"],["8fd9a1","蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏",4,"蕖蕙蕜",6,"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"],["8fdaa1","藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠",4,"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"],["8fdba1","蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃",6,"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"],["8fdca1","蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊",4,"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"],["8fdda1","襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔",4,"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"],["8fdea1","誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂",4,"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"],["8fdfa1","貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"],["8fe0a1","踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"],["8fe1a1","轃轇轏轑",4,"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"],["8fe2a1","郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"],["8fe3a1","釂釃釅釓釔釗釙釚釞釤釥釩釪釬",5,"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵",4,"鉻鉼鉽鉿銈銉銊銍銎銒銗"],["8fe4a1","銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿",4,"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"],["8fe5a1","鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉",4,"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"],["8fe6a1","镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"],["8fe7a1","霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"],["8fe8a1","頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱",4,"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"],["8fe9a1","馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿",4],["8feaa1","鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪",4,"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"],["8feba1","鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦",4,"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"],["8feca1","鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"],["8feda1","黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃",4,"齓齕齖齗齘齚齝齞齨齩齭",4,"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"]];var require$$2=[["0","\u0000",127,"€"],["8140","丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪",5,"乲乴",9,"乿",6,"亇亊"],["8180","亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂",6,"伋伌伒",4,"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾",4,"佄佅佇",5,"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"],["8240","侤侫侭侰",4,"侶",8,"俀俁係俆俇俈俉俋俌俍俒",4,"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿",11],["8280","個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯",10,"倻倽倿偀偁偂偄偅偆偉偊偋偍偐",4,"偖偗偘偙偛偝",7,"偦",5,"偭",8,"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎",20,"傤傦傪傫傭",4,"傳",6,"傼"],["8340","傽",17,"僐",5,"僗僘僙僛",10,"僨僩僪僫僯僰僱僲僴僶",4,"僼",9,"儈"],["8380","儉儊儌",5,"儓",13,"儢",28,"兂兇兊兌兎兏児兒兓兗兘兙兛兝",4,"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦",4,"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒",5],["8440","凘凙凚凜凞凟凢凣凥",5,"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄",5,"剋剎剏剒剓剕剗剘"],["8480","剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳",9,"剾劀劃",4,"劉",6,"劑劒劔",6,"劜劤劥劦劧劮劯劰労",9,"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務",5,"勠勡勢勣勥",10,"勱",7,"勻勼勽匁匂匃匄匇匉匊匋匌匎"],["8540","匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯",9,"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"],["8580","厐",4,"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯",6,"厷厸厹厺厼厽厾叀參",4,"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝",4,"呣呥呧呩",7,"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"],["8640","咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠",4,"哫哬哯哰哱哴",5,"哻哾唀唂唃唄唅唈唊",4,"唒唓唕",5,"唜唝唞唟唡唥唦"],["8680","唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋",4,"啑啒啓啔啗",4,"啝啞啟啠啢啣啨啩啫啯",5,"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠",6,"喨",8,"喲喴営喸喺喼喿",4,"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗",4,"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸",4,"嗿嘂嘃嘄嘅"],["8740","嘆嘇嘊嘋嘍嘐",7,"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀",11,"噏",4,"噕噖噚噛噝",4],["8780","噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽",7,"嚇",6,"嚐嚑嚒嚔",14,"嚤",10,"嚰",6,"嚸嚹嚺嚻嚽",12,"囋",8,"囕囖囘囙囜団囥",5,"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國",6],["8840","園",9,"圝圞圠圡圢圤圥圦圧圫圱圲圴",4,"圼圽圿坁坃坄坅坆坈坉坋坒",4,"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"],["8880","垁垇垈垉垊垍",4,"垔",6,"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹",8,"埄",6,"埌埍埐埑埓埖埗埛埜埞埡埢埣埥",7,"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥",4,"堫",4,"報堲堳場堶",7],["8940","堾",5,"塅",6,"塎塏塐塒塓塕塖塗塙",4,"塟",5,"塦",4,"塭",16,"塿墂墄墆墇墈墊墋墌"],["8980","墍",4,"墔",4,"墛墜墝墠",7,"墪",17,"墽墾墿壀壂壃壄壆",10,"壒壓壔壖",13,"壥",5,"壭壯壱売壴壵壷壸壺",7,"夃夅夆夈",4,"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"],["8a40","夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛",4,"奡奣奤奦",12,"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"],["8a80","妧妬妭妰妱妳",5,"妺妼妽妿",6,"姇姈姉姌姍姎姏姕姖姙姛姞",4,"姤姦姧姩姪姫姭",11,"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪",6,"娳娵娷",4,"娽娾娿婁",4,"婇婈婋",9,"婖婗婘婙婛",5],["8b40","婡婣婤婥婦婨婩婫",8,"婸婹婻婼婽婾媀",17,"媓",6,"媜",13,"媫媬"],["8b80","媭",4,"媴媶媷媹",4,"媿嫀嫃",5,"嫊嫋嫍",4,"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬",4,"嫲",22,"嬊",11,"嬘",25,"嬳嬵嬶嬸",7,"孁",6],["8c40","孈",7,"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"],["8c80","寑寔",8,"寠寢寣實寧審",4,"寯寱",6,"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧",6,"屰屲",6,"屻屼屽屾岀岃",4,"岉岊岋岎岏岒岓岕岝",4,"岤",4],["8d40","岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅",5,"峌",5,"峓",5,"峚",6,"峢峣峧峩峫峬峮峯峱",9,"峼",4],["8d80","崁崄崅崈",5,"崏",4,"崕崗崘崙崚崜崝崟",4,"崥崨崪崫崬崯",4,"崵",7,"崿",7,"嵈嵉嵍",10,"嵙嵚嵜嵞",10,"嵪嵭嵮嵰嵱嵲嵳嵵",12,"嶃",21,"嶚嶛嶜嶞嶟嶠"],["8e40","嶡",21,"嶸",12,"巆",6,"巎",12,"巜巟巠巣巤巪巬巭"],["8e80","巰巵巶巸",4,"巿帀帄帇帉帊帋帍帎帒帓帗帞",7,"帨",4,"帯帰帲",4,"帹帺帾帿幀幁幃幆",5,"幍",6,"幖",4,"幜幝幟幠幣",14,"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨",4,"庮",4,"庴庺庻庼庽庿",6],["8f40","廆廇廈廋",5,"廔廕廗廘廙廚廜",11,"廩廫",8,"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"],["8f80","弨弫弬弮弰弲",6,"弻弽弾弿彁",14,"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢",5,"復徫徬徯",5,"徶徸徹徺徻徾",4,"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"],["9040","怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰",4,"怶",4,"怽怾恀恄",6,"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"],["9080","悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽",7,"惇惈惉惌",4,"惒惓惔惖惗惙惛惞惡",4,"惪惱惲惵惷惸惻",4,"愂愃愄愅愇愊愋愌愐",4,"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬",18,"慀",6],["9140","慇慉態慍慏慐慒慓慔慖",6,"慞慟慠慡慣慤慥慦慩",6,"慱慲慳慴慶慸",18,"憌憍憏",4,"憕"],["9180","憖",6,"憞",8,"憪憫憭",9,"憸",5,"憿懀懁懃",4,"應懌",4,"懓懕",16,"懧",13,"懶",8,"戀",5,"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸",4,"扂扄扅扆扊"],["9240","扏扐払扖扗扙扚扜",6,"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋",5,"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"],["9280","拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳",5,"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖",7,"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙",6,"採掤掦掫掯掱掲掵掶掹掻掽掿揀"],["9340","揁揂揃揅揇揈揊揋揌揑揓揔揕揗",6,"揟揢揤",4,"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆",4,"損搎搑搒搕",5,"搝搟搢搣搤"],["9380","搥搧搨搩搫搮",5,"搵",4,"搻搼搾摀摂摃摉摋",6,"摓摕摖摗摙",4,"摟",7,"摨摪摫摬摮",9,"摻",6,"撃撆撈",8,"撓撔撗撘撚撛撜撝撟",4,"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆",6,"擏擑擓擔擕擖擙據"],["9440","擛擜擝擟擠擡擣擥擧",24,"攁",7,"攊",7,"攓",4,"攙",8],["9480","攢攣攤攦",4,"攬攭攰攱攲攳攷攺攼攽敀",4,"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數",14,"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱",7,"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘",7,"旡旣旤旪旫"],["9540","旲旳旴旵旸旹旻",4,"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷",4,"昽昿晀時晄",6,"晍晎晐晑晘"],["9580","晙晛晜晝晞晠晢晣晥晧晩",4,"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘",4,"暞",8,"暩",4,"暯",4,"暵暶暷暸暺暻暼暽暿",25,"曚曞",7,"曧曨曪",5,"曱曵曶書曺曻曽朁朂會"],["9640","朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠",5,"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗",4,"杝杢杣杤杦杧杫杬杮東杴杶"],["9680","杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹",7,"柂柅",9,"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵",7,"柾栁栂栃栄栆栍栐栒栔栕栘",4,"栞栟栠栢",6,"栫",6,"栴栵栶栺栻栿桇桋桍桏桒桖",5],["9740","桜桝桞桟桪桬",7,"桵桸",8,"梂梄梇",7,"梐梑梒梔梕梖梘",9,"梣梤梥梩梪梫梬梮梱梲梴梶梷梸"],["9780","梹",6,"棁棃",5,"棊棌棎棏棐棑棓棔棖棗棙棛",4,"棡棢棤",9,"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆",4,"椌椏椑椓",11,"椡椢椣椥",7,"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃",16,"楕楖楘楙楛楜楟"],["9840","楡楢楤楥楧楨楩楪楬業楯楰楲",4,"楺楻楽楾楿榁榃榅榊榋榌榎",5,"榖榗榙榚榝",9,"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"],["9880","榾榿槀槂",7,"構槍槏槑槒槓槕",5,"槜槝槞槡",11,"槮槯槰槱槳",9,"槾樀",9,"樋",11,"標",5,"樠樢",5,"権樫樬樭樮樰樲樳樴樶",6,"樿",4,"橅橆橈",7,"橑",6,"橚"],["9940","橜",4,"橢橣橤橦",10,"橲",6,"橺橻橽橾橿檁檂檃檅",8,"檏檒",4,"檘",7,"檡",5],["9980","檧檨檪檭",114,"欥欦欨",6],["9a40","欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍",11,"歚",7,"歨歩歫",13,"歺歽歾歿殀殅殈"],["9a80","殌殎殏殐殑殔殕殗殘殙殜",4,"殢",7,"殫",7,"殶殸",6,"毀毃毄毆",4,"毌毎毐毑毘毚毜",4,"毢",7,"毬毭毮毰毱毲毴毶毷毸毺毻毼毾",6,"氈",4,"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋",4,"汑汒汓汖汘"],["9b40","汙汚汢汣汥汦汧汫",4,"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"],["9b80","泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟",5,"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽",4,"涃涄涆涇涊涋涍涏涐涒涖",4,"涜涢涥涬涭涰涱涳涴涶涷涹",5,"淁淂淃淈淉淊"],["9c40","淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽",7,"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"],["9c80","渶渷渹渻",7,"湅",7,"湏湐湑湒湕湗湙湚湜湝湞湠",10,"湬湭湯",14,"満溁溂溄溇溈溊",4,"溑",6,"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪",5],["9d40","滰滱滲滳滵滶滷滸滺",7,"漃漄漅漇漈漊",4,"漐漑漒漖",9,"漡漢漣漥漦漧漨漬漮漰漲漴漵漷",6,"漿潀潁潂"],["9d80","潃潄潅潈潉潊潌潎",9,"潙潚潛潝潟潠潡潣潤潥潧",5,"潯潰潱潳潵潶潷潹潻潽",6,"澅澆澇澊澋澏",12,"澝澞澟澠澢",4,"澨",10,"澴澵澷澸澺",5,"濁濃",5,"濊",6,"濓",10,"濟濢濣濤濥"],["9e40","濦",7,"濰",32,"瀒",7,"瀜",6,"瀤",6],["9e80","瀫",9,"瀶瀷瀸瀺",17,"灍灎灐",13,"灟",11,"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞",12,"炰炲炴炵炶為炾炿烄烅烆烇烉烋",12,"烚"],["9f40","烜烝烞烠烡烢烣烥烪烮烰",6,"烸烺烻烼烾",10,"焋",4,"焑焒焔焗焛",10,"焧",7,"焲焳焴"],["9f80","焵焷",13,"煆煇煈煉煋煍煏",12,"煝煟",4,"煥煩",4,"煯煰煱煴煵煶煷煹煻煼煾",5,"熅",4,"熋熌熍熎熐熑熒熓熕熖熗熚",4,"熡",6,"熩熪熫熭",5,"熴熶熷熸熺",8,"燄",9,"燏",4],["a040","燖",9,"燡燢燣燤燦燨",5,"燯",9,"燺",11,"爇",19],["a080","爛爜爞",9,"爩爫爭爮爯爲爳爴爺爼爾牀",6,"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅",4,"犌犎犐犑犓",11,"犠",11,"犮犱犲犳犵犺",6,"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"],["a1a1","　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈",7,"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"],["a2a1","ⅰ",9],["a2b1","⒈",19,"⑴",19,"①",9],["a2e5","㈠",9],["a2f1","Ⅰ",11],["a3a1","！＂＃￥％",88,"￣"],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a6e0","︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"],["a6ee","︻︼︷︸︱"],["a6f4","︳︴"],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a840","ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═",35,"▁",6],["a880","█",7,"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"],["a8a1","āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"],["a8bd","ńň"],["a8c0","ɡ"],["a8c5","ㄅ",36],["a940","〡",8,"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"],["a959","℡㈱"],["a95c","‐"],["a960","ー゛゜ヽヾ〆ゝゞ﹉",9,"﹔﹕﹖﹗﹙",8],["a980","﹢",4,"﹨﹩﹪﹫"],["a996","〇"],["a9a4","─",75],["aa40","狜狝狟狢",5,"狪狫狵狶狹狽狾狿猀猂猄",5,"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀",8],["aa80","獉獊獋獌獎獏獑獓獔獕獖獘",7,"獡",10,"獮獰獱"],["ab40","獲",11,"獿",4,"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣",5,"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃",4],["ab80","珋珌珎珒",6,"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳",4],["ac40","珸",10,"琄琇琈琋琌琍琎琑",8,"琜",5,"琣琤琧琩琫琭琯琱琲琷",4,"琽琾琿瑀瑂",11],["ac80","瑎",6,"瑖瑘瑝瑠",12,"瑮瑯瑱",4,"瑸瑹瑺"],["ad40","瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑",10,"璝璟",7,"璪",15,"璻",12],["ad80","瓈",9,"瓓",8,"瓝瓟瓡瓥瓧",6,"瓰瓱瓲"],["ae40","瓳瓵瓸",6,"甀甁甂甃甅",7,"甎甐甒甔甕甖甗甛甝甞甠",4,"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"],["ae80","畝",7,"畧畨畩畫",6,"畳畵當畷畺",4,"疀疁疂疄疅疇"],["af40","疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦",4,"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"],["af80","瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"],["b040","癅",6,"癎",5,"癕癗",4,"癝癟癠癡癢癤",6,"癬癭癮癰",7,"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"],["b080","皜",7,"皥",8,"皯皰皳皵",9,"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"],["b140","盄盇盉盋盌盓盕盙盚盜盝盞盠",4,"盦",7,"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎",10,"眛眜眝眞眡眣眤眥眧眪眫"],["b180","眬眮眰",4,"眹眻眽眾眿睂睄睅睆睈",7,"睒",7,"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"],["b240","睝睞睟睠睤睧睩睪睭",11,"睺睻睼瞁瞂瞃瞆",5,"瞏瞐瞓",11,"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶",4],["b280","瞼瞾矀",12,"矎",8,"矘矙矚矝",4,"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"],["b340","矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃",5,"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"],["b380","硛硜硞",11,"硯",7,"硸硹硺硻硽",6,"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"],["b440","碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨",7,"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚",9],["b480","磤磥磦磧磩磪磫磭",4,"磳磵磶磸磹磻",5,"礂礃礄礆",6,"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"],["b540","礍",5,"礔",9,"礟",4,"礥",14,"礵",4,"礽礿祂祃祄祅祇祊",8,"祔祕祘祙祡祣"],["b580","祤祦祩祪祫祬祮祰",6,"祹祻",4,"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"],["b640","禓",6,"禛",11,"禨",10,"禴",4,"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙",5,"秠秡秢秥秨秪"],["b680","秬秮秱",6,"秹秺秼秾秿稁稄稅稇稈稉稊稌稏",4,"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"],["b740","稝稟稡稢稤",14,"稴稵稶稸稺稾穀",5,"穇",9,"穒",4,"穘",16],["b780","穩",6,"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"],["b840","窣窤窧窩窪窫窮",4,"窴",10,"竀",10,"竌",9,"竗竘竚竛竜竝竡竢竤竧",5,"竮竰竱竲竳"],["b880","竴",4,"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"],["b940","笯笰笲笴笵笶笷笹笻笽笿",5,"筆筈筊筍筎筓筕筗筙筜筞筟筡筣",10,"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆",6,"箎箏"],["b980","箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹",7,"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"],["ba40","篅篈築篊篋篍篎篏篐篒篔",4,"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲",4,"篸篹篺篻篽篿",7,"簈簉簊簍簎簐",5,"簗簘簙"],["ba80","簚",4,"簠",5,"簨簩簫",12,"簹",5,"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"],["bb40","籃",9,"籎",36,"籵",5,"籾",9],["bb80","粈粊",6,"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴",4,"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"],["bc40","粿糀糂糃糄糆糉糋糎",6,"糘糚糛糝糞糡",6,"糩",5,"糰",7,"糹糺糼",13,"紋",5],["bc80","紑",14,"紡紣紤紥紦紨紩紪紬紭紮細",6,"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"],["bd40","紷",54,"絯",7],["bd80","絸",32,"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"],["be40","継",12,"綧",6,"綯",42],["be80","線",32,"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"],["bf40","緻",62],["bf80","縺縼",4,"繂",4,"繈",21,"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"],["c040","繞",35,"纃",23,"纜纝纞"],["c080","纮纴纻纼绖绤绬绹缊缐缞缷缹缻",6,"罃罆",9,"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"],["c140","罖罙罛罜罝罞罠罣",4,"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂",7,"羋羍羏",4,"羕",4,"羛羜羠羢羣羥羦羨",6,"羱"],["c180","羳",4,"羺羻羾翀翂翃翄翆翇翈翉翋翍翏",4,"翖翗翙",5,"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"],["c240","翤翧翨翪翫翬翭翯翲翴",6,"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫",5,"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"],["c280","聙聛",13,"聫",5,"聲",11,"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"],["c340","聾肁肂肅肈肊肍",5,"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇",4,"胏",6,"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"],["c380","脌脕脗脙脛脜脝脟",12,"脭脮脰脳脴脵脷脹",4,"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"],["c440","腀",5,"腇腉腍腎腏腒腖腗腘腛",4,"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃",4,"膉膋膌膍膎膐膒",5,"膙膚膞",4,"膤膥"],["c480","膧膩膫",7,"膴",5,"膼膽膾膿臄臅臇臈臉臋臍",6,"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"],["c540","臔",14,"臤臥臦臨臩臫臮",4,"臵",5,"臽臿舃與",4,"舎舏舑舓舕",5,"舝舠舤舥舦舧舩舮舲舺舼舽舿"],["c580","艀艁艂艃艅艆艈艊艌艍艎艐",7,"艙艛艜艝艞艠",7,"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"],["c640","艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"],["c680","苺苼",4,"茊茋茍茐茒茓茖茘茙茝",9,"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"],["c740","茾茿荁荂荄荅荈荊",4,"荓荕",4,"荝荢荰",6,"荹荺荾",6,"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡",6,"莬莭莮"],["c780","莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"],["c840","菮華菳",4,"菺菻菼菾菿萀萂萅萇萈萉萊萐萒",5,"萙萚萛萞",5,"萩",7,"萲",5,"萹萺萻萾",7,"葇葈葉"],["c880","葊",6,"葒",4,"葘葝葞葟葠葢葤",4,"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"],["c940","葽",4,"蒃蒄蒅蒆蒊蒍蒏",7,"蒘蒚蒛蒝蒞蒟蒠蒢",12,"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"],["c980","蓘",4,"蓞蓡蓢蓤蓧",4,"蓭蓮蓯蓱",10,"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"],["ca40","蔃",8,"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢",8,"蔭",9,"蔾",4,"蕄蕅蕆蕇蕋",10],["ca80","蕗蕘蕚蕛蕜蕝蕟",4,"蕥蕦蕧蕩",8,"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"],["cb40","薂薃薆薈",6,"薐",10,"薝",6,"薥薦薧薩薫薬薭薱",5,"薸薺",6,"藂",6,"藊",4,"藑藒"],["cb80","藔藖",5,"藝",6,"藥藦藧藨藪",14,"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"],["cc40","藹藺藼藽藾蘀",4,"蘆",10,"蘒蘓蘔蘕蘗",15,"蘨蘪",13,"蘹蘺蘻蘽蘾蘿虀"],["cc80","虁",11,"虒虓處",4,"虛虜虝號虠虡虣",7,"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"],["cd40","虭虯虰虲",6,"蚃",6,"蚎",4,"蚔蚖",5,"蚞",4,"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻",4,"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"],["cd80","蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"],["ce40","蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀",6,"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚",5,"蝡蝢蝦",7,"蝯蝱蝲蝳蝵"],["ce80","蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎",4,"螔螕螖螘",6,"螠",4,"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"],["cf40","螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁",4,"蟇蟈蟉蟌",4,"蟔",6,"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯",9],["cf80","蟺蟻蟼蟽蟿蠀蠁蠂蠄",5,"蠋",7,"蠔蠗蠘蠙蠚蠜",4,"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"],["d040","蠤",13,"蠳",5,"蠺蠻蠽蠾蠿衁衂衃衆",5,"衎",5,"衕衖衘衚",6,"衦衧衪衭衯衱衳衴衵衶衸衹衺"],["d080","衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗",4,"袝",4,"袣袥",5,"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"],["d140","袬袮袯袰袲",4,"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚",4,"裠裡裦裧裩",6,"裲裵裶裷裺裻製裿褀褁褃",5],["d180","褉褋",4,"褑褔",4,"褜",4,"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"],["d240","褸",8,"襂襃襅",24,"襠",5,"襧",19,"襼"],["d280","襽襾覀覂覄覅覇",26,"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"],["d340","覢",30,"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴",6],["d380","觻",4,"訁",5,"計",21,"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"],["d440","訞",31,"訿",8,"詉",21],["d480","詟",25,"詺",6,"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"],["d540","誁",7,"誋",7,"誔",46],["d580","諃",32,"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"],["d640","諤",34,"謈",27],["d680","謤謥謧",30,"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"],["d740","譆",31,"譧",4,"譭",25],["d780","讇",24,"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"],["d840","谸",8,"豂豃豄豅豈豊豋豍",7,"豖豗豘豙豛",5,"豣",6,"豬",6,"豴豵豶豷豻",6,"貃貄貆貇"],["d880","貈貋貍",6,"貕貖貗貙",20,"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"],["d940","貮",62],["d980","賭",32,"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"],["da40","贎",14,"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸",8,"趂趃趆趇趈趉趌",4,"趒趓趕",9,"趠趡"],["da80","趢趤",12,"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"],["db40","跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾",6,"踆踇踈踋踍踎踐踑踒踓踕",7,"踠踡踤",4,"踫踭踰踲踳踴踶踷踸踻踼踾"],["db80","踿蹃蹅蹆蹌",4,"蹓",5,"蹚",11,"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"],["dc40","蹳蹵蹷",4,"蹽蹾躀躂躃躄躆躈",6,"躑躒躓躕",6,"躝躟",11,"躭躮躰躱躳",6,"躻",7],["dc80","軃",10,"軏",21,"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"],["dd40","軥",62],["dd80","輤",32,"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"],["de40","轅",32,"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"],["de80","迉",4,"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"],["df40","這逜連逤逥逧",5,"逰",4,"逷逹逺逽逿遀遃遅遆遈",4,"過達違遖遙遚遜",5,"遤遦遧適遪遫遬遯",4,"遶",6,"遾邁"],["df80","還邅邆邇邉邊邌",4,"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"],["e040","郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅",19,"鄚鄛鄜"],["e080","鄝鄟鄠鄡鄤",10,"鄰鄲",6,"鄺",8,"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"],["e140","酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀",4,"醆醈醊醎醏醓",6,"醜",5,"醤",5,"醫醬醰醱醲醳醶醷醸醹醻"],["e180","醼",10,"釈釋釐釒",9,"針",8,"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"],["e240","釦",62],["e280","鈥",32,"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧",5,"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"],["e340","鉆",45,"鉵",16],["e380","銆",7,"銏",24,"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"],["e440","銨",5,"銯",24,"鋉",31],["e480","鋩",32,"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"],["e540","錊",51,"錿",10],["e580","鍊",31,"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"],["e640","鍬",34,"鎐",27],["e680","鎬",29,"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"],["e740","鏎",7,"鏗",54],["e780","鐎",32,"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡",6,"缪缫缬缭缯",4,"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"],["e840","鐯",14,"鐿",43,"鑬鑭鑮鑯"],["e880","鑰",20,"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"],["e940","锧锳锽镃镈镋镕镚镠镮镴镵長",7,"門",42],["e980","閫",32,"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"],["ea40","闌",27,"闬闿阇阓阘阛阞阠阣",6,"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"],["ea80","陘陙陚陜陝陞陠陣陥陦陫陭",4,"陳陸",12,"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"],["eb40","隌階隑隒隓隕隖隚際隝",9,"隨",7,"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖",9,"雡",6,"雫"],["eb80","雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗",4,"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"],["ec40","霡",8,"霫霬霮霯霱霳",4,"霺霻霼霽霿",18,"靔靕靗靘靚靜靝靟靣靤靦靧靨靪",7],["ec80","靲靵靷",4,"靽",7,"鞆",4,"鞌鞎鞏鞐鞓鞕鞖鞗鞙",4,"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"],["ed40","鞞鞟鞡鞢鞤",6,"鞬鞮鞰鞱鞳鞵",46],["ed80","韤韥韨韮",4,"韴韷",23,"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"],["ee40","頏",62],["ee80","顎",32,"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶",4,"钼钽钿铄铈",6,"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"],["ef40","顯",5,"颋颎颒颕颙颣風",37,"飏飐飔飖飗飛飜飝飠",4],["ef80","飥飦飩",30,"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒",4,"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤",8,"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"],["f040","餈",4,"餎餏餑",28,"餯",26],["f080","饊",9,"饖",12,"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨",4,"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦",6,"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"],["f140","馌馎馚",10,"馦馧馩",47],["f180","駙",32,"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"],["f240","駺",62],["f280","騹",32,"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"],["f340","驚",17,"驲骃骉骍骎骔骕骙骦骩",6,"骲骳骴骵骹骻骽骾骿髃髄髆",4,"髍髎髏髐髒體髕髖髗髙髚髛髜"],["f380","髝髞髠髢髣髤髥髧髨髩髪髬髮髰",8,"髺髼",6,"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"],["f440","鬇鬉",5,"鬐鬑鬒鬔",10,"鬠鬡鬢鬤",10,"鬰鬱鬳",7,"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕",5],["f480","魛",32,"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"],["f540","魼",62],["f580","鮻",32,"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"],["f640","鯜",62],["f680","鰛",32,"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅",5,"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞",5,"鲥",4,"鲫鲭鲮鲰",7,"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"],["f740","鰼",62],["f780","鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾",4,"鳈鳉鳑鳒鳚鳛鳠鳡鳌",4,"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"],["f840","鳣",62],["f880","鴢",32],["f940","鵃",62],["f980","鶂",32],["fa40","鶣",62],["fa80","鷢",32],["fb40","鸃",27,"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴",9,"麀"],["fb80","麁麃麄麅麆麉麊麌",5,"麔",8,"麞麠",5,"麧麨麩麪"],["fc40","麫",8,"麵麶麷麹麺麼麿",4,"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰",8,"黺黽黿",6],["fc80","鼆",4,"鼌鼏鼑鼒鼔鼕鼖鼘鼚",5,"鼡鼣",8,"鼭鼮鼰鼱"],["fd40","鼲",4,"鼸鼺鼼鼿",4,"齅",10,"齒",38],["fd80","齹",5,"龁龂龍",11,"龜龝龞龡",4,"郎凉秊裏隣"],["fe40","兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"]];var require$$3=[["a140","",62],["a180","",32],["a240","",62],["a280","",32],["a2ab","",5],["a2e3","€"],["a2ef",""],["a2fd",""],["a340","",62],["a380","",31,"　"],["a440","",62],["a480","",32],["a4f4","",10],["a540","",62],["a580","",32],["a5f7","",7],["a640","",62],["a680","",32],["a6b9","",7],["a6d9","",6],["a6ec",""],["a6f3",""],["a6f6","",8],["a740","",62],["a780","",32],["a7c2","",14],["a7f2","",12],["a896","",10],["a8bc",""],["a8bf","ǹ"],["a8c1",""],["a8ea","",20],["a958",""],["a95b",""],["a95d",""],["a989","〾⿰",11],["a997","",12],["a9f0","",14],["aaa1","",93],["aba1","",93],["aca1","",93],["ada1","",93],["aea1","",93],["afa1","",93],["d7fa","",4],["f8a1","",93],["f9a1","",93],["faa1","",93],["fba1","",93],["fca1","",93],["fda1","",93],["fe50","⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"],["fe80","䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓",6,"䶮",93]];var uChars=[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536];var gbChars=[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000];var require$$4={uChars:uChars,gbChars:gbChars};var require$$5=[["0","\u0000",127],["8141","갂갃갅갆갋",4,"갘갞갟갡갢갣갥",6,"갮갲갳갴"],["8161","갵갶갷갺갻갽갾갿걁",9,"걌걎",5,"걕"],["8181","걖걗걙걚걛걝",18,"걲걳걵걶걹걻",4,"겂겇겈겍겎겏겑겒겓겕",6,"겞겢",5,"겫겭겮겱",6,"겺겾겿곀곂곃곅곆곇곉곊곋곍",7,"곖곘",7,"곢곣곥곦곩곫곭곮곲곴곷",4,"곾곿괁괂괃괅괇",4,"괎괐괒괓"],["8241","괔괕괖괗괙괚괛괝괞괟괡",7,"괪괫괮",5],["8261","괶괷괹괺괻괽",6,"굆굈굊",5,"굑굒굓굕굖굗"],["8281","굙",7,"굢굤",7,"굮굯굱굲굷굸굹굺굾궀궃",4,"궊궋궍궎궏궑",10,"궞",5,"궥",17,"궸",7,"귂귃귅귆귇귉",6,"귒귔",7,"귝귞귟귡귢귣귥",18],["8341","귺귻귽귾긂",5,"긊긌긎",5,"긕",7],["8361","긝",18,"긲긳긵긶긹긻긼"],["8381","긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗",4,"깞깢깣깤깦깧깪깫깭깮깯깱",6,"깺깾",5,"꺆",5,"꺍",46,"꺿껁껂껃껅",6,"껎껒",5,"껚껛껝",8],["8441","껦껧껩껪껬껮",5,"껵껶껷껹껺껻껽",8],["8461","꼆꼉꼊꼋꼌꼎꼏꼑",18],["8481","꼤",7,"꼮꼯꼱꼳꼵",6,"꼾꽀꽄꽅꽆꽇꽊",5,"꽑",10,"꽞",5,"꽦",18,"꽺",5,"꾁꾂꾃꾅꾆꾇꾉",6,"꾒꾓꾔꾖",5,"꾝",26,"꾺꾻꾽꾾"],["8541","꾿꿁",5,"꿊꿌꿏",4,"꿕",6,"꿝",4],["8561","꿢",5,"꿪",5,"꿲꿳꿵꿶꿷꿹",6,"뀂뀃"],["8581","뀅",6,"뀍뀎뀏뀑뀒뀓뀕",6,"뀞",9,"뀩",26,"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞",29,"끾끿낁낂낃낅",6,"낎낐낒",5,"낛낝낞낣낤"],["8641","낥낦낧낪낰낲낶낷낹낺낻낽",6,"냆냊",5,"냒"],["8661","냓냕냖냗냙",6,"냡냢냣냤냦",10],["8681","냱",22,"넊넍넎넏넑넔넕넖넗넚넞",4,"넦넧넩넪넫넭",6,"넶넺",5,"녂녃녅녆녇녉",6,"녒녓녖녗녙녚녛녝녞녟녡",22,"녺녻녽녾녿놁놃",4,"놊놌놎놏놐놑놕놖놗놙놚놛놝"],["8741","놞",9,"놩",15],["8761","놹",18,"뇍뇎뇏뇑뇒뇓뇕"],["8781","뇖",5,"뇞뇠",7,"뇪뇫뇭뇮뇯뇱",7,"뇺뇼뇾",5,"눆눇눉눊눍",6,"눖눘눚",5,"눡",18,"눵",6,"눽",26,"뉙뉚뉛뉝뉞뉟뉡",6,"뉪",4],["8841","뉯",4,"뉶",5,"뉽",6,"늆늇늈늊",4],["8861","늏늒늓늕늖늗늛",4,"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"],["8881","늸",15,"닊닋닍닎닏닑닓",4,"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉",6,"댒댖",5,"댝",54,"덗덙덚덝덠덡덢덣"],["8941","덦덨덪덬덭덯덲덳덵덶덷덹",6,"뎂뎆",5,"뎍"],["8961","뎎뎏뎑뎒뎓뎕",10,"뎢",5,"뎩뎪뎫뎭"],["8981","뎮",21,"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩",18,"돽",18,"됑",6,"됙됚됛됝됞됟됡",6,"됪됬",7,"됵",15],["8a41","둅",10,"둒둓둕둖둗둙",6,"둢둤둦"],["8a61","둧",4,"둭",18,"뒁뒂"],["8a81","뒃",4,"뒉",19,"뒞",5,"뒥뒦뒧뒩뒪뒫뒭",7,"뒶뒸뒺",5,"듁듂듃듅듆듇듉",6,"듑듒듓듔듖",5,"듞듟듡듢듥듧",4,"듮듰듲",5,"듹",26,"딖딗딙딚딝"],["8b41","딞",5,"딦딫",4,"딲딳딵딶딷딹",6,"땂땆"],["8b61","땇땈땉땊땎땏땑땒땓땕",6,"땞땢",8],["8b81","땫",52,"떢떣떥떦떧떩떬떭떮떯떲떶",4,"떾떿뗁뗂뗃뗅",6,"뗎뗒",5,"뗙",18,"뗭",18],["8c41","똀",15,"똒똓똕똖똗똙",4],["8c61","똞",6,"똦",5,"똭",6,"똵",5],["8c81","똻",12,"뙉",26,"뙥뙦뙧뙩",50,"뚞뚟뚡뚢뚣뚥",5,"뚭뚮뚯뚰뚲",16],["8d41","뛃",16,"뛕",8],["8d61","뛞",17,"뛱뛲뛳뛵뛶뛷뛹뛺"],["8d81","뛻",4,"뜂뜃뜄뜆",33,"뜪뜫뜭뜮뜱",6,"뜺뜼",7,"띅띆띇띉띊띋띍",6,"띖",9,"띡띢띣띥띦띧띩",6,"띲띴띶",5,"띾띿랁랂랃랅",6,"랎랓랔랕랚랛랝랞"],["8e41","랟랡",6,"랪랮",5,"랶랷랹",8],["8e61","럂",4,"럈럊",19],["8e81","럞",13,"럮럯럱럲럳럵",6,"럾렂",4,"렊렋렍렎렏렑",6,"렚렜렞",5,"렦렧렩렪렫렭",6,"렶렺",5,"롁롂롃롅",11,"롒롔",7,"롞롟롡롢롣롥",6,"롮롰롲",5,"롹롺롻롽",7],["8f41","뢅",7,"뢎",17],["8f61","뢠",7,"뢩",6,"뢱뢲뢳뢵뢶뢷뢹",4],["8f81","뢾뢿룂룄룆",5,"룍룎룏룑룒룓룕",7,"룞룠룢",5,"룪룫룭룮룯룱",6,"룺룼룾",5,"뤅",18,"뤙",6,"뤡",26,"뤾뤿륁륂륃륅",6,"륍륎륐륒",5],["9041","륚륛륝륞륟륡",6,"륪륬륮",5,"륶륷륹륺륻륽"],["9061","륾",5,"릆릈릋릌릏",15],["9081","릟",12,"릮릯릱릲릳릵",6,"릾맀맂",5,"맊맋맍맓",4,"맚맜맟맠맢맦맧맩맪맫맭",6,"맶맻",4,"먂",5,"먉",11,"먖",33,"먺먻먽먾먿멁멃멄멅멆"],["9141","멇멊멌멏멐멑멒멖멗멙멚멛멝",6,"멦멪",5],["9161","멲멳멵멶멷멹",9,"몆몈몉몊몋몍",5],["9181","몓",20,"몪몭몮몯몱몳",4,"몺몼몾",5,"뫅뫆뫇뫉",14,"뫚",33,"뫽뫾뫿묁묂묃묅",7,"묎묐묒",5,"묙묚묛묝묞묟묡",6],["9241","묨묪묬",7,"묷묹묺묿",4,"뭆뭈뭊뭋뭌뭎뭑뭒"],["9261","뭓뭕뭖뭗뭙",7,"뭢뭤",7,"뭭",4],["9281","뭲",21,"뮉뮊뮋뮍뮎뮏뮑",18,"뮥뮦뮧뮩뮪뮫뮭",6,"뮵뮶뮸",7,"믁믂믃믅믆믇믉",6,"믑믒믔",35,"믺믻믽믾밁"],["9341","밃",4,"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"],["9361","밶밷밹",6,"뱂뱆뱇뱈뱊뱋뱎뱏뱑",8],["9381","뱚뱛뱜뱞",37,"벆벇벉벊벍벏",4,"벖벘벛",4,"벢벣벥벦벩",6,"벲벶",5,"벾벿볁볂볃볅",7,"볎볒볓볔볖볗볙볚볛볝",22,"볷볹볺볻볽"],["9441","볾",5,"봆봈봊",5,"봑봒봓봕",8],["9461","봞",5,"봥",6,"봭",12],["9481","봺",5,"뵁",6,"뵊뵋뵍뵎뵏뵑",6,"뵚",9,"뵥뵦뵧뵩",22,"붂붃붅붆붋",4,"붒붔붖붗붘붛붝",6,"붥",10,"붱",6,"붹",24],["9541","뷒뷓뷖뷗뷙뷚뷛뷝",11,"뷪",5,"뷱"],["9561","뷲뷳뷵뷶뷷뷹",6,"븁븂븄븆",5,"븎븏븑븒븓"],["9581","븕",6,"븞븠",35,"빆빇빉빊빋빍빏",4,"빖빘빜빝빞빟빢빣빥빦빧빩빫",4,"빲빶",4,"빾빿뺁뺂뺃뺅",6,"뺎뺒",5,"뺚",13,"뺩",14],["9641","뺸",23,"뻒뻓"],["9661","뻕뻖뻙",6,"뻡뻢뻦",5,"뻭",8],["9681","뻶",10,"뼂",5,"뼊",13,"뼚뼞",33,"뽂뽃뽅뽆뽇뽉",6,"뽒뽓뽔뽖",44],["9741","뾃",16,"뾕",8],["9761","뾞",17,"뾱",7],["9781","뾹",11,"뿆",5,"뿎뿏뿑뿒뿓뿕",6,"뿝뿞뿠뿢",89,"쀽쀾쀿"],["9841","쁀",16,"쁒",5,"쁙쁚쁛"],["9861","쁝쁞쁟쁡",6,"쁪",15],["9881","쁺",21,"삒삓삕삖삗삙",6,"삢삤삦",5,"삮삱삲삷",4,"삾샂샃샄샆샇샊샋샍샎샏샑",6,"샚샞",5,"샦샧샩샪샫샭",6,"샶샸샺",5,"섁섂섃섅섆섇섉",6,"섑섒섓섔섖",5,"섡섢섥섨섩섪섫섮"],["9941","섲섳섴섵섷섺섻섽섾섿셁",6,"셊셎",5,"셖셗"],["9961","셙셚셛셝",6,"셦셪",5,"셱셲셳셵셶셷셹셺셻"],["9981","셼",8,"솆",5,"솏솑솒솓솕솗",4,"솞솠솢솣솤솦솧솪솫솭솮솯솱",11,"솾",5,"쇅쇆쇇쇉쇊쇋쇍",6,"쇕쇖쇙",6,"쇡쇢쇣쇥쇦쇧쇩",6,"쇲쇴",7,"쇾쇿숁숂숃숅",6,"숎숐숒",5,"숚숛숝숞숡숢숣"],["9a41","숤숥숦숧숪숬숮숰숳숵",16],["9a61","쉆쉇쉉",6,"쉒쉓쉕쉖쉗쉙",6,"쉡쉢쉣쉤쉦"],["9a81","쉧",4,"쉮쉯쉱쉲쉳쉵",6,"쉾슀슂",5,"슊",5,"슑",6,"슙슚슜슞",5,"슦슧슩슪슫슮",5,"슶슸슺",33,"싞싟싡싢싥",5,"싮싰싲싳싴싵싷싺싽싾싿쌁",6,"쌊쌋쌎쌏"],["9b41","쌐쌑쌒쌖쌗쌙쌚쌛쌝",6,"쌦쌧쌪",8],["9b61","쌳",17,"썆",7],["9b81","썎",25,"썪썫썭썮썯썱썳",4,"썺썻썾",5,"쎅쎆쎇쎉쎊쎋쎍",50,"쏁",22,"쏚"],["9c41","쏛쏝쏞쏡쏣",4,"쏪쏫쏬쏮",5,"쏶쏷쏹",5],["9c61","쏿",8,"쐉",6,"쐑",9],["9c81","쐛",8,"쐥",6,"쐭쐮쐯쐱쐲쐳쐵",6,"쐾",9,"쑉",26,"쑦쑧쑩쑪쑫쑭",6,"쑶쑷쑸쑺",5,"쒁",18,"쒕",6,"쒝",12],["9d41","쒪",13,"쒹쒺쒻쒽",8],["9d61","쓆",25],["9d81","쓠",8,"쓪",5,"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂",9,"씍씎씏씑씒씓씕",6,"씝",10,"씪씫씭씮씯씱",6,"씺씼씾",5,"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩",6,"앲앶",5,"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"],["9e41","얖얙얚얛얝얞얟얡",7,"얪",9,"얶"],["9e61","얷얺얿",4,"엋엍엏엒엓엕엖엗엙",6,"엢엤엦엧"],["9e81","엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑",6,"옚옝",6,"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉",6,"왒왖",5,"왞왟왡",10,"왭왮왰왲",5,"왺왻왽왾왿욁",6,"욊욌욎",5,"욖욗욙욚욛욝",6,"욦"],["9f41","욨욪",5,"욲욳욵욶욷욻",4,"웂웄웆",5,"웎"],["9f61","웏웑웒웓웕",6,"웞웟웢",5,"웪웫웭웮웯웱웲"],["9f81","웳",4,"웺웻웼웾",5,"윆윇윉윊윋윍",6,"윖윘윚",5,"윢윣윥윦윧윩",6,"윲윴윶윸윹윺윻윾윿읁읂읃읅",4,"읋읎읐읙읚읛읝읞읟읡",6,"읩읪읬",7,"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛",4,"잢잧",4,"잮잯잱잲잳잵잶잷"],["a041","잸잹잺잻잾쟂",5,"쟊쟋쟍쟏쟑",6,"쟙쟚쟛쟜"],["a061","쟞",5,"쟥쟦쟧쟩쟪쟫쟭",13],["a081","쟻",4,"젂젃젅젆젇젉젋",4,"젒젔젗",4,"젞젟젡젢젣젥",6,"젮젰젲",5,"젹젺젻젽젾젿졁",6,"졊졋졎",5,"졕",26,"졲졳졵졶졷졹졻",4,"좂좄좈좉좊좎",5,"좕",7,"좞좠좢좣좤"],["a141","좥좦좧좩",18,"좾좿죀죁"],["a161","죂죃죅죆죇죉죊죋죍",6,"죖죘죚",5,"죢죣죥"],["a181","죦",14,"죶",5,"죾죿줁줂줃줇",4,"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈",9,"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"],["a241","줐줒",5,"줙",18],["a261","줭",6,"줵",18],["a281","쥈",7,"쥒쥓쥕쥖쥗쥙",6,"쥢쥤",7,"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"],["a341","쥱쥲쥳쥵",6,"쥽",10,"즊즋즍즎즏"],["a361","즑",6,"즚즜즞",16],["a381","즯",16,"짂짃짅짆짉짋",4,"짒짔짗짘짛！",58,"￦］",32,"￣"],["a441","짞짟짡짣짥짦짨짩짪짫짮짲",5,"짺짻짽짾짿쨁쨂쨃쨄"],["a461","쨅쨆쨇쨊쨎",5,"쨕쨖쨗쨙",12],["a481","쨦쨧쨨쨪",28,"ㄱ",93],["a541","쩇",4,"쩎쩏쩑쩒쩓쩕",6,"쩞쩢",5,"쩩쩪"],["a561","쩫",17,"쩾",5,"쪅쪆"],["a581","쪇",16,"쪙",14,"ⅰ",9],["a5b0","Ⅰ",9],["a5c1","Α",16,"Σ",6],["a5e1","α",16,"σ",6],["a641","쪨",19,"쪾쪿쫁쫂쫃쫅"],["a661","쫆",5,"쫎쫐쫒쫔쫕쫖쫗쫚",5,"쫡",6],["a681","쫨쫩쫪쫫쫭",6,"쫵",18,"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃",7],["a741","쬋",4,"쬑쬒쬓쬕쬖쬗쬙",6,"쬢",7],["a761","쬪",22,"쭂쭃쭄"],["a781","쭅쭆쭇쭊쭋쭍쭎쭏쭑",6,"쭚쭛쭜쭞",5,"쭥",7,"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙",9,"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰",9,"㎀",4,"㎺",5,"㎐",4,"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"],["a841","쭭",10,"쭺",14],["a861","쮉",18,"쮝",6],["a881","쮤",19,"쮹",11,"ÆÐªĦ"],["a8a6","Ĳ"],["a8a8","ĿŁØŒºÞŦŊ"],["a8b1","㉠",27,"ⓐ",25,"①",14,"½⅓⅔¼¾⅛⅜⅝⅞"],["a941","쯅",14,"쯕",10],["a961","쯠쯡쯢쯣쯥쯦쯨쯪",18],["a981","쯽",14,"찎찏찑찒찓찕",6,"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀",27,"⒜",25,"⑴",14,"¹²³⁴ⁿ₁₂₃₄"],["aa41","찥찦찪찫찭찯찱",6,"찺찿",4,"챆챇챉챊챋챍챎"],["aa61","챏",4,"챖챚",5,"챡챢챣챥챧챩",6,"챱챲"],["aa81","챳챴챶",29,"ぁ",82],["ab41","첔첕첖첗첚첛첝첞첟첡",6,"첪첮",5,"첶첷첹"],["ab61","첺첻첽",6,"쳆쳈쳊",5,"쳑쳒쳓쳕",5],["ab81","쳛",8,"쳥",6,"쳭쳮쳯쳱",12,"ァ",85],["ac41","쳾쳿촀촂",5,"촊촋촍촎촏촑",6,"촚촜촞촟촠"],["ac61","촡촢촣촥촦촧촩촪촫촭",11,"촺",4],["ac81","촿",28,"쵝쵞쵟А",5,"ЁЖ",25],["acd1","а",5,"ёж",25],["ad41","쵡쵢쵣쵥",6,"쵮쵰쵲",5,"쵹",7],["ad61","춁",6,"춉",10,"춖춗춙춚춛춝춞춟"],["ad81","춠춡춢춣춦춨춪",5,"춱",18,"췅"],["ae41","췆",5,"췍췎췏췑",16],["ae61","췢",5,"췩췪췫췭췮췯췱",6,"췺췼췾",4],["ae81","츃츅츆츇츉츊츋츍",6,"츕츖츗츘츚",5,"츢츣츥츦츧츩츪츫"],["af41","츬츭츮츯츲츴츶",19],["af61","칊",13,"칚칛칝칞칢",5,"칪칬"],["af81","칮",5,"칶칷칹칺칻칽",6,"캆캈캊",5,"캒캓캕캖캗캙"],["b041","캚",5,"캢캦",5,"캮",12],["b061","캻",5,"컂",19],["b081","컖",13,"컦컧컩컪컭",6,"컶컺",5,"가각간갇갈갉갊감",7,"같",4,"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"],["b141","켂켃켅켆켇켉",6,"켒켔켖",5,"켝켞켟켡켢켣"],["b161","켥",6,"켮켲",5,"켹",11],["b181","콅",14,"콖콗콙콚콛콝",6,"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"],["b241","콭콮콯콲콳콵콶콷콹",6,"쾁쾂쾃쾄쾆",5,"쾍"],["b261","쾎",18,"쾢",5,"쾩"],["b281","쾪",5,"쾱",18,"쿅",6,"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"],["b341","쿌",19,"쿢쿣쿥쿦쿧쿩"],["b361","쿪",5,"쿲쿴쿶",5,"쿽쿾쿿퀁퀂퀃퀅",5],["b381","퀋",5,"퀒",5,"퀙",19,"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫",4,"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"],["b441","퀮",5,"퀶퀷퀹퀺퀻퀽",6,"큆큈큊",5],["b461","큑큒큓큕큖큗큙",6,"큡",10,"큮큯"],["b481","큱큲큳큵",6,"큾큿킀킂",18,"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫",4,"닳담답닷",4,"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"],["b541","킕",14,"킦킧킩킪킫킭",5],["b561","킳킶킸킺",5,"탂탃탅탆탇탊",5,"탒탖",4],["b581","탛탞탟탡탢탣탥",6,"탮탲",5,"탹",11,"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"],["b641","턅",7,"턎",17],["b661","턠",15,"턲턳턵턶턷턹턻턼턽턾"],["b681","턿텂텆",5,"텎텏텑텒텓텕",6,"텞텠텢",5,"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"],["b741","텮",13,"텽",6,"톅톆톇톉톊"],["b761","톋",20,"톢톣톥톦톧"],["b781","톩",6,"톲톴톶톷톸톹톻톽톾톿퇁",14,"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"],["b841","퇐",7,"퇙",17],["b861","퇫",8,"퇵퇶퇷퇹",13],["b881","툈툊",5,"툑",24,"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많",4,"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"],["b941","툪툫툮툯툱툲툳툵",6,"툾퉀퉂",5,"퉉퉊퉋퉌"],["b961","퉍",14,"퉝",6,"퉥퉦퉧퉨"],["b981","퉩",22,"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바",4,"받",4,"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"],["ba41","튍튎튏튒튓튔튖",5,"튝튞튟튡튢튣튥",6,"튭"],["ba61","튮튯튰튲",5,"튺튻튽튾틁틃",4,"틊틌",5],["ba81","틒틓틕틖틗틙틚틛틝",6,"틦",9,"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"],["bb41","틻",4,"팂팄팆",5,"팏팑팒팓팕팗",4,"팞팢팣"],["bb61","팤팦팧팪팫팭팮팯팱",6,"팺팾",5,"퍆퍇퍈퍉"],["bb81","퍊",31,"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"],["bc41","퍪",17,"퍾퍿펁펂펃펅펆펇"],["bc61","펈펉펊펋펎펒",5,"펚펛펝펞펟펡",6,"펪펬펮"],["bc81","펯",4,"펵펶펷펹펺펻펽",6,"폆폇폊",5,"폑",5,"샥샨샬샴샵샷샹섀섄섈섐섕서",4,"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"],["bd41","폗폙",7,"폢폤",7,"폮폯폱폲폳폵폶폷"],["bd61","폸폹폺폻폾퐀퐂",5,"퐉",13],["bd81","퐗",5,"퐞",25,"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"],["be41","퐸",7,"푁푂푃푅",14],["be61","푔",7,"푝푞푟푡푢푣푥",7,"푮푰푱푲"],["be81","푳",4,"푺푻푽푾풁풃",4,"풊풌풎",5,"풕",8,"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄",6,"엌엎"],["bf41","풞",10,"풪",14],["bf61","풹",18,"퓍퓎퓏퓑퓒퓓퓕"],["bf81","퓖",5,"퓝퓞퓠",7,"퓩퓪퓫퓭퓮퓯퓱",6,"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염",5,"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"],["c041","퓾",5,"픅픆픇픉픊픋픍",6,"픖픘",5],["c061","픞",25],["c081","픸픹픺픻픾픿핁핂핃핅",6,"핎핐핒",5,"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응",7,"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"],["c141","핤핦핧핪핬핮",5,"핶핷핹핺핻핽",6,"햆햊햋"],["c161","햌햍햎햏햑",19,"햦햧"],["c181","햨",31,"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"],["c241","헊헋헍헎헏헑헓",4,"헚헜헞",5,"헦헧헩헪헫헭헮"],["c261","헯",4,"헶헸헺",5,"혂혃혅혆혇혉",6,"혒"],["c281","혖",5,"혝혞혟혡혢혣혥",7,"혮",9,"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"],["c341","혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝",4],["c361","홢",4,"홨홪",5,"홲홳홵",11],["c381","횁횂횄횆",5,"횎횏횑횒횓횕",7,"횞횠횢",5,"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"],["c441","횫횭횮횯횱",7,"횺횼",7,"훆훇훉훊훋"],["c461","훍훎훏훐훒훓훕훖훘훚",5,"훡훢훣훥훦훧훩",4],["c481","훮훯훱훲훳훴훶",5,"훾훿휁휂휃휅",11,"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"],["c541","휕휖휗휚휛휝휞휟휡",6,"휪휬휮",5,"휶휷휹"],["c561","휺휻휽",6,"흅흆흈흊",5,"흒흓흕흚",4],["c581","흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵",6,"흾흿힀힂",5,"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"],["c641","힍힎힏힑",6,"힚힜힞",5],["c6a1","퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"],["c7a1","퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"],["c8a1","혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"],["caa1","伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"],["cba1","匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"],["cca1","瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"],["cda1","棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"],["cea1","科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"],["cfa1","區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"],["d0a1","鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"],["d1a1","朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩",5,"那樂",4,"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"],["d2a1","納臘蠟衲囊娘廊",4,"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧",5,"駑魯",10,"濃籠聾膿農惱牢磊腦賂雷尿壘",7,"嫩訥杻紐勒",5,"能菱陵尼泥匿溺多茶"],["d3a1","丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"],["d4a1","棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"],["d5a1","蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"],["d6a1","煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"],["d7a1","遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"],["d8a1","立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"],["d9a1","蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"],["daa1","汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"],["dba1","發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"],["dca1","碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"],["dda1","孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"],["dea1","脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"],["dfa1","傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"],["e0a1","胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"],["e1a1","聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"],["e2a1","戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"],["e3a1","嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"],["e4a1","沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"],["e5a1","櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"],["e6a1","旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"],["e7a1","簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"],["e8a1","烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"],["e9a1","窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"],["eaa1","運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"],["eba1","濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"],["eca1","議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"],["eda1","立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"],["eea1","障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"],["efa1","煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"],["f0a1","靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"],["f1a1","踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"],["f2a1","咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"],["f3a1","鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"],["f4a1","責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"],["f5a1","椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"],["f6a1","贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"],["f7a1","鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"],["f8a1","阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"],["f9a1","品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"],["faa1","行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"],["fba1","形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"],["fca1","禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"],["fda1","爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"]];var require$$6=[["0","\u0000",127],["a140","　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"],["a1a1","﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢",4,"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"],["a240","＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁",7,"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"],["a2a1","╮╰╯═╞╪╡◢◣◥◤╱╲╳０",9,"Ⅰ",9,"〡",8,"十卄卅Ａ",25,"ａ",21],["a340","ｗｘｙｚΑ",16,"Σ",6,"α",16,"σ",6,"ㄅ",10],["a3a1","ㄐ",25,"˙ˉˊˇˋ"],["a3e1","€"],["a440","一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"],["a4a1","丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"],["a540","世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"],["a5a1","央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"],["a640","共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"],["a6a1","式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"],["a740","作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"],["a7a1","均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"],["a840","杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"],["a8a1","芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"],["a940","咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"],["a9a1","屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"],["aa40","昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"],["aaa1","炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"],["ab40","陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"],["aba1","哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"],["ac40","拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"],["aca1","活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"],["ad40","耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"],["ada1","迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"],["ae40","哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"],["aea1","恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"],["af40","浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"],["afa1","砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"],["b040","虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"],["b0a1","陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"],["b140","娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"],["b1a1","情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"],["b240","毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"],["b2a1","瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"],["b340","莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"],["b3a1","部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"],["b440","婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"],["b4a1","插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"],["b540","溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"],["b5a1","窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"],["b640","詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"],["b6a1","間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"],["b740","媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"],["b7a1","楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"],["b840","睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"],["b8a1","腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"],["b940","辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"],["b9a1","飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"],["ba40","愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"],["baa1","滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"],["bb40","罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"],["bba1","說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"],["bc40","劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"],["bca1","慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"],["bd40","瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"],["bda1","翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"],["be40","輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"],["bea1","鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"],["bf40","濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"],["bfa1","縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"],["c040","錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"],["c0a1","嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"],["c140","瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"],["c1a1","薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"],["c240","駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"],["c2a1","癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"],["c340","鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"],["c3a1","獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"],["c440","願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"],["c4a1","纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"],["c540","護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"],["c5a1","禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"],["c640","讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"],["c940","乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"],["c9a1","氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"],["ca40","汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"],["caa1","吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"],["cb40","杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"],["cba1","芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"],["cc40","坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"],["cca1","怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"],["cd40","泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"],["cda1","矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"],["ce40","哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"],["cea1","峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"],["cf40","柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"],["cfa1","洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"],["d040","穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"],["d0a1","苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"],["d140","唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"],["d1a1","恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"],["d240","毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"],["d2a1","牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"],["d340","笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"],["d3a1","荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"],["d440","酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"],["d4a1","唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"],["d540","崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"],["d5a1","捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"],["d640","淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"],["d6a1","痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"],["d740","耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"],["d7a1","蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"],["d840","釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"],["d8a1","堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"],["d940","惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"],["d9a1","晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"],["da40","湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"],["daa1","琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"],["db40","罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"],["dba1","菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"],["dc40","軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"],["dca1","隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"],["dd40","媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"],["dda1","搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"],["de40","毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"],["dea1","煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"],["df40","稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"],["dfa1","腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"],["e040","觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"],["e0a1","遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"],["e140","凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"],["e1a1","寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"],["e240","榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"],["e2a1","漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"],["e340","禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"],["e3a1","耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"],["e440","裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"],["e4a1","銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"],["e540","噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"],["e5a1","憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"],["e640","澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"],["e6a1","獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"],["e740","膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"],["e7a1","蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"],["e840","踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"],["e8a1","銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"],["e940","噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"],["e9a1","憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"],["ea40","澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"],["eaa1","瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"],["eb40","蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"],["eba1","諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"],["ec40","錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"],["eca1","魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"],["ed40","檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"],["eda1","瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"],["ee40","蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"],["eea1","謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"],["ef40","鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"],["efa1","鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"],["f040","璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"],["f0a1","臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"],["f140","蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"],["f1a1","鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"],["f240","徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"],["f2a1","礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"],["f340","譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"],["f3a1","鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"],["f440","嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"],["f4a1","禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"],["f540","鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"],["f5a1","鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"],["f640","蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"],["f6a1","騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"],["f740","糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"],["f7a1","驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"],["f840","讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"],["f8a1","齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"],["f940","纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"],["f9a1","龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"]];var require$$7=[["8740","䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"],["8767","綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"],["87a1","𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"],["8840","㇀",4,"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"],["88a1","ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"],["8940","𪎩𡅅"],["8943","攊"],["8946","丽滝鵎釟"],["894c","𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"],["89a1","琑糼緍楆竉刧"],["89ab","醌碸酞肼"],["89b0","贋胶𠧧"],["89b5","肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"],["89c1","溚舾甙"],["89c5","䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"],["8a40","𧶄唥"],["8a43","𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"],["8a64","𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"],["8a76","䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"],["8aa1","𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"],["8aac","䠋𠆩㿺塳𢶍"],["8ab2","𤗈𠓼𦂗𠽌𠶖啹䂻䎺"],["8abb","䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"],["8ac9","𪘁𠸉𢫏𢳉"],["8ace","𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"],["8adf","𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"],["8af6","𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"],["8b40","𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"],["8b55","𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"],["8ba1","𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"],["8bde","𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"],["8c40","倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"],["8ca1","𣏹椙橃𣱣泿"],["8ca7","爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"],["8cc9","顨杫䉶圽"],["8cce","藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"],["8ce6","峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"],["8d40","𠮟"],["8d42","𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"],["8da1","㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"],["8e40","𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"],["8ea1","繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"],["8f40","蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"],["8fa1","𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"],["9040","趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"],["90a1","𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"],["9140","𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"],["91a1","鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"],["9240","𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"],["92a1","働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"],["9340","媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"],["93a1","摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"],["9440","銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"],["94a1","㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"],["9540","𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"],["95a1","衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"],["9640","桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"],["96a1","𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"],["9740","愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"],["97a1","𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"],["9840","𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"],["98a1","咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"],["9940","䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"],["99a1","䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"],["9a40","鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"],["9aa1","黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"],["9b40","𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"],["9b62","𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"],["9ba1","椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"],["9c40","嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"],["9ca1","㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"],["9d40","𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"],["9da1","辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"],["9e40","𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"],["9ea1","鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"],["9ead","𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"],["9ec5","㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"],["9ef5","噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"],["9f40","籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"],["9f4f","凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"],["9fa1","椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"],["9fae","酙隁酜"],["9fb2","酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"],["9fc1","𤤙盖鮝个𠳔莾衂"],["9fc9","届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"],["9fdb","歒酼龥鮗頮颴骺麨麄煺笔"],["9fe7","毺蠘罸"],["9feb","嘠𪙊蹷齓"],["9ff0","跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"],["a040","𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"],["a055","𡠻𦸅"],["a058","詾𢔛"],["a05b","惽癧髗鵄鍮鮏蟵"],["a063","蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"],["a073","坟慯抦戹拎㩜懢厪𣏵捤栂㗒"],["a0a1","嵗𨯂迚𨸹"],["a0a6","僙𡵆礆匲阸𠼻䁥"],["a0ae","矾"],["a0b0","糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"],["a0d4","覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"],["a0e2","罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"],["a3c0","␀",31,"␡"],["c6a1","①",9,"⑴",9,"ⅰ",9,"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ",23],["c740","す",58,"ァアィイ"],["c7a1","ゥ",81,"А",5,"ЁЖ",4],["c840","Л",26,"ёж",25,"⇧↸↹㇏𠃌乚𠂊刂䒑"],["c8a1","龰冈龱𧘇"],["c8cd","￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"],["c8f5","ʃɐɛɔɵœøŋʊɪ"],["f9fe","￭"],["fa40","𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"],["faa1","鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"],["fb40","𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"],["fba1","𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"],["fc40","廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"],["fca1","𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"],["fd40","𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"],["fda1","𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"],["fe40","鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"],["fea1","𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"]];var dbcsData;var hasRequiredDbcsData;function requireDbcsData(){if(hasRequiredDbcsData)return dbcsData;hasRequiredDbcsData=1;// Description of supported double byte encodings and aliases.
// Tables are not require()-d until they are needed to speed up library load.
// require()-s are direct to support Browserify.
dbcsData={// == Japanese/ShiftJIS ====================================================
// All japanese encodings are based on JIS X set of standards:
// JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.
// JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
//              Has several variations in 1978, 1983, 1990 and 1997.
// JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
// JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
//              2 planes, first is superset of 0208, second - revised 0212.
//              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)
// Byte encodings are:
//  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
//               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
//               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
//  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
//               0x00-0x7F       - lower part of 0201
//               0x8E, 0xA1-0xDF - upper part of 0201
//               (0xA1-0xFE)x2   - 0208 plane (94x94).
//               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
//  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
//               Used as-is in ISO2022 family.
//  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
//                0201-1976 Roman, 0208-1978, 0208-1983.
//  * ISO2022-JP-1: Adds esc seq for 0212-1990.
//  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
//  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
//  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
//
// After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
//
// Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html
'shiftjis':{type:'_dbcs',table:function(){return require$$0;},encodeAdd:{'\u00a5':0x5C,'\u203E':0x7E},encodeSkipVals:[{from:0xED40,to:0xF940}]},'csshiftjis':'shiftjis','mskanji':'shiftjis','sjis':'shiftjis','windows31j':'shiftjis','ms31j':'shiftjis','xsjis':'shiftjis','windows932':'shiftjis','ms932':'shiftjis','932':'shiftjis','cp932':'shiftjis','eucjp':{type:'_dbcs',table:function(){return require$$1;},encodeAdd:{'\u00a5':0x5C,'\u203E':0x7E}},// TODO: KDDI extension to Shift_JIS
// TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
// TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.
// == Chinese/GBK ==========================================================
// http://en.wikipedia.org/wiki/GBK
// We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder
// Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
'gb2312':'cp936','gb231280':'cp936','gb23121980':'cp936','csgb2312':'cp936','csiso58gb231280':'cp936','euccn':'cp936',// Microsoft's CP936 is a subset and approximation of GBK.
'windows936':'cp936','ms936':'cp936','936':'cp936','cp936':{type:'_dbcs',table:function(){return require$$2;}},// GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
'gbk':{type:'_dbcs',table:function(){return require$$2.concat(require$$3);}},'xgbk':'gbk','isoir58':'gbk',// GB18030 is an algorithmic extension of GBK.
// Main source: https://www.w3.org/TR/encoding/#gbk-encoder
// http://icu-project.org/docs/papers/gb18030.html
// http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
// http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
'gb18030':{type:'_dbcs',table:function(){return require$$2.concat(require$$3);},gb18030:function(){return require$$4;},encodeSkipVals:[0x80],encodeAdd:{'€':0xA2E3}},'chinese':'gb18030',// == Korean ===============================================================
// EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
'windows949':'cp949','ms949':'cp949','949':'cp949','cp949':{type:'_dbcs',table:function(){return require$$5;}},'cseuckr':'cp949','csksc56011987':'cp949','euckr':'cp949','isoir149':'cp949','korean':'cp949','ksc56011987':'cp949','ksc56011989':'cp949','ksc5601':'cp949',// == Big5/Taiwan/Hong Kong ================================================
// There are lots of tables for Big5 and cp950. Please see the following links for history:
// http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
// Variations, in roughly number of defined chars:
//  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
//  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
//  * Big5-2003 (Taiwan standard) almost superset of cp950.
//  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
//  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
//    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
//    Plus, it has 4 combining sequences.
//    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
//    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
//    Implementations are not consistent within browsers; sometimes labeled as just big5.
//    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
//    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
//    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
//    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
//                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
// 
// Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
// Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.
'windows950':'cp950','ms950':'cp950','950':'cp950','cp950':{type:'_dbcs',table:function(){return require$$6;}},// Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
'big5':'big5hkscs','big5hkscs':{type:'_dbcs',table:function(){return require$$6.concat(require$$7);},encodeSkipVals:[0xa2cc]},'cnbig5':'big5hkscs','csbig5':'big5hkscs','xxbig5':'big5hkscs'};return dbcsData;}var hasRequiredEncodings;function requireEncodings(){if(hasRequiredEncodings)return encodings;hasRequiredEncodings=1;(function(exports){// Update this array if you add/rename/remove files in this directory.
// We support Browserify by skipping automatic module discovery and requiring modules directly.
var modules=[requireInternal(),requireUtf16(),requireUtf7(),requireSbcsCodec(),requireSbcsData(),requireSbcsDataGenerated(),requireDbcsCodec(),requireDbcsData()];// Put all encoding/alias/codec definitions to single object and export it. 
for(var i=0;i<modules.length;i++){var module=modules[i];for(var enc in module)if(Object.prototype.hasOwnProperty.call(module,enc))exports[enc]=module[enc];}})(encodings);return encodings;}var streams;var hasRequiredStreams;function requireStreams(){if(hasRequiredStreams)return streams;hasRequiredStreams=1;var Buffer=require$$0__default$7.default.Buffer,Transform=require$$0__default$4.default.Transform;// == Exports ==================================================================
streams=function(iconv){// Additional Public API.
iconv.encodeStream=function encodeStream(encoding,options){return new IconvLiteEncoderStream(iconv.getEncoder(encoding,options),options);};iconv.decodeStream=function decodeStream(encoding,options){return new IconvLiteDecoderStream(iconv.getDecoder(encoding,options),options);};iconv.supportsStreams=true;// Not published yet.
iconv.IconvLiteEncoderStream=IconvLiteEncoderStream;iconv.IconvLiteDecoderStream=IconvLiteDecoderStream;iconv._collect=IconvLiteDecoderStream.prototype.collect;};// == Encoder stream =======================================================
function IconvLiteEncoderStream(conv,options){this.conv=conv;options=options||{};options.decodeStrings=false;// We accept only strings, so we don't need to decode them.
Transform.call(this,options);}IconvLiteEncoderStream.prototype=Object.create(Transform.prototype,{constructor:{value:IconvLiteEncoderStream}});IconvLiteEncoderStream.prototype._transform=function(chunk,encoding,done){if(typeof chunk!='string')return done(new Error("Iconv encoding stream needs strings as its input."));try{var res=this.conv.write(chunk);if(res&&res.length)this.push(res);done();}catch(e){done(e);}};IconvLiteEncoderStream.prototype._flush=function(done){try{var res=this.conv.end();if(res&&res.length)this.push(res);done();}catch(e){done(e);}};IconvLiteEncoderStream.prototype.collect=function(cb){var chunks=[];this.on('error',cb);this.on('data',function(chunk){chunks.push(chunk);});this.on('end',function(){cb(null,Buffer.concat(chunks));});return this;};// == Decoder stream =======================================================
function IconvLiteDecoderStream(conv,options){this.conv=conv;options=options||{};options.encoding=this.encoding='utf8';// We output strings.
Transform.call(this,options);}IconvLiteDecoderStream.prototype=Object.create(Transform.prototype,{constructor:{value:IconvLiteDecoderStream}});IconvLiteDecoderStream.prototype._transform=function(chunk,encoding,done){if(!Buffer.isBuffer(chunk))return done(new Error("Iconv decoding stream needs buffers as its input."));try{var res=this.conv.write(chunk);if(res&&res.length)this.push(res,this.encoding);done();}catch(e){done(e);}};IconvLiteDecoderStream.prototype._flush=function(done){try{var res=this.conv.end();if(res&&res.length)this.push(res,this.encoding);done();}catch(e){done(e);}};IconvLiteDecoderStream.prototype.collect=function(cb){var res='';this.on('error',cb);this.on('data',function(chunk){res+=chunk;});this.on('end',function(){cb(null,res);});return this;};return streams;}var extendNode;var hasRequiredExtendNode;function requireExtendNode(){if(hasRequiredExtendNode)return extendNode;hasRequiredExtendNode=1;var Buffer=require$$0__default$7.default.Buffer;// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer
// == Extend Node primitives to use iconv-lite =================================
extendNode=function(iconv){var original=undefined;// Place to keep original methods.
// Node authors rewrote Buffer internals to make it compatible with
// Uint8Array and we cannot patch key functions since then.
// Note: this does use older Buffer API on a purpose
iconv.supportsNodeEncodingsExtension=!(Buffer.from||new Buffer(0)instanceof Uint8Array);iconv.extendNodeEncodings=function extendNodeEncodings(){if(original)return;original={};if(!iconv.supportsNodeEncodingsExtension){console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node");console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility");return;}var nodeNativeEncodings={'hex':true,'utf8':true,'utf-8':true,'ascii':true,'binary':true,'base64':true,'ucs2':true,'ucs-2':true,'utf16le':true,'utf-16le':true};Buffer.isNativeEncoding=function(enc){return enc&&nodeNativeEncodings[enc.toLowerCase()];};// -- SlowBuffer -----------------------------------------------------------
var SlowBuffer=require$$0__default$7.default.SlowBuffer;original.SlowBufferToString=SlowBuffer.prototype.toString;SlowBuffer.prototype.toString=function(encoding,start,end){encoding=String(encoding||'utf8').toLowerCase();// Use native conversion when possible
if(Buffer.isNativeEncoding(encoding))return original.SlowBufferToString.call(this,encoding,start,end);// Otherwise, use our decoding method.
if(typeof start=='undefined')start=0;if(typeof end=='undefined')end=this.length;return iconv.decode(this.slice(start,end),encoding);};original.SlowBufferWrite=SlowBuffer.prototype.write;SlowBuffer.prototype.write=function(string,offset,length,encoding){// Support both (string, offset, length, encoding)
// and the legacy (string, encoding, offset, length)
if(isFinite(offset)){if(!isFinite(length)){encoding=length;length=undefined;}}else{// legacy
var swap=encoding;encoding=offset;offset=length;length=swap;}offset=+offset||0;var remaining=this.length-offset;if(!length){length=remaining;}else{length=+length;if(length>remaining){length=remaining;}}encoding=String(encoding||'utf8').toLowerCase();// Use native conversion when possible
if(Buffer.isNativeEncoding(encoding))return original.SlowBufferWrite.call(this,string,offset,length,encoding);if(string.length>0&&(length<0||offset<0))throw new RangeError('attempt to write beyond buffer bounds');// Otherwise, use our encoding method.
var buf=iconv.encode(string,encoding);if(buf.length<length)length=buf.length;buf.copy(this,offset,0,length);return length;};// -- Buffer ---------------------------------------------------------------
original.BufferIsEncoding=Buffer.isEncoding;Buffer.isEncoding=function(encoding){return Buffer.isNativeEncoding(encoding)||iconv.encodingExists(encoding);};original.BufferByteLength=Buffer.byteLength;Buffer.byteLength=SlowBuffer.byteLength=function(str,encoding){encoding=String(encoding||'utf8').toLowerCase();// Use native conversion when possible
if(Buffer.isNativeEncoding(encoding))return original.BufferByteLength.call(this,str,encoding);// Slow, I know, but we don't have a better way yet.
return iconv.encode(str,encoding).length;};original.BufferToString=Buffer.prototype.toString;Buffer.prototype.toString=function(encoding,start,end){encoding=String(encoding||'utf8').toLowerCase();// Use native conversion when possible
if(Buffer.isNativeEncoding(encoding))return original.BufferToString.call(this,encoding,start,end);// Otherwise, use our decoding method.
if(typeof start=='undefined')start=0;if(typeof end=='undefined')end=this.length;return iconv.decode(this.slice(start,end),encoding);};original.BufferWrite=Buffer.prototype.write;Buffer.prototype.write=function(string,offset,length,encoding){var _offset=offset,_length=length,_encoding=encoding;// Support both (string, offset, length, encoding)
// and the legacy (string, encoding, offset, length)
if(isFinite(offset)){if(!isFinite(length)){encoding=length;length=undefined;}}else{// legacy
var swap=encoding;encoding=offset;offset=length;length=swap;}encoding=String(encoding||'utf8').toLowerCase();// Use native conversion when possible
if(Buffer.isNativeEncoding(encoding))return original.BufferWrite.call(this,string,_offset,_length,_encoding);offset=+offset||0;var remaining=this.length-offset;if(!length){length=remaining;}else{length=+length;if(length>remaining){length=remaining;}}if(string.length>0&&(length<0||offset<0))throw new RangeError('attempt to write beyond buffer bounds');// Otherwise, use our encoding method.
var buf=iconv.encode(string,encoding);if(buf.length<length)length=buf.length;buf.copy(this,offset,0,length);return length;// TODO: Set _charsWritten.
};// -- Readable -------------------------------------------------------------
if(iconv.supportsStreams){var Readable=require$$0__default$4.default.Readable;original.ReadableSetEncoding=Readable.prototype.setEncoding;Readable.prototype.setEncoding=function setEncoding(enc,options){// Use our own decoder, it has the same interface.
// We cannot use original function as it doesn't handle BOM-s.
this._readableState.decoder=iconv.getDecoder(enc,options);this._readableState.encoding=enc;};Readable.prototype.collect=iconv._collect;}};// Remove iconv-lite Node primitive extensions.
iconv.undoExtendNodeEncodings=function undoExtendNodeEncodings(){if(!iconv.supportsNodeEncodingsExtension)return;if(!original)throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.");delete Buffer.isNativeEncoding;var SlowBuffer=require$$0__default$7.default.SlowBuffer;SlowBuffer.prototype.toString=original.SlowBufferToString;SlowBuffer.prototype.write=original.SlowBufferWrite;Buffer.isEncoding=original.BufferIsEncoding;Buffer.byteLength=original.BufferByteLength;Buffer.prototype.toString=original.BufferToString;Buffer.prototype.write=original.BufferWrite;if(iconv.supportsStreams){var Readable=require$$0__default$4.default.Readable;Readable.prototype.setEncoding=original.ReadableSetEncoding;delete Readable.prototype.collect;}original=undefined;};};return extendNode;}var hasRequiredLib;function requireLib(){if(hasRequiredLib)return lib.exports;hasRequiredLib=1;(function(module){// Some environments don't have global Buffer (e.g. React Native).
// Solution would be installing npm modules "buffer" and "stream" explicitly.
var Buffer=requireSafer().Buffer;var bomHandling=requireBomHandling(),iconv=module.exports;// All codecs and aliases are kept here, keyed by encoding name/alias.
// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.
iconv.encodings=null;// Characters emitted in case of error.
iconv.defaultCharUnicode='�';iconv.defaultCharSingleByte='?';// Public API.
iconv.encode=function encode(str,encoding,options){str=""+(str||"");// Ensure string.
var encoder=iconv.getEncoder(encoding,options);var res=encoder.write(str);var trail=encoder.end();return trail&&trail.length>0?Buffer.concat([res,trail]):res;};iconv.decode=function decode(buf,encoding,options){if(typeof buf==='string'){if(!iconv.skipDecodeWarning){console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');iconv.skipDecodeWarning=true;}buf=Buffer.from(""+(buf||""),"binary");// Ensure buffer.
}var decoder=iconv.getDecoder(encoding,options);var res=decoder.write(buf);var trail=decoder.end();return trail?res+trail:res;};iconv.encodingExists=function encodingExists(enc){try{iconv.getCodec(enc);return true;}catch(e){return false;}};// Legacy aliases to convert functions
iconv.toEncoding=iconv.encode;iconv.fromEncoding=iconv.decode;// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.
iconv._codecDataCache={};iconv.getCodec=function getCodec(encoding){if(!iconv.encodings)iconv.encodings=requireEncodings();// Lazy load all encoding definitions.
// Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
var enc=iconv._canonicalizeEncoding(encoding);// Traverse iconv.encodings to find actual codec.
var codecOptions={};while(true){var codec=iconv._codecDataCache[enc];if(codec)return codec;var codecDef=iconv.encodings[enc];switch(typeof codecDef){case"string":// Direct alias to other encoding.
enc=codecDef;break;case"object":// Alias with options. Can be layered.
for(var key in codecDef)codecOptions[key]=codecDef[key];if(!codecOptions.encodingName)codecOptions.encodingName=enc;enc=codecDef.type;break;case"function":// Codec itself.
if(!codecOptions.encodingName)codecOptions.encodingName=enc;// The codec function must load all tables and return object with .encoder and .decoder methods.
// It'll be called only once (for each different options object).
codec=new codecDef(codecOptions,iconv);iconv._codecDataCache[codecOptions.encodingName]=codec;// Save it to be reused later.
return codec;default:throw new Error("Encoding not recognized: '"+encoding+"' (searched as: '"+enc+"')");}}};iconv._canonicalizeEncoding=function(encoding){// Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
return(''+encoding).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g,"");};iconv.getEncoder=function getEncoder(encoding,options){var codec=iconv.getCodec(encoding),encoder=new codec.encoder(options,codec);if(codec.bomAware&&options&&options.addBOM)encoder=new bomHandling.PrependBOM(encoder,options);return encoder;};iconv.getDecoder=function getDecoder(encoding,options){var codec=iconv.getCodec(encoding),decoder=new codec.decoder(options,codec);if(codec.bomAware&&!(options&&options.stripBOM===false))decoder=new bomHandling.StripBOM(decoder,options);return decoder;};// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.
var nodeVer=typeof process!=='undefined'&&process.versions&&process.versions.node;if(nodeVer){// Load streaming support in Node v0.10+
var nodeVerArr=nodeVer.split(".").map(Number);if(nodeVerArr[0]>0||nodeVerArr[1]>=10){requireStreams()(iconv);}// Load Node primitive extensions.
requireExtendNode()(iconv);}})(lib);return lib.exports;}var tmp={};var osTmpdir;var hasRequiredOsTmpdir;function requireOsTmpdir(){if(hasRequiredOsTmpdir)return osTmpdir;hasRequiredOsTmpdir=1;var isWindows=process.platform==='win32';var trailingSlashRe=isWindows?/[^:]\\$/:/.\/$/;// https://github.com/nodejs/node/blob/3e7a14381497a3b73dda68d05b5130563cdab420/lib/os.js#L25-L43
osTmpdir=function(){var path;if(isWindows){path=process.env.TEMP||process.env.TMP||(process.env.SystemRoot||process.env.windir)+'\\temp';}else{path=process.env.TMPDIR||process.env.TMP||process.env.TEMP||'/tmp';}if(trailingSlashRe.test(path)){path=path.slice(0,-1);}return path;};return osTmpdir;}/*!
 * Tmp
 *
 * Copyright (c) 2011-2017 KARASZI Istvan <github@spam.raszi.hu>
 *
 * MIT Licensed
 */var hasRequiredTmp;function requireTmp(){if(hasRequiredTmp)return tmp;hasRequiredTmp=1;/*
	 * Module dependencies.
	 */const fs=require$$0__default.default;const path=path__default.default;const crypto=require$$3__default$1.default;const osTmpDir=requireOsTmpdir();const _c=process.binding('constants');/*
	 * The working inner variables.
	 */const/**
	   * The temporary directory.
	   * @type {string}
	   */tmpDir=osTmpDir(),// the random characters to choose from
RANDOM_CHARS='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',TEMPLATE_PATTERN=/XXXXXX/,DEFAULT_TRIES=3,CREATE_FLAGS=(_c.O_CREAT||_c.fs.O_CREAT)|(_c.O_EXCL||_c.fs.O_EXCL)|(_c.O_RDWR||_c.fs.O_RDWR),EBADF=_c.EBADF||_c.os.errno.EBADF,ENOENT=_c.ENOENT||_c.os.errno.ENOENT,DIR_MODE=448/* 0o700 */,FILE_MODE=384/* 0o600 */,// this will hold the objects need to be removed on exit
_removeObjects=[];var _gracefulCleanup=false,_uncaughtException=false;/**
	 * Random name generator based on crypto.
	 * Adapted from http://blog.tompawlak.org/how-to-generate-random-values-nodejs-javascript
	 *
	 * @param {number} howMany
	 * @returns {string} the generated random name
	 * @private
	 */function _randomChars(howMany){var value=[],rnd=null;// make sure that we do not fail because we ran out of entropy
try{rnd=crypto.randomBytes(howMany);}catch(e){rnd=crypto.pseudoRandomBytes(howMany);}for(var i=0;i<howMany;i++){value.push(RANDOM_CHARS[rnd[i]%RANDOM_CHARS.length]);}return value.join('');}/**
	 * Checks whether the `obj` parameter is defined or not.
	 *
	 * @param {Object} obj
	 * @returns {boolean} true if the object is undefined
	 * @private
	 */function _isUndefined(obj){return typeof obj==='undefined';}/**
	 * Parses the function arguments.
	 *
	 * This function helps to have optional arguments.
	 *
	 * @param {(Options|Function)} options
	 * @param {Function} callback
	 * @returns {Array} parsed arguments
	 * @private
	 */function _parseArguments(options,callback){if(typeof options=='function'){return[callback||{},options];}if(_isUndefined(options)){return[{},callback];}return[options,callback];}/**
	 * Generates a new temporary name.
	 *
	 * @param {Object} opts
	 * @returns {string} the new random name according to opts
	 * @private
	 */function _generateTmpName(opts){if(opts.name){return path.join(opts.dir||tmpDir,opts.name);}// mkstemps like template
if(opts.template){return opts.template.replace(TEMPLATE_PATTERN,_randomChars(6));}// prefix and postfix
const name=[opts.prefix||'tmp-',process.pid,_randomChars(12),opts.postfix||''].join('');return path.join(opts.dir||tmpDir,name);}/**
	 * Gets a temporary file name.
	 *
	 * @param {(Options|tmpNameCallback)} options options or callback
	 * @param {?tmpNameCallback} callback the callback function
	 */function tmpName(options,callback){var args=_parseArguments(options,callback),opts=args[0],cb=args[1],tries=opts.name?1:opts.tries||DEFAULT_TRIES;if(isNaN(tries)||tries<0)return cb(new Error('Invalid tries'));if(opts.template&&!opts.template.match(TEMPLATE_PATTERN))return cb(new Error('Invalid template provided'));(function _getUniqueName(){const name=_generateTmpName(opts);// check whether the path exists then retry if needed
fs.stat(name,function(err){if(!err){if(tries-->0)return _getUniqueName();return cb(new Error('Could not get a unique tmp filename, max tries reached '+name));}cb(null,name);});})();}/**
	 * Synchronous version of tmpName.
	 *
	 * @param {Object} options
	 * @returns {string} the generated random name
	 * @throws {Error} if the options are invalid or could not generate a filename
	 */function tmpNameSync(options){var args=_parseArguments(options),opts=args[0],tries=opts.name?1:opts.tries||DEFAULT_TRIES;if(isNaN(tries)||tries<0)throw new Error('Invalid tries');if(opts.template&&!opts.template.match(TEMPLATE_PATTERN))throw new Error('Invalid template provided');do{const name=_generateTmpName(opts);try{fs.statSync(name);}catch(e){return name;}}while(tries-->0);throw new Error('Could not get a unique tmp filename, max tries reached');}/**
	 * Creates and opens a temporary file.
	 *
	 * @param {(Options|fileCallback)} options the config options or the callback function
	 * @param {?fileCallback} callback
	 */function file(options,callback){var args=_parseArguments(options,callback),opts=args[0],cb=args[1];opts.postfix=_isUndefined(opts.postfix)?'.tmp':opts.postfix;// gets a temporary filename
tmpName(opts,function _tmpNameCreated(err,name){if(err)return cb(err);// create and open the file
fs.open(name,CREATE_FLAGS,opts.mode||FILE_MODE,function _fileCreated(err,fd){if(err)return cb(err);if(opts.discardDescriptor){return fs.close(fd,function _discardCallback(err){if(err){// Low probability, and the file exists, so this could be
// ignored.  If it isn't we certainly need to unlink the
// file, and if that fails too its error is more
// important.
try{fs.unlinkSync(name);}catch(e){if(!isENOENT(e)){err=e;}}return cb(err);}cb(null,name,undefined,_prepareTmpFileRemoveCallback(name,-1,opts));});}if(opts.detachDescriptor){return cb(null,name,fd,_prepareTmpFileRemoveCallback(name,-1,opts));}cb(null,name,fd,_prepareTmpFileRemoveCallback(name,fd,opts));});});}/**
	 * Synchronous version of file.
	 *
	 * @param {Options} options
	 * @returns {FileSyncObject} object consists of name, fd and removeCallback
	 * @throws {Error} if cannot create a file
	 */function fileSync(options){var args=_parseArguments(options),opts=args[0];opts.postfix=opts.postfix||'.tmp';const discardOrDetachDescriptor=opts.discardDescriptor||opts.detachDescriptor;const name=tmpNameSync(opts);var fd=fs.openSync(name,CREATE_FLAGS,opts.mode||FILE_MODE);if(opts.discardDescriptor){fs.closeSync(fd);fd=undefined;}return{name:name,fd:fd,removeCallback:_prepareTmpFileRemoveCallback(name,discardOrDetachDescriptor?-1:fd,opts)};}/**
	 * Removes files and folders in a directory recursively.
	 *
	 * @param {string} root
	 * @private
	 */function _rmdirRecursiveSync(root){const dirs=[root];do{var dir=dirs.pop(),deferred=false,files=fs.readdirSync(dir);for(var i=0,length=files.length;i<length;i++){var file=path.join(dir,files[i]),stat=fs.lstatSync(file);// lstat so we don't recurse into symlinked directories
if(stat.isDirectory()){if(!deferred){deferred=true;dirs.push(dir);}dirs.push(file);}else{fs.unlinkSync(file);}}if(!deferred){fs.rmdirSync(dir);}}while(dirs.length!==0);}/**
	 * Creates a temporary directory.
	 *
	 * @param {(Options|dirCallback)} options the options or the callback function
	 * @param {?dirCallback} callback
	 */function dir(options,callback){var args=_parseArguments(options,callback),opts=args[0],cb=args[1];// gets a temporary filename
tmpName(opts,function _tmpNameCreated(err,name){if(err)return cb(err);// create the directory
fs.mkdir(name,opts.mode||DIR_MODE,function _dirCreated(err){if(err)return cb(err);cb(null,name,_prepareTmpDirRemoveCallback(name,opts));});});}/**
	 * Synchronous version of dir.
	 *
	 * @param {Options} options
	 * @returns {DirSyncObject} object consists of name and removeCallback
	 * @throws {Error} if it cannot create a directory
	 */function dirSync(options){var args=_parseArguments(options),opts=args[0];const name=tmpNameSync(opts);fs.mkdirSync(name,opts.mode||DIR_MODE);return{name:name,removeCallback:_prepareTmpDirRemoveCallback(name,opts)};}/**
	 * Prepares the callback for removal of the temporary file.
	 *
	 * @param {string} name the path of the file
	 * @param {number} fd file descriptor
	 * @param {Object} opts
	 * @returns {fileCallback}
	 * @private
	 */function _prepareTmpFileRemoveCallback(name,fd,opts){const removeCallback=_prepareRemoveCallback(function _removeCallback(fdPath){try{if(0<=fdPath[0]){fs.closeSync(fdPath[0]);}}catch(e){// under some node/windows related circumstances, a temporary file
// may have not be created as expected or the file was already closed
// by the user, in which case we will simply ignore the error
if(!isEBADF(e)&&!isENOENT(e)){// reraise any unanticipated error
throw e;}}try{fs.unlinkSync(fdPath[1]);}catch(e){if(!isENOENT(e)){// reraise any unanticipated error
throw e;}}},[fd,name]);if(!opts.keep){_removeObjects.unshift(removeCallback);}return removeCallback;}/**
	 * Prepares the callback for removal of the temporary directory.
	 *
	 * @param {string} name
	 * @param {Object} opts
	 * @returns {Function} the callback
	 * @private
	 */function _prepareTmpDirRemoveCallback(name,opts){const removeFunction=opts.unsafeCleanup?_rmdirRecursiveSync:fs.rmdirSync.bind(fs);const removeCallback=_prepareRemoveCallback(removeFunction,name);if(!opts.keep){_removeObjects.unshift(removeCallback);}return removeCallback;}/**
	 * Creates a guarded function wrapping the removeFunction call.
	 *
	 * @param {Function} removeFunction
	 * @param {Object} arg
	 * @returns {Function}
	 * @private
	 */function _prepareRemoveCallback(removeFunction,arg){var called=false;return function _cleanupCallback(next){if(!called){const index=_removeObjects.indexOf(_cleanupCallback);if(index>=0){_removeObjects.splice(index,1);}called=true;removeFunction(arg);}if(next)next(null);};}/**
	 * The garbage collector.
	 *
	 * @private
	 */function _garbageCollector(){if(_uncaughtException&&!_gracefulCleanup){return;}// the function being called removes itself from _removeObjects,
// loop until _removeObjects is empty
while(_removeObjects.length){try{_removeObjects[0].call(null);}catch(e){// already removed?
}}}/**
	 * Helper for testing against EBADF to compensate changes made to Node 7.x under Windows.
	 */function isEBADF(error){return isExpectedError(error,-EBADF,'EBADF');}/**
	 * Helper for testing against ENOENT to compensate changes made to Node 7.x under Windows.
	 */function isENOENT(error){return isExpectedError(error,-ENOENT,'ENOENT');}/**
	 * Helper to determine whether the expected error code matches the actual code and errno,
	 * which will differ between the supported node versions.
	 *
	 * - Node >= 7.0:
	 *   error.code {String}
	 *   error.errno {String|Number} any numerical value will be negated
	 *
	 * - Node >= 6.0 < 7.0:
	 *   error.code {String}
	 *   error.errno {Number} negated
	 *
	 * - Node >= 4.0 < 6.0: introduces SystemError
	 *   error.code {String}
	 *   error.errno {Number} negated
	 *
	 * - Node >= 0.10 < 4.0:
	 *   error.code {Number} negated
	 *   error.errno n/a
	 */function isExpectedError(error,code,errno){return error.code==code||error.code==errno;}/**
	 * Sets the graceful cleanup.
	 *
	 * Also removes the created files and directories when an uncaught exception occurs.
	 */function setGracefulCleanup(){_gracefulCleanup=true;}const version=process.versions.node.split('.').map(function(value){return parseInt(value,10);});if(version[0]===0&&(version[1]<9||version[1]===9&&version[2]<5)){process.addListener('uncaughtException',function _uncaughtExceptionThrown(err){_uncaughtException=true;_garbageCollector();throw err;});}process.addListener('exit',function _exit(code){if(code)_uncaughtException=true;_garbageCollector();});/**
	 * Configuration options.
	 *
	 * @typedef {Object} Options
	 * @property {?number} tries the number of tries before give up the name generation
	 * @property {?string} template the "mkstemp" like filename template
	 * @property {?string} name fix name
	 * @property {?string} dir the tmp directory to use
	 * @property {?string} prefix prefix for the generated name
	 * @property {?string} postfix postfix for the generated name
	 */ /**
	 * @typedef {Object} FileSyncObject
	 * @property {string} name the name of the file
	 * @property {string} fd the file descriptor
	 * @property {fileCallback} removeCallback the callback function to remove the file
	 */ /**
	 * @typedef {Object} DirSyncObject
	 * @property {string} name the name of the directory
	 * @property {fileCallback} removeCallback the callback function to remove the directory
	 */ /**
	 * @callback tmpNameCallback
	 * @param {?Error} err the error object if anything goes wrong
	 * @param {string} name the temporary file name
	 */ /**
	 * @callback fileCallback
	 * @param {?Error} err the error object if anything goes wrong
	 * @param {string} name the temporary file name
	 * @param {number} fd the file descriptor
	 * @param {cleanupCallback} fn the cleanup callback function
	 */ /**
	 * @callback dirCallback
	 * @param {?Error} err the error object if anything goes wrong
	 * @param {string} name the temporary file name
	 * @param {cleanupCallback} fn the cleanup callback function
	 */ /**
	 * Removes the temporary created file or directory.
	 *
	 * @callback cleanupCallback
	 * @param {simpleCallback} [next] function to call after entry was removed
	 */ /**
	 * Callback function for function composition.
	 * @see {@link https://github.com/raszi/node-tmp/issues/57|raszi/node-tmp#57}
	 *
	 * @callback simpleCallback
	 */ // exporting all the needed methods
tmp.tmpdir=tmpDir;tmp.dir=dir;tmp.dirSync=dirSync;tmp.file=file;tmp.fileSync=fileSync;tmp.tmpName=tmpName;tmp.tmpNameSync=tmpNameSync;tmp.setGracefulCleanup=setGracefulCleanup;return tmp;}var CreateFileError={};var hasRequiredCreateFileError;function requireCreateFileError(){if(hasRequiredCreateFileError)return CreateFileError;hasRequiredCreateFileError=1;/***
	 * Node External Editor
	 *
	 * Kevin Gravier <kevin@mrkmg.com>
	 * MIT 2018
	 */var __extends=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return extendStatics(d,b);};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(CreateFileError,"__esModule",{value:true});var CreateFileError$1=/** @class */function(_super){__extends(CreateFileError,_super);function CreateFileError(originalError){var _newTarget=this.constructor;var _this=_super.call(this,"Failed to create temporary file for editor")||this;_this.originalError=originalError;var proto=_newTarget.prototype;if(Object.setPrototypeOf){Object.setPrototypeOf(_this,proto);}else{_this.__proto__=_newTarget.prototype;}return _this;}return CreateFileError;}(Error);CreateFileError.CreateFileError=CreateFileError$1;return CreateFileError;}var LaunchEditorError={};var hasRequiredLaunchEditorError;function requireLaunchEditorError(){if(hasRequiredLaunchEditorError)return LaunchEditorError;hasRequiredLaunchEditorError=1;/***
	 * Node External Editor
	 *
	 * Kevin Gravier <kevin@mrkmg.com>
	 * MIT 2018
	 */var __extends=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return extendStatics(d,b);};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(LaunchEditorError,"__esModule",{value:true});var LaunchEditorError$1=/** @class */function(_super){__extends(LaunchEditorError,_super);function LaunchEditorError(originalError){var _newTarget=this.constructor;var _this=_super.call(this,"Failed launch editor")||this;_this.originalError=originalError;var proto=_newTarget.prototype;if(Object.setPrototypeOf){Object.setPrototypeOf(_this,proto);}else{_this.__proto__=_newTarget.prototype;}return _this;}return LaunchEditorError;}(Error);LaunchEditorError.LaunchEditorError=LaunchEditorError$1;return LaunchEditorError;}var ReadFileError={};var hasRequiredReadFileError;function requireReadFileError(){if(hasRequiredReadFileError)return ReadFileError;hasRequiredReadFileError=1;/***
	 * Node External Editor
	 *
	 * Kevin Gravier <kevin@mrkmg.com>
	 * MIT 2018
	 */var __extends=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return extendStatics(d,b);};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(ReadFileError,"__esModule",{value:true});var ReadFileError$1=/** @class */function(_super){__extends(ReadFileError,_super);function ReadFileError(originalError){var _newTarget=this.constructor;var _this=_super.call(this,"Failed to read temporary file")||this;_this.originalError=originalError;var proto=_newTarget.prototype;if(Object.setPrototypeOf){Object.setPrototypeOf(_this,proto);}else{_this.__proto__=_newTarget.prototype;}return _this;}return ReadFileError;}(Error);ReadFileError.ReadFileError=ReadFileError$1;return ReadFileError;}var RemoveFileError={};var hasRequiredRemoveFileError;function requireRemoveFileError(){if(hasRequiredRemoveFileError)return RemoveFileError;hasRequiredRemoveFileError=1;/***
	 * Node External Editor
	 *
	 * Kevin Gravier <kevin@mrkmg.com>
	 * MIT 2018
	 */var __extends=loadEnv.commonjsGlobal&&loadEnv.commonjsGlobal.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];};return extendStatics(d,b);};return function(d,b){extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(RemoveFileError,"__esModule",{value:true});var RemoveFileError$1=/** @class */function(_super){__extends(RemoveFileError,_super);function RemoveFileError(originalError){var _newTarget=this.constructor;var _this=_super.call(this,"Failed to cleanup temporary file")||this;_this.originalError=originalError;var proto=_newTarget.prototype;if(Object.setPrototypeOf){Object.setPrototypeOf(_this,proto);}else{_this.__proto__=_newTarget.prototype;}return _this;}return RemoveFileError;}(Error);RemoveFileError.RemoveFileError=RemoveFileError$1;return RemoveFileError;}var hasRequiredMain;function requireMain(){if(hasRequiredMain)return main;hasRequiredMain=1;/***
	 * Node External Editor
	 *
	 * Kevin Gravier <kevin@mrkmg.com>
	 * MIT 2019
	 */Object.defineProperty(main,"__esModule",{value:true});var chardet_1=requireChardet();var child_process_1=require$$0__default$1.default;var fs_1=require$$0__default.default;var iconv_lite_1=requireLib();var tmp_1=requireTmp();var CreateFileError_1=requireCreateFileError();main.CreateFileError=CreateFileError_1.CreateFileError;var LaunchEditorError_1=requireLaunchEditorError();main.LaunchEditorError=LaunchEditorError_1.LaunchEditorError;var ReadFileError_1=requireReadFileError();main.ReadFileError=ReadFileError_1.ReadFileError;var RemoveFileError_1=requireRemoveFileError();main.RemoveFileError=RemoveFileError_1.RemoveFileError;function edit(text,fileOptions){if(text===void 0){text="";}var editor=new ExternalEditor(text,fileOptions);editor.run();editor.cleanup();return editor.text;}main.edit=edit;function editAsync(text,callback,fileOptions){if(text===void 0){text="";}var editor=new ExternalEditor(text,fileOptions);editor.runAsync(function(err,result){if(err){setImmediate(callback,err,null);}else{try{editor.cleanup();setImmediate(callback,null,result);}catch(cleanupError){setImmediate(callback,cleanupError,null);}}});}main.editAsync=editAsync;var ExternalEditor=/** @class */function(){function ExternalEditor(text,fileOptions){if(text===void 0){text="";}this.text="";this.fileOptions={};this.text=text;if(fileOptions){this.fileOptions=fileOptions;}this.determineEditor();this.createTemporaryFile();}ExternalEditor.splitStringBySpace=function(str){var pieces=[];var currentString="";for(var strIndex=0;strIndex<str.length;strIndex++){var currentLetter=str[strIndex];if(strIndex>0&&currentLetter===" "&&str[strIndex-1]!=="\\"&&currentString.length>0){pieces.push(currentString);currentString="";}else{currentString+=currentLetter;}}if(currentString.length>0){pieces.push(currentString);}return pieces;};Object.defineProperty(ExternalEditor.prototype,"temp_file",{get:function(){console.log("DEPRECATED: temp_file. Use tempFile moving forward.");return this.tempFile;},enumerable:true,configurable:true});Object.defineProperty(ExternalEditor.prototype,"last_exit_status",{get:function(){console.log("DEPRECATED: last_exit_status. Use lastExitStatus moving forward.");return this.lastExitStatus;},enumerable:true,configurable:true});ExternalEditor.prototype.run=function(){this.launchEditor();this.readTemporaryFile();return this.text;};ExternalEditor.prototype.runAsync=function(callback){var _this=this;try{this.launchEditorAsync(function(){try{_this.readTemporaryFile();setImmediate(callback,null,_this.text);}catch(readError){setImmediate(callback,readError,null);}});}catch(launchError){setImmediate(callback,launchError,null);}};ExternalEditor.prototype.cleanup=function(){this.removeTemporaryFile();};ExternalEditor.prototype.determineEditor=function(){var editor=process.env.VISUAL?process.env.VISUAL:process.env.EDITOR?process.env.EDITOR:/^win/.test(process.platform)?"notepad":"vim";var editorOpts=ExternalEditor.splitStringBySpace(editor).map(function(piece){return piece.replace("\\ "," ");});var bin=editorOpts.shift();this.editor={args:editorOpts,bin:bin};};ExternalEditor.prototype.createTemporaryFile=function(){try{this.tempFile=tmp_1.tmpNameSync(this.fileOptions);var opt={encoding:"utf8"};if(this.fileOptions.hasOwnProperty("mode")){opt.mode=this.fileOptions.mode;}fs_1.writeFileSync(this.tempFile,this.text,opt);}catch(createFileError){throw new CreateFileError_1.CreateFileError(createFileError);}};ExternalEditor.prototype.readTemporaryFile=function(){try{var tempFileBuffer=fs_1.readFileSync(this.tempFile);if(tempFileBuffer.length===0){this.text="";}else{var encoding=chardet_1.detect(tempFileBuffer).toString();if(!iconv_lite_1.encodingExists(encoding)){// Probably a bad idea, but will at least prevent crashing
encoding="utf8";}this.text=iconv_lite_1.decode(tempFileBuffer,encoding);}}catch(readFileError){throw new ReadFileError_1.ReadFileError(readFileError);}};ExternalEditor.prototype.removeTemporaryFile=function(){try{fs_1.unlinkSync(this.tempFile);}catch(removeFileError){throw new RemoveFileError_1.RemoveFileError(removeFileError);}};ExternalEditor.prototype.launchEditor=function(){try{var editorProcess=child_process_1.spawnSync(this.editor.bin,this.editor.args.concat([this.tempFile]),{stdio:"inherit"});this.lastExitStatus=editorProcess.status;}catch(launchError){throw new LaunchEditorError_1.LaunchEditorError(launchError);}};ExternalEditor.prototype.launchEditorAsync=function(callback){var _this=this;try{var editorProcess=child_process_1.spawn(this.editor.bin,this.editor.args.concat([this.tempFile]),{stdio:"inherit"});editorProcess.on("exit",function(code){_this.lastExitStatus=code;setImmediate(callback);});}catch(launchError){throw new LaunchEditorError_1.LaunchEditorError(launchError);}};return ExternalEditor;}();main.ExternalEditor=ExternalEditor;return main;}var editor;var hasRequiredEditor;function requireEditor(){if(hasRequiredEditor)return editor;hasRequiredEditor=1;/**
	 * `editor` type prompt
	 */var chalk=chalk__default.default;var editAsync=requireMain().editAsync;var Base=requireBase();var observe=requireEvents();var{Subject}=require$$4$1;class EditorPrompt extends Base{/**
	   * Start the Inquiry session
	   * @param  {Function} cb      Callback when prompt is done
	   * @return {this}
	   */_run(cb){this.done=cb;this.editorResult=new Subject();// Open Editor on "line" (Enter Key)
var events=observe(this.rl);this.lineSubscription=events.line.subscribe(this.startExternalEditor.bind(this));// Trigger Validation when editor closes
var validation=this.handleSubmitEvents(this.editorResult);validation.success.forEach(this.onEnd.bind(this));validation.error.forEach(this.onError.bind(this));// Prevents default from being printed on screen (can look weird with multiple lines)
this.currentText=this.opt.default;this.opt.default=null;// Init
this.render();return this;}/**
	   * Render the prompt to screen
	   * @return {EditorPrompt} self
	   */render(error){var bottomContent='';var message=this.getQuestion();if(this.status==='answered'){message+=chalk.dim('Received');}else{message+=chalk.dim('Press <enter> to launch your preferred editor.');}if(error){bottomContent=chalk.red('>> ')+error;}this.screen.render(message,bottomContent);}/**
	   * Launch $EDITOR on user press enter
	   */startExternalEditor(){// Pause Readline to prevent stdin and stdout from being modified while the editor is showing
this.rl.pause();editAsync(this.currentText,this.endExternalEditor.bind(this));}endExternalEditor(error,result){this.rl.resume();if(error){this.editorResult.error(error);}else{this.editorResult.next(result);}}onEnd(state){this.editorResult.unsubscribe();this.lineSubscription.unsubscribe();this.answer=state.value;this.status='answered';// Re-render prompt
this.render();this.screen.done();this.done(this.answer);}onError(state){this.render(state.isValid);}}editor=EditorPrompt;return editor;}(function(module){/**
	 * Inquirer.js
	 * A collection of common interactive command line user interfaces.
	 */var inquirer=module.exports;/**
	 * Client interfaces
	 */inquirer.prompts={};inquirer.Separator=separator;inquirer.ui={BottomBar:bottomBar,Prompt:prompt$1};/**
	 * Create a new self-contained prompt module.
	 */inquirer.createPromptModule=function(opt){var promptModule=function(questions){var ui=new inquirer.ui.Prompt(promptModule.prompts,opt);var promise=ui.run(questions);// Monkey patch the UI on the promise object so
// that it remains publicly accessible.
promise.ui=ui;return promise;};promptModule.prompts={};/**
	   * Register a prompt type
	   * @param {String} name     Prompt type name
	   * @param {Function} prompt Prompt constructor
	   * @return {inquirer}
	   */promptModule.registerPrompt=function(name,prompt){promptModule.prompts[name]=prompt;return this;};/**
	   * Register the defaults provider prompts
	   */promptModule.restoreDefaultPrompts=function(){this.registerPrompt('list',requireList());this.registerPrompt('input',requireInput());this.registerPrompt('number',requireNumber());this.registerPrompt('confirm',requireConfirm());this.registerPrompt('rawlist',requireRawlist());this.registerPrompt('expand',requireExpand());this.registerPrompt('checkbox',requireCheckbox());this.registerPrompt('password',requirePassword());this.registerPrompt('editor',requireEditor());};promptModule.restoreDefaultPrompts();return promptModule;};/**
	 * Public CLI helper interface
	 * @param  {Array|Object|Rx.Observable} questions - Questions settings array
	 * @param  {Function} cb - Callback being passed the user answers
	 * @return {inquirer.ui.Prompt}
	 */inquirer.prompt=inquirer.createPromptModule();// Expose helper functions on the top level for easiest usage by common users
inquirer.registerPrompt=function(name,prompt){inquirer.prompt.registerPrompt(name,prompt);};inquirer.restoreDefaultPrompts=function(){inquirer.prompt.restoreDefaultPrompts();};})(inquirer$1);var inquirerExports=inquirer$1.exports;var inquirer=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(inquirerExports);function prompt(questions){return inquirer.prompt(questions);}prompt.Separator=inquirer.Separator;prompt.single=question=>prompt([{...question,name:"value"}]).then(answers=>answers.value);class CommandRunner{constructor(handlers){let commands=arguments.length>1&&arguments[1]!==undefined?arguments[1]:baseCommands;this.handlers=handlers;this.commands=lodashExports.sortBy(commands,"name");this.commandGroups={};for(const cmd of this.commands){const group="group"in cmd&&cmd.group||"default";this.commandGroups[group]=this.commandGroups[group]||[];this.commandGroups[group].push(cmd);}if(!handlers.outputter||!handlers.prompter){throw new Error("`prompter` and `outputter` handlers must be defined");}}async runCommand(commandOrGroup,args,options){var _cliConfig$config;if(!commandOrGroup){this.handlers.outputter.print(generateCommandsDocumentation(this.commandGroups));return Promise.resolve();}const cmdArgs=lodashExports.cloneDeep(args);const subCommandName=args.argsWithoutOptions[0];const commandInfo=this.resolveCommand(commandOrGroup,subCommandName);if(!commandInfo){throw new Error(getNoSuchCommandText(commandOrGroup,subCommandName,this.commandGroups));}const command=commandInfo.command;if(!isCommandGroup(command)&&command.group&&command.group!=="default"){cmdArgs.argsWithoutOptions=args.argsWithoutOptions.slice(1);}const output=this.handlers.outputter;const prompt=this.handlers.prompter;const{cliConfig,...commandOptions}=options;const apiClient=getClientWrapper((cliConfig===null||cliConfig===void 0||(_cliConfig$config=cliConfig.config)===null||_cliConfig$config===void 0?void 0:_cliConfig$config.api)||null,(cliConfig===null||cliConfig===void 0?void 0:cliConfig.path)||((cliConfig===null||cliConfig===void 0?void 0:cliConfig.version)===2?"sanity.json":"sanity.cli.js"));const context={output,prompt,apiClient,chalk:chalk__default.default,cliPackageManager,...commandOptions,commandRunner:this,yarn:getYarnStub({output,workDir:commandOptions.workDir}),...getVersionedContextParams(cliConfig)};if(isCommandGroup(command)){return context.output.print(generateCommandsDocumentation(this.commandGroups,command.name));}if(typeof command.action!=="function"){const cmdName=command.name||commandOrGroup||"<unknown>";loadEnv.debug("Command \"".concat(cmdName,"\" doesnt have a valid \"action\"-property, showing help"));const groupName=command.group&&command.group!=="default"?command.group:null;return context.output.print(generateCommandDocumentation(command,groupName,subCommandName));}loadEnv.debug("Running command \"".concat(command.name,"\""));return command.action(cmdArgs,context);}resolveCommand(commandOrGroup,subCommandName){if(this.commandGroups[commandOrGroup]&&subCommandName){loadEnv.debug("Found group for name \"".concat(commandOrGroup,"\", resolving subcommand"));const subCommand=this.resolveSubcommand(this.commandGroups[commandOrGroup],subCommandName,commandOrGroup);loadEnv.debug(subCommand?"Subcommand resolved to \"".concat(subCommand.commandName,"\""):"Subcommand with name \"".concat(subCommandName,"\" not found"));return subCommand;}loadEnv.debug("No group found with name \"".concat(commandOrGroup,"\", looking for command"));const command=this.commandGroups.default.find(cmd=>cmd.name===commandOrGroup);if(command){loadEnv.debug("Found command in default group with name \"".concat(commandOrGroup,"\""));return{command,commandName:command.name,parentName:"default",isGroup:false,isCommand:true};}loadEnv.debug("No default command with name \"".concat(commandOrGroup,"\" found, giving up"));return null;}resolveSubcommand(group,subCommandName,parentGroupName){if(!subCommandName){return null;}const subCommand=group.find(cmd=>cmd.name===subCommandName);if(!subCommand){throw new Error(getNoSuchCommandText(subCommandName,parentGroupName,this.commandGroups));}return{command:subCommand,commandName:subCommandName,parentName:parentGroupName,isGroup:false,isCommand:true};}resolveHelpForGroup(){const command=this.commandGroups.default.find(cmd=>cmd.name==="help");if(!command){throw new Error("Failed to find default `help` command");}return{command,commandName:"help",isGroup:false,isCommand:true};}}function getCliRunner(commands){return new CommandRunner({outputter:cliOutputter,prompter:prompt},commands);}function getVersionedContextParams(cliConfig){return(cliConfig===null||cliConfig===void 0?void 0:cliConfig.version)===2?{sanityMajorVersion:2,cliConfig:(cliConfig===null||cliConfig===void 0?void 0:cliConfig.config)||void 0,cliConfigPath:(cliConfig===null||cliConfig===void 0?void 0:cliConfig.path)||void 0}:{sanityMajorVersion:3,cliConfig:(cliConfig===null||cliConfig===void 0?void 0:cliConfig.config)||void 0,cliConfigPath:(cliConfig===null||cliConfig===void 0?void 0:cliConfig.path)||void 0};}function detectRuntime(){if("Deno"in globalThis){return"deno";}if("Bun"in globalThis){return"bun";}return"node";}async function mergeCommands(baseCommands,corePath,options){if(!corePath){return baseCommands;}const{cwd,workDir,cliVersion}=options;const coreImport=getCliConfig.dynamicRequire(corePath);semver__default.default.coerce(cliVersion)||"";const core="cliProjectCommands"in coreImport?coreImport.cliProjectCommands:coreImport;const merged=baseCommands.concat(core.commands).map(addDefaultGroup);return merged.reverse().reduce((cmds,cmd)=>{const group=isCommandGroup(cmd)?void 0:cmd.group;if(!lodashExports.find(cmds,{name:cmd.name,group})){cmds.push(cmd);}return cmds;},[]);}function addDefaultGroup(cmd){if(!isCommandGroup(cmd)&&!cmd.group){cmd.group="default";}return cmd;}var escapeStringRegexp$1=string=>{if(typeof string!=='string'){throw new TypeError('Expected a string');}// Escape characters with special meaning either inside or outside character sets.
// Use a simple backslash escape when it’s always valid, and a \unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.
return string.replace(/[|\\{}()[\]^$+*?.]/g,'\\$&').replace(/-/g,'\\x2d');};const os=require$$0__default$2.default;const escapeStringRegexp=escapeStringRegexp$1;const extractPathRegex=/\s+at.*[(\s](.*)\)?/;const pathRegex=/^(?:(?:(?:node|(?:(?:node:)?internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)(?:\.js)?:\d+:\d+)|native)/;const homeDir=typeof os.homedir==='undefined'?'':os.homedir();var cleanStack=function(stack){let{pretty=false,basePath}=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const basePathRegex=basePath&&new RegExp("(at | \\()".concat(escapeStringRegexp(basePath)),'g');return stack.replace(/\\/g,'/').split('\n').filter(line=>{const pathMatches=line.match(extractPathRegex);if(pathMatches===null||!pathMatches[1]){return true;}const match=pathMatches[1];// Electron
if(match.includes('.app/Contents/Resources/electron.asar')||match.includes('.app/Contents/Resources/default_app.asar')){return false;}return!pathRegex.test(match);}).filter(line=>line.trim()!=='').map(line=>{if(basePathRegex){line=line.replace(basePathRegex,'$1');}if(pretty){line=line.replace(extractPathRegex,(m,p1)=>m.replace(p1,p1.replace(homeDir,'~')));}return line;}).join('\n');};var cleanStack$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(cleanStack);const options={pretty:process.platform!=="win32"};function neatStack(error){if(typeof error==="string"){return chalk$4.red(cleanStack$1(error,options));}if(error===null||typeof error!=="object"||typeof error.stack!=="string"){return chalk$4.red(require$$0$9.inspect(error));}const title=error.toString();const stack=cleanStack$1(error.stack,options);if(!stack.startsWith(title)){return chalk$4.red(stack);}return chalk$4.red("".concat(title).concat(chalk$4.dim(cleanStack$1(error.stack,options).slice(title.length))));}function parseArguments(){let argv=arguments.length>0&&arguments[0]!==undefined?arguments[0]:process.argv;const{_,h,help,d,debug,v,version,"--":extraArguments,...extOptions}=minimist$1(argv.slice(2),{"--":true,boolean:["h","help","d","debug","v","version"],string:["_"]});const[groupOrCommand,...argsWithoutOptions]=_;return{groupOrCommand,argv,extOptions,argsWithoutOptions,extraArguments:extraArguments||[],// prettier-ignore
coreOptions:{h,help,d,debug,v,version}};}const TELEMETRY_DISCLOSED_CONFIG_KEY="telemetryDisclosed";function telemetryDisclosure(){const userConfig=getUserConfig();if(isCi){loadEnv.debug("CI environment detected, skipping telemetry disclosure");return;}if(userConfig.get(TELEMETRY_DISCLOSED_CONFIG_KEY)){loadEnv.debug("Telemetry disclosure has already been shown");return;}console.error(boxen("The Sanity CLI now collects telemetry data on general usage and errors.\nThis helps us improve Sanity and prioritize features.\n\nTo opt in/out, run ".concat(chalk__default.default.cyan("npx sanity telemetry enable/disable"),".\n\n").concat(telemetryLearnMoreMessage("unset")),{padding:1,margin:1,borderColor:"yellow",// Typescript issues forcing these to any
borderStyle:"round"}));userConfig.set(TELEMETRY_DISCLOSED_CONFIG_KEY,Date.now());}var pTimeout$2={exports:{}};class TimeoutError extends Error{constructor(message){super(message);this.name='TimeoutError';}}const pTimeout=(promise,milliseconds,fallback,options)=>{let timer;const cancelablePromise=new Promise((resolve,reject)=>{if(typeof milliseconds!=='number'||milliseconds<0){throw new TypeError('Expected `milliseconds` to be a positive number');}if(milliseconds===Infinity){resolve(promise);return;}options={customTimers:{setTimeout,clearTimeout},...options};timer=options.customTimers.setTimeout.call(undefined,()=>{if(typeof fallback==='function'){try{resolve(fallback());}catch(error){reject(error);}return;}const message=typeof fallback==='string'?fallback:"Promise timed out after ".concat(milliseconds," milliseconds");const timeoutError=fallback instanceof Error?fallback:new TimeoutError(message);if(typeof promise.cancel==='function'){promise.cancel();}reject(timeoutError);},milliseconds);(async()=>{try{resolve(await promise);}catch(error){reject(error);}finally{options.customTimers.clearTimeout.call(undefined,timer);}})();});cancelablePromise.clear=()=>{clearTimeout(timer);timer=undefined;};return cancelablePromise;};pTimeout$2.exports=pTimeout;// TODO: Remove this for the next major release
pTimeout$2.exports.default=pTimeout;pTimeout$2.exports.TimeoutError=TimeoutError;var pTimeoutExports=pTimeout$2.exports;var pTimeout$1=/*@__PURE__*/loadEnv.getDefaultExportFromCjs(pTimeoutExports);const MAX_BLOCKING_TIME=300;const TWELVE_HOURS=1e3*60*60*12;const isDisabled=isCi||// Running in CI environment
process.env.NO_UPDATE_NOTIFIER;function runUpdateCheck(options){loadEnv.debug("CLI installed at %s",__dirname);const{pkg,cwd,workDir}=options;const{name,version}=pkg;const userConfig=getUserConfig();const check=getLatestRemote().catch(()=>false);let hasPrintedResult=false;return{notify};async function notify(){if(!process.stdout.isTTY){return;}const result=await pTimeout$1(check,MAX_BLOCKING_TIME,printCachedResult);if(hasPrintedResult){loadEnv.debug("Has already printed result through timeout check, skipping result notification");return;}printResult(result);}async function printCachedResult(){loadEnv.debug("Max time (%dms) reached waiting for latest version info",MAX_BLOCKING_TIME);hasPrintedResult=true;const cached=userConfig.get("cliHasUpdate");if(!cached){loadEnv.debug("No cached latest version result found");return false;}const diff=semverCompare$1(cached,version);if(diff<=0){loadEnv.debug("CLI was upgraded since last check, falling back");userConfig.delete("cliHasUpdate");return false;}loadEnv.debug("Printing cached latest version result");await printResult(cached);return false;}async function printResult(newVersion){hasPrintedResult=true;const lastUpdated=userConfig.get("cliLastUpdateNag")||0;if(Date.now()-lastUpdated<TWELVE_HOURS){loadEnv.debug("Less than 12 hours since last nag, skipping");return;}if(!newVersion||semverCompare$1(newVersion,version)<=0){loadEnv.debug("New version is ".concat(newVersion||"unknown",", current is ").concat(version,". Falling back."));return;}const upgradeCommand=await getCliUpgradeCommand({cwd,workDir});const message=["Update available ",chalk__default.default.dim(version),chalk__default.default.reset(" \u2192 "),chalk__default.default.green(newVersion)," \nRun ",chalk__default.default.cyan(upgradeCommand)," to update"].join("");const boxenOpts={padding:1,margin:1,borderColor:"yellow",// Typescript issues forcing these to any
align:"center",borderStyle:"round"};console.error("\n".concat(boxen(message,boxenOpts)));userConfig.set("cliLastUpdateNag",Date.now());}async function getLatestRemote(){if(isDisabled){loadEnv.debug("Running on CI, or explicitly disabled, skipping update check");return false;}const lastUpdated=userConfig.get("cliLastUpdateCheck")||0;if(Date.now()-lastUpdated<TWELVE_HOURS){loadEnv.debug("Less than 12 hours since last check, skipping update check");return userConfig.get("cliHasUpdate")||false;}let latestRemote;try{loadEnv.debug("Checking for latest remote version");latestRemote=await latestVersion(name);loadEnv.debug("Latest remote version is %s",latestRemote);}catch(err){loadEnv.debug("Failed to fetch latest version of ".concat(name," from npm:\n").concat(err.stack));return false;}if(!latestRemote){loadEnv.debug("Failed to fetch latest version of ".concat(name," from npm"));return false;}userConfig.set("cliLastUpdateCheck",Date.now());const diff=semverCompare$1(latestRemote,version);if(diff<=0){loadEnv.debug(diff===0?"No update found":"Remote version older than local");userConfig.delete("cliHasUpdate");return false;}userConfig.set("cliHasUpdate",latestRemote);loadEnv.debug("Update is available (%s)",latestRemote);return latestRemote;}}const sanityEnv=process.env.SANITY_INTERNAL_ENV||"production";const knownEnvs=["development","staging","production"];function wait(ms){return new Promise(resolve=>setTimeout(resolve,ms));}function installProcessExitHack(finalTask){const originalProcessExit=process.exit;process.exit=exitCode=>{finalTask().finally(()=>originalProcessExit(exitCode));};}async function runCli(cliRoot,_ref139){var _cliConfig$config2,_cliConfig$config3,_cliConfig$config4;let{cliVersion}=_ref139;installUnhandledRejectionsHandler();const pkg={name:"@sanity/cli",version:cliVersion};const args=parseArguments();const isInit=args.groupOrCommand==="init"&&args.argsWithoutOptions[0]!=="plugin";const cwd=getCurrentWorkingDirectory();let workDir;try{workDir=isInit?process.cwd():loadEnv.resolveRootDir(cwd);}catch(err){console.error(chalk__default.default.red(err.message));process.exit(1);}loadAndSetEnvFromDotEnvFiles({workDir,cmd:args.groupOrCommand});maybeFixMissingWindowsEnvVar();await runUpdateCheck({pkg,cwd,workDir}).notify();telemetryDisclosure();loadEnv.debug("Reading CLI config from \"".concat(workDir,"\""));const cliConfig=await getCliConfig.getCliConfig(workDir,{forked:true});if(!cliConfig){loadEnv.debug("No CLI config found");}const{logger:telemetry,flush:flushTelemetry}=createTelemetryStore({projectId:cliConfig===null||cliConfig===void 0||(_cliConfig$config2=cliConfig.config)===null||_cliConfig$config2===void 0||(_cliConfig$config2=_cliConfig$config2.api)===null||_cliConfig$config2===void 0?void 0:_cliConfig$config2.projectId,env:process.env});installProcessExitHack(()=>// When process.exit() is called, flush telemetry events first, but wait no more than x amount of ms before exiting process
Promise.race([wait(2e3),flushTelemetry()]));telemetry.updateUserProperties({deviceId:await nodeMachineId.machineId(),runtimeVersion:process.version,runtime:detectRuntime(),cliVersion:pkg.version,platform:process.platform,cpuArchitecture:process.arch,projectId:cliConfig===null||cliConfig===void 0||(_cliConfig$config3=cliConfig.config)===null||_cliConfig$config3===void 0||(_cliConfig$config3=_cliConfig$config3.api)===null||_cliConfig$config3===void 0?void 0:_cliConfig$config3.projectId,dataset:cliConfig===null||cliConfig===void 0||(_cliConfig$config4=cliConfig.config)===null||_cliConfig$config4===void 0||(_cliConfig$config4=_cliConfig$config4.api)===null||_cliConfig$config4===void 0?void 0:_cliConfig$config4.dataset});const options={cliRoot,workDir,corePath:await getCoreModulePath(workDir,cliConfig),cliConfig,telemetry};warnOnNonProductionEnvironment();warnOnInferredProjectDir(isInit,cwd,workDir);const core=args.coreOptions;const commands=await mergeCommands(baseCommands,options.corePath,{cliVersion,cwd,workDir});if(core.v||core.version){console.log("".concat(pkg.name," version ").concat(pkg.version));process.exit();}if(core.h||core.help){if(args.groupOrCommand){args.argsWithoutOptions.unshift(args.groupOrCommand);}args.groupOrCommand="help";}if(args.groupOrCommand==="logout"){await flushTelemetry();}const cliRunner=getCliRunner(commands);const cliCommandTrace=telemetry.trace(CliCommand,{groupOrCommand:args.groupOrCommand,extraArguments:args.extraArguments,commandArguments:args.argsWithoutOptions.slice(0,10),coreOptions:{help:args.coreOptions.help||void 0,version:args.coreOptions.help||void 0,debug:args.coreOptions.help||void 0},...(!args.groupOrCommand&&{emptyCommand:true})// user did not entry a command
});cliCommandTrace.start();cliRunner.runCommand(args.groupOrCommand,args,{...options,telemetry:cliCommandTrace.newContext(args.groupOrCommand)}).then(()=>cliCommandTrace.complete()).catch(async err=>{await flushTelemetry();const error=typeof err.details==="string"?err.details:err;console.error("\n".concat(error.stack?neatStack(err):error));cliCommandTrace.error(error);process.exit(1);});}async function getCoreModulePath(workDir,cliConfig){const corePath=resolveFrom$1.silent(workDir,"@sanity/core");const sanityPath=resolveFrom$1.silent(workDir,"sanity/_internal");if(corePath&&sanityPath){const closest=corePath.startsWith(workDir)?corePath:sanityPath;const assumedVersion=closest===corePath?"v2":"v3";console.warn(chalk__default.default.yellow("Both `@sanity/core` AND `sanity` installed - assuming Sanity ".concat(assumedVersion," project.")));return closest;}if(sanityPath){return sanityPath;}if(corePath&&cliConfig&&(cliConfig===null||cliConfig===void 0?void 0:cliConfig.version)<3){return corePath;}const isInstallCommand=process.argv.indexOf("install")===-1;if(cliConfig&&(cliConfig===null||cliConfig===void 0?void 0:cliConfig.version)<3&&!corePath&&!isInstallCommand){const installCmd=await getInstallCommand({workDir});console.warn(chalk__default.default.yellow(["The `@sanity/core` module is not installed in current project","Project-specific commands not available until you run `".concat(installCmd,"`")].join("\n")));}if(cliConfig&&cliConfig.version>=3&&!sanityPath){const installCmd=await getInstallCommand({workDir});console.warn(chalk__default.default.yellow(["The `sanity` module is not installed in current project","Project-specific commands not available until you run `".concat(installCmd,"`")].join("\n")));}return void 0;}function getCurrentWorkingDirectory(){let pwd;try{pwd=process.cwd();}catch(err){if(err.code==="ENOENT"){console.error("[ERR] Could not resolve working directory, does the current folder exist?");process.exit(1);}else{throw err;}}return pwd;}function installUnhandledRejectionsHandler(){process.on("unhandledRejection",reason=>{if(rejectionHasStack(reason)){console.error("Unhandled rejection:",reason.stack);}else{console.error("Unhandled rejection\n",reason);}});}function rejectionHasStack(reason){return Boolean(reason&&typeof reason==="object"&&"stack"in reason&&typeof reason.stack==="string");}function warnOnInferredProjectDir(isInit,cwd,workDir){if(isInit||cwd===workDir){return;}console.log("Not in project directory, assuming context of project at ".concat(workDir));}function warnOnNonProductionEnvironment(){if(sanityEnv==="production"){return;}console.warn(chalk__default.default.yellow(knownEnvs.includes(sanityEnv)?"[WARN] Running in ".concat(sanityEnv," environment mode\n"):"[WARN] Running in ".concat(chalk__default.default.red("UNKNOWN")," \"").concat(sanityEnv,"\" environment mode\n")));}function loadAndSetEnvFromDotEnvFiles(_ref140){let{workDir,cmd}=_ref140;if(require$$0$4.existsSync(path__default.default.join(workDir,"sanity.json"))){loadEnv.debug("sanity.json exists, assuming v2 project and loading .env files using old behavior");const env=process.env.SANITY_ACTIVE_ENV||process.env.NODE_ENV||"development";loadEnv.debug("Loading environment files using %s mode",env);loadEnv.dotenv.config({path:path__default.default.join(workDir,".env.".concat(env))});return;}loadEnv.debug("No sanity.json exists, assuming v3 project and loading .env files using new behavior");const isProdCmd=["build","deploy"].includes(cmd);let mode=process.env.SANITY_ACTIVE_ENV;if(!mode&&(isProdCmd||process.env.NODE_ENV==="production")){mode="production";}else if(!mode){mode="development";}if(mode==="production"&&!isProdCmd){console.warn(chalk__default.default.yellow("[WARN] Running in ".concat(sanityEnv," environment mode\n")));}loadEnv.debug("Loading environment files using %s mode",mode);const studioEnv=loadEnv.loadEnv(mode,workDir,["SANITY_STUDIO_"]);process.env={...process.env,...studioEnv};}function maybeFixMissingWindowsEnvVar(){if(require$$0__default$2.default.platform()==="win32"&&!("SYSTEMROOT"in process.env)&&"SystemRoot"in process.env){process.env.SYSTEMROOT=process.env.SystemRoot;}}exports.getCliVersion=getCliVersion;exports.runCli=runCli;
//# sourceMappingURL=cli-Dz5rNMzb.js.map
