'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var moment = require('moment');
function _interopDefaultCompat(e) {
  return e && typeof e === 'object' && 'default' in e ? e : {
    default: e
  };
}
var moment__default = /*#__PURE__*/_interopDefaultCompat(moment);
const DEFAULT_DATE_FORMAT = "YYYY-MM-DD";
const DEFAULT_TIME_FORMAT = "HH:mm";
function format(input, format2) {
  let useUTC = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  if (useUTC) return moment__default.default.utc(input).format(format2);
  return moment__default.default(input).format(format2);
}
function parse(dateString, format2) {
  const parsed = moment__default.default(dateString, format2, true);
  if (parsed.isValid()) {
    return {
      isValid: true,
      date: parsed.toDate()
    };
  }
  return {
    isValid: false,
    error: 'Invalid date. Must be on the format "'.concat(format2, '"')
  };
}
exports.DEFAULT_DATE_FORMAT = DEFAULT_DATE_FORMAT;
exports.DEFAULT_TIME_FORMAT = DEFAULT_TIME_FORMAT;
exports.format = format;
exports.parse = parse;
//# sourceMappingURL=legacyDateFormat.js.map
