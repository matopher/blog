{"version":3,"file":"concurrency-limiter.esm.js","sources":["../src/concurrency-limiter.ts"],"sourcesContent":["/**\n * ConcurrencyLimiter manages the number of concurrent operations that can be performed.\n * It ensures that the number of operations does not exceed a specified maximum limit.\n */\nexport class ConcurrencyLimiter {\n  current = 0\n  resolvers: Array<() => void> = []\n  constructor(public max: number) {}\n\n  /**\n   * Indicates when a slot for a new operation is ready.\n   * If under the limit, it resolves immediately; otherwise, it waits until a slot is free.\n   */\n  ready = (): Promise<void> => {\n    if (this.max === Infinity) return Promise.resolve()\n\n    if (this.current < this.max) {\n      this.current++\n      return Promise.resolve()\n    }\n\n    return new Promise<void>((resolve) => {\n      this.resolvers.push(resolve)\n    })\n  }\n\n  /**\n   * Releases a slot, decrementing the current count of operations if nothing is in the queue.\n   * If there are operations waiting, it allows the next one in the queue to proceed.\n   */\n  release = (): void => {\n    if (this.max === Infinity) return\n\n    const nextResolver = this.resolvers.shift()\n    if (nextResolver) {\n      nextResolver()\n      return\n    }\n\n    this.current = Math.max(0, this.current - 1)\n  }\n}\n"],"names":["ConcurrencyLimiter","constructor","max","current","resolvers","ready","Infinity","Promise","resolve","push","release","nextResolver","shift","Math"],"mappings":"AAIO,MAAMA,kBAAmB,CAAA;EAG9BC,YAAmBC,GAAa,EAAA;IAAb,IAAA,CAAAA,GAAA,GAAAA,GAAA;IAFT,IAAA,CAAAC,OAAA,GAAA,CAAA;IACV,IAAA,CAAAC,SAAA,GAA+B,EAAC;IAOhC;AAAA;AAAA;AAAA;IAAA,IAAA,CAAAC,KAAA,GAAQ,MAAqB;MAC3B,IAAI,KAAKH,GAAQ,KAAAI,QAAA,EAAU,OAAOC,QAAQC,OAAQ,EAAA;MAE9C,IAAA,IAAA,CAAKL,OAAU,GAAA,IAAA,CAAKD,GAAK,EAAA;QACtB,IAAA,CAAAC,OAAA,EAAA;QACL,OAAOI,QAAQC,OAAQ,EAAA;MACzB;MAEO,OAAA,IAAID,OAAc,CAACC,OAAY,IAAA;QAC/B,IAAA,CAAAJ,SAAA,CAAUK,KAAKD,OAAO,CAAA;MAAA,CAC5B,CAAA;IAAA,CACH;IAMA;AAAA;AAAA;AAAA;IAAA,IAAA,CAAAE,OAAA,GAAU,MAAY;MACpB,IAAI,KAAKR,GAAQ,KAAAI,QAAA,EAAU;MAErB,MAAAK,YAAA,GAAe,IAAK,CAAAP,SAAA,CAAUQ,KAAM,CAAA,CAAA;MAC1C,IAAID,YAAc,EAAA;QACHA,YAAA,EAAA;QACb;MACF;MAEA,IAAA,CAAKR,UAAUU,IAAK,CAAAX,GAAA,CAAI,CAAG,EAAA,IAAA,CAAKC,UAAU,CAAC,CAAA;IAAA,CAC7C;EAjCiC;AAkCnC;"}