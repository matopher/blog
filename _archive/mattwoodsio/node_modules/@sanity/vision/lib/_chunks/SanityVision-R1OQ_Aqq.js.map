{"version":3,"file":"SanityVision-R1OQ_Aqq.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/perspectives.ts","../../src/util/encodeQueryString.ts","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/prefixApiVersion.ts","../../src/util/resizeObserver.ts","../../src/util/tryParseParams.ts","../../src/util/validateApiVersion.ts","../../src/components/ParamsEditor.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/containers/VisionErrorBoundary.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21', 'v2022-03-07']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of([defaultKeymap, historyKeymap].flat().filter(Boolean)),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {type ReactCodeMirrorProps} from '@uiw/react-codemirror'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>,\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","import {type ClientPerspective} from '@sanity/client'\n\nexport const PERSPECTIVES = ['raw', 'previewDrafts', 'published'] satisfies ClientPerspective[]\nexport const DEFAULT_PERSPECTIVE = PERSPECTIVES[0]\n\nexport function isPerspective(p: string): p is ClientPerspective {\n  return PERSPECTIVES.includes(p as ClientPerspective)\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import {debounce} from 'lodash'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return <VisionCodeMirror value={props.value || defaultValue} onChange={handleChange} />\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {Box} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {Badge, Button, Card, Inline, Popover, Stack, Text, useClickOutside} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const [buttonEl, setButtonEl] = useState<HTMLElement | null>(null)\n  const [popoverEl, setPopoverEl] = useState<HTMLElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n  const handleClickOutside = useCallback(() => setOpen(false), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutside(handleClickOutside, [buttonEl, popoverEl])\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n              <Badge tone=\"primary\">{t('label.new')}</Badge>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={setPopoverEl}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        tone=\"primary\"\n        fontSize={1}\n        ref={setButtonEl}\n        onClick={handleClick}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n","import {Code} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import JSONInspector from '@rexxars/react-json-inspector'\nimport {Code} from '@sanity/ui'\nimport HLRU from 'hashlru'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = HLRU(50000)\n\nexport function ResultView(props: {data: unknown}) {\n  const {data} = props\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JSONInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {Box, Card, Flex, Label, rem} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const TimingsFooter = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport SplitPane from '@rexxars/react-split-pane'\nimport {\n  type ClientPerspective,\n  type ListenEvent,\n  type MutationEvent,\n  type SanityClient,\n} from '@sanity/client'\nimport {CopyIcon, ErrorOutlineIcon, PlayIcon, StopIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Grid,\n  Hotkeys,\n  Inline,\n  Select,\n  Stack,\n  Text,\n  TextInput,\n  type ToastContextValue,\n  Tooltip,\n} from '@sanity/ui'\nimport isHotkey from 'is-hotkey'\nimport {type ChangeEvent, createRef, PureComponent, type RefObject} from 'react'\nimport {type TFunction} from 'sanity'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {DEFAULT_PERSPECTIVE, isPerspective, PERSPECTIVES} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getLocalStorage, type LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {\n  ControlsContainer,\n  Header,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  QueryCopyLink,\n  Result,\n  ResultContainer,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  Root,\n  SplitpaneContainer,\n  StyledLabel,\n  TimingsCard,\n  TimingsFooter,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: ClientPerspective\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement>\n  _queryEditorContainer: RefObject<HTMLDivElement>\n  _paramsEditorContainer: RefObject<HTMLDivElement>\n  _operationUrlElement: RefObject<HTMLInputElement>\n  _customApiVersionElement: RefObject<HTMLInputElement>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n    const defaultPerspective = DEFAULT_PERSPECTIVE\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    let lastQuery = this._localStorage.get('query', '')\n    let lastParams = this._localStorage.get('params', '{\\n  \\n}')\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    let perspective = this._localStorage.get('perspective', defaultPerspective)\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (!PERSPECTIVES.includes(perspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    if (typeof lastQuery !== 'string') {\n      lastQuery = ''\n    }\n\n    if (typeof lastParams !== 'string') {\n      lastParams = '{\\n  \\n}'\n    }\n\n    this._visionRoot = createRef()\n    this._operationUrlElement = createRef()\n    this._queryEditorContainer = createRef()\n    this._paramsEditorContainer = createRef()\n    this._customApiVersionElement = createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: perspective,\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: ClipboardEvent) {\n    if (!evt.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective = PERSPECTIVES.includes(parts.options.perspective as ClientPerspective)\n      ? (parts.options.perspective as ClientPerspective)\n      : undefined\n\n    evt.preventDefault()\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    if (!isPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: this.state.perspective,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string> = {}\n    if (this.state.perspective !== 'raw') {\n      urlQueryOpts.perspective = this.state.perspective\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) =>\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          }),\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          }),\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t} = this.props\n    const {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n\n                <Select value={perspective} onChange={this.handleChangePerspective}>\n                  {PERSPECTIVES.map((p) => (\n                    <option key={p}>{p}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split={'horizontal'}\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror value={query} onChange={this.handleQueryChange} />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor value={rawParams} onChange={this.handleParamsChange} />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <TimingsFooter>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n              </TimingsFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {useToast} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {visionLocaleNamespace} from '../i18n'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return <DelayedSpinner />\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occured</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","DEFAULT_API_VERSION","slice","DelayedSpinner","props","show","setShow","useState","useEffect","timer","setTimeout","delay","clearTimeout","jsx","Spinner","muted","size","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","cmTheme","useMemo","createTheme","cmHighlight","createHighlight","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","concat","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","_a","EditorRoot","styled","div","__template","_ref","space","_ref2","_ref3","VisionCodeMirror","sanityTheme","useTheme","children","CodeMirror","basicSetup","extensions","PERSPECTIVES","DEFAULT_PERSPECTIVE","isPerspective","p","includes","encodeQueryString","query","params","arguments","length","undefined","options","searchParams","URLSearchParams","set","key","value","Object","entries","JSON","stringify","isPlainObject","obj","prototype","toString","call","hasLocalStorage","supportsLocalStorage","keyPrefix","clearLocalStorage","i","localStorage","startsWith","removeItem","getLocalStorage","storageKey","loadedState","get","merge","defaultVal","state","ensureState","setItem","loadState","stored","parse","getItem","err","mod","parseApiQueryString","qs","prefixApiVersion","version","RO","document","ResizeObserverPolyfill","window","ResizeObserver","tryParseParams","val","parsed","JSON5","Array","isArray","message","replace","validateApiVersion","apiVersion","parseableApiVersion","trim","toUpperCase","isValidApiVersion","test","isNaN","Date","defaultValue","ParamsEditor","onChange","useTranslation","visionLocaleNamespace","raw","error","valid","eventFromValue","isValid","setValid","init","setInit","handleChangeRaw","useCallback","newValue","event","handleChange","debounce","parsedParams","Error","validationError","_b","PerspectivePopoverContent","Box","PerspectivePopoverLink","a","PerspectivePopover","open","setOpen","buttonEl","setButtonEl","popoverEl","setPopoverEl","handleClick","o","handleClickOutside","useClickOutside","Popover","content","jsxs","Stack","Inline","Text","weight","Badge","tone","Card","href","target","placement","portal","padding","ref","Button","icon","HelpCircleIcon","mode","onClick","selected","ErrorCode","Code","_ref4","critical","QueryErrorDetails","_ref5","details","mapToLegacyDetails","line","dashLine","column","columnEnd","marginTop","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","ResultViewWrapper","_ref6","css","lru","HLRU","ResultView","data","isRecord","JSONInspector","search","isExpanded","toggleExpanded","language","keyPath","depthLimit","cached","segments","split","some","isArrayKeyOverLimit","path","current","numeric","segment","limit","parseInt","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","Root","Flex","displayName","Header","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","_ref7","$isInvalid","Result","TimingsFooter","TimingsCard","TimingsTextContainer","_ref8","text","ascenderHeight","descenderHeight","ControlsContainer","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","narrowBreakpoint","innerWidth","calculatePaneSizeOptions","rootHeight","defaultSize","allowResize","minSize","Math","min","max","maxSize","VisionGui","PureComponent","constructor","client","datasets","config","_localStorage","projectId","defaultDataset","dataset","defaultApiVersion","defaultPerspective","lastQuery","lastParams","customApiVersion","perspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","evt","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","console","warn","preventDefault","toast","push","closable","id","status","title","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","toLowerCase","focus","type","_ref9","isWithinRoot","stopPropagation","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","_ref10","el","select","execCommand","render","hasResult","direction","sizing","overflow","paddingX","paddingY","Grid","columns","paddingTop","paddingBottom","Select","map","ds","textOverflow","TextInput","customValidity","maxLength","flex","gap","readOnly","Tooltip","CopyIcon","SplitPane","primary","display","marginX","ErrorOutlineIcon","radius","disabled","justify","Hotkeys","keys","width","StopIcon","PlayIcon","marginLeft","align","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","VisionErrorBoundary","Component","handleRetryRender","prev","numRetries","handleRetryWithCacheClear","getDerivedStateFromError","withCacheClear","Container","Heading","SanityVision","useClient","tool"],"mappings":"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"}